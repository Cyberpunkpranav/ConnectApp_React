[{"C:\\Users\\prath\\Desktop\\Connect_App\\src\\App.jsx":"1","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Doctor.jsx":"2","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Doctors_Dsr.jsx":"3","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\pharmacy.jsx":"4","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customloading.jsx":"5","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Pharmacy_Dsr.jsx":"6","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Appointments_Dsr.jsx":"7","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\Exports.jsx":"8","C:\\Users\\prath\\Desktop\\Connect_App\\src\\index.jsx":"9","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\NewMedicine.jsx":"10","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\UpdateMedicine.jsx":"11","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\UpdateAppointment.jsx":"12","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedTimeAppointment.jsx":"13","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Payments.jsx":"14","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Vitals.jsx":"15","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\UpdateAppointment.jsx":"16","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\AllAppointmentslist.jsx":"17","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedAppointments.jsx":"18","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\WelcomeLoader.jsx":"19","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\SearchField.jsx":"20","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\livetime.jsx":"21","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Timer.jsx":"22","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddDoctorSlot.jsx":"23","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddPatient.jsx":"24","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddAppointment.jsx":"25","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\apiarrays.jsx":"26","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Doctors\\UpdateDoctor.jsx":"27","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Patients\\UpdatePatient.jsx":"28","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customconfirm.jsx":"29","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Payments.jsx":"30","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AmountPaid.jsx":"31","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\SelectedDoctorSlot.jsx":"32","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Bill.jsx":"33","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customnotify.jsx":"34","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Bill.jsx":"35","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\ExportExcel.jsx":"36"},{"size":46045,"mtime":1678360897979,"results":"37","hashOfConfig":"38"},{"size":29070,"mtime":1678345304814,"results":"39","hashOfConfig":"38"},{"size":15044,"mtime":1677923862352,"results":"40","hashOfConfig":"38"},{"size":243068,"mtime":1678368345421,"results":"41","hashOfConfig":"38"},{"size":731,"mtime":1677302514780,"results":"42","hashOfConfig":"38"},{"size":43832,"mtime":1678364438906,"results":"43","hashOfConfig":"38"},{"size":30786,"mtime":1677930021353,"results":"44","hashOfConfig":"38"},{"size":12352,"mtime":1678355010040,"results":"45","hashOfConfig":"38"},{"size":17940,"mtime":1678092027267,"results":"46","hashOfConfig":"38"},{"size":11274,"mtime":1677758298138,"results":"47","hashOfConfig":"38"},{"size":11968,"mtime":1677933900498,"results":"48","hashOfConfig":"38"},{"size":12747,"mtime":1677838671724,"results":"49","hashOfConfig":"38"},{"size":6523,"mtime":1678077225018,"results":"50","hashOfConfig":"38"},{"size":19985,"mtime":1677917016714,"results":"51","hashOfConfig":"38"},{"size":9632,"mtime":1678076266207,"results":"52","hashOfConfig":"38"},{"size":12397,"mtime":1678079851541,"results":"53","hashOfConfig":"38"},{"size":12630,"mtime":1678080336843,"results":"54","hashOfConfig":"38"},{"size":10451,"mtime":1678080142162,"results":"55","hashOfConfig":"38"},{"size":466,"mtime":1677302514777,"results":"56","hashOfConfig":"38"},{"size":3570,"mtime":1677302514751,"results":"57","hashOfConfig":"38"},{"size":722,"mtime":1677302514778,"results":"58","hashOfConfig":"38"},{"size":867,"mtime":1677302514752,"results":"59","hashOfConfig":"38"},{"size":5123,"mtime":1677302514459,"results":"60","hashOfConfig":"38"},{"size":36164,"mtime":1677302514664,"results":"61","hashOfConfig":"38"},{"size":12054,"mtime":1677302514459,"results":"62","hashOfConfig":"38"},{"size":9961,"mtime":1677302514791,"results":"63","hashOfConfig":"38"},{"size":132,"mtime":1677302514312,"results":"64","hashOfConfig":"38"},{"size":38338,"mtime":1677302514456,"results":"65","hashOfConfig":"38"},{"size":1075,"mtime":1677302514779,"results":"66","hashOfConfig":"38"},{"size":19755,"mtime":1677302514303,"results":"67","hashOfConfig":"38"},{"size":2359,"mtime":1677302514665,"results":"68","hashOfConfig":"38"},{"size":4035,"mtime":1677302514747,"results":"69","hashOfConfig":"38"},{"size":31013,"mtime":1677302514666,"results":"70","hashOfConfig":"38"},{"size":2135,"mtime":1677302514789,"results":"71","hashOfConfig":"38"},{"size":30952,"mtime":1677302514301,"results":"72","hashOfConfig":"38"},{"size":871,"mtime":1677302514751,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":58,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14qdzjp",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":359,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":62,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"84"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"84"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"84"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"84"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"84"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"84"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\prath\\Desktop\\Connect_App\\src\\App.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Doctor.jsx",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Doctors_Dsr.jsx",["292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],[],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { useContext, useRef } from 'react'\r\nimport { URL, DoctorsList } from '../../index'\r\nimport axios from 'axios'\r\n\r\nconst Doctors_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const AllDoctors = useContext(DoctorsList)\r\n  const [load, setload] = useState(false)\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [DocTimetyp1, setDocTimetyp1] = useState()\r\n  const tableref = useRef()\r\n  const Doctorwisetable = useRef()\r\n\r\n  async function GetDoctors() {\r\n    setload(true)\r\n    await axios.get(`${url}/DSR/doctors?from_date=${props.fromdate}&to_date=${props.todate}`).then((response) => {\r\n      // console.log(response)\r\n      setAppointments(response.data.data.doctor_login_list)\r\n      setload(false)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    GetDoctors()\r\n  }, [props.fromdate, props.todate])\r\n\r\n  let DoctorWisetotalarr = []\r\n\r\n  async function DoctorwiseTable() {\r\n    let total, hr, min\r\n    let doctorstime = {\r\n      id: '',\r\n      roomtype: '',\r\n      totaltime: '',\r\n      totalhours: '',\r\n      totalminutes: ''\r\n    }\r\n    for (let k = 0; k < AllDoctors.length; k++) {\r\n      DoctorWisetotalarr.push([AllDoctors[k][0], AllDoctors[k][1], [], []])\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (Appointments[i].doctor && Appointments[i].doctor.id == DoctorWisetotalarr[k][0]) {\r\n          if (Appointments[i].room && Appointments[i].room.room_type == 1) {\r\n            total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            hr = total.toString().substring(0, 2)\r\n            min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][2].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: Number(hr),\r\n              totalminutes: Number(min)\r\n            })\r\n          }\r\n          if (Appointments[i].room && Appointments[i].room_type == 2) {\r\n            let total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            let hr = total.toString().substring(0, 2)\r\n            let min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][3].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: hr,\r\n              totalminutes: min\r\n            })\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n    let Doctorwisetotalhrarr = []\r\n    let Doctorwisetotalminarr = []\r\n    if (DoctorWisetotalarr && DoctorWisetotalarr.length != 0) {\r\n      for (let i = 0; i < DoctorWisetotalarr.length; i++) {\r\n        if (DoctorWisetotalarr[i][0] == AllDoctors[i][0]) {\r\n          Doctorwisetotalhrarr.push([DoctorWisetotalarr[i][0], []])\r\n          Doctorwisetotalminarr.push([DoctorWisetotalarr[i][0], []])\r\n          if (DoctorWisetotalarr[i][2].length != 0) {\r\n            for (let g = 0; g < DoctorWisetotalarr[i][2].length; g++) {\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalhours && DoctorWisetotalarr[i][2][g].totalhours != null && DoctorWisetotalarr[i][2][g].totalhours != undefined) {\r\n                Doctorwisetotalhrarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalhours))\r\n              } else {\r\n                Doctorwisetotalhrarr[i][1].push(0)\r\n              }\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalminutes && DoctorWisetotalarr[i][2][g].totalminutes != null && DoctorWisetotalarr[i][2][g].totalminutes != undefined) {\r\n                Doctorwisetotalminarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalminutes))\r\n              } else {\r\n                Doctorwisetotalminarr[i][1].push(0)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = 0; k < Doctorwisetotalhrarr.length; k++) {\r\n        if (Doctorwisetotalhrarr[k][1].length == 0) {\r\n          Doctorwisetotalhrarr[k].push(0)\r\n        } else {\r\n          let Doctorwisehrtotal = 0\r\n          let Doctorwisemintotal = 0\r\n          for (let h = 0; h < Doctorwisetotalhrarr[k][1].length; h++) {\r\n            Doctorwisehrtotal += Number(Doctorwisetotalhrarr[k][1][h])\r\n          }\r\n          for (let a = 0; a < Doctorwisetotalminarr[k][1].length; a++) {\r\n            Doctorwisemintotal += Number(Doctorwisetotalminarr[k][1][a])\r\n\r\n          }\r\n          DoctorWisetotalarr[k].push(Doctorwisehrtotal)\r\n          DoctorWisetotalarr[k].push(Doctorwisemintotal)\r\n        }\r\n        if (DoctorWisetotalarr[k][5] >= 60) {\r\n          let remainsmin = DoctorWisetotalarr[k][5] % 60\r\n          let minhours = Math.floor(DoctorWisetotalarr[k][5] / 60)\r\n          DoctorWisetotalarr[k][5] = remainsmin\r\n          DoctorWisetotalarr[k][4] += minhours\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n    console.log(DoctorWisetotalarr)\r\n    setDocTimetyp1(DoctorWisetotalarr)\r\n  }\r\n  useEffect(() => {\r\n    async function load() {\r\n      DoctorwiseTable()\r\n    }\r\n    load()\r\n  }, [props.fromdate, props.todate, load])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function diff(start, end) {\r\n    if (start != null && end != null) {\r\n      start = start.split(\":\");\r\n      end = end.split(\":\");\r\n      var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n      var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n      var diff = endDate.getTime() - startDate.getTime();\r\n      var hours = Math.floor(diff / 1000 / 60 / 60);\r\n      diff -= hours * 1000 * 60 * 60;\r\n      var minutes = Math.floor(diff / 1000 / 60);\r\n      if (hours < 0)\r\n        hours = hours + 24;\r\n\r\n      return (hours <= 9 ? \"0\" : \"\") + hours + \"hrs\" + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins';\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n\r\n  function TotalTime() {\r\n    let hrarr = []\r\n    let minsarr = []\r\n    let totalhours, totalmins\r\n    let GetTotalHours = 0\r\n    let GetTotalMins = 0\r\n    let start, end;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      start = Appointments[i].login_time\r\n      end = Appointments[i].logout_time\r\n      if (start !== null && end !== null) {\r\n        start = start.split(\":\");\r\n        end = end.split(\":\");\r\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n        var diff = endDate.getTime() - startDate.getTime();\r\n        var hours = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hours * 1000 * 60 * 60;\r\n        var minutes = Math.floor(diff / 1000 / 60);\r\n        if (hours < 0)\r\n          hours = hours + 24;\r\n        totalhours = (hours <= 9 ? \"0\" : \"\") + hours\r\n        totalmins = (minutes <= 9 ? \"0\" : \"\") + minutes;\r\n        hrarr.push(totalhours)\r\n        minsarr.push(totalmins)\r\n      } else {\r\n        hrarr.push(0)\r\n        minsarr.push(0)\r\n      }\r\n    }\r\n    // console.log(hrarr)\r\n    // console.log(minsarr)\r\n    hrarr.forEach(item => {\r\n      GetTotalHours += Number(item)\r\n    })\r\n    minsarr.forEach(item => {\r\n      GetTotalMins += Number(item)\r\n    })\r\n\r\n    let a = Math.floor(GetTotalMins / 60)\r\n    let b = GetTotalMins % 60\r\n    // console.log(GetTotalHours,GetTotalMins,a,b)\r\n    return GetTotalHours + a + \" Hours \" + \" and \" + b + \" Minutes \"\r\n  }\r\n  return (\r\n    <div className=\"container-fluid Doctors_Dsrsection\">\r\n      <div className='py-2'>\r\n        <div className=\"container-fluid m-0 p-0\">\r\n          <div className=\"row p-0 m-0 justify-content-around\">\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 py-2 border border-1 rounded-2 shadow-sm\">\r\n              <h6 className='text-charcoa50 fw-bold'>Total Report</h6>\r\n              <div className=\"row gx-1\">\r\n                <div className=\"col-6 col-lg-6 col-md-6 p-0 m-0\">\r\n                  <button className='button-sm button-brandy'>Export CSV </button>\r\n                </div>\r\n                <div className=\"col-6 col-lg-6 col-md-6  p-0 m-0\">\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} All Doctors Login/Logout Details`}\r\n                    sheet=\"Login/Logout Details\"\r\n                    currentTableRef={tableref.current}\r\n                  >\r\n                    <button className='button-sm button-lightgreen'>Export Excel </button>\r\n\r\n                  </DownloadTableExcel>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 py-2 border border-1 rounded-2 shadow-sm\">\r\n              <h6 className='text-charcoa50 fw-bold'>Doctor Wise Report</h6>\r\n              <div className=\"row gx-1\">\r\n                <div className=\"col-6 col-lg-6 col-md-6 p-0 m-0\">\r\n                  <button className='button-sm button-brandy'>Export CSV </button>\r\n                </div>\r\n                <div className=\"col-6 col-lg-6 col-md-6 col-sm-4  p-0 m-0\">\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Doctors Summary`}\r\n                    sheet=\"Summary Report\"\r\n                    currentTableRef={Doctorwisetable.current}\r\n                  >\r\n                    <button className='button-sm button-lightgreen'>Export Excel </button>\r\n\r\n                  </DownloadTableExcel>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 border border-1 rounded-2 shadow-sm text-center align-items-center\">\r\n              {/* <h6 className='text-charcoa50 fw-bold'>Summary</h6> */}\r\n              <div className=\"col-12 col-lg-12 p-0 m-0 bg-lightyellow rounded-2 align-self-center mt-2 fw-bold\">Total Time <hr className='p-0 m-0' /> {TotalTime()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <h6 className=' p-0 m-0 text-charcoal75 fw-semibold ms-2 '>Doctors Login/Logout Details : {Appointments.length}  </h6>\r\n      <div className='container-fluid scroll scroll-y doctordsrtable' ref={tableref}>\r\n        <span className='d-none'>Total Time:{TotalTime()}</span>\r\n        <table className='table text-center border' >\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Doctors Name</th>\r\n              <th>Mobile</th>\r\n              <th>Date</th>\r\n              <th>Roomnumber</th>\r\n              <th>RoomType</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Total Hours</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tbody className='position-relative'>\r\n                <tr className='position-absolute start-0 end-0 fs-4 fw-bolder text-charcoal75'>Loading Doctors Login History </tr>\r\n              </tbody>\r\n            ) : (\r\n              Appointments.length == 0 || Appointments == undefined ? (\r\n                <tbody className='position-relative'>\r\n                  <tr className='position-absolute start-0 end-0 fs-4 fw-bolder text-burntumber'>No Doctors Login History Found </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className='border'>\r\n                  {\r\n                    Appointments.map((data, i) => (\r\n                      <tr key={i}>\r\n                        <td>{data.id ? data.id : 'N/A'}</td>\r\n                        <td>{data.doctor ? data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A' : 'N/A'}</td>\r\n                        <td>{data.doctor ? data.doctor.phone_number ? data.doctor.phone_number : 'N/A' : \"DoctorNotFound\"}</td>\r\n                        <td>{data.date && data.date != null ? reversefunction(data.date) : 'N/A'}</td>\r\n                        <td>{data.room ? data.room.room_number && data.room.room_number != null ? data.room.room_number : 'N/A' : \"RoomNotFound\"}</td>\r\n                        <td>{data.room ? data.room.room_type == 1 ? 'Consultation' : 'Procedure' : 'N/A'}</td>\r\n                        <td>{data.login_time ? tConvert(data.login_time) : 'N/A'}</td>\r\n                        <td>{data.logout_time ? tConvert(data.logout_time) : 'N/A'}</td>\r\n                        <td>{data.login_time && data.login_time != null && data.logout_time && data.logout_time != null ? diff(data.login_time, data.logout_time) : 'N/A'}</td>\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              )\r\n            )\r\n\r\n          }\r\n\r\n\r\n        </table>\r\n\r\n      </div>\r\n      <h6 className='text-charcoal75 fw-bolder p-0 m-0'>Doctor Summary</h6>\r\n      <div className='container-fluid scroll scroll-y doctordsrtable' ref={Doctorwisetable}>\r\n        <table className='table text-center'>\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th className='my-0 py-0' rowspan='2'>Doctor Id</th>\r\n              <th className='my-0 py-0' rowspan='2'>Doctor Name</th>\r\n              <th className='my-0 py-0' colspan='2' scope='colgroup'>Consultation</th>\r\n              <th className='my-0 py-0' colspan='2' scope='colgroup'>Procedure</th>\r\n            </tr>\r\n            <tr>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {\r\n            DocTimetyp1 == undefined || DocTimetyp1.length == 0 ? (\r\n              <tbody>\r\n                <tr>Loading...</tr>\r\n              </tbody>\r\n            ) : (\r\n              <tbody>{\r\n                DocTimetyp1.map((data) => (\r\n                  <tr className='border'>\r\n                    <td className='border'>{data[0]}</td>\r\n                    <td className='border'>{data[1]}</td>\r\n                    <td className='border'>{data[4]}</td>\r\n                    <td className='border'>{data[5]}</td>\r\n                    <td className='border'>0</td>\r\n                    <td className='border'>0</td>\r\n                  </tr>\r\n                ))\r\n              }\r\n              </tbody>\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Doctors_Dsr }",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\pharmacy.jsx",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670"],[],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index';\r\nimport { ExportPurchaseEntry, ExportPurchaseReturn, ExportSaleEntry, ExportSaleReturn } from '../pharmacy/Exports'\r\nimport Notiflix from 'notiflix';\r\nimport * as XLSX from 'xlsx';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport { customnotify } from '../features/notiflix/customnotify';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/pharmacy.css';\r\nimport '../../css/dashboard.css'\r\nimport { Purchaseorderarray, Pharmacystocktable, POitemdetailsarray } from './apiarrays';\r\nimport { NewMedicine } from './NewMedicine';\r\nimport { UpdateMedicine } from './UpdateMedicine';\r\n\r\n//-------------------------------------------------Sales------------------------------------------------------------------------------------------\r\nfunction Salesection(props) {\r\n  const first = [\"Sale Entry\", \"Sale Returns\"];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return <Saleentrysection function={props.func} function2={props.function} />\r\n    }\r\n    if (_selected === 1) {\r\n      return <SaleReturns />\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <section className='purchasesection pt-1'>\r\n        <div className=\"container-fluid p-0 m-0\">\r\n          <div className=\"row gx-3 p-0 m-0\">\r\n            <div className=\"col-10  \">\r\n              <div className='row'>\r\n                {\r\n                  first.map((e, i) => {\r\n                    return (\r\n                      <div className=\"col-auto\">\r\n                        <button className={`btn btn-sm px-4 rounded-5 text-${i === second ? \"light\" : \"dark\"} bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(i)} >{e}</button>\r\n                      </div>\r\n                    )\r\n                  }\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid p-0 m-0 pt-3'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedScreen(second)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Saleentrysection(props) {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const adminid = localStorage.getItem('id')\r\n  const url = useContext(URL)\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [seidw, setseidw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [saleentryarr, setsaleentryarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [paymentsapage, setpaymentsapage] = useState('none')\r\n  const [tabindex, settabindex] = useState()\r\n  console.log(saleentryarr)\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n    }\r\n  }\r\n  const toggle_seidw = () => {\r\n    if (seidw === \"none\") {\r\n      setseidw(\"block\");\r\n    }\r\n    if (seidw === \"block\") {\r\n      setseidw(\"none\");\r\n      setindex()\r\n    }\r\n  };\r\n  const toggle_payments = () => {\r\n    if (paymentsapage === 'none') {\r\n      setpaymentsapage('block')\r\n    }\r\n    if (paymentsapage === 'block') {\r\n      setpaymentsapage('none')\r\n      settabindex()\r\n    }\r\n\r\n  }\r\n  function GETSalesList(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        console.log(response)\r\n        setsaleentryarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  async function getnextpages(e) {\r\n    GETSalesList(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETSalesList(e.target.value - 1)\r\n  }\r\n  useEffect(() => {\r\n    GETSalesList()\r\n  }, [channel, fromdate, todate])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  let array = [[1, 'Confirmed', 'lightgreen'], [2, 'Payment done', 'success'], [3, 'Completed', 'lightyellow'], [4, 'Cancelled', 'danger']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n\r\n\r\n  //Status\r\n  const UpdateStatus = async (e, id) => {\r\n    console.log(e.target.value, id)\r\n    try {\r\n      await axios.post(`${url}/sale/entry/change/status`, {\r\n        sale_entry_id: id,\r\n        status: e.target.value,\r\n        admin_id: adminid,\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        GETSalesList()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nsef}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Sale</button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between\">\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center text-center text-charcoal fw-bolder fs-6\">\r\n          Sale Entry\r\n        </div>\r\n        <div className=\"col-8 col-xl-8 col-lg-8 col-md-8 align-self-center\">\r\n          <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n            <div className=\"col-4 bg-pearl rounded-2\">\r\n              <select className='p-0 m-0 bg-pearl border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl rounded-2\">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center\">\r\n          <ExportSaleEntry saleentryarr={saleentryarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div className='scroll scroll-y p-0 m-0 mt-1' style={{ minHeight: '40vh', height: '58vh', maxHeight: '70vh' }}>\r\n        <table className=\"table text-center table-responsive p-0 m-0\">\r\n          <thead className=' p-0 m-0'>\r\n            <tr className=' p-0 m-0'>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Bill ID</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Patient Name</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Bill Date</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Bill Total</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' colspan='3'>Appointment Details</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Status</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Actions</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>more</th>\r\n            </tr>\r\n            <tr className='p-0 m-0'>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' scope='col'>Appointment Date</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' scope='col'>Doctor Name</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' scope='col'>Invoice No.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            Loading ? (\r\n              <body className=' text-center' style={{ minHeight: '55vh', height: '55vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n\r\n              </body>\r\n\r\n            ) : (\r\n              saleentryarr && saleentryarr.length != 0 ? (\r\n                <tbody>\r\n                  {\r\n                    saleentryarr.map((item, i) => (\r\n                      <tr className={` bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`} key={i}>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.id && item.id !== null ? \"P-\" + item.id : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.patient && item.patient && item.patient.full_name != null ? item.patient.full_name : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.bill_date && item.bill_date ? reversefunction(item.bill_date) : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.grand_total && item.grand_total ? \"Rs. \" + item.grand_total : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.appointment_date && item.appointment.appointment_date != null ? reversefunction(item.appointment.appointment_date) : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.doctor && item.appointment.doctor.doctor_name != null ? item.appointment.doctor.doctor_name : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.bill_id && item.appointment.bill_id != null ? item.appointment.bill_id : ''}</td>\r\n                        <td className=\"text-charcoal fw-bold p-0 m-0 px-1\">\r\n                          <select disabled={item.sale_entry_status == 4 ? true : false} className={` fw-bolder border-0 bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} text-center  text-${status_color(item.sale_entry_status)}`} name={item.id} onChange={(e) => { UpdateStatus(e, item.id) }} style={{ appearance: 'none' }}>\r\n                            <option className=\"button\" selected disabled>{status(item.sale_entry_status)}</option>\r\n                            <option key={0} className=\"text-lightred\" value='1'>Confirmed</option>\r\n                            <option key={1} className=\"text-lightblue\" value='2'>Payment Done</option>\r\n                            <option key={2} className=\"text-lightred\" value='3'>Completed</option>\r\n                            <option key={3} className=\"text-pearl\" value='4'>Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td className={`text-charcoal fw-bold p-0 m-0 px-1 `}>\r\n                          <button className={`btn bg-${tabindex == i ? 'lightred' : ''}`} onClick={() => { settabindex(i); toggle_payments() }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" />\r\n                          </button>\r\n                          <button className=\"btn\" onClick={() => { setindex(i); toggle_seidw() }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} />\r\n                          </button> </td>\r\n\r\n                        <td className={`text-charcoal fw-bold p-0 m-0 px-1 `}>\r\n                          <button className=\"btn position-relative cursor-pointer more p-0 m-0\">\r\n                            <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                          </button></td>\r\n\r\n                        <td className={`position-absolute mt-1 d-${i == index ? seidw : 'none'} start-0 end-0 border border-1 bg-seashell p-0 m-0`} style={{ zIndex: '2', top: '-7.5rem', 'height': '90vh' }} >\r\n                          {\r\n                            i == index ? (\r\n                              <SEitemdetailssection saleentryarr={saleentryarr[i]} itembillid={\"P-\" + item.bill_id} toggle_seidw={toggle_seidw} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n\r\n                        <td className={`col-lg-8 col-xl-6 col-md-8 col-sm-10 start-0 end-0 top-0 mx-auto shadow rounded-4 position-absolute bg-pearl d-${tabindex == i ? paymentsapage : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                          {\r\n                            i == tabindex ? (\r\n                              <SaleEntrypayments GETSalesList={GETSalesList} saleentryarr={saleentryarr[i]} toggle_payments={toggle_payments} itembillid={\"P-\" + item.bill_id} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              ) : (\r\n                <body className='text-center p-0 m-0' style={{ minHeight: '55vh', maxHeight: '55vh' }}>\r\n                  <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                    <strong className='text-charcoal fw-bolder text-center'>No Sale Entries</strong>\r\n                  </div>\r\n                </body>\r\n              )\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid my-1 p-0 m-0\">\r\n        <div className=\"d-flex p-0 m-0 justify-content-center text-center\">\r\n\r\n          <button className=\"btn  border-charcoal p-0 m-0 px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-sm-8 col-md-8 p-0 m-0\">\r\n            {\r\n              pages ? (\r\n                pages.map((page, i) => (\r\n                  <button className={`button rounded-3 ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}   shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { GETSalesList(i) }} key={i}>{page}</button>\r\n                ))\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn p-0 m-0 px-1 border-charcoal ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div>\r\n      </div>\r\n      <section className={`newsaleentryform p-0 m-0 position-absolute d-${nsef} border border-1 mx-auto start-0 end-0 bg-seashell`} style={{ height: '90vh' }}>\r\n        <SaleEntryForm toggle_nsef={toggle_nsef} GETSalesList={GETSalesList} />\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction SaleEntrypayments(props) {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const [paymentmethods, setpaymentmethods] = useState()\r\n  const [previouspayments, setpreviouspayments] = useState([])\r\n  const [previoustotal, setprevioustotal] = useState(0)\r\n  const [loading, setloading] = useState()\r\n  const paymentmethoddetails = {\r\n    paymentmethod: '',\r\n    amount: 0\r\n  }\r\n  async function AddPaymentMethods() {\r\n    let Payments = []\r\n    let amounts = []\r\n    let allamounts = []\r\n    Payments.push(Object.keys(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    amounts.push(Object.values(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    let paymentobj = []\r\n    let p = {\r\n      paymentmethod: '',\r\n      amount: 0\r\n    }\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n      }\r\n      setpaymentmethods(allamounts)\r\n    }\r\n\r\n    paymentmethods.push(paymentobj)\r\n  }\r\n  useEffect(() => {\r\n    AddPaymentMethods()\r\n  }, [])\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i)\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments of  ${props.itembillid}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveSaleEntryCharges()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  async function SaveSaleEntryCharges() {\r\n    let PaymentMethod = []\r\n    let PaymentMethodDetails = []\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      PaymentMethod.push(paymentmethods[i].amount)\r\n      PaymentMethodDetails.push(paymentmethods[i].paymentmethod)\r\n    }\r\n    let Data = {\r\n      sale_entry_id: props.saleentryarr.id,\r\n      g_total_main: props.saleentryarr.grand_total,\r\n      payment_method: PaymentMethodDetails,\r\n      payment_method_main: PaymentMethodDetails,\r\n      payment_method_details: PaymentMethod,\r\n      admin_id: adminid\r\n    }\r\n    try {\r\n      setloading(true)\r\n      await axios.post(`${url}/sale/entry/save/charges`, Data).then((response) => {\r\n        props.GETSalesList()\r\n        setloading(false)\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } catch (e) {\r\n      setloading(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  const CalPrevTotal = async () => {\r\n    let total = 0\r\n    paymentmethods.map((data) => (\r\n      total += Number(data.amount)\r\n    ))\r\n    console.log(total)\r\n    setprevioustotal(total)\r\n  }\r\n  useEffect(() => {\r\n    CalPrevTotal()\r\n  }, [props.saleentryarr])\r\n  console.log(props.saleentryarr, paymentmethods, previoustotal)\r\n\r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods(prevState => [...prevState, paymentmethoddetails])\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails])\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className='p-0 m-0'>\r\n      <h6 className='text-center mt-2 fw-bold'>{props.itembillid} Payments</h6>\r\n      <hr className='p-0 m-0 mt-1' />\r\n      <button className='btn-close position-absolute top-0 end-0 p-2 m-2 ' onClick={() => props.toggle_payments()}></button>\r\n\r\n      <p className='text-charcoal p-0 m-auto fw-bolder'>Grand Total : <span className='text-burntumber'>Rs {props.saleentryarr.grand_total}</span></p>\r\n      <hr className='p-0 m-0 mb-1' />\r\n      <div className=\"container-fluid text-start position-relative\">\r\n        <div className={`d-${previoustotal == props.saleentryarr.grand_total ? '' : 'none'} bg-lightgreen fw-bold text-center p-2 my-2`}>Payment Done</div>\r\n        <h6 className='text-charcoal fw-bolder text-center'>Payments</h6>\r\n        {/* d-${previoustotal < props.saleentryarr.grand_total ? '  ' : 'none'} */}\r\n        {\r\n          paymentmethods ? (\r\n            paymentmethods.map((data, i) => (\r\n              <div className={`row p-0 m-0  justify-content-end g-2`}>\r\n                <div className=\"col-4 \">\r\n                  <select className='form-control border-success py-1 text-center' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                    <option value='Cash'>Cash</option>\r\n                    <option value='Card'>Card</option>\r\n                    <option value='Paytm'>Paytm</option>\r\n                    <option value='Phonepe'>Phone Pe</option>\r\n                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                    <option value='Razorpay'>Razorpay</option>\r\n                    <option value='Points'>Points</option>\r\n                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className='form-control border-success py-1 text-center' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (<></>)\r\n\r\n        }\r\n        <div className=\"container-fluid text-center mt-2\">\r\n          <button className='btn py-0' onClick={AddMethods}>\r\n            <img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mt-2'>\r\n        {\r\n          loading ? (\r\n            <div className=\"container-fliud pt-2\">\r\n              <div className=\"d-flex fs-6 align-items-center justify-content-around\">\r\n                <h6 className=\"text-burntumber\">Updating...</h6>\r\n                <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <button className='button button-burntumber m-0 p-0 py-1 px-5' disabled={previoustotal == props.saleentryarr.grand_total ? true : false} onClick={confirmmessage}>Save</button>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <button className='button button-pearl border-charcoal p-0 m-0 py-1 px-5' onClick={() => { setpaymentmethods(); props.toggle_payments() }}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction SEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n\r\n\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(cgst) + Number(sgst) + Number(igst)\r\n      return e\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n      return e\r\n    }\r\n  }\r\n  console.log(props.saleentryarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n\r\n      <h5 className='text-center text-charcoal pt-3'>{props.itembillid} Sale Entry Item Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-4\" onClick={props.toggle_seidw} aria-label=\"Close\"></button>\r\n\r\n      <div className=\"col-2 d-none\">\r\n        <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n          <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n          <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n        </div>\r\n      </div>\r\n      <div className='d-flex p-0 m-0 mt-3 mb-1 justify-content-center'>\r\n        {\r\n          Items.map((data, i) => (\r\n            <button className={`button shadow-0 rounded-0 border-charcoal button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className=\"row p-0 m-0 justify-content-between\">\r\n        <div className=\"col-auto ms-2 mb-2 text-burntumber rounded-2 fw-bolder bg-pearl\" >\r\n          <p className='text-charcoal p-0 m-0 ms-1 text-start'>Grand Total</p>\r\n          <hr className='p-0 m-0' />\r\n          <h5 className='text-charcoal p-0 m-0 fw-bold text-start ms-1'>{props.saleentryarr.grand_total ? props.saleentryarr.grand_total : 0}</h5>\r\n        </div>\r\n        <div className=\"col-auto align-self-end justify-content-end me-4\">\r\n          <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '65vh', Height: '65vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Stock ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Medicine Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Quantity</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discount %</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discounted MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Amount in Rs.</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total amount in Rs.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.saleentryarr.sale_medicines && props.saleentryarr.sale_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.saleentryarr.sale_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks && item.medicine_stocks.id !== null ? \"m\" + item.medicine_stocks.id : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty && item.qty != null ? item.qty : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount != null ? item.discount : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks && item.medicine_stocks.total_amount ? item.medicine_stocks.total_amount : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : ''}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-center text-charcoal fw-bold'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '65vh', Height: '65vh', maxHeight: '65vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Stock ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Vaccine Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Quantity</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discount %</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discounted MRP in Rs.</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total amount in Rs.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.saleentryarr.sale_vaccines !== undefined && props.saleentryarr.sale_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.saleentryarr.sale_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine_stocks && item.vaccine_stocks.id !== null ? \"v\" + item.vaccine_stocks.id : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty && item.qty != null ? item.qty : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount != null ? item.discount : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : ''}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className=' text-center fw-bold text-charcoal'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction SaleReturns() {\r\n  const currentDate = useContext(TodayDate)\r\n  const url = useContext(URL)\r\n  const [sridw, setsridw] = useState(\"none\");\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [salereturnarr, setsalereturnarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [tabindex, settabindex] = useState()\r\n  console.log(salereturnarr)\r\n  function GETSaleReturns(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      // /sale/return?from_date=2023-01-01&to_date=2023-01-31&limit=2&offset=0\r\n      axios.get(`${url}/sale/return?limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        console.log(response)\r\n        setsalereturnarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GETSaleReturns()\r\n  }, [channel, fromdate, todate])\r\n\r\n  const toggle_sridw = () => {\r\n    if (sridw === \"none\") {\r\n      setsridw(\"block\");\r\n    }\r\n    if (sridw === \"block\") {\r\n      setsridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  async function getnextpages(e) {\r\n    GETSaleReturns(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETSaleReturns(e.target.value - 1)\r\n  }\r\n  console.log(salereturnarr)\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Return</button>\r\n      <div classsName='p-0 m-0'>\r\n        <div className=\"row p-0 m-0 justify-content-lg-between\">\r\n          <div className=\"col-2 col-md-2 col-lg-2 text-center align-self-center text-charcoal fw-bolder fs-6\">Sale Return </div>\r\n          <div className=\"col-6 col-xl-6 col-lg-7 col-md-7 col-sm-auto align-self-center m-1 justify-content-center \">\r\n            <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n              <div className=\"col-4 d-none\">\r\n                <select className='p-0 m-0 border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-4 col-md-6 col-sm-6 text-burntumber bg-pearl fw-bolder\">\r\n                <input type='date' className='p-0 m-0 border-0 text-burntumber  bg-pearl fw-bolder' placeholder='fromdate' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-4 col-md-6 col-sm-6 text-burntumber bg-pearl fw-bolder\">\r\n                <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl' placeholder='fromdate' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 col-lg-2 col-md-2 align-self-center\">\r\n            excel\r\n            <ExportSaleReturn salereturnarr={salereturnarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n          </div>\r\n        </div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '40vh', height: '59vh', maxHeight: '70vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return No.</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Name</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Sale Entry ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Amount</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Actions</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n\r\n                </body>\r\n\r\n              ) : (\r\n                salereturnarr && salereturnarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      salereturnarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>SR-{item.return_no}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.sale_entry && item.sale_entry.patient && item.sale_entry.patient.full_name != null ? item.sale_entry.patient.full_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.sale_entry && item.sale_entry && item.sale_entry.id != null ? 'P-' + item.sale_entry.id : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.return_date ? reversefunction(item.return_date) : ''}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.grand_total ? item.grand_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>\r\n                            {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                            <button className=\"btn\" onClick={() => { setindex(i); toggle_sridw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? sridw : 'none'} bg-seashell border border-1 start-0 end-0 p-0 m-0`} style={{ top: '-7.5rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <SRitemdetailssection salereturnarr={salereturnarr[i]} toggle_sridw={toggle_sridw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Sale Returns</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mb-1\">\r\n          <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n            <button className=\"btn p-0 m-0 border-charcoal px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n            <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n              {\r\n                pages ? (\r\n                  pages.map((page, i) => (\r\n                    <button className={`button ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'} shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { settabindex(i); GETSaleReturns(i) }} key={i}>{page}</button>\r\n                  ))\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )\r\n\r\n              }\r\n            </div>\r\n            <button className={`btn p-0 m-0 px-1 border-charcoal ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`newreturnentrysection position-absolute start-0 end-0 border border-1 bg-seashell d-${nref}`} style={{ 'height': '90vh' }}  >\r\n        {<NewSaleReturnentryform toggle_nref={toggle_nref} GETSaleReturns={GETSaleReturns} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction SaleEntryForm(props) {\r\n  const cliniclist = useContext(Clinic)\r\n  const url = useContext(URL)\r\n  const Doclist = useContext(DoctorsList)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const medicinesref = useRef(null)\r\n  const medbyidref = useRef(null);\r\n  const patientaddref = useRef(null)\r\n  const stockref = useRef(null)\r\n  const [searchinput, setsearchinput] = useState()\r\n  const [searchlist, setsearchlist] = useState([])\r\n  const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n  const [patientid, setpatientid] = useState()\r\n  const [patientdata, setpatientdata] = useState([])\r\n  const [doctorid, setdoctorid] = useState()\r\n  const [doctorname, setdoctorname] = useState()\r\n  const [clinicid, setclinicid] = useState(clinicID)\r\n  const [ischecked, setischecked] = useState()\r\n  const [Dc, setDc] = useState(0)\r\n  const [AtC, setAtC] = useState(0)\r\n  const [load, setload] = useState()\r\n  const [searchload, setsearchload] = useState(false)\r\n  const [products, setproducts] = useState([])\r\n  const [itemsearch, setitemsearch] = useState([])\r\n  const [itembyid, setitembyid] = useState([''])\r\n  const [loadbyId, setloadbyId] = useState()\r\n  const [itemname, setitemname] = useState()\r\n  const [itemid, setitemid] = useState()\r\n  const [SelectedProducts, setSelectedProducts] = useState([])\r\n  const [Grandtotal, setGrandtotal] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [addressid, setaddressid] = useState()\r\n  const [addressform, setaddressform] = useState('none')\r\n\r\n  const searchpatient = (e) => {\r\n    setsearchload(true)\r\n    setsearchinput(e.target.value)\r\n    axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n      setsearchlist(response.data.data)\r\n      setsearchload(false)\r\n    })\r\n    if (searchinput && searchinput.length > 1) {\r\n      setdisplaysearchlist('block');\r\n    } else {\r\n      setdisplaysearchlist('none');\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const get_value = (id, name, data) => {\r\n    setsearchinput(name)\r\n    setpatientid(id)\r\n    setpatientdata(data)\r\n    setdisplaysearchlist('none');\r\n  }\r\n  const selectaddress = (data) => {\r\n    if (data) {\r\n      setaddressid(data.id)\r\n      setDc(1)\r\n    } else {\r\n      setaddressid()\r\n      setDc(0)\r\n    }\r\n  }\r\n  const DC = () => {\r\n    if (Dc == 0) {\r\n      setaddressform('block')\r\n    }\r\n    if (Dc == 1) {\r\n      if (addressid) {\r\n        setDc(0)\r\n        setaddressform('none')\r\n      } else {\r\n        setaddressform('block')\r\n      }\r\n    }\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/stock/list?search=${search}`).then((response) => {\r\n        let medicines = []\r\n        let vaccines = []\r\n        let items = []\r\n        medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n        vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n        items = medicines.concat(vaccines)\r\n        items = items.flat()\r\n        console.log(items)\r\n        setitemsearch(items)\r\n        setloadsearch(false)\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n  }\r\n\r\n  const searchmedbyId = async (search) => {\r\n    if (search.length > 0) {\r\n      setloadbyId(true)\r\n      try {\r\n        await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n          setloadbyId(false)\r\n          setitembyid([response.data.data])\r\n        })\r\n      } catch (e) {\r\n        setloadbyId(false)\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    Doclist.map((data) => (\r\n      data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n    ))\r\n  }, [doctorid])\r\n  function CalSellingCost(mrp, disc) {\r\n    let cost = mrp\r\n    if (!disc) {\r\n      cost = Number(mrp)\r\n      return cost\r\n    } else {\r\n      cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n      cost = cost.toFixed(2)\r\n      return cost\r\n    }\r\n  }\r\n  function CalTotalAmount(qty, cst) {\r\n    let cost = cst\r\n    if (!qty) {\r\n      return 0\r\n    } else if (qty == 1) {\r\n      cst = Number(cst)\r\n      return cst\r\n    } else {\r\n      cost = Number(cst) * Number(qty)\r\n      cost = cost.toFixed(2)\r\n      return cost\r\n    }\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0\r\n    SelectedProducts.map((data) => (\r\n      ttl += Number(data.totalamt)\r\n    ))\r\n    setGrandtotal(ttl)\r\n  }\r\n  function CaltotalDiscount(data) {\r\n    let total = 0\r\n    if (data) {\r\n      data.forEach(item => {\r\n        total += Number(item.discount)\r\n      })\r\n      return total\r\n    } else {\r\n      return total\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    CalGrandttl()\r\n  }, [SelectedProducts])\r\n  function AddProducts(data) {\r\n    let T = ''\r\n    if (data.vaccine_brand_id) {\r\n      T = 'v'\r\n    } else {\r\n      T = 'm'\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      type: data.type ? data.type : T,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      batch: data.batch_no,\r\n      expiry: data.expiry_date,\r\n      quantity: data.current_stock,\r\n      qtytoSale: 1,\r\n      discount: 0,\r\n      cost: data.cost,\r\n      mainmrp: data.mrp,\r\n      disccost: data.mrp,\r\n      gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n      totalamt: data.mrp\r\n\r\n    }\r\n\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails])\r\n    } else {\r\n      setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n    }\r\n\r\n  }\r\n\r\n  async function DeleteProduct(Batch) {\r\n    let obj = []\r\n    obj.push(SelectedProducts.filter(function (e) {\r\n      return e.batch !== Batch\r\n    }))\r\n    obj = obj.flat()\r\n    setSelectedProducts(obj)\r\n  }\r\n  async function SubmitSaleEntry() {\r\n    let productids = [];\r\n    let proquantity = [];\r\n    let Discount = [];\r\n    let discountonmrp = [];\r\n    let mrp = [];\r\n    let GST = [];\r\n    let Totalamount = []\r\n    for (let i = 0; i < SelectedProducts.length; i++) {\r\n      productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n      proquantity.push(SelectedProducts[i].qtytoSale)\r\n      Discount.push(SelectedProducts[i].discount)\r\n      discountonmrp.push(SelectedProducts[i].disccost)\r\n      mrp.push(SelectedProducts[i].mainmrp)\r\n      GST.push(SelectedProducts[i].gst)\r\n      Totalamount.push(SelectedProducts[i].totalamt)\r\n    }\r\n    let Data = {\r\n      clinic_id: clinicid,\r\n      doctor_id: doctorid,\r\n      doctor_name: doctorname,\r\n      patient_id: patientid,\r\n      pro_id: productids,\r\n      qty: proquantity,\r\n      discount: Discount,\r\n      disc_mrp: discountonmrp,\r\n      main_mrp: mrp,\r\n      gst: GST,\r\n      total_amount: Totalamount,\r\n      grand_total: Grandtotal,\r\n      appointment_id: '',\r\n      add_to_cart: AtC,\r\n      deliver: Dc,\r\n      address_id: addressid,\r\n    }\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/sale/entry/save`, Data).then((response) => {\r\n        setload(false)\r\n        props.GETSalesList()\r\n        props.toggle_nsef()\r\n        Notiflix.Notify.success(response.data.message)\r\n        ClearForm()\r\n      }).catch(function error(e) {\r\n        console.log(e)\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Sale Entry`,\r\n      `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SubmitSaleEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  function confirmmessage2() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add to Cart`,\r\n      `Do you surely want to add the following Sale entries to the Cart  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        setAtC(1)\r\n      },\r\n      () => {\r\n        setAtC(0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const ClearForm = async () => {\r\n    setSelectedProducts([])\r\n    setaddressid()\r\n    setitemname()\r\n    setdoctorname()\r\n    setdoctorid()\r\n    setpatientid()\r\n    setGrandtotal()\r\n    setAtC()\r\n    setDc(0)\r\n    setsearchinput()\r\n    setpatientdata()\r\n  }\r\n  // console.log(patientid, doctorid, doctorname, Dc, itemname, itemid)\r\n  // console.log(SelectedProducts, Grandtotal)\r\n  // console.log(patientdata)\r\n  let c = 0\r\n  console.log(products, addressid, Dc, SelectedProducts)\r\n  console.log(itembyid)\r\n  console.log(itemsearch)\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0\">\r\n      <div className='position-relative mb-3'>\r\n        <h5 className='text-center text-charcoal pt-2 '>New Sale Entry</h5>\r\n        <button className='btn btn-close position-absolute end-0 top-0 me-2' disabled={load ? true : false} onClick={props.toggle_nsef}></button>\r\n      </div>\r\n      <hr className='p-0 m-0' />\r\n      <div className=\"p-0 m-0 text-center bg-seashell\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={` text-burntumber fw-bolder d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className={`radio form me-1  text-burntumber fw-bolder`} key={i} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n          ))\r\n        }\r\n      </div>\r\n      <hr className='p-0 m-0' />\r\n      <div className='my-2 text-center align-self-center'>\r\n        <div className=\" form-switch justify-content-center position-relative\">\r\n          <label className=\"form-check-label text-charcoal fw-bolder\" for=\"flexSwitchCheckDefault\">Deliver to Customer</label>\r\n          <input className=\"form-check-input ms-2 outline-none text-center\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" checked={Dc == 1 ? true : false} onChange={() => { DC() }} />\r\n          <div className={`d-${addressform} position-absolute start-0 end-0 m-5 mt-0 top-0 bg-pearl shadow rounded-2 `} style={{ zIndex: 2 }} ref={patientaddref}>\r\n            <div className='p-0 m-0 position-relative text-wrap'>\r\n              <button className='btn btn-close position-absolute end-0 p-1 m-1' onClick={() => { addressid ? setaddressform('none') : setaddressform('none') }}></button>\r\n              {\r\n                patientdata && patientdata.address && patientdata.address.length !== 0 ? (\r\n                  <div className=\"row p-0 m-0 gx-2  \">\r\n                    <h6 className='ms-1 text-burntumber fw-bold text-start'>Choose Address for Delivery</h6>\r\n                    {\r\n                      patientdata.address.map((data) => (\r\n                        <div className={`col-12 px-1 m-2 text-start card bg-${addressid == data.id ? 'lightgreen' : 'lightyellow'} text-charcoal fw-bold`} onClick={() => { addressid ? selectaddress() : selectaddress(data) }}>\r\n                          <div>Patient Name:- {data.full_name}</div>\r\n                          <div>Address:-{data.address_line1 && data.address_line1 !== null ? data.address_line1 : ''}</div>\r\n                          <div>{data.address_line2 && data.address_line2 !== null ? data.address_line2 : ''}</div>\r\n                          <div>PinCode:-{data.zip_code && data.zip_code !== null ? data.zip_code : ''}</div>\r\n                        </div>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                ) : (\r\n                  <div className='text-danger fw-bold'>Addresses not found.Update Patient Details to get Address </div>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row p-0 m-0\">\r\n        <div className=\"col-4\">\r\n          <label className=\"m-0\">Search Using Phone or Name</label>\r\n          <input type=\"text\" className=\"form-control bg-seashell selectpatient col-10 position-relative\" placeholder='Search for Patients' value={searchinput ? searchinput : ''} onFocus={() => setsearchload(true)} onChange={searchpatient} />\r\n          <div className={`col-auto d-${displaysearchlist} searchinput position-absolute rounded-2 shadow bg-pearl px-2`} style={{ width: 'max-content', zIndex: '2' }}>\r\n            {\r\n              searchload == true || searchinput == undefined ? (\r\n                <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\">Loading... </p>\r\n              ) : (\r\n                searchlist.length == 0 ? (\r\n                  <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found</p>\r\n                ) : (\r\n                  searchlist.map((data) => (\r\n                    <div className='col-auto p-0 m-0 ms-1 bg-pearl text-charcoal text-start px-1 border-bottom' style={{ width: 'max-content' }} onClick={() => { get_value(data.id, data.full_name, data) }}>{data.full_name} {data.phone_number}</div>\r\n                  )))\r\n\r\n              )\r\n\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Select Doctor</label>\r\n          <div className=\"col-12\">\r\n            <select className=\"col-10 form-control selectdoctor bg-seashell\" placeholder='Select Doctor' value={doctorid ? doctorid : ''} onChange={(e) => { setdoctorid(e.target.value); }} >\r\n              <option className='text-charcoal50'>Select Doctor</option>\r\n              {\r\n                Doclist.map((data, i) => (\r\n                  <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{' '}{'Dr.'}{' '}{data[1]}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Other Doctor</label>\r\n          <div className=\"col-12\">\r\n            <input className='col-10 form-control bg-seashell' placeholder='Other Doctors' />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"container-fluid mt-4 text-center p-0 m-0\">\r\n        <div className=\"col-12 p-0 m-0 justify-content-center\">\r\n          <h6 className='text-charcoal p-0 m-0 fw-bolder text-start ms-1'>Add Products</h6>\r\n          <hr className='p-0 m-0' />\r\n          {/* <div className=\"col-12\">\r\n              <button className='button button-seashell text-burntumber border-burntumber '>Scan to Add Product</button>\r\n            </div>\r\n            <h4 className='my-2'>OR</h4> */}\r\n          <div className=\"row p-0 m-0 my-2 justify-content-center\">\r\n\r\n\r\n            <div className=\"col-4\">\r\n              <input className='form-control bg-seashell' placeholder='Search Product by Name'\r\n                value={itemname ? itemname : ''}\r\n                onChange={(e) => {\r\n                  searchmeds(e.target.value);\r\n                  setitemname(e.target.value);\r\n                  setitemid();\r\n                  setproducts();\r\n                  stockref.current.style.display = 'none'\r\n                }} />\r\n              <div ref={medicinesref} className='position-absolute rounded-2 mt-1' style={{ Width: 'max-content', zIndex: '1' }} >\r\n                {\r\n                  itemsearch ? (\r\n                    loadsearch ? (\r\n                      <div className='rounded-2 p-1 bg-pearl'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      loadsearch == false && itemsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        <div className={`rounded-4 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                          <p className={`text-start p-0 m-0 m-1 fw-bold text-charcoal75 ms-2`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                          {\r\n                            itemsearch.map((data, i) => (\r\n                              <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-0 ps-1 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = 'block' }}>{data.display_name ? data.display_name : data.name}</div>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n              <div ref={stockref} className={`position-absolute bg-pearl scroll scroll-y align-self-center rounded-4 border border-1 p-1 d-${products && products.stock_info && products.stock_info.length > 0 ? 'block' : 'none'}`} style={{ marginLeft: '15.7rem', marginTop: '2rem', zIndex: '2', 'width': '13rem', 'height': '10rem' }}>\r\n                <p className={`text-start p-0 m-0 m-1 fw-bold text-charcoal75`} style={{ fontSize: '0.8rem' }}>{products && products.stock_info !== undefined ? products.stock_info.length : ''} Batch Stocks</p>\r\n                {\r\n                  products && products.length == 0 ? (\r\n                    <div className='bg-seashell'>Not Avaliable</div>\r\n                  ) : (\r\n\r\n                    products ? (\r\n\r\n                      products.stock_info.map((data, i) => (\r\n                        <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} border-bottom text-wrap`}\r\n                          onClick={\r\n                            () => {\r\n                              AddProducts(data);\r\n                              setitemname();\r\n                              setitemid();\r\n                              setproducts();\r\n                              setitemsearch()\r\n                            }}>\r\n                          <p className='text-center m-0 p-0 fw-bold'>{itemname}</p>\r\n                          <p className='p-0 m-0 '>BatchNo. - {data.batch_no && data.batch_no !== null ? data.batch_no : ''}</p>\r\n                          <p className='p-0 m-0 '>Stock - {data.current_stock && data.current_stock ? data.current_stock : ''}</p>\r\n                          <p className='p-0 m-0 '>Expiry Date - {data.expiry_date ? reversefunction(data.expiry_date) : ''}</p>\r\n                        </div>\r\n                      ))\r\n\r\n                    ) : (<div>Not available</div>)\r\n\r\n\r\n                  )\r\n\r\n                }\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n            <div className='col-1 text-burntumber fw-bold align-self-center'>\r\n              OR\r\n            </div>\r\n            <div className=\"col-4 \">\r\n              <input className='form-control bg-seashell border border-1 rounded-2' value={itemid ? itemid : ''} placeholder='Search Product by ID' onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value) }} />\r\n              <div ref={medbyidref} className='position-absolute rounded-2 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                {\r\n                  itembyid ? (\r\n                    loadbyId ? (\r\n                      <div className='rounded-2 p-1 bg-pearl'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      itembyid.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        itembyid.map((data, i) => (\r\n                          <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} fs-6 `}\r\n                            onClick={(e) => {\r\n                              setitemid(data.type + data.id);\r\n                              AddProducts(data)\r\n                              medbyidref.current.style.display = 'none';\r\n                            }}>{data.item_name ? data.item_name : ''}</div>\r\n                        ))\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 m-0 p-0\">\r\n          <div className=\"d-flex p-0 m-0 justify-content-between\">\r\n            <h6 className='text-charcoal p-0 m-0 fw-bolder text-start ms-1'>Product Added</h6>\r\n\r\n          </div>\r\n\r\n          <hr className='p-0 m-0' />\r\n          <div className='p-0 m-0 scroll scroll-y' style={{ height: '35vh' }}>\r\n            <table className='table p-0 m-0'>\r\n              <thead className='p-0 m-0'>\r\n                <tr className='p-0 m-0'>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Item ID</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Item Name</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>BatchNo.</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Avl.Stock</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Qty To Sale</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Discount %</th>\r\n                  <th className='p-0 m-0 px-2' colSpan='4' scope='col-group'>Costing</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Total Amount</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Delete</th>\r\n                </tr>\r\n                <tr className='p-0 m-0'>\r\n                  <th className='p-0 m-0 px-2' scope='col'>MRP</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>Cost</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>GST Rate</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>Selling Cost/Unit</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                  <tbody className='p-0 m-0'>\r\n                    {\r\n                      SelectedProducts.map((data) => (\r\n                        <tr className='p-0 m-0 align-middle'>\r\n                          <td>{data.type} {data.productid}</td>\r\n                          <td>{data.product}</td>\r\n                          <td>{data.batch}</td>\r\n                          <td>{reversefunction(data.expiry)}</td>\r\n                          <td>{data.quantity}</td>\r\n\r\n                          <td><input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell'\r\n                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                            onChange={(e) => {\r\n                              e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                              data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost)\r\n                              setSelectedProducts(prevState => [...prevState])\r\n                            }} /> </td>\r\n\r\n                          <td className='text-center p-0 m-0' style={{ Width: '0rem' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell'\r\n                              value={data.discount ? data.discount : ''}\r\n                              onChange={(e) => {\r\n                                data.discount = e.target.value;\r\n                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost)\r\n                                setSelectedProducts(prevState => [...prevState])\r\n                              }} /> </td>\r\n                          <td>{data.mainmrp}</td>\r\n                          <td>{data.cost}</td>\r\n                          <td>{data.gst + '%'}</td>\r\n                          <td>{data.disccost}</td>\r\n                          <td>{data.totalamt}</td>\r\n                          <td><button className='btn p-0 m-0' onClick={() => { DeleteProduct(data.batch) }}><img src={process.env.PUBLIC_URL + 'images/delete.png'} style={{ width: '1.5rem' }} /></button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='p-0 m-0 position-relative'>\r\n                    <tr className='p-0 m-0'>\r\n                      <td className='p-0 m-0 position-absolute text-charcoal fw-bold start-0 end-0'>No Product Added</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-center bg-pearl align-items-center rounded-bottom'>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grandtotal}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{SelectedProducts.length}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={() => { confirmmessage() }}>Save Entry</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' disabled={load ? true : false} onClick={() => { confirmmessage2() }}>Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction NewSaleReturnentryform(props) {\r\n  const url = useContext(URL)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n  const [billname, setbillname] = useState()\r\n  const [billid, setbillid] = useState()\r\n  const [loadbills, setloadbills] = useState()\r\n  const [billsearch, setbillsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState('')\r\n  const [load, setload] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([])\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0\r\n      costing = Number(cost) * Number(qtytotreturn)\r\n      return costing.toFixed(2)\r\n    } else {\r\n      return costing\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.sale_disc_mrp,\r\n      totalcost: data.cost,\r\n      saleqty: data.sale_qty,\r\n      qtytoReturn: data.sale_qty,\r\n    }\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj])\r\n      setitemname()\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n      setitemname()\r\n    }\r\n  }\r\n\r\n\r\n  const searchProduct = async () => {\r\n    setloadbills(true)\r\n    try {\r\n      await axios.get(`${url}/sale/return/item/search/by/id?item=${itemname}&bill_id=${billid}`).then((response) => {\r\n        console.log(response)\r\n        setbillsearch([response.data.data])\r\n\r\n        setloadbills(false)\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n        setloadbills(false)\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n      setloadbills(false)\r\n    }\r\n  }\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = []\r\n    let Totalamount = []\r\n    let quantity = []\r\n\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(MedicineentriesArr[i].Itemid ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}` : '')\r\n      Totalamount.push(MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : '')\r\n      quantity.push(MedicineentriesArr[i].qtytoReturn ? MedicineentriesArr[i].qtytoReturn : '')\r\n    }\r\n\r\n    Totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n\r\n    var Data = {\r\n      bill_id: billid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal\r\n    }\r\n    console.log(Data)\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/sale/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETSaleReturns()\r\n        setMedicineentriesArr()\r\n        setbillid()\r\n        setbillname()\r\n        setload(false)\r\n        props.toggle_nref()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      console.log(e.message)\r\n      setload(false)\r\n    }\r\n\r\n  }\r\n\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Sale ${MedicineentriesArr.length <= 1 ? 'Return ' : 'Returns'} of Bill P-${billid} `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveReturnEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  function Grand() {\r\n    let c = 0\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (\r\n        c += Number(data.totalcost)\r\n      ))\r\n    }\r\n    return c\r\n  }\r\n  console.log(billid, itemname, billsearch)\r\n  return (\r\n    <div className=\"p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0 border border-1 \">\r\n        <h5 className=\"text-center pt-3\" style={{ color: \"var(--charcoal)\" }} >New Sale Return Entry</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 p-2 me-2\" onClick={props.toggle_nref} disabled={load ? true : false} aria-label=\"Close\" ></button>\r\n        <hr />\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Bill</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder='Bill Id (Does not require initials)' value={billid ? billid : ''} onChange={(e) => { setbillid(e.target.value); setMedicineentriesArr([]) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className='position-relative'>\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className='form-control bg-seashell' placeholder='Product Id (Require initials)' value={itemname ? itemname : ''}\r\n                  onChange={(e) => {\r\n                    billid ? setitemname(e.target.value) : Notiflix.Notify.failure('Please Add Bill id First')\r\n                  }} />\r\n                <div ref={medicinesref} className='position-absolute rounded-2 bg-pearl col-12' style={{ zIndex: '1' }}>\r\n                  {\r\n                    billsearch ? (\r\n                      loadbills ? (\r\n                        <div className='rounded-2 p-1'>\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"> </span> </div>\r\n                        </div>\r\n                      ) : (\r\n                        billsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                        ) : (\r\n                          billsearch.map((data, i) => (\r\n                            <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'lightyellow'} fs-6 `} name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(data.item_name);\r\n                                InsertMedicines(data);\r\n                                medicinesref.current.style.display = 'none';\r\n                              }}>{data.item_name}</div>\r\n                          ))\r\n                        )\r\n                      )\r\n                    ) : (<div className='bg-seashell'></div>)\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className='p-0 m-0 btn' onClick={searchProduct}>\r\n                <img src={process.env.PUBLIC_URL + 'images/search.png'} style={{ width: '1.8rem' }} /></button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ Height: '65vh', zIndex: '2' }}>\r\n            <p className='text-center fw-bold text-burntumber p-0 m-0  mt-2 mb-1'>Items Selected</p>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead className='text-charcoal75 fw-bold'>\r\n                <tr>\r\n                  <th className='p-0 m-0 px-1'>Item ID</th>\r\n                  <th className='p-0 m-0 px-1'>Item Name</th>\r\n                  <th className='p-0 m-0 px-1'>batch No.</th>\r\n                  <th className='p-0 m-0 px-1'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Qty</th>\r\n                  <th className='p-0 m-0 px-1'>Qty to Return</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Rate/Unit</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Rate</th>\r\n                  <th className='p-0 m-0 px-1'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                MedicineentriesArr ? (\r\n                  <tbody style={{ maxHeight: '65vh', minHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                    {\r\n                      MedicineentriesArr.map((item, _key) => (\r\n                        <tr key={_key} className=''>\r\n                          <td>{item.Type}{item.Itemid}</td>\r\n                          <td>{item.Item}</td>\r\n                          <td>{item.batchno}</td>\r\n                          <td>{reversefunction(item.expirydate)}</td>\r\n                          <td>{item.saleqty}</td>\r\n                          <td className='p-0 m-0' style={{ 'width': '0px', 'height': '0px' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2' value={item.qtytoReturn ? item.qtytoReturn : ''}\r\n                              onChange={(e) => {\r\n                                e.target.value <= item.saleqty ? item.qtytoReturn = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\")\r\n                                item.totalcost = CalculateCost(item.cost, item.saleqty, e.target.value)\r\n                                setMedicineentriesArr(prevState => [...prevState])\r\n                              }} /></td>\r\n                          <td>{item.cost}</td>\r\n                          <td>{item.totalcost}</td>\r\n                          <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr className=\"\"  >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 text-center bg-pearl  border border-1 py-3'>\r\n\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grand()}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{MedicineentriesArr ? MedicineentriesArr.length : 0}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={confirmmessage}>Save Entry</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' disabled={load ? true : false} >Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let c = Number(cgst) + Number(sgst) + Number(igst)\r\n      return c * Number(qty)\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <div className=\"row p-0 m-0 position-relative\">\r\n          <h5 className='text-center text-charcoal pt-3'>{props.itembillid} Sale Return Item Details</h5>\r\n          <button type=\"button\" className=\"btn-close closebtn m-auto position-absolute end-0 me-4\" onClick={props.toggle_sridw} aria-label=\"Close\"></button>\r\n          <div className=\"col-2 d-none\">\r\n            <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n              <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n              <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n\r\n            <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className=\"row justify-content-end me-5\">\r\n        <div className=\"col-3\"><input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label></div>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '82vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Selling Cost</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Discount%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            {/* <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th> */}\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.salereturnarr.sale_medicines && props.salereturnarr.sale_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.salereturnarr.sale_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks.batch_no && item.medicine_stocks.batch_no != null ? item.medicine_stocks.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks.expiry_date && item.medicine_stocks.expiry_date != null ? reversefunction(item.medicine_stocks.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      {/* <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td> */}\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 bg-lightred'>\r\n                  <strong className='fs-5 text-center bg-lightred'>No Medicines Found</strong>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th>\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.salereturnarr.purchase_vaccines && props.salereturnarr.purchase_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.salereturnarr.purchase_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <strong className='fs-6 text-center'>No Vaccines Found</strong>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { Salesection }\r\n\r\n//  ---------------------------------------------------------------purchase------------------------------------------------------------------\r\nfunction Purchasesection(props) {\r\n  const first = [\"Purchase Orders\", \"Purchase Entry\", \"Purchase Returns\"];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return <Purchaseordersection />\r\n    }\r\n    if (_selected === 1) {\r\n      return <Purchaseentrysection function={props.func} function2={props.function} />\r\n    }\r\n    if (_selected === 2) {\r\n      return <PurchaseReturns />\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <section className='purchasesection'>\r\n\r\n        <div className=\"row p-0 m-0 mt-1 gx-3\">\r\n\r\n          <div className='row p-0 m-0'>\r\n            {\r\n              first.map((e, i) => {\r\n                return (\r\n                  <div className=\"col-auto\">\r\n                    <button className={`btn btn-sm px-4 rounded-5 text-${i === second ? \"light\" : \"dark\"} bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(i)} >{e}</button>\r\n                  </div>\r\n                )\r\n              }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid pt-4 p-0 m-0'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedScreen(second)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Purchaseentrysection(props) {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n    }\r\n  };\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [purchaseentryarr, setpurchaseentryarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [tabindex, settabindex] = useState()\r\n\r\n  function GETPurchaseList(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n\r\n    try {\r\n      axios.get(`${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpurchaseentryarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GETPurchaseList()\r\n  }, [channel, fromdate, todate])\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function getnextpages(e) {\r\n    GETPurchaseList(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETPurchaseList(e.target.value - 1)\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_npef}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Purchase</button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between align-items-center\">\r\n        <div className=\"col-3 col-md-2 col-lg-2 align-self-center text-center text-charcoal mb-2 fw-bolder\">Purchase Entry</div>\r\n        <div className=\"col-auto align-self-center m-1 \">\r\n          <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n            <div className=\"col-4 bg-pearl rounded-2\">\r\n              <select className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n              <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl rounded-2\">\r\n              <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 cool-md-2 col-lg-2 align-self-center\">\r\n          <ExportPurchaseEntry purchaseentryarr={purchaseentryarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '56vh', height: '56vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle position-sticky top-0 bg-pearl'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PE ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PO ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Channel</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Invoice No.</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Bill Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Bill Total</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Vendor</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Actions</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col' style={{ zIndex: '3' }}>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n\r\n                </body>\r\n\r\n              ) : (\r\n                purchaseentryarr && purchaseentryarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      purchaseentryarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>PE-{item.bill_id}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.purchase_order_id && item.purchase_order_id !== null ? item.purchase_order_id : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.invoice_no ? item.invoice_no : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.bill_date && item.bill_date ? reversefunction(item.bill_date) : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.bill_total && item.bill_total ? \"Rs. \" + item.bill_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button><button className=\"btn\" onClick={() => { setindex(i); toggle_peidw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? peidw : 'none'} border border-1 start-0 end-0 bg-seashell p-0 m-0`} style={{ top: '-7.5rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <PEitemdetailssection purchaseentryarr={purchaseentryarr[i]} itembillid={\"PE-\" + item.bill_id} toggle_peidw={toggle_peidw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Purchase Entries</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mb-1 mt-1\">\r\n          <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n            <button className=\"btn p-0 m-0 me-2 px-1 border-charcoal\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n            <div className=\"col-auto col-xl-auto col-sm-8 col-md-8 p-0 m-0\">\r\n              {\r\n                pages ? (\r\n                  pages.map((page, i) => (\r\n                    <button className={`button ms-2 border-0 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}  shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { settabindex(i); GETPurchaseList(i) }} key={i}>{page}</button>\r\n                  ))\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )\r\n\r\n              }\r\n            </div>\r\n            <button className={`btn p-0 m-0 border-charcoal ms-2 px-1`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`newpurchaseentrysection position-absolute start-0 end-0 bg-seashell border border-1 d-${npef}`} style={{ 'height': '90vh' }}  >\r\n        {<Newpurchaseentryform toggle_npef={toggle_npef} GETPurchaseList={GETPurchaseList} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction PEitemdetailssection(props) {\r\n  console.log(props.purchaseentryarr)\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n\r\n\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <h5 className='text-center pt-3 text-charcoal'>{props.itembillid} Purchase Entry Item Details</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={props.toggle_peidw} aria-label=\"Close\"></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n            <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchaseentryarr.medicines && props.purchaseentryarr.medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchaseentryarr.medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? item.expiry_date : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className=' text-center fw-bold'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th>\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchaseentryarr.vaccines && props.purchaseentryarr.vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchaseentryarr.vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? item.expiry_date : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className='fw-bold text-center'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction Newpurchaseentryform(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem('ClinicId')\r\n  const ClinicList = useContext(Clinic)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n  const Tableref = useRef(null)\r\n  const [channel, setchannel] = useState()\r\n  const [po, setpo] = useState()\r\n  const [invoice, setinvoice] = useState()\r\n  const [invoicedate, setinvoicedate] = useState()\r\n  const [vendorname, setvendorname] = useState()\r\n  const [vendorid, setvendorid] = useState()\r\n  const [loadvendors, setloadvendors] = useState()\r\n  const [vendorcode, setvendorcode] = useState()\r\n  const [vendorsearch, setvendorsearch] = useState()\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState()\r\n  const [itemid, setitemid] = useState()\r\n  const [itemtype, setitemtype] = useState()\r\n  const [batchno, setbatchno] = useState()\r\n  const [expdate, setexpdate] = useState()\r\n  const [manufdate, setmanufdate] = useState()\r\n  const [mrp, setmrp] = useState()\r\n  const [rate, setrate] = useState()\r\n  const [qty, setqty] = useState()\r\n  const [freeqty, setfreeqty] = useState(0)\r\n  const [disc, setdisc] = useState(0)\r\n  const [trddisc, settrddisc] = useState(0)\r\n  const [cgst, setcgst] = useState(0)\r\n  const [cgstprcnt, setcgstprcnt] = useState(0)\r\n  const [sgst, setsgst] = useState(0)\r\n  const [sgstprcnt, setsgstprcnt] = useState(0)\r\n  const [igst, setigst] = useState(0)\r\n  const [igstprcnt, setigstprcnt] = useState(0)\r\n  const [cpu, setcpu] = useState(0)\r\n  const [totalamt, settotalamt] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState()\r\n  const [tableindex, settableindex] = useState()\r\n  const [clinicstatecode, setclinicstatecode] = useState()\r\n  const [load, setload] = useState()\r\n  const [Exceldata, setExceldata] = useState([])\r\n  const [NewMed, setNewMed] = useState('none')\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function filterclinic() {\r\n    for (let i = 0; i < ClinicList.length; i++) {\r\n      if (ClinicList[i].id == ClinicId) {\r\n        setclinicstatecode(ClinicList[i].state_code)\r\n      }\r\n    }\r\n  }\r\n  let MedicineentriesObj = {\r\n    type: '',\r\n    Itemid: '',\r\n    Itemname: '',\r\n    batchno: '',\r\n    expirydate: '',\r\n    manufacturingDate: '',\r\n    quantity: '',\r\n    freeQty: '',\r\n    MRP: '',\r\n    Rate: '',\r\n    Discount: '',\r\n    tradeDiscount: '',\r\n    sgst: '',\r\n    sgstpercent: '',\r\n    cgst: '',\r\n    cgstper: '',\r\n    igst: '',\r\n    igstper: '',\r\n    costperunit: '',\r\n    totalamount: ''\r\n  }\r\n  async function InsertMedicines() {\r\n    MedicineentriesObj = {\r\n      type: itemtype,\r\n      Itemid: itemid,\r\n      Itemname: itemname,\r\n      batchno: batchno,\r\n      expirydate: expdate,\r\n      manufacturingDate: manufdate,\r\n      MRP: mrp,\r\n      Rate: rate,\r\n      Qty: qty,\r\n      freeQty: freeqty,\r\n      Discount: disc,\r\n      tradeDiscount: trddisc,\r\n      sgstper: sgstprcnt,\r\n      sgst: sgst,\r\n      cgstper: cgstprcnt,\r\n      cgst: cgst,\r\n      igstper: igstprcnt,\r\n      igst: igst,\r\n      costperunit: cpu,\r\n      totalamount: totalamt\r\n    }\r\n    if (qty) {\r\n      if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n        setMedicineentriesArr([MedicineentriesObj])\r\n      } else {\r\n        setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please choose quantity\")\r\n    }\r\n\r\n    resetfields()\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n        let medicines = []\r\n        let vaccines = []\r\n        let items = []\r\n        medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n        vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n        items = medicines.concat(vaccines)\r\n        items = items.flat()\r\n        console.log(items)\r\n        setitemsearch(items)\r\n        setloadsearch(false)\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n\r\n  }\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true)\r\n    try {\r\n      await axios.get(`${url}/kyc/list?limit=10&offset=0&search=${search}`).then((response) => {\r\n        setvendorsearch(response.data.data)\r\n        setloadvendors(false)\r\n        if (search.length > 1) {\r\n          vendorsref.current.style.display = 'block';\r\n        } else {\r\n          vendorsref.current.style.display = 'none';\r\n        }\r\n      }).catch(\r\n        function error(e) {\r\n          Notiflix.Notify.warning(e.data.message)\r\n          setloadvendors(false)\r\n        }\r\n      )\r\n    } catch (e) {\r\n      setloadvendors(false)\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n  }\r\n  const SavePurchase = async () => {\r\n    let MedId = []\r\n    let medname = []\r\n    let Type = []\r\n    let batches = []\r\n    let expirydate = []\r\n    let manufacturingDate = []\r\n    let MRP = []\r\n    let Rate = []\r\n    let Discount = []\r\n    let tradeDiscount = []\r\n    let sgst = []\r\n    let sgstpercent = []\r\n    let cgst = []\r\n    let cgstpercent = []\r\n    let igst = []\r\n    let igstpercent = []\r\n    let costperunit = []\r\n    let totalamount = []\r\n    let quantity = []\r\n    let freequantity = []\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      Type.push(MedicineentriesArr[i].type ? MedicineentriesArr[i].type : '')\r\n      MedId.push(MedicineentriesArr[i].Itemid ? MedicineentriesArr[i].Itemid : '')\r\n      medname.push(MedicineentriesArr[i].Itemname ? MedicineentriesArr[i].Itemname : '')\r\n      batches.push(MedicineentriesArr[i].batchno ? MedicineentriesArr[i].batchno : '')\r\n      expirydate.push(MedicineentriesArr[i].expirydate ? MedicineentriesArr[i].expirydate : '')\r\n      manufacturingDate.push(MedicineentriesArr[i].manufacturingDate ? MedicineentriesArr[i].manufacturingDate : '')\r\n      MRP.push(MedicineentriesArr[i].MRP ? MedicineentriesArr[i].MRP : '')\r\n      Rate.push(MedicineentriesArr[i].Rate ? MedicineentriesArr[i].Rate : '')\r\n      Discount.push(MedicineentriesArr[i].Discount ? MedicineentriesArr[i].Discount : 0)\r\n      tradeDiscount.push(MedicineentriesArr[i].tradeDiscount ? MedicineentriesArr[i].tradeDiscount : 0)\r\n      sgst.push(MedicineentriesArr[i].sgst ? MedicineentriesArr[i].sgst : '')\r\n      sgstpercent.push(MedicineentriesArr[i].sgstper ? Number(MedicineentriesArr[i].sgstper) : 0)\r\n      cgst.push(MedicineentriesArr[i].cgst ? MedicineentriesArr[i].cgst : '')\r\n      cgstpercent.push(MedicineentriesArr[i].cgstper ? Number(MedicineentriesArr[i].cgstper) : 0)\r\n      igst.push(MedicineentriesArr[i].igst ? MedicineentriesArr[i].igst : '')\r\n      igstpercent.push(MedicineentriesArr[i].igstper ? Number(MedicineentriesArr[i].igstper) : 0)\r\n      costperunit.push(MedicineentriesArr[i].costperunit ? MedicineentriesArr[i].costperunit : '')\r\n      totalamount.push(MedicineentriesArr[i].totalamount ? MedicineentriesArr[i].totalamount : '')\r\n      quantity.push(MedicineentriesArr[i].Qty ? MedicineentriesArr[i].Qty : '')\r\n      freequantity.push(MedicineentriesArr[i].freeQty ? MedicineentriesArr[i].freeQty : 0)\r\n    }\r\n\r\n    totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n    console.log(grosstotal, Type, MedId, medname, batches, expirydate, manufacturingDate, MRP, Rate, Discount, tradeDiscount, sgst, sgstpercent, cgst, cgstpercent, igst, igstpercent, costperunit, totalamount, quantity, freequantity)\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      purchase_order_id: po,\r\n      invoice_no: invoice,\r\n      bill_date: invoicedate,\r\n      clinic_id: ClinicId,\r\n      channel: channel,\r\n      bill_total: grosstotal,\r\n      id: MedId,\r\n      type: Type,\r\n      qty: quantity,\r\n      free_qty: freequantity,\r\n      mrp: MRP,\r\n      rate: Rate,\r\n      trade_discount: tradeDiscount,\r\n      discount: Discount,\r\n      SGST_rate: sgstpercent,\r\n      SGST: sgst,\r\n      CGST_rate: cgstpercent,\r\n      CGST: cgst,\r\n      IGST_rate: igstpercent,\r\n      IGST: igst,\r\n      cost: costperunit,\r\n      total_amount: totalamount,\r\n      expiry_date: expirydate,\r\n      mfd_date: manufacturingDate,\r\n      batch_no: batches,\r\n    }\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/purchase/entry/save`, Data).then((response) => {\r\n        setload(false)\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETPurchaseList()\r\n\r\n        setload(false)\r\n        props.toggle_npef()\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n\r\n  }\r\n  const ClearFields = () => {\r\n    setMedicineentriesArr()\r\n    setchannel()\r\n    setpo()\r\n    setinvoice()\r\n    setinvoicedate()\r\n    setvendorname()\r\n    setvendorid()\r\n  }\r\n  const resetfields = async () => {\r\n    setitemname()\r\n    setitemid()\r\n    setbatchno()\r\n    setexpdate()\r\n    setmanufdate()\r\n    setmrp()\r\n    setrate()\r\n    setqty()\r\n    setfreeqty()\r\n    setdisc()\r\n    settrddisc()\r\n    setcgst()\r\n    setsgst()\r\n    setigst()\r\n    setcgstprcnt()\r\n    setsgstprcnt()\r\n    setigstprcnt()\r\n    setcpu()\r\n    settotalamt()\r\n    setloadsearch()\r\n  }\r\n  function confirmmessage(entries, vendor) {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add total ${entries.length} purchase ${entries.length <= 1 ? 'entry' : 'entries'} of Distributor ${vendor}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SavePurchase()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  function indexing(i) {\r\n    console.log(i)\r\n    if (tableindex == i) {\r\n      settableindex(-1)\r\n      Emptytableindex()\r\n    } else {\r\n      settableindex(i)\r\n      EditTableEntry(i)\r\n    }\r\n  }\r\n  function EditTableEntry(index) {\r\n    setitemid(MedicineentriesArr[index].Itemid)\r\n    setitemname(MedicineentriesArr[index].Itemname)\r\n    setbatchno(MedicineentriesArr[index].batchno)\r\n    setexpdate(MedicineentriesArr[index].expirydate)\r\n    setmanufdate(MedicineentriesArr[index].manufacturingDate)\r\n    setmrp(MedicineentriesArr[index].MRP)\r\n    setrate(MedicineentriesArr[index].Rate)\r\n    setqty(MedicineentriesArr[index].Qty)\r\n    setfreeqty(MedicineentriesArr[index].freeQty)\r\n    setdisc(MedicineentriesArr[index].Discount)\r\n    settrddisc(MedicineentriesArr[index].tradeDiscount)\r\n    setcgst(MedicineentriesArr[index].cgst)\r\n    setcgstprcnt(MedicineentriesArr[index].cgstper)\r\n    setsgst(MedicineentriesArr[index].sgst)\r\n    setsgstprcnt(MedicineentriesArr[index].sgstper)\r\n    setigst(MedicineentriesArr[index].igst)\r\n    setigstprcnt(MedicineentriesArr[index].igstper)\r\n    setcpu(MedicineentriesArr[index].costperunit)\r\n    settotalamt(MedicineentriesArr[index].totalamount)\r\n  }\r\n  function Emptytableindex() {\r\n\r\n    setitemid()\r\n    setitemname()\r\n    setbatchno()\r\n    setexpdate()\r\n    setmanufdate()\r\n    setmrp()\r\n    setrate()\r\n    setqty()\r\n    setfreeqty()\r\n    setdisc()\r\n    settrddisc()\r\n    setcgst()\r\n    setcgstprcnt()\r\n    setsgst()\r\n    setsgstprcnt()\r\n    setigst()\r\n    setigstprcnt()\r\n    setcpu()\r\n    settotalamt()\r\n\r\n  }\r\n  async function UpdateMedicines() {\r\n    for (let j = 0; j < MedicineentriesArr.length; j++) {\r\n      if (tableindex == j) {\r\n        MedicineentriesArr[j] = {\r\n          type: itemtype,\r\n          Itemid: itemid,\r\n          Itemname: itemname,\r\n          batchno: batchno,\r\n          expirydate: expdate,\r\n          manufacturingDate: manufdate,\r\n          MRP: mrp,\r\n          Rate: rate,\r\n          Qty: qty,\r\n          freeQty: freeqty,\r\n          Discount: disc,\r\n          tradeDiscount: trddisc,\r\n          sgstper: sgstprcnt,\r\n          sgst: sgst,\r\n          cgstper: cgstprcnt,\r\n          cgst: cgst,\r\n          igstper: igstprcnt,\r\n          igst: igst,\r\n          costperunit: cpu,\r\n          totalamount: totalamt\r\n        }\r\n        Notiflix.Notify.success(`Item Number ${tableindex + 1} Updated Successfully`)\r\n        Emptytableindex()\r\n        settableindex(-1)\r\n      }\r\n    }\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  let total = 0;\r\n  function Calculate() {\r\n    total = qty ? rate * qty : rate\r\n    // total = freeqty ? total - (rate * freeqty) : total\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    total = sgstprcnt ? Number(total) + Number((((total * sgstprcnt) / 100) + ((total * sgstprcnt) / 100))) : total\r\n    total = igstprcnt ? Number(total) + Number((total * Number(igstprcnt) / 100)) : total\r\n    total = total ? parseFloat(total).toFixed(2) : total\r\n    return total\r\n  }\r\n  let CostPerUnit = 0\r\n  function CalculateCPU() {\r\n    let newqty = Number(qty) + Number(freeqty)\r\n    CostPerUnit = Number(parseFloat(Calculate() / newqty))\r\n    // console.log(Calculate(), CostPerUnit, qty, freeqty)\r\n    CostPerUnit = parseFloat(CostPerUnit).toFixed(2)\r\n    return CostPerUnit\r\n  }\r\n  let GsT = 0\r\n  function CalculateGst() {\r\n    total = qty ? rate * qty : rate\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    GsT = sgstprcnt ? Number((((rate * sgstprcnt) / 100) + ((rate * sgstprcnt) / 100)) / 2) : GsT\r\n    GsT = parseFloat(GsT).toFixed(2)\r\n    return GsT\r\n  }\r\n  let IgsT = 0\r\n  function CalculateIGst() {\r\n    total = qty ? rate * qty : rate\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    IgsT = igstprcnt ? Number((rate * igstprcnt) / 100) : IgsT\r\n    IgsT = parseFloat(IgsT).toFixed(2)\r\n    return IgsT\r\n  }\r\n\r\n  useEffect(() => {\r\n    CalculateGst()\r\n    setsgst(CalculateGst())\r\n    setcgst(CalculateGst())\r\n  }, [sgstprcnt])\r\n\r\n  useEffect(() => {\r\n    CalculateIGst()\r\n    setigst(CalculateIGst())\r\n  }, [igstprcnt])\r\n  useEffect(() => {\r\n    settotalamt(Calculate())\r\n  }, [Calculate()])\r\n\r\n  useEffect(() => {\r\n    setcpu(CalculateCPU())\r\n  }, [CalculateCPU(), Calculate()])\r\n\r\n  // console.log(totalamt,cpu)\r\n  // console.log(sgst,cgst)\r\n  // console.log(MedicineentriesArr, ClinicList)\r\n  console.log(clinicstatecode, vendorcode)\r\n  const searchmedAuto = async (search) => {\r\n\r\n    await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n      let medicines = []\r\n      let vaccines = []\r\n      let items = []\r\n      medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n      vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n      items = medicines.concat(vaccines)\r\n      items = items.flat()\r\n      console.log(items)\r\n      if (items[0] && items[0].id !== undefined) {\r\n        let ID = items[0].id\r\n        return ID\r\n      } else {\r\n        return 'Please Select ID'\r\n      }\r\n\r\n      // for(let i=0;i<items.length;i++){\r\n      //     if(items[i].itemname){\r\n\r\n      //     }\r\n      // }\r\n    })\r\n\r\n\r\n  }\r\n  const CalGST = (rate, cgst) => {\r\n    let gst = 0\r\n    if (cgst && rate) {\r\n      gst = (cgst * rate) / 100\r\n      gst = Number(gst)\r\n      gst = gst.toFixed(2)\r\n      return gst\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  const Disc = (rate, dis) => {\r\n    let disrate = 0\r\n    if (rate && dis) {\r\n      disrate = (rate * dis) / 100\r\n      return disrate\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  const SubmitExcel = () => {\r\n    if (Tableref.current.files[0].type == \"application/vnd.ms-excel\") {\r\n      let SelectedFile = Tableref.current.files[0]\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(SelectedFile)\r\n      reader.onload = (e) => {\r\n        setExceldata(e.target.result)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.failure('Choose Only Excel File to Upload')\r\n    }\r\n  }\r\n  const ConvertExcel = async () => {\r\n\r\n    let e = []\r\n    if (vendorid == 2) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { 'type': 'buffer' });\r\n        const ExcelSheet = Excelfile.SheetNames[0]\r\n        const Sheet = Excelfile.Sheets[ExcelSheet]\r\n        const data = XLSX.utils.sheet_to_json(Sheet)\r\n        console.log(data)\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = data[i].EXPIRY.replace('/', '-20')\r\n          expiry = '01-' + expiry\r\n          expiry = reversefunction(expiry)\r\n          let CpU = Number(data[i].SRATE)\r\n          CpU = data[i]['CGST'] ? CpU + Number(CalGST(CpU, data[i]['CGST'])) + Number(CalGST(CpU, data[i]['SGST'])) : CpU\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS))\r\n          CpU = Number(CpU).toFixed(2)\r\n          let ITEMID = await searchmedAuto(data[i]['ITEM NAME'])\r\n          console.log(ITEMID)\r\n\r\n          MedicineentriesObj = {\r\n            type: '',\r\n            Itemid: '',\r\n            Itemname: data[i]['ITEM NAME'],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: manufdate,\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i]['F.QTY'],\r\n            Discount: '',\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i]['SGST'],\r\n            sgst: CalGST(data[i].SRATE, data[i]['SGST']),\r\n            cgstper: data[i]['CGST'],\r\n            cgst: CalGST(data[i].SRATE, data[i]['CGST']),\r\n            igstper: CalGST(data[i].SRATE, data[i]['IGST']),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: CpU * data[i].QTY.toFixed(2)\r\n          }\r\n          e.push(MedicineentriesObj)\r\n          console.log(e)\r\n        }\r\n      }\r\n    }\r\n    if (vendorid == 4 || vendorid == 3) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { 'type': 'buffer' });\r\n        const ExcelSheet = Excelfile.SheetNames[0]\r\n        const Sheet = Excelfile.Sheets[ExcelSheet]\r\n        const data = XLSX.utils.sheet_to_json(Sheet)\r\n        console.log(data)\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = '20' + data[i].EXPYEAR\r\n          expiry = expiry + (data[i].EXPMONTH < 10 ? '-' + '0' + data[i].EXPMONTH : '-' + data[i].EXPMONTH)\r\n          expiry = expiry + (data[i].EXPDAY < 10 ? '-' + '0' + data[i].EXPDAY : data[i].EXPDAY)\r\n          let CpU = Number(data[i].SRATE)\r\n          CpU = data[i]['CGST'] ? CpU + Number(CalGST(CpU, data[i]['CGST'])) + Number(CalGST(CpU, data[i]['SGST'])) : CpU\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS))\r\n          CpU = Number(CpU).toFixed(2)\r\n          // let mfddate = data[i].INVYEAR\r\n          // mfddate = mfddate + (data[i].INVMONTH < 10 ? '-' + '0' + data[i].INVMONTH : '-' + data[i].INVMONTH)\r\n          // mfddate = mfddate + (data[i].INVDAY < 10 ?  ('-' + '0' + data[i].INVDAY) :'-'+ data[i].INVDAY)\r\n          // console.log(mfddate)\r\n          MedicineentriesObj = {\r\n            type: '',\r\n            Itemid: '',\r\n            Itemname: data[i]['ITEM NAME'],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: '',\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i]['F.QTY'],\r\n            Discount: '',\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i]['SGST'],\r\n            sgst: CalGST(data[i].SRATE, data[i]['SGST']),\r\n            cgstper: data[i]['CGST'],\r\n            cgst: CalGST(data[i].SRATE, data[i]['CGST']),\r\n            igstper: CalGST(data[i].SRATE, data[i]['IGST']),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: (CpU * data[i].QTY).toFixed(2)\r\n          }\r\n          e.push(MedicineentriesObj)\r\n        }\r\n      }\r\n    }\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr(e)\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, e])\r\n    }\r\n  }\r\n\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == 'block') {\r\n      setNewMed('none')\r\n    }\r\n    if (NewMed == 'none') {\r\n      setNewMed('block')\r\n    }\r\n  }\r\n  console.log(vendorid, vendorsearch)\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0\" style={{ zIndex: '2' }}>\r\n      <div className=\"container-fluid bg-seashell border border-2 border-top-0 border-start-0 border-end-0 \">\r\n        <div className=\"row p-0 m-0 p-2\">\r\n          <div className=\"col-1\">\r\n            <button type=\"button\" className=\"btn-close closebtn m-auto mt-2\" onClick={props.toggle_npef} aria-label=\"Close\" ></button>\r\n          </div>\r\n          <div className=\"col-8 col-md-7 col-lg-8 col-xl-8\">\r\n            <h5 className=\"text-center mt-2\"> New Purchase Entry </h5>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\" >\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button disabled={MedicineentriesArr == undefined || MedicineentriesArr && MedicineentriesArr.length == 0 ? true : false} className=\"button button-charcoal\" onClick={() => { confirmmessage(MedicineentriesArr, vendorname) }}>Save All</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <button className='button button-burntumber' onClick={ClearFields}>Clear All</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid p-0 m-0 entrydetails bg-pearl\" style={{ Height: '90vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className={`col-${vendorid ? '8' : '12'} p-0 m-0`}>\r\n\r\n            <div className=\"row p-0 m-0 align-items-center\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"\" checked={channel == 1 ? true : false} value='1' onClick={(e) => { setchannel(e.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Pharmacy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"\" checked={channel == 2 ? true : false} value='2' onClick={(e) => { setchannel(e.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Clinic</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8 p-0 m-0\">\r\n              <div className=\"row p-0 m-0 gx-2 gy-1\">\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select PO</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder=\"Enter PO\" value={po ? po : ''} onChange={(e) => { setpo(e.target.value) }} style={{ zIndex: '5' }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Vendor</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder='Search Vendors' value={vendorname ? vendorname : ''} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setvendorcode() }} />\r\n                  <div ref={vendorsref} className='position-absolute ms-2 rounded-2 bg-pearl col-2' style={{ zIndex: '5' }} >\r\n                    {\r\n                      vendorsearch ? (\r\n                        loadvendors ? (\r\n                          <div className='rounded-2 p-1 bg-pearl mt-1 border shadow' style={{ width: 'fit-content' }}>\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"></span>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          vendorsearch.length == 0 ? (\r\n                            <div className=\"bg-burntumber text-light rounded-2 p-2\">Oops! Not Avaliable</div>\r\n                          ) : (\r\n                            <div className='bg-pearl border shadow rounded-2 p-1' style={{ zIndex: '40', width: 'fit-content' }}>\r\n                              {\r\n                                vendorsearch.map((data, i) => (\r\n                                  <div style={{ cursor: 'pointer' }} className={`p-0 p-1 d-${vendorsearch == undefined || vendorsearch.length > 0 ? '' : 'none'}  bg-${((i % 2) == 0) ? 'pearl' : 'lightblue'} fs-6 `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); setvendorcode(data.state_code); filterclinic(); vendorsref.current.style.display = 'none'; }}>{data.entity_name}</div>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          )\r\n                        )\r\n                      ) : (<></>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Number</h6>\r\n                  <input type=\"text\" placeholder=\"Enter No.\" className=\"form-control ms-2 rounded-1\" value={invoice ? invoice : ''} onChange={(e) => { setinvoice(e.target.value) }} style={{ color: \"gray\" }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Date</h6>\r\n                  <input type=\"date\" className=\"form-control ms-2 rounded-1\" value={invoicedate ? invoicedate : ''} onChange={(e) => { setinvoicedate(e.target.value) }} style={{ color: \"gray\" }} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row p-0 m-0 align-items-center mt-2\">\r\n                <div className=\"col-6 col-lg-5 col-md-5 p-0 m-0 align-self-center ms-1\">\r\n                  <button className=\"button button-charcoal m-0 p-0 py-1 px-4\" onClick={ToggleNewMedicine}> <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /> Medicine </button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                      <input ref={Tableref} className='form-control w-100 p-0 m-0 px-2 py-1 rounded-2 bg-pearl' onChange={SubmitExcel} type='file' />\r\n                    </div>\r\n                    <div className=\"col-5 text-end\">\r\n                      <button className='button button-lightyellow p-0 m-0 px-3 py-1' onClick={ConvertExcel}>Submit</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\" p-0 m-0 scroll scroll-y\" style={{ maxHeight: '50vh', Height: '50vh' }}>\r\n              <table className=\"table m-0 datatable bg-pearl text-start position-relative\">\r\n                <thead className=' bg-pearl position-sticky top-0' style={{ color: 'gray', fontWeight: '600' }}>\r\n                  <tr>\r\n                    <th>Edit</th>\r\n                    <th>Item ID</th>\r\n                    <th>Item Name</th>\r\n                    {/* <th>Manuf. Date</th> */}\r\n                    <th>batch No.</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>MRP</th>\r\n                    <th>Rate</th>\r\n                    <th>Total Disc</th>\r\n                    <th>Qty.</th>\r\n                    <th>Cost</th>\r\n                    <th>Amount</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  MedicineentriesArr ? (\r\n                    <tbody style={{ Height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      {\r\n                        MedicineentriesArr.map((item, _key) => (\r\n                          <tr key={_key} className={`bg-${_key % 2 == 0 ? 'lightred50' : 'pearl'}`}>\r\n                            <td><input type='checkbox' checked={_key == tableindex ? true : false} onClick={() => { indexing(_key) }} className='bg-seashell' /></td>\r\n                            <td>{item.Itemid}</td>\r\n                            <td>{item.Itemname}</td>\r\n                            {/* <td>{reversefunction(item.manufacturingDate)}</td> */}\r\n                            <td>{item.batchno}</td>\r\n                            <td>{reversefunction(item.expirydate)}</td>\r\n                            <td>{item.MRP}</td>\r\n                            <td>{item.Rate}</td>\r\n                            <td>{Number(item.Discount) + Number(item.tradeDiscount)}</td>\r\n                            <td>{item.Qty}</td>\r\n                            <td>{item.costperunit}</td>\r\n                            <td>{item.totalamount}</td>\r\n                            <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  ) : (\r\n                    MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                      <tbody className=\"position-relative bg-pearl text-center\" style={{ height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                        <tr >\r\n                          <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className=\"position-relative bg-pearl text-center\" style={{ height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                        <tr className=\"\"  >\r\n                          <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    )\r\n\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className={`col-4 m-0 p-0 scroll scroll-y border border-1 medicineinfosection d-${vendorid ? 'block' : 'none'} bg-seashell ps-2`} id='medicineinfosection' style={{ maxHeight: '81vh', Height: '81vh' }}>\r\n            <h5 className=\"mt-2\">Add Items</h5>\r\n            <div className=\"col-12\">\r\n              <div className=\" col-10 col-md-11\">\r\n                <div className='position-relative'>\r\n                  <label>Search Items </label>\r\n                  <input className='form-control bg-seashell' placeholder='Items' value={itemname ? itemname : ''} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemtype() }} />\r\n                  <div ref={medicinesref} className='position-absolute rounded-4 col-12' style={{ zIndex: '2' }}  >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className='rounded-2 p-1 bg-pearl'>\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span> </div>\r\n                          </div>\r\n                        ) : (\r\n                          itemsearch.length == 0 ? (\r\n                            <div className=\"bg-burntumber text-light rounded-2 p-1 text-wrap\">Oops! Not Avaliable</div>\r\n                          ) : (\r\n                            <div className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1 ? 'block' : 'none'}`}>\r\n                              <p className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 rounded-4 ps-2 `} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                              {\r\n                                itemsearch.map((data, i) => (\r\n                                  <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 text-wrap  bg-${((i % 2) == 0) ? '' : 'lightyellow'}`} name={data.id} onClick={(e) => { setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); setitemtype(data.vaccines_id ? 'v' : 'm'); medicinesref.current.style.display = 'none'; }}>{data.display_name ? data.display_name : data.name}</div>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          )\r\n                        )\r\n                      ) : (<></>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n                <label className=\"mb-2 pt-2\">Batch Number</label>\r\n                <input type=\"text\" max=\"10\" className=\"form-control bg-seashell batchnumber rounded-1\" id=\"inputEmail4\" placeholder=\"Batch Number\" value={batchno ? batchno : ''} onChange={(e) => setbatchno(e.target.value)} required />\r\n                <label className=\"pt-3 mb-2\">Expiry Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 expirydate\" value={expdate ? expdate : ''} onChange={(e) => { setexpdate(e.target.value) }} required />\r\n                <label className=\"pt-3 mb-2\">Manufacturing Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 manufacturingdate\" value={manufdate ? manufdate : ''} onChange={(e) => { setmanufdate(e.target.value) }} required />\r\n              </div>\r\n              <div className=\"col-12 form-group col-md-11 col-lg-11\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">MRP</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={mrp ? mrp : ''} onChange={(e) => { setmrp(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\"> Rate</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={rate ? rate : ''} onChange={(e) => { setrate(e.target.value); Calculate(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={qty ? qty : ''} onChange={(e) => { setqty(e.target.value); Calculate(rate, e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Free Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={freeqty ? freeqty : ''} onChange={(e) => { setfreeqty(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Discount &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={disc ? disc : ''} onChange={(e) => { setdisc(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5 pb-3\">\r\n                    <label className=\"mb-2\">Trade Disc. &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={trddisc ? trddisc : ''} onChange={(e) => { settrddisc(e.target.value) }} required />\r\n                  </div>\r\n                  <hr />\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'block' : 'none'}`}>\r\n                    <div className=\"row align-items-center p-0 m-0\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>SGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={sgst ? sgst : ''} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={sgstprcnt ? sgstprcnt : ''} onChange={(e) => { setsgstprcnt(e.target.value); setcgstprcnt(e.target.value); CalculateGst() }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'block' : 'none'}`}>\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2\">\r\n                        <h6>CGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" disabled={true} placeholder=\"00\" value={cgst ? cgst : sgst ? sgst : ''} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" disabled={true} placeholder=\"Rate\" value={cgstprcnt ? cgstprcnt : sgstprcnt ? sgstprcnt : ''} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'none' : 'block'}`}>\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>IGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={CalculateIGst() ? CalculateIGst() : ''} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={igstprcnt ? igstprcnt : ''} onChange={(e) => { setigstprcnt(e.target.value) }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"col-12 form-group\">\r\n                <div className=\"row p-0 m-0 g-3\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Cost/Unit</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell costunit rounded-1\" placeholder=\"00\" disabled value={CalculateCPU() ? CalculateCPU() : ''} onChange={(e) => { setcpu(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Total Amount</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell totalamount rounded-1\" placeholder=\"00\" disabled value={Calculate() ? Calculate() : ''} onChange={(e) => { settotalamt(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-6 py-3 m-auto text-center\">\r\n                {\r\n                  tableindex == -1 || tableindex == undefined ? (\r\n                    <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={InsertMedicines} > Add </button>\r\n                  ) : (\r\n                    <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={UpdateMedicines} > Update </button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`position-absolute top-0 start-0 end-0 d-${NewMed}`}>\r\n        <NewMedicine ToggleNewMedicine={ToggleNewMedicine} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nfunction Purchaseordersection() {\r\n  let cartselect = [\"Pharmacy\", \"Clinic\"];\r\n  const [cartselectindex, setcartselectindex] = useState(0);\r\n  const [displayviewcart, setdisplayviewcart] = useState(\"none\");\r\n  const [displayitemdetails, setdisplayitemdetails] = useState(\"none\");\r\n  const _displayviewcart = () => {\r\n    if (displayviewcart === \"none\") {\r\n      setdisplayviewcart(\"block\");\r\n    }\r\n    if (displayviewcart === \"block\") {\r\n      setdisplayviewcart(\"none\");\r\n    }\r\n  }\r\n  const _displayitemdetails = () => {\r\n    if (displayitemdetails === \"none\") {\r\n      setdisplayitemdetails(\"block\");\r\n    }\r\n    if (displayitemdetails === \"block\") {\r\n      setdisplayitemdetails(\"none\");\r\n    }\r\n  }\r\n  const _selectedcart = (cardindex) => {\r\n    if (cardindex === 0) {\r\n      return <table className=\"table datatable text-center\"><thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>Item Name</th>\r\n          <th>Total Qty</th>\r\n          <th>Amount</th>\r\n          <th>Last Vendor</th>\r\n          <th>Add</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n        <tbody>\r\n          {<Pharmacystocktable />}\r\n        </tbody>\r\n      </table>\r\n    }\r\n    if (cardindex === 1) {\r\n      return <div className=\"\">{cardindex}</div>\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button viewcart button-charcoal position-absolute\" onClick={_displayviewcart}><img src={process.env.PUBLIC_URL + \"/images/cartwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />View Cart</button>\r\n      <div className={`container-fluid pt-2  p-0 m-0 cartform d-${displayviewcart} w-50 border1 rounded bg-seashell position-absolute text-center`} >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">Items in Cart</h5>\r\n        </div>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={_displayviewcart}></button>\r\n        <div className=\"pt-1\">\r\n          <div className=\"row g-0 justify-content-center\">\r\n            {\r\n              cartselect.map((e, i) => {\r\n                return (\r\n                  <button className={`col-2 p-0 m-0 button text-${i === cartselectindex ? \"light\" : \"dark\"} bg-${i === cartselectindex ? \"charcoal\" : \"seashell\"} rounded-0`} onClick={(a) => setcartselectindex(i)}>{e}</button>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"scroll scroll-y\">\r\n          {_selectedcart(cartselectindex)}\r\n        </div>\r\n        <div className=\"bg-pearl rounded\">\r\n          <div className=\"row p-3 justify-content-between\">\r\n            <div className=\"col-3\">\r\n              <select className=\"form-control bg-pearl\" style={{ color: 'gray' }}>\r\n                <option selected disabled defaultValue='Select Vendor' className=\"Selectvendor\" style={{ color: 'gray' }}>Select Vendor</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button className=\"button button-charcoal\">Create New PO</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`container-fluid pt-2  p-0 m-0 itemdetailsform d-${displayitemdetails} w-50 border1 rounded bg-seashell position-absolute text-center`} >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">PO-14 Item Details</h5>\r\n        </div>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={_displayitemdetails}></button>\r\n        <div className=\"scroll scroll-y\">\r\n          {<POitemdetailsarray />}\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-lg text-center button-charcoal m-2\" onClick={_displayitemdetails}>Done</button>\r\n      </div>\r\n      <h3 className='ps-3'>Purchase Order List</h3>\r\n      <table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>PO ID</th>\r\n            <th>Channel</th>\r\n            <th>Vendor</th>\r\n            <th>PO Date</th>\r\n            <th>Created By</th>\r\n            <th>Total Items</th>\r\n            <th>Amount</th>\r\n            <th>Approval Status</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {<Purchaseorderarray itemdetails={_displayitemdetails} />}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\nfunction POitemdetailssection() {\r\n  return (\r\n    <table className=\"table datatable text-center\"><thead>\r\n      <tr>\r\n        <th>No.</th>\r\n        <th>Item Name</th>\r\n        <th>Total Qty</th>\r\n        <th>Amount</th>\r\n        <th>Last Vendor</th>\r\n        <th>Add</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n      <tbody>\r\n        {<POitemdetailsarray />}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\nfunction PurchaseReturns() {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [pridw, setpridw] = useState(\"none\");\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [purchasereturnarr, setpurchasereturnarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [tabindex, settabindex] = useState()\r\n\r\n  function GETPurchaseReturns(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpurchasereturnarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GETPurchaseReturns()\r\n  }, [channel, fromdate, todate])\r\n\r\n  const toggle_pridw = () => {\r\n    if (pridw === \"none\") {\r\n      setpridw(\"block\");\r\n    }\r\n    if (pridw === \"block\") {\r\n      setpridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function getnextpages(e) {\r\n    GETPurchaseReturns(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETPurchaseReturns(e.target.value - 1)\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Return</button>\r\n      <div classsName='p-0 m-0'>\r\n        <div className=\"row p-0 m-0 align-items-center justify-content-lg-between\">\r\n          <div className=\"col-3 col-md-2 col-lg-2 align-self-center text-center mb-2 text-charcoal fw-bolder fs-6\">Purchase Return </div>\r\n          <div className=\"col-auto align-self-center m-1 \">\r\n            <div className=\"row border-burntumber bg-pearl fw-bolder rounded-2 text-center justify-content-center \">\r\n              <div className=\"col-4\">\r\n                <select className='p-0 m-0 border-0 text-burntumber bg-pearl fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n                <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-4 text-burntumber fw-bolder bg-pearl rounded-2\">\r\n                <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 col-lg-2 col-md-2 align-self-center\">\r\n            <ExportPurchaseReturn purchasereturnarr={purchasereturnarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n          </div>\r\n        </div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '57vh', height: '57vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PR ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Distributor</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Amount</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Inventory</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '57vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n                </body>\r\n\r\n              ) : (\r\n                purchasereturnarr && purchasereturnarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      purchasereturnarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>PR-{item.return_no}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.return_date ? reversefunction(item.return_date) : ''}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.grand_total ? item.grand_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>\r\n                            {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                            <button className=\"btn\" onClick={() => { setindex(i); toggle_pridw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? pridw : 'none'} border border-1 start-0 end-0 bg-seashell p-0 m-0`} style={{ Height: '90vh', top: '-7.15rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <PRitemdetailssection purchasereturnarr={purchasereturnarr[i]} itembillid={\"PR-\" + item.return_no} toggle_pridw={toggle_pridw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Purchase Returns</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid my-1\">\r\n          <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n            <button className=\"btn p-0 m-0 me-2 px-1 \" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n            <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n              {\r\n                pages ? (\r\n                  pages.map((page, i) => (\r\n                    <button className={`button ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}   shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { settabindex(i); GETPurchaseReturns(i) }} key={i}>{page}</button>\r\n                  ))\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )\r\n\r\n              }\r\n            </div>\r\n\r\n            <button className={`btn border-charcoal p-0 m-0 px-1 ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`newreturnentrysection position-absolute bg-seashell border border-1 start-0 end-0  d-${nref}`} style={{ 'top': '-7.15rem', Height: '90vh' }}  >\r\n        {<NewPurchaseReturnentryform toggle_nref={toggle_nref} GETPurchaseReturns={GETPurchaseReturns} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction PRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  console.log(props.purchasereturnarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0 position-relative\">\r\n        <h5 className='text-center text-charcoal mt-3'>{props.itembillid} Purchase Return Item Details</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2 \" onClick={props.toggle_pridw} aria-label=\"Close\"></button>\r\n        <div className=\"col-2 d-none\">\r\n          <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n\r\n            <button className={`button border-charcoal rounded-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-end me-5 \">\r\n        <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', maxHeight: '70vh' }}>\r\n\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.purchasereturnarr.purchase_medicines && props.purchasereturnarr.purchase_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchasereturnarr.purchase_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-charcoal fw-bold text-center'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', maxHeight: '70vh' }}>\r\n\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchasereturnarr.purchase_vaccines && props.purchasereturnarr.purchase_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchasereturnarr.purchase_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-center fw-bold'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction NewPurchaseReturnentryform(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem('ClinicId')\r\n  const ClinicList = useContext(Clinic)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n\r\n  const [vendorname, setvendorname] = useState()\r\n  const [vendorid, setvendorid] = useState()\r\n  const [loadvendors, setloadvendors] = useState()\r\n  const [vendorsearch, setvendorsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([])\r\n  const [load, setload] = useState()\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0\r\n      costing = Number(cost) * Number(qtytotreturn)\r\n      return costing.toFixed(2)\r\n    } else {\r\n      return costing\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.cost,\r\n      totalcost: 0,\r\n      currentstock: data.current_stock,\r\n      qtytoReturn: 0,\r\n    }\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj])\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n    }\r\n  }\r\n  const searchmeds = async () => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/purchase/item/search/by/id?item=${itemname}&distributor_id=${vendorid}`).then((response) => {\r\n        console.log(response.data.data)\r\n        setitemsearch([response.data.data])\r\n        setloadsearch(false)\r\n        if (itemname.length >= 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  }\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true)\r\n    try {\r\n      await axios.get(`${url}/kyc/list?limit=10&offset=0&search=${search}`).then((response) => {\r\n        setvendorsearch(response.data.data)\r\n        setloadvendors(false)\r\n        if (search.length > 1) {\r\n          vendorsref.current.style.display = 'block';\r\n        } else {\r\n          vendorsref.current.style.display = 'none';\r\n        }\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  }\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = []\r\n    let Totalamount = []\r\n    let quantity = []\r\n\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(MedicineentriesArr[i].Itemid ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}` : '')\r\n      Totalamount.push(MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : '')\r\n      quantity.push(MedicineentriesArr[i].qtytoReturn ? MedicineentriesArr[i].qtytoReturn : '')\r\n    }\r\n\r\n    Totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal\r\n    }\r\n    console.log(Data)\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/purchase/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETPurchaseReturns()\r\n        setMedicineentriesArr()\r\n        setvendorname()\r\n        setvendorid()\r\n        setitemname()\r\n        setload(false)\r\n        props.toggle_nref()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setload(false)\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Purchase ${MedicineentriesArr.length <= 1 ? 'Return ' : 'Returns'} of Distributor ${vendorname}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveReturnEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  function Grand() {\r\n    let c = 0\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (\r\n        c += Number(data.totalcost)\r\n      ))\r\n    }\r\n    return c\r\n  }\r\n  return (\r\n    <div className=\"newpurchaseentryform p-0 m-0\">\r\n      <div className=\" p-0 m-0\">\r\n        <div className=\"container-fluid p-0 m-0 bg-seashell position-relative  \">\r\n          <h5 className=\"text-center mt-3\" style={{ color: \"var(--charcoal)\" }} >New Purchase Return Entry</h5>\r\n          <button type=\"button\" className=\"btn-close position-absolute end-0 closebtn me-2\" onClick={props.toggle_nref} aria-label=\"Close\" ></button>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-center\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Distributor</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder='Search Vendors' value={vendorname ? vendorname : ''} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setMedicineentriesArr([]) }} />\r\n              <div ref={vendorsref} className='position-absolute ms-2 rounded-2 bg-pearl col-2' style={{ display: 'none', zIndex: '1' }} >\r\n                {\r\n                  vendorsearch ? (\r\n                    loadvendors ? (\r\n                      <div className='rounded-2 p-1'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      vendorsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        vendorsearch.map((data, i) => (\r\n                          <div style={{ cursor: 'pointer' }} className={`p-0 p-1  bg-${((i % 2) == 0) ? 'pearl' : 'lightblue'} fs-6 `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); vendorsref.current.style.display = 'none'; }}>{data.entity_name}</div>\r\n                        ))\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className='position-relative'>\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className='form-control bg-seashell' placeholder='Product Id' value={itemname ? itemname : ''}\r\n                  onChange={(e) => {\r\n                    vendorid ? setitemname(e.target.value) : Notiflix.Notify.failure('Please Add Vendor First')\r\n                  }} />\r\n                <div ref={medicinesref} className='position-absolute rounded-2 bg-pearl col-12' style={{ zIndex: '1' }}>\r\n                  {\r\n                    itemsearch ? (\r\n                      loadsearch ? (\r\n                        <div className='rounded-2 p-1'>\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"> </span> </div>\r\n                        </div>\r\n                      ) : (\r\n                        itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                        ) : (\r\n                          itemsearch.map((data, i) => (\r\n                            <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'lightyellow'} fs-6 `} name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(data.item_name);\r\n                                InsertMedicines(data);\r\n                                medicinesref.current.style.display = 'none';\r\n                              }}>{data.item_name}</div>\r\n                          ))\r\n                        )\r\n                      )\r\n                    ) : (<div className='bg-seashell'></div>)\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className='p-0 m-0 btn' onClick={searchmeds}><img src={process.env.PUBLIC_URL + 'images/search.png'} style={{ width: '1.8rem' }} /></button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ Height: '65vh' }}>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead style={{ color: 'gray', fontWeight: '600' }}>\r\n                <tr>\r\n\r\n                  <th className='p-0 m-0 px-1'>Item ID</th>\r\n                  <th className='p-0 m-0 px-1'>Item Name</th>\r\n                  <th className='p-0 m-0 px-1'>batch No.</th>\r\n                  <th className='p-0 m-0 px-1'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-1'>Avl. Stock</th>\r\n                  <th className='p-0 m-0 px-1'>Qty to Return</th>\r\n                  <th className='p-0 m-0 px-1'>Purchase Rate/Unit</th>\r\n                  <th className='p-0 m-0 px-1'>Purchase Rate</th>\r\n                  <th className='p-0 m-0 px-1'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                MedicineentriesArr ? (\r\n                  <tbody style={{ maxHeight: '65vh', minHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                    {\r\n                      MedicineentriesArr.map((item, _key) => (\r\n                        <tr key={_key} className=''>\r\n                          <td>{item.Itemid}</td>\r\n                          <td>{item.Item}</td>\r\n                          <td>{item.batchno}</td>\r\n                          <td>{reversefunction(item.expirydate)}</td>\r\n                          <td>{item.currentstock}</td>\r\n                          <td className='p-0 m-0' style={{ 'width': '0px', 'height': '0px' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2' value={item.qtytoReturn ? item.qtytoReturn : ''}\r\n                              onChange={(e) => {\r\n                                e.target.value <= item.currentstock ? item.qtytoReturn = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\")\r\n                                item.totalcost = CalculateCost(item.cost, item.currentstock, e.target.value)\r\n                                setMedicineentriesArr(prevState => [...prevState])\r\n                              }} /></td>\r\n                          <td>{item.cost}</td>\r\n                          <td>{item.totalcost}</td>\r\n                          <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr className=\"\"  >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 rounded-bottom text-center bg-pearl align-items-center border border-1 py-3'>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grand()}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{MedicineentriesArr ? MedicineentriesArr.length : 0}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={confirmmessage}>Save Entry</button>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' >Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Purchasesection };\r\nexport { Purchaseordersection };\r\nexport { Purchaseentrysection };\r\nexport { POitemdetailssection };\r\nexport { PEitemdetailssection };\r\n\r\n\r\n//-------------------------------------------------------------------------Stock Info---------------------------------------------------------\r\n\r\nfunction Stocksection() {\r\n  let menu = [\"Vaccines\", \"Medicines\", \"Medicine List\"];\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return <div className=\"\"><Stockvaccinesection /></div>\r\n    }\r\n    if (_menu === 1) {\r\n      return <div className=\"\"><Stockmedicinesection /></div>\r\n    }\r\n    if (_menu === 2) {\r\n      return <div className=\"\"><MedicineList /></div>\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <section className='stocksection pt-1'>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row gx-3\">\r\n            <div className='row m-0 p-0'>\r\n              {\r\n                menu.map((e, i) => {\r\n                  return (\r\n                    <div className=\"col-auto\">\r\n                      <button className={`btn btn-sm px-4 rounded-5 text-${i === menuindex ? \"light\" : \"dark\"} bg-${i === menuindex ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setmenuindex(i)} >{e}</button>\r\n                    </div>\r\n                  )\r\n                }\r\n                )\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid pt-3'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedmenu(menuindex)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Stockvaccinesection() {\r\n  const url = useContext(URL)\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [vaccineslist, setvaccineslist] = useState([])\r\n  const [load, setload] = useState()\r\n  const [searchname, setsearchname] = useState('')\r\n  const [index, setindex] = useState()\r\n  const [detailsform, setdetailsform] = useState('none')\r\n\r\n  const GetVaccines = async (i) => {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setload(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&limit=20&offset=${i * 10}`).then((response) => {\r\n        console.log(response.data.data.vaccines)\r\n        setvaccineslist(response.data.data.vaccines)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setload(false)\r\n      }).catch(function error(e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        // setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      // setload(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetVaccines()\r\n  }, [searchname])\r\n  async function getnextpages(e) {\r\n    GetVaccines(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GetVaccines(e.target.value - 1)\r\n  }\r\n\r\n  const CalculateBStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.current_stock)\r\n    ))\r\n    return total\r\n  }\r\n  const CalculateTStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.qty)\r\n    ))\r\n    return total\r\n  }\r\n  const GetStatus = (data) => {\r\n    let currentstock = 0\r\n    data.stock_info.map((item) => (\r\n      currentstock += Number(item.current_stock)\r\n    ))\r\n    if (currentstock <= data.alert_stock_count) {\r\n      return 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  let c = 0\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == 'none') {\r\n      setdetailsform('block')\r\n    }\r\n    if (detailsform === 'block') {\r\n      setdetailsform('none')\r\n      setindex()\r\n    }\r\n  }\r\n  return (\r\n    <div className='p-0 m-0 vaccinestockinfo'>\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className='position-absolute searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Vaccine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n      </div>\r\n      <div className=' text-start text-charcoal p-2 ms-5 fw-bold'>Vaccine Stock Info</div>\r\n      <div className='scroll scroll-y' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}>\r\n        <table className=\"table datatable text-center\" >\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>ID</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Vaccine Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>B.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>T.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Status</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'></th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Inventory</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n\r\n              </tr>\r\n            ) : (\r\n              vaccineslist == undefined || vaccineslist.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Vaccines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    vaccineslist.map((data, i) => (\r\n                      <tr className={`align-middle text-center`}>\r\n                        <td className=' text-charcoal fw-bold'>{data.id}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateBStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateTStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{\r\n                          GetStatus(data) == 1 ? (\r\n                            <img src={process.env.PUBLIC_URL + 'images/exclamation.png'} style={{ 'width': '1.5rem' }} />\r\n                          ) : (<></>)\r\n                        }</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                          <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                        </td>\r\n                        <td className={` bg-${index == i ? 'lightred' : ''} p-0 m-0 text-charcoal fw-bold`}>\r\n                          <button className='btn p-0 m-0' onClick={() => { setindex(i); toggle_detailsform() }}>\r\n                            <img src={process.env.PUBLIC_URL + 'images/archivebox.png'} style={{ 'width': '1.5rem' }} />\r\n                          </button>\r\n                        </td>\r\n                        {\r\n                          index == i ? (\r\n                            <td className={`stockdetailsfrom bg-white border border-1 col-lg-10 rounded-4 shadow p-0 col-md-10 col-sm-10 col-10 col-xl-6 d-${index == i ? detailsform : 'none'} position-absolute start-0 end-0 top-0`}>\r\n                              <VaccinesectionItemDetails toggle_detailsform={toggle_detailsform} name={vaccineslist[i].name} data={vaccineslist[i].stock_info} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid my-1\">\r\n        <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n\r\n          <button className=\"btn p-0 m-0 border-charcoal px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n\r\n            {\r\n              pages ? (\r\n                pages.map((page, i) => (\r\n                  <button className={`button ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'} shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { GetVaccines(i) }} key={i}>{page}</button>\r\n                ))\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn p-0 m-0 border-charcoal px-1 ms-2 `} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction Stockmedicinesection() {\r\n  const url = useContext(URL)\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [vaccineslist, setvaccineslist] = useState([])\r\n  const [load, setload] = useState()\r\n  const [searchname, setsearchname] = useState('')\r\n  const [index, setindex] = useState()\r\n  const [detailsform, setdetailsform] = useState('none')\r\n\r\n  const GetVaccines = async (i) => {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setload(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&limit=20&offset=${i * 10}`).then((response) => {\r\n        console.log(response.data.data.medicines)\r\n        setvaccineslist(response.data.data.medicines)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setload(false)\r\n      }).catch(function error(e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        // setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      // setload(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetVaccines()\r\n  }, [searchname])\r\n  async function getnextpages(e) {\r\n    GetVaccines(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GetVaccines(e.target.value - 1)\r\n  }\r\n\r\n  const CalculateBStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.current_stock)\r\n    ))\r\n    return total\r\n  }\r\n  const CalculateTStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.qty)\r\n    ))\r\n    return total\r\n  }\r\n  const GetStatus = (data) => {\r\n    let currentstock = 0\r\n    data.stock_info.map((item) => (\r\n      currentstock += Number(item.current_stock)\r\n    ))\r\n    if (currentstock <= data.alert_stock_count) {\r\n      return 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  let c = 0\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == 'none') {\r\n      setdetailsform('block')\r\n    }\r\n    if (detailsform === 'block') {\r\n      setdetailsform('none')\r\n      setindex()\r\n    }\r\n  }\r\n  return (\r\n    <div className='p-0 m-0 vaccinestockinfo'>\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className='position-absolute searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Medicine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n      </div>\r\n      <div className='text-start ms-5 text-charcoal fw-bold p-2'>Medicine Stock Info</div>\r\n      <div className='scroll scroll-y p-0 m-0' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}>\r\n        <table className=\"table datatable text-center\" >\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>ID</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Medicine Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>B.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>T.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Status</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'></th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Inventory</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n              </tr>\r\n            ) : (\r\n              vaccineslist == undefined || vaccineslist.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Vaccines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    vaccineslist.map((data, i) => (\r\n                      <tr className={`align-middle text-center`}>\r\n                        <td className=' text-charcoal fw-bold'>{data.id}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateBStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateTStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{\r\n                          GetStatus(data) == 1 ? (\r\n                            <img src={process.env.PUBLIC_URL + 'images/exclamation.png'} style={{ 'width': '1.5rem' }} />\r\n                          ) : (<></>)\r\n                        }</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                          <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                        </td>\r\n                        <td className={` bg-${index == i ? 'lightred' : ''} p-0 m-0 text-charcoal fw-bold`}>\r\n                          <button className='btn p-0 m-0' onClick={() => { setindex(i); toggle_detailsform() }}>\r\n                            <img src={process.env.PUBLIC_URL + 'images/archivebox.png'} style={{ 'width': '1.5rem' }} />\r\n                          </button>\r\n                        </td>\r\n                        {\r\n                          index == i ? (\r\n                            <td className={`stockdetailsfrom bg-white border border-1 col-lg-10 rounded-4 shadow p-0 col-md-10 col-sm-10 col-10 col-xl-6 d-${index == i ? detailsform : 'none'} position-absolute start-0 end-0 top-0`}>\r\n                              <MedicinesectionItemDetails toggle_detailsform={toggle_detailsform} name={vaccineslist[i].name} data={vaccineslist[i].stock_info} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid my-1\">\r\n        <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n          <button className=\"button me-2 border-charcoal p-0 m-0 px-1\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n\r\n            {\r\n              pages ? (\r\n                pages.map((page, i) => (\r\n                  <button className={`btn ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}  shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { GetVaccines(i) }} key={i}>{page}</button>\r\n                ))\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn border-charcoal p-0 m-0 px-1 ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction VaccinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  return (\r\n    <div className=' p-0 m-0 position-relative bg-pearl rounded-4'>\r\n      <h6 className='text-center text-charcoal fw-bold pt-2'>{props.name}</h6>\r\n      <hr className='p-0 m-0' />\r\n      <button className='btn-close position-absolute end-0 top-0 p-1 m-1' onClick={props.toggle_detailsform}></button>\r\n      <div className='p-0 m-0 scroll'>\r\n        <table className='table text-center scroll'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Channel</th>\r\n              <th>Batch No.</th>\r\n              <th>Manuf. Date</th>\r\n              <th>Expiry Date</th>\r\n              <th>Avl Stock</th>\r\n              <th>MRP in Rs.</th>\r\n              <th>Cost in Rs.</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.data.map((Data) => (\r\n                <tr className='p-0 m-0 px-1'>\r\n                  <td className='p-0 m-0 px-1'>{Data.id ? 'v' + Data.id : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.channel == 1 ? 'Pharmacy' : 'Clinic'}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.batch_no ? Data.batch_no : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mfd_date ? reversefunction(Data.mfd_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.expiry_date ? reversefunction(Data.expiry_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.current_stock ? Data.current_stock : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mrp ? Data.mrp : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.cost ? Data.cost : ''}</td>\r\n                </tr>\r\n              ))\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction MedicinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  console.log(props.data)\r\n  return (\r\n    <div className=' p-0 m-0 position-relative bg-pearl rounded-4'>\r\n      <h6 className='text-center text-charcoal fw-bold pt-2'>{props.name}</h6>\r\n      <hr className='p-0 m-0' />\r\n      <button className='btn-close position-absolute end-0 top-0 p-1 m-1' onClick={props.toggle_detailsform}></button>\r\n      <div className='p-0 m-0 scroll'>\r\n        <table className='table text-center scroll'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Channel</th>\r\n              <th>Batch No.</th>\r\n              <th>Manuf. Date</th>\r\n              <th>Expiry Date</th>\r\n              <th>Avl Stock</th>\r\n              <th>MRP in Rs.</th>\r\n              <th>Cost in Rs.</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.data.map((Data) => (\r\n                <tr className='p-0 m-0 px-1'>\r\n                  <td className='p-0 m-0 px-1'>{Data.id ? 'm' + Data.id : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.channel == 1 ? 'Pharmacy' : 'Clinic'}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.batch_no ? Data.batch_no : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mfd_date ? reversefunction(Data.mfd_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.expiry_date ? reversefunction(Data.expiry_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.current_stock ? Data.current_stock : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mrp ? Data.mrp : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.cost ? Data.cost : ''}</td>\r\n                </tr>\r\n              ))\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction MedicineList() {\r\n  const url = useContext(URL)\r\n  const [limit, setlimit] = useState(12)\r\n  const [offset, setoffset] = useState(0)\r\n  const [stock, setstock] = useState([])\r\n  const [medicines, setmedicines] = useState([])\r\n  const [load, setload] = useState(false)\r\n  const [index, setindex] = useState()\r\n  const [NewMed, setNewMed] = useState('none')\r\n  const medcinelist = async () => {\r\n    setload(true)\r\n    try {\r\n      await axios.get(`${url}/medicine/list?limit=${limit}&offset=${offset}`).then((response) => {\r\n        setmedicines(response.data.data.medicine)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setload(false)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    medcinelist()\r\n  }, [offset])\r\n\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == 'block') {\r\n      setNewMed('none')\r\n      setindex()\r\n    }\r\n    if (NewMed == 'none') {\r\n      setNewMed('block')\r\n    }\r\n  }\r\n\r\n  const DeleteMedicine = async (medid) => {\r\n    try {\r\n      await axios.post(`${url}/medicine/delete`, {\r\n        id: medid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        console.log(response.data)\r\n        medcinelist()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  const confirmmessage = (name, medid) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to delete Medicine ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        DeleteMedicine(medid)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='text-start ms-5 text-charcoal fw-bold p-2'>Medicines List</div>\r\n      <div className='scroll scroll-y p-0 m-0' style={{ 'height': '57vh', minHeight: '65vh', maxHeight: '65vh' }}>\r\n        <table className=\"table datatable text-center\" >\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Update</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Display Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'> Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Salt Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>HSN Code</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Manufacturer</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n              </tr>\r\n            ) : (\r\n              medicines == undefined || medicines.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Medicines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    medicines.map((data, i) => (\r\n                      <tr className={`bg-${i % 2 == 0 ? 'seashell' : 'pearl'} align-middle text-center`}>\r\n                        <td className={`py-0 bg-${index === i ? 'lightyellow' : ''}`}>\r\n                          <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { ToggleNewMedicine(); setindex(i) }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" style={{ width: \"1.5rem\" }} key={i} />\r\n                          </button>\r\n                        </td>\r\n                        <td className=' text-charcoal fw-bold'>{data.display_name && data.display_name !== null ? data.display_name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.salt_name && data.salt_name !== null ? data.salt_name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.hsn_code && data.hsn_code !== null ? data.hsn_code : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.manufacturer && data.manufacturer !== null ? data.manufacturer : ''}</td>\r\n                        <td><button className='btn p-0 m-0' onClick={() => { confirmmessage(data.name, data.id) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} style={{ width: '1.5rem' }} /></button></td>\r\n\r\n                        {\r\n                          index == i ? (\r\n                            <td className={` text-start  d-${index == i ? NewMed : 'none'} border position-absolute start-0 end-0 top-0 bg-seashell`} style={{ padding: 0, marginTop: '-7.15rem' }}>\r\n                              <UpdateMedicine ToggleNewMedicine={ToggleNewMedicine} data={medicines[i]} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"col-12 text-center d-flex p-0 m-0 justify-content-between  align-self-center\">\r\n        <button className='button button-charcoal p-0 m-0 px-3 py-1 ' disabled={offset == 0 ? true : false} onClick={() => { setoffset(offset - 12) }}>Previous</button>\r\n        <button className='button button-charcoal p-0 m-0 px-3 py-1' onClick={() => { setoffset(offset + 12) }}>Next</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport { Stocksection };\r\n\r\n\r\n\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customloading.jsx",["671"],[],"import React from 'react'\r\nimport '../../../css/bootstrap.css'\r\nimport Notiflix from 'notiflix';\r\n\r\nconst customloading = () => {\r\n  return (\r\n    Notiflix.Loading.init({\r\n        className: 'notiflix-loading',\r\n        zindex: 4000,\r\n        backgroundColor: 'transparent',\r\n        rtl: false,\r\n        fontFamily: 'Quicksand',\r\n        cssAnimation: true,\r\n        cssAnimationDuration: 400,\r\n        clickToClose: false,\r\n        customSvgUrl: null,\r\n        customSvgCode: null,\r\n        svgSize: '80px',\r\n        svgColor: '#f2f2f2',\r\n        messageID: 'NotiflixLoadingMessage',\r\n        messageFontSize: '15px',\r\n        messageMaxLength: 34,\r\n        messageColor: '#f2f2f2',\r\n        })\r\n  )\r\n}\r\n\r\nexport  {customloading}","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Pharmacy_Dsr.jsx",["672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Appointments_Dsr.jsx",["734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext, useRef } from 'react'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport axios from \"axios\"\r\nimport { TodayDate, URL } from '../../index'\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst Appointments_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const Appointmentref = useRef()\r\n  const Pendingref = useRef()\r\n  const Advancedref = useRef()\r\n  //Use States\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [pendingpaid, setpendingpaid] = useState([])\r\n  const [advancepaid, setadvancepaid] = useState([])\r\n  const [visibles, setvisibles] = useState([])\r\n  const [loading, setloading] = useState()\r\n\r\n  // props.doctorid, props.fromdate, props.todate\r\n  let listdata = []\r\n  async function DSR_All_Appointments() {\r\n    setloading(true)\r\n    if (props.doctorid || props.fromdate || props.todate) {\r\n      try {\r\n        await axios.get(`${url}/DSR/appointments?from_date=${props.fromdate}&to_date=${props.todate}&admin_id=${adminid}&clinic_id=${props.clinicid}&doctor_id=${props.doctorid ? props.doctorid : ''}`).then((response) => {\r\n          response.data.data.appointments.map((data) => {\r\n            listdata.push(data.doctor.id)\r\n          })\r\n          setvisibles(listdata, [])\r\n          setAppointments(response.data.data.appointments)\r\n          setpendingpaid(response.data.data.pending_paid)\r\n          setadvancepaid(response.data.data.advance_payments)\r\n          setloading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setloading(false)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please select any one field to search\")\r\n      setloading(false)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    DSR_All_Appointments()\r\n  }, [])\r\n  useEffect(() => {\r\n    DSR_All_Appointments()\r\n  }, [props.doctorid, props.fromdate, props.todate])\r\n  // console.log(visibles)\r\n  // console.log(Appointments)\r\n\r\n  const reversefunction = (date) => {\r\n    if (date !== undefined) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n    }\r\n    return date\r\n  }\r\n  function tConvert(time) {\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function payment_method_detailsForCash() {\r\n    let casharr = []\r\n    let cash = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Cash != null) {\r\n        casharr.push(Number(JSON.parse(Appointments[i].payment_method_details).Cash))\r\n      }\r\n    }\r\n    if (casharr.length != 0) {\r\n      casharr.forEach(item => {\r\n        cash += item\r\n      })\r\n      return cash\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForCard() {\r\n    let cardarr = []\r\n    let card = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Card != null) {\r\n        cardarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Card))\r\n      }\r\n    }\r\n    if (cardarr.length != 0) {\r\n      cardarr.forEach(item => {\r\n        card += item\r\n      })\r\n      return card\r\n    }\r\n  }\r\n  function payment_method_detailsForPaytm() {\r\n    let paytmarr = []\r\n    let paytm = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Paytm != null) {\r\n        paytmarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Paytm))\r\n      }\r\n    }\r\n    if (paytmarr.length != 0) {\r\n      paytmarr.forEach(item => {\r\n        paytm += item\r\n      })\r\n      return paytm\r\n    }\r\n  }\r\n  function payment_method_detailsForRazorPay() {\r\n    let razorpayarr = []\r\n    let razorpay = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Razorpay != null) {\r\n        razorpayarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Razorpay))\r\n      }\r\n    }\r\n    if (razorpayarr.length != 0) {\r\n      razorpayarr.forEach(item => {\r\n        razorpay += item\r\n      })\r\n      return razorpay\r\n    }\r\n  }\r\n  function payment_method_detailsForPoints() {\r\n    let pointsarr = []\r\n    let points = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Points != null) {\r\n        pointsarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Points))\r\n      }\r\n    }\r\n    if (pointsarr.length != 0) {\r\n      pointsarr.forEach(item => {\r\n        points += item\r\n      })\r\n      return points\r\n    }\r\n  }\r\n  function payment_method_detailsForPhonepe() {\r\n    let phonepearr = []\r\n    let phonepe = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Phonepe != null) {\r\n        phonepearr.push(Number(JSON.parse(Appointments[i].payment_method_details).Phonepe))\r\n      }\r\n    }\r\n    if (phonepearr.length != 0) {\r\n      phonepearr.forEach(item => {\r\n        phonepe += item\r\n      })\r\n      return phonepe\r\n    }\r\n  }\r\n  function payment_method_detailsForWireTransfer() {\r\n    let wiretransferarr = []\r\n    let wiretransfer = 0\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details)['Wire-Transfer'] != null) {\r\n        wiretransferarr.push(Number(JSON.parse(Appointments[i].payment_method_details)['Wire-Transfer']))\r\n      }\r\n    }\r\n    if (wiretransferarr.length != 0) {\r\n      wiretransferarr.forEach(item => {\r\n        wiretransfer += item\r\n      })\r\n      return wiretransfer\r\n    }\r\n  }\r\n  function AdvancedAmountRecieved() {\r\n    let advancepayarr = []\r\n    let advancepay = 0\r\n    for (let i = 0; i < advancepaid.length; i++) {\r\n      advancepayarr.push(Number(advancepaid[i].credit_amount))\r\n    }\r\n    if (advancepayarr.length != 0) {\r\n      advancepayarr.forEach(item => {\r\n        advancepay += item\r\n      })\r\n      return advancepay\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function PendingAmountRecieved() {\r\n    let pendingpayarr = []\r\n    let pendingpay = 0\r\n    for (let i = 0; i < pendingpaid.length; i++) {\r\n      pendingpayarr.push(Number(pendingpaid[i].paid_amount))\r\n    }\r\n    if (pendingpayarr.length != 0) {\r\n      pendingpayarr.forEach(item => {\r\n        pendingpay += Number(item)\r\n      })\r\n      return pendingpay\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function TotalPendingPayment() {\r\n    let totalpendingarr = []\r\n    let totalpending = 0;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      for (let j = 0; j < Appointments[i].pending_payments.length; j++) {\r\n        if (Appointments[i].pending_payments[j].is_paid == 0) {\r\n          totalpendingarr.push(JSON.parse(Appointments[i].pending_payments[j].pending_amount))\r\n        }\r\n      }\r\n    }\r\n    if (totalpendingarr.length != 0) {\r\n      totalpendingarr.forEach(item => {\r\n        totalpending += item\r\n      })\r\n      return totalpending\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function GrandTotal() {\r\n    let grandtotalarr = []\r\n    let grandtotal = 0;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n\r\n      grandtotalarr.push(JSON.parse(Appointments[i].total_amount))\r\n\r\n    }\r\n    if (grandtotalarr.length != 0) {\r\n      grandtotalarr.forEach(item => {\r\n        grandtotal += item\r\n      })\r\n    }\r\n    return grandtotal\r\n  }\r\n  function SumExtraCharges(i) {\r\n    let ExtraChargeSumarr = []\r\n    let sum = 0\r\n    Appointments[i].other_charges.map((data) => (\r\n      ExtraChargeSumarr.push(data.amount)\r\n    ))\r\n\r\n    ExtraChargeSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  function SumPendingpayments(i) {\r\n    let PendingPaymentsSumarr = []\r\n    let sum = 0\r\n\r\n    Appointments[i].pending_payments.map((data) => {\r\n      if (data.is_paid == 0) {\r\n        PendingPaymentsSumarr.push(data.pending_amount)\r\n      }\r\n    })\r\n    PendingPaymentsSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n\r\n  return (\r\n    <div className='Appointments_Dsrsection'>\r\n      <div>\r\n        <div className=\"row p-0 m-0 justify-content-around \">\r\n          <div className=' col-5 col-lg-3 col-md-4 col-sm-5 CARD1 scroll shadow-sm rounded-2'>\r\n            <h6 className=\"text-burntumber ms-3 mt-2\">Payment Methods</h6>\r\n            <table className='w-100'>\r\n              <thead>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n              </thead>\r\n              <tbody>\r\n                <tr className='border-bottom'>\r\n                  <td className='px-2'>Cash:{payment_method_detailsForCash()}</td>\r\n                  <td className='px-2'>Card:{payment_method_detailsForCard()}</td>\r\n                  <td className='px-2'>WireTransfer:{payment_method_detailsForWireTransfer()}</td>\r\n                </tr>\r\n                <tr className='border-bottom'>\r\n                  <td className='px-2'>PhonePay:{payment_method_detailsForPhonepe()}</td>\r\n                  <td className='px-2'>Points:{payment_method_detailsForPoints()}</td>\r\n                  <td className='px-2'> RazorPay:{payment_method_detailsForRazorPay()}</td>\r\n                </tr>\r\n                <tr className='border-bottom'>\r\n                  <td className='px-2'>Paytm{' '}{payment_method_detailsForPaytm()} </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-4 col-sm-5 col-5 CARD2 shadow-sm rounded-2\" style={{ maxWidth: '60vh' }}>\r\n            <h6 className='text-brandy p-0 ms-3 mt-2'>Amounts</h6>\r\n            <div className='bg-lightyellow scroll ps-2 border-bottom py-2'>\r\n              <table className='w-100'>\r\n                <thead>\r\n                  <th></th>\r\n                  <th></th>\r\n                </thead>\r\n                <tbody>\r\n                  <tr >\r\n                    <td className=' border-end border-2 border-dark pe-2 fw-bold '>\r\n                      Recieved\r\n                    </td>\r\n                    <td className='px-1'>\r\n                      Advance Amount:{AdvancedAmountRecieved()}\r\n                    </td>\r\n                    <td className='px-1'>\r\n                      Pending Amount:{PendingAmountRecieved()}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className='bg-raffia border-bottom py-1 scroll'>\r\n              <table className='w-100'>\r\n                <thead>\r\n                  <th></th>\r\n                  <th></th>\r\n                </thead>\r\n                <tbody>\r\n                  <tr >\r\n                    <td className=' border-end border-2 border-dark pe-2 fw-bold '>\r\n                      Total Amt.\r\n                    </td>\r\n                    <td className='px-1 '>\r\n                      Pending:<span className='fw-bold text-danger'>{TotalPendingPayment()}</span>\r\n                    </td>\r\n                    <td className='px-1'>\r\n                      Grand:<span className='fw-bold text-success'>{GrandTotal()}</span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"accordion mt-4\" id=\"accordionExample\">\r\n        <div className=\"accordion-item p-0 m-0\" ref={Appointmentref}>\r\n          <h5 className=\"accordion-header p-0 m-0\" id=\"headingOne\">\r\n            <button className=\"accordion-button p-0 m-0 py-1\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              <h6 className='p-0 m-0 text-burntumber text-center fw-semibold p-0 m-0 '> Total Appointments :{Appointments.length}</h6>\r\n              <DownloadTableExcel\r\n                filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Appointments`}\r\n                sheet=\"Appointments\"\r\n                currentTableRef={Appointmentref.current}\r\n              >\r\n                <button className='btn p-0 m-0 ms-5 text-charcoal fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} /> Export</button>\r\n\r\n              </DownloadTableExcel>\r\n            </button>\r\n          </h5>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className='container-fluid accordion-body scroll scroll-y bg-pearl p-0 m-0' style={{ maxHeight: '40vh', height: '40vh' }}>\r\n              <table className='table text-center bg-pearl'>\r\n                <thead className='position-sticky top-0 bg-pearl'>\r\n                  <tr className='bg-pearl'>\r\n                    <th className='py-0' rowspan='2'>Appointment Id</th>\r\n                    <th className='py-0' rowspan='2'>Bill no.</th>\r\n                    <th className='py-0' rowspan='2'>Name</th>\r\n                    <th className='py-0' rowspan='2'>Mobile</th>\r\n                    <th className='py-0' rowspan='2'>Doctor Name</th>\r\n                    <th className='py-0' rowspan='2'>Date</th>\r\n                    <th className='py-0' rowspan='2'>Time</th>\r\n                    <th className='py-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                    <th className='py-0' rowspan='2'>Consultation Amount</th>\r\n                    <th className='py-0' rowspan='2'>Procedure Amount</th>\r\n                    <th className='py-0' rowspan='2'>Extra Charges</th>\r\n                    <th className='py-0' rowspan='2'>Discount</th>\r\n                    <th className='py-0' rowspan='2'>CGST</th>\r\n                    <th className='py-0' rowspan='2'>SGST</th>\r\n                    <th className='py-0' rowspan='2'>Pending Amt.</th>\r\n                    <th className='py-0' rowspan='2'> Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-pearl py-0' scope='col'>Cash</th>\r\n                    <th className='bg-pearl py-0' scope='col'>Card</th>\r\n                    <th className='bg-pearl py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-pearl py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-pearl py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-pearl py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-pearl py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n\r\n                {\r\n                  loading ? (\r\n                    <tbody>\r\n                      <tr className='position-relative text-burntumber mt-1 m-auto'>\r\n                        <td className=' position-absolute start-0 end-0 text-charcoal75 mt-1'>Please be Patient while we are fetching Appointments</td></tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    Appointments.length == 0 ? (\r\n                      <tbody >\r\n                        <tr className='position-relative text-burntumber mt-1 m-auto'>\r\n                          <td className=' position-absolute start-0 end-0 text-charcoal fw-bold mt-1'>No Appointments</td></tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='align-items-center Appointment'>\r\n                        {\r\n                          Appointments.map((data, i) => (\r\n                            <tr className={`bg-${SumPendingpayments(i) > 0 ? 'lightred50' : ''}`}>\r\n                              <td className='py-0 m-0 py-1'>{data.id ? data.id : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1' key={i}>{data.bill_id && data.bill_id != null ? data.bill_id : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.patient && data.patient.phone_number != null ? data.patient.phone_number : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.doctor && data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.timeslot && data.timeslot.date && data.timeslot.date != null ? reversefunction(data.timeslot.date) : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.timeslot && data.timeslot.time_from && data.timeslot.time_from != null ? tConvert(data.timeslot.time_from) : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.doctor && data.doctor.consulationFee !== null ? data.doctor.consulationFee : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.procedure_cost && data.procedure_cost != null ? data.procedure_cost : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{SumExtraCharges(i)}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.discount && data.discount != null ? data.discount : 'N/A'}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.CGST}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.SGST}</td>\r\n                              <td className='py-0 m-0 py-1'>{SumPendingpayments(i)}</td>\r\n                              <td className='py-0 m-0 py-1'>{data.total_amount}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n                    )\r\n\r\n                  )\r\n                }\r\n\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" ref={Pendingref}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button p-0 m-0 py-1 collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              <h6 className='p-0 m-0 text-burntumber text-center fw-semibold '>Pending Payments Recieved: {pendingpaid.length}</h6>\r\n\r\n\r\n              <DownloadTableExcel\r\n                filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Appointments`}\r\n                sheet=\"Appointments\"\r\n                currentTableRef={Pendingref.current}\r\n              >\r\n                <button className='btn p-0 m-0 ms-5 text-charcoal fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} /> Export</button>\r\n\r\n              </DownloadTableExcel>\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className='container-fluid accordion-body scroll scroll-y p-0 m-0' style={{ maxHeight: '40vh', height: '40vh' }}>\r\n              <table className='table text-center'>\r\n                <thead className='bg-pearl position-sticky top-0'>\r\n                  <tr>\r\n                    <th className='py-0 my-0' rowspan='2'>Appointment Id</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Bill no.</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Name</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Mobile</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Doctor Name</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Appointment Date</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Payment Recieved Date</th>\r\n                    <th className='py-0 my-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Amount Received</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='py-0 my-0' scope='col'>Cash</th>\r\n                    <th className='py-0 my-0' scope='col'>Card</th>\r\n                    <th className='py-0 my-0' scope='col'>Paytm</th>\r\n                    <th className='py-0 my-0' scope='col'>Phonepe</th>\r\n                    <th className='py-0 my-0' scope='col'>Razorpay</th>\r\n                    <th className='py-0 my-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='py-0 my-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className='Pendingpay'>\r\n\r\n                  {\r\n                    pendingpaid.map((data, i) => (\r\n                      <tr key={i}>\r\n                        <td className='py-0 m-0 py-1'>{data.appointment && data.appointment.id != null ? data.appointment.id : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.id && data.id != null ? data.id : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.appointment && data.appointment != null && data.appointment.patient && data.appointment.patient.full_name != null ? data.appointment.patient.full_name : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.appointment && data.appointment != null && data.appointment.patient.phone_number && data.appointment.patient.phone_number != null ? data.appointment.patient.phone_number : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.appointment && data.appointment != null && data.appointment.doctor && data.appointment.doctor.doctor_name != null ? data.appointment.doctor.doctor_name : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.appointment && data.appointment != null && data.appointment.appointment_date != null ? reversefunction(data.appointment.appointment_date) : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.paid_date && data.paid_date != null ? reversefunction(data.paid_date) : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                        <td className='py-0 m-0 py-1'>{data.paid_amount}</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" ref={Advancedref}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button p-0 m-0 py-0 collapsed \" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              <h6 className='p-0 m-0 text-burntumber fw-semibold text-center '>Advanced Payments Recieved:{advancepaid.length}</h6>\r\n              <DownloadTableExcel\r\n                filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Appointments`}\r\n                sheet=\"Appointments\"\r\n                currentTableRef={Advancedref.current}\r\n              >\r\n                <button className=' btn p-0 m-0 ms-5 text-charcoal fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} /> Export</button>\r\n\r\n              </DownloadTableExcel>\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className='container-fluid accordion-body scroll scroll-y p-0 m-0' style={{ maxHeight: '40vh', height: '40vh' }}>\r\n              <table className='table text-center'>\r\n                <thead className='bg-pearl position-sticky top-0'>\r\n                  <tr>\r\n                    <th className='py-0 my-0' rowspan='2'>Credit ID</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Patient Name</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Doctor Name</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Mobile No.</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Description</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Date Recieved</th>\r\n                    <th className='py-0 my-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                    <th className='py-0 my-0' rowspan='2'>Amount Recieved</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0 my-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className='Advancepay'>\r\n\r\n                  {\r\n                    advancepaid.map((data, i) => (\r\n                      <tr key={i} className=''>\r\n                        <td className='py-0 py-1'>{data.id ? data.id : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.doctor && data.doctor.full_name != null ? data.doctor.full_name : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.patient && data.patient.phone_number !== null ? data.patient.phone_number : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.description && data.description != null ? data.description : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{reversefunction(data.date)}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                        <td className='py-0 py-1'>{data.credit_amount}</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport { Appointments_Dsr }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\Exports.jsx",["757","758","759","760","761","762","763","764","765","766","767","768"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\index.jsx",["769","770","771","772","773","774","775","776","777","778","779"],[],"//React \r\nimport React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { useState, useEffect } from \"react\";\r\nimport { createContext } from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n//Css\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport './css/dashboard.css';\r\nimport './css/appointment.css';\r\nimport './css/pharmacy.css';\r\nimport './css/login.css';\r\nimport { Navbar, Doctorsection, Appointments, Patients, Doctors, Pharmacy, DailySaleReport } from './App'\r\nimport { WelcomeLoader } from './components/features/WelcomeLoader'\r\n//Notiflix\r\nimport Notiflix from 'notiflix';\r\n//Context Apis\r\nconst TodayDate = createContext();\r\nconst URL = createContext();\r\nconst DoctorsList = createContext();\r\nconst Doctorapi = createContext();\r\nconst TodayDocs = createContext();\r\nconst Vitals = createContext();\r\nconst Clinic = createContext();\r\nconst Permissions = createContext()\r\n\r\nfunction Connectapp(props) {\r\n  const d = new Date();\r\n  const date = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();\r\n  const monthcount = d.getMonth() + 1 < 10 ? `0${d.getMonth() + 1}` : d.getMonth() + 1;\r\n  const yearcount = d.getFullYear();\r\n  var APIDate = `${yearcount}-${monthcount}-${date}`;\r\n  const url = 'https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect';\r\n  const [isWelcomeLoading, setisWelcomeLoading] = useState(0)\r\n  const [ConnectDoctorapi, setConnectDoctorapi] = useState([]);\r\n  let Doctorarray = [];\r\n  let TodayDoctors = [];\r\n  const [Loading, setLoading] = useState(false);\r\n  const [docapi, setdocapi] = useState([]);\r\n  const [todayDoc, settodaydoc] = useState([]);\r\n  let ClinicId = localStorage.getItem('ClinicId')\r\n  const [clinicid, setclinicid] = useState();\r\n  const [ischecked, setischecked] = useState()\r\n  const [cliniclist, setcliniclist] = useState([])\r\n  const [vitalslist, setvitalslist] = useState()\r\n\r\n  async function Clinics() {\r\n    await axios.get(`${url}/clinic/list`).then((response) => {\r\n      setcliniclist(response.data.data)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    Clinics()\r\n  }, [])\r\n\r\n  async function VitalsList() {\r\n    await axios.get(`${url}/vitals/list`).then((response) => {\r\n      setvitalslist(response.data.data.vitals)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    VitalsList()\r\n  }, [])\r\n  console.log(props.permissions)\r\n  let p = Object.values(props.permissions)\r\n  console.log(p)\r\n\r\n  async function fetchapi() {\r\n    try {\r\n      setLoading(true);\r\n      await axios.get(`${url}/doctor/list?clinic_id=${ClinicId}&limit=30&offset=0`).then(function (response) {\r\n        let tempArray = response.data.data;\r\n        setConnectDoctorapi(tempArray)\r\n        for (let i = 0; i < tempArray.length; i++) {\r\n          Doctorarray.push([tempArray[i].id, tempArray[i].doctor_name, tempArray[i].clinic_id, []]);\r\n          for (var j = 0; j < tempArray[i].month_timeslots.length; j++) {\r\n            if (tempArray[i].month_timeslots[j].date === APIDate) {\r\n              Doctorarray[i][3].push([[tempArray[i].month_timeslots[j].time_from], [tempArray[i].month_timeslots[j].booking_status], [tempArray[i].month_timeslots[j].id]])\r\n            }\r\n          }\r\n        }\r\n        for (var q = 0; q < Doctorarray.length; q++) {\r\n          if (Doctorarray[q][3].length !== 0) {\r\n            TodayDoctors.push(Doctorarray[q])\r\n            settodaydoc(TodayDoctors)\r\n          }\r\n        }\r\n        if (TodayDoctors.length === 0) {\r\n          TodayDoctors.push(['0', 'No Doctors Found', ['No Time Slots Found'], ['null']]);\r\n          settodaydoc(TodayDoctors);\r\n        }\r\n        setdocapi(Doctorarray);\r\n      });\r\n      setLoading(false);\r\n      setisWelcomeLoading(1)\r\n    } catch (e) {\r\n      setisWelcomeLoading(1)\r\n      Notiflix.Report.failure(\r\n        `${e.message}`,\r\n        'Please Check your Internet Connection and retry',\r\n        'Retry', (() => {\r\n          window.location.reload()\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [ClinicId])\r\n\r\n  async function Gomain() {\r\n    localStorage.setItem('ClinicId', clinicid)\r\n    setisWelcomeLoading(0)\r\n  }\r\n\r\n  return (\r\n    <div className='bg-pearl'style={{height:'100vh'}}>\r\n      {\r\n        isWelcomeLoading == 0 ? (\r\n          <>\r\n            <WelcomeLoader />\r\n          </>\r\n        ) : (\r\n          ClinicId == 'null' ? (\r\n            <div className='container w-50 text-center rounded-4 bg-pearl' style={{ marginTop: '10%' }}>\r\n              <img src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt='image' className='img-fluid p-0 m-0' style={{ width: '10rem' }} />\r\n              <h4>Select Clinic</h4>\r\n              {\r\n                cliniclist.map((data, i) => (\r\n                  <>\r\n                    <label><input type=\"checkbox\" className=\"radio form me-1\" checked={ischecked === i ? true : false} name={data.id} onClick={(e) => { setclinicid(e.target.name); setischecked(i); }} /> {data.title} {data.address}</label>\r\n                    <br /></>\r\n                ))\r\n              }\r\n              <button className='button button-burntumber my-4 pt-2' onClick={Gomain}>Submit</button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Permissions.Provider value={props.permissions} >\r\n                <Doctorapi.Provider value={ConnectDoctorapi}>\r\n                  <DoctorsList.Provider value={docapi}>\r\n                    <URL.Provider value={url}>\r\n                      <Clinic.Provider value={cliniclist}>\r\n                        <TodayDate.Provider value={APIDate}>\r\n                          <TodayDocs.Provider value={todayDoc}>\r\n                            <Vitals.Provider value={vitalslist}>\r\n                              <Router>\r\n                                <Navbar username={props.username} designation={props.designation} id={props.id} fetchapi={fetchapi} />\r\n                                <Routes>\r\n                                  <Route path='/' element={<Doctorsection id={props.id} fetchapi={fetchapi} todayDoc={todayDoc} Loading={Loading} docapi={docapi} />} />\r\n                                  <Route path='/Appointments' element={<Appointments id={props.id} fetchapi={fetchapi} />} />\r\n                                  <Route path='/Patients' element={<Patients id={props.id} />} />\r\n                                  <Route path='/Doctors' element={<Doctors id={props.id} docapi={docapi} />} />\r\n                                  <Route path='/DailySaleReport' element={<DailySaleReport id={props.id} cliniclist={cliniclist} docapi={docapi} />} />\r\n                                  <Route path='/Pharmacy' element={<Pharmacy id={props.id} />} />\r\n                                </Routes>\r\n                              </Router>\r\n                            </Vitals.Provider>\r\n                          </TodayDocs.Provider>\r\n                        </TodayDate.Provider>\r\n                      </Clinic.Provider>\r\n                    </URL.Provider>\r\n                  </DoctorsList.Provider>\r\n                </Doctorapi.Provider>\r\n              </Permissions.Provider>\r\n            </>\r\n          ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Switchpage() {\r\n  // const [auth, setauth] = useState(true);\r\n  const [email, setemail] = useState('flex');\r\n  const [next, setnext] = useState('none');\r\n  const [password, setpassword] = useState('none');\r\n  const [passvisibility, setpassvisibility] = useState('password');\r\n  const [load, setload] = useState()\r\n  const [permissions, setpermissions] = useState([])\r\n  // 'Access-Control-Allow-Methods': '*',\r\n  // \"Access-Control-Allow-Headers\": \"'Access-Control-Allow-Headers: Origin, Content-Type, X-Auth-Token'\",\r\n  const topassword = () => {\r\n    setpassword('flex');\r\n    setemail('none');\r\n  }\r\n  const toemail = () => {\r\n    setpassword('none');\r\n    setemail('flex');\r\n  }\r\n  const passwordvisibility = () => {\r\n    if (passvisibility === 'password') {\r\n      setpassvisibility('text');\r\n    }\r\n    if (passvisibility === 'text') {\r\n      setpassvisibility('password');\r\n    }\r\n  }\r\n  const [logininput, setlogininput] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  function handleinput(e) {\r\n    const logindata = { ...logininput };\r\n    logindata[e.target.id] = e.target.value;\r\n    setlogininput(logindata);\r\n  }\r\n  const localemail = localStorage.getItem(\"email\");\r\n  async function Submit() {\r\n    setload(true)\r\n    await axios.post('https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/login', {\r\n      email: localemail || logininput.email,\r\n      password: logininput.password\r\n    }).then((response) => {\r\n      setload(false)\r\n      if (response.data.status === true) {\r\n        localStorage.setItem('email', logininput.email);\r\n        localStorage.setItem('name', response.data.data.name);\r\n        localStorage.setItem('designation', response.data.data.roles.title);\r\n        localStorage.setItem('id', response.data.data.id);\r\n        localStorage.setItem('ClinicId', response.data.data.clinic_id)\r\n        setpermissions(response.data.data.roles.permissions)\r\n        Changepage()\r\n        // window.location.reload(true);\r\n\r\n      } else {\r\n        Notiflix.Report.failure(\r\n          'Invalid Credentials',\r\n          'Check your username password and try again',\r\n          'Retry',\r\n        )\r\n        setload(false)\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  console.log(permissions)\r\n  function Changepage() {\r\n    if (localemail !== null && localemail !== '') {\r\n      return <Connectapp username={localStorage.getItem('name')} designation={localStorage.getItem('designation')} id={localStorage.getItem('id')} permissions={permissions} />\r\n    } else {\r\n      return (\r\n  \r\n          <div className='loginform p-0 m-0'>\r\n            {/* <div className=\"navbar mb-5 justify-content-end\">\r\n              <img src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt='image' className=\"float-end img-fluid col-lg-1 col-3 me-lg-5 me-2\" />\r\n            </div> */}\r\n            <section className=\"signinsection\">\r\n              <div className=\" p-0 m-0 formsection \">\r\n                <h4 className='text-center text-charcoal fw-semibold mb-4'>Login to Aartas</h4>\r\n                <form autoComplete=\"off\" onSubmit={(e) => Submit(e)}>\r\n                  <div className=\"\">\r\n                    <div className={`row d-${email} justify-content-center p-0 m-0`} id=\"userinput\">\r\n                      <div className=\"col-1\"></div>\r\n                      <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 align-items-center d-flex userinput\">\r\n                        <p className=\"m-0 ms-1\" id=\"inputheading\">Enter your Aartas Email ID</p>\r\n                        <input type=\"email\" className=\"form-control bg-seashell\" id=\"email\" placeholder=\"example@aartas.com\" value={logininput.email} autoComplete=\"false\" onChange={(e) => { handleinput(e); if (e.target.value != '') { setnext('block'); } if (e.target.value == '') { setnext('none'); } }} />\r\n                      </div>\r\n                      <div className={`col-lg-1 d-flex  col-2 align-items-center`}>\r\n                        <a className={`next d-${next} text-decoration-none text-center text-charcoal p-2 rounded`} id=\"next\" onClick={topassword}>Next</a>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <div className={`row d-${password} justify-content-center`} id=\"passinput\">\r\n                      <div className=\"col-lg-1 col-2 col-md-1 align-items-center d-flex\">\r\n                        <a className=\"back text-decoration-none text-center p-2 rounded\" onClick={toemail}>Back</a>\r\n                      </div>\r\n                      {\r\n                        load ? (\r\n                          <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 py-1 pb-1 userinput text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                              <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                          </div>) : (\r\n                          <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 align-items-center d-flex userinput\">\r\n                            <p className=\"m-0\" id=\"inputheading\">Enter your Password</p>\r\n                            <input type={passvisibility} className=\"form-control bg-seashell\" id=\"password\" placeholder=\"examplepassword123\" autoComplete=\"new-password\" onChange={(e) => handleinput(e)} value={logininput.password} />\r\n                          </div>\r\n                        )\r\n                      }\r\n                      <div className=\"col-1 align-items-center justify-content-center d-flex\">\r\n                        <button type=\"button\" className=\" p-2 rounded submit text-center\" disabled={load == true ? true : false} onClick={Submit}>Submit</button>\r\n                      </div>\r\n                      <div className=\"col-12 p-0 m-0\">\r\n                        <div className=\"col text-center\">\r\n                          <input className=\"form-check-input\" onClick={passwordvisibility} type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\r\n                          <label className=\"form-check-label ms-2 text-charcoal\" htmlFor=\"flexCheckDefault\">Check Password</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-5 text-center d-none\"><a href=\"#\" className=\"text-decoration-none\">forgot password</a></div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </section>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    // <>\r\n    //   <div className='container-fluid loginform'>\r\n    //     <div className=\"navbar mb-5 justify-content-end\">\r\n    //       <img src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt='image' className=\"float-end img-fluid col-lg-1 col-3 me-lg-5 me-2\" />\r\n    //     </div>\r\n\r\n\r\n    //     <section className=\"signinsection mb-5\">\r\n    //       <div className=\"container rounded py-5 bg-light bg-opacity-75\">\r\n    //         <div className=\"container justify-content-center\">\r\n    //           <p className=\"text-center mt-2 m-auto\" id=\"text2\"><img src={process.env.PUBLIC_URL + \"/images/slogan2.png\"} className=\"img-fluid\" /></p>\r\n\r\n    //         </div>\r\n    //         <form autoComplete=\"off\" onSubmit={(e) => Submit(e)}>\r\n    //           <div className=\"mt-4\">\r\n    //             <div className={`row d-${email} justify-content-center mb-4`} id=\"userinput\">\r\n    //               <div className=\"col-1\"></div>\r\n    //               <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 align-items-center d-flex userinput\">\r\n    //                 <p className=\"m-0 ms-1\" id=\"inputheading\">Enter your Aartas Email ID</p>\r\n    //                 <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"example@aartas.com\" value={logininput.email} autoComplete=\"false\" onChange={(e) => { handleinput(e); if (e.target.value != '') { setnext('block'); } if (e.target.value == '') { setnext('none'); } }} />\r\n    //               </div>\r\n    //               <div className={`col-lg-1 d-flex  col-2 align-items-center`}>\r\n    //                 <a className={`next d-${next} text-decoration-none text-center p-2 rounded`} id=\"next\" onClick={topassword}>Next</a>\r\n    //               </div>\r\n\r\n    //             </div>\r\n    //             <div className={`row d-${password} justify-content-center`} id=\"passinput\">\r\n    //               <div className=\"col-lg-1 col-2 col-md-1 align-items-center d-flex\">\r\n    //                 <a className=\"back text-decoration-none text-center p-2 rounded\" onClick={toemail}>Back</a>\r\n    //               </div>\r\n    //               {\r\n    //                 load ? (\r\n    //                   <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 py-1 pb-1 userinput text-center\">\r\n    //                     <div class=\"spinner-border\" role=\"status\">\r\n    //                       <span class=\"visually-hidden\">Loading...</span>\r\n    //                     </div>\r\n    //                   </div>) : (\r\n    //                   <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 align-items-center d-flex userinput\">\r\n    //                     <p className=\"m-0\" id=\"inputheading\">Enter your Password</p>\r\n    //                     <input type={passvisibility} className=\"form-control\" id=\"password\" placeholder=\"examplepassword123\" autoComplete=\"new-password\" onChange={(e) => handleinput(e)} value={logininput.password} />\r\n    //                   </div>\r\n    //                 )\r\n    //               }\r\n    //               <div className=\"col-1 align-items-center justify-content-center d-flex\">\r\n    //                 <button type=\"button\" className=\" p-2 rounded submit text-center\" disabled={load == true ? true : false} onClick={Submit}>Submit</button>\r\n    //               </div>\r\n\r\n\r\n    //               <div className=\"col-12\">\r\n    //                 <div className=\"col text-center\">\r\n    //                   <input className=\"form-check-input\" onClick={passwordvisibility} type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\r\n    //                   <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">Check Password</label>\r\n    //                 </div>\r\n    //               </div>\r\n    //               <div className=\"col-5 text-center\"><a href=\"#\" className=\"text-decoration-none\">forgot password</a></div>\r\n\r\n    //             </div>\r\n    //           </div>\r\n    //         </form>\r\n    //       </div>\r\n    //     </section>\r\n    //   </div>\r\n    // </>\r\n\r\n    Changepage()\r\n\r\n  )\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <Switchpage />\r\n);\r\n// ReactDOM.render(<Switchpage />, document.getElementById(\"root\"));\r\n\r\nexport { TodayDate, URL, DoctorsList, Doctorapi, TodayDocs, Vitals, Clinic, Permissions };","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\NewMedicine.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\UpdateMedicine.jsx",["780"],[],"import axios from 'axios'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport '../../css/bootstrap.css'\r\n\r\nconst UpdateMedicine = (props) => {\r\n  const url = useContext(URL)\r\n  const [displayname, setdisplayname] = useState()\r\n  const [name, setname] = useState()\r\n  const [saltname, setsaltname] = useState()\r\n  const [manufacturer, setmanufacturer] = useState()\r\n  const [strength, setstrength] = useState()\r\n  const [unit, setunit] = useState()\r\n  const [pack, setpack] = useState()\r\n  const [packtype, setpacktype] = useState()\r\n  const [mfid, setmfid] = useState()\r\n  const [schedule, setschedule] = useState()\r\n  const [hsn, sethsn] = useState()\r\n  const [rack, setrack] = useState()\r\n  const [maxsc, setmaxsc] = useState()\r\n  const [minsc, setminsc] = useState()\r\n  const [altsc, setaltsc] = useState()\r\n  const [img, setimg] = useState('')\r\n  const data = props.data\r\n  const FillDetails = async () => {\r\n    setdisplayname(data.display_name)\r\n    setname(data.name)\r\n    setsaltname(data.salt_name)\r\n    setmanufacturer(data.manufacturer)\r\n    setstrength(data.strength)\r\n    setunit(data.medicine_unit)\r\n    setpack(data.packaging)\r\n    setpacktype(data.packaging_type_id)\r\n    setmfid(data.medicine_form_id)\r\n    setschedule(data.schedule)\r\n    sethsn(data.hsn_code)\r\n    setrack(data.rack_number)\r\n    setmaxsc(data.max_stock_count)\r\n    setminsc(data.min_stock_count)\r\n    setaltsc(data.alert_stock_count)\r\n    setimg(data.image)\r\n\r\n  }\r\n  useEffect(() => {\r\n    FillDetails()\r\n  }, [])\r\n  const handleimage = async (e) => {\r\n    console.log(e.target.files)\r\n    if (e.target.files.length !== 0) {\r\n      setimg(e.target.files)\r\n    }\r\n\r\n  }\r\n  const UpdateMedicine = async () => {\r\n    const Data = {\r\n      medicine_id:data.id,\r\n      display_name: displayname,\r\n      name: name,\r\n      salt_name: saltname,\r\n      manufacturer: manufacturer,\r\n      strength: strength,\r\n      medicine_unit: Number(unit),\r\n      packaging: pack,\r\n      packaging_type_id: Number(packtype),\r\n      medicine_form_id: Number(mfid),\r\n      schedule: schedule,\r\n      hsn_code: hsn,\r\n      rack_number: rack,\r\n      max_stock_count: Number(maxsc),\r\n      min_stock_count: Number(minsc),\r\n      alert_stock_count: Number(altsc),\r\n      image:img ?  {\r\n        name:img[0].name,\r\n        size:img[0].size,\r\n        type:img[0].type,\r\n        webkitRelativePath:img[0].webkitRelativePath,\r\n        lastModifiedDate:img[0].lastModifiedDate,\r\n        lastModified:img[0].lastModified\r\n\r\n      } :''\r\n    }\r\n    console.log(props.data)\r\nconsole.log(props.data.id)\r\n    try {\r\n      await axios.post(`${url}/medicine/update`, Data).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to Update ${data.display_name} Details`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        UpdateMedicine()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  if (img !== null) {\r\n    console.log(img[0])\r\n  }\r\n  console.log(data)\r\n  return (\r\n    <div className='position-relative bg-seashell p-0 m-0'>\r\n      <h5 className='p-0 m-0 text-center py-2 border-bottom'>Update Medicine</h5>\r\n      <button className='btn btn-close position-absolute end-0 top-0 mt-1 me-1' onClick={props.ToggleNewMedicine}></button>\r\n      <div className='scroll scroll-y' style={{ height: '78vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Basic Details</p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Display Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={displayname ? displayname : ''} onChange={(e) => { setdisplayname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={name ? name : ''} onChange={(e) => { setname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Salt Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={saltname ? saltname : ''} onChange={(e) => { setsaltname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Manufacturer</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={manufacturer ? manufacturer : ''} onChange={(e) => { setmanufacturer(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end mt-3\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Other Details  </p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Strength</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={strength ? strength : ''} onChange={(e) => { setstrength(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Unit</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={unit ? unit : ''} onChange={(e) => { setunit(e.target.value) }}>\r\n                <option>Select Unit</option>\r\n                <option value='1'>mg</option>\r\n                <option value='2'>ml</option>\r\n                <option value='3'>mcg</option>\r\n                <option value='4'>g</option>\r\n                <option value='5'>%</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={pack ? pack : ''} onChange={(e) => { setpack(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging Type</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={packtype ? packtype : ''} onChange={(e) => { setpacktype(e.target.value) }}>\r\n                <option>Select Packaging Type</option>\r\n                <option value='1'>Strip</option>\r\n                <option value='2'>Tube</option>\r\n                <option value='3'>Bottle</option>\r\n                <option value='4'>Syringe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Form</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={mfid ? mfid : ''} onChange={(e) => { setmfid(e.target.value) }}>\r\n                <option>Select Medicine form</option>\r\n                <option value=\"1\" >tablet</option>\r\n                <option value=\"2\" >capsule</option>\r\n                <option value=\"3\" >liquid</option>\r\n                <option value=\"4\">topical</option>\r\n                <option value=\"5\" >cream</option>\r\n                <option value=\"6\" >device</option>\r\n                <option value=\"7\" >drop</option>\r\n                <option value=\"8\" >foam</option>\r\n                <option value=\"9\" >gel</option>\r\n                <option value=\"10\" >inhaler</option>\r\n                <option value=\"11\" >injection</option>\r\n                <option value=\"12\" >lotion</option>\r\n                <option value=\"13\" >ointment</option>\r\n                <option value=\"14\" >patch</option>\r\n                <option value=\"15\" >powder</option>\r\n                <option value=\"16\" >spray</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Schedule</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={schedule ? schedule : ''} onChange={(e) => { setschedule(e.target.value) }} >\r\n                <option>Select Schedule</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"H\" >H</option>\r\n                <option value=\"X\" >X</option>\r\n                <option value=\"J\" >J</option>\r\n                <option value=\"A\" >A</option>\r\n                <option value=\"B\" >B</option>\r\n                <option value=\"C\" >C</option>\r\n                <option value=\"D\" >D</option>\r\n                <option value=\"E\" >E</option>\r\n                <option value=\"F\" >F</option>\r\n                <option value=\"K\" >K</option>\r\n                <option value=\"M\" >M</option>\r\n                <option value=\"N\" >N</option>\r\n                <option value=\"O\" >O</option>\r\n                <option value=\"P\" >P</option>\r\n                <option value=\"Q\" >Q</option>\r\n                <option value=\"R\" >R</option>\r\n                <option value=\"S\" >S</option>\r\n                <option value=\"T\" >T</option>\r\n                <option value=\"U\" >U</option>\r\n                <option value=\"V\" >V</option>\r\n                <option value=\"Y\">Y</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-center mt-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Choose Medicine Photo</p>\r\n          <div className=\"col-4 ms-5\">\r\n            <input type='file' className='form-control bg-seashell p-0 m-0 px-2 py-1' onChange={(e) => { handleimage(e) }} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-end mt-3 mb-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>HSN Code and Count</p>\r\n          <div className=\"col-12\">\r\n            <p className='p-0 m-0'>HSN Code</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={hsn ? hsn : ''} onChange={(e) => { sethsn(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Rack Number</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={rack ? rack : ''} onChange={(e) => { setrack(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Max. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={maxsc ? maxsc : ''} onChange={(e) => { setmaxsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Min. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={minsc ? minsc : ''} onChange={(e) => { setminsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Alert Stock Count </p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={altsc ? altsc : ''} onChange={(e) => { setaltsc(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='bg-pearl border p-3 align-items-center '>\r\n        <div className=\"row p-0 m-0 text-center justify-content-between align-items-center align-self-center\">\r\n\r\n          <div className=\"col-6\">\r\n            <button className='button button-charcoal ' onClick={confirmmessage}>Update</button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button className='button button-seashell' onClick={FillDetails}>Set Previous</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { UpdateMedicine }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\UpdateAppointment.jsx",["781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState()\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want yo update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center mt-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"col-12 location bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-center text-charcoal `}>\r\n                                <img className='mb-1' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                {data.title} {data.address}</div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal  bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12 bg-seashell\"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal'>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-charcoal50-outline shadow-none' >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                    <button className='btn px-5 button-charcoal' onClick={confirmmessage}>Done</button>\r\n                                </div>\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                    <button className=\"btn btn-light px-5 border \" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedTimeAppointment.jsx",["805","806","807","808","809","810","811","812","813","814"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate, Clinic } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css'\r\n\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL);\r\n    const cliniclist = useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n\r\n\r\n    // Functions\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    const get_value = (data) => {\r\n        setsearchinput(data.full_name)\r\n        setpatientid(data.id)\r\n        setdisplaysearchlist('none');\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && props.DoctorID && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: props.DoctorID,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message);\r\n                setload(false)\r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n    // Functions\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment  at <span className=' text-charcoal fw-bold border-0'>{tConvert(props.selectedtime)}</span></h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <hr className='p-0 m-0 mb-1' />\r\n            <div className=\" text-start ms-3 \">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><img src={process.env.PUBLIC_URL + '/images/location.png'} className='mb-2' style={{ width: '1.3rem' }} /> {data.title} {data.address}</label>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control bg-pearl border-0\" value={searchinput ? searchinput : ''} onChange={(e) => { searchpatient(e); }} />\r\n                    <div className={`col-6 position-absolute scroll  d-${displaysearchlist} rounded-2 `} style={{ maxHeight: '3.2rem' }}>\r\n                        {\r\n                            searchload ? (\r\n                                <p className=\"btn col-9 text-charcoal75 bg-pearl p-0 m-0 ps-1 mt-1\">Loading... </p>\r\n                            ) : (\r\n                                searchlist.length == 0 ? (\r\n                                    <p className=\"text-burntumber col-9 p-0 m-0 bg-pearl shadow rounded mt-1 p-2\">Patient not found</p>\r\n                                ) : (\r\n                                    <div className='mt-1 shadow rounded-2 bg-pearl border border-1 col-9 '>\r\n                                        {\r\n                                            searchlist.map((data, i) => (\r\n                                                <div className={` bg-${i % 2 == 0 ? 'lightred50' : 'pearl'} text-charcoal text-start ps-2 border-bottom align-self-center`} name={data.id} value={data.full_name} onClick={() => { get_value(data) }}>{data.full_name} {data.phone_number}</div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"d-flex p-0 m-0 text-start justify-content-around\">\r\n                        <button className='button button-charcoal-outline border-0 '>{props.DoctorID}. Dr.{props.DoctorName}</button>\r\n                        <input type=\"date\" disabled value={APIDate} className=\" bg-seashell border-0 text-charcoal text-center\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {\r\n                load ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"button button-charcoal\" onClick={BookAppointment}> Done </button>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Payments.jsx",["815","816","817","818","819","820","821","822","823","824","825","826"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.Appointmentlist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                    pendings.push(props.appointmentdata[i].pending_payments[j])\r\n                }\r\n            }\r\n\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                if (props.appointmentid == props.appointmentdata[i].id) {\r\n                    if (props.appointmentdata[i].pending_payments[j].is_paid == 0) {\r\n                        pendingid = props.appointmentdata[i].pending_payments[j].id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    console.log(advancepaymentmethods)\r\n    return (\r\n        <div className=' p-0 m-0'>\r\n            <h5 className=''>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.ClosePaymentsForm}></button>\r\n            <div className=\"d-flex justify-content-center p-0 m-0 gx-2 mt-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 text-center d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h5 className='text-burntumber fw-bolder mt-3 mb-1'>Advance Payments from {props.patientname}</h5>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n                            <div className='row align-items-center p-0 m-0'>\r\n                                <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                                <input className=' col-6 p-0 m-0 form-control w-50 text-center bg-seashell ' value={advancepaid.advnace_total} />\r\n                                <hr />\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <hr/>\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-3'>Add Advance Payment</h5>\r\n                <label className='text-charcoal fw-bold'>Description</label>\r\n                <input type='text' className='form-control p-0 m-0 p-1 w-75 bg-seashell mb-3 mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                <label className='text-charcoal fw-bold'>Select Payment Method</label>\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2  justify-content-center\">\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container-fluid text-center mt-2\">\r\n                    <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                </div>\r\n                <button className='button button-burntumber mt-4 mb-2' disabled={Description?false:true} onClick={AddadvancePaymentMethods}>Save</button>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} text-center`}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h5 className='fw-bolder text-burntumber'>Previous Paid Pending Payments</h5>\r\n                                <div className='p-0 m-0 scroll scroll-y'>\r\n                                    <table className=' p-0 m-0 table text-center'>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='border p-0 m-0 px-1' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Cash</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Card</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Paytm</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Phonepe</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Razorpay</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Wire-Transfer</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={` text-center d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='border'>{data.paid_amount}</td>\r\n                                                        <td className='border'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='border'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} text-center`}>\r\n                                            <h5 className='text-burntumber fw-bolder mt-2'>Pending Remains</h5>\r\n                                            <div className=' bg-danger text-light fw-bolder fs-5 text-center' >{Data.pending_amount}</div>\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={`text-center`}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-center\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                                <button className='button button-burntumber mt-4 mb-2'  onClick={UpdatePendingPayments}>Save</button>\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <div className='rounded-2 bg-lightgreen fw-bolder p-2 my-4'>No Pending Payments Found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Vitals.jsx",["827","828","829","830","831","832","833","834","835","836","837","838","839","840"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    // console.log(vitalid, vitalupdatevalue, appointmentvitalid, props.appointmentid, props.patientid)\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  // console.log(props.appointmentvitalslist)\r\n  return (\r\n    <div className='bg-seashell rounded-2 position-relative pb-4'>\r\n      <h5 className='p-1 text-center'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 m-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} style={{ width: '1.5rem' }} /></button>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '><h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6></div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0 align-self-end\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row p-0 m-0 justify-content-center mt-2\">\r\n              <div className=\"col-4 p-0 m-0\">\r\n                <select className='  border-0 text-center bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 rounded-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0\">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-1\"></div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <button className='button button-charcoal' onClick={props.CloseVitals}>Done</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\UpdateAppointment.jsx",["841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [load, setload] = useState()\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n            settrigger(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        props.fetchallAppointmentslist()\r\n                        props.closeappointmentform()\r\n                        setload(false)\r\n                        props.fetchapi()\r\n                        Notiflix.Notify.success(response.data.message);\r\n\r\n                    } else {\r\n                        setload(false)\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=' text-start position-relative p-0 m-0'>\r\n            <h5 className=\"text-center\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" disabled={load == true ? true : false} onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n             \r\n                <div className=\"col-12 bg-seashell align-self-center  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <label key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} `}><img src={process.env.PUBLIC_URL + '/images/location.png'} style={{width:'1.5rem'}}/> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr className='p-0 m-0 my-1' />\r\n                <div className=\"row p-0 m-0 ms-5\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control button-charcoal-outline\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" ref={dateref} className=\"form-control border-charcoal bg-seashell\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-lg-3 col-3\">\r\n                        <label>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-charcoal50 shadow-none' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoa50 m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className='btn px-5 button-charcoal' onClick={confirmmessage}>Done</button>\r\n                            </div>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\AllAppointmentslist.jsx",["863","864","865","866","867","868","869","870","871","872","873","874"],[],"import React from 'react'\r\nimport { useState, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport '../../../node_modules/bootstrap/js/dist/dropdown'\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Bill } from './Bill'\r\nimport '../../css/appointment.css'\r\nimport '../../css/bootstrap.css'\r\nimport '../../../node_modules/bootstrap/js/dist/dropdown'\r\nimport { Payments } from './Payments.jsx'\r\nimport Notiflix from 'notiflix';\r\n//COntext APIs\r\nimport { URL } from '../../index'\r\n\r\nconst AllAppointmentslist = (props) => {\r\n    const url = useContext(URL);\r\n    let adminid = localStorage.getItem('id')\r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    const [paymentsform, setpaymentsform] = useState('none')\r\n    const [paymentindex, setpaymentindex] = useState()\r\n    const [tableindex, settableindex] = useState()\r\n    const [billindex, setbillindex] = useState()\r\n    const [billform, setbillform] = useState('none')\r\n\r\n    const closeappointmentform = () => {\r\n        if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\");\r\n            settableindex()\r\n        }\r\n    };\r\n    const openapppointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\");\r\n        }\r\n    }\r\n    const toggle_payments = () => {\r\n        if (paymentsform === 'none') {\r\n            setpaymentsform('block')\r\n        }\r\n        if (paymentsform === 'block') {\r\n            setpaymentsform('none')\r\n            setpaymentindex()\r\n        }\r\n    }\r\n    const toggle_bill = () => {\r\n        if (billform === 'none') {\r\n            setbillform('block')\r\n        }\r\n        if (billform === 'block') {\r\n            setbillform('none')\r\n            setbillindex()\r\n        }\r\n    }\r\n    const reversefunction = (date) => {\r\n        if(date){\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    async function UpadteStatus(e) {\r\n        if (e.target.value && adminid && e.target.name) {\r\n            try {\r\n                Notiflix.Loading.circle('Updating Appointment Status', {\r\n                    backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                    svgColor: '#96351E'\r\n                }\r\n                )\r\n                await axios.post(`${url}/appointment/change/status`, {\r\n                    appointment_id: e.target.name,\r\n                    status: e.target.value,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    props.fetchallAppointmentslist()\r\n                    Notiflix.Loading.remove()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                Notiflix.Loading.remove()\r\n            }\r\n        } else {\r\n            Notiflix.Notify.alert('Please try Again')\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n    console.log(paymentindex)\r\n    return (\r\n        <>\r\n            {\r\n                props.isLoading == true ? (\r\n\r\n                    <div className='container position-absolute start-0 end-0' >\r\n                        <h4>Hold on its Loading</h4>\r\n                        <div className=\"spinner-grow bg-secondary col-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (props.getAppointments.length == 0 ? (\r\n\r\n                    <div className=\"container text-charcoal fs-4 position-absolute start-0 end-0\">\r\n                        <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n                    </div>\r\n\r\n                ) : (\r\n\r\n                    props.getAppointments.map((data, key) => (\r\n                        <tr id={key} key={key} className='align-middle'>\r\n                            <td className={`bg-${tableindex == key ? 'lightyellow' : ''}`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} onClick={(e) => { openapppointmentform(); settableindex(key) }} className=\"btn p-0 m-0\" />\r\n                            </td>\r\n                            <td>\r\n                                <select className={`fw-bold py-1 rounded-pill text-center button-${props.status_color(data.appointment_status)}`} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                    <option className=\"button\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                                    <option className=\"button-lightred\" value='1'>Pending</option>\r\n                                    <option className=\"button-lightblue\" value='2'>Booked</option>\r\n                                    <option className=\"button-lightred\" value='3'>Cancelled</option>\r\n                                    <option className=\"button-pearl\" value='4'>QR Generated</option>\r\n                                    <option className=\"button-brandy\" value='5'>Checked_in</option>\r\n                                    <option className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                                    <option className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                                    <option className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                                    <option className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                                    <option className=\"button-lightgreen\" value='10'>Completed</option>\r\n                                </select>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>{data.patient != null && data.patient.full_name != null ? data.patient.full_name : ''}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.timeslot && data.timeslot.date !==null ? reversefunction(data.timeslot.date):''}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.timeslot && data.timeslot.time_from !==null ? props.tConvert(data.timeslot.time_from):''}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.total_amount && data.total_amount!==null? data.total_amount:data.total_amount}</td>\r\n                            <td className='text-charcoal fw-bold'><AmountPaid appointmentData={data} /></td>\r\n                            <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                                <div className='vr rounded-2 h-100 align-self-center py-3' style={{ padding: '1px' }}></div>\r\n                            </td>\r\n                            <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td>\r\n                            <td>{reversefunction(data.follow_up_date ? data.follow_up_date : '')}</td>\r\n                            <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td>\r\n                            <td><div className=\"dropdown text-decoration-none\">\r\n                                <button className=\"btn btn-white dropdown-toggle text-decoration-none\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                                </button>\r\n                                <ul className=\"dropdown-menu text-decoration-none p-0 m-0\" style={{ '-webkit-appearance': 'none' }}>\r\n                                    <li className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}><img className='m-2 img-fluid' style={{ 'width': '1.8rem' }} src={process.env.PUBLIC_URL + 'images/bill.png'} />Bill</li>\r\n                                    <li className='dropdown-item d-flex  p-0 m-0 align-items-center' onClick={() => { setpaymentindex(key); toggle_payments(); }}><img className='m-2 img-fluid' style={{ 'width': '1.6rem' }} src={process.env.PUBLIC_URL + 'images/rupee.png'} />Payments</li>\r\n                                    {/* <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li> */}\r\n                                </ul>\r\n                            </div></td>\r\n                            {\r\n                                tableindex == key ? (\r\n                                    <td className={` d-${tableindex == key ? appointmentform : 'none'} bg-seashell col-lg-8 col-xl-5 col-md-8 col-sm-10 start-0 end-0  mx-auto top-0 border border-1 rounded-3 position-absolute`} style={{ zIndex: '3',marginTop:'10rem' }}>\r\n                                        <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} closeappointmentform={closeappointmentform} doctorid={props.doctorid} fetchapi={props.fetchapi} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} />\r\n                                    </td>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                billindex == key ? (\r\n                                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 top-0 col-sm-12 col-10 col-xl-6 border border-2 rounded-2 shadow position-absolute`} style={{ zIndex: '3', marginTop: '6rem' }}>\r\n                                        <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            toggle_bill={toggle_bill}\r\n                                            patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            appointmentid={data.id}\r\n                                            doctorfee={data.doctor.consulationFee} /></td>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                paymentindex == key ? (\r\n                                    <td className={`top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-10 col-10 col-xl-6 rounded-2 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                                        <Payments\r\n                                            toggle_payments={toggle_payments}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                    </td>\r\n                                ) : (<></>)\r\n                            }\r\n\r\n                        </tr>\r\n                    ))\r\n                )\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport { AllAppointmentslist }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedAppointments.jsx",["875","876","877","878","879","880","881","882","883","884","885"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Payments } from './Payments.jsx'\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport Notiflix from 'notiflix';\r\nimport { URL } from '../../index'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/appointment.css'\r\nimport { Bill } from './Bill'\r\n\r\nconst SelectedAppointments = (props) => {\r\n  const url = useContext(URL);\r\n  let adminid = localStorage.getItem('id')\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [d_form, setd_form] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [paymentindex, setpaymentindex] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n  const closeappointmentform = () => {\r\n\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      setd_form()\r\n    }\r\n  }\r\n  const toggle_payments = () => {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentindex()\r\n    }\r\n  }\r\n  const toggle_bill = () => {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n    if (billform === 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  const [tableindex, settableindex] = useState()\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Notiflix.Loading.circle('Updating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E'\r\n        }\r\n        )\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          props.fetchallAppointmentslist()\r\n          Notiflix.Loading.remove()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        alert(e)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  console.log(paymentindex)\r\n  return (\r\n    <>\r\n      {\r\n        props.isselectedLoading == true ? (\r\n          <div className='container position-absolute start-0 end-0'>\r\n            <h4>Hold on its loading</h4>\r\n            <div class=\"spinner-grow bg-danger col-2\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n\r\n          props.appointmentdata.length == 0 ? (\r\n            <div className=\"container text-charcoal fs-4 position-absolute start-0 end-0\">\r\n              <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n            </div>\r\n          ) : (\r\n\r\n            props.appointmentdata.map((data, key) => (\r\n              <tr id={key}>\r\n                <td>\r\n                  <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} onClick={(e) => { settableindex(key); openapppointmentform(); }} className=\"btn p-0 m-0\" />\r\n                </td>\r\n                <td>\r\n                  <select className={`py-1 fw-bold rounded-pill text-center button-${props.status_color(data.appointment_status)}`} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                    <option className=\"button\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                    <option className=\"button-lightred\" value='1'>Pending</option>\r\n                    <option className=\"button-lightblue\" value='2'>Booked</option>\r\n                    <option className=\"button-lightred\" value='3'>Cancelled</option>\r\n                    <option className=\"button-pearl\" value='4'>QR Generated</option>\r\n                    <option className=\"button-brandy\" value='5'>Checked_in</option>\r\n                    <option className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                    <option className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                    <option className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                    <option className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                    <option className=\"button-lightgreen\" value='10'>Completed</option>\r\n                  </select>\r\n                </td>\r\n                {/* <td><button className={`btn button-${props.status_color(data.appointment_status)} text-charcoal fw-bold rounded-5`}>{props.status(data.appointment_status)}</button></td> */}\r\n                <td>{data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                <td>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A'}</td>\r\n                <td>{data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"N/A\"}</td>\r\n                <td>{data.timeslot.date && data.timeslot.date !==null ? data.timeslot.date:''}</td>\r\n                <td>{props.tConvert(data.timeslot.time_from)}</td>\r\n                <td>{data.total_amount}</td>\r\n                <td><AmountPaid appointmentData={data} /></td>\r\n                <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                  <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </td>\r\n                <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td>\r\n                <td>{data.follow_up_date ? data.follow_up_date : ''}</td>\r\n                <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td>\r\n                <td><div className=\"dropdown text-decoration-none bg-transparent\">\r\n                  <button className=\"btn btn-white dropdown-toggle text-decoration-none\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                  </button>\r\n                  <ul className=\"dropdown-menu text-decoration-none bg-white\" style={{ '-webkit-appearance': 'none', 'appearance': 'none' }}>\r\n                    <li  className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}>Bill</li>\r\n                    <li  className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setpaymentindex(key); toggle_payments(); }}>Payments</li>\r\n                    {/* <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li> */}\r\n                  </ul>\r\n                </div></td>\r\n                {\r\n                  tableindex == key ? (\r\n                    <td className={`UpdateAppointment d-${tableindex == key ? appointmentform : 'none'} position-absolute`} style={{ top: '-10rem' }}>\r\n                      <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}\r\n                        patientid={data.patient && data.patient.id !== null ? data.patient.id : 'N/A'} appointmentid={data.id && data.id !== null ? data.id : 'N/A'}\r\n                        closeappointmentform={closeappointmentform} doctorid={props.doctorid ? props.doctorid : 'N/A'}\r\n                        fetchapi={props.fetchapi}\r\n                        appointmentdoctorid={data.doctor.id}\r\n                        appointmentdate={data.appointment_date}\r\n                        appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  billindex == key ? (\r\n                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 top-0 col-sm-12 col-12 col-xl-6 border border-2 rounded-2 shadow position-absolute`} style={{ zIndex: '3020', marginTop: '6rem' }}>\r\n                      <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        toggle_bill={toggle_bill}\r\n                        patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        appointmentdata={props.getAppointments[key]}\r\n                        appointmentid={data.id}\r\n                        doctorfee={data.doctor.consulationFee} /></td>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  paymentindex == key ? (\r\n                    <td className={`top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-10 col-10 col-xl-6 rounded-2 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                      <Payments\r\n                        toggle_payments={toggle_payments}\r\n                        appointmentdata={props.appointmentdata[key]}\r\n                        fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                    </td>\r\n                  ) : (<></>)\r\n                }\r\n\r\n              </tr>\r\n            ))\r\n          )\r\n        )\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SelectedAppointments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\WelcomeLoader.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\SearchField.jsx",["886","887"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport '../../css/dashboard.css'\r\nimport { AddAppointment } from '../Today/AddAppointment'\r\nimport { URL } from '../../index'\r\n\r\nconst SearchField = (props) => {\r\n    const url = useContext(URL)\r\n    const [searchload, setsearchload] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [patientname, setpatientname] = useState()\r\n    \r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    async function searchpatient() {\r\n        setsearchload(true)\r\n        setpatientid();\r\n        setpatientname();\r\n        await axios.get(`${url}/patient/list?search=${props.searchtext}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (props.searchtext && props.searchtext.length > 1) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        searchpatient()\r\n    }, [props.searchtext])\r\n\r\n    const get_value = (e) => {\r\n        setpatientid(e.target.name);\r\n        setpatientname(e.target.value);\r\n        toggleappointmentform()\r\n    }\r\n    const toggleappointmentform = () => {\r\n      if (appointmentform === \"none\") {\r\n        setappointmentform(\"block\");\r\n      } else if (appointmentform === \"block\") {\r\n        setappointmentform(\"none\");\r\n      }\r\n    };\r\n    return (\r\n        <>\r\n        <div className={`col-12 d-${displaysearchlist} searchlist bg-pearl rounded-2 p-0 m-0`} style={{ minHeight: '4rem' }}>\r\n            {\r\n                searchload ? (\r\n                    <div className=\"row p-0 m-0 text-charcoal75 fs-6 rounded-2\" style={{width:'50vh'}}>Loading... </div>\r\n                ) : (\r\n                    searchlist.length == 0 ? (\r\n                        <div className=\"text-danger btn fs-6 p-0 m-0\" style={{width:'50vh'}}>Patient not found. Add as new to book appointments</div>\r\n                    ) : (\r\n                        searchlist.map((data) => (\r\n                            <div className='row p-0 m-0 bg-pearl p-1 border-top rounded-bottom' style={{width:'50vh'}}>\r\n                                <div className=\"col-9 col-xl-9 col-lg-9 p-0 m-0\">\r\n                                    <button className=' p-0 m-0 border-0 text-charcoal bg-pearl text-start' >{data.full_name} {data.phone_number}</button>\r\n                                </div>\r\n                                <div className=\"col-auto col-xl-auto col-lg-auto p-0 m-0 align-self-center justify-content-center\">\r\n                                    <button className=\"button button-burntumber border-0 p-0 m-0 px-1\" name={data.id} value={data.full_name} onClick={(e) => get_value(e)} style={{fontSize:'0.8rem' }}>+Appointment</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )))\r\n\r\n                )\r\n\r\n            }\r\n        </div>\r\n        <div className={`rounded-4 bg-seashell end-0 appointmentinfosection d-${appointmentform} border-start border-top border-2 position-absolute`} style={{width:'30rem',top:'-2rem'}} >\r\n        <AddAppointment fetchapi={props.fetchapi} toggleappointmentform={toggleappointmentform} patientidfromsearch={patientid} patientnamefromsearch={patientname}/>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { SearchField }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\livetime.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Timer.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddDoctorSlot.jsx",["888","889","890","891","892","893","894"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs,Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2'>\r\n      <h5 className=\"text-center mt-2\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>{data[0]}.{data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className=\"radio form me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"btn done px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddPatient.jsx",["895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\n//Context APis\r\nimport { URL } from '../../index'\r\n//Google maps\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Css\r\nimport '../../css/bootstrap.css'\r\n\r\nconst AddPatient = (props) => {\r\n    const url = useContext(URL);\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState('1')\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const [load, setload] = useState()\r\n\r\n    const d = () => {\r\n        if (main == 1) {\r\n            console.log(main)\r\n            setdisplay('flex')\r\n        }\r\n        if (main == 2) {\r\n            console.log(main)\r\n            setdisplay('none')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    const resetform = async () => {\r\n        setfullname()\r\n        setphonenumber()\r\n        setDOB()\r\n        setemail()\r\n        setaddress()\r\n        setplace()\r\n        setpincode()\r\n        setcountrycode()\r\n    }\r\n\r\n\r\n    let adminid = localStorage.getItem('id')\r\n    async function NewPatient(e) {\r\n        if (fullname && countrycode && phonenumber && DOB && gender && email && address && pincode && place && main && adminid) {\r\n            setload(true)\r\n            await axios.post(`${url}/add/patient`, {\r\n                full_name: fullname,\r\n                phone_country_code: countrycode,\r\n                phone_number: phonenumber,\r\n                dob: DOB,\r\n                gender: gender,\r\n                email: email,\r\n                address: address,\r\n                pin_code: pincode,\r\n                location: place,\r\n                is_main: main,\r\n                latitude: lat,\r\n                longitude: lng,\r\n                relation: main == 2 ? relation : '',\r\n                link_id: main == 2 ? linkid : '',\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                console.log(response)\r\n                Notiflix.Notify.success(response.data.message);\r\n                props.togglepatientform()\r\n                resetform(e)\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n\r\n        }\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(() => {\r\n        data === \"\" ? setData(\"\") : setData(data);\r\n        setplace(data.label)\r\n    }, [data]);\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to add ${fullname} as a New Patient`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NewPatient()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2 position-relative\"> Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.togglepatientform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countrycode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countrycode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countrycode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countrycode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countrycode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countrycode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countrycode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countrycode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countrycode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countrycode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countrycode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countrycode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countrycode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countrycode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countrycode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countrycode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countrycode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countrycode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countrycode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countrycode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countrycode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countrycode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countrycode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countrycode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countrycode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countrycode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countrycode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countrycode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countrycode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countrycode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countrycode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countrycode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countrycode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countrycode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countrycode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countrycode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countrycode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countrycode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countrycode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countrycode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countrycode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countrycode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countrycode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countrycode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countrycode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countrycode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countrycode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countrycode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countrycode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countrycode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countrycode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countrycode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countrycode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countrycode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countrycode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countrycode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countrycode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countrycode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countrycode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countrycode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countrycode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countrycode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countrycode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countrycode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countrycode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countrycode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countrycode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countrycode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countrycode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countrycode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countrycode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countrycode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countrycode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countrycode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countrycode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countrycode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countrycode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countrycode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countrycode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countrycode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countrycode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countrycode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countrycode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countrycode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countrycode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countrycode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countrycode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countrycode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countrycode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countrycode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countrycode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countrycode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countrycode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countrycode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countrycode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countrycode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countrycode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countrycode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countrycode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countrycode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countrycode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countrycode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countrycode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countrycode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countrycode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countrycode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countrycode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countrycode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countrycode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countrycode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countrycode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countrycode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countrycode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countrycode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countrycode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countrycode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countrycode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countrycode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countrycode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countrycode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countrycode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countrycode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countrycode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countrycode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countrycode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countrycode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countrycode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countrycode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countrycode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countrycode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countrycode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countrycode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countrycode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countrycode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countrycode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countrycode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countrycode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countrycode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countrycode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countrycode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countrycode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countrycode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countrycode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countrycode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countrycode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countrycode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countrycode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countrycode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countrycode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countrycode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countrycode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countrycode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countrycode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countrycode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countrycode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countrycode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countrycode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countrycode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countrycode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countrycode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countrycode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countrycode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countrycode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countrycode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countrycode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countrycode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countrycode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countrycode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countrycode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countrycode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countrycode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countrycode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countrycode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countrycode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countrycode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countrycode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countrycode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countrycode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countrycode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countrycode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countrycode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countrycode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countrycode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countrycode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countrycode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countrycode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countrycode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countrycode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countrycode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countrycode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countrycode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countrycode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countrycode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countrycode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countrycode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countrycode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countrycode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countrycode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countrycode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countrycode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countrycode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countrycode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countrycode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countrycode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countrycode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countrycode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countrycode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countrycode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countrycode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countrycode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countrycode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countrycode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countrycode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countrycode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <input type=\"number\" className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { setphonenumber(e.target.value) }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Location\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className=\"col-6 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                console.log(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' onChange={(e) => { setmain(e.target.value); d(); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`conatiner m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option disabled >Select Relation</option>\r\n                                <option>Son</option>\r\n                                <option>Daughter</option>\r\n                                <option>Father</option>\r\n                                <option>Mother</option>\r\n                                <option>Husband</option>\r\n                                <option>Wife</option>\r\n                                <option>Brother</option>\r\n                                <option>Sister</option>\r\n                                <option>Grand Father</option>\r\n                                <option>Grand Mother</option>\r\n                                <option>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button type=\"button\" className=\"btn done px-5\" onClick={confirmmessage} > Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { AddPatient }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddAppointment.jsx",["935","936","937","938","939","940","941","942","943","944","945","946","947","948","949"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst AddAppointment = (props) => {\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    let adminid = localStorage.getItem('id')\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n    \r\n    function setfromsearch(){\r\n        setpatientid(props.patientidfromsearch)\r\n        setsearchinput(props.patientnamefromsearch)\r\n    }\r\n    useEffect(()=>{\r\n        setfromsearch()\r\n    },[props.patientidfromsearch])\r\n    console.log(patientid,searchinput)\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const searchpatient = (e) => {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data)\r\n                    setsearchload(false)\r\n        })\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    const get_value = (e) => {\r\n        setsearchinput(e.target.value)\r\n        setpatientid(e.target.name)\r\n        setdisplaysearchlist('none');\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(e.target.value)\r\n    }\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n    function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n    function getTimefrom(e) {\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots && ApikeyDocTimeslots.length != 0) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n        } else {\r\n            Notiflix.Notify.info('Choose Doctor First')\r\n        }\r\n    }\r\n\r\n    function resetform(e) {\r\n        setsearchinput()\r\n        setpatientid()\r\n        setdoctorid()\r\n        setclinicid()\r\n        setischecked()\r\n    }\r\n\r\n    function BookAppointment(e) {\r\n        if (patientid && doctorid && clinicid && time && adminid) {\r\n            setload(true)\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: time,\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                Notiflix.Notify.success(response.data.message);\r\n                resetform()\r\n                props.toggleappointmentform()\r\n                props.fetchapi()\r\n                getTimeslots()\r\n                getTimefrom()\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n        }\r\n\r\n    }\r\n    const [timeindex, settimeindex] = useState()\r\n\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Appointment`,\r\n            `Do you surely want to Add Appointment for ${searchinput}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                BookAppointment()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2\">New Appointment</h5>\r\n            {\r\n                props.closeAddAppointmentform ? (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n                ) : (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.toggleappointmentform(); }} ></button>\r\n                )\r\n            }\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <label className=\"m-0 mb-2\">Search Using Phone or Name</label>\r\n                <input type=\"text\" className=\"form-control selectpatient col-10 position-relative\" value={searchinput ? searchinput : ''} onFocus={() => setsearchload(true)} onChange={searchpatient} onBlur={searchpatient} />\r\n                <div className={`col-8 d-${displaysearchlist} searchinput`}>\r\n                    {\r\n                        searchload == true || searchinput == undefined ? (\r\n                            <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\">Loading... </p>\r\n                        ) : (\r\n                            searchlist.length == 0 ? (\r\n                                <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found add as new user to book appointements</p>\r\n                            ) : (\r\n                                searchlist.map((data) => (\r\n                                    <button className='col-12 d-block p-0 m-0 ms-1 border-0 bg-pearl text-charcoal text-start border border-1' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name}  {data.phone_number}</button>\r\n                                )))\r\n\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"col-12 p-0\">\r\n                    <a href=\"/#\" className=\"btn text-decoration-none btn-sm done\" onClick={props.formshift}> Add User </a>\r\n                </div>\r\n                <hr />\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                                <label className={`d-${clinicID==data.id?'block':'none'}`}><input type=\"checkbox\" className={`radio form me-1 `} key={i} checked={clinicID==data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n                    \r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor\" value={doctorid ? doctorid : ''} onChange={getTimeslots}>\r\n                                <option value=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    Doclist.map((data, i) => (\r\n                                        <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"\">Select Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom && doctorid ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, i) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button button-${props.timeindex == i ? 'pearl' : timeindex == i ? 'pearl' : 'lightgreen'} m-1`} value={data[0]} key={i} onClick={(e) => { gettime_value(e); settimeindex(i); }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className='btn button-burntumber m-1' key={i} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn button button-burntumber px-5\" onClick={confirmmessage}> Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport { AddAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\apiarrays.jsx",["950","951","952","953","954","955"],[],"import axios from 'axios';\r\nimport React ,{useState,useEffect,useContext} from 'react';\r\nimport { URL } from '../../index';\r\n\r\nimport '../../css/pharmacy.css';\r\nimport Notiflix from 'notiflix';\r\n\r\nfunction Purchaseorderarray(props){\r\n    let purchaseorderarr =[{\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightyellow rounded-5\">Consumables</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightyellow rounded-5\">Pending</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightred rounded-5\">Cancelled</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-burntumber rounded-5\">Rejected</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n    }\r\n];\r\n    return(\r\n        <>{\r\n            purchaseorderarr.map((item,_key) => {\r\n            return<tr key={_key}>\r\n            <td>{item.c1}</td>\r\n            <td>{item.c2}</td>\r\n            <td>{item.c3}</td>\r\n            <td>{item.c4}</td>\r\n            <td>{item.c5}</td>\r\n            <td>{item.c6}</td>\r\n            <td>{item.c7}</td>  \r\n            <td>{item.c8}</td>\r\n            <td><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/enter.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button>\r\n              <button className='btn'onClick={props.itemdetails}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n            <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/delete.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n          </tr>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Pharmacystocktable(){\r\n  let  pharmacystockarr = [{\r\n        c1:'01',\r\n        c2:'Dolo 650',\r\n        c3:'04',\r\n        c4:'600',\r\n        c5:'Lucky Distributors'\r\n    }]\r\n    return(\r\n        <>{\r\n            pharmacystockarr.map((item,_key) => {\r\n            return<tr key={_key}>\r\n            <td>{item.c1}</td>\r\n            <td>{item.c2}</td>\r\n            <td>{item.c3}</td>\r\n            <td>{item.c4}</td>\r\n            <td>{item.c5}</td>\r\n            <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></td>\r\n            <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n          </tr>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction POitemdetailsarray(){\r\n    let POitemdetailsarr = [\r\n        {\r\n        c1:'01',\r\n        c2:'Dolo 650',\r\n        c3:'10',\r\n        c4:'600'\r\n        },\r\n]\r\n    return (\r\n        <>\r\n\r\n<table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n     \r\n            <th>No.</th>\r\n            <th>Item Name</th>\r\n            <th>Total Qty</th>\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            POitemdetailsarr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                </tr>\r\n            })\r\n        }\r\n        </tbody>\r\n    </table>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport{Purchaseorderarray};\r\nexport {Pharmacystocktable};\r\nexport{POitemdetailsarray};\r\n\r\n\r\n\r\n\r\nfunction Stockvaccinearray(){\r\n        let Stockvaccinearr = [{\r\n            id: 1,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 2,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 3,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 4,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 5,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 6,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        ];\r\n        return (\r\n            <>{\r\n                Stockvaccinearr.map((item, _key) => {\r\n                    return <tr key={item.id}>\r\n                        <td>{item.c1}</td>\r\n                        <td>{item.c2}</td>\r\n                        <td>{item.c3}</td>\r\n                        <td>{item.c4}</td>\r\n                        <td>{item.c5}</td>\r\n                        <td>{item.c6}</td>\r\n                        <td>{item.c7}</td>\r\n                        <td>{item.c8}</td>\r\n                        <td></td>\r\n                        <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n        \r\n                    </tr>\r\n                })\r\n            }\r\n            </>\r\n    )\r\n}\r\n\r\nfunction Stockmedicinearray(){\r\n    let Stockvaccinearr = [{\r\n        id: 1,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 2,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 3,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 4,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 5,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 6,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    ];\r\n    return (\r\n        <>{\r\n            Stockvaccinearr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td>{item.c6}</td>\r\n                    <td>{item.c7}</td>\r\n                    <td>{item.c8}</td>\r\n                    <td></td>\r\n                    <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n    \r\n                </tr>\r\n            })\r\n        }\r\n        </>\r\n)\r\n}\r\nexport{Stockvaccinearray};\r\nexport{Stockmedicinearray};\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Doctors\\UpdateDoctor.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Patients\\UpdatePatient.jsx",["956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n// import {useJsApiLoader, Autocomplete } from '@react-google-maps/api'\r\n\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\n\r\nconst UpdatePatient = (props) => {\r\n    const url = useContext(URL);\r\n    let adminid = localStorage.getItem('id')\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState()\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const ismainref = useRef()\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    async function currentvalue() {\r\n        setgender(props.data.gender)\r\n        if (props.data.address[0] && props.data.address[0].address_line2) {\r\n            setaddress(props.data.address[0].address_line1 + props.data.address[0].address_line2)\r\n        } else if (props.data.address[0] && props.data.address[0].address_line1) {\r\n            setaddress(props.data.address[0].address_line1)\r\n        } else {\r\n            setaddress('Address not saved')\r\n        }\r\n        props.phonecountrycode ? setcountrycode(props.phonecountrycode) : setcountrycode()\r\n        props.PhoneNo ? setphonenumber(props.PhoneNo) : setphonenumber()\r\n        props.full_name ? setfullname(props.full_name) : setfullname('Not Saved Currently')\r\n        props.dob ? setDOB(props.dob) : setDOB()\r\n        props.pincode ? setpincode(props.pincode) : setpincode()\r\n        props.email ? setemail(props.email) : setemail('Not Saved Currently')\r\n        props.location ? setplace(props.location) : setplace()\r\n        props.main ? setmain(props.main) : setmain()\r\n        props.latitude ? setlat(props.latitude) : setlat()\r\n        props.longitude ? setlng(props.longitude) : setlng()\r\n        if (props.parent === null) {\r\n            ismainref.current.value = '1'\r\n            setmain('1')\r\n        } else {\r\n            ismainref.current.value = '2'\r\n            setmain('2')\r\n            setdisplay('block')\r\n            setrelation(props.relation)\r\n        }\r\n\r\n        if (props.data.parent) {\r\n            if (props.data.parent.full_name || props.data.parent.email) {\r\n                setaccountinput(props.data.parent.full_name + \" | \" + props.data.parent.id + \" | \" + props.data.parent.email)\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        currentvalue()\r\n    }, [props.patient_id])\r\n\r\n\r\n    const d = (e) => {\r\n        if (e.target.value == 1) {\r\n            setdisplay('none')\r\n        }\r\n        if (e.target.value == 2) {\r\n            setdisplay('flex')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data)\r\n            console.log(response.data.data)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(props.patientid, fullname, countrycode, phonenumber, DOB, gender, props.gender, email, address, pincode, props.location, place, main, adminid, props.linkid, props.relation)\r\n    async function UpdatePatient() {\r\n        console.log(props.patientid, fullname, countrycode, phonenumber, DOB, gender, email, address, pincode, props.location, place, main, adminid, props.linkid, props.relation)\r\n        try {\r\n            if (fullname && countrycode && phonenumber && DOB && email && address && pincode && main && adminid) {\r\n                await axios.post(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/update/patient`, {\r\n                    patient_id: props.patientid,\r\n                    full_name: fullname,\r\n                    phone_country_code: countrycode,\r\n                    phone_number: phonenumber,\r\n                    dob: DOB,\r\n                    gender: gender,\r\n                    email: email,\r\n                    address: address,\r\n                    pin_code: pincode,\r\n                    location: props.location ? props.location : place,\r\n                    is_main: main,\r\n                    latitude: props.latitude ? props.latitude : lat,\r\n                    longitude: props.longitude ? props.longitude : lat,\r\n                    relation: main == 2 ? props.relation ? props.relation : relation : '',\r\n                    link_id: main == 2 ? props.linkid ? props.linkid : linkid : '',\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    Notiflix.Notify.success(response.data.message);\r\n                    props.getAllPatients(0)\r\n                    props.CloseUpdatePatient()\r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais');\r\n            }\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Patient Details`,\r\n            `Do you surely want to update ${props.data.full_name}'s Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdatePatient()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(() => {\r\n        data === \"\" ? setData(\"\") : setData(data);\r\n        setplace(data.label)\r\n    }, [data]);\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n    console.log(props.data)\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2 position-relative\">Update Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseUpdatePatient} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countryCode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countryCode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countryCode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countryCode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countryCode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countryCode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countryCode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countryCode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countryCode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countryCode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countryCode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countryCode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countryCode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countryCode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countryCode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countryCode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countryCode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countryCode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countryCode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countryCode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countryCode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countryCode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countryCode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countryCode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countryCode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countryCode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countryCode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countryCode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countryCode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countryCode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countryCode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countryCode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countryCode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countryCode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countryCode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countryCode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countryCode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countryCode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countryCode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countryCode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countryCode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countryCode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countryCode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countryCode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countryCode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countryCode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countryCode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countryCode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countryCode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countryCode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countryCode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countryCode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countryCode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countryCode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countryCode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countryCode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countryCode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countryCode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countryCode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countryCode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countryCode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countryCode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countryCode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countryCode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countryCode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countryCode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countryCode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countryCode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countryCode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countryCode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countryCode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countryCode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countryCode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countryCode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countryCode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countryCode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countryCode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countryCode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countryCode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countryCode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countryCode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countryCode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countryCode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countryCode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countryCode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countryCode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countryCode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countryCode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countryCode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countryCode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countryCode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countryCode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countryCode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countryCode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countryCode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countryCode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countryCode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countryCode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countryCode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countryCode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countryCode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countryCode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countryCode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countryCode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countryCode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countryCode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countryCode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countryCode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countryCode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countryCode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countryCode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countryCode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countryCode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countryCode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countryCode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countryCode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countryCode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countryCode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countryCode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countryCode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countryCode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countryCode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countryCode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countryCode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countryCode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countryCode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countryCode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countryCode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countryCode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countryCode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countryCode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countryCode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countryCode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countryCode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countryCode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countryCode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countryCode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countryCode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countryCode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countryCode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countryCode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countryCode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countryCode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countryCode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countryCode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countryCode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countryCode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countryCode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countryCode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countryCode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countryCode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countryCode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countryCode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countryCode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countryCode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countryCode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countryCode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countryCode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countryCode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countryCode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countryCode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countryCode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countryCode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countryCode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countryCode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countryCode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countryCode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countryCode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countryCode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countryCode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countryCode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countryCode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countryCode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countryCode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countryCode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countryCode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countryCode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countryCode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countryCode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countryCode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countryCode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countryCode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countryCode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countryCode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countryCode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countryCode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countryCode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countryCode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countryCode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countryCode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countryCode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countryCode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countryCode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countryCode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countryCode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countryCode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countryCode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countryCode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countryCode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countryCode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countryCode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countryCode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countryCode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countryCode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countryCode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countryCode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countryCode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countryCode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countryCode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countryCode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countryCode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countryCode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countryCode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countryCode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <input className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { setphonenumber(e.target.value) }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Location\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: props.location ? props.location : data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                console.log(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' ref={ismainref} onChange={(e) => { setmain(e.target.value); d(e); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`conatiner m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' value={relation ? relation : ''} onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option>Select Relation</option>\r\n                                <option value='Son'>Son</option>\r\n                                <option value='Daughter'>Daughter</option>\r\n                                <option value='Father'>Father</option>\r\n                                <option value='Mother'>Mother</option>\r\n                                <option value='Husband'>Husband</option>\r\n                                <option value='Wife'>Wife</option>\r\n                                <option value='Brother'>Brother</option>\r\n                                <option value='Sister'>Sister</option>\r\n                                <option value='Grand Father'>Grand Father</option>\r\n                                <option value='Grand Mother'>Grand Mother</option>\r\n                                <option value='Grand Child'>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} start-0 end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                    <button className=\"btn button-burntumber\" onClick={confirmmessage} > Save Changes </button>\r\n                </div>\r\n                <div className=\"col-6 pb-2 m-auto text-center\">\r\n                    <button className=\"btn button-pearl \" onClick={currentvalue}>Set Previous</button>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { UpdatePatient }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customconfirm.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Payments.jsx",["999","1000","1001","1002","1003","1004","1005","1006","1007","1008"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.fetchallAppointmentslist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            pendings.push(props.appointmentdata.pending_payments[j])\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            if (props.appointmentdata.pending_payments[j].is_paid == 0) {\r\n                pendingid = props.appointmentdata.pending_payments[j].id\r\n            }\r\n\r\n        }\r\n\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.fetchallAppointmentslist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    // console.log(advancepaymentmethods)\r\n    console.log(props.appointmentdata)\r\n    return (\r\n        <div className='bg-seashell rounded-2'>\r\n            <h5 className='fs-4'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.toggle_payments}></button>\r\n            <hr />\r\n            <div className=\"row p-0 m-0 gx-2 justify-content-center\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n                        <div className=\"col-6 col-lg-4 col-md-6 col-xl-4 col-sm-6\">\r\n                            <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} border border-dark`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <hr />\r\n            <div className={`container-fluid p-0 m-0 text-center d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-2'>Advance Payment from {props.patientname}</h5>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n                            <div className='row align-items-center p-0 m-0'>\r\n                                <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                                <input className=' col-6 p-0 m-0 form-control w-50 text-center bg-seashell ' value={advancepaid.advnace_total} />\r\n                                <hr />\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-2'>Add Advance Payment</h5>\r\n                <label className='text-charcoal fw-bold'>Description</label>\r\n                <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mb-3' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                <label className='text-charcoal fw-bold'>Select Payment Method</label>\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2  justify-content-center\">\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container-fluid text-center mt-2\">\r\n                    <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                </div>\r\n                <button className='button button-burntumber mt-4' onClick={AddadvancePaymentMethods}>Save</button>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} text-center`}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h5 className='fw-bolder text-burntumber'>Previous Paid Pending Payments</h5>\r\n                                <div className='p-0 m-0 scroll scroll-y'>\r\n                                    <table className=' p-0 m-0 table text-center'>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='border p-0 m-0 px-1' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Cash</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Card</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Paytm</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Phonepe</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Razorpay</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Wire-Transfer</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={` text-center d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='border'>{data.paid_amount}</td>\r\n                                                        <td className='border'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='border'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} text-center`}>\r\n                                            <h5 className='text-burntumber fw-bolder mt-2'>Pending Remains</h5>\r\n                                            <div className=' bg-danger text-light fw-bolder fs-5 text-center' >{Data.pending_amount}</div>\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={`text-center`}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-center\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                                <button className='button button-burntumber mt-4' onClick={UpdatePendingPayments}>Save</button>\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <div className='rounded-2 bg-lightgreen fw-bolder p-2'>No Pending Payments Found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AmountPaid.jsx",["1009","1010","1011"],[],"import React, { useState, useEffect } from 'react'\r\n\r\nconst AmountPaid = (props) => {\r\n\r\n    const [totalAmount, setTotalAmount] = useState(0)\r\n    const [paidpendingtotal,setpaidpending] =useState(0)\r\n    const calculate = () => {\r\n        var data = props.appointmentData;\r\n        if (data.payment_method != null) {\r\n            var payment = Object.values(JSON.parse(data.payment_method_details))\r\n            var val = 0;\r\n            for (let i = 0; i < payment.length; i++) {\r\n                var element = parseFloat(payment[i]);\r\n                val += element\r\n                setTotalAmount(val)\r\n            }\r\n        }\r\n    }\r\n    const CalculatePaidPendings=()=>{\r\n      let totalpaidpendings = []\r\n      let pendingtotal = 0\r\n      if(props.appointmentData.pending_payments && props.appointmentData.pending_payments!=null){\r\n        for(let i = 0;i<props.appointmentData.pending_payments.length;i++){\r\n            if(props.appointmentData.pending_payments[i].is_paid == 1){\r\n              totalpaidpendings.push(props.appointmentData.pending_payments[i].paid_amount!==null?props.appointmentData.pending_payments[i].paid_amount:0)\r\n            }\r\n        }\r\n      }\r\n\r\n   totalpaidpendings.forEach(item=>{\r\n    pendingtotal +=Number(item)\r\n   })\r\n   setpaidpending(pendingtotal)\r\n    }\r\n    useEffect(() => {\r\n      calculate()\r\n      CalculatePaidPendings()\r\n  }, [])\r\n\r\n    return (\r\n        totalAmount !=null ? (\r\n            totalAmount+paidpendingtotal == props.appointmentData.total_amount ? (<>\r\n            <button className=\"ms-1 btn btn-sm button-lightgreen fw-bold\">{Number(totalAmount)+Number(paidpendingtotal)} Done</button>\r\n                                    </>) : (<>\r\n                                      <button className=\"ms-1 btn btn-sm button-lightred fw-bold\">{Number(props.appointmentData.total_amount)-(Number(totalAmount)+Number(paidpendingtotal))} Pending</button>\r\n                                    </>)\r\n\r\n                                  ) : (\r\n                                    <button className=\"btn button-seashell p-0 m-0\" type=\"button\" disabled>\r\n                                      <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    </button>\r\n                                  )\r\n    \r\n    )\r\n}\r\n\r\nexport default AmountPaid","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\SelectedDoctorSlot.jsx",["1012","1013","1014","1015","1016","1017","1018","1019","1020"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList,Clinic } from '../../index'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id');\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n    const [docdate, setdocdate] = useState();\r\n    const [fromtime, setfromtime] = useState();\r\n    const [totime, settotime] = useState();\r\n    const [clinicid, setclinicid] = useState(clinicID);\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n            if (props.DoctorID && APIDate && fromtime && totime && clinicid && admin_id) {\r\n                Notiflix.Loading.pulse({\r\n                    backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                    svgColor: '#96351E'\r\n                })\r\n                await axios.post(`${url}/doctor/add/timeslots`, {\r\n                    doctor_id: props.DoctorID,\r\n                    date: APIDate,\r\n                    time_from: fromtime,\r\n                    time_to: totime,\r\n                    clinic_id: clinicid,\r\n                    admin_id: admin_id\r\n                }).then((response) => {\r\n                    Notiflix.Loading.remove();\r\n                    props.CloseAddQuickSlots()\r\n                    props.fetchapi()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais')\r\n            }\r\n        \r\n    }\r\n\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to add the selected Doctor Time Slots`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr />\r\n            <div className=\"col-12 text-center\">\r\n              {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className=\"radio form me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <button className='button button-charcoal shadow'>{props.DoctorName}</button>\r\n            </div>\r\n              <div className=\"col-6\">\r\n        <input type=\"date\" disabled className=\"form-control col-10\" value={APIDate}/>\r\n        </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex\">\r\n                <input type=\"time\" className=\"form-control\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                <div>_</div>\r\n                <input type=\"time\" className=\"form-control\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n            </div>\r\n\r\n\r\n            <hr />\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-burntumber px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Bill.jsx",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].other_charges.length; j++) {\r\n                    extracharges.push({\r\n                        description: props.appointmentdata[i].other_charges[j].description != null ? props.appointmentdata[i].other_charges[j].description : 'N/A',\r\n                        amount: props.appointmentdata[i].other_charges[j].total_amount != null ? props.appointmentdata[i].other_charges[j].total_amount : 0,\r\n                        discount: props.appointmentdata[i].other_charges[j].discount != null ? props.appointmentdata[i].other_charges[j].discount : 0,\r\n                        cgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n                        sgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n                        gross_amount: props.appointmentdata[i].other_charges[j].final_amount && props.appointmentdata[i].other_charges[j].final_amount !== null ? props.appointmentdata[i].other_charges[j].final_amount : '',\r\n                        id: props.appointmentdata[i].other_charges[j].id && props.appointmentdata[i].other_charges[j].id != null ? props.appointmentdata[i].other_charges[j].id : ''\r\n                    })\r\n\r\n                }\r\n                setaartasdiscount(props.appointmentdata[i].aartas_discount)\r\n                setdocdiscount(props.appointmentdata[i].doc_discount)\r\n                setconstext(props.appointmentdata[i].cons_text)\r\n            }\r\n        }\r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id && props.appointmentdata[i].payment_method_details) {\r\n                Payments.push(Object.keys(JSON.parse(props.appointmentdata[i].payment_method_details)))\r\n                amounts.push(Object.values(JSON.parse(props.appointmentdata[i].payment_method_details)))\r\n            }\r\n        }\r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    console.log(Total_Amount())\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell position-relative'>\r\n            <h5 className='text-charcoal mt-2 '>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2 ' onClick={() => { props.CloseBillForm() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start p-2 position-relative\">\r\n                                <h6 className='fw-bolder text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-1 me-4 text-cahrcoal fw-bolder'><input type='checkbox' checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell' value={AddConsAmt} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell' value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell'>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control bg-seashell' disabled value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell text-center' value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell text-center' value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell rounded-2 position-relative'>\r\n                                    <h6 className='p-1 text-charcoal fw-bolder'>ExtraCharges</h6>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0 text-center\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-3 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Description</label>\r\n                                                            <input className='form-control p-0 bg-seashell m-0 text-center' value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Amount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0 \">\r\n                                                            <label className='fw-bold text-charcoal75'>Discount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>FinalAmount</label>\r\n                                                            <input type='number' className='form-control  text-center bg-seashell p-0 m-0' value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>GST %</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='text-center fw-bold text-charcoal75'>Total </label>\r\n                                                            <input className=' form-control text-center bg-seashell p-0' value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                        </div>\r\n                                                        <div className=\"col-auto align-self-end\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n                                    <div className=\"container-fluid text-center mt-2\">\r\n                                        <button className='btn py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start \">\r\n                                <h6 className='fw-bolder text-charcoal'>Tax</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>SGST</label>\r\n                                        <input className='form-control bg-seashell' value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>CGST</label>\r\n                                        <input className='form-control bg-seashell' value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 text-center rounded-2 bg-lightyellow mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n                                    <div className='col-4 align-self-end'>\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Grand Total</label>\r\n                                        <input className='form-control text-success text-center border-0 fw-bolder p-0 fs-5 bg-seashell' value={Get_Grand_Total()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-center border-0 fw-bolder p-0 fs-5 bg-seashell' value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Consumables Amount</label>\r\n                                        <input className='form-control text-primary text-center border-0 fw-bolder p-0 fs-5 bg-seashell' />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative p-2\">\r\n                                <h6 className='text-charcoal fw-bolder'>Payments</h6>\r\n                                <div className=\"row justify-content-end p-0 m-0\">\r\n                                    <div className=\"col-6 text-end p-0 m-0\">\r\n                                        <div className=\"row text-end p-0 m-0\">\r\n                                            <span className=\"col-8 text-wrap text-end p-0 m-0 fw-bold\"> Total Amount: </span>\r\n                                            <span className=\"col-4 text-end align-self-end p-0 m-0 text-success fw-bold\"> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0} </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-6 text-center m-0 p-0'>\r\n                                        <div className=\"row text-center p-0 m-0\">\r\n                                            <p className=\"col-8 text-wrap text-center p-0 m-0 fw-bold\"> Return Amount: </p>\r\n                                            <p className=\"col-4 text-start align-self-end p-0 m-0 text-burntumber fw-bold\"> {Return_Amount()} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-end m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid pb-2\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0\">\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-burntumber' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-brandy' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customnotify.jsx",["1032"],[],"import React from 'react'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst customnotify = () => {\r\n  return (\r\n      \r\nNotiflix.Notify.init({\r\n    width: '280px',\r\n    position: 'right-top',\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 1000,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade',\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic',\r\n    fontAwesomeIconSize: '34px',\r\n    success: {\r\n    background: '#95B3AB',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-success',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-check-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n    failure: {\r\n    background: '#ff5549',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-failure',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-times-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n    warning: {\r\n    background: '#eebf31',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-warning',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n    info: {\r\n    background: '#26c0d3',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-info',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-info-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n    })\r\n  )\r\n}\r\n\r\nexport  {customnotify}\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Bill.jsx",["1033","1034","1035","1036","1037","1038","1039","1040","1041"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n\r\n           \r\n                for (let j = 0; j < props.appointmentdata.other_charges.length; j++) {\r\n                    extracharges.push({\r\n                        description: props.appointmentdata.other_charges[j].description != null ? props.appointmentdata.other_charges[j].description : 'N/A',\r\n                        amount: props.appointmentdata.other_charges[j].total_amount != null ? props.appointmentdata.other_charges[j].total_amount : 0,\r\n                        discount: props.appointmentdata.other_charges[j].discount != null ? props.appointmentdata.other_charges[j].discount : 0,\r\n                        cgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                        sgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                        gross_amount: props.appointmentdata.other_charges[j].final_amount && props.appointmentdata.other_charges[j].final_amount !== null ? props.appointmentdata.other_charges[j].final_amount : '',\r\n                        id: props.appointmentdata.other_charges[j].id && props.appointmentdata.other_charges[j].id != null ? props.appointmentdata.other_charges[j].id : ''\r\n                    })\r\n\r\n                }\r\n                setaartasdiscount(props.appointmentdata.aartas_discount)\r\n                setdocdiscount(props.appointmentdata.doc_discount)\r\n                setconstext(props.appointmentdata.cons_text)\r\n            \r\n        \r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n                Payments.push(Object.keys(JSON.parse(props.appointmentdata.payment_method_details)))\r\n                amounts.push(Object.values(JSON.parse(props.appointmentdata.payment_method_details)))\r\n            \r\n        \r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell rounded-4 position-relative'>\r\n            <h5 className='text-burntumber fw-bold'>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2' onClick={() => { props.toggle_bill() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start p-2 position-relative\">\r\n                                <h6 className='fw-bolder text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-1 me-4 text-cahrcoal fw-bolder'><input type='checkbox'disabled ={true} checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell' disabled={true} value={AddConsAmt} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell' disabled={true} value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell' disabled={true}>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell text-center'disabled ={true} value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell text-center' disabled ={true} value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell rounded-2 position-relative'>\r\n                                    <h6 className='p-1 text-charcoal fw-bolder'>ExtraCharges</h6>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0 text-center\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-3 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Description</label>\r\n                                                            <input className='form-control p-0 bg-seashell m-0 text-center' disabled ={true} value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Amount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' disabled ={true} value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0 \">\r\n                                                            <label className='fw-bold text-charcoal75'>Discount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>FinalAmount</label>\r\n                                                            <input type='number' className='form-control  text-center bg-seashell p-0 m-0' disabled ={true} value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>GST %</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' disabled ={true} value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='text-center fw-bold text-charcoal75'>Total </label>\r\n                                                            <input className=' form-control text-center bg-seashell p-0' disabled ={true} value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                        </div>\r\n                                                        <div className=\"col-auto align-self-end d-none\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n                                    <div className=\"container-fluid text-center mt-2 d-none\">\r\n                                        <button className='btn py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start \">\r\n                                <h6 className='fw-bolder text-charcoal'>Tax</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>SGST</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>CGST</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 text-center rounded-2 bg-lightyellow mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n                                    <div className='col-4 align-self-end'>\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Grand Total</label>\r\n                                        <input className='form-control text-success text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} value={Get_Grand_Total()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Consumables Amount</label>\r\n                                        <input className='form-control text-primary text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative p-2\">\r\n                                <h6 className='text-charcoal fw-bolder'>Payments</h6>\r\n                                <div className=\"row justify-content-end p-0 m-0\">\r\n                                    <div className=\"col-6 text-end p-0 m-0\">\r\n                                        <div className=\"row text-end p-0 m-0\">\r\n                                            <span className=\"col-8 text-wrap text-end p-0 m-0 fw-bold\"> Total Amount: </span>\r\n                                            <span className=\"col-4 text-end align-self-end p-0 m-0 text-success fw-bold\"> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0} </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-6 text-center m-0 p-0'>\r\n                                        <div className=\"row text-center p-0 m-0\">\r\n                                            <p className=\"col-8 text-wrap text-center p-0 m-0 fw-bold\"> Return Amount: </p>\r\n                                            <p className=\"col-4 text-start align-self-end p-0 m-0 text-burntumber fw-bold\"> {Return_Amount()} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-center m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1' disabled ={true} value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1' disabled ={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2 d-none\">\r\n                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2 d-none\">\r\n                                    <button className='btn py-0' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid pb-2 d-none\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0\">\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-burntumber' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-brandy' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\ExportExcel.jsx",[],[],{"ruleId":"1042","severity":1,"message":"1043","line":4,"column":26,"nodeType":"1044","messageId":"1045","endLine":4,"endColumn":35},{"ruleId":"1042","severity":1,"message":"1046","line":6,"column":39,"nodeType":"1044","messageId":"1045","endLine":6,"endColumn":48},{"ruleId":"1042","severity":1,"message":"1047","line":9,"column":54,"nodeType":"1044","messageId":"1045","endLine":9,"endColumn":74},{"ruleId":"1042","severity":1,"message":"1048","line":11,"column":10,"nodeType":"1044","messageId":"1045","endLine":11,"endColumn":31},{"ruleId":"1042","severity":1,"message":"1049","line":67,"column":9,"nodeType":"1044","messageId":"1045","endLine":67,"endColumn":24},{"ruleId":"1042","severity":1,"message":"1050","line":117,"column":12,"nodeType":"1044","messageId":"1045","endLine":117,"endColumn":26},{"ruleId":"1051","severity":1,"message":"1052","line":242,"column":16,"nodeType":"1053","messageId":"1054","endLine":242,"endColumn":18},{"ruleId":"1042","severity":1,"message":"1055","line":272,"column":7,"nodeType":"1044","messageId":"1045","endLine":272,"endColumn":14},{"ruleId":"1042","severity":1,"message":"1056","line":282,"column":23,"nodeType":"1044","messageId":"1045","endLine":282,"endColumn":37},{"ruleId":"1051","severity":1,"message":"1057","line":363,"column":53,"nodeType":"1053","messageId":"1054","endLine":363,"endColumn":55},{"ruleId":"1051","severity":1,"message":"1052","line":365,"column":22,"nodeType":"1053","messageId":"1054","endLine":365,"endColumn":24},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":16,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":18},{"ruleId":"1058","severity":1,"message":"1059","line":439,"column":41,"nodeType":"1060","messageId":"1061","endLine":439,"endColumn":43},{"ruleId":"1062","severity":1,"message":"1063","line":454,"column":6,"nodeType":"1064","endLine":454,"endColumn":8,"suggestions":"1065"},{"ruleId":"1062","severity":1,"message":"1063","line":458,"column":6,"nodeType":"1064","endLine":458,"endColumn":40,"suggestions":"1066"},{"ruleId":"1051","severity":1,"message":"1052","line":479,"column":18,"nodeType":"1053","messageId":"1054","endLine":479,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":490,"column":18,"nodeType":"1053","messageId":"1054","endLine":490,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1057","line":515,"column":20,"nodeType":"1053","messageId":"1054","endLine":515,"endColumn":22},{"ruleId":"1067","severity":1,"message":"1068","line":516,"column":20,"nodeType":"1053","messageId":"1069","endLine":516,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":532,"column":129,"nodeType":"1053","messageId":"1054","endLine":532,"endColumn":131},{"ruleId":"1042","severity":1,"message":"1070","line":615,"column":17,"nodeType":"1044","messageId":"1045","endLine":615,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":621,"column":11,"nodeType":"1053","messageId":"1054","endLine":621,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":626,"column":11,"nodeType":"1053","messageId":"1054","endLine":626,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":626,"column":21,"nodeType":"1053","messageId":"1054","endLine":626,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":626,"column":47,"nodeType":"1053","messageId":"1054","endLine":626,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":637,"column":11,"nodeType":"1053","messageId":"1054","endLine":637,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1071","line":645,"column":6,"nodeType":"1064","endLine":645,"endColumn":8,"suggestions":"1072"},{"ruleId":"1062","severity":1,"message":"1071","line":648,"column":6,"nodeType":"1064","endLine":648,"endColumn":21,"suggestions":"1073"},{"ruleId":"1051","severity":1,"message":"1057","line":745,"column":53,"nodeType":"1053","messageId":"1054","endLine":745,"endColumn":55},{"ruleId":"1074","severity":1,"message":"1075","line":748,"column":117,"nodeType":"1076","endLine":748,"endColumn":207},{"ruleId":"1051","severity":1,"message":"1052","line":749,"column":31,"nodeType":"1053","messageId":"1054","endLine":749,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":752,"column":115,"nodeType":"1053","messageId":"1054","endLine":752,"endColumn":117},{"ruleId":"1051","severity":1,"message":"1052","line":787,"column":70,"nodeType":"1053","messageId":"1054","endLine":787,"endColumn":72},{"ruleId":"1042","severity":1,"message":"1070","line":817,"column":17,"nodeType":"1044","messageId":"1045","endLine":817,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":824,"column":11,"nodeType":"1053","messageId":"1054","endLine":824,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":830,"column":11,"nodeType":"1053","messageId":"1054","endLine":830,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":830,"column":21,"nodeType":"1053","messageId":"1054","endLine":830,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":830,"column":47,"nodeType":"1053","messageId":"1054","endLine":830,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":841,"column":11,"nodeType":"1053","messageId":"1054","endLine":841,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1077","line":849,"column":6,"nodeType":"1064","endLine":849,"endColumn":8,"suggestions":"1078"},{"ruleId":"1062","severity":1,"message":"1077","line":852,"column":6,"nodeType":"1064","endLine":852,"endColumn":21,"suggestions":"1079"},{"ruleId":"1051","severity":1,"message":"1057","line":896,"column":51,"nodeType":"1053","messageId":"1054","endLine":896,"endColumn":53},{"ruleId":"1074","severity":1,"message":"1075","line":899,"column":116,"nodeType":"1076","endLine":899,"endColumn":206},{"ruleId":"1051","severity":1,"message":"1052","line":900,"column":31,"nodeType":"1053","messageId":"1054","endLine":900,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":901,"column":102,"nodeType":"1053","messageId":"1054","endLine":901,"endColumn":104},{"ruleId":"1074","severity":1,"message":"1075","line":908,"column":64,"nodeType":"1076","endLine":908,"endColumn":158},{"ruleId":"1051","severity":1,"message":"1052","line":930,"column":70,"nodeType":"1053","messageId":"1054","endLine":930,"endColumn":72},{"ruleId":"1042","severity":1,"message":"1080","line":953,"column":10,"nodeType":"1044","messageId":"1045","endLine":953,"endColumn":14},{"ruleId":"1042","severity":1,"message":"1081","line":953,"column":16,"nodeType":"1044","messageId":"1045","endLine":953,"endColumn":23},{"ruleId":"1042","severity":1,"message":"1082","line":957,"column":18,"nodeType":"1044","messageId":"1045","endLine":957,"endColumn":27},{"ruleId":"1051","severity":1,"message":"1052","line":961,"column":15,"nodeType":"1053","messageId":"1054","endLine":961,"endColumn":17},{"ruleId":"1083","severity":1,"message":"1084","line":962,"column":14,"nodeType":"1076","messageId":"1085","endLine":962,"endColumn":171},{"ruleId":"1051","severity":1,"message":"1052","line":964,"column":15,"nodeType":"1053","messageId":"1054","endLine":964,"endColumn":17},{"ruleId":"1083","severity":1,"message":"1086","line":965,"column":14,"nodeType":"1076","messageId":"1085","endLine":965,"endColumn":150},{"ruleId":"1051","severity":1,"message":"1052","line":967,"column":14,"nodeType":"1053","messageId":"1054","endLine":967,"endColumn":16},{"ruleId":"1083","severity":1,"message":"1087","line":968,"column":14,"nodeType":"1076","messageId":"1085","endLine":968,"endColumn":151},{"ruleId":"1051","severity":1,"message":"1052","line":984,"column":91,"nodeType":"1053","messageId":"1054","endLine":984,"endColumn":93},{"ruleId":"1051","severity":1,"message":"1052","line":1001,"column":73,"nodeType":"1053","messageId":"1054","endLine":1001,"endColumn":75},{"ruleId":"1042","severity":1,"message":"1088","line":8,"column":10,"nodeType":"1044","messageId":"1045","endLine":8,"endColumn":23},{"ruleId":"1042","severity":1,"message":"1089","line":31,"column":10,"nodeType":"1044","messageId":"1045","endLine":31,"endColumn":23},{"ruleId":"1042","severity":1,"message":"1090","line":42,"column":10,"nodeType":"1044","messageId":"1045","endLine":42,"endColumn":16},{"ruleId":"1042","severity":1,"message":"1091","line":58,"column":12,"nodeType":"1044","messageId":"1045","endLine":58,"endColumn":20},{"ruleId":"1062","severity":1,"message":"1092","line":87,"column":6,"nodeType":"1064","endLine":87,"endColumn":23,"suggestions":"1093"},{"ruleId":"1051","severity":1,"message":"1052","line":104,"column":18,"nodeType":"1053","messageId":"1054","endLine":104,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":115,"column":18,"nodeType":"1053","messageId":"1054","endLine":115,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":232,"column":18,"nodeType":"1053","messageId":"1054","endLine":232,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":275,"column":27,"nodeType":"1053","messageId":"1054","endLine":275,"endColumn":29},{"ruleId":"1051","severity":1,"message":"1052","line":277,"column":72,"nodeType":"1053","messageId":"1054","endLine":277,"endColumn":74},{"ruleId":"1051","severity":1,"message":"1052","line":279,"column":35,"nodeType":"1053","messageId":"1054","endLine":279,"endColumn":37},{"ruleId":"1051","severity":1,"message":"1052","line":280,"column":62,"nodeType":"1053","messageId":"1054","endLine":280,"endColumn":64},{"ruleId":"1051","severity":1,"message":"1052","line":324,"column":28,"nodeType":"1053","messageId":"1054","endLine":324,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":335,"column":46,"nodeType":"1053","messageId":"1054","endLine":335,"endColumn":48},{"ruleId":"1094","severity":1,"message":"1095","line":369,"column":52,"nodeType":"1076","messageId":"1096","endLine":369,"endColumn":248,"fix":"1097"},{"ruleId":"1094","severity":1,"message":"1095","line":370,"column":52,"nodeType":"1076","messageId":"1096","endLine":370,"endColumn":252,"fix":"1098"},{"ruleId":"1051","severity":1,"message":"1052","line":373,"column":190,"nodeType":"1053","messageId":"1054","endLine":373,"endColumn":192},{"ruleId":"1051","severity":1,"message":"1052","line":379,"column":207,"nodeType":"1053","messageId":"1054","endLine":379,"endColumn":209},{"ruleId":"1051","severity":1,"message":"1052","line":384,"column":41,"nodeType":"1053","messageId":"1054","endLine":384,"endColumn":43},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":68,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":201,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":203},{"ruleId":"1051","severity":1,"message":"1052","line":452,"column":37,"nodeType":"1053","messageId":"1054","endLine":452,"endColumn":39},{"ruleId":"1058","severity":1,"message":"1059","line":456,"column":39,"nodeType":"1060","messageId":"1061","endLine":456,"endColumn":41},{"ruleId":"1062","severity":1,"message":"1099","line":517,"column":6,"nodeType":"1064","endLine":517,"endColumn":23,"suggestions":"1100"},{"ruleId":"1074","severity":1,"message":"1075","line":546,"column":80,"nodeType":"1076","endLine":546,"endColumn":164},{"ruleId":"1074","severity":1,"message":"1075","line":592,"column":137,"nodeType":"1076","endLine":592,"endColumn":275},{"ruleId":"1062","severity":1,"message":"1101","line":29,"column":6,"nodeType":"1064","endLine":29,"endColumn":36,"suggestions":"1102"},{"ruleId":"1051","severity":1,"message":"1052","line":45,"column":65,"nodeType":"1053","messageId":"1054","endLine":45,"endColumn":67},{"ruleId":"1051","severity":1,"message":"1052","line":46,"column":70,"nodeType":"1053","messageId":"1054","endLine":46,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":58,"column":65,"nodeType":"1053","messageId":"1054","endLine":58,"endColumn":67},{"ruleId":"1042","severity":1,"message":"1103","line":62,"column":43,"nodeType":"1044","messageId":"1045","endLine":62,"endColumn":54},{"ruleId":"1051","severity":1,"message":"1057","line":76,"column":57,"nodeType":"1053","messageId":"1054","endLine":76,"endColumn":59},{"ruleId":"1051","severity":1,"message":"1052","line":78,"column":38,"nodeType":"1053","messageId":"1054","endLine":78,"endColumn":40},{"ruleId":"1051","severity":1,"message":"1057","line":81,"column":47,"nodeType":"1053","messageId":"1054","endLine":81,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":83,"column":54,"nodeType":"1053","messageId":"1054","endLine":83,"endColumn":56},{"ruleId":"1051","severity":1,"message":"1057","line":83,"column":193,"nodeType":"1053","messageId":"1054","endLine":83,"endColumn":195},{"ruleId":"1051","severity":1,"message":"1057","line":88,"column":54,"nodeType":"1053","messageId":"1054","endLine":88,"endColumn":56},{"ruleId":"1051","severity":1,"message":"1057","line":88,"column":199,"nodeType":"1053","messageId":"1054","endLine":88,"endColumn":201},{"ruleId":"1051","severity":1,"message":"1052","line":99,"column":47,"nodeType":"1053","messageId":"1054","endLine":99,"endColumn":49},{"ruleId":"1062","severity":1,"message":"1104","line":132,"column":6,"nodeType":"1064","endLine":132,"endColumn":42,"suggestions":"1105"},{"ruleId":"1067","severity":1,"message":"1068","line":216,"column":42,"nodeType":"1053","messageId":"1069","endLine":216,"endColumn":43},{"ruleId":"1051","severity":1,"message":"1052","line":292,"column":35,"nodeType":"1053","messageId":"1054","endLine":292,"endColumn":37},{"ruleId":"1051","severity":1,"message":"1052","line":292,"column":56,"nodeType":"1053","messageId":"1054","endLine":292,"endColumn":58},{"ruleId":"1051","severity":1,"message":"1052","line":306,"column":62,"nodeType":"1053","messageId":"1054","endLine":306,"endColumn":64},{"ruleId":"1051","severity":1,"message":"1052","line":343,"column":25,"nodeType":"1053","messageId":"1054","endLine":343,"endColumn":27},{"ruleId":"1051","severity":1,"message":"1052","line":343,"column":60,"nodeType":"1053","messageId":"1054","endLine":343,"endColumn":62},{"ruleId":"1042","severity":1,"message":"1106","line":8,"column":10,"nodeType":"1044","messageId":"1045","endLine":8,"endColumn":22},{"ruleId":"1042","severity":1,"message":"1070","line":82,"column":17,"nodeType":"1044","messageId":"1045","endLine":82,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":114,"column":11,"nodeType":"1053","messageId":"1054","endLine":114,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":118,"column":11,"nodeType":"1053","messageId":"1054","endLine":118,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":118,"column":21,"nodeType":"1053","messageId":"1054","endLine":118,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":118,"column":47,"nodeType":"1053","messageId":"1054","endLine":118,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":129,"column":15,"nodeType":"1053","messageId":"1054","endLine":129,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1107","line":151,"column":6,"nodeType":"1064","endLine":151,"endColumn":33,"suggestions":"1108"},{"ruleId":"1051","severity":1,"message":"1052","line":164,"column":18,"nodeType":"1053","messageId":"1054","endLine":164,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":175,"column":18,"nodeType":"1053","messageId":"1054","endLine":175,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1057","line":262,"column":51,"nodeType":"1053","messageId":"1054","endLine":262,"endColumn":53},{"ruleId":"1051","severity":1,"message":"1052","line":266,"column":54,"nodeType":"1053","messageId":"1054","endLine":266,"endColumn":56},{"ruleId":"1051","severity":1,"message":"1052","line":275,"column":68,"nodeType":"1053","messageId":"1054","endLine":275,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":275,"column":135,"nodeType":"1053","messageId":"1054","endLine":275,"endColumn":137},{"ruleId":"1051","severity":1,"message":"1052","line":285,"column":65,"nodeType":"1053","messageId":"1054","endLine":285,"endColumn":67},{"ruleId":"1051","severity":1,"message":"1052","line":297,"column":70,"nodeType":"1053","messageId":"1054","endLine":297,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":299,"column":31,"nodeType":"1053","messageId":"1054","endLine":299,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":305,"column":163,"nodeType":"1053","messageId":"1054","endLine":305,"endColumn":165},{"ruleId":"1051","severity":1,"message":"1052","line":307,"column":31,"nodeType":"1053","messageId":"1054","endLine":307,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":336,"column":84,"nodeType":"1053","messageId":"1054","endLine":336,"endColumn":86},{"ruleId":"1051","severity":1,"message":"1052","line":336,"column":138,"nodeType":"1053","messageId":"1054","endLine":336,"endColumn":140},{"ruleId":"1042","severity":1,"message":"1109","line":357,"column":10,"nodeType":"1044","messageId":"1045","endLine":357,"endColumn":26},{"ruleId":"1042","severity":1,"message":"1110","line":357,"column":28,"nodeType":"1044","messageId":"1045","endLine":357,"endColumn":47},{"ruleId":"1042","severity":1,"message":"1111","line":377,"column":25,"nodeType":"1044","messageId":"1045","endLine":377,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1112","line":386,"column":6,"nodeType":"1064","endLine":386,"endColumn":8,"suggestions":"1113"},{"ruleId":"1062","severity":1,"message":"1114","line":444,"column":6,"nodeType":"1064","endLine":444,"endColumn":26,"suggestions":"1115"},{"ruleId":"1051","severity":1,"message":"1052","line":464,"column":44,"nodeType":"1053","messageId":"1054","endLine":464,"endColumn":46},{"ruleId":"1074","severity":1,"message":"1075","line":488,"column":150,"nodeType":"1076","endLine":488,"endColumn":259},{"ruleId":"1074","severity":1,"message":"1075","line":497,"column":13,"nodeType":"1076","endLine":497,"endColumn":117},{"ruleId":"1051","severity":1,"message":"1052","line":513,"column":104,"nodeType":"1053","messageId":"1054","endLine":513,"endColumn":106},{"ruleId":"1051","severity":1,"message":"1052","line":533,"column":13,"nodeType":"1053","messageId":"1054","endLine":533,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":534,"column":18,"nodeType":"1053","messageId":"1054","endLine":534,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":539,"column":13,"nodeType":"1053","messageId":"1054","endLine":539,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":540,"column":17,"nodeType":"1053","messageId":"1054","endLine":540,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1117","line":548,"column":22,"nodeType":"1118","messageId":"1119","endLine":548,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":548,"column":39,"nodeType":"1118","messageId":"1119","endLine":548,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1117","line":554,"column":22,"nodeType":"1118","messageId":"1119","endLine":554,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":554,"column":39,"nodeType":"1118","messageId":"1119","endLine":554,"endColumn":41},{"ruleId":"1051","severity":1,"message":"1052","line":575,"column":86,"nodeType":"1053","messageId":"1054","endLine":575,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":588,"column":98,"nodeType":"1053","messageId":"1054","endLine":588,"endColumn":100},{"ruleId":"1051","severity":1,"message":"1052","line":604,"column":34,"nodeType":"1053","messageId":"1054","endLine":604,"endColumn":36},{"ruleId":"1051","severity":1,"message":"1052","line":608,"column":73,"nodeType":"1053","messageId":"1054","endLine":608,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":609,"column":73,"nodeType":"1053","messageId":"1054","endLine":609,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":610,"column":73,"nodeType":"1053","messageId":"1054","endLine":610,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":611,"column":73,"nodeType":"1053","messageId":"1054","endLine":611,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":612,"column":73,"nodeType":"1053","messageId":"1054","endLine":612,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":613,"column":73,"nodeType":"1053","messageId":"1054","endLine":613,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":631,"column":77,"nodeType":"1053","messageId":"1054","endLine":631,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":632,"column":77,"nodeType":"1053","messageId":"1054","endLine":632,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":633,"column":77,"nodeType":"1053","messageId":"1054","endLine":633,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":634,"column":77,"nodeType":"1053","messageId":"1054","endLine":634,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":635,"column":77,"nodeType":"1053","messageId":"1054","endLine":635,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":636,"column":77,"nodeType":"1053","messageId":"1054","endLine":636,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":669,"column":34,"nodeType":"1053","messageId":"1054","endLine":669,"endColumn":36},{"ruleId":"1051","severity":1,"message":"1052","line":673,"column":73,"nodeType":"1053","messageId":"1054","endLine":673,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":674,"column":73,"nodeType":"1053","messageId":"1054","endLine":674,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":675,"column":73,"nodeType":"1053","messageId":"1054","endLine":675,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":676,"column":73,"nodeType":"1053","messageId":"1054","endLine":676,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":677,"column":73,"nodeType":"1053","messageId":"1054","endLine":677,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":678,"column":73,"nodeType":"1053","messageId":"1054","endLine":678,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":695,"column":77,"nodeType":"1053","messageId":"1054","endLine":695,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":696,"column":77,"nodeType":"1053","messageId":"1054","endLine":696,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":697,"column":77,"nodeType":"1053","messageId":"1054","endLine":697,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":698,"column":77,"nodeType":"1053","messageId":"1054","endLine":698,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":699,"column":77,"nodeType":"1053","messageId":"1054","endLine":699,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":700,"column":77,"nodeType":"1053","messageId":"1054","endLine":700,"endColumn":79},{"ruleId":"1042","severity":1,"message":"1070","line":740,"column":17,"nodeType":"1044","messageId":"1045","endLine":740,"endColumn":25},{"ruleId":"1042","severity":1,"message":"1120","line":741,"column":10,"nodeType":"1044","messageId":"1045","endLine":741,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":744,"column":11,"nodeType":"1053","messageId":"1054","endLine":744,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":748,"column":11,"nodeType":"1053","messageId":"1054","endLine":748,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":748,"column":21,"nodeType":"1053","messageId":"1054","endLine":748,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":748,"column":47,"nodeType":"1053","messageId":"1054","endLine":748,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":760,"column":15,"nodeType":"1053","messageId":"1054","endLine":760,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1121","line":776,"column":6,"nodeType":"1064","endLine":776,"endColumn":33,"suggestions":"1122"},{"ruleId":"1051","severity":1,"message":"1057","line":861,"column":55,"nodeType":"1053","messageId":"1054","endLine":861,"endColumn":57},{"ruleId":"1051","severity":1,"message":"1052","line":865,"column":63,"nodeType":"1053","messageId":"1054","endLine":865,"endColumn":65},{"ruleId":"1051","severity":1,"message":"1052","line":875,"column":68,"nodeType":"1053","messageId":"1054","endLine":875,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":877,"column":33,"nodeType":"1053","messageId":"1054","endLine":877,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":910,"column":76,"nodeType":"1053","messageId":"1054","endLine":910,"endColumn":78},{"ruleId":"1051","severity":1,"message":"1052","line":910,"column":128,"nodeType":"1053","messageId":"1054","endLine":910,"endColumn":130},{"ruleId":"1042","severity":1,"message":"1123","line":945,"column":20,"nodeType":"1044","messageId":"1045","endLine":945,"endColumn":31},{"ruleId":"1042","severity":1,"message":"1124","line":946,"column":10,"nodeType":"1044","messageId":"1045","endLine":946,"endColumn":19},{"ruleId":"1042","severity":1,"message":"1125","line":946,"column":21,"nodeType":"1044","messageId":"1045","endLine":946,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":999,"column":12,"nodeType":"1053","messageId":"1054","endLine":999,"endColumn":14},{"ruleId":"1051","severity":1,"message":"1052","line":1002,"column":12,"nodeType":"1053","messageId":"1054","endLine":1002,"endColumn":14},{"ruleId":"1051","severity":1,"message":"1052","line":1053,"column":15,"nodeType":"1053","messageId":"1054","endLine":1053,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1126","line":1055,"column":6,"nodeType":"1064","endLine":1055,"endColumn":16,"suggestions":"1127"},{"ruleId":"1051","severity":1,"message":"1052","line":1071,"column":20,"nodeType":"1053","messageId":"1054","endLine":1071,"endColumn":22},{"ruleId":"1062","severity":1,"message":"1128","line":1101,"column":6,"nodeType":"1064","endLine":1101,"endColumn":24,"suggestions":"1129"},{"ruleId":"1051","severity":1,"message":"1052","line":1126,"column":53,"nodeType":"1053","messageId":"1054","endLine":1126,"endColumn":55},{"ruleId":"1042","severity":1,"message":"1130","line":1245,"column":7,"nodeType":"1044","messageId":"1045","endLine":1245,"endColumn":8},{"ruleId":"1051","severity":1,"message":"1052","line":1260,"column":72,"nodeType":"1053","messageId":"1054","endLine":1260,"endColumn":74},{"ruleId":"1051","severity":1,"message":"1052","line":1260,"column":211,"nodeType":"1053","messageId":"1054","endLine":1260,"endColumn":213},{"ruleId":"1051","severity":1,"message":"1052","line":1268,"column":147,"nodeType":"1053","messageId":"1054","endLine":1268,"endColumn":149},{"ruleId":"1051","severity":1,"message":"1052","line":1278,"column":89,"nodeType":"1053","messageId":"1054","endLine":1278,"endColumn":91},{"ruleId":"1051","severity":1,"message":"1052","line":1301,"column":26,"nodeType":"1053","messageId":"1054","endLine":1301,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1052","line":1301,"column":49,"nodeType":"1053","messageId":"1054","endLine":1301,"endColumn":51},{"ruleId":"1051","severity":1,"message":"1052","line":1304,"column":35,"nodeType":"1053","messageId":"1054","endLine":1304,"endColumn":37},{"ruleId":"1051","severity":1,"message":"1052","line":1368,"column":34,"nodeType":"1053","messageId":"1054","endLine":1368,"endColumn":36},{"ruleId":"1051","severity":1,"message":"1052","line":1368,"column":64,"nodeType":"1053","messageId":"1054","endLine":1368,"endColumn":66},{"ruleId":"1051","severity":1,"message":"1052","line":1375,"column":114,"nodeType":"1053","messageId":"1054","endLine":1375,"endColumn":116},{"ruleId":"1051","severity":1,"message":"1052","line":1387,"column":47,"nodeType":"1053","messageId":"1054","endLine":1387,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1052","line":1394,"column":108,"nodeType":"1053","messageId":"1054","endLine":1394,"endColumn":110},{"ruleId":"1051","severity":1,"message":"1052","line":1434,"column":39,"nodeType":"1053","messageId":"1054","endLine":1434,"endColumn":41},{"ruleId":"1051","severity":1,"message":"1052","line":1438,"column":126,"nodeType":"1053","messageId":"1054","endLine":1438,"endColumn":128},{"ruleId":"1074","severity":1,"message":"1075","line":1517,"column":109,"nodeType":"1076","endLine":1517,"endColumn":195},{"ruleId":"1042","severity":1,"message":"1131","line":1578,"column":9,"nodeType":"1044","messageId":"1045","endLine":1578,"endColumn":19},{"ruleId":"1042","severity":1,"message":"1132","line":1579,"column":10,"nodeType":"1044","messageId":"1045","endLine":1579,"endColumn":18},{"ruleId":"1042","severity":1,"message":"1133","line":1583,"column":10,"nodeType":"1044","messageId":"1045","endLine":1583,"endColumn":20},{"ruleId":"1042","severity":1,"message":"1134","line":1583,"column":22,"nodeType":"1044","messageId":"1045","endLine":1583,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":1618,"column":28,"nodeType":"1053","messageId":"1054","endLine":1618,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":1618,"column":70,"nodeType":"1053","messageId":"1054","endLine":1618,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":1758,"column":43,"nodeType":"1053","messageId":"1054","endLine":1758,"endColumn":45},{"ruleId":"1051","severity":1,"message":"1052","line":1762,"column":106,"nodeType":"1053","messageId":"1054","endLine":1762,"endColumn":108},{"ruleId":"1074","severity":1,"message":"1075","line":1781,"column":17,"nodeType":"1076","endLine":1781,"endColumn":103},{"ruleId":"1051","severity":1,"message":"1052","line":1826,"column":67,"nodeType":"1053","messageId":"1054","endLine":1826,"endColumn":69},{"ruleId":"1051","severity":1,"message":"1052","line":1887,"column":13,"nodeType":"1053","messageId":"1054","endLine":1887,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":1888,"column":18,"nodeType":"1053","messageId":"1054","endLine":1888,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":1893,"column":13,"nodeType":"1053","messageId":"1054","endLine":1893,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":1894,"column":17,"nodeType":"1053","messageId":"1054","endLine":1894,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1117","line":1902,"column":22,"nodeType":"1118","messageId":"1119","endLine":1902,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":1902,"column":39,"nodeType":"1118","messageId":"1119","endLine":1902,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1117","line":1907,"column":22,"nodeType":"1118","messageId":"1119","endLine":1907,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":1907,"column":39,"nodeType":"1118","messageId":"1119","endLine":1907,"endColumn":41},{"ruleId":"1051","severity":1,"message":"1052","line":1937,"column":86,"nodeType":"1053","messageId":"1054","endLine":1937,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":1945,"column":119,"nodeType":"1053","messageId":"1054","endLine":1945,"endColumn":121},{"ruleId":"1051","severity":1,"message":"1052","line":1957,"column":32,"nodeType":"1053","messageId":"1054","endLine":1957,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":1962,"column":71,"nodeType":"1053","messageId":"1054","endLine":1962,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":1963,"column":71,"nodeType":"1053","messageId":"1054","endLine":1963,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":1964,"column":71,"nodeType":"1053","messageId":"1054","endLine":1964,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":1965,"column":71,"nodeType":"1053","messageId":"1054","endLine":1965,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":1966,"column":71,"nodeType":"1053","messageId":"1054","endLine":1966,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":1967,"column":71,"nodeType":"1053","messageId":"1054","endLine":1967,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":1985,"column":77,"nodeType":"1053","messageId":"1054","endLine":1985,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":1986,"column":77,"nodeType":"1053","messageId":"1054","endLine":1986,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":1987,"column":77,"nodeType":"1053","messageId":"1054","endLine":1987,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":1988,"column":77,"nodeType":"1053","messageId":"1054","endLine":1988,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":1989,"column":77,"nodeType":"1053","messageId":"1054","endLine":1989,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":1990,"column":77,"nodeType":"1053","messageId":"1054","endLine":1990,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2025,"column":32,"nodeType":"1053","messageId":"1054","endLine":2025,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":2032,"column":71,"nodeType":"1053","messageId":"1054","endLine":2032,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2033,"column":71,"nodeType":"1053","messageId":"1054","endLine":2033,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2034,"column":71,"nodeType":"1053","messageId":"1054","endLine":2034,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2035,"column":71,"nodeType":"1053","messageId":"1054","endLine":2035,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2036,"column":71,"nodeType":"1053","messageId":"1054","endLine":2036,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2037,"column":71,"nodeType":"1053","messageId":"1054","endLine":2037,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2056,"column":77,"nodeType":"1053","messageId":"1054","endLine":2056,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2057,"column":77,"nodeType":"1053","messageId":"1054","endLine":2057,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2058,"column":77,"nodeType":"1053","messageId":"1054","endLine":2058,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2059,"column":77,"nodeType":"1053","messageId":"1054","endLine":2059,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2060,"column":77,"nodeType":"1053","messageId":"1054","endLine":2060,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2061,"column":77,"nodeType":"1053","messageId":"1054","endLine":2061,"endColumn":79},{"ruleId":"1042","severity":1,"message":"1070","line":2165,"column":17,"nodeType":"1044","messageId":"1045","endLine":2165,"endColumn":25},{"ruleId":"1042","severity":1,"message":"1120","line":2166,"column":10,"nodeType":"1044","messageId":"1045","endLine":2166,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":2169,"column":11,"nodeType":"1053","messageId":"1054","endLine":2169,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":2173,"column":11,"nodeType":"1053","messageId":"1054","endLine":2173,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":2173,"column":21,"nodeType":"1053","messageId":"1054","endLine":2173,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":2173,"column":47,"nodeType":"1053","messageId":"1054","endLine":2173,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":2184,"column":15,"nodeType":"1053","messageId":"1054","endLine":2184,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1135","line":2200,"column":6,"nodeType":"1064","endLine":2200,"endColumn":33,"suggestions":"1136"},{"ruleId":"1051","severity":1,"message":"1057","line":2277,"column":61,"nodeType":"1053","messageId":"1054","endLine":2277,"endColumn":63},{"ruleId":"1051","severity":1,"message":"1052","line":2281,"column":63,"nodeType":"1053","messageId":"1054","endLine":2281,"endColumn":65},{"ruleId":"1051","severity":1,"message":"1052","line":2284,"column":103,"nodeType":"1053","messageId":"1054","endLine":2284,"endColumn":105},{"ruleId":"1051","severity":1,"message":"1052","line":2291,"column":68,"nodeType":"1053","messageId":"1054","endLine":2291,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":2293,"column":33,"nodeType":"1053","messageId":"1054","endLine":2293,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":2326,"column":85,"nodeType":"1053","messageId":"1054","endLine":2326,"endColumn":87},{"ruleId":"1051","severity":1,"message":"1052","line":2326,"column":138,"nodeType":"1053","messageId":"1054","endLine":2326,"endColumn":140},{"ruleId":"1051","severity":1,"message":"1052","line":2352,"column":13,"nodeType":"1053","messageId":"1054","endLine":2352,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":2353,"column":18,"nodeType":"1053","messageId":"1054","endLine":2353,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":2358,"column":13,"nodeType":"1053","messageId":"1054","endLine":2358,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":2359,"column":17,"nodeType":"1053","messageId":"1054","endLine":2359,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1117","line":2367,"column":22,"nodeType":"1118","messageId":"1119","endLine":2367,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":2367,"column":39,"nodeType":"1118","messageId":"1119","endLine":2367,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1117","line":2372,"column":22,"nodeType":"1118","messageId":"1119","endLine":2372,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":2372,"column":39,"nodeType":"1118","messageId":"1119","endLine":2372,"endColumn":41},{"ruleId":"1051","severity":1,"message":"1052","line":2393,"column":86,"nodeType":"1053","messageId":"1054","endLine":2393,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":2402,"column":96,"nodeType":"1053","messageId":"1054","endLine":2402,"endColumn":98},{"ruleId":"1051","severity":1,"message":"1052","line":2415,"column":32,"nodeType":"1053","messageId":"1054","endLine":2415,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":2422,"column":71,"nodeType":"1053","messageId":"1054","endLine":2422,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2423,"column":71,"nodeType":"1053","messageId":"1054","endLine":2423,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2424,"column":71,"nodeType":"1053","messageId":"1054","endLine":2424,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2425,"column":71,"nodeType":"1053","messageId":"1054","endLine":2425,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2426,"column":71,"nodeType":"1053","messageId":"1054","endLine":2426,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2427,"column":71,"nodeType":"1053","messageId":"1054","endLine":2427,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2446,"column":77,"nodeType":"1053","messageId":"1054","endLine":2446,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2447,"column":77,"nodeType":"1053","messageId":"1054","endLine":2447,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2448,"column":77,"nodeType":"1053","messageId":"1054","endLine":2448,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2449,"column":77,"nodeType":"1053","messageId":"1054","endLine":2449,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2450,"column":77,"nodeType":"1053","messageId":"1054","endLine":2450,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2451,"column":77,"nodeType":"1053","messageId":"1054","endLine":2451,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2487,"column":32,"nodeType":"1053","messageId":"1054","endLine":2487,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":2494,"column":71,"nodeType":"1053","messageId":"1054","endLine":2494,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2495,"column":71,"nodeType":"1053","messageId":"1054","endLine":2495,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2496,"column":71,"nodeType":"1053","messageId":"1054","endLine":2496,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2497,"column":71,"nodeType":"1053","messageId":"1054","endLine":2497,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2498,"column":71,"nodeType":"1053","messageId":"1054","endLine":2498,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2499,"column":71,"nodeType":"1053","messageId":"1054","endLine":2499,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":2518,"column":77,"nodeType":"1053","messageId":"1054","endLine":2518,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2519,"column":77,"nodeType":"1053","messageId":"1054","endLine":2519,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2520,"column":77,"nodeType":"1053","messageId":"1054","endLine":2520,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2521,"column":77,"nodeType":"1053","messageId":"1054","endLine":2521,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2522,"column":77,"nodeType":"1053","messageId":"1054","endLine":2522,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2523,"column":77,"nodeType":"1053","messageId":"1054","endLine":2523,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":2607,"column":28,"nodeType":"1053","messageId":"1054","endLine":2607,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":2658,"column":30,"nodeType":"1053","messageId":"1054","endLine":2658,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":2658,"column":72,"nodeType":"1053","messageId":"1054","endLine":2658,"endColumn":74},{"ruleId":"1051","severity":1,"message":"1052","line":2860,"column":20,"nodeType":"1053","messageId":"1054","endLine":2860,"endColumn":22},{"ruleId":"1051","severity":1,"message":"1052","line":2914,"column":22,"nodeType":"1053","messageId":"1054","endLine":2914,"endColumn":24},{"ruleId":"1062","severity":1,"message":"1137","line":2993,"column":6,"nodeType":"1064","endLine":2993,"endColumn":17,"suggestions":"1138"},{"ruleId":"1062","severity":1,"message":"1139","line":2998,"column":6,"nodeType":"1064","endLine":2998,"endColumn":17,"suggestions":"1140"},{"ruleId":"1062","severity":1,"message":"1141","line":3001,"column":6,"nodeType":"1064","endLine":3001,"endColumn":19,"suggestions":"1142"},{"ruleId":"1062","severity":1,"message":"1143","line":3001,"column":7,"nodeType":"1144","endLine":3001,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1145","line":3005,"column":6,"nodeType":"1064","endLine":3005,"endColumn":35,"suggestions":"1146"},{"ruleId":"1062","severity":1,"message":"1143","line":3005,"column":7,"nodeType":"1144","endLine":3005,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1143","line":3005,"column":23,"nodeType":"1144","endLine":3005,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":3059,"column":40,"nodeType":"1053","messageId":"1054","endLine":3059,"endColumn":42},{"ruleId":"1051","severity":1,"message":"1052","line":3073,"column":18,"nodeType":"1053","messageId":"1054","endLine":3073,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1057","line":3074,"column":41,"nodeType":"1053","messageId":"1054","endLine":3074,"endColumn":43},{"ruleId":"1051","severity":1,"message":"1052","line":3118,"column":18,"nodeType":"1053","messageId":"1054","endLine":3118,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":3118,"column":35,"nodeType":"1053","messageId":"1054","endLine":3118,"endColumn":37},{"ruleId":"1051","severity":1,"message":"1057","line":3119,"column":41,"nodeType":"1053","messageId":"1054","endLine":3119,"endColumn":43},{"ruleId":"1067","severity":1,"message":"1068","line":3127,"column":58,"nodeType":"1053","messageId":"1069","endLine":3127,"endColumn":59},{"ruleId":"1067","severity":1,"message":"1068","line":3128,"column":56,"nodeType":"1053","messageId":"1069","endLine":3128,"endColumn":57},{"ruleId":"1051","severity":1,"message":"1052","line":3163,"column":28,"nodeType":"1053","messageId":"1054","endLine":3163,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":3163,"column":70,"nodeType":"1053","messageId":"1054","endLine":3163,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":3171,"column":16,"nodeType":"1053","messageId":"1054","endLine":3171,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":3174,"column":16,"nodeType":"1053","messageId":"1054","endLine":3174,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":3199,"column":54,"nodeType":"1053","messageId":"1054","endLine":3199,"endColumn":56},{"ruleId":"1116","severity":1,"message":"1147","line":3199,"column":67,"nodeType":"1118","messageId":"1119","endLine":3199,"endColumn":69},{"ruleId":"1116","severity":1,"message":"1147","line":3199,"column":89,"nodeType":"1118","messageId":"1119","endLine":3199,"endColumn":91},{"ruleId":"1051","severity":1,"message":"1052","line":3199,"column":118,"nodeType":"1053","messageId":"1054","endLine":3199,"endColumn":120},{"ruleId":"1051","severity":1,"message":"1052","line":3216,"column":74,"nodeType":"1053","messageId":"1054","endLine":3216,"endColumn":76},{"ruleId":"1051","severity":1,"message":"1052","line":3226,"column":74,"nodeType":"1053","messageId":"1054","endLine":3226,"endColumn":76},{"ruleId":"1051","severity":1,"message":"1052","line":3254,"column":47,"nodeType":"1053","messageId":"1054","endLine":3254,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1052","line":3260,"column":107,"nodeType":"1053","messageId":"1054","endLine":3260,"endColumn":109},{"ruleId":"1051","severity":1,"message":"1052","line":3260,"column":177,"nodeType":"1053","messageId":"1054","endLine":3260,"endColumn":179},{"ruleId":"1051","severity":1,"message":"1052","line":3319,"column":68,"nodeType":"1053","messageId":"1054","endLine":3319,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":3320,"column":70,"nodeType":"1053","messageId":"1054","endLine":3320,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":3338,"column":69,"nodeType":"1053","messageId":"1054","endLine":3338,"endColumn":71},{"ruleId":"1051","severity":1,"message":"1052","line":3374,"column":45,"nodeType":"1053","messageId":"1054","endLine":3374,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1052","line":3381,"column":116,"nodeType":"1053","messageId":"1054","endLine":3381,"endColumn":118},{"ruleId":"1051","severity":1,"message":"1052","line":3430,"column":68,"nodeType":"1053","messageId":"1054","endLine":3430,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":3443,"column":68,"nodeType":"1053","messageId":"1054","endLine":3443,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":3456,"column":68,"nodeType":"1053","messageId":"1054","endLine":3456,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":3487,"column":30,"nodeType":"1053","messageId":"1054","endLine":3487,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":3487,"column":50,"nodeType":"1053","messageId":"1054","endLine":3487,"endColumn":52},{"ruleId":"1042","severity":1,"message":"1070","line":3654,"column":17,"nodeType":"1044","messageId":"1045","endLine":3654,"endColumn":25},{"ruleId":"1042","severity":1,"message":"1120","line":3655,"column":10,"nodeType":"1044","messageId":"1045","endLine":3655,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":3658,"column":11,"nodeType":"1053","messageId":"1054","endLine":3658,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":3662,"column":11,"nodeType":"1053","messageId":"1054","endLine":3662,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":3662,"column":21,"nodeType":"1053","messageId":"1054","endLine":3662,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":3662,"column":47,"nodeType":"1053","messageId":"1054","endLine":3662,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":3672,"column":15,"nodeType":"1053","messageId":"1054","endLine":3672,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1148","line":3688,"column":6,"nodeType":"1064","endLine":3688,"endColumn":33,"suggestions":"1149"},{"ruleId":"1051","severity":1,"message":"1057","line":3770,"column":63,"nodeType":"1053","messageId":"1054","endLine":3770,"endColumn":65},{"ruleId":"1051","severity":1,"message":"1052","line":3774,"column":63,"nodeType":"1053","messageId":"1054","endLine":3774,"endColumn":65},{"ruleId":"1051","severity":1,"message":"1052","line":3783,"column":68,"nodeType":"1053","messageId":"1054","endLine":3783,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":3785,"column":33,"nodeType":"1053","messageId":"1054","endLine":3785,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":3818,"column":76,"nodeType":"1053","messageId":"1054","endLine":3818,"endColumn":78},{"ruleId":"1051","severity":1,"message":"1052","line":3818,"column":130,"nodeType":"1053","messageId":"1054","endLine":3818,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":3843,"column":13,"nodeType":"1053","messageId":"1054","endLine":3843,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":3844,"column":18,"nodeType":"1053","messageId":"1054","endLine":3844,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":3849,"column":13,"nodeType":"1053","messageId":"1054","endLine":3849,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1052","line":3850,"column":17,"nodeType":"1053","messageId":"1054","endLine":3850,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1117","line":3858,"column":22,"nodeType":"1118","messageId":"1119","endLine":3858,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":3858,"column":39,"nodeType":"1118","messageId":"1119","endLine":3858,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1117","line":3863,"column":22,"nodeType":"1118","messageId":"1119","endLine":3863,"endColumn":24},{"ruleId":"1116","severity":1,"message":"1117","line":3863,"column":39,"nodeType":"1118","messageId":"1119","endLine":3863,"endColumn":41},{"ruleId":"1051","severity":1,"message":"1052","line":3892,"column":77,"nodeType":"1053","messageId":"1054","endLine":3892,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3900,"column":96,"nodeType":"1053","messageId":"1054","endLine":3900,"endColumn":98},{"ruleId":"1051","severity":1,"message":"1052","line":3916,"column":34,"nodeType":"1053","messageId":"1054","endLine":3916,"endColumn":36},{"ruleId":"1051","severity":1,"message":"1052","line":3923,"column":73,"nodeType":"1053","messageId":"1054","endLine":3923,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":3924,"column":73,"nodeType":"1053","messageId":"1054","endLine":3924,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":3925,"column":73,"nodeType":"1053","messageId":"1054","endLine":3925,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":3926,"column":73,"nodeType":"1053","messageId":"1054","endLine":3926,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":3927,"column":73,"nodeType":"1053","messageId":"1054","endLine":3927,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":3928,"column":73,"nodeType":"1053","messageId":"1054","endLine":3928,"endColumn":75},{"ruleId":"1051","severity":1,"message":"1052","line":3947,"column":77,"nodeType":"1053","messageId":"1054","endLine":3947,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3948,"column":77,"nodeType":"1053","messageId":"1054","endLine":3948,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3949,"column":77,"nodeType":"1053","messageId":"1054","endLine":3949,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3950,"column":77,"nodeType":"1053","messageId":"1054","endLine":3950,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3951,"column":77,"nodeType":"1053","messageId":"1054","endLine":3951,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3952,"column":77,"nodeType":"1053","messageId":"1054","endLine":3952,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":3989,"column":32,"nodeType":"1053","messageId":"1054","endLine":3989,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":3996,"column":71,"nodeType":"1053","messageId":"1054","endLine":3996,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":3997,"column":71,"nodeType":"1053","messageId":"1054","endLine":3997,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":3998,"column":71,"nodeType":"1053","messageId":"1054","endLine":3998,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":3999,"column":71,"nodeType":"1053","messageId":"1054","endLine":3999,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":4000,"column":71,"nodeType":"1053","messageId":"1054","endLine":4000,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":4001,"column":71,"nodeType":"1053","messageId":"1054","endLine":4001,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":4020,"column":77,"nodeType":"1053","messageId":"1054","endLine":4020,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":4021,"column":77,"nodeType":"1053","messageId":"1054","endLine":4021,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":4022,"column":77,"nodeType":"1053","messageId":"1054","endLine":4022,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":4023,"column":77,"nodeType":"1053","messageId":"1054","endLine":4023,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":4024,"column":77,"nodeType":"1053","messageId":"1054","endLine":4024,"endColumn":79},{"ruleId":"1051","severity":1,"message":"1052","line":4025,"column":77,"nodeType":"1053","messageId":"1054","endLine":4025,"endColumn":79},{"ruleId":"1042","severity":1,"message":"1150","line":4056,"column":9,"nodeType":"1044","messageId":"1045","endLine":4056,"endColumn":17},{"ruleId":"1042","severity":1,"message":"1151","line":4057,"column":9,"nodeType":"1044","messageId":"1045","endLine":4057,"endColumn":19},{"ruleId":"1051","severity":1,"message":"1052","line":4101,"column":28,"nodeType":"1053","messageId":"1054","endLine":4101,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":4101,"column":70,"nodeType":"1053","messageId":"1054","endLine":4101,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":4255,"column":43,"nodeType":"1053","messageId":"1054","endLine":4255,"endColumn":45},{"ruleId":"1051","severity":1,"message":"1052","line":4259,"column":97,"nodeType":"1053","messageId":"1054","endLine":4259,"endColumn":99},{"ruleId":"1051","severity":1,"message":"1052","line":4284,"column":43,"nodeType":"1053","messageId":"1054","endLine":4284,"endColumn":45},{"ruleId":"1051","severity":1,"message":"1052","line":4288,"column":106,"nodeType":"1053","messageId":"1054","endLine":4288,"endColumn":108},{"ruleId":"1074","severity":1,"message":"1075","line":4306,"column":68,"nodeType":"1076","endLine":4306,"endColumn":154},{"ruleId":"1051","severity":1,"message":"1052","line":4351,"column":67,"nodeType":"1053","messageId":"1054","endLine":4351,"endColumn":69},{"ruleId":"1042","severity":1,"message":"1070","line":4473,"column":17,"nodeType":"1044","messageId":"1045","endLine":4473,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":4481,"column":11,"nodeType":"1053","messageId":"1054","endLine":4481,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":4485,"column":11,"nodeType":"1053","messageId":"1054","endLine":4485,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":4485,"column":21,"nodeType":"1053","messageId":"1054","endLine":4485,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":4485,"column":47,"nodeType":"1053","messageId":"1054","endLine":4485,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":4496,"column":15,"nodeType":"1053","messageId":"1054","endLine":4496,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1152","line":4512,"column":6,"nodeType":"1064","endLine":4512,"endColumn":18,"suggestions":"1153"},{"ruleId":"1042","severity":1,"message":"1130","line":4545,"column":7,"nodeType":"1044","messageId":"1045","endLine":4545,"endColumn":8},{"ruleId":"1051","severity":1,"message":"1052","line":4547,"column":21,"nodeType":"1053","messageId":"1054","endLine":4547,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":4589,"column":28,"nodeType":"1053","messageId":"1054","endLine":4589,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":4589,"column":64,"nodeType":"1053","messageId":"1054","endLine":4589,"endColumn":66},{"ruleId":"1051","severity":1,"message":"1052","line":4605,"column":43,"nodeType":"1053","messageId":"1054","endLine":4605,"endColumn":45},{"ruleId":"1074","severity":1,"message":"1075","line":4606,"column":29,"nodeType":"1076","endLine":4606,"endColumn":122},{"ruleId":"1051","severity":1,"message":"1052","line":4612,"column":53,"nodeType":"1053","messageId":"1054","endLine":4612,"endColumn":55},{"ruleId":"1074","severity":1,"message":"1075","line":4614,"column":29,"nodeType":"1076","endLine":4614,"endColumn":121},{"ruleId":"1051","severity":1,"message":"1052","line":4618,"column":33,"nodeType":"1053","messageId":"1054","endLine":4618,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":4619,"column":164,"nodeType":"1053","messageId":"1054","endLine":4619,"endColumn":166},{"ruleId":"1051","severity":1,"message":"1052","line":4646,"column":74,"nodeType":"1053","messageId":"1054","endLine":4646,"endColumn":76},{"ruleId":"1051","severity":1,"message":"1052","line":4646,"column":126,"nodeType":"1053","messageId":"1054","endLine":4646,"endColumn":128},{"ruleId":"1042","severity":1,"message":"1070","line":4666,"column":17,"nodeType":"1044","messageId":"1045","endLine":4666,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":4674,"column":11,"nodeType":"1053","messageId":"1054","endLine":4674,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":4678,"column":11,"nodeType":"1053","messageId":"1054","endLine":4678,"endColumn":13},{"ruleId":"1051","severity":1,"message":"1052","line":4678,"column":21,"nodeType":"1053","messageId":"1054","endLine":4678,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":4678,"column":47,"nodeType":"1053","messageId":"1054","endLine":4678,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1057","line":4689,"column":15,"nodeType":"1053","messageId":"1054","endLine":4689,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1152","line":4705,"column":6,"nodeType":"1064","endLine":4705,"endColumn":18,"suggestions":"1154"},{"ruleId":"1042","severity":1,"message":"1130","line":4738,"column":7,"nodeType":"1044","messageId":"1045","endLine":4738,"endColumn":8},{"ruleId":"1051","severity":1,"message":"1052","line":4740,"column":21,"nodeType":"1053","messageId":"1054","endLine":4740,"endColumn":23},{"ruleId":"1051","severity":1,"message":"1052","line":4781,"column":28,"nodeType":"1053","messageId":"1054","endLine":4781,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":4781,"column":64,"nodeType":"1053","messageId":"1054","endLine":4781,"endColumn":66},{"ruleId":"1051","severity":1,"message":"1052","line":4797,"column":43,"nodeType":"1053","messageId":"1054","endLine":4797,"endColumn":45},{"ruleId":"1074","severity":1,"message":"1075","line":4798,"column":29,"nodeType":"1076","endLine":4798,"endColumn":122},{"ruleId":"1051","severity":1,"message":"1052","line":4804,"column":53,"nodeType":"1053","messageId":"1054","endLine":4804,"endColumn":55},{"ruleId":"1074","severity":1,"message":"1075","line":4806,"column":29,"nodeType":"1076","endLine":4806,"endColumn":121},{"ruleId":"1051","severity":1,"message":"1052","line":4810,"column":33,"nodeType":"1053","messageId":"1054","endLine":4810,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":4811,"column":164,"nodeType":"1053","messageId":"1054","endLine":4811,"endColumn":166},{"ruleId":"1051","severity":1,"message":"1052","line":4837,"column":71,"nodeType":"1053","messageId":"1054","endLine":4837,"endColumn":73},{"ruleId":"1051","severity":1,"message":"1052","line":4837,"column":124,"nodeType":"1053","messageId":"1054","endLine":4837,"endColumn":126},{"ruleId":"1051","severity":1,"message":"1052","line":4883,"column":62,"nodeType":"1053","messageId":"1054","endLine":4883,"endColumn":64},{"ruleId":"1051","severity":1,"message":"1052","line":4935,"column":62,"nodeType":"1053","messageId":"1054","endLine":4935,"endColumn":64},{"ruleId":"1042","severity":1,"message":"1155","line":4956,"column":17,"nodeType":"1044","messageId":"1045","endLine":4956,"endColumn":25},{"ruleId":"1042","severity":1,"message":"1156","line":4958,"column":10,"nodeType":"1044","messageId":"1045","endLine":4958,"endColumn":15},{"ruleId":"1042","severity":1,"message":"1157","line":4958,"column":17,"nodeType":"1044","messageId":"1045","endLine":4958,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1158","line":4978,"column":6,"nodeType":"1064","endLine":4978,"endColumn":14,"suggestions":"1159"},{"ruleId":"1051","severity":1,"message":"1052","line":4981,"column":16,"nodeType":"1053","messageId":"1054","endLine":4981,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":4985,"column":16,"nodeType":"1053","messageId":"1054","endLine":4985,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1052","line":5048,"column":25,"nodeType":"1053","messageId":"1054","endLine":5048,"endColumn":27},{"ruleId":"1051","severity":1,"message":"1052","line":5048,"column":58,"nodeType":"1053","messageId":"1054","endLine":5048,"endColumn":60},{"ruleId":"1051","severity":1,"message":"1052","line":5058,"column":50,"nodeType":"1053","messageId":"1054","endLine":5058,"endColumn":52},{"ruleId":"1074","severity":1,"message":"1075","line":5069,"column":116,"nodeType":"1076","endLine":5069,"endColumn":203},{"ruleId":"1051","severity":1,"message":"1052","line":5072,"column":33,"nodeType":"1053","messageId":"1054","endLine":5072,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":5073,"column":68,"nodeType":"1053","messageId":"1054","endLine":5073,"endColumn":70},{"ruleId":"1051","severity":1,"message":"1052","line":5091,"column":88,"nodeType":"1053","messageId":"1054","endLine":5091,"endColumn":90},{"ruleId":"1042","severity":1,"message":"1160","line":1,"column":8,"nodeType":"1044","messageId":"1045","endLine":1,"endColumn":13},{"ruleId":"1042","severity":1,"message":"1161","line":15,"column":23,"nodeType":"1044","messageId":"1045","endLine":15,"endColumn":37},{"ruleId":"1042","severity":1,"message":"1162","line":16,"column":23,"nodeType":"1044","messageId":"1045","endLine":16,"endColumn":37},{"ruleId":"1042","severity":1,"message":"1163","line":18,"column":10,"nodeType":"1044","messageId":"1045","endLine":18,"endColumn":22},{"ruleId":"1042","severity":1,"message":"1164","line":18,"column":24,"nodeType":"1044","messageId":"1045","endLine":18,"endColumn":39},{"ruleId":"1062","severity":1,"message":"1165","line":42,"column":6,"nodeType":"1064","endLine":42,"endColumn":36,"suggestions":"1166"},{"ruleId":"1051","severity":1,"message":"1052","line":54,"column":19,"nodeType":"1053","messageId":"1054","endLine":54,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":54,"column":45,"nodeType":"1053","messageId":"1054","endLine":54,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":60,"column":26,"nodeType":"1053","messageId":"1054","endLine":60,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1052","line":68,"column":19,"nodeType":"1053","messageId":"1054","endLine":68,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":74,"column":26,"nodeType":"1053","messageId":"1054","endLine":74,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1052","line":87,"column":19,"nodeType":"1053","messageId":"1054","endLine":87,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":87,"column":45,"nodeType":"1053","messageId":"1054","endLine":87,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":93,"column":26,"nodeType":"1053","messageId":"1054","endLine":93,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1052","line":101,"column":19,"nodeType":"1053","messageId":"1054","endLine":101,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":107,"column":26,"nodeType":"1053","messageId":"1054","endLine":107,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1052","line":120,"column":19,"nodeType":"1053","messageId":"1054","endLine":120,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":120,"column":45,"nodeType":"1053","messageId":"1054","endLine":120,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":126,"column":27,"nodeType":"1053","messageId":"1054","endLine":126,"endColumn":29},{"ruleId":"1051","severity":1,"message":"1052","line":133,"column":19,"nodeType":"1053","messageId":"1054","endLine":133,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":139,"column":27,"nodeType":"1053","messageId":"1054","endLine":139,"endColumn":29},{"ruleId":"1051","severity":1,"message":"1052","line":151,"column":19,"nodeType":"1053","messageId":"1054","endLine":151,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":151,"column":45,"nodeType":"1053","messageId":"1054","endLine":151,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":157,"column":30,"nodeType":"1053","messageId":"1054","endLine":157,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":164,"column":19,"nodeType":"1053","messageId":"1054","endLine":164,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":170,"column":30,"nodeType":"1053","messageId":"1054","endLine":170,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":182,"column":19,"nodeType":"1053","messageId":"1054","endLine":182,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":182,"column":45,"nodeType":"1053","messageId":"1054","endLine":182,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":188,"column":28,"nodeType":"1053","messageId":"1054","endLine":188,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":196,"column":19,"nodeType":"1053","messageId":"1054","endLine":196,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":202,"column":28,"nodeType":"1053","messageId":"1054","endLine":202,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":215,"column":19,"nodeType":"1053","messageId":"1054","endLine":215,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":215,"column":45,"nodeType":"1053","messageId":"1054","endLine":215,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":221,"column":29,"nodeType":"1053","messageId":"1054","endLine":221,"endColumn":31},{"ruleId":"1051","severity":1,"message":"1052","line":229,"column":19,"nodeType":"1053","messageId":"1054","endLine":229,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":235,"column":29,"nodeType":"1053","messageId":"1054","endLine":235,"endColumn":31},{"ruleId":"1051","severity":1,"message":"1052","line":248,"column":19,"nodeType":"1053","messageId":"1054","endLine":248,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":248,"column":45,"nodeType":"1053","messageId":"1054","endLine":248,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1057","line":254,"column":34,"nodeType":"1053","messageId":"1054","endLine":254,"endColumn":36},{"ruleId":"1051","severity":1,"message":"1052","line":262,"column":19,"nodeType":"1053","messageId":"1054","endLine":262,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":268,"column":34,"nodeType":"1053","messageId":"1054","endLine":268,"endColumn":36},{"ruleId":"1042","severity":1,"message":"1167","line":277,"column":12,"nodeType":"1044","messageId":"1045","endLine":277,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1057","line":283,"column":30,"nodeType":"1053","messageId":"1054","endLine":283,"endColumn":32},{"ruleId":"1042","severity":1,"message":"1168","line":292,"column":12,"nodeType":"1044","messageId":"1045","endLine":292,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1057","line":298,"column":30,"nodeType":"1053","messageId":"1054","endLine":298,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":312,"column":58,"nodeType":"1053","messageId":"1054","endLine":312,"endColumn":60},{"ruleId":"1051","severity":1,"message":"1057","line":317,"column":32,"nodeType":"1053","messageId":"1054","endLine":317,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":330,"column":19,"nodeType":"1053","messageId":"1054","endLine":330,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":330,"column":37,"nodeType":"1053","messageId":"1054","endLine":330,"endColumn":39},{"ruleId":"1051","severity":1,"message":"1057","line":336,"column":32,"nodeType":"1053","messageId":"1054","endLine":336,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":343,"column":19,"nodeType":"1053","messageId":"1054","endLine":343,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1057","line":349,"column":32,"nodeType":"1053","messageId":"1054","endLine":349,"endColumn":34},{"ruleId":"1042","severity":1,"message":"1169","line":359,"column":12,"nodeType":"1044","messageId":"1045","endLine":359,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1059","line":377,"column":50,"nodeType":"1060","messageId":"1061","endLine":377,"endColumn":52},{"ruleId":"1051","severity":1,"message":"1052","line":378,"column":24,"nodeType":"1053","messageId":"1054","endLine":378,"endColumn":26},{"ruleId":"1051","severity":1,"message":"1052","line":395,"column":12,"nodeType":"1053","messageId":"1054","endLine":395,"endColumn":14},{"ruleId":"1051","severity":1,"message":"1052","line":399,"column":12,"nodeType":"1053","messageId":"1054","endLine":399,"endColumn":14},{"ruleId":"1074","severity":1,"message":"1075","line":473,"column":101,"nodeType":"1076","endLine":473,"endColumn":192},{"ruleId":"1074","severity":1,"message":"1075","line":483,"column":101,"nodeType":"1076","endLine":483,"endColumn":192},{"ruleId":"1051","severity":1,"message":"1052","line":526,"column":59,"nodeType":"1053","messageId":"1054","endLine":526,"endColumn":61},{"ruleId":"1051","severity":1,"message":"1052","line":598,"column":59,"nodeType":"1053","messageId":"1054","endLine":598,"endColumn":61},{"ruleId":"1051","severity":1,"message":"1052","line":734,"column":61,"nodeType":"1053","messageId":"1054","endLine":734,"endColumn":63},{"ruleId":"1051","severity":1,"message":"1052","line":813,"column":55,"nodeType":"1053","messageId":"1054","endLine":813,"endColumn":57},{"ruleId":"1042","severity":1,"message":"1170","line":5,"column":10,"nodeType":"1044","messageId":"1045","endLine":5,"endColumn":19},{"ruleId":"1042","severity":1,"message":"1171","line":22,"column":10,"nodeType":"1044","messageId":"1045","endLine":22,"endColumn":18},{"ruleId":"1058","severity":1,"message":"1059","line":32,"column":54,"nodeType":"1060","messageId":"1061","endLine":32,"endColumn":56},{"ruleId":"1062","severity":1,"message":"1172","line":53,"column":6,"nodeType":"1064","endLine":53,"endColumn":8,"suggestions":"1173"},{"ruleId":"1062","severity":1,"message":"1172","line":56,"column":6,"nodeType":"1064","endLine":56,"endColumn":52,"suggestions":"1174"},{"ruleId":"1051","severity":1,"message":"1057","line":84,"column":24,"nodeType":"1053","messageId":"1054","endLine":84,"endColumn":26},{"ruleId":"1051","severity":1,"message":"1057","line":100,"column":24,"nodeType":"1053","messageId":"1054","endLine":100,"endColumn":26},{"ruleId":"1051","severity":1,"message":"1057","line":115,"column":25,"nodeType":"1053","messageId":"1054","endLine":115,"endColumn":27},{"ruleId":"1051","severity":1,"message":"1057","line":130,"column":28,"nodeType":"1053","messageId":"1054","endLine":130,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1057","line":145,"column":26,"nodeType":"1053","messageId":"1054","endLine":145,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1057","line":160,"column":27,"nodeType":"1053","messageId":"1054","endLine":160,"endColumn":29},{"ruleId":"1051","severity":1,"message":"1057","line":175,"column":32,"nodeType":"1053","messageId":"1054","endLine":175,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1057","line":188,"column":30,"nodeType":"1053","messageId":"1054","endLine":188,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1057","line":203,"column":30,"nodeType":"1053","messageId":"1054","endLine":203,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":217,"column":57,"nodeType":"1053","messageId":"1054","endLine":217,"endColumn":59},{"ruleId":"1051","severity":1,"message":"1057","line":222,"column":32,"nodeType":"1053","messageId":"1054","endLine":222,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1057","line":240,"column":30,"nodeType":"1053","messageId":"1054","endLine":240,"endColumn":32},{"ruleId":"1058","severity":1,"message":"1059","line":263,"column":49,"nodeType":"1060","messageId":"1061","endLine":263,"endColumn":51},{"ruleId":"1051","severity":1,"message":"1052","line":264,"column":24,"nodeType":"1053","messageId":"1054","endLine":264,"endColumn":26},{"ruleId":"1074","severity":1,"message":"1075","line":363,"column":78,"nodeType":"1076","endLine":363,"endColumn":169},{"ruleId":"1051","severity":1,"message":"1052","line":409,"column":41,"nodeType":"1053","messageId":"1054","endLine":409,"endColumn":43},{"ruleId":"1074","severity":1,"message":"1075","line":465,"column":78,"nodeType":"1076","endLine":465,"endColumn":169},{"ruleId":"1074","severity":1,"message":"1075","line":533,"column":79,"nodeType":"1076","endLine":533,"endColumn":170},{"ruleId":"1116","severity":1,"message":"1117","line":15,"column":26,"nodeType":"1118","messageId":"1119","endLine":15,"endColumn":28},{"ruleId":"1116","severity":1,"message":"1117","line":15,"column":43,"nodeType":"1118","messageId":"1119","endLine":15,"endColumn":45},{"ruleId":"1116","severity":1,"message":"1117","line":20,"column":26,"nodeType":"1118","messageId":"1119","endLine":20,"endColumn":28},{"ruleId":"1116","severity":1,"message":"1117","line":20,"column":43,"nodeType":"1118","messageId":"1119","endLine":20,"endColumn":45},{"ruleId":"1175","severity":1,"message":"1176","line":64,"column":21,"nodeType":"1044","messageId":"1177","endLine":64,"endColumn":33},{"ruleId":"1062","severity":1,"message":"1178","line":108,"column":8,"nodeType":"1064","endLine":108,"endColumn":32,"suggestions":"1179"},{"ruleId":"1116","severity":1,"message":"1117","line":130,"column":26,"nodeType":"1118","messageId":"1119","endLine":130,"endColumn":28},{"ruleId":"1116","severity":1,"message":"1117","line":130,"column":43,"nodeType":"1118","messageId":"1119","endLine":130,"endColumn":45},{"ruleId":"1116","severity":1,"message":"1117","line":135,"column":26,"nodeType":"1118","messageId":"1119","endLine":135,"endColumn":28},{"ruleId":"1116","severity":1,"message":"1117","line":135,"column":43,"nodeType":"1118","messageId":"1119","endLine":135,"endColumn":45},{"ruleId":"1175","severity":1,"message":"1176","line":184,"column":21,"nodeType":"1044","messageId":"1177","endLine":184,"endColumn":33},{"ruleId":"1062","severity":1,"message":"1180","line":228,"column":8,"nodeType":"1064","endLine":228,"endColumn":33,"suggestions":"1181"},{"ruleId":"1042","severity":1,"message":"1182","line":2,"column":17,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1099","line":113,"column":6,"nodeType":"1064","endLine":113,"endColumn":16,"suggestions":"1183"},{"ruleId":"1051","severity":1,"message":"1052","line":123,"column":26,"nodeType":"1053","messageId":"1054","endLine":123,"endColumn":28},{"ruleId":"1051","severity":1,"message":"1052","line":128,"column":20,"nodeType":"1053","messageId":"1054","endLine":128,"endColumn":22},{"ruleId":"1184","severity":1,"message":"1185","line":130,"column":15,"nodeType":"1076","endLine":130,"endColumn":141},{"ruleId":"1051","severity":1,"message":"1057","line":262,"column":226,"nodeType":"1053","messageId":"1054","endLine":262,"endColumn":228},{"ruleId":"1051","severity":1,"message":"1052","line":262,"column":274,"nodeType":"1053","messageId":"1054","endLine":262,"endColumn":276},{"ruleId":"1186","severity":1,"message":"1187","line":265,"column":25,"nodeType":"1076","endLine":265,"endColumn":147},{"ruleId":"1186","severity":1,"message":"1187","line":271,"column":25,"nodeType":"1076","endLine":271,"endColumn":108},{"ruleId":"1051","severity":1,"message":"1052","line":287,"column":106,"nodeType":"1053","messageId":"1054","endLine":287,"endColumn":108},{"ruleId":"1186","severity":1,"message":"1188","line":295,"column":65,"nodeType":"1076","endLine":295,"endColumn":110},{"ruleId":"1062","severity":1,"message":"1189","line":48,"column":6,"nodeType":"1064","endLine":48,"endColumn":8,"suggestions":"1190"},{"ruleId":"1042","severity":1,"message":"1191","line":11,"column":11,"nodeType":"1044","messageId":"1045","endLine":11,"endColumn":19},{"ruleId":"1042","severity":1,"message":"1192","line":19,"column":12,"nodeType":"1044","messageId":"1045","endLine":19,"endColumn":23},{"ruleId":"1042","severity":1,"message":"1193","line":19,"column":25,"nodeType":"1044","messageId":"1045","endLine":19,"endColumn":39},{"ruleId":"1042","severity":1,"message":"1194","line":20,"column":12,"nodeType":"1044","messageId":"1045","endLine":20,"endColumn":22},{"ruleId":"1042","severity":1,"message":"1195","line":20,"column":24,"nodeType":"1044","messageId":"1045","endLine":20,"endColumn":37},{"ruleId":"1042","severity":1,"message":"1196","line":21,"column":12,"nodeType":"1044","messageId":"1045","endLine":21,"endColumn":29},{"ruleId":"1042","severity":1,"message":"1197","line":21,"column":31,"nodeType":"1044","messageId":"1045","endLine":21,"endColumn":51},{"ruleId":"1042","severity":1,"message":"1198","line":22,"column":12,"nodeType":"1044","messageId":"1045","endLine":22,"endColumn":21},{"ruleId":"1042","severity":1,"message":"1199","line":22,"column":23,"nodeType":"1044","messageId":"1045","endLine":22,"endColumn":35},{"ruleId":"1042","severity":1,"message":"1123","line":24,"column":22,"nodeType":"1044","messageId":"1045","endLine":24,"endColumn":33},{"ruleId":"1042","severity":1,"message":"1124","line":27,"column":12,"nodeType":"1044","messageId":"1045","endLine":27,"endColumn":21},{"ruleId":"1042","severity":1,"message":"1125","line":27,"column":23,"nodeType":"1044","messageId":"1045","endLine":27,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1200","line":42,"column":8,"nodeType":"1064","endLine":42,"endColumn":10,"suggestions":"1201"},{"ruleId":"1062","severity":1,"message":"1202","line":90,"column":8,"nodeType":"1064","endLine":90,"endColumn":11,"suggestions":"1203"},{"ruleId":"1062","severity":1,"message":"1204","line":90,"column":9,"nodeType":"1205","endLine":90,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1206","line":94,"column":8,"nodeType":"1064","endLine":94,"endColumn":17,"suggestions":"1207"},{"ruleId":"1051","severity":1,"message":"1057","line":129,"column":122,"nodeType":"1053","messageId":"1054","endLine":129,"endColumn":124},{"ruleId":"1051","severity":1,"message":"1052","line":189,"column":40,"nodeType":"1053","messageId":"1054","endLine":189,"endColumn":42},{"ruleId":"1051","severity":1,"message":"1052","line":200,"column":40,"nodeType":"1053","messageId":"1054","endLine":200,"endColumn":42},{"ruleId":"1051","severity":1,"message":"1052","line":211,"column":99,"nodeType":"1053","messageId":"1054","endLine":211,"endColumn":101},{"ruleId":"1051","severity":1,"message":"1052","line":217,"column":67,"nodeType":"1053","messageId":"1054","endLine":217,"endColumn":69},{"ruleId":"1074","severity":1,"message":"1075","line":218,"column":33,"nodeType":"1076","endLine":218,"endColumn":139},{"ruleId":"1051","severity":1,"message":"1052","line":267,"column":45,"nodeType":"1053","messageId":"1054","endLine":267,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1052","line":268,"column":90,"nodeType":"1053","messageId":"1054","endLine":268,"endColumn":92},{"ruleId":"1042","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1044","messageId":"1045","endLine":1,"endColumn":36},{"ruleId":"1042","severity":1,"message":"1209","line":4,"column":10,"nodeType":"1044","messageId":"1045","endLine":4,"endColumn":21},{"ruleId":"1042","severity":1,"message":"1046","line":4,"column":28,"nodeType":"1044","messageId":"1045","endLine":4,"endColumn":37},{"ruleId":"1042","severity":1,"message":"1123","line":20,"column":22,"nodeType":"1044","messageId":"1045","endLine":20,"endColumn":33},{"ruleId":"1042","severity":1,"message":"1210","line":21,"column":12,"nodeType":"1044","messageId":"1045","endLine":21,"endColumn":16},{"ruleId":"1042","severity":1,"message":"1211","line":55,"column":11,"nodeType":"1044","messageId":"1045","endLine":55,"endColumn":24},{"ruleId":"1051","severity":1,"message":"1052","line":87,"column":57,"nodeType":"1053","messageId":"1054","endLine":87,"endColumn":59},{"ruleId":"1074","severity":1,"message":"1075","line":87,"column":90,"nodeType":"1076","endLine":87,"endColumn":196},{"ruleId":"1051","severity":1,"message":"1052","line":100,"column":51,"nodeType":"1053","messageId":"1054","endLine":100,"endColumn":53},{"ruleId":"1051","severity":1,"message":"1052","line":106,"column":78,"nodeType":"1053","messageId":"1054","endLine":106,"endColumn":80},{"ruleId":"1062","severity":1,"message":"1212","line":42,"column":8,"nodeType":"1064","endLine":42,"endColumn":10,"suggestions":"1213"},{"ruleId":"1051","severity":1,"message":"1052","line":84,"column":37,"nodeType":"1053","messageId":"1054","endLine":84,"endColumn":39},{"ruleId":"1062","severity":1,"message":"1214","line":95,"column":8,"nodeType":"1064","endLine":95,"endColumn":10,"suggestions":"1215"},{"ruleId":"1051","severity":1,"message":"1052","line":103,"column":41,"nodeType":"1053","messageId":"1054","endLine":103,"endColumn":43},{"ruleId":"1051","severity":1,"message":"1052","line":104,"column":78,"nodeType":"1053","messageId":"1054","endLine":104,"endColumn":80},{"ruleId":"1074","severity":1,"message":"1075","line":203,"column":178,"nodeType":"1076","endLine":203,"endColumn":287},{"ruleId":"1074","severity":1,"message":"1075","line":209,"column":149,"nodeType":"1076","endLine":209,"endColumn":253},{"ruleId":"1051","severity":1,"message":"1057","line":216,"column":90,"nodeType":"1053","messageId":"1054","endLine":216,"endColumn":92},{"ruleId":"1051","severity":1,"message":"1052","line":248,"column":99,"nodeType":"1053","messageId":"1054","endLine":248,"endColumn":101},{"ruleId":"1051","severity":1,"message":"1052","line":268,"column":75,"nodeType":"1053","messageId":"1054","endLine":268,"endColumn":77},{"ruleId":"1074","severity":1,"message":"1075","line":293,"column":210,"nodeType":"1076","endLine":293,"endColumn":319},{"ruleId":"1074","severity":1,"message":"1075","line":304,"column":165,"nodeType":"1076","endLine":304,"endColumn":269},{"ruleId":"1042","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1044","messageId":"1045","endLine":1,"endColumn":36},{"ruleId":"1051","severity":1,"message":"1052","line":28,"column":24,"nodeType":"1053","messageId":"1054","endLine":28,"endColumn":26},{"ruleId":"1051","severity":1,"message":"1052","line":86,"column":29,"nodeType":"1053","messageId":"1054","endLine":86,"endColumn":31},{"ruleId":"1051","severity":1,"message":"1052","line":104,"column":19,"nodeType":"1053","messageId":"1054","endLine":104,"endColumn":21},{"ruleId":"1051","severity":1,"message":"1052","line":111,"column":21,"nodeType":"1053","messageId":"1054","endLine":111,"endColumn":23},{"ruleId":"1074","severity":1,"message":"1075","line":122,"column":98,"nodeType":"1076","endLine":122,"endColumn":186},{"ruleId":"1051","severity":1,"message":"1052","line":131,"column":46,"nodeType":"1053","messageId":"1054","endLine":131,"endColumn":48},{"ruleId":"1051","severity":1,"message":"1052","line":144,"column":60,"nodeType":"1053","messageId":"1054","endLine":144,"endColumn":62},{"ruleId":"1051","severity":1,"message":"1052","line":148,"column":23,"nodeType":"1053","messageId":"1054","endLine":148,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":149,"column":64,"nodeType":"1053","messageId":"1054","endLine":149,"endColumn":66},{"ruleId":"1051","severity":1,"message":"1052","line":165,"column":48,"nodeType":"1053","messageId":"1054","endLine":165,"endColumn":50},{"ruleId":"1051","severity":1,"message":"1052","line":169,"column":23,"nodeType":"1053","messageId":"1054","endLine":169,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":170,"column":52,"nodeType":"1053","messageId":"1054","endLine":170,"endColumn":54},{"ruleId":"1074","severity":1,"message":"1075","line":176,"column":53,"nodeType":"1076","endLine":176,"endColumn":199},{"ruleId":"1042","severity":1,"message":"1191","line":10,"column":11,"nodeType":"1044","messageId":"1045","endLine":10,"endColumn":19},{"ruleId":"1042","severity":1,"message":"1192","line":18,"column":12,"nodeType":"1044","messageId":"1045","endLine":18,"endColumn":23},{"ruleId":"1042","severity":1,"message":"1193","line":18,"column":25,"nodeType":"1044","messageId":"1045","endLine":18,"endColumn":39},{"ruleId":"1042","severity":1,"message":"1194","line":19,"column":12,"nodeType":"1044","messageId":"1045","endLine":19,"endColumn":22},{"ruleId":"1042","severity":1,"message":"1195","line":19,"column":24,"nodeType":"1044","messageId":"1045","endLine":19,"endColumn":37},{"ruleId":"1042","severity":1,"message":"1196","line":20,"column":12,"nodeType":"1044","messageId":"1045","endLine":20,"endColumn":29},{"ruleId":"1042","severity":1,"message":"1197","line":20,"column":31,"nodeType":"1044","messageId":"1045","endLine":20,"endColumn":51},{"ruleId":"1042","severity":1,"message":"1198","line":21,"column":12,"nodeType":"1044","messageId":"1045","endLine":21,"endColumn":21},{"ruleId":"1042","severity":1,"message":"1199","line":21,"column":23,"nodeType":"1044","messageId":"1045","endLine":21,"endColumn":35},{"ruleId":"1042","severity":1,"message":"1123","line":23,"column":22,"nodeType":"1044","messageId":"1045","endLine":23,"endColumn":33},{"ruleId":"1062","severity":1,"message":"1200","line":37,"column":8,"nodeType":"1064","endLine":37,"endColumn":10,"suggestions":"1216"},{"ruleId":"1062","severity":1,"message":"1202","line":87,"column":8,"nodeType":"1064","endLine":87,"endColumn":11,"suggestions":"1217"},{"ruleId":"1062","severity":1,"message":"1204","line":87,"column":9,"nodeType":"1205","endLine":87,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1206","line":91,"column":8,"nodeType":"1064","endLine":91,"endColumn":17,"suggestions":"1218"},{"ruleId":"1051","severity":1,"message":"1057","line":126,"column":122,"nodeType":"1053","messageId":"1054","endLine":126,"endColumn":124},{"ruleId":"1051","severity":1,"message":"1052","line":184,"column":40,"nodeType":"1053","messageId":"1054","endLine":184,"endColumn":42},{"ruleId":"1051","severity":1,"message":"1052","line":195,"column":40,"nodeType":"1053","messageId":"1054","endLine":195,"endColumn":42},{"ruleId":"1051","severity":1,"message":"1052","line":205,"column":118,"nodeType":"1053","messageId":"1054","endLine":205,"endColumn":120},{"ruleId":"1051","severity":1,"message":"1052","line":212,"column":69,"nodeType":"1053","messageId":"1054","endLine":212,"endColumn":71},{"ruleId":"1074","severity":1,"message":"1075","line":212,"column":103,"nodeType":"1076","endLine":212,"endColumn":188},{"ruleId":"1051","severity":1,"message":"1052","line":261,"column":45,"nodeType":"1053","messageId":"1054","endLine":261,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1052","line":262,"column":90,"nodeType":"1053","messageId":"1054","endLine":262,"endColumn":92},{"ruleId":"1051","severity":1,"message":"1052","line":102,"column":33,"nodeType":"1053","messageId":"1054","endLine":102,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":110,"column":51,"nodeType":"1053","messageId":"1054","endLine":110,"endColumn":53},{"ruleId":"1051","severity":1,"message":"1052","line":120,"column":61,"nodeType":"1053","messageId":"1054","endLine":120,"endColumn":63},{"ruleId":"1074","severity":1,"message":"1075","line":121,"column":33,"nodeType":"1076","endLine":121,"endColumn":211},{"ruleId":"1074","severity":1,"message":"1075","line":156,"column":168,"nodeType":"1076","endLine":156,"endColumn":280},{"ruleId":"1074","severity":1,"message":"1075","line":157,"column":163,"nodeType":"1076","endLine":157,"endColumn":276},{"ruleId":"1051","severity":1,"message":"1052","line":162,"column":44,"nodeType":"1053","messageId":"1054","endLine":162,"endColumn":46},{"ruleId":"1051","severity":1,"message":"1052","line":163,"column":69,"nodeType":"1053","messageId":"1054","endLine":163,"endColumn":71},{"ruleId":"1051","severity":1,"message":"1052","line":169,"column":43,"nodeType":"1053","messageId":"1054","endLine":169,"endColumn":45},{"ruleId":"1051","severity":1,"message":"1052","line":170,"column":72,"nodeType":"1053","messageId":"1054","endLine":170,"endColumn":74},{"ruleId":"1051","severity":1,"message":"1052","line":181,"column":46,"nodeType":"1053","messageId":"1054","endLine":181,"endColumn":48},{"ruleId":"1051","severity":1,"message":"1052","line":182,"column":206,"nodeType":"1053","messageId":"1054","endLine":182,"endColumn":208},{"ruleId":"1042","severity":1,"message":"1208","line":2,"column":20,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":29},{"ruleId":"1042","severity":1,"message":"1090","line":17,"column":10,"nodeType":"1044","messageId":"1045","endLine":17,"endColumn":16},{"ruleId":"1051","severity":1,"message":"1052","line":95,"column":33,"nodeType":"1053","messageId":"1054","endLine":95,"endColumn":35},{"ruleId":"1051","severity":1,"message":"1052","line":105,"column":40,"nodeType":"1053","messageId":"1054","endLine":105,"endColumn":42},{"ruleId":"1074","severity":1,"message":"1075","line":114,"column":19,"nodeType":"1076","endLine":114,"endColumn":198},{"ruleId":"1051","severity":1,"message":"1052","line":156,"column":30,"nodeType":"1053","messageId":"1054","endLine":156,"endColumn":32},{"ruleId":"1051","severity":1,"message":"1052","line":157,"column":70,"nodeType":"1053","messageId":"1054","endLine":157,"endColumn":72},{"ruleId":"1051","severity":1,"message":"1052","line":169,"column":29,"nodeType":"1053","messageId":"1054","endLine":169,"endColumn":31},{"ruleId":"1051","severity":1,"message":"1052","line":170,"column":56,"nodeType":"1053","messageId":"1054","endLine":170,"endColumn":58},{"ruleId":"1051","severity":1,"message":"1052","line":181,"column":32,"nodeType":"1053","messageId":"1054","endLine":181,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":182,"column":190,"nodeType":"1053","messageId":"1054","endLine":182,"endColumn":192},{"ruleId":"1062","severity":1,"message":"1219","line":33,"column":8,"nodeType":"1064","endLine":33,"endColumn":26,"suggestions":"1220"},{"ruleId":"1051","severity":1,"message":"1052","line":54,"column":39,"nodeType":"1053","messageId":"1054","endLine":54,"endColumn":41},{"ruleId":"1042","severity":1,"message":"1208","line":2,"column":20,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":29},{"ruleId":"1042","severity":1,"message":"1221","line":12,"column":9,"nodeType":"1044","messageId":"1045","endLine":12,"endColumn":16},{"ruleId":"1042","severity":1,"message":"1222","line":51,"column":9,"nodeType":"1044","messageId":"1045","endLine":51,"endColumn":25},{"ruleId":"1051","severity":1,"message":"1052","line":88,"column":32,"nodeType":"1053","messageId":"1054","endLine":88,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":99,"column":93,"nodeType":"1053","messageId":"1054","endLine":99,"endColumn":95},{"ruleId":"1051","severity":1,"message":"1052","line":117,"column":45,"nodeType":"1053","messageId":"1054","endLine":117,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1052","line":117,"column":147,"nodeType":"1053","messageId":"1054","endLine":117,"endColumn":149},{"ruleId":"1051","severity":1,"message":"1052","line":39,"column":18,"nodeType":"1053","messageId":"1054","endLine":39,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":43,"column":18,"nodeType":"1053","messageId":"1054","endLine":43,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1052","line":99,"column":32,"nodeType":"1053","messageId":"1054","endLine":99,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1052","line":100,"column":31,"nodeType":"1053","messageId":"1054","endLine":100,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":130,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":150,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":152},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":193,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":195},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":213,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":215},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":266,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":268},{"ruleId":"1051","severity":1,"message":"1052","line":385,"column":286,"nodeType":"1053","messageId":"1054","endLine":385,"endColumn":288},{"ruleId":"1051","severity":1,"message":"1052","line":386,"column":86,"nodeType":"1053","messageId":"1054","endLine":386,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":386,"column":106,"nodeType":"1053","messageId":"1054","endLine":386,"endColumn":108},{"ruleId":"1051","severity":1,"message":"1052","line":386,"column":149,"nodeType":"1053","messageId":"1054","endLine":386,"endColumn":151},{"ruleId":"1051","severity":1,"message":"1052","line":386,"column":169,"nodeType":"1053","messageId":"1054","endLine":386,"endColumn":171},{"ruleId":"1051","severity":1,"message":"1052","line":386,"column":222,"nodeType":"1053","messageId":"1054","endLine":386,"endColumn":224},{"ruleId":"1051","severity":1,"message":"1052","line":386,"column":242,"nodeType":"1053","messageId":"1054","endLine":386,"endColumn":244},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":130,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":152,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":154},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":197,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":199},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":219,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":221},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":274,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":276},{"ruleId":"1051","severity":1,"message":"1052","line":388,"column":296,"nodeType":"1053","messageId":"1054","endLine":388,"endColumn":298},{"ruleId":"1051","severity":1,"message":"1052","line":389,"column":86,"nodeType":"1053","messageId":"1054","endLine":389,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":389,"column":108,"nodeType":"1053","messageId":"1054","endLine":389,"endColumn":110},{"ruleId":"1051","severity":1,"message":"1052","line":389,"column":153,"nodeType":"1053","messageId":"1054","endLine":389,"endColumn":155},{"ruleId":"1051","severity":1,"message":"1052","line":389,"column":175,"nodeType":"1053","messageId":"1054","endLine":389,"endColumn":177},{"ruleId":"1051","severity":1,"message":"1052","line":389,"column":230,"nodeType":"1053","messageId":"1054","endLine":389,"endColumn":232},{"ruleId":"1051","severity":1,"message":"1052","line":389,"column":252,"nodeType":"1053","messageId":"1054","endLine":389,"endColumn":254},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":130,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":152,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":154},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":197,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":199},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":219,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":221},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":266,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":268},{"ruleId":"1051","severity":1,"message":"1052","line":391,"column":288,"nodeType":"1053","messageId":"1054","endLine":391,"endColumn":290},{"ruleId":"1051","severity":1,"message":"1052","line":392,"column":86,"nodeType":"1053","messageId":"1054","endLine":392,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":392,"column":108,"nodeType":"1053","messageId":"1054","endLine":392,"endColumn":110},{"ruleId":"1051","severity":1,"message":"1052","line":392,"column":153,"nodeType":"1053","messageId":"1054","endLine":392,"endColumn":155},{"ruleId":"1051","severity":1,"message":"1052","line":392,"column":175,"nodeType":"1053","messageId":"1054","endLine":392,"endColumn":177},{"ruleId":"1051","severity":1,"message":"1052","line":392,"column":230,"nodeType":"1053","messageId":"1054","endLine":392,"endColumn":232},{"ruleId":"1051","severity":1,"message":"1052","line":392,"column":252,"nodeType":"1053","messageId":"1054","endLine":392,"endColumn":254},{"ruleId":"1042","severity":1,"message":"1124","line":23,"column":12,"nodeType":"1044","messageId":"1045","endLine":23,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1200","line":35,"column":8,"nodeType":"1064","endLine":35,"endColumn":10,"suggestions":"1223"},{"ruleId":"1062","severity":1,"message":"1224","line":43,"column":7,"nodeType":"1064","endLine":43,"endColumn":34,"suggestions":"1225"},{"ruleId":"1051","severity":1,"message":"1057","line":96,"column":61,"nodeType":"1053","messageId":"1054","endLine":96,"endColumn":63},{"ruleId":"1051","severity":1,"message":"1052","line":163,"column":40,"nodeType":"1053","messageId":"1054","endLine":163,"endColumn":42},{"ruleId":"1051","severity":1,"message":"1052","line":175,"column":58,"nodeType":"1053","messageId":"1054","endLine":175,"endColumn":60},{"ruleId":"1051","severity":1,"message":"1052","line":177,"column":58,"nodeType":"1053","messageId":"1054","endLine":177,"endColumn":60},{"ruleId":"1051","severity":1,"message":"1052","line":186,"column":36,"nodeType":"1053","messageId":"1054","endLine":186,"endColumn":38},{"ruleId":"1051","severity":1,"message":"1052","line":186,"column":59,"nodeType":"1053","messageId":"1054","endLine":186,"endColumn":61},{"ruleId":"1051","severity":1,"message":"1052","line":189,"column":47,"nodeType":"1053","messageId":"1054","endLine":189,"endColumn":49},{"ruleId":"1051","severity":1,"message":"1052","line":209,"column":64,"nodeType":"1053","messageId":"1054","endLine":209,"endColumn":66},{"ruleId":"1051","severity":1,"message":"1052","line":209,"column":171,"nodeType":"1053","messageId":"1054","endLine":209,"endColumn":173},{"ruleId":"1051","severity":1,"message":"1052","line":244,"column":45,"nodeType":"1053","messageId":"1054","endLine":244,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1052","line":245,"column":93,"nodeType":"1053","messageId":"1054","endLine":245,"endColumn":95},{"ruleId":"1051","severity":1,"message":"1052","line":245,"column":120,"nodeType":"1053","messageId":"1054","endLine":245,"endColumn":122},{"ruleId":"1042","severity":1,"message":"1226","line":1,"column":8,"nodeType":"1044","messageId":"1045","endLine":1,"endColumn":13},{"ruleId":"1042","severity":1,"message":"1227","line":2,"column":16,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":24},{"ruleId":"1042","severity":1,"message":"1208","line":2,"column":25,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":34},{"ruleId":"1042","severity":1,"message":"1182","line":2,"column":35,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":45},{"ruleId":"1042","severity":1,"message":"1228","line":3,"column":10,"nodeType":"1044","messageId":"1045","endLine":3,"endColumn":13},{"ruleId":"1042","severity":1,"message":"1229","line":6,"column":8,"nodeType":"1044","messageId":"1045","endLine":6,"endColumn":16},{"ruleId":"1042","severity":1,"message":"1230","line":29,"column":12,"nodeType":"1044","messageId":"1045","endLine":29,"endColumn":15},{"ruleId":"1042","severity":1,"message":"1231","line":37,"column":14,"nodeType":"1044","messageId":"1045","endLine":37,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1232","line":79,"column":8,"nodeType":"1064","endLine":79,"endColumn":26,"suggestions":"1233"},{"ruleId":"1051","severity":1,"message":"1052","line":83,"column":28,"nodeType":"1053","messageId":"1054","endLine":83,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":86,"column":28,"nodeType":"1053","messageId":"1054","endLine":86,"endColumn":30},{"ruleId":"1051","severity":1,"message":"1052","line":132,"column":36,"nodeType":"1053","messageId":"1054","endLine":132,"endColumn":38},{"ruleId":"1051","severity":1,"message":"1052","line":133,"column":35,"nodeType":"1053","messageId":"1054","endLine":133,"endColumn":37},{"ruleId":"1051","severity":1,"message":"1052","line":416,"column":130,"nodeType":"1053","messageId":"1054","endLine":416,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":416,"column":150,"nodeType":"1053","messageId":"1054","endLine":416,"endColumn":152},{"ruleId":"1051","severity":1,"message":"1052","line":416,"column":193,"nodeType":"1053","messageId":"1054","endLine":416,"endColumn":195},{"ruleId":"1051","severity":1,"message":"1052","line":416,"column":213,"nodeType":"1053","messageId":"1054","endLine":416,"endColumn":215},{"ruleId":"1051","severity":1,"message":"1052","line":416,"column":266,"nodeType":"1053","messageId":"1054","endLine":416,"endColumn":268},{"ruleId":"1051","severity":1,"message":"1052","line":416,"column":286,"nodeType":"1053","messageId":"1054","endLine":416,"endColumn":288},{"ruleId":"1051","severity":1,"message":"1052","line":417,"column":86,"nodeType":"1053","messageId":"1054","endLine":417,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":417,"column":106,"nodeType":"1053","messageId":"1054","endLine":417,"endColumn":108},{"ruleId":"1051","severity":1,"message":"1052","line":417,"column":149,"nodeType":"1053","messageId":"1054","endLine":417,"endColumn":151},{"ruleId":"1051","severity":1,"message":"1052","line":417,"column":169,"nodeType":"1053","messageId":"1054","endLine":417,"endColumn":171},{"ruleId":"1051","severity":1,"message":"1052","line":417,"column":222,"nodeType":"1053","messageId":"1054","endLine":417,"endColumn":224},{"ruleId":"1051","severity":1,"message":"1052","line":417,"column":242,"nodeType":"1053","messageId":"1054","endLine":417,"endColumn":244},{"ruleId":"1051","severity":1,"message":"1052","line":419,"column":130,"nodeType":"1053","messageId":"1054","endLine":419,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":419,"column":152,"nodeType":"1053","messageId":"1054","endLine":419,"endColumn":154},{"ruleId":"1051","severity":1,"message":"1052","line":419,"column":197,"nodeType":"1053","messageId":"1054","endLine":419,"endColumn":199},{"ruleId":"1051","severity":1,"message":"1052","line":419,"column":219,"nodeType":"1053","messageId":"1054","endLine":419,"endColumn":221},{"ruleId":"1051","severity":1,"message":"1052","line":419,"column":274,"nodeType":"1053","messageId":"1054","endLine":419,"endColumn":276},{"ruleId":"1051","severity":1,"message":"1052","line":419,"column":296,"nodeType":"1053","messageId":"1054","endLine":419,"endColumn":298},{"ruleId":"1051","severity":1,"message":"1052","line":420,"column":86,"nodeType":"1053","messageId":"1054","endLine":420,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":420,"column":108,"nodeType":"1053","messageId":"1054","endLine":420,"endColumn":110},{"ruleId":"1051","severity":1,"message":"1052","line":420,"column":153,"nodeType":"1053","messageId":"1054","endLine":420,"endColumn":155},{"ruleId":"1051","severity":1,"message":"1052","line":420,"column":175,"nodeType":"1053","messageId":"1054","endLine":420,"endColumn":177},{"ruleId":"1051","severity":1,"message":"1052","line":420,"column":230,"nodeType":"1053","messageId":"1054","endLine":420,"endColumn":232},{"ruleId":"1051","severity":1,"message":"1052","line":420,"column":252,"nodeType":"1053","messageId":"1054","endLine":420,"endColumn":254},{"ruleId":"1051","severity":1,"message":"1052","line":422,"column":130,"nodeType":"1053","messageId":"1054","endLine":422,"endColumn":132},{"ruleId":"1051","severity":1,"message":"1052","line":422,"column":152,"nodeType":"1053","messageId":"1054","endLine":422,"endColumn":154},{"ruleId":"1051","severity":1,"message":"1052","line":422,"column":197,"nodeType":"1053","messageId":"1054","endLine":422,"endColumn":199},{"ruleId":"1051","severity":1,"message":"1052","line":422,"column":219,"nodeType":"1053","messageId":"1054","endLine":422,"endColumn":221},{"ruleId":"1051","severity":1,"message":"1052","line":422,"column":266,"nodeType":"1053","messageId":"1054","endLine":422,"endColumn":268},{"ruleId":"1051","severity":1,"message":"1052","line":422,"column":288,"nodeType":"1053","messageId":"1054","endLine":422,"endColumn":290},{"ruleId":"1051","severity":1,"message":"1052","line":423,"column":86,"nodeType":"1053","messageId":"1054","endLine":423,"endColumn":88},{"ruleId":"1051","severity":1,"message":"1052","line":423,"column":108,"nodeType":"1053","messageId":"1054","endLine":423,"endColumn":110},{"ruleId":"1051","severity":1,"message":"1052","line":423,"column":153,"nodeType":"1053","messageId":"1054","endLine":423,"endColumn":155},{"ruleId":"1051","severity":1,"message":"1052","line":423,"column":175,"nodeType":"1053","messageId":"1054","endLine":423,"endColumn":177},{"ruleId":"1051","severity":1,"message":"1052","line":423,"column":230,"nodeType":"1053","messageId":"1054","endLine":423,"endColumn":232},{"ruleId":"1051","severity":1,"message":"1052","line":423,"column":252,"nodeType":"1053","messageId":"1054","endLine":423,"endColumn":254},{"ruleId":"1062","severity":1,"message":"1212","line":43,"column":8,"nodeType":"1064","endLine":43,"endColumn":10,"suggestions":"1234"},{"ruleId":"1062","severity":1,"message":"1214","line":91,"column":8,"nodeType":"1064","endLine":91,"endColumn":10,"suggestions":"1235"},{"ruleId":"1051","severity":1,"message":"1052","line":99,"column":67,"nodeType":"1053","messageId":"1054","endLine":99,"endColumn":69},{"ruleId":"1074","severity":1,"message":"1075","line":200,"column":178,"nodeType":"1076","endLine":200,"endColumn":287},{"ruleId":"1074","severity":1,"message":"1075","line":206,"column":149,"nodeType":"1076","endLine":206,"endColumn":253},{"ruleId":"1051","severity":1,"message":"1057","line":213,"column":90,"nodeType":"1053","messageId":"1054","endLine":213,"endColumn":92},{"ruleId":"1051","severity":1,"message":"1052","line":245,"column":99,"nodeType":"1053","messageId":"1054","endLine":245,"endColumn":101},{"ruleId":"1051","severity":1,"message":"1052","line":265,"column":75,"nodeType":"1053","messageId":"1054","endLine":265,"endColumn":77},{"ruleId":"1074","severity":1,"message":"1075","line":290,"column":210,"nodeType":"1076","endLine":290,"endColumn":319},{"ruleId":"1074","severity":1,"message":"1075","line":301,"column":165,"nodeType":"1076","endLine":301,"endColumn":269},{"ruleId":"1051","severity":1,"message":"1052","line":24,"column":66,"nodeType":"1053","messageId":"1054","endLine":24,"endColumn":68},{"ruleId":"1062","severity":1,"message":"1236","line":38,"column":6,"nodeType":"1064","endLine":38,"endColumn":8,"suggestions":"1237"},{"ruleId":"1051","severity":1,"message":"1052","line":42,"column":42,"nodeType":"1053","messageId":"1054","endLine":42,"endColumn":44},{"ruleId":"1042","severity":1,"message":"1208","line":2,"column":20,"nodeType":"1044","messageId":"1045","endLine":2,"endColumn":29},{"ruleId":"1042","severity":1,"message":"1238","line":13,"column":11,"nodeType":"1044","messageId":"1045","endLine":13,"endColumn":18},{"ruleId":"1042","severity":1,"message":"1239","line":17,"column":12,"nodeType":"1044","messageId":"1045","endLine":17,"endColumn":29},{"ruleId":"1042","severity":1,"message":"1240","line":17,"column":31,"nodeType":"1044","messageId":"1045","endLine":17,"endColumn":51},{"ruleId":"1042","severity":1,"message":"1241","line":18,"column":12,"nodeType":"1044","messageId":"1045","endLine":18,"endColumn":19},{"ruleId":"1042","severity":1,"message":"1242","line":18,"column":21,"nodeType":"1044","messageId":"1045","endLine":18,"endColumn":31},{"ruleId":"1042","severity":1,"message":"1123","line":21,"column":22,"nodeType":"1044","messageId":"1045","endLine":21,"endColumn":33},{"ruleId":"1051","severity":1,"message":"1052","line":77,"column":45,"nodeType":"1053","messageId":"1054","endLine":77,"endColumn":47},{"ruleId":"1051","severity":1,"message":"1052","line":77,"column":147,"nodeType":"1053","messageId":"1054","endLine":77,"endColumn":149},{"ruleId":"1051","severity":1,"message":"1052","line":45,"column":37,"nodeType":"1053","messageId":"1054","endLine":45,"endColumn":39},{"ruleId":"1051","severity":1,"message":"1052","line":70,"column":37,"nodeType":"1053","messageId":"1054","endLine":70,"endColumn":39},{"ruleId":"1042","severity":1,"message":"1111","line":82,"column":33,"nodeType":"1044","messageId":"1045","endLine":82,"endColumn":34},{"ruleId":"1062","severity":1,"message":"1243","line":93,"column":8,"nodeType":"1064","endLine":93,"endColumn":10,"suggestions":"1244"},{"ruleId":"1051","severity":1,"message":"1052","line":244,"column":39,"nodeType":"1053","messageId":"1054","endLine":244,"endColumn":41},{"ruleId":"1062","severity":1,"message":"1212","line":315,"column":8,"nodeType":"1064","endLine":315,"endColumn":10,"suggestions":"1245"},{"ruleId":"1051","severity":1,"message":"1052","line":333,"column":180,"nodeType":"1053","messageId":"1054","endLine":333,"endColumn":182},{"ruleId":"1074","severity":1,"message":"1075","line":411,"column":190,"nodeType":"1076","endLine":411,"endColumn":299},{"ruleId":"1074","severity":1,"message":"1075","line":420,"column":144,"nodeType":"1076","endLine":420,"endColumn":248},{"ruleId":"1074","severity":1,"message":"1075","line":508,"column":180,"nodeType":"1076","endLine":508,"endColumn":289},{"ruleId":"1074","severity":1,"message":"1075","line":514,"column":151,"nodeType":"1076","endLine":514,"endColumn":255},{"ruleId":"1042","severity":1,"message":"1160","line":1,"column":8,"nodeType":"1044","messageId":"1045","endLine":1,"endColumn":13},{"ruleId":"1042","severity":1,"message":"1111","line":80,"column":33,"nodeType":"1044","messageId":"1045","endLine":80,"endColumn":34},{"ruleId":"1062","severity":1,"message":"1243","line":91,"column":8,"nodeType":"1064","endLine":91,"endColumn":10,"suggestions":"1246"},{"ruleId":"1051","severity":1,"message":"1052","line":241,"column":39,"nodeType":"1053","messageId":"1054","endLine":241,"endColumn":41},{"ruleId":"1062","severity":1,"message":"1212","line":312,"column":8,"nodeType":"1064","endLine":312,"endColumn":10,"suggestions":"1247"},{"ruleId":"1051","severity":1,"message":"1052","line":330,"column":196,"nodeType":"1053","messageId":"1054","endLine":330,"endColumn":198},{"ruleId":"1074","severity":1,"message":"1075","line":408,"column":190,"nodeType":"1076","endLine":408,"endColumn":299},{"ruleId":"1074","severity":1,"message":"1075","line":417,"column":144,"nodeType":"1076","endLine":417,"endColumn":248},{"ruleId":"1074","severity":1,"message":"1075","line":505,"column":180,"nodeType":"1076","endLine":505,"endColumn":289},{"ruleId":"1074","severity":1,"message":"1075","line":511,"column":151,"nodeType":"1076","endLine":511,"endColumn":255},"no-unused-vars","'websocket' is defined but never used.","Identifier","unusedVar","'Doctorapi' is defined but never used.","'PEitemdetailssection' is defined but never used.","'Newpurchaseentryarray' is defined but never used.","'toggleaddoption' is assigned a value but never used.","'inactivelogout' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'weekday' is assigned a value but never used.","'setdoctorindex' is assigned a value but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchallAppointmentslist'. Either include it or remove the dependency array.","ArrayExpression",["1248"],["1249"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'setpages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllPatients'. Either include it or remove the dependency array.",["1250"],["1251"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getAllDoctors'. Either include it or remove the dependency array.",["1252"],["1253"],"'type' is assigned a value but never used.","'settype' is assigned a value but never used.","'setclinic' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Appointments_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Doctors_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pharmacy_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","'customloading' is defined but never used.","'appointmentid' is assigned a value but never used.","'d_form' is assigned a value but never used.","'ArraySum' is defined but never used.","React Hook useEffect has a missing dependency: 'Appointmentlist'. Either include it or remove the dependency array.",["1254"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1255","text":"1256"},{"range":"1257","text":"1256"},"React Hook useEffect has a missing dependency: 'fetchapi'. Either include it or remove the dependency array.",["1258"],"React Hook useEffect has a missing dependency: 'GetDoctors'. Either include it or remove the dependency array.",["1259"],"'doctorstime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DoctorwiseTable'. Either include it or remove the dependency array.",["1260"],"'customnotify' is defined but never used.","React Hook useEffect has a missing dependency: 'GETSalesList'. Either include it or remove the dependency array.",["1261"],"'previouspayments' is assigned a value but never used.","'setpreviouspayments' is assigned a value but never used.","'p' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AddPaymentMethods'. Either include it or remove the dependency array.",["1262"],"React Hook useEffect has a missing dependency: 'CalPrevTotal'. Either include it or remove the dependency array.",["1263"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'tabindex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETSaleReturns'. Either include it or remove the dependency array.",["1264"],"'setclinicid' is assigned a value but never used.","'ischecked' is assigned a value but never used.","'setischecked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Doclist'. Either include it or remove the dependency array.",["1265"],"React Hook useEffect has a missing dependency: 'CalGrandttl'. Either include it or remove the dependency array.",["1266"],"'c' is assigned a value but never used.","'vendorsref' is assigned a value but never used.","'billname' is assigned a value but never used.","'itemsearch' is assigned a value but never used.","'setitemsearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETPurchaseList'. Either include it or remove the dependency array.",["1267"],"React Hook useEffect has a missing dependency: 'CalculateGst'. Either include it or remove the dependency array.",["1268"],"React Hook useEffect has a missing dependency: 'CalculateIGst'. Either include it or remove the dependency array.",["1269"],"React Hook useEffect has a missing dependency: 'Calculate'. Either include it or remove the dependency array.",["1270"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'CalculateCPU'. Either include it or remove the dependency array.",["1271"],"Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","React Hook useEffect has a missing dependency: 'GETPurchaseReturns'. Either include it or remove the dependency array.",["1272"],"'ClinicId' is assigned a value but never used.","'ClinicList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetVaccines'. Either include it or remove the dependency array.",["1273"],["1274"],"'setlimit' is assigned a value but never used.","'stock' is assigned a value but never used.","'setstock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'medcinelist'. Either include it or remove the dependency array.",["1275"],"'React' is defined but never used.","'setpendingpaid' is assigned a value but never used.","'setadvancepaid' is assigned a value but never used.","'SalePendings' is assigned a value but never used.","'setSalePendings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PharmacyList'. Either include it or remove the dependency array.",["1276"],"'AdvancedAmountRecieved' is defined but never used.","'PendingAmountRecieved' is defined but never used.","'SumExtraCharges' is defined but never used.","'TodayDate' is defined but never used.","'visibles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DSR_All_Appointments'. Either include it or remove the dependency array.",["1277"],["1278"],"no-redeclare","'vendorsitems' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'MakePurchaseEntryExport'. Either include it or remove the dependency array.",["1279"],"React Hook useEffect has a missing dependency: 'MakePurchaseReturnExport'. Either include it or remove the dependency array.",["1280"],"'useContext' is defined but never used.",["1281"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'FillDetails'. Either include it or remove the dependency array.",["1282"],"'colorref' is assigned a value but never used.","'searchinput' is assigned a value but never used.","'setsearchinput' is assigned a value but never used.","'searchlist' is assigned a value but never used.","'setsearchlist' is assigned a value but never used.","'displaysearchlist' is assigned a value but never used.","'setdisplaysearchlist' is assigned a value but never used.","'patientid' is assigned a value but never used.","'setpatientid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ClinicList'. Either include it or remove the dependency array.",["1283"],"React Hook useEffect has missing dependencies: 'getCurrentTimeslots' and 'props.appointmentdate'. Either include them or remove the dependency array.",["1284"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'getCurrentTimefrom'. Either include it or remove the dependency array.",["1285"],"'useEffect' is defined but never used.","'DoctorsList' is defined but never used.","'time' is assigned a value but never used.","'gettime_value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AdvancePayments'. Either include it or remove the dependency array.",["1286"],"React Hook useEffect has a missing dependency: 'ExistedPendingPayments'. Either include it or remove the dependency array.",["1287"],["1288"],["1289"],["1290"],"React Hook useEffect has a missing dependency: 'searchpatient'. Either include it or remove the dependency array.",["1291"],"'APIDate' is assigned a value but never used.","'toggledoctorform' is assigned a value but never used.",["1292"],"React Hook useEffect has a missing dependency: 'setfromsearch'. Either include it or remove the dependency array.",["1293"],"'axios' is defined but never used.","'useState' is defined but never used.","'URL' is defined but never used.","'Notiflix' is defined but never used.","'lng' is assigned a value but never used.","'capitalizeFirstLetter' is defined but never used.","React Hook useEffect has a missing dependency: 'currentvalue'. Either include it or remove the dependency array.",["1294"],["1295"],["1296"],"React Hook useEffect has missing dependencies: 'CalculatePaidPendings' and 'calculate'. Either include them or remove the dependency array.",["1297"],"'Doctors' is assigned a value but never used.","'adddoctorfortoday' is assigned a value but never used.","'setadddoctorfortoday' is assigned a value but never used.","'docdate' is assigned a value but never used.","'setdocdate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AddExtraCharges' and 'AddPaymentMethods'. Either include them or remove the dependency array.",["1298"],["1299"],["1300"],["1301"],{"desc":"1302","fix":"1303"},{"desc":"1304","fix":"1305"},{"desc":"1306","fix":"1307"},{"desc":"1308","fix":"1309"},{"desc":"1310","fix":"1311"},{"desc":"1312","fix":"1313"},{"desc":"1314","fix":"1315"},[16851,16851]," rel=\"noreferrer\"",[17218,17218],{"desc":"1316","fix":"1317"},{"desc":"1318","fix":"1319"},{"desc":"1320","fix":"1321"},{"desc":"1322","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1326","fix":"1327"},{"desc":"1328","fix":"1329"},{"desc":"1330","fix":"1331"},{"desc":"1332","fix":"1333"},{"desc":"1334","fix":"1335"},{"desc":"1336","fix":"1337"},{"desc":"1338","fix":"1339"},{"desc":"1340","fix":"1341"},{"desc":"1342","fix":"1343"},{"desc":"1344","fix":"1345"},{"desc":"1346","fix":"1347"},{"desc":"1346","fix":"1348"},{"desc":"1349","fix":"1350"},{"desc":"1351","fix":"1352"},{"desc":"1353","fix":"1354"},{"desc":"1355","fix":"1356"},{"desc":"1357","fix":"1358"},{"desc":"1359","fix":"1360"},{"desc":"1361","fix":"1362"},{"desc":"1363","fix":"1364"},{"desc":"1365","fix":"1366"},{"desc":"1367","fix":"1368"},{"desc":"1369","fix":"1370"},{"desc":"1371","fix":"1372"},{"desc":"1373","fix":"1374"},{"desc":"1365","fix":"1375"},{"desc":"1367","fix":"1376"},{"desc":"1369","fix":"1377"},{"desc":"1378","fix":"1379"},{"desc":"1365","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1383","fix":"1384"},{"desc":"1371","fix":"1385"},{"desc":"1373","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1371","fix":"1391"},{"desc":"1389","fix":"1392"},{"desc":"1371","fix":"1393"},"Update the dependencies array to be: [fetchallAppointmentslist]",{"range":"1394","text":"1395"},"Update the dependencies array to be: [doctorid, fetchallAppointmentslist, fromdate, todate, type]",{"range":"1396","text":"1397"},"Update the dependencies array to be: [getAllPatients]",{"range":"1398","text":"1399"},"Update the dependencies array to be: [getAllPatients, patientsearch]",{"range":"1400","text":"1401"},"Update the dependencies array to be: [getAllDoctors]",{"range":"1402","text":"1403"},"Update the dependencies array to be: [Doctorssearch, getAllDoctors]",{"range":"1404","text":"1405"},"Update the dependencies array to be: [Appointmentlist, props._selected]",{"range":"1406","text":"1407"},"Update the dependencies array to be: [fetchapi, props._selected]",{"range":"1408","text":"1409"},"Update the dependencies array to be: [GetDoctors, props.fromdate, props.todate]",{"range":"1410","text":"1411"},"Update the dependencies array to be: [props.fromdate, props.todate, load, DoctorwiseTable]",{"range":"1412","text":"1413"},"Update the dependencies array to be: [GETSalesList, channel, fromdate, todate]",{"range":"1414","text":"1415"},"Update the dependencies array to be: [AddPaymentMethods]",{"range":"1416","text":"1417"},"Update the dependencies array to be: [CalPrevTotal, props.saleentryarr]",{"range":"1418","text":"1419"},"Update the dependencies array to be: [GETSaleReturns, channel, fromdate, todate]",{"range":"1420","text":"1421"},"Update the dependencies array to be: [Doclist, doctorid]",{"range":"1422","text":"1423"},"Update the dependencies array to be: [CalGrandttl, SelectedProducts]",{"range":"1424","text":"1425"},"Update the dependencies array to be: [GETPurchaseList, channel, fromdate, todate]",{"range":"1426","text":"1427"},"Update the dependencies array to be: [CalculateGst, sgstprcnt]",{"range":"1428","text":"1429"},"Update the dependencies array to be: [CalculateIGst, igstprcnt]",{"range":"1430","text":"1431"},"Update the dependencies array to be: [Calculate]",{"range":"1432","text":"1433"},"Update the dependencies array to be: [CalculateCPU]",{"range":"1434","text":"1435"},"Update the dependencies array to be: [GETPurchaseReturns, channel, fromdate, todate]",{"range":"1436","text":"1437"},"Update the dependencies array to be: [GetVaccines, searchname]",{"range":"1438","text":"1439"},{"range":"1440","text":"1439"},"Update the dependencies array to be: [medcinelist, offset]",{"range":"1441","text":"1442"},"Update the dependencies array to be: [PharmacyList, props.fromdate, props.todate]",{"range":"1443","text":"1444"},"Update the dependencies array to be: [DSR_All_Appointments]",{"range":"1445","text":"1446"},"Update the dependencies array to be: [DSR_All_Appointments, props.doctorid, props.fromdate, props.todate]",{"range":"1447","text":"1448"},"Update the dependencies array to be: [MakePurchaseEntryExport, props.purchaseentryarr]",{"range":"1449","text":"1450"},"Update the dependencies array to be: [MakePurchaseReturnExport, props.purchasereturnarr]",{"range":"1451","text":"1452"},"Update the dependencies array to be: [ClinicId, fetchapi]",{"range":"1453","text":"1454"},"Update the dependencies array to be: [FillDetails]",{"range":"1455","text":"1456"},"Update the dependencies array to be: [ClinicList]",{"range":"1457","text":"1458"},"Update the dependencies array to be: [getCurrentTimeslots, props.appointmentdate]",{"range":"1459","text":"1460"},"Update the dependencies array to be: [getCurrentTimefrom, trigger]",{"range":"1461","text":"1462"},"Update the dependencies array to be: [AdvancePayments]",{"range":"1463","text":"1464"},"Update the dependencies array to be: [ExistedPendingPayments]",{"range":"1465","text":"1466"},{"range":"1467","text":"1458"},{"range":"1468","text":"1460"},{"range":"1469","text":"1462"},"Update the dependencies array to be: [props.searchtext, searchpatient]",{"range":"1470","text":"1471"},{"range":"1472","text":"1458"},"Update the dependencies array to be: [props.patientidfromsearch, setfromsearch]",{"range":"1473","text":"1474"},"Update the dependencies array to be: [currentvalue, props.patient_id]",{"range":"1475","text":"1476"},{"range":"1477","text":"1464"},{"range":"1478","text":"1466"},"Update the dependencies array to be: [CalculatePaidPendings, calculate]",{"range":"1479","text":"1480"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods]",{"range":"1481","text":"1482"},{"range":"1483","text":"1464"},{"range":"1484","text":"1482"},{"range":"1485","text":"1464"},[19703,19705],"[fetchallAppointmentslist]",[19768,19802],"[doctorid, fetchallAppointmentslist, fromdate, todate, type]",[27060,27062],"[getAllPatients]",[27113,27128],"[getAllPatients, patientsearch]",[35035,35037],"[getAllDoctors]",[35087,35102],"[Doctorssearch, getAllDoctors]",[3165,3182],"[Appointmentlist, props._selected]",[24138,24155],"[fetchapi, props._selected]",[1007,1037],"[GetDoctors, props.fromdate, props.todate]",[5261,5297],"[props.fromdate, props.todate, load, DoctorwiseTable]",[5062,5089],"[GETSalesList, channel, fromdate, todate]",[18120,18122],"[AddPaymentMethods]",[19731,19751],"[CalPrevTotal, props.saleentryarr]",[38589,38616],"[GETSaleReturns, channel, fromdate, todate]",[51260,51270],"[Doclist, doctorid]",[52236,52254],"[CalGrandttl, SelectedProducts]",[105081,105108],"[GETPurchaseList, channel, fromdate, todate]",[141665,141676],"[CalculateGst, sgstprcnt]",[141758,141769],"[CalculateIGst, igstprcnt]",[141828,141841],"[Calculate]",[141900,141929],"[CalculateCPU]",[175606,175633],"[GETPurchaseReturns, channel, fromdate, todate]",[215912,215924],"[GetVaccines, searchname]",[224957,224969],[237227,237235],"[medcinelist, offset]",[1585,1615],"[PharmacyList, props.fromdate, props.todate]",[1978,1980],"[DSR_All_Appointments]",[2037,2083],"[DSR_All_Appointments, props.doctorid, props.fromdate, props.todate]",[5820,5844],"[MakePurchaseEntryExport, props.purchaseentryarr]",[11983,12008],"[MakePurchaseReturnExport, props.purchasereturnarr]",[4097,4107],"[ClinicId, fetchapi]",[1653,1655],"[FillDetails]",[1598,1600],"[ClinicList]",[3193,3196],"[getCurrentTimeslots, props.appointmentdate]",[3261,3270],"[getCurrentTimefrom, trigger]",[1536,1538],"[AdvancePayments]",[3408,3410],"[ExistedPendingPayments]",[1548,1550],[3217,3220],[3285,3294],[1213,1231],"[props.searchtext, searchpatient]",[1416,1418],[1619,1646],"[props.patientidfromsearch, setfromsearch]",[3428,3446],"[currentvalue, props.patient_id]",[1576,1578],[3262,3264],[1380,1382],"[CalculatePaidPendings, calculate]",[4432,4434],"[AddExtraCharges, AddPaymentMethods]",[12052,12054],[4046,4048],[11633,11635]]