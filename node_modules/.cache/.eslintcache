[{"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\Exports.jsx":"1","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\pharmacy.jsx":"2","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Pharmacy_Dsr.jsx":"3","C:\\Users\\prath\\Desktop\\Connect_App\\src\\App.jsx":"4","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Appointments_Dsr.jsx":"5","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Doctors_Dsr.jsx":"6","C:\\Users\\prath\\Desktop\\Connect_App\\src\\index.jsx":"7","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\WelcomeLoader.jsx":"8","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\livetime.jsx":"9","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Timer.jsx":"10","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\SearchField.jsx":"11","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Doctor.jsx":"12","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddPatient.jsx":"13","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddAppointment.jsx":"14","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddDoctorSlot.jsx":"15","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\apiarrays.jsx":"16","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\AllAppointmentslist.jsx":"17","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedAppointments.jsx":"18","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Patients\\UpdatePatient.jsx":"19","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Doctors\\UpdateDoctor.jsx":"20","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customconfirm.jsx":"21","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Payments.jsx":"22","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AmountPaid.jsx":"23","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedTimeAppointment.jsx":"24","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\SelectedDoctorSlot.jsx":"25","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\UpdateAppointment.jsx":"26","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Bill.jsx":"27","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Bill.jsx":"28","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\UpdateAppointment.jsx":"29","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Payments.jsx":"30","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Vitals.jsx":"31","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customloading.jsx":"32","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\UpdateMedicine.jsx":"33","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\NewMedicine.jsx":"34","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customnotify.jsx":"35","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\ExportExcel.jsx":"36","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Bootstrap_Confirm.jsx":"37"},{"size":35303,"mtime":1678799908784,"results":"38","hashOfConfig":"39"},{"size":272961,"mtime":1679315024513,"results":"40","hashOfConfig":"39"},{"size":67931,"mtime":1678686471078,"results":"41","hashOfConfig":"39"},{"size":50750,"mtime":1679317873830,"results":"42","hashOfConfig":"39"},{"size":45196,"mtime":1679299647890,"results":"43","hashOfConfig":"39"},{"size":15031,"mtime":1678528911379,"results":"44","hashOfConfig":"39"},{"size":18061,"mtime":1679297953495,"results":"45","hashOfConfig":"39"},{"size":466,"mtime":1677302514777,"results":"46","hashOfConfig":"39"},{"size":722,"mtime":1677302514778,"results":"47","hashOfConfig":"39"},{"size":867,"mtime":1677302514752,"results":"48","hashOfConfig":"39"},{"size":3767,"mtime":1678862983204,"results":"49","hashOfConfig":"39"},{"size":35056,"mtime":1679319341563,"results":"50","hashOfConfig":"39"},{"size":36178,"mtime":1678952880534,"results":"51","hashOfConfig":"39"},{"size":12068,"mtime":1678863100794,"results":"52","hashOfConfig":"39"},{"size":5138,"mtime":1679297808868,"results":"53","hashOfConfig":"39"},{"size":9961,"mtime":1677302514791,"results":"54","hashOfConfig":"39"},{"size":19073,"mtime":1679319161370,"results":"55","hashOfConfig":"39"},{"size":16438,"mtime":1679319241409,"results":"56","hashOfConfig":"39"},{"size":38310,"mtime":1678863619681,"results":"57","hashOfConfig":"39"},{"size":132,"mtime":1677302514312,"results":"58","hashOfConfig":"39"},{"size":1075,"mtime":1679030844874,"results":"59","hashOfConfig":"39"},{"size":19755,"mtime":1677302514303,"results":"60","hashOfConfig":"39"},{"size":2359,"mtime":1677302514665,"results":"61","hashOfConfig":"39"},{"size":6516,"mtime":1679297689825,"results":"62","hashOfConfig":"39"},{"size":4136,"mtime":1679297561884,"results":"63","hashOfConfig":"39"},{"size":12747,"mtime":1677838671724,"results":"64","hashOfConfig":"39"},{"size":31013,"mtime":1677302514666,"results":"65","hashOfConfig":"39"},{"size":30952,"mtime":1677302514301,"results":"66","hashOfConfig":"39"},{"size":12397,"mtime":1678079851541,"results":"67","hashOfConfig":"39"},{"size":19985,"mtime":1677917016714,"results":"68","hashOfConfig":"39"},{"size":9632,"mtime":1678076266207,"results":"69","hashOfConfig":"39"},{"size":731,"mtime":1677302514780,"results":"70","hashOfConfig":"39"},{"size":11968,"mtime":1677933900498,"results":"71","hashOfConfig":"39"},{"size":11274,"mtime":1677758298138,"results":"72","hashOfConfig":"39"},{"size":2135,"mtime":1677302514789,"results":"73","hashOfConfig":"39"},{"size":865,"mtime":1678793643933,"results":"74","hashOfConfig":"39"},{"size":724,"mtime":1679310142444,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"14qdzjp",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":342,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":84,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"80"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"80"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"80"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"80"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"80"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"80"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"80"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"80"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\Exports.jsx",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],[],"import React, { useState, useEffect } from 'react'\r\nimport { ExportExcel } from '../features/ExportExcel'\r\n\r\nconst ExportPurchaseEntry = (props) => {\r\n    const [ExportPurchaseEntry, setExportPurchaseEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Purchase Entry'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakePurchaseEntryExport() {\r\n        if (props.purchaseentryarr.length !== 0) {\r\n            for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n                var vendorsitems = props.purchaseentryarr[i].medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost in Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.purchaseentryarr[i].vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccines && Data.vaccines.name && Data.vaccines.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.vaccines && Data.vaccines.hsn_code !== null ? Data.vaccines.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n\r\n            }\r\n\r\n            // for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n            //     var vendorsitems = props.purchaseentryarr[i].vaccines.map(Data => ({\r\n            //         'Type': 'Vaccine',\r\n            //         'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n            //         'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n            //         'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n            //         'Distributor': Data.purchase_entry.distributor.entity_name,\r\n            //         'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n            //         'Item ID': Data.id != null ? Data.id : '',\r\n            //         'Item Name': Data.vaccines && Data.vaccines.name && Data.vaccines.name != null ? Data.medicine.name : '',\r\n            //         'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n            //         'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n            //         'MRP': Data.mrp != null ? Data.mrp : '',\r\n            //         'Rate': Data.rate != null ? Data.rate : '',\r\n            //         'Discount': Data.discount != null ? Data.discount : '',\r\n            //         'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'IGST %': Data.IGST_rate,\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n            //         'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Cost Rs': Data.cost,\r\n            //         'Qty': Data.qty,\r\n            //         'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n            //         'HSN Code': Data.vaccines && Data.vaccines.hsn_code !== null ? Data.vaccines.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n\r\n            var obj2 = obj.flat()\r\n            setExportPurchaseEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseEntryExport()\r\n        }\r\n        func()\r\n    }, [props.purchaseentryarr])\r\n    // console.log(props.purchaseentryarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ExportPurchaseEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportPurchaseEntry }\r\n\r\nconst ExportPurchaseReturn = (props) => {\r\n    const [ReturnEntry, setReturnEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Purchase Return'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakePurchaseReturnExport() {\r\n        if (props.purchasereturnarr.length !== 0) {\r\n            for (let i = 0; i < props.purchasereturnarr.length; i++) {\r\n                let distributor = props.purchasereturnarr[i].distributor.entity_name\r\n                let GST = props.purchasereturnarr[i].distributor.GSTIN_no\r\n                console.log()\r\n                var vendorsitems = props.purchasereturnarr[i].purchase_medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': distributor,\r\n                    'GSTIN': GST,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.purchasereturnarr[i].purchase_vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': distributor,\r\n                    'GSTIN': GST,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount %': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc. %5': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n\r\n            // for (let i = 0; i < props.purchasereturnarr.length; i++) {\r\n            //     let distributor = props.purchasereturnarr[i].distributor.entity_name\r\n            //     let GST = props.purchasereturnarr[i].distributor.GSTIN_no\r\n            //     var vendorsitems = props.purchasereturnarr[i].purchase_vaccines.map(Data => ({\r\n            //         'Type': 'Vaccine',\r\n            //         'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n            //         'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n            //         'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n            //         'Distributor': distributor,\r\n            //         'GSTIN': GST,\r\n            //         'Item ID': Data.id != null ? Data.id : '',\r\n            //         'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n            //         'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n            //         'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n            //         'MRP': Data.mrp != null ? Data.mrp : '',\r\n            //         'Rate': Data.rate != null ? Data.rate : '',\r\n            //         'Discount %': Data.discount != null ? Data.discount : '',\r\n            //         'Trade Disc. %5': Data.trade_discount != null ? Data.trade_discount : '',\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'IGST %': Data.IGST_rate,\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n            //         'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Cost Rs': Data.cost,\r\n            //         'Qty': Data.qty,\r\n            //         'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n            //         'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n            var obj2 = obj.flat()\r\n            setReturnEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseReturnExport()\r\n        }\r\n        func()\r\n    }, [props.purchasereturnarr])\r\n    console.log(props.purchasereturnarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ReturnEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportPurchaseReturn }\r\n\r\nconst ExportSaleEntry = (props) => {\r\n    const [SaleEntry, setSaleEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Sale Entry'\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTaxPercent(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function TotalTax(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function taxableAmount(amt, cgst, sgst, igst) {\r\n        if (amt) {\r\n            amt = amt - (cgst + sgst + igst)\r\n            return amt\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    async function MakeSaleEntryExport() {\r\n        if (props.saleentryarr.length !== 0) {\r\n\r\n            var obj = []\r\n            for (let i = 0; i < props.saleentryarr.length; i++) {\r\n                let billid = props.saleentryarr[i].bill_id ? props.saleentryarr[i].bill_id : ''\r\n                let billdate = props.saleentryarr[i].bill_date ? reversefunction(props.saleentryarr[i].bill_date) : ''\r\n                let name = props.saleentryarr[i].patient.full_name !== null ? props.saleentryarr[i].patient.full_name : ''\r\n                let doctor = props.saleentryarr[i].doctor_name !== null ? props.saleentryarr[i].doctor_name : ''\r\n\r\n                var vendorsitems = props.saleentryarr[i].sale_medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'Bill ID': billid,\r\n                    'Name': name,\r\n                    'Doctor': doctor,\r\n                    // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': billdate,\r\n                    'Item ID': Data.medicine_stocks.id != null ? Data.medicine_stocks.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stocks.batch_no != null ? Data.medicine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.medicine_stocks.expiry_date) : '',\r\n                    'Rate': Data.medicine_stocks.rate != null ? Data.medicine_stocks.rate : '',\r\n                    'Cost': Data.medicine_stocks.cost != null ? Data.medicine_stocks.cost : '',\r\n                    'MRP': Data.medicine_stocks.mrp != null ? Data.medicine_stocks.mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'Disc. %': Data.discount != null ? Data.discount : '',\r\n                    'Taxable Amt': taxableAmount(Number(Data.total_amount), Number(Data.CGST), Number(Data.SGST), Number(Data.IGST)),\r\n                    'Total CGST': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'Total SGST': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'Total IGST': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total Tax ': TotalTax(Data.CGST, Data.SGST, Data.IGST) * Number(Data.qty),\r\n                    'Amount': Data.total_amount !== null ? Data.total_amount : '',\r\n                    'Grand Total': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.saleentryarr[i].sale_vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'Bill ID': billid,\r\n                    'Name': name,\r\n                    'Doctor': doctor,\r\n                    // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': billdate,\r\n                    'Item ID': Data.vaccine_stocks.id != null ? Data.vaccine_stocks.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.vaccine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n                    'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n                    'Cost': Data.vaccine_stocks.cost != null ? Data.vaccine_stocks.cost : '',\r\n                    'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'Disc. %': Data.discount != null ? Data.discount : '',\r\n                    'Taxable Amt': taxableAmount(Number(Data.total_amount), Number(Data.CGST), Number(Data.SGST), Number(Data.IGST)),\r\n                    'Total CGST': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'Total SGST': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'Total IGST': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total Tax ': TotalTax(Data.CGST, Data.SGST, Data.IGST) * Number(Data.qty),\r\n                    'Amount': Data.total_amount !== null ? Data.total_amount : '',\r\n                    'Grand Total': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n\r\n            // for (let i = 0; i < props.saleentryarr.length; i++) {\r\n            //     let billid = props.saleentryarr[i].bill_id ? props.saleentryarr[i].bill_id : ''\r\n            //     let billdate = props.saleentryarr[i].bill_date ? reversefunction(props.saleentryarr[i].bill_date) : ''\r\n            //     let name = props.saleentryarr[i].patient.full_name !== null ? props.saleentryarr[i].patient.full_name : ''\r\n            //     let doctor = props.saleentryarr[i].doctor_name !== null ? props.saleentryarr[i].doctor_name : ''\r\n            //     var vendorsitems = props.saleentryarr[i].sale_vaccines.map(Data => ({\r\n            //         'Type': 'Vaccine',\r\n            //         'Bill ID': billid,\r\n            //         'Name': name,\r\n            //         'Doctor Name': doctor,\r\n            //         // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n            //         'Bill Date': billdate,\r\n            //         'Item ID': Data.vaccine_stocks.id != null ? Data.vaccine_stocks.id : '',\r\n            //         'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n            //         'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n            //         'Qty': Data.qty,\r\n            //         'ExpiryDate': Data.vaccine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n            //         'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n            //         'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n            //         'Discount': Data.discount != null ? Data.discount : '',\r\n            //         'Taxable Amount in Rs': Data.total_amount !== null ? Data.total_amount : '',\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'IGST %': Data.IGST_rate,\r\n            //         'Total Tax in %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.CGST, Data.CGST, Data.qty),\r\n            //         'Grand Total Rs': Data.vaccine_stocks.total_amount ? Data.vaccine_stocks.total_amount : '',\r\n            //         'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n            var obj2 = obj.flat()\r\n            setSaleEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeSaleEntryExport()\r\n        }\r\n        func()\r\n    }, [props.saleentryarr])\r\n    console.log(props.saleentryarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={SaleEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportSaleEntry }\r\nconst ExportSaleReturn = (props) => {\r\n    const [ReturnEntry, setReturnEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Sale Returns'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakeSaleReturnExport() {\r\n        if (props.salereturnarr.length !== 0) {\r\n            for (let i = 0; i < props.salereturnarr.length; i++) {\r\n                let returndate = props.salereturnarr[i].return_date !== null ? reversefunction(props.salereturnarr[i].return_date) : ''\r\n                let seid = props.salereturnarr[i].sale_entry_id !== null ? 'P-' + props.salereturnarr[i].sale_entry_id : ''\r\n                let srid = props.salereturnarr[i].return_no !== null ? 'SR-' + props.salereturnarr[i].return_no : ''\r\n                let name = props.salereturnarr[i].sale_entry.patient.full_name !== null ? props.salereturnarr[i].sale_entry.patient.full_name : ''\r\n                let returnedamt = props.salereturnarr[i].grand_total !== null ? props.salereturnarr[i].grand_total : ''\r\n                console.log()\r\n                var vendorsitems = props.salereturnarr[i].sale_medicines.map(Data => ({\r\n                    'Return No.': srid,\r\n                    'Name': name,\r\n                    'Type': 'Medicine',\r\n                    'SE ID': seid,\r\n                    // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n                    'Return Date': returndate,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stocks.batch_no != null ? Data.medicine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.medicine_stocks.expiry_date) : '',\r\n                    'MRP': Data.medicine_stocks.mrp != null ? Data.medicine_stocks.mrp : '',\r\n                    'Rate': Data.medicine_stocks.rate != null ? Data.medicine_stocks.rate : '',\r\n                    'Cost': Data.medicine_stocks.cost != null ? Data.medicine_stocks.cost : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'Returned Amount': returnedamt,\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.salereturnarr[i].sale_vaccines.map(Data => ({\r\n                    'Return No.': srid,\r\n                    'Name': name,\r\n                    'Type': 'Vaccine',\r\n                    'SE ID': seid,\r\n                    // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n                    'Return Date': returndate,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n                    'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n                    'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n                    'Cost': Data.vaccine_stocks.cost != null ? Data.vaccine_stocks.cost : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'Returned Amount': returnedamt,\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n\r\n            // for (let i = 0; i < props.salereturnarr.length; i++) {\r\n            //     let returndate = props.salereturnarr[i].return_date !== null ? reversefunction(props.salereturnarr[i].return_date) : ''\r\n            //     let seid = props.salereturnarr[i].sale_entry_id !== null ? 'P-' + props.salereturnarr[i].sale_entry_id : ''\r\n            //     let srid = props.salereturnarr[i].return_no !== null ? 'SR-' + props.salereturnarr[i].return_no : ''\r\n            //     let name = props.salereturnarr[i].sale_entry.patient.full_name !== null ? props.salereturnarr[i].sale_entry.patient.full_name : ''\r\n            //     let returnedamt = props.salereturnarr[i].grand_total !== null ? props.salereturnarr[i].grand_total : ''\r\n            //     console.log()\r\n            //     var vendorsitems = props.salereturnarr[i].sale_vaccines.map(Data => ({\r\n            //         'Return No.': srid,\r\n            //         'Name': name,\r\n            //         'Type': 'Vaccine',\r\n            //         'SE ID': seid,\r\n            //         // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n            //         'Return Date': returndate,\r\n            //         'Item ID': Data.id != null ? Data.id : '',\r\n            //         'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n            //         'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n            //         'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n            //         'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n            //         'Discount': Data.discount != null ? Data.discount : '',\r\n            //         'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n            //         'Qty': Data.qty,\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST),\r\n            //         'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n            //         'Returned Amount': returnedamt,\r\n            //         'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n            var obj2 = obj.flat()\r\n            setReturnEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeSaleReturnExport()\r\n        }\r\n        func()\r\n    }, [props.salereturnarr])\r\n    console.log(props.salereturnarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ReturnEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportSaleReturn }",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\pharmacy.jsx",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],[],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index';\r\nimport { ExportPurchaseEntry, ExportPurchaseReturn, ExportSaleEntry, ExportSaleReturn } from '../pharmacy/Exports'\r\nimport Notiflix from 'notiflix';\r\nimport ReactPaginate from 'react-paginate';\r\nimport * as XLSX from 'xlsx';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/pharmacy.css';\r\nimport '../../css/dashboard.css'\r\nimport { Purchaseorderarray, Pharmacystocktable, POitemdetailsarray } from './apiarrays';\r\nimport { NewMedicine } from './NewMedicine';\r\nimport { UpdateMedicine } from './UpdateMedicine';\r\n\r\n//-------------------------------------------------Sales------------------------------------------------------------------------------------------\r\nfunction Salesection(props) {\r\n  const first = [\"Sale Entry\", \"Sale Returns\"];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return <Saleentrysection function={props.func} function2={props.function} />\r\n    }\r\n    if (_selected === 1) {\r\n      return <SaleReturns />\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <section className='purchasesection pt-1'>\r\n        <div className=\"container-fluid p-0 m-0\">\r\n          <div className=\"row gx-3 p-0 m-0\">\r\n            <div className=\"col-10  \">\r\n              <div className='row'>\r\n                {\r\n                  first.map((e, i) => {\r\n                    return (\r\n                      <div className=\"col-auto\">\r\n                        <button className={`btn btn-sm px-4 rounded-5 text-${i === second ? \"light\" : \"dark\"} bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(i)} >{e}</button>\r\n                      </div>\r\n                    )\r\n                  }\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid p-0 m-0 pt-3'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedScreen(second)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Saleentrysection(props) {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const adminid = localStorage.getItem('id')\r\n  const url = useContext(URL)\r\n  const [seidw, setseidw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [saleentryarr, setsaleentryarr] = useState([])\r\n  const [saleentryarrforExcel, setsaleentryarrforExcel] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const [pages, setpages] = useState([])\r\n  const [paymentsapage, setpaymentsapage] = useState('none')\r\n  const [tabindex, settabindex] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n    }\r\n  }\r\n  const toggle_seidw = () => {\r\n    if (seidw === \"none\") {\r\n      setseidw(\"block\");\r\n    }\r\n    if (seidw === \"block\") {\r\n      setseidw(\"none\");\r\n      setindex()\r\n    }\r\n  };\r\n  const toggle_payments = () => {\r\n    if (paymentsapage === 'none') {\r\n      setpaymentsapage('block')\r\n    }\r\n    if (paymentsapage === 'block') {\r\n      setpaymentsapage('none')\r\n      settabindex()\r\n    }\r\n\r\n  }\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 25) + 1)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  function GETSalesList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true)\r\n      try {\r\n        axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          console.log(response)\r\n          setsaleentryarr(response.data.data.sale_entry)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      setLoading(true)\r\n      try {\r\n        axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          console.log(response)\r\n          setsaleentryarr(response.data.data.sale_entry)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n  }\r\n  function GETSalesListForExcel() {\r\n\r\n    try {\r\n      axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        console.log(response)\r\n        setsaleentryarrforExcel(response.data.data.sale_entry)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    GetPages()\r\n  }, [channel, fromdate, todate])\r\n\r\n  useEffect(() => {\r\n    GETSalesList()\r\n    GETSalesListForExcel()\r\n  }, [pagecount])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  let array = [[1, 'Confirmed', 'lightgreen'], [2, 'Payment done', 'success'], [3, 'Completed', 'lightyellow'], [4, 'Cancelled', 'lightred']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  //Status\r\n  const UpdateStatus = async (e, id) => {\r\n    console.log(e.target.value, id)\r\n    try {\r\n      await axios.post(`${url}/sale/entry/change/status`, {\r\n        sale_entry_id: id,\r\n        status: e.target.value,\r\n        admin_id: adminid,\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        GETSalesList()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/sale/entry/bill`, {\r\n        sale_entry_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone) => {\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/sale/entry/send/bill/whatsapp`, {\r\n          sale_entry_id: id,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(response.data.message)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  console.log(saleentryarr, pages)\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nsef}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Sale</button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between justify-content-center\">\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center text-center text-charcoal fw-bolder fs-6\">\r\n          Sale Entry <span className='text-burntumber border-burntumber px-1 rounded-2'>{pagecount}</span>\r\n        </div>\r\n        <div className=\"col-auto align-self-center\">\r\n          <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n            {/* <div className=\"col-4 bg-pearl rounded-2\">\r\n              <select className='p-0 m-0 bg-pearl border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div> */}\r\n            <div className=\"col-6 text-burntumber fw-bolder bg-pearl rounded-2\">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-6 text-burntumber fw-bolder bg-pearl rounded-2\">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center\">\r\n          <ExportSaleEntry saleentryarr={saleentryarrforExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div className='scroll scroll-y p-0 m-0 mt-2' style={{ minHeight: '40vh', height: '58vh', maxHeight: '70vh' }}>\r\n        <table className=\"table text-start table-responsive p-0 m-0\">\r\n          <thead className=' p-0 m-0 position-sticky top-0 bg-pearl'>\r\n            <tr className=' p-0 m-0'>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Bill ID</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Patient Name</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Bill Date</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Bill Total</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Appointment Date</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Doctor Name</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1'>Invoice No.</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1 text-center'>Status</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1 text-center'>Actions</th>\r\n              {/* <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>more</th> */}\r\n            </tr>\r\n          </thead>\r\n          {\r\n            Loading ? (\r\n              <body className=' text-center' style={{ minHeight: '55vh', height: '55vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n\r\n              </body>\r\n\r\n            ) : (\r\n              saleentryarr && saleentryarr.length != 0 ? (\r\n                <tbody>\r\n                  {\r\n                    saleentryarr.map((item, i) => (\r\n                      <tr className={` bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`} key={i}>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.bill_id && item.bill_id !== null ? \"P-\" + item.bill_id : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.patient && item.patient && item.patient.full_name != null ? item.patient.full_name : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.bill_date && item.bill_date ? reversefunction(item.bill_date) : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.grand_total && item.grand_total ? \"Rs. \" + item.grand_total : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.appointment_date && item.appointment.appointment_date != null ? reversefunction(item.appointment.appointment_date) : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.doctor && item.appointment.doctor.doctor_name != null ? item.appointment.doctor.doctor_name : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.bill_id && item.appointment.bill_id != null ? item.appointment.bill_id : ''}</td>\r\n                        <td className=\"text-charcoal fw-bold p-0 m-0 px-1 text-center\">\r\n                          <select disabled={item.sale_entry_status == 4 ? true : false} className={` fw-bolder border-0 bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} text-center rounded-pill  bg-${status_color(item.sale_entry_status)}`} name={item.id} onChange={(e) => { UpdateStatus(e, item.id) }} style={{ appearance: 'none' }}>\r\n                            <option className=\"button\" selected disabled>{status(item.sale_entry_status)}</option>\r\n                            <option key={0} className=\"text-lightred bg-pearl\" value='1'>Confirmed</option>\r\n                            <option key={1} className=\"text-lightblue  bg-pearl\" value='2'>Payment Done</option>\r\n                            <option key={2} className=\"text-lightred  bg-pearl\" value='3'>Completed</option>\r\n                            <option key={3} className=\"text-charcoal  bg-pearl\" value='4'>Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td className={`text-charcoal text-center bg-transparent fw-bold p-0 m-0 px-1 `}>\r\n                          <div className={`dropdown  bg-${tabindex == i ? 'lightred' : ''} text-center text-decoration-none`}>\r\n                            <button className=\"btn p-0 m-0 px-1 py-1 text-decoration-none dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                              <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                            </button>\r\n                            <ul className=\"dropdown-menu  text-start\" >\r\n                              <li className=\"text-start border-bottom\"><button className={`btn`} onClick={() => { settabindex(i); toggle_payments() }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" />Payments\r\n                              </button></li>\r\n                              <li className=\" text-start border-bottom\">    <button className=\"btn\" onClick={() => { setindex(i); toggle_seidw() }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /> Inventory\r\n                              </button></li>\r\n                              <li className=\"text-start border-bottom\"><button className=\"btn\" onClick={() => { Generate_Bill(item.id) }}><img src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Bill</button>\r\n                              </li>\r\n                              <li className=\"text-start\"><button className=\"btn\" onClick={() => { Send_On_WhatsApp(item.id, item.patient.phone_number) }}><img src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Send Bill On WhatsApp </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n\r\n\r\n\r\n                        </td>\r\n\r\n                        {/* <td className={`text-charcoal fw-bold p-0 m-0 px-1 `}>\r\n                          <button className=\"btn position-relative cursor-pointer more p-0 m-0\">\r\n                            <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                          </button></td> */}\r\n\r\n                        <td className={`position-absolute mt-1 d-${i == index ? seidw : 'none'} start-0 end-0 border border-1 bg-seashell p-0 m-0`} style={{ zIndex: '2', top: '-7.5rem', 'height': '90vh' }} >\r\n                          {\r\n                            i == index ? (\r\n                              <SEitemdetailssection saleentryarr={saleentryarr[i]} itembillid={\"P-\" + item.bill_id} toggle_seidw={toggle_seidw} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n\r\n                        <td className={`col-lg-8 col-xl-6 col-md-8 col-sm-10 start-0 end-0 top-0 mx-auto shadow rounded-4 position-absolute bg-pearl d-${tabindex == i ? paymentsapage : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                          {\r\n                            i == tabindex ? (\r\n                              <SaleEntrypayments GETSalesList={GETSalesList} saleentryarr={saleentryarr[i]} toggle_payments={toggle_payments} itembillid={\"P-\" + item.bill_id} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              ) : (\r\n                <body className='text-center p-0 m-0' style={{ minHeight: '55vh', maxHeight: '55vh' }}>\r\n                  <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                    <strong className='text-charcoal fw-bolder text-center'>No Sale Entries</strong>\r\n                  </div>\r\n                </body>\r\n              )\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        {/* <div className=\"d-flex p-0 m-0 justify-content-center text-center\">\r\n\r\n          <button className=\"btn  border-charcoal p-0 m-0 px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-sm-8 col-md-8 p-0 m-0 scroll\" ref={pageref}>\r\n            {\r\n              pages ? (\r\n                <div className='d-inline-flex'>\r\n                  {\r\n                    pages.map((page, i) => (\r\n                      <button className={`button rounded-3 ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}   shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} value={page} id={page} onClick={(e) => { GETSalesList(i) }} key={i}>{page}</button>\r\n                    ))\r\n                  }\r\n                </div>\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn p-0 m-0 px-1 border-charcoal ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div> */}\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETSalesList}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active '}\r\n        />\r\n      </div>\r\n      <section className={`newsaleentryform p-0 m-0 position-absolute d-${nsef} border border-1 mx-auto start-0 end-0 bg-seashell`} style={{ height: '90vh' }}>\r\n        <SaleEntryForm toggle_nsef={toggle_nsef} GETSalesList={GETSalesList} />\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction SaleEntrypayments(props) {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const [paymentmethods, setpaymentmethods] = useState()\r\n  const [previouspayments, setpreviouspayments] = useState([])\r\n  const [previoustotal, setprevioustotal] = useState(0)\r\n  const [loading, setloading] = useState()\r\n  const paymentmethoddetails = {\r\n    paymentmethod: '',\r\n    amount: 0\r\n  }\r\n  async function AddPaymentMethods() {\r\n    let Payments = []\r\n    let amounts = []\r\n    let allamounts = []\r\n    Payments.push(Object.keys(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    amounts.push(Object.values(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    let paymentobj = []\r\n    let p = {\r\n      paymentmethod: '',\r\n      amount: 0\r\n    }\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n      }\r\n      setpaymentmethods(allamounts)\r\n    }\r\n\r\n    paymentmethods.push(paymentobj)\r\n  }\r\n  useEffect(() => {\r\n    AddPaymentMethods()\r\n  }, [])\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i)\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments of  ${props.itembillid}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveSaleEntryCharges()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  async function SaveSaleEntryCharges() {\r\n    let PaymentMethod = []\r\n    let PaymentMethodDetails = []\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      PaymentMethod.push(paymentmethods[i].amount)\r\n      PaymentMethodDetails.push(paymentmethods[i].paymentmethod)\r\n    }\r\n    let Data = {\r\n      sale_entry_id: props.saleentryarr.id,\r\n      g_total_main: props.saleentryarr.grand_total,\r\n      payment_method: PaymentMethodDetails,\r\n      payment_method_main: PaymentMethodDetails,\r\n      payment_method_details: PaymentMethod,\r\n      admin_id: adminid\r\n    }\r\n    try {\r\n      setloading(true)\r\n      await axios.post(`${url}/sale/entry/save/charges`, Data).then((response) => {\r\n        props.GETSalesList()\r\n        setloading(false)\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } catch (e) {\r\n      setloading(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  const CalPrevTotal = async () => {\r\n    let total = 0\r\n    paymentmethods.map((data) => (\r\n      total += Number(data.amount)\r\n    ))\r\n    console.log(total)\r\n    setprevioustotal(total)\r\n  }\r\n  useEffect(() => {\r\n    CalPrevTotal()\r\n  }, [props.saleentryarr])\r\n  console.log(props.saleentryarr, paymentmethods, previoustotal)\r\n\r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods(prevState => [...prevState, paymentmethoddetails])\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails])\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className='p-0 m-0'>\r\n      <h6 className='text-center mt-2 fw-bold'>{props.itembillid} Payments</h6>\r\n      <hr className='p-0 m-0 mt-1' />\r\n      <button className='btn-close position-absolute top-0 end-0 p-2 m-2 ' onClick={() => props.toggle_payments()}></button>\r\n\r\n      <p className='text-charcoal p-0 m-auto fw-bolder'>Grand Total : <span className='text-burntumber'>Rs {props.saleentryarr.grand_total}</span></p>\r\n      <hr className='p-0 m-0 mb-1' />\r\n      <div className=\"container-fluid text-start position-relative\">\r\n        <div className={`d-${previoustotal == props.saleentryarr.grand_total ? '' : 'none'} bg-lightgreen fw-bold text-center p-2 my-2`}>Payment Done</div>\r\n        <h6 className='text-charcoal fw-bolder text-center'>Payments</h6>\r\n        {/* d-${previoustotal < props.saleentryarr.grand_total ? '  ' : 'none'} */}\r\n        {\r\n          paymentmethods ? (\r\n            paymentmethods.map((data, i) => (\r\n              <div className={`row p-0 m-0  justify-content-end g-2`}>\r\n                <div className=\"col-4 \">\r\n                  <select className='form-control border-success py-1 text-center' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                    <option value='Cash'>Cash</option>\r\n                    <option value='Card'>Card</option>\r\n                    <option value='Paytm'>Paytm</option>\r\n                    <option value='Phonepe'>Phone Pe</option>\r\n                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                    <option value='Razorpay'>Razorpay</option>\r\n                    <option value='Points'>Points</option>\r\n                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className='form-control border-success py-1 text-center' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (<></>)\r\n\r\n        }\r\n        <div className=\"container-fluid text-center mt-2\">\r\n          <button className='btn py-0' onClick={AddMethods}>\r\n            <img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mt-2'>\r\n        {\r\n          loading ? (\r\n            <div className=\"container-fliud pt-2\">\r\n              <div className=\"d-flex fs-6 align-items-center justify-content-around\">\r\n                <h6 className=\"text-burntumber\">Updating...</h6>\r\n                <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <button className='button button-burntumber m-0 p-0 py-1 px-5' disabled={previoustotal == props.saleentryarr.grand_total ? true : false} onClick={confirmmessage}>Save</button>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <button className='button button-pearl border-charcoal p-0 m-0 py-1 px-5' onClick={() => { setpaymentmethods(); props.toggle_payments() }}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction SEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n\r\n\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(cgst) + Number(sgst) + Number(igst)\r\n      return e\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n      return e\r\n    }\r\n  }\r\n  console.log(props.saleentryarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n\r\n      <h5 className='text-center text-charcoal pt-3'>{props.itembillid} Sale Entry Item Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-4\" onClick={props.toggle_seidw} aria-label=\"Close\"></button>\r\n\r\n      <div className=\"col-2 d-none\">\r\n        <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n          <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n          <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n        </div>\r\n      </div>\r\n      <div className='d-flex p-0 m-0 mt-3 mb-1 justify-content-center'>\r\n        {\r\n          Items.map((data, i) => (\r\n            <button className={`button shadow-0 rounded-0 border-charcoal button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className=\"row p-0 m-0 justify-content-between\">\r\n        <div className=\"col-auto ms-2 mb-2 text-burntumber rounded-2 fw-bolder bg-pearl\" >\r\n          <p className='text-charcoal p-0 m-0 ms-1 text-start'>Grand Total</p>\r\n          <hr className='p-0 m-0' />\r\n          <h5 className='text-charcoal p-0 m-0 fw-bold text-start ms-1'>{props.saleentryarr.grand_total ? props.saleentryarr.grand_total : 0}</h5>\r\n        </div>\r\n        <div className=\"col-auto align-self-end justify-content-end me-4\">\r\n          <input type='checkbox' className='form-check-input' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '65vh', Height: '65vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Stock ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Medicine</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Qty</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Disc. %</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'> Amt</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Grand Total</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>Total CGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST% </th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>Total SGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>Total IGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.saleentryarr.sale_medicines && props.saleentryarr.sale_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.saleentryarr.sale_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks && item.medicine_stocks.id !== null ? \"m\" + item.medicine_stocks.id : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty && item.qty != null ? item.qty : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount != null ? item.discount : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.total_amount ? item.total_amount : ''}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-center text-charcoal fw-bold'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '65vh', Height: '65vh', maxHeight: '65vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Stock ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Vaccine</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Qty</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Disc. %</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Amt</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Grand Total</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>Total CGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>Total SGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>Total IGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.saleentryarr.sale_vaccines !== undefined && props.saleentryarr.sale_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.saleentryarr.sale_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine_stocks && item.vaccine_stocks.id !== null ? \"v\" + item.vaccine_stocks.id : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty && item.qty != null ? item.qty : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount != null ? item.discount : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : ''}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className=' text-center fw-bold text-charcoal'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction SaleReturns() {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [sridw, setsridw] = useState(\"none\");\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [salereturnarr, setsalereturnarr] = useState([])\r\n  const [salereturnarrExcel, setsalereturnarrExcel] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nref, setnref] = useState(\"none\");\r\n\r\n  const [pages, setpages] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n\r\n  console.log(salereturnarr, pagecount)\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/sale/return?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 25) + 1)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  function GETSaleReturns(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      try {\r\n        axios.get(`${url}/sale/return?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          console.log(response)\r\n          setsalereturnarr(response.data.data.sale_return)\r\n\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message)\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      try {\r\n        axios.get(`${url}/sale/return?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          console.log(response)\r\n          setsalereturnarr(response.data.data.sale_return)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message)\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n  function GETSaleReturnsForExcel() {\r\n    setLoading(true)\r\n    try {\r\n      axios.get(`${url}/sale/return?clinic_id=${ClinicID}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        console.log(response)\r\n        setpagecount(response.data.data.total_count)\r\n        setsalereturnarrExcel(response.data.data.sale_return)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages()\r\n  }, [fromdate, todate])\r\n\r\n  useEffect(() => {\r\n    GETSaleReturns()\r\n    GETSaleReturnsForExcel()\r\n  }, [pagecount])\r\n\r\n  const toggle_sridw = () => {\r\n    if (sridw === \"none\") {\r\n      setsridw(\"block\");\r\n    }\r\n    if (sridw === \"block\") {\r\n      setsridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  console.log(salereturnarr)\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Return</button>\r\n      <div classsName='p-0 m-0'>\r\n        <div className=\"row p-0 m-0 justify-content-lg-between justify-content-center\">\r\n          <div className=\"col-2 col-md-2 col-lg-2 text-center align-self-center text-charcoal fw-bolder fs-6\">Sale Return <span className='text-burntumber border-burntumber px-1 rounded-2'>{pagecount}</span> </div>\r\n          <div className=\"col-auto align-self-center m-1 justify-content-center \">\r\n            <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n              {/* <div className=\"col-auto \">\r\n                <select className='p-0 m-0 border-0 text-burntumber fw-bolder rounded-2' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n                </select>\r\n              </div> */}\r\n              <div className=\"col-auto text-burntumber bg-pearl fw-bolder rounded-2\">\r\n                <input type='date' className='p-0 m-0 border-0 text-burntumber  bg-pearl fw-bolder' placeholder='fromdate' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-auto  text-burntumber bg-pearl fw-bolder rounded-2\">\r\n                <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl' placeholder='fromdate' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 col-lg-2 col-md-2 align-self-center\">\r\n            <ExportSaleReturn salereturnarr={salereturnarrExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n          </div>\r\n        </div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '40vh', height: '59vh', maxHeight: '70vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return No.</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Name</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Sale Entry ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Amount</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Actions</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n\r\n                </body>\r\n\r\n              ) : (\r\n                salereturnarr && salereturnarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      salereturnarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>SR-{item.return_no}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.sale_entry && item.sale_entry.patient && item.sale_entry.patient.full_name != null ? item.sale_entry.patient.full_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.sale_entry && item.sale_entry && item.sale_entry.id != null ? 'P-' + item.sale_entry.id : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.return_date ? reversefunction(item.return_date) : ''}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.grand_total ? item.grand_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>\r\n                            {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                            <button className=\"btn\" onClick={() => { setindex(i); toggle_sridw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? sridw : 'none'} bg-seashell border border-1 start-0 end-0 p-0 m-0`} style={{ top: '-7.5rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <SRitemdetailssection salereturnarr={salereturnarr[i]} toggle_sridw={toggle_sridw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Sale Returns</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          < ReactPaginate\r\n            previousLabel={'Previous'}\r\n            nextLabel={'Next'}\r\n            breakLabel={'. . .'}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={GETSaleReturns}\r\n            containerClassName={'pagination'}\r\n            pageClassName={'page-item text-charcoal'}\r\n            pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n            previousClassName={'btn button-charcoal-outline me-2'}\r\n            previousLinkClassName={'text-decoration-none text-charcoal'}\r\n            nextClassName={'btn button-charcoal-outline ms-2'}\r\n            nextLinkClassName={'text-decoration-none text-charcoal'}\r\n            breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n            breakLinkClassName={'text-decoration-none text-charcoal'}\r\n            activeClassName={'active'}\r\n          />\r\n        </div>\r\n      </div>\r\n      <section className={`newreturnentrysection position-absolute start-0 end-0 border border-1 bg-seashell d-${nref}`} style={{ 'height': '90vh' }}  >\r\n        {<NewSaleReturnentryform toggle_nref={toggle_nref} GETSaleReturns={GETSaleReturns} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction SaleEntryForm(props) {\r\n  const tableref = useRef(null)\r\n  const cliniclist = useContext(Clinic)\r\n  const url = useContext(URL)\r\n  const Doclist = useContext(DoctorsList)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const medicinesref = useRef(null)\r\n  const medbyidref = useRef(null);\r\n  const patientaddref = useRef(null)\r\n  const stockref = useRef(null)\r\n  const [searchinput, setsearchinput] = useState()\r\n  const [searchlist, setsearchlist] = useState([])\r\n  const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n  const [patientid, setpatientid] = useState()\r\n  const [patientdata, setpatientdata] = useState([])\r\n  const [doctorid, setdoctorid] = useState()\r\n  const [doctorname, setdoctorname] = useState()\r\n  const [clinicid, setclinicid] = useState(clinicID)\r\n  const [ischecked, setischecked] = useState()\r\n  const [Dc, setDc] = useState(0)\r\n  const [AtC, setAtC] = useState(0)\r\n  const [load, setload] = useState()\r\n  const [searchload, setsearchload] = useState(false)\r\n  const [products, setproducts] = useState([])\r\n  const [itemsearch, setitemsearch] = useState([])\r\n  const [itembyid, setitembyid] = useState([])\r\n  const [loadbyId, setloadbyId] = useState()\r\n  const [itemname, setitemname] = useState()\r\n  const [itemid, setitemid] = useState()\r\n  const [SelectedProducts, setSelectedProducts] = useState([])\r\n  const [Grandtotal, setGrandtotal] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [addressid, setaddressid] = useState()\r\n  const [addressform, setaddressform] = useState('none')\r\n\r\n  const searchpatient = (e) => {\r\n    setsearchload(true)\r\n    setsearchinput(e.target.value)\r\n    axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n      setsearchlist(response.data.data.patients_list)\r\n      setsearchload(false)\r\n    })\r\n    if (searchinput && searchinput.length > 1) {\r\n      setdisplaysearchlist('block');\r\n    } else {\r\n      setdisplaysearchlist('none');\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const get_value = (id, name, data) => {\r\n    setsearchinput(name)\r\n    setpatientid(id)\r\n    setpatientdata(data)\r\n    setdisplaysearchlist('none');\r\n  }\r\n  const selectaddress = (data) => {\r\n    if (data) {\r\n      setaddressid(data.id)\r\n      setDc(1)\r\n    } else {\r\n      setaddressid()\r\n      setDc(0)\r\n    }\r\n  }\r\n  const DC = () => {\r\n    if (Dc == 0) {\r\n      setaddressform('block')\r\n    }\r\n    if (Dc == 1) {\r\n      if (addressid) {\r\n        setDc(0)\r\n        setaddressform('none')\r\n      } else {\r\n        setaddressform('block')\r\n      }\r\n    }\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/stock/list?search=${search}`).then((response) => {\r\n        let medicines = []\r\n        let vaccines = []\r\n        let items = []\r\n        medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n        vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n        items = medicines.concat(vaccines)\r\n        items = items.flat()\r\n        console.log(items)\r\n        setitemsearch(items)\r\n        setloadsearch(false)\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n  }\r\n  const searchmedbyId = async (search) => {\r\n    if (search.length > 0) {\r\n      setloadbyId(true)\r\n      try {\r\n        await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n          setloadbyId(false)\r\n          setitembyid([response.data.data])\r\n        })\r\n      } catch (e) {\r\n        setloadbyId(false)\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    Doclist.map((data) => (\r\n      data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n    ))\r\n  }, [doctorid])\r\n  function CalSellingCost(mrp, disc) {\r\n    let cost = mrp\r\n    if (!disc) {\r\n      cost = Number(mrp)\r\n      return cost\r\n    } else {\r\n      cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n      cost = cost.toFixed(2)\r\n      return cost\r\n    }\r\n\r\n  }\r\n  function CalTotalAmount(qty, cst, realcst) {\r\n    let cost = cst\r\n    if (Number(realcst) > Number(cost)) {\r\n\r\n      Notiflix.Notify.failure('Selling Cost should not less than Cost')\r\n    }\r\n    console.log(typeof (realcst), typeof (cost))\r\n    if (!qty) {\r\n      return 0\r\n    } else if (qty == 1) {\r\n      cst = Number(cst)\r\n      return cst\r\n    } else {\r\n      cost = Number(cst) * Number(qty)\r\n      cost = cost.toFixed(2)\r\n      return cost\r\n    }\r\n\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0\r\n    SelectedProducts.map((data) => (\r\n      ttl += Number(data.totalamt)\r\n    ))\r\n    setGrandtotal(ttl)\r\n  }\r\n  function CaltotalDiscount(data) {\r\n    let total = 0\r\n    if (data) {\r\n      data.forEach(item => {\r\n        total += Number(item.discount)\r\n      })\r\n      return total\r\n    } else {\r\n      return total\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    CalGrandttl()\r\n  }, [SelectedProducts])\r\n  function AddProducts(data) {\r\n    let T = ''\r\n    if (data.vaccine_brand_id) {\r\n      T = 'v'\r\n    } else {\r\n      T = 'm'\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      type: data.type ? data.type : T,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      batch: data.batch_no,\r\n      expiry: data.expiry_date,\r\n      quantity: data.current_stock,\r\n      qtytoSale: 1,\r\n      discount: 0,\r\n      cost: data.cost,\r\n      mainmrp: data.mrp,\r\n      disccost: data.mrp,\r\n      gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n      totalamt: data.mrp\r\n\r\n    }\r\n\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails])\r\n    } else {\r\n      setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n    }\r\n\r\n  }\r\n\r\n  async function DeleteProduct(Batch) {\r\n    let obj = []\r\n    obj.push(SelectedProducts.filter(function (e) {\r\n      return e.batch !== Batch\r\n    }))\r\n    obj = obj.flat()\r\n    setSelectedProducts(obj)\r\n  }\r\n  async function SubmitSaleEntry() {\r\n    let productids = [];\r\n    let proquantity = [];\r\n    let Discount = [];\r\n    let discountonmrp = [];\r\n    let mrp = [];\r\n    let GST = [];\r\n    let Totalamount = []\r\n    for (let i = 0; i < SelectedProducts.length; i++) {\r\n      productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n      proquantity.push(SelectedProducts[i].qtytoSale)\r\n      Discount.push(SelectedProducts[i].discount)\r\n      discountonmrp.push(SelectedProducts[i].disccost)\r\n      mrp.push(SelectedProducts[i].mainmrp)\r\n      GST.push(SelectedProducts[i].gst)\r\n      Totalamount.push(SelectedProducts[i].totalamt)\r\n    }\r\n    let Data = {\r\n      clinic_id: clinicid,\r\n      doctor_id: doctorid,\r\n      doctor_name: doctorname,\r\n      patient_id: patientid,\r\n      pro_id: productids,\r\n      qty: proquantity,\r\n      discount: Discount,\r\n      disc_mrp: discountonmrp,\r\n      main_mrp: mrp,\r\n      gst: GST,\r\n      total_amount: Totalamount,\r\n      grand_total: Grandtotal,\r\n      appointment_id: '',\r\n      add_to_cart: AtC,\r\n      deliver: Dc,\r\n      address_id: addressid,\r\n    }\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/sale/entry/save`, Data).then((response) => {\r\n        setload(false)\r\n        props.GETSalesList()\r\n        props.toggle_nsef()\r\n        Notiflix.Notify.success(response.data.message)\r\n        ClearForm()\r\n      }).catch(function error(e) {\r\n        console.log(e)\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Sale Entry`,\r\n      `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SubmitSaleEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  function confirmmessage2() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add to Cart`,\r\n      `Do you surely want to add the following Sale entries to the Cart  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        setAtC(1)\r\n      },\r\n      () => {\r\n        setAtC(0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    if (AtC == 1) {\r\n      SubmitSaleEntry()\r\n    }\r\n  }, [AtC])\r\n  const ClearForm = async () => {\r\n    setSelectedProducts([])\r\n    setaddressid()\r\n    setitemname()\r\n    setdoctorname()\r\n    setdoctorid()\r\n    setpatientid()\r\n    setGrandtotal()\r\n    setAtC()\r\n    setDc(0)\r\n    setsearchinput()\r\n    setpatientdata()\r\n  }\r\n\r\n  // console.log(patientid, doctorid, doctorname, Dc, itemname, itemid)\r\n  // console.log(SelectedProducts, Grandtotal)\r\n  // console.log(patientdata)\r\n  let c = 0\r\n  console.log(products, addressid, Dc, SelectedProducts)\r\n  console.log(itembyid)\r\n  console.log(itemsearch)\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0\">\r\n      <div className='position-relative mb-3'>\r\n        <h5 className='text-center text-charcoal pt-2 '>New Sale Entry</h5>\r\n        <button className='btn btn-close position-absolute end-0 top-0 me-2' disabled={load ? true : false} onClick={props.toggle_nsef}></button>\r\n      </div>\r\n      <hr className='p-0 m-0' />\r\n      <div className=\"p-0 m-0 text-center bg-seashell\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={` text-burntumber fw-bolder d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className={`radio form me-1  text-burntumber fw-bolder`} key={i} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n          ))\r\n        }\r\n      </div>\r\n      <hr className='p-0 m-0' />\r\n      <div className='my-2 text-center align-self-center'>\r\n        <div className=\" form-switch justify-content-center position-relative\">\r\n          <label className=\"form-check-label text-charcoal fw-bolder\" for=\"flexSwitchCheckDefault\">Deliver to Customer</label>\r\n          <input className=\"form-check-input ms-2 outline-none text-center\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" checked={Dc == 1 ? true : false} onChange={() => { DC() }} />\r\n          <div className={`d-${addressform} position-absolute start-0 end-0 m-5 mt-0 top-0 bg-pearl shadow rounded-2 `} style={{ zIndex: 2 }} ref={patientaddref}>\r\n            <div className='p-0 m-0 position-relative text-wrap'>\r\n              <button className='btn btn-close position-absolute end-0 p-1 m-1' onClick={() => { addressid ? setaddressform('none') : setaddressform('none') }}></button>\r\n              {\r\n                patientdata && patientdata.address && patientdata.address.length !== 0 ? (\r\n                  <div className=\"row p-0 m-0 gx-2  \">\r\n                    <h6 className='ms-1 text-burntumber fw-bold text-start'>Choose Address for Delivery</h6>\r\n                    {\r\n                      patientdata.address.map((data) => (\r\n                        <div className={`col-12 px-1 m-2 text-start card bg-${addressid == data.id ? 'lightgreen' : 'lightyellow'} text-charcoal fw-bold`} onClick={() => { addressid ? selectaddress() : selectaddress(data) }}>\r\n                          <div>Patient Name:- {data.full_name}</div>\r\n                          <div>Address:-{data.address_line1 && data.address_line1 !== null ? data.address_line1 : ''}</div>\r\n                          <div>{data.address_line2 && data.address_line2 !== null ? data.address_line2 : ''}</div>\r\n                          <div>PinCode:-{data.zip_code && data.zip_code !== null ? data.zip_code : ''}</div>\r\n                        </div>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                ) : (\r\n                  <div className='text-danger fw-bold'>Addresses not found.Update Patient Details to get Address </div>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row p-0 m-0\">\r\n        <div className=\"col-4\">\r\n          <label className=\"m-0\">Search Using Phone or Name</label>\r\n          <input type=\"text\" className=\"form-control bg-seashell selectpatient col-10 position-relative\" placeholder='Search for Patients' value={searchinput ? searchinput : ''} onFocus={() => setsearchload(true)} onChange={searchpatient} />\r\n          <div className={`col-auto d-${displaysearchlist} searchinput position-absolute rounded-2 shadow bg-pearl px-2`} style={{ width: 'max-content', zIndex: '2' }}>\r\n            {\r\n              searchload == true || searchinput == undefined ? (\r\n                <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\">Loading... </p>\r\n              ) : (\r\n                searchlist.length == 0 ? (\r\n                  <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found</p>\r\n                ) : (\r\n                  searchlist.map((data) => (\r\n                    <div className='col-auto p-0 m-0 ms-1 bg-pearl text-charcoal text-start px-1 border-bottom' style={{ width: 'max-content' }} onClick={() => { get_value(data.id, data.full_name, data) }}>{data.full_name} {data.phone_number}</div>\r\n                  )))\r\n\r\n              )\r\n\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Select Doctor</label>\r\n          <div className=\"col-12\">\r\n            <select className=\"col-10 form-control selectdoctor bg-seashell\" placeholder='Select Doctor' value={doctorid ? doctorid : ''} onChange={(e) => { setdoctorid(e.target.value); }} >\r\n              <option className='text-charcoal50'>Select Doctor</option>\r\n              {\r\n                Doclist.map((data, i) => (\r\n                  <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{' '}{'Dr.'}{' '}{data[1]}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Other Doctor</label>\r\n          <div className=\"col-12\">\r\n            <input className='col-10 form-control bg-seashell' placeholder='Other Doctors' />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"container-fluid mt-4 text-center p-0 m-0\">\r\n        <div className=\"col-12 p-0 m-0 justify-content-center\">\r\n          <h6 className='text-charcoal p-0 m-0 fw-bolder text-start ms-1'>Add Products</h6>\r\n          <hr className='p-0 m-0' />\r\n          {/* <div className=\"col-12\">\r\n              <button className='button button-seashell text-burntumber border-burntumber '>Scan to Add Product</button>\r\n            </div>\r\n            <h4 className='my-2'>OR</h4> */}\r\n          <div className=\"row p-0 m-0 my-2 justify-content-center\">\r\n\r\n\r\n            <div className=\"col-4\">\r\n              <input className='form-control bg-seashell' placeholder='Search Product by Name'\r\n                value={itemname ? itemname : ''}\r\n                onChange={(e) => {\r\n                  searchmeds(e.target.value);\r\n                  setitemname(e.target.value);\r\n                  setitemid();\r\n                  setproducts();\r\n                  stockref.current.style.display = 'none'\r\n                }} />\r\n              <div ref={medicinesref} className='position-absolute rounded-2 mt-1' style={{ Width: 'max-content', zIndex: '1' }} >\r\n                {\r\n                  itemsearch ? (\r\n                    loadsearch ? (\r\n                      <div className='rounded-2 p-1 bg-pearl'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      loadsearch == false && itemsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        <div className={`rounded-4 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                          <p className={`text-start p-0 m-0 m-1 fw-bold text-charcoal75 ms-2`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                          {\r\n                            itemsearch.map((data, i) => (\r\n                              <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-0 ps-1 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = 'block' }}>{data.display_name ? data.display_name : data.name}</div>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n              <div ref={stockref} className={`position-absolute bg-pearl scroll scroll-y align-self-center rounded-4 border border-1 p-1 d-${products && products.stock_info && products.stock_info.length > 0 ? 'block' : 'none'}`} style={{ marginLeft: '15.7rem', marginTop: '2rem', zIndex: '2', 'width': '13rem', 'height': '10rem' }}>\r\n                <p className={`text-start p-0 m-0 m-1 fw-bold text-charcoal75`} style={{ fontSize: '0.8rem' }}>{products && products.stock_info !== undefined ? products.stock_info.length : ''} Batch Stocks</p>\r\n                {\r\n                  products && products.length == 0 ? (\r\n                    <div className='bg-seashell'>Not Avaliable</div>\r\n                  ) : (\r\n\r\n                    products ? (\r\n\r\n                      products.stock_info.map((data, i) => (\r\n                        <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} border-bottom text-wrap`}\r\n                          onClick={\r\n                            () => {\r\n                              AddProducts(data);\r\n                              setitemname();\r\n                              setitemid();\r\n                              setproducts();\r\n                              setitemsearch()\r\n                            }}>\r\n                          <p className='text-center m-0 p-0 fw-bold'>{itemname}</p>\r\n                          <p className='p-0 m-0 '>BatchNo. - {data.batch_no && data.batch_no !== null ? data.batch_no : ''}</p>\r\n                          <p className='p-0 m-0 '>Stock - {data.current_stock && data.current_stock ? data.current_stock : ''}</p>\r\n                          <p className='p-0 m-0 '>Expiry Date - {data.expiry_date ? reversefunction(data.expiry_date) : ''}</p>\r\n                        </div>\r\n                      ))\r\n\r\n                    ) : (<div>Not available</div>)\r\n\r\n\r\n                  )\r\n\r\n                }\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n            <div className='col-1 text-burntumber fw-bold align-self-center'>\r\n              OR\r\n            </div>\r\n            <div className=\"col-4 \">\r\n              <input className='form-control bg-seashell border border-1 rounded-2' value={itemid ? itemid : ''} placeholder='Search Product by ID' onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = 'block' }} />\r\n              <div ref={medbyidref} className='position-absolute rounded-2 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                {\r\n                  itembyid ? (\r\n                    loadbyId ? (\r\n                      <div className='rounded-2 p-1 bg-pearl'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      loadbyId == false && itembyid.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        itembyid.map((data, i) => (\r\n                          <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 p-1 rounded-pill shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} fs-6 `}\r\n                            onClick={(e) => {\r\n                              setitemid(data.type + data.id);\r\n                              AddProducts(data)\r\n                              medbyidref.current.style.display = 'none';\r\n                            }}>{data.item_name ? data.item_name : ''}</div>\r\n                        ))\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 m-0 p-0\">\r\n          <div className=\"d-flex p-0 m-0 justify-content-between\">\r\n            <h6 className='text-charcoal p-0 m-0 fw-bolder text-start ms-1'>Product Added</h6>\r\n\r\n          </div>\r\n\r\n          <hr className='p-0 m-0' />\r\n          <div className='p-0 m-0 scroll scroll-y' style={{ height: '35vh' }}>\r\n            <table className='table p-0 m-0'>\r\n              <thead className='p-0 m-0'>\r\n                <tr className={`p-0 m-0 `}>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Item ID</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Item Name</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>BatchNo.</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Avl.Stock</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Qty To Sale</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Discount %</th>\r\n                  <th className='p-0 m-0 px-2' colSpan='4' scope='col-group'>Costing</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Total Amount</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Delete</th>\r\n                </tr>\r\n                <tr className='p-0 m-0'>\r\n                  <th className='p-0 m-0 px-2' scope='col'>MRP</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>Cost</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>GST Rate</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>Selling Cost/Unit</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                  <tbody className='p-0 m-0'>\r\n                    {\r\n                      SelectedProducts.map((data) => (\r\n                        <tr className={`p-0 m-0 align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                          <td>{data.type}{data.productid}</td>\r\n                          <td>{data.product}</td>\r\n                          <td>{data.batch}</td>\r\n                          <td>{reversefunction(data.expiry)}</td>\r\n                          <td>{data.quantity}</td>\r\n\r\n                          <td><input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell'\r\n                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                            onChange={(e) => {\r\n                              e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                              data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost)\r\n                              setSelectedProducts(prevState => [...prevState])\r\n                            }} /> </td>\r\n\r\n                          <td className='text-center p-0 m-0' style={{ Width: '0rem' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell'\r\n                              value={data.discount ? data.discount : ''}\r\n                              onChange={(e) => {\r\n                                data.discount = e.target.value;\r\n                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost))\r\n                                setSelectedProducts(prevState => [...prevState]);\r\n                              }} /> </td>\r\n                          <td>{data.mainmrp}</td>                          <td>{data.cost}</td>\r\n                          <td>{data.gst + '%'}</td>\r\n                          <td>{data.disccost}</td>\r\n                          <td>{data.totalamt}</td>\r\n                          <td><button className='btn p-0 m-0' onClick={() => { DeleteProduct(data.batch) }}><img src={process.env.PUBLIC_URL + 'images/delete.png'} style={{ width: '1.5rem' }} /></button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='p-0 m-0 position-relative'>\r\n                    <tr className='p-0 m-0'>\r\n                      <td className='p-0 m-0 position-absolute text-charcoal fw-bold start-0 end-0'>No Product Added</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-center bg-pearl align-items-center rounded-bottom'>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grandtotal}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{SelectedProducts.length}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={() => { confirmmessage() }}>Save Entry</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' disabled={load ? true : false} onClick={() => { confirmmessage2() }}>Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction NewSaleReturnentryform(props) {\r\n  const url = useContext(URL)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n  const [billname, setbillname] = useState()\r\n  const [billid, setbillid] = useState()\r\n  const [loadbills, setloadbills] = useState()\r\n  const [billsearch, setbillsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState('')\r\n  const [load, setload] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([])\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0\r\n      costing = Number(cost) * Number(qtytotreturn)\r\n      return costing.toFixed(2)\r\n    } else {\r\n      return cost\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.sale_disc_mrp,\r\n      totalcost: data.sale_disc_mrp,\r\n      saleqty: data.sale_qty,\r\n      qtytoReturn: data.sale_qty,\r\n    }\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj])\r\n      setitemname()\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n      setitemname()\r\n    }\r\n  }\r\n\r\n\r\n  const searchProduct = async () => {\r\n    medicinesref.current.style.display = 'block';\r\n    setloadbills(true)\r\n    try {\r\n      await axios.get(`${url}/sale/return/item/search/by/id?item=${itemname}&bill_id=${billid}`).then((response) => {\r\n        console.log(response)\r\n        setbillsearch([response.data.data])\r\n\r\n        setloadbills(false)\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n        setloadbills(false)\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n      setloadbills(false)\r\n    }\r\n  }\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = []\r\n    let Totalamount = []\r\n    let quantity = []\r\n\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(MedicineentriesArr[i].Itemid ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}` : '')\r\n      Totalamount.push(MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : '')\r\n      quantity.push(MedicineentriesArr[i].qtytoReturn ? MedicineentriesArr[i].qtytoReturn : '')\r\n    }\r\n\r\n    Totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n\r\n    var Data = {\r\n      bill_id: billid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal\r\n    }\r\n    console.log(Data)\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/sale/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETSaleReturns()\r\n        setMedicineentriesArr()\r\n        setbillid()\r\n        setbillname()\r\n        setload(false)\r\n        props.toggle_nref()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      console.log(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Sale ${MedicineentriesArr.length <= 1 ? 'Return ' : 'Returns'} of Bill P-${billid} `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveReturnEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  function Grand() {\r\n    let c = 0\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (\r\n        c += Number(data.totalcost)\r\n      ))\r\n    }\r\n    return c\r\n  }\r\n  console.log(billid, itemname, billsearch)\r\n  return (\r\n    <div className=\"p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0 border border-1 \">\r\n        <h5 className=\"text-center pt-3\" style={{ color: \"var(--charcoal)\" }} >New Sale Return Entry</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 p-2 me-2\" onClick={props.toggle_nref} disabled={load ? true : false} aria-label=\"Close\" ></button>\r\n        <hr />\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Bill</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder='Bill Id (Does not require initials)' value={billid ? billid : ''} onChange={(e) => { setbillid(e.target.value); setMedicineentriesArr([]); }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className='position-relative'>\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className='form-control bg-seashell' placeholder='Product Id (Require initials)' value={itemname ? itemname : ''}\r\n                  onChange={(e) => {\r\n                    billid ? setitemname(e.target.value) : Notiflix.Notify.failure('Please Add Bill id First');\r\n                    medicinesref.current.style.display = 'block';\r\n                  }} />\r\n                <div ref={medicinesref} className='position-absolute rounded-2 bg-pearl col-12' style={{ zIndex: '1' }}>\r\n                  {\r\n                    billsearch ? (\r\n                      loadbills ? (\r\n                        <div className='rounded-2 p-1'>\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"> </span> </div>\r\n                        </div>\r\n                      ) : (\r\n                        billsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                        ) : (\r\n                          billsearch.map((data, i) => (\r\n                            <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'lightyellow'} fs-6 `} name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(data.item_name);\r\n                                InsertMedicines(data);\r\n                                medicinesref.current.style.display = 'none';\r\n                              }}>{data.item_name}</div>\r\n                          ))\r\n                        )\r\n                      )\r\n                    ) : (<div className='bg-seashell'></div>)\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className='p-0 m-0 btn' onClick={searchProduct}>\r\n                <img src={process.env.PUBLIC_URL + 'images/search.png'} style={{ width: '1.8rem' }} /></button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ Height: '65vh', zIndex: '2' }}>\r\n            <p className='text-center fw-bold text-burntumber p-0 m-0  mt-2 mb-1'>Items Selected</p>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead className='text-charcoal75 fw-bold'>\r\n                <tr>\r\n                  <th className='p-0 m-0 px-1'>Item ID</th>\r\n                  <th className='p-0 m-0 px-1'>Item Name</th>\r\n                  <th className='p-0 m-0 px-1'>batch No.</th>\r\n                  <th className='p-0 m-0 px-1'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Qty</th>\r\n                  <th className='p-0 m-0 px-1'>Qty to Return</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Rate/Unit</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Rate</th>\r\n                  <th className='p-0 m-0 px-1'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                MedicineentriesArr ? (\r\n                  <tbody style={{ maxHeight: '65vh', minHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                    {\r\n                      MedicineentriesArr.map((item, _key) => (\r\n                        <tr key={_key} className=''>\r\n                          <td>{item.Type}{item.Itemid}</td>\r\n                          <td>{item.Item}</td>\r\n                          <td>{item.batchno}</td>\r\n                          <td>{reversefunction(item.expirydate)}</td>\r\n                          <td>{item.saleqty}</td>\r\n                          <td className='p-0 m-0' style={{ 'width': '0px', 'height': '0px' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2' value={item.qtytoReturn ? item.qtytoReturn : ''}\r\n                              onChange={(e) => {\r\n                                e.target.value <= item.saleqty ? item.qtytoReturn = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\")\r\n                                item.totalcost = CalculateCost(item.cost, item.saleqty, e.target.value)\r\n                                setMedicineentriesArr(prevState => [...prevState])\r\n                              }} /></td>\r\n                          <td>{item.cost}</td>\r\n                          <td>{item.totalcost}</td>\r\n                          <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr className=\"\"  >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 text-center bg-pearl  border border-1 py-3'>\r\n\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grand()}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{MedicineentriesArr ? MedicineentriesArr.length : 0}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={confirmmessage}>Save Entry</button>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let c = Number(cgst) + Number(sgst) + Number(igst)\r\n      return c * Number(qty)\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <div className=\"row p-0 m-0 position-relative\">\r\n          <h5 className='text-center text-charcoal pt-3'>{props.itembillid} Sale Return Item Details</h5>\r\n          <button type=\"button\" className=\"btn-close closebtn m-auto position-absolute end-0 me-4\" onClick={props.toggle_sridw} aria-label=\"Close\"></button>\r\n          <div className=\"col-2 d-none\">\r\n            <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n              <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n              <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n\r\n            <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className=\"row justify-content-end me-5\">\r\n        <div className=\"col-3\"><input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label></div>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '82vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Selling Cost</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Discount%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            {/* <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th> */}\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.salereturnarr.sale_medicines && props.salereturnarr.sale_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.salereturnarr.sale_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks.batch_no && item.medicine_stocks.batch_no != null ? item.medicine_stocks.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks.expiry_date && item.medicine_stocks.expiry_date != null ? reversefunction(item.medicine_stocks.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      {/* <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td> */}\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 bg-lightred'>\r\n                  <strong className='fs-5 text-center bg-lightred'>No Medicines Found</strong>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th>\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.salereturnarr.purchase_vaccines && props.salereturnarr.purchase_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.salereturnarr.purchase_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <strong className='fs-6 text-center'>No Vaccines Found</strong>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { Salesection }\r\n\r\n//  ---------------------------------------------------------------purchase------------------------------------------------------------------\r\nfunction Purchasesection(props) {\r\n  const first = [\"Purchase Orders\", \"Purchase Entry\", \"Purchase Returns\"];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return <Purchaseordersection />\r\n    }\r\n    if (_selected === 1) {\r\n      return <Purchaseentrysection function={props.func} function2={props.function} />\r\n    }\r\n    if (_selected === 2) {\r\n      return <PurchaseReturns />\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <section className='purchasesection'>\r\n\r\n        <div className=\"row p-0 m-0 mt-1 gx-3\">\r\n\r\n          <div className='row p-0 m-0'>\r\n            {\r\n              first.map((e, i) => {\r\n                return (\r\n                  <div className=\"col-auto\">\r\n                    <button className={`btn btn-sm px-4 rounded-5 text-${i === second ? \"light\" : \"dark\"} bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(i)} >{e}</button>\r\n                  </div>\r\n                )\r\n              }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid pt-4 p-0 m-0'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedScreen(second)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Purchaseentrysection(props) {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n    }\r\n  };\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [purchaseentryarr, setpurchaseentryarr] = useState([])\r\n  const [purchaseentryarrExcel, setpurchaseentryarrExcel] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [pages, setpages] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 25) + 1)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  function GETPurchaseList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true)\r\n      try {\r\n        axios.get(`${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          setpagecount(response.data.data.total_count)\r\n          setpurchaseentryarr(response.data.data.purchase_entry)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e.message)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message)\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      setLoading(true)\r\n      try {\r\n        axios.get(`${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${Data.selected * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          setpagecount(response.data.data.total_count)\r\n          setpurchaseentryarr(response.data.data.purchase_entry)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e.message)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message)\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n  function GETPurchaseListForExcel() {\r\n    setLoading(true)\r\n    try {\r\n      axios.get(`${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpurchaseentryarrExcel(response.data.data.purchase_entry)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages()\r\n  }, [channel, fromdate, todate])\r\n\r\n  useEffect(() => {\r\n    GETPurchaseList()\r\n    GETPurchaseListForExcel()\r\n  }, [pagecount])\r\n\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_npef}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Purchase</button>\r\n      <div className=\"row p-0 m-0 justify-content-between\">\r\n        <div className=\"col-3 col-md-auto col-lg-3 align-self-center text-center text-charcoal fw-bolder\">Purchase Entry <span className='text-burntumber border-burntumber px-1 rounded-2'>{pagecount}</span></div>\r\n        <div className=\"col-auto align-self-center m-1 \">\r\n          <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n            <div className=\"col-4 bg-pearl rounded-2\">\r\n              <select className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n              <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl rounded-2\">\r\n              <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center me-lg-2 \">\r\n          <ExportPurchaseEntry purchaseentryarr={purchaseentryarrExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '56vh', height: '56vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle position-sticky top-0 bg-pearl'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PE ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PO ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Channel</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Invoice No.</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Bill Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Bill Total</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Vendor</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Actions</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col' style={{ zIndex: '3' }}>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n\r\n                </body>\r\n\r\n              ) : (\r\n                purchaseentryarr && purchaseentryarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      purchaseentryarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>PE-{item.bill_id}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.purchase_order_id && item.purchase_order_id !== null ? item.purchase_order_id : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.invoice_no ? item.invoice_no : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.bill_date && item.bill_date ? reversefunction(item.bill_date) : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.bill_total && item.bill_total ? \"Rs. \" + item.bill_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button><button className=\"btn\" onClick={() => { setindex(i); toggle_peidw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? peidw : 'none'} border border-1 start-0 end-0 bg-seashell p-0 m-0`} style={{ top: '-7.5rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <PEitemdetailssection purchaseentryarr={purchaseentryarr[i]} itembillid={\"PE-\" + item.bill_id} toggle_peidw={toggle_peidw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Purchase Entries</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n          < ReactPaginate\r\n            previousLabel={'Previous'}\r\n            nextLabel={'Next'}\r\n            breakLabel={'. . .'}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={GETPurchaseList}\r\n            containerClassName={'pagination'}\r\n            pageClassName={'page-item text-charcoal'}\r\n            pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n            previousClassName={'btn button-charcoal-outline me-2'}\r\n            previousLinkClassName={'text-decoration-none text-charcoal'}\r\n            nextClassName={'btn button-charcoal-outline ms-2'}\r\n            nextLinkClassName={'text-decoration-none text-charcoal'}\r\n            breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n            breakLinkClassName={'text-decoration-none text-charcoal'}\r\n            activeClassName={'active'}\r\n          />\r\n        </div>\r\n      </div>\r\n      <section className={`newpurchaseentrysection position-absolute start-0 end-0 bg-seashell border border-1 d-${npef}`} style={{ 'height': '90vh' }}  >\r\n        {<Newpurchaseentryform toggle_npef={toggle_npef} GETPurchaseList={GETPurchaseList} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction PEitemdetailssection(props) {\r\n\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst || igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n      e = e.toFixed(2)\r\n      return e\r\n    }\r\n  }\r\n  console.log(props.purchaseentryarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <h5 className='text-center pt-3 text-charcoal'>{props.itembillid} Purchase Entry Item Details</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={props.toggle_peidw} aria-label=\"Close\"></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n            <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input type='checkbox' className='form-check-input' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total</th>\r\n\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchaseentryarr.medicines && props.purchaseentryarr.medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchaseentryarr.medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? 'm' + item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? (Number(item.SGST) * Number(item.qty)).toFixed(2) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? (Number(item.CGST) * Number(item.qty)).toFixed(2) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? (Number(item.IGST) * Number(item.qty)).toFixed(2) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className=' text-center fw-bold'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP </th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate </th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost </th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total </th>\r\n            {/* <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th> */}\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST </th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST </th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total </th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchaseentryarr.vaccines && props.purchaseentryarr.vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchaseentryarr.vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? 'v' + item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      {/* <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td> */}\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className='fw-bold text-center'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction Newpurchaseentryform(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem('ClinicId')\r\n  const ClinicList = useContext(Clinic)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n  const Tableref = useRef(null)\r\n  const [channel, setchannel] = useState()\r\n  const [po, setpo] = useState()\r\n  const [invoice, setinvoice] = useState()\r\n  const [invoicedate, setinvoicedate] = useState()\r\n  const [vendorname, setvendorname] = useState()\r\n  const [vendorid, setvendorid] = useState()\r\n  const [loadvendors, setloadvendors] = useState()\r\n  const [vendorcode, setvendorcode] = useState()\r\n  const [vendorsearch, setvendorsearch] = useState()\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState()\r\n  const [itemid, setitemid] = useState()\r\n  const [IsConsumable, setIsConsumable] = useState(0)\r\n  const [itemtype, setitemtype] = useState()\r\n  const [batchno, setbatchno] = useState()\r\n  const [expdate, setexpdate] = useState()\r\n  const [manufdate, setmanufdate] = useState()\r\n  const [mrp, setmrp] = useState()\r\n  const [rate, setrate] = useState()\r\n  const [qty, setqty] = useState()\r\n  const [freeqty, setfreeqty] = useState(0)\r\n  const [disc, setdisc] = useState(0)\r\n  const [trddisc, settrddisc] = useState(0)\r\n  const [cgst, setcgst] = useState(0)\r\n  const [cgstprcnt, setcgstprcnt] = useState(0)\r\n  const [sgst, setsgst] = useState(0)\r\n  const [sgstprcnt, setsgstprcnt] = useState(0)\r\n  const [igst, setigst] = useState(0)\r\n  const [igstprcnt, setigstprcnt] = useState(0)\r\n  const [cpu, setcpu] = useState(0)\r\n  const [totalamt, settotalamt] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState()\r\n  const [tableindex, settableindex] = useState()\r\n  const [clinicstatecode, setclinicstatecode] = useState()\r\n  const [load, setload] = useState()\r\n  const [Exceldata, setExceldata] = useState([])\r\n  const [NewMed, setNewMed] = useState('none')\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function filterclinic() {\r\n    for (let i = 0; i < ClinicList.length; i++) {\r\n      if (ClinicList[i].id == ClinicId) {\r\n        setclinicstatecode(ClinicList[i].state_code)\r\n      }\r\n    }\r\n  }\r\n  let MedicineentriesObj = {\r\n    type: '',\r\n    isconsumable: 0,\r\n    Itemid: '',\r\n    Itemname: '',\r\n    batchno: '',\r\n    expirydate: '',\r\n    manufacturingDate: '',\r\n    quantity: '',\r\n    freeQty: '',\r\n    MRP: '',\r\n    Rate: '',\r\n    Discount: '',\r\n    tradeDiscount: '',\r\n    sgst: '',\r\n    sgstpercent: '',\r\n    cgst: '',\r\n    cgstper: '',\r\n    igst: '',\r\n    igstper: '',\r\n    costperunit: '',\r\n    totalamount: ''\r\n  }\r\n  async function InsertMedicines() {\r\n    MedicineentriesObj = {\r\n      type: itemtype,\r\n      isconsumable: IsConsumable,\r\n      Itemid: itemid,\r\n      Itemname: itemname,\r\n      batchno: batchno,\r\n      expirydate: expdate,\r\n      manufacturingDate: manufdate,\r\n      MRP: mrp,\r\n      Rate: rate,\r\n      Qty: qty,\r\n      freeQty: freeqty,\r\n      Discount: disc,\r\n      tradeDiscount: trddisc,\r\n      sgstper: sgstprcnt,\r\n      sgst: sgst,\r\n      cgstper: cgstprcnt,\r\n      cgst: cgst,\r\n      igstper: igstprcnt,\r\n      igst: igst,\r\n      costperunit: cpu,\r\n      totalamount: totalamt\r\n    }\r\n    if (qty) {\r\n      if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n        setMedicineentriesArr([MedicineentriesObj])\r\n      } else {\r\n        setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please choose quantity\")\r\n    }\r\n\r\n    resetfields()\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n        let medicines = []\r\n        let vaccines = []\r\n        let items = []\r\n        medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n        vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n        items = medicines.concat(vaccines)\r\n        items = items.flat()\r\n        console.log(items)\r\n        setitemsearch(items)\r\n        setloadsearch(false)\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n\r\n  }\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true)\r\n    try {\r\n      await axios.get(`${url}/kyc/list?limit=10&offset=0&search=${search}`).then((response) => {\r\n        setvendorsearch(response.data.data)\r\n        setloadvendors(false)\r\n        if (search.length > 1) {\r\n          vendorsref.current.style.display = 'block';\r\n        } else {\r\n          vendorsref.current.style.display = 'none';\r\n        }\r\n      }).catch(\r\n        function error(e) {\r\n          Notiflix.Notify.warning(e.data.message)\r\n          setloadvendors(false)\r\n        }\r\n      )\r\n    } catch (e) {\r\n      setloadvendors(false)\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n  }\r\n  const SavePurchase = async () => {\r\n    let Is_consumable = []\r\n    let MedId = []\r\n    let medname = []\r\n    let Type = []\r\n    let batches = []\r\n    let expirydate = []\r\n    let manufacturingDate = []\r\n    let MRP = []\r\n    let Rate = []\r\n    let Discount = []\r\n    let tradeDiscount = []\r\n    let sgst = []\r\n    let sgstpercent = []\r\n    let cgst = []\r\n    let cgstpercent = []\r\n    let igst = []\r\n    let igstpercent = []\r\n    let costperunit = []\r\n    let totalamount = []\r\n    let quantity = []\r\n    let freequantity = []\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      Type.push(MedicineentriesArr[i].type ? MedicineentriesArr[i].type : '')\r\n      Is_consumable.push(MedicineentriesArr[i].isconsumable ? MedicineentriesArr[i].isconsumable : 0)\r\n      MedId.push(MedicineentriesArr[i].Itemid ? MedicineentriesArr[i].Itemid : '')\r\n      medname.push(MedicineentriesArr[i].Itemname ? MedicineentriesArr[i].Itemname : '')\r\n      batches.push(MedicineentriesArr[i].batchno ? MedicineentriesArr[i].batchno : '')\r\n      expirydate.push(MedicineentriesArr[i].expirydate ? MedicineentriesArr[i].expirydate : '')\r\n      manufacturingDate.push(MedicineentriesArr[i].manufacturingDate ? MedicineentriesArr[i].manufacturingDate : '')\r\n      MRP.push(MedicineentriesArr[i].MRP ? Number(MedicineentriesArr[i].MRP) : '')\r\n      Rate.push(MedicineentriesArr[i].Rate ? Number(MedicineentriesArr[i].Rate) : '')\r\n      Discount.push(MedicineentriesArr[i].Discount ? Number(MedicineentriesArr[i].Discount) : 0)\r\n      tradeDiscount.push(MedicineentriesArr[i].tradeDiscount ? Number(MedicineentriesArr[i].tradeDiscount) : 0)\r\n      sgst.push(MedicineentriesArr[i].sgst ? Number(MedicineentriesArr[i].sgst) : '')\r\n      sgstpercent.push(MedicineentriesArr[i].sgstper ? Number(MedicineentriesArr[i].sgstper) : 0)\r\n      cgst.push(MedicineentriesArr[i].cgst ? Number(MedicineentriesArr[i].cgst) : '')\r\n      cgstpercent.push(MedicineentriesArr[i].cgstper ? Number(MedicineentriesArr[i].cgstper) : 0)\r\n      igst.push(MedicineentriesArr[i].igst ? Number(MedicineentriesArr[i].igst) : '')\r\n      igstpercent.push(MedicineentriesArr[i].igstper ? Number(MedicineentriesArr[i].igstper) : 0)\r\n      costperunit.push(MedicineentriesArr[i].costperunit ? Number(MedicineentriesArr[i].costperunit) : '')\r\n      totalamount.push(MedicineentriesArr[i].totalamount ? Number(MedicineentriesArr[i].totalamount) : '')\r\n      quantity.push(MedicineentriesArr[i].Qty ? Number(MedicineentriesArr[i].Qty) : '')\r\n      freequantity.push(MedicineentriesArr[i].freeQty ? Number(MedicineentriesArr[i].freeQty) : 0)\r\n    }\r\n\r\n    totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n    console.log(Is_consumable, grosstotal, Type, MedId, medname, batches, expirydate, manufacturingDate, MRP, Rate, Discount, tradeDiscount, sgst, sgstpercent, cgst, cgstpercent, igst, igstpercent, costperunit, totalamount, quantity, freequantity)\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      purchase_order_id: po,\r\n      invoice_no: invoice,\r\n      bill_date: invoicedate,\r\n      clinic_id: ClinicId,\r\n      channel: channel,\r\n      is_consumable: Is_consumable,\r\n      bill_total: grosstotal,\r\n      id: MedId,\r\n      type: Type,\r\n      qty: quantity,\r\n      free_qty: freequantity,\r\n      mrp: MRP,\r\n      rate: Rate,\r\n      trade_discount: tradeDiscount,\r\n      discount: Discount,\r\n      SGST_rate: sgstpercent,\r\n      SGST: sgst,\r\n      CGST_rate: cgstpercent,\r\n      CGST: cgst,\r\n      IGST_rate: igstpercent,\r\n      IGST: igst,\r\n      cost: costperunit,\r\n      total_amount: totalamount,\r\n      expiry_date: expirydate,\r\n      mfd_date: manufacturingDate,\r\n      batch_no: batches,\r\n    }\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/purchase/entry/save`, Data).then((response) => {\r\n        setload(false)\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETPurchaseList()\r\n\r\n        setload(false)\r\n        props.toggle_npef()\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n\r\n  }\r\n  const ClearFields = () => {\r\n    setMedicineentriesArr()\r\n    setchannel()\r\n    setpo()\r\n    setinvoice()\r\n    setinvoicedate()\r\n    setvendorname()\r\n    setvendorid()\r\n  }\r\n  const resetfields = async () => {\r\n    setitemname()\r\n    setitemid()\r\n    setbatchno()\r\n    setexpdate()\r\n    setmanufdate()\r\n    setmrp()\r\n    setrate()\r\n    setqty()\r\n    setfreeqty()\r\n    setdisc()\r\n    settrddisc()\r\n    setcgst()\r\n    setsgst()\r\n    setigst()\r\n    setcgstprcnt()\r\n    setsgstprcnt()\r\n    setigstprcnt()\r\n    setcpu()\r\n    settotalamt()\r\n    setloadsearch()\r\n  }\r\n  function confirmmessage(entries, vendor) {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add total ${entries.length} purchase ${entries.length <= 1 ? 'entry' : 'entries'} of Distributor ${vendor}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SavePurchase()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  function indexing(i) {\r\n    console.log(i)\r\n    if (tableindex == i) {\r\n      settableindex(-1)\r\n      Emptytableindex()\r\n    } else {\r\n      settableindex(i)\r\n      EditTableEntry(i)\r\n    }\r\n  }\r\n  function EditTableEntry(index) {\r\n    setitemid(MedicineentriesArr[index].Itemid)\r\n    setitemname(MedicineentriesArr[index].Itemname)\r\n    setbatchno(MedicineentriesArr[index].batchno)\r\n    setexpdate(MedicineentriesArr[index].expirydate)\r\n    setmanufdate(MedicineentriesArr[index].manufacturingDate)\r\n    setmrp(MedicineentriesArr[index].MRP)\r\n    setrate(MedicineentriesArr[index].Rate)\r\n    setqty(MedicineentriesArr[index].Qty)\r\n    setfreeqty(MedicineentriesArr[index].freeQty)\r\n    setdisc(MedicineentriesArr[index].Discount)\r\n    settrddisc(MedicineentriesArr[index].tradeDiscount)\r\n    setcgst(MedicineentriesArr[index].cgst)\r\n    setcgstprcnt(MedicineentriesArr[index].cgstper)\r\n    setsgst(MedicineentriesArr[index].sgst)\r\n    setsgstprcnt(MedicineentriesArr[index].sgstper)\r\n    setigst(MedicineentriesArr[index].igst)\r\n    setigstprcnt(MedicineentriesArr[index].igstper)\r\n    setcpu(MedicineentriesArr[index].costperunit)\r\n    settotalamt(MedicineentriesArr[index].totalamount)\r\n  }\r\n  function Emptytableindex() {\r\n    setIsConsumable(0)\r\n    setitemid()\r\n    setitemname()\r\n    setbatchno()\r\n    setexpdate()\r\n    setmanufdate()\r\n    setmrp()\r\n    setrate()\r\n    setqty()\r\n    setfreeqty()\r\n    setdisc()\r\n    settrddisc()\r\n    setcgst()\r\n    setcgstprcnt()\r\n    setsgst()\r\n    setsgstprcnt()\r\n    setigst()\r\n    setigstprcnt()\r\n    setcpu()\r\n    settotalamt()\r\n\r\n  }\r\n  async function UpdateMedicines() {\r\n    for (let j = 0; j < MedicineentriesArr.length; j++) {\r\n      if (tableindex == j) {\r\n        MedicineentriesArr[j] = {\r\n          type: itemtype,\r\n          isconsumable: IsConsumable,\r\n          Itemid: itemid,\r\n          Itemname: itemname,\r\n          batchno: batchno,\r\n          expirydate: expdate,\r\n          manufacturingDate: manufdate,\r\n          MRP: mrp,\r\n          Rate: rate,\r\n          Qty: qty,\r\n          freeQty: freeqty,\r\n          Discount: disc,\r\n          tradeDiscount: trddisc,\r\n          sgstper: sgstprcnt,\r\n          sgst: sgst,\r\n          cgstper: cgstprcnt,\r\n          cgst: cgst,\r\n          igstper: igstprcnt,\r\n          igst: igst,\r\n          costperunit: cpu,\r\n          totalamount: totalamt\r\n        }\r\n        Notiflix.Notify.success(`Item Number ${tableindex + 1} Updated Successfully`)\r\n        Emptytableindex()\r\n        settableindex(-1)\r\n      }\r\n    }\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  let total = 0;\r\n  function Calculate() {\r\n    total = qty ? rate * qty : rate\r\n    // total = freeqty ? total - (rate * freeqty) : total\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    total = sgstprcnt ? Number(total) + Number((((total * sgstprcnt) / 100) + ((total * sgstprcnt) / 100))) : total\r\n    total = igstprcnt ? Number(total) + Number((total * Number(igstprcnt) / 100)) : total\r\n    total = total ? parseFloat(total).toFixed(2) : total\r\n    return total\r\n  }\r\n  let CostPerUnit = 0\r\n  function CalculateCPU() {\r\n    let newqty = Number(qty) + Number(freeqty)\r\n    CostPerUnit = Number(parseFloat(Calculate() / newqty))\r\n    // console.log(Calculate(), CostPerUnit, qty, freeqty)\r\n    CostPerUnit = parseFloat(CostPerUnit).toFixed(2)\r\n    return CostPerUnit\r\n  }\r\n  let GsT = 0\r\n  function CalculateGst() {\r\n    total = qty ? rate * qty : rate\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    GsT = sgstprcnt ? Number((((rate * sgstprcnt) / 100) + ((rate * sgstprcnt) / 100)) / 2) : GsT\r\n    GsT = parseFloat(GsT).toFixed(2)\r\n    return GsT\r\n  }\r\n  let IgsT = 0\r\n  function CalculateIGst() {\r\n    total = qty ? rate * qty : rate\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    IgsT = igstprcnt ? Number((rate * igstprcnt) / 100) : IgsT\r\n    IgsT = parseFloat(IgsT).toFixed(2)\r\n    return IgsT\r\n  }\r\n\r\n  useEffect(() => {\r\n    CalculateGst()\r\n    setsgst(CalculateGst())\r\n    setcgst(CalculateGst())\r\n  }, [sgstprcnt])\r\n\r\n  useEffect(() => {\r\n    CalculateIGst()\r\n    setigst(CalculateIGst())\r\n  }, [igstprcnt])\r\n  useEffect(() => {\r\n    settotalamt(Calculate())\r\n  }, [Calculate()])\r\n\r\n  useEffect(() => {\r\n    setcpu(CalculateCPU())\r\n  }, [CalculateCPU(), Calculate()])\r\n\r\n  const searchmedAuto = async (search) => {\r\n\r\n    await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n      let medicines = []\r\n      let vaccines = []\r\n      let items = []\r\n      medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n      vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n      items = medicines.concat(vaccines)\r\n      items = items.flat()\r\n      console.log(items)\r\n      if (items[0] && items[0].id !== undefined) {\r\n        let ID = items[0].id\r\n        return ID\r\n      } else {\r\n        return 'Please Select ID'\r\n      }\r\n\r\n      // for(let i=0;i<items.length;i++){\r\n      //     if(items[i].itemname){\r\n\r\n      //     }\r\n      // }\r\n    })\r\n\r\n\r\n  }\r\n  const CalGST = (rate, cgst) => {\r\n    let gst = 0\r\n    if (cgst && rate) {\r\n      gst = (cgst * rate) / 100\r\n      gst = Number(gst)\r\n      gst = gst.toFixed(2)\r\n      return gst\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  const Disc = (rate, dis) => {\r\n    let disrate = 0\r\n    if (rate && dis) {\r\n      disrate = (rate * dis) / 100\r\n      return disrate\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  const SubmitExcel = () => {\r\n    if (Tableref.current.files[0].type == \"application/vnd.ms-excel\") {\r\n      let SelectedFile = Tableref.current.files[0]\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(SelectedFile)\r\n      reader.onload = (e) => {\r\n        setExceldata(e.target.result)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.failure('Choose Only Excel File to Upload')\r\n    }\r\n  }\r\n  const ConvertExcel = async () => {\r\n\r\n    let e = []\r\n    if (vendorid == 2) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { 'type': 'buffer' });\r\n        const ExcelSheet = Excelfile.SheetNames[0]\r\n        const Sheet = Excelfile.Sheets[ExcelSheet]\r\n        const data = XLSX.utils.sheet_to_json(Sheet)\r\n        console.log(data)\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = data[i].EXPIRY.replace('/', '-20')\r\n          expiry = '01-' + expiry\r\n          expiry = reversefunction(expiry)\r\n          let CpU = Number(data[i].SRATE)\r\n          CpU = data[i]['CGST'] ? CpU + Number(CalGST(CpU, data[i]['CGST'])) + Number(CalGST(CpU, data[i]['SGST'])) : CpU\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS))\r\n          CpU = Number(CpU).toFixed(2)\r\n          let ITEMID = await searchmedAuto(data[i]['ITEM NAME'])\r\n          console.log(ITEMID)\r\n\r\n          MedicineentriesObj = {\r\n            type: '',\r\n            Itemid: '',\r\n            Itemname: data[i]['ITEM NAME'],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: manufdate,\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i]['F.QTY'],\r\n            Discount: '',\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i]['SGST'],\r\n            sgst: CalGST(data[i].SRATE, data[i]['SGST']),\r\n            cgstper: data[i]['CGST'],\r\n            cgst: CalGST(data[i].SRATE, data[i]['CGST']),\r\n            igstper: CalGST(data[i].SRATE, data[i]['IGST']),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: CpU * data[i].QTY.toFixed(2)\r\n          }\r\n          e.push(MedicineentriesObj)\r\n          console.log(e)\r\n        }\r\n      }\r\n    }\r\n    if (vendorid == 4 || vendorid == 3) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { 'type': 'buffer' });\r\n        const ExcelSheet = Excelfile.SheetNames[0]\r\n        const Sheet = Excelfile.Sheets[ExcelSheet]\r\n        const data = XLSX.utils.sheet_to_json(Sheet)\r\n        console.log(data)\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = '20' + data[i].EXPYEAR\r\n          expiry = expiry + (data[i].EXPMONTH < 10 ? '-' + '0' + data[i].EXPMONTH : '-' + data[i].EXPMONTH)\r\n          expiry = expiry + (data[i].EXPDAY < 10 ? '-' + '0' + data[i].EXPDAY : data[i].EXPDAY)\r\n          let CpU = Number(data[i].SRATE)\r\n          CpU = data[i]['CGST'] ? CpU + Number(CalGST(CpU, data[i]['CGST'])) + Number(CalGST(CpU, data[i]['SGST'])) : CpU\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS))\r\n          CpU = Number(CpU).toFixed(2)\r\n          // let mfddate = data[i].INVYEAR\r\n          // mfddate = mfddate + (data[i].INVMONTH < 10 ? '-' + '0' + data[i].INVMONTH : '-' + data[i].INVMONTH)\r\n          // mfddate = mfddate + (data[i].INVDAY < 10 ?  ('-' + '0' + data[i].INVDAY) :'-'+ data[i].INVDAY)\r\n          // console.log(mfddate)\r\n          MedicineentriesObj = {\r\n            type: '',\r\n            Itemid: '',\r\n            Itemname: data[i]['ITEM NAME'],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: '',\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i]['F.QTY'],\r\n            Discount: '',\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i]['SGST'],\r\n            sgst: CalGST(data[i].SRATE, data[i]['SGST']),\r\n            cgstper: data[i]['CGST'],\r\n            cgst: CalGST(data[i].SRATE, data[i]['CGST']),\r\n            igstper: CalGST(data[i].SRATE, data[i]['IGST']),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: (CpU * data[i].QTY).toFixed(2)\r\n          }\r\n          e.push(MedicineentriesObj)\r\n        }\r\n      }\r\n    }\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr(e)\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, e])\r\n    }\r\n  }\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == 'block') {\r\n      setNewMed('none')\r\n    }\r\n    if (NewMed == 'none') {\r\n      setNewMed('block')\r\n    }\r\n  }\r\n  // console.log(vendorid, vendorsearch, vendorcode, IsConsumable)\r\n  console.log(MedicineentriesArr)\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0\" style={{ zIndex: '2' }}>\r\n      <div className=\"container-fluid bg-seashell border border-2 border-top-0 border-start-0 border-end-0 \">\r\n        <div className=\"row p-0 m-0 p-2\">\r\n          <div className=\"col-1\">\r\n            <button type=\"button\" className=\"btn-close closebtn m-auto mt-2\" onClick={props.toggle_npef} aria-label=\"Close\" ></button>\r\n          </div>\r\n          <div className=\"col-8 col-md-7 col-lg-8 col-xl-8\">\r\n            <h5 className=\"text-center mt-2\"> New Purchase Entry </h5>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\" >\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button disabled={MedicineentriesArr == undefined || MedicineentriesArr && MedicineentriesArr.length == 0 ? true : false} className=\"button button-charcoal\" onClick={() => { confirmmessage(MedicineentriesArr, vendorname) }}>Save All</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <button className='button button-burntumber' onClick={ClearFields}>Clear All</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid p-0 m-0 entrydetails bg-pearl\" style={{ Height: '90vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className={`col-${vendorid ? '8' : '12'} p-0 m-0`}>\r\n\r\n            <div className=\"row p-0 m-0 align-items-center\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"\" checked={channel == 1 ? true : false} value='1' onClick={(e) => { setchannel(e.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Pharmacy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"\" checked={channel == 2 ? true : false} value='2' onClick={(e) => { setchannel(e.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Clinic</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8 p-0 m-0\">\r\n              <div className=\"row p-0 m-0 gx-2 gy-1\">\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select PO</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder=\"Enter PO\" value={po ? po : ''} onChange={(e) => { setpo(e.target.value) }} style={{ zIndex: '5' }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Vendor</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder='Search Vendors' value={vendorname ? vendorname : ''} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setvendorcode() }} />\r\n                  <div ref={vendorsref} className='position-absolute ms-2 rounded-2 bg-pearl col-2' style={{ zIndex: '5' }} >\r\n                    {\r\n                      vendorsearch ? (\r\n                        loadvendors ? (\r\n                          <div className='rounded-2 p-1 bg-pearl mt-1 border shadow' style={{ width: 'fit-content' }}>\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"></span>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          vendorsearch.length == 0 ? (\r\n                            <div className=\"bg-burntumber text-light rounded-2 p-2\">Oops! Not Avaliable</div>\r\n                          ) : (\r\n                            <div className='bg-pearl border shadow rounded-2 p-1' style={{ zIndex: '40', width: 'fit-content' }}>\r\n                              {\r\n                                vendorsearch.map((data, i) => (\r\n                                  <div style={{ cursor: 'pointer' }} className={`p-0 p-1 d-${vendorsearch == undefined || vendorsearch.length > 0 ? '' : 'none'}  bg-${((i % 2) == 0) ? 'pearl' : 'lightblue'} fs-6 `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); setvendorcode(data.state_code); filterclinic(); vendorsref.current.style.display = 'none'; }}>{data.entity_name}</div>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          )\r\n                        )\r\n                      ) : (<></>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Number</h6>\r\n                  <input type=\"text\" placeholder=\"Enter No.\" className=\"form-control ms-2 rounded-1\" value={invoice ? invoice : ''} onChange={(e) => { setinvoice(e.target.value) }} style={{ color: \"gray\" }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Date</h6>\r\n                  <input type=\"date\" className=\"form-control ms-2 rounded-1\" value={invoicedate ? invoicedate : ''} onChange={(e) => { setinvoicedate(e.target.value) }} style={{ color: \"gray\" }} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row p-0 m-0 align-items-center mt-2\">\r\n                <div className=\"col-6 col-lg-5 col-md-5 p-0 m-0 align-self-center ms-1\">\r\n                  <button className=\"button button-charcoal m-0 p-0 py-1 px-4\" onClick={ToggleNewMedicine}> <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /> Medicine </button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                      <input ref={Tableref} className='form-control w-100 p-0 m-0 px-2 py-1 rounded-2 bg-pearl' onChange={SubmitExcel} type='file' />\r\n                    </div>\r\n                    <div className=\"col-5 text-end\">\r\n                      <button className='button button-lightyellow p-0 m-0 px-3 py-1' onClick={ConvertExcel}>Submit</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\" p-0 m-0 scroll scroll-y\" style={{ maxHeight: '50vh', Height: '50vh' }}>\r\n              <table className=\"table m-0 datatable bg-pearl text-start position-relative\">\r\n                <thead className=' bg-pearl position-sticky top-0' style={{ color: 'gray', fontWeight: '600' }}>\r\n                  <tr>\r\n                    <th>Edit</th>\r\n                    <th>Item ID</th>\r\n                    <th>Item Name</th>\r\n                    {/* <th>Manuf. Date</th> */}\r\n                    <th>batch No.</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>MRP</th>\r\n                    <th>Rate</th>\r\n                    <th>Total Disc</th>\r\n                    <th>Qty.</th>\r\n                    <th>Cost</th>\r\n                    <th>Amount</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  MedicineentriesArr ? (\r\n                    <tbody style={{ Height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      {\r\n                        MedicineentriesArr.map((item, _key) => (\r\n                          <tr key={_key} className={`bg-${_key % 2 == 0 ? 'lightred50' : 'pearl'}`}>\r\n                            <td><input type='checkbox' checked={_key == tableindex ? true : false} onClick={() => { indexing(_key) }} className='bg-seashell' /></td>\r\n                            <td>{item.Itemid}</td>\r\n                            <td>{item.Itemname}</td>\r\n                            {/* <td>{reversefunction(item.manufacturingDate)}</td> */}\r\n                            <td>{item.batchno}</td>\r\n                            <td>{reversefunction(item.expirydate)}</td>\r\n                            <td>{item.MRP}</td>\r\n                            <td>{item.Rate}</td>\r\n                            <td>{Number(item.Discount) + Number(item.tradeDiscount)}</td>\r\n                            <td>{item.Qty}</td>\r\n                            <td>{item.costperunit}</td>\r\n                            <td>{item.totalamount}</td>\r\n                            <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  ) : (\r\n                    MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                      <tbody className=\"position-relative bg-pearl text-center\" style={{ height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                        <tr >\r\n                          <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className=\"position-relative bg-pearl text-center\" style={{ height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                        <tr className=\"\"  >\r\n                          <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    )\r\n\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className={`col-4 m-0 p-0 scroll scroll-y border border-1 medicineinfosection d-${vendorid ? 'block' : 'none'} bg-seashell ps-2`} id='medicineinfosection' style={{ maxHeight: '81vh', Height: '81vh' }}>\r\n            <h5 className=\"mt-2\">Add Items</h5>\r\n            <div className=\"col-12\">\r\n              <input type='checkbox' checked={IsConsumable == 0 ? false : true} className='form-check-input' onChange={() => { IsConsumable == 0 ? setIsConsumable(1) : setIsConsumable(0) }} /> <label>Is Consumable</label>\r\n              <div className=\" col-10 col-md-11\">\r\n                <div className='position-relative'>\r\n                  <label>Search Items </label>\r\n                  <input className='form-control bg-seashell' placeholder='Items' value={itemname ? itemname : ''} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemtype() }} />\r\n                  <div ref={medicinesref} className='position-absolute rounded-4 col-12' style={{ zIndex: '2' }}  >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className='rounded-2 p-1 bg-pearl'>\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span> </div>\r\n                          </div>\r\n                        ) : (\r\n                          itemsearch.length == 0 ? (\r\n                            <div className=\"bg-burntumber text-light rounded-2 p-1 text-wrap\">Oops! Not Avaliable</div>\r\n                          ) : (\r\n                            <div className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1 ? 'block' : 'none'}`}>\r\n                              <p className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 rounded-4 ps-2 `} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                              {\r\n                                itemsearch.map((data, i) => (\r\n                                  <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 text-wrap  bg-${((i % 2) == 0) ? '' : 'lightyellow'}`} name={data.id} onClick={(e) => { setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); setitemtype(data.vaccines_id ? 'v' : 'm'); medicinesref.current.style.display = 'none'; }}>{data.display_name ? data.display_name : data.name}</div>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          )\r\n                        )\r\n                      ) : (<></>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <label className=\"mb-2 pt-2\">Batch Number</label>\r\n                <input type=\"text\" max=\"10\" className=\"form-control bg-seashell batchnumber rounded-1\" id=\"inputEmail4\" placeholder=\"Batch Number\" value={batchno ? batchno : ''} onChange={(e) => setbatchno(e.target.value)} required />\r\n                <label className=\"pt-3 mb-2\">Expiry Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 expirydate\" value={expdate ? expdate : ''} onChange={(e) => { setexpdate(e.target.value) }} required />\r\n                <label className=\"pt-3 mb-2\">Manufacturing Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 manufacturingdate\" value={manufdate ? manufdate : ''} onChange={(e) => { setmanufdate(e.target.value) }} required />\r\n              </div>\r\n              <div className=\"col-12 form-group col-md-11 col-lg-11\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">MRP</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={mrp ? mrp : ''} onChange={(e) => { setmrp(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\"> Rate</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={rate ? rate : ''} onChange={(e) => { setrate(e.target.value); Calculate(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={qty ? qty : ''} onChange={(e) => { setqty(e.target.value); Calculate(rate, e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Free Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={freeqty ? freeqty : ''} onChange={(e) => { setfreeqty(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Discount &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={disc ? disc : ''} onChange={(e) => { setdisc(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5 pb-3\">\r\n                    <label className=\"mb-2\">Trade Disc. &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={trddisc ? trddisc : ''} onChange={(e) => { settrddisc(e.target.value) }} required />\r\n                  </div>\r\n                  <hr />\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'block' : 'none'}`}>\r\n                    <div className=\"row align-items-center p-0 m-0\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>SGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={sgst ? sgst : ''} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={sgstprcnt ? sgstprcnt : ''} onChange={(e) => { setsgstprcnt(e.target.value); setcgstprcnt(e.target.value); CalculateGst() }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'block' : 'none'}`}>\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2\">\r\n                        <h6>CGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" disabled={true} placeholder=\"00\" value={cgst ? cgst : sgst ? sgst : ''} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" disabled={true} placeholder=\"Rate\" value={cgstprcnt ? cgstprcnt : sgstprcnt ? sgstprcnt : ''} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'none' : 'block'}`}>\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>IGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={CalculateIGst() ? CalculateIGst() : ''} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={igstprcnt ? igstprcnt : ''} onChange={(e) => { setigstprcnt(e.target.value) }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"col-12 form-group\">\r\n                <div className=\"row p-0 m-0 g-3\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Cost/Unit</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell costunit rounded-1\" placeholder=\"00\" disabled value={CalculateCPU() ? CalculateCPU() : ''} onChange={(e) => { setcpu(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Total Amount</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell totalamount rounded-1\" placeholder=\"00\" disabled value={Calculate() ? Calculate() : ''} onChange={(e) => { settotalamt(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-6 py-3 m-auto text-center\">\r\n                {\r\n                  tableindex == -1 || tableindex == undefined ? (\r\n                    <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={InsertMedicines} > Add </button>\r\n                  ) : (\r\n                    <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={UpdateMedicines} > Update </button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`position-absolute top-0 start-0 end-0 d-${NewMed}`}>\r\n        <NewMedicine ToggleNewMedicine={ToggleNewMedicine} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nfunction Purchaseordersection() {\r\n  let cartselect = [\"Pharmacy\", \"Clinic\"];\r\n  const [cartselectindex, setcartselectindex] = useState(0);\r\n  const [displayviewcart, setdisplayviewcart] = useState(\"none\");\r\n  const [displayitemdetails, setdisplayitemdetails] = useState(\"none\");\r\n  const _displayviewcart = () => {\r\n    if (displayviewcart === \"none\") {\r\n      setdisplayviewcart(\"block\");\r\n    }\r\n    if (displayviewcart === \"block\") {\r\n      setdisplayviewcart(\"none\");\r\n    }\r\n  }\r\n  const _displayitemdetails = () => {\r\n    if (displayitemdetails === \"none\") {\r\n      setdisplayitemdetails(\"block\");\r\n    }\r\n    if (displayitemdetails === \"block\") {\r\n      setdisplayitemdetails(\"none\");\r\n    }\r\n  }\r\n  const _selectedcart = (cardindex) => {\r\n    if (cardindex === 0) {\r\n      return <table className=\"table datatable text-center\"><thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>Item Name</th>\r\n          <th>Total Qty</th>\r\n          <th>Amount</th>\r\n          <th>Last Vendor</th>\r\n          <th>Add</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n        <tbody>\r\n          {<Pharmacystocktable />}\r\n        </tbody>\r\n      </table>\r\n    }\r\n    if (cardindex === 1) {\r\n      return <div className=\"\">{cardindex}</div>\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button viewcart button-charcoal position-absolute\" onClick={_displayviewcart}><img src={process.env.PUBLIC_URL + \"/images/cartwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />View Cart</button>\r\n      <div className={`container-fluid pt-2  p-0 m-0 cartform d-${displayviewcart} w-50 border1 rounded bg-seashell position-absolute text-center`} >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">Items in Cart</h5>\r\n        </div>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={_displayviewcart}></button>\r\n        <div className=\"pt-1\">\r\n          <div className=\"row g-0 justify-content-center\">\r\n            {\r\n              cartselect.map((e, i) => {\r\n                return (\r\n                  <button className={`col-2 p-0 m-0 button text-${i === cartselectindex ? \"light\" : \"dark\"} bg-${i === cartselectindex ? \"charcoal\" : \"seashell\"} rounded-0`} onClick={(a) => setcartselectindex(i)}>{e}</button>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"scroll scroll-y\">\r\n          {_selectedcart(cartselectindex)}\r\n        </div>\r\n        <div className=\"bg-pearl rounded\">\r\n          <div className=\"row p-3 justify-content-between\">\r\n            <div className=\"col-3\">\r\n              <select className=\"form-control bg-pearl\" style={{ color: 'gray' }}>\r\n                <option selected disabled defaultValue='Select Vendor' className=\"Selectvendor\" style={{ color: 'gray' }}>Select Vendor</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button className=\"button button-charcoal\">Create New PO</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`container-fluid pt-2  p-0 m-0 itemdetailsform d-${displayitemdetails} w-50 border1 rounded bg-seashell position-absolute text-center`} >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">PO-14 Item Details</h5>\r\n        </div>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={_displayitemdetails}></button>\r\n        <div className=\"scroll scroll-y\">\r\n          {<POitemdetailsarray />}\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-lg text-center button-charcoal m-2\" onClick={_displayitemdetails}>Done</button>\r\n      </div>\r\n      <h3 className='ps-3'>Purchase Order List</h3>\r\n      <table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>PO ID</th>\r\n            <th>Channel</th>\r\n            <th>Vendor</th>\r\n            <th>PO Date</th>\r\n            <th>Created By</th>\r\n            <th>Total Items</th>\r\n            <th>Amount</th>\r\n            <th>Approval Status</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {<Purchaseorderarray itemdetails={_displayitemdetails} />}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\nfunction POitemdetailssection() {\r\n  return (\r\n    <table className=\"table datatable text-center\"><thead>\r\n      <tr>\r\n        <th>No.</th>\r\n        <th>Item Name</th>\r\n        <th>Total Qty</th>\r\n        <th>Amount</th>\r\n        <th>Last Vendor</th>\r\n        <th>Add</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n      <tbody>\r\n        {<POitemdetailsarray />}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\nfunction PurchaseReturns() {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [pridw, setpridw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [purchasereturnarr, setpurchasereturnarr] = useState([])\r\n  const [purchasereturnarrExcel, setpurchasereturnarrExcel] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [pages, setpages] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 25) + 1)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  function GETPurchaseReturns(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true)\r\n      try {\r\n        axios.get(`${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          setpurchasereturnarr(response.data.data.purchase_return)\r\n          setpagecount(response.data.data.total_count)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e.message)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message)\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      setLoading(true)\r\n      try {\r\n        axios.get(`${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${Data.selected * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n          setpurchasereturnarr(response.data.data.purchase_return)\r\n          setpagecount(response.data.data.total_count)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e.message)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message)\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n  function GETPurchaseReturnsForExcel() {\r\n    setLoading(true)\r\n    try {\r\n      axios.get(`${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpurchasereturnarrExcel(response.data.data.purchase_return)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages()\r\n  }, [channel, fromdate, todate])\r\n\r\n  useEffect(() => {\r\n    GETPurchaseReturns()\r\n    GETPurchaseReturnsForExcel()\r\n  }, [pagecount])\r\n\r\n  const toggle_pridw = () => {\r\n    if (pridw === \"none\") {\r\n      setpridw(\"block\");\r\n    }\r\n    if (pridw === \"block\") {\r\n      setpridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Return</button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between\">\r\n        <div className=\"col-3 col-md-auto col-lg-3 align-self-center text-center text-charcoal fw-bolder fs-6 \">Purchase Return <span className='text-burntumber border-burntumber px-1 rounded-2'>{pagecount}</span></div>\r\n        <div className=\"col-auto align-self-center \">\r\n          <div className=\"row border-burntumber bg-pearl fw-bolder rounded-2 text-center justify-content-center \">\r\n            <div className=\"col-4\">\r\n              <select className='p-0 m-0 border-0 text-burntumber bg-pearl fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl \">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl rounded-2 \">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center me-lg-2 \">\r\n          <ExportPurchaseReturn purchasereturnarr={purchasereturnarrExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '57vh', height: '57vh' }}>\r\n        <table className=\"table text-center p-0 m-0\">\r\n          <thead className='p-0 m-0 align-middle'>\r\n            <tr>\r\n              <th className='fw-bolder text-charcoal75' scope='col'>PR ID</th>\r\n              <th className='fw-bolder text-charcoal75' scope='col'>Distributor</th>\r\n              <th className='fw-bolder text-charcoal75' scope='col'>Return Date</th>\r\n              <th className='fw-bolder text-charcoal75' scope='col'>Return Amount</th>\r\n              <th className='fw-bolder text-charcoal75' scope='col'>Inventory</th>\r\n              <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            Loading ? (\r\n              <body className=' text-center' style={{ minHeight: '57vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                    <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n              </body>\r\n\r\n            ) : (\r\n              purchasereturnarr && purchasereturnarr.length != 0 ? (\r\n                <tbody>\r\n                  {\r\n                    purchasereturnarr.map((item, i) => (\r\n                      <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold'>PR-{item.return_no}</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold'>{item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : 'N/A'}</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold'>{item.return_date ? reversefunction(item.return_date) : ''}</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold'>{item.grand_total ? item.grand_total : 'N/A'}</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold'>\r\n                          {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                          <button className=\"btn\" onClick={() => { setindex(i); toggle_pridw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                        <td className={` position-absolute d-${i == index ? pridw : 'none'} border border-1 start-0 end-0 bg-seashell p-0 m-0`} style={{ Height: '90vh', top: '-7.15rem', zIndex: '2' }} >\r\n                          {\r\n                            i == index ? (\r\n                              <PRitemdetailssection purchasereturnarr={purchasereturnarr[i]} itembillid={\"PR-\" + item.return_no} toggle_pridw={toggle_pridw} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n\r\n                      </tr>\r\n\r\n                    ))\r\n\r\n                  }\r\n\r\n                </tbody>\r\n              ) : (\r\n                <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                  <tr className=''>\r\n                    <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Purchase Returns</td>\r\n                  </tr>\r\n                </tbody>\r\n              )\r\n            )\r\n          }\r\n\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETPurchaseReturns}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n\r\n      <section className={`newreturnentrysection position-absolute bg-seashell border border-1 start-0 end-0  d-${nref}`} style={{ 'top': '-7.15rem', Height: '90vh' }}  >\r\n        {<NewPurchaseReturnentryform toggle_nref={toggle_nref} GETPurchaseReturns={GETPurchaseReturns} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction PRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n      e = e.toFixed(2)\r\n      return e\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  console.log(props.purchasereturnarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0 position-relative\">\r\n        <h5 className='text-center text-charcoal mt-3'>{props.itembillid} Purchase Return Item Details</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2 \" onClick={props.toggle_pridw} aria-label=\"Close\"></button>\r\n        <div className=\"col-2 d-none\">\r\n          <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n\r\n            <button className={`button border-charcoal rounded-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-end me-5 \">\r\n        <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', maxHeight: '70vh' }}>\r\n\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Rate</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Cost</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total</th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.purchasereturnarr.purchase_medicines && props.purchasereturnarr.purchase_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchasereturnarr.purchase_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-charcoal fw-bold text-center'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', maxHeight: '70vh' }}>\r\n\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total</th>\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST </th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST </th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchasereturnarr.purchase_vaccines && props.purchasereturnarr.purchase_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchasereturnarr.purchase_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-center fw-bold'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction NewPurchaseReturnentryform(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem('ClinicId')\r\n  const ClinicList = useContext(Clinic)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n\r\n  const [vendorname, setvendorname] = useState()\r\n  const [vendorid, setvendorid] = useState()\r\n  const [loadvendors, setloadvendors] = useState()\r\n  const [vendorsearch, setvendorsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([])\r\n  const [load, setload] = useState()\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0\r\n      costing = Number(cost) * Number(qtytotreturn)\r\n      return costing.toFixed(2)\r\n    } else {\r\n      return costing\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.cost,\r\n      totalcost: 0,\r\n      currentstock: data.current_stock,\r\n      qtytoReturn: 0,\r\n    }\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj])\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n    }\r\n  }\r\n  const searchmeds = async () => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/purchase/item/search/by/id?item=${itemname}&distributor_id=${vendorid}`).then((response) => {\r\n        console.log(response.data.data)\r\n        setitemsearch([response.data.data])\r\n        setloadsearch(false)\r\n        if (itemname.length >= 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  }\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true)\r\n    try {\r\n      await axios.get(`${url}/kyc/list?limit=10&offset=0&search=${search}`).then((response) => {\r\n        setvendorsearch(response.data.data)\r\n        setloadvendors(false)\r\n        if (search.length > 1) {\r\n          vendorsref.current.style.display = 'block';\r\n        } else {\r\n          vendorsref.current.style.display = 'none';\r\n        }\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  }\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = []\r\n    let Totalamount = []\r\n    let quantity = []\r\n\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(MedicineentriesArr[i].Itemid ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}` : '')\r\n      Totalamount.push(MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : '')\r\n      quantity.push(MedicineentriesArr[i].qtytoReturn ? MedicineentriesArr[i].qtytoReturn : '')\r\n    }\r\n\r\n    Totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal\r\n    }\r\n    console.log(Data)\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/purchase/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETPurchaseReturns()\r\n        setMedicineentriesArr()\r\n        setvendorname()\r\n        setvendorid()\r\n        setitemname()\r\n        setload(false)\r\n        props.toggle_nref()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setload(false)\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Purchase ${MedicineentriesArr.length <= 1 ? 'Return ' : 'Returns'} of Distributor ${vendorname}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveReturnEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  function Grand() {\r\n    let c = 0\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (\r\n        c += Number(data.totalcost)\r\n      ))\r\n    }\r\n    return c\r\n  }\r\n  return (\r\n    <div className=\"newpurchaseentryform p-0 m-0\">\r\n      <div className=\" p-0 m-0\">\r\n        <div className=\"container-fluid p-0 m-0 bg-seashell position-relative  \">\r\n          <h5 className=\"text-center mt-3\" style={{ color: \"var(--charcoal)\" }} >New Purchase Return Entry</h5>\r\n          <button type=\"button\" className=\"btn-close position-absolute end-0 closebtn me-2\" onClick={props.toggle_nref} aria-label=\"Close\" ></button>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-center\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Distributor</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder='Search Vendors' value={vendorname ? vendorname : ''} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setMedicineentriesArr([]) }} />\r\n              <div ref={vendorsref} className='position-absolute ms-2 rounded-2 bg-pearl col-2' style={{ display: 'none', zIndex: '1' }} >\r\n                {\r\n                  vendorsearch ? (\r\n                    loadvendors ? (\r\n                      <div className='rounded-2 p-1'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      vendorsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        vendorsearch.map((data, i) => (\r\n                          <div style={{ cursor: 'pointer' }} className={`p-0 p-1  bg-${((i % 2) == 0) ? 'pearl' : 'lightblue'} fs-6 `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); vendorsref.current.style.display = 'none'; }}>{data.entity_name}</div>\r\n                        ))\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className='position-relative'>\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className='form-control bg-seashell' placeholder='Product Id' value={itemname ? itemname : ''}\r\n                  onChange={(e) => {\r\n                    vendorid ? setitemname(e.target.value) : Notiflix.Notify.failure('Please Add Vendor First')\r\n                  }} />\r\n                <div ref={medicinesref} className='position-absolute rounded-2 bg-pearl col-12' style={{ zIndex: '1' }}>\r\n                  {\r\n                    itemsearch ? (\r\n                      loadsearch ? (\r\n                        <div className='rounded-2 p-1'>\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"> </span> </div>\r\n                        </div>\r\n                      ) : (\r\n                        itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                        ) : (\r\n                          itemsearch.map((data, i) => (\r\n                            <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'lightyellow'} fs-6 `} name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(data.item_name);\r\n                                InsertMedicines(data);\r\n                                medicinesref.current.style.display = 'none';\r\n                              }}>{data.item_name}</div>\r\n                          ))\r\n                        )\r\n                      )\r\n                    ) : (<div className='bg-seashell'></div>)\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className='p-0 m-0 btn' onClick={searchmeds}><img src={process.env.PUBLIC_URL + 'images/search.png'} style={{ width: '1.8rem' }} /></button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ Height: '65vh' }}>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead style={{ color: 'gray', fontWeight: '600' }}>\r\n                <tr>\r\n\r\n                  <th className='p-0 m-0 px-1'>Item ID</th>\r\n                  <th className='p-0 m-0 px-1'>Item Name</th>\r\n                  <th className='p-0 m-0 px-1'>batch No.</th>\r\n                  <th className='p-0 m-0 px-1'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-1'>Avl. Stock</th>\r\n                  <th className='p-0 m-0 px-1'>Qty to Return</th>\r\n                  <th className='p-0 m-0 px-1'>Purchase Rate/Unit</th>\r\n                  <th className='p-0 m-0 px-1'>Purchase Rate</th>\r\n                  <th className='p-0 m-0 px-1'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                MedicineentriesArr ? (\r\n                  <tbody style={{ maxHeight: '65vh', minHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                    {\r\n                      MedicineentriesArr.map((item, _key) => (\r\n                        <tr key={_key} className=''>\r\n                          <td>{item.Itemid}</td>\r\n                          <td>{item.Item}</td>\r\n                          <td>{item.batchno}</td>\r\n                          <td>{reversefunction(item.expirydate)}</td>\r\n                          <td>{item.currentstock}</td>\r\n                          <td className='p-0 m-0' style={{ 'width': '0px', 'height': '0px' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2' value={item.qtytoReturn ? item.qtytoReturn : ''}\r\n                              onChange={(e) => {\r\n                                e.target.value <= item.currentstock ? item.qtytoReturn = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\")\r\n                                item.totalcost = CalculateCost(item.cost, item.currentstock, e.target.value)\r\n                                setMedicineentriesArr(prevState => [...prevState])\r\n                              }} /></td>\r\n                          <td>{item.cost}</td>\r\n                          <td>{item.totalcost}</td>\r\n                          <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr className=\"\"  >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 rounded-bottom text-center bg-pearl align-items-center border border-1 py-3'>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grand()}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{MedicineentriesArr ? MedicineentriesArr.length : 0}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={confirmmessage}>Save Entry</button>\r\n              )\r\n\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Purchasesection };\r\nexport { Purchaseordersection };\r\nexport { Purchaseentrysection };\r\nexport { POitemdetailssection };\r\nexport { PEitemdetailssection };\r\n\r\n\r\n//-------------------------------------------------------------------------Stock Info---------------------------------------------------------\r\n\r\nfunction Stocksection() {\r\n  let menu = [\"Vaccines\", \"Medicines\", \"Medicine List\"];\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return <div className=\"\"><Stockvaccinesection /></div>\r\n    }\r\n    if (_menu === 1) {\r\n      return <div className=\"\"><Stockmedicinesection /></div>\r\n    }\r\n    if (_menu === 2) {\r\n      return <div className=\"\"><MedicineList /></div>\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <section className='stocksection pt-1'>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row gx-3\">\r\n            <div className='row m-0 p-0'>\r\n              {\r\n                menu.map((e, i) => {\r\n                  return (\r\n                    <div className=\"col-auto\">\r\n                      <button className={`btn btn-sm px-4 rounded-5 text-${i === menuindex ? \"light\" : \"dark\"} bg-${i === menuindex ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setmenuindex(i)} >{e}</button>\r\n                    </div>\r\n                  )\r\n                }\r\n                )\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid pt-3'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedmenu(menuindex)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Stockvaccinesection() {\r\n  const url = useContext(URL)\r\n  const Todaydate = useContext(TodayDate)\r\n  const [pagecount, setpagecount] = useState()\r\n  const [pages, setpages] = useState()\r\n  const [vaccineslist, setvaccineslist] = useState([])\r\n  const [vaccinearr, setvaccinearr] = useState([])\r\n  const [load, setload] = useState()\r\n  const [searchname, setsearchname] = useState('')\r\n  const [index, setindex] = useState()\r\n  const [detailsform, setdetailsform] = useState('none')\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`).then((response) => {\r\n        setpagecount(response.data.data.total_count_vaccines)\r\n        setpages(Math.round(response.data.data.total_count_vaccines / 10) + 1)\r\n        setload(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n  const GetVaccines = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true)\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`).then((response) => {\r\n          console.log(response.data.data)\r\n          setvaccineslist(response.data.data.vaccines)\r\n          setload(false)\r\n        }).catch(function error(e) {\r\n          Notiflix.Notify.failure(e.message)\r\n          setload(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      }\r\n    } else {\r\n      setload(true)\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n          console.log(response.data.data)\r\n          setvaccineslist(response.data.data.vaccines)\r\n\r\n          setload(false)\r\n        }).catch(function error(e) {\r\n          Notiflix.Notify.failure(e.message)\r\n          setload(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      }\r\n    }\r\n\r\n  }\r\n  // const GetVaccines = async () => {\r\n  //   setload(true)\r\n  //   try {\r\n  //     axios.get(`${url}/stock/list?search=${searchname}&limit=${pagecount}&offset=0`).then((response) => {\r\n  //       console.log(response.data.data)\r\n  //       setvaccineslist(response.data.data.vaccines)\r\n\r\n  //       setload(false)\r\n  //     }).catch(function error(e) {\r\n  //       Notiflix.Notify.failure(e.message)\r\n  //       setload(false)\r\n  //     })\r\n  //   } catch (e) {\r\n  //     Notiflix.Notify.failure(e.message)\r\n  //     setload(false)\r\n  //   }\r\n\r\n\r\n  // }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const Get_Detailed_Data = async () => {\r\n    setvaccinearr([])\r\n    for (let i = 0; i < vaccineslist.length; i++) {\r\n      let totalcurrentstockarr = []\r\n      if (vaccineslist[i].stock_info.length == 0) {\r\n        let vaccineobj = {\r\n          id: vaccineslist[i].id,\r\n          name: vaccineslist[i].name,\r\n          manufacturer: vaccineslist[i].manufacturer,\r\n          max_stock_count: vaccineslist[i].max_stock_count,\r\n          alert_stock_count: vaccineslist[i].alert_stock_count,\r\n          min_stock_count: vaccineslist[i].min_stock_count,\r\n        }\r\n        console.log(vaccineobj)\r\n        if (vaccinearr == undefined && vaccinearr.length == 0) {\r\n          setvaccinearr(vaccineobj)\r\n        } else {\r\n          setvaccinearr(prevState => [...prevState, vaccineobj])\r\n        }\r\n\r\n      } else {\r\n        for (let j = 0; j < vaccineslist[i].stock_info.length; j++) {\r\n          totalcurrentstockarr.push(vaccineslist[i].stock_info[j].current_stock)\r\n          // let ExpireDays = Get_Diff(vaccineslist[i].stock_info[j].expiry_date)\r\n          let vaccineobj = {\r\n            id: vaccineslist[i].id,\r\n            name: vaccineslist[i].name,\r\n            manufacturer: vaccineslist[i].manufacturer,\r\n            max_stock_count: vaccineslist[i].max_stock_count,\r\n            alert_stock_count: vaccineslist[i].alert_stock_count,\r\n            min_stock_count: vaccineslist[i].min_stock_count,\r\n            CGST: vaccineslist[i].stock_info[j].CGST,\r\n            CGST_rate: vaccineslist[i].stock_info[j].CGST_rate,\r\n            IGST: vaccineslist[i].stock_info[j].IGST,\r\n            IGST_rate: vaccineslist[i].stock_info[j].IGST_rate,\r\n            SGST: vaccineslist[i].stock_info[j].SGST,\r\n            SGST_rate: vaccineslist[i].stock_info[j].SGST_rate,\r\n            batch_no: vaccineslist[i].stock_info[j].batch_no,\r\n            channel: vaccineslist[i].stock_info[j].channel,\r\n            cost: vaccineslist[i].stock_info[j].cost,\r\n            current_stock: vaccineslist[i].stock_info[j].current_stock,\r\n            discount: vaccineslist[i].stock_info[j].discount,\r\n            expiry_date: vaccineslist[i].stock_info[j].expiry_date,\r\n            free_qty: vaccineslist[i].stock_info[j].free_qty,\r\n            Batch_stock_id: vaccineslist[i].stock_info[j].id,\r\n            mfd_date: vaccineslist[i].stock_info[j].mfd_date,\r\n            mrp: vaccineslist[i].stock_info[j].mrp,\r\n            purchase_entry_id: vaccineslist[i].stock_info[j].purchase_entry_id,\r\n            qty: vaccineslist[i].stock_info[j].qty,\r\n            rate: vaccineslist[i].stock_info[j].rate,\r\n            trade_discount: vaccineslist[i].stock_info[j].trade_discount,\r\n            total_amount: vaccineslist[i].stock_info[j].total_amount,\r\n            totalstock: totalcurrentstockarr,\r\n            // Days_to_expire: ExpireDays\r\n\r\n          }\r\n          if (vaccinearr == undefined && vaccinearr.length == 0) {\r\n            setvaccinearr(vaccineobj)\r\n          } else {\r\n            setvaccinearr(prevState => [...prevState, vaccineobj])\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  // const Do_Pagination = (Data) => {\r\n  //   let limit = 10;\r\n  //   let arr = []\r\n  //   let previous = 0\r\n  //   let next = limit\r\n  //   if (Data == undefined || Data.selected == undefined) {\r\n  //     for (var i = 0; i < limit; i++) {\r\n  //       arr.push(vaccinearr[i]);\r\n  //     }\r\n  //   } else {\r\n  //     console.log(Data.selected)\r\n  //     Data.selected = Number(Data.selected)\r\n  //     previous = ((Data.selected + 1) * limit)\r\n  //     next = (Data.selected + 2 * limit)\r\n  //     for (var i = previous; i < next; i++) {\r\n  //       arr.push(vaccinearr[i]);\r\n  //     }\r\n  //     console.log(arr)\r\n  //   }\r\n\r\n  // }\r\n\r\n  const CalculateTStock = (totalarr) => {\r\n    if (totalarr !== undefined) {\r\n      let total = 0\r\n      totalarr.map((item) => (\r\n        total += Number(item)\r\n      ))\r\n      return total\r\n    }\r\n\r\n  }\r\n\r\n  const GetStatus = (totalstockarr, alertstockcount) => {\r\n    if (totalstockarr !== undefined) {\r\n      let total = 0\r\n      totalstockarr.map((item) => (\r\n        total += Number(item)\r\n      ))\r\n\r\n      if (total <= alertstockcount) {\r\n        return 1\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == 'none') {\r\n      setdetailsform('block')\r\n    }\r\n    if (detailsform === 'block') {\r\n      setdetailsform('none')\r\n      setindex()\r\n    }\r\n  }\r\n  const reversefunction2 = (date) => {\r\n    if (date) {\r\n      let newdate = []\r\n      let DATE = ''\r\n      date = date.split(\"-\").reverse()\r\n      newdate.push(date[1])\r\n      newdate.push(date[0])\r\n      newdate.push(date[2])\r\n      DATE = newdate[0] + '/' + newdate[1] + '/' + newdate[2]\r\n      return DATE\r\n    }\r\n\r\n  }\r\n  // const Get_Diff = (expiry) => {\r\n  //   // let currentdate = reversefunction(Todaydate).replaceAll('-', '/')\r\n  //   let expirydate = reversefunction2(expiry)\r\n  //   var date1 = new Date()\r\n  //   var date2 = new Date(expirydate)\r\n  //   const diffTime = Math.abs(date2 - date1);\r\n  //   const diffDays = Math.ceil(Number(diffTime) / (1000 * 60 * 60 * 24));\r\n  //   return diffDays\r\n  // }\r\n\r\n  useEffect(() => {\r\n    GetPages()\r\n    GetVaccines()\r\n    Get_Detailed_Data()\r\n  }, [pagecount, searchname])\r\n  // Do_Pagination()\r\n  useEffect(() => {\r\n    Get_Detailed_Data()\r\n\r\n  }, [vaccineslist])\r\n  // vaccinearr.sort(function (a, b) { return a.Days_to_expire - b.Days_to_expire })\r\n  console.log(vaccinearr)\r\n  return (\r\n    <div className='p-0 m-0 vaccinestockinfo'>\r\n      <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button>\r\n      <div className='position-absolute searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Vaccine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n      </div>\r\n      <div className=' text-start text-charcoal p-2 ms-5 fw-bold'>Vaccine Stock Info</div>\r\n      <div className='scroll scroll-y' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}>\r\n        <table className=\"table datatable text-start\" >\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr className='text-start'>\r\n              <th className='text-charcoal75 fw-bold'>No.</th>\r\n              <th className='text-charcoal75 fw-bold'>ID</th>\r\n              <th className='text-charcoal75 fw-bold'>Vaccine Name</th>\r\n              <th className='text-charcoal75 fw-bold'>Batch No.</th>\r\n              <th className='text-charcoal75 fw-bold'>Expiry Date</th>\r\n              <th className='text-charcoal75 fw-bold'>MRP</th>\r\n              <th className='text-charcoal75 fw-bold'>Cost/Unit</th>\r\n              <th className='text-charcoal75 fw-bold'>B.Stock</th>\r\n              <th className='text-charcoal75 fw-bold'>T.Stock</th>\r\n              {/* <th className='text-charcoal75 fw-bold text-center'>Expired in</th> */}\r\n              <th className='text-charcoal75 fw-bold text-center'>Stock Status</th>\r\n              <th className='text-charcoal75 fw-bold text-center'></th>\r\n              <th className='text-charcoal75 fw-bold text-center'>more info</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n              </tr>\r\n            ) : (\r\n              vaccinearr == undefined || vaccinearr.length == 0 ? (\r\n                <tbody className='text-center' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Vaccines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {/*  */}\r\n                  {\r\n                    vaccinearr.map((data, i) => (\r\n                      <tr className={`text-start align-middle`}>\r\n                        <td className=' text-charcoal fw-bold'>{i + 1}</td>\r\n                        <td className=' text-charcoal fw-bold'>v{data.Batch_stock_id}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.batch_no}</td>\r\n                        <td className=' text-charcoal fw-bold'>{reversefunction(data.expiry_date)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.mrp}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.cost}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.current_stock}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateTStock(data.totalstock)}</td>\r\n                        {/* <td className={`text-${data.Days_to_expire <= 60 ? 'burntumber' : 'charcoal'} fw-bold text-center`}>{data.Days_to_expire} Days</td> */}\r\n                        <td className=' text-charcoal fw-bold text-center'>\r\n                          {\r\n                            GetStatus(data.totalstock, data.alert_stock_count) == 1 ? (\r\n                              <img src={process.env.PUBLIC_URL + 'images/exclamation.png'} style={{ 'width': '1.5rem' }} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold align-items-center text-center '>\r\n                          <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                        </td>\r\n                        <td className={` bg-${index == i ? 'lightyellow' : ''} p-0 m-0 text-charcoal fw-bold text-center`}>\r\n                          <button className='btn p-0 m-0' onClick={() => { setindex(i); toggle_detailsform() }}>\r\n                            <img src={process.env.PUBLIC_URL + 'images/info.png'} style={{ 'width': '1.5rem' }} />\r\n                          </button>\r\n                        </td>\r\n                        {\r\n                          index == i ? (\r\n                            <td className={`stockdetailsfrom bg-white border border-1 col-lg-11 rounded-4 shadow p-0 col-md-11 col-sm-11 col-10 col-xl-6 d-${index == i ? detailsform : 'none'} position-absolute start-0 end-0 top-0`}>\r\n                              <VaccinesectionItemDetails toggle_detailsform={toggle_detailsform} data={vaccinearr[i]} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GetVaccines}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction Stockmedicinesection() {\r\n  const url = useContext(URL)\r\n  const [pagecount, setpagecount] = useState()\r\n  const [pages, setpages] = useState()\r\n  const [medicineslist, setmedicineslist] = useState([])\r\n  const [medicinearr, setmedicinearr] = useState([])\r\n  const [load, setload] = useState()\r\n  const [searchname, setsearchname] = useState('')\r\n  const [index, setindex] = useState()\r\n  const [detailsform, setdetailsform] = useState('none')\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`).then((response) => {\r\n        setpagecount(response.data.data.total_count_medicines)\r\n        setpages(Math.round(response.data.data.total_count_medicines / 10) + 1)\r\n        setload(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n  const GetMedicines = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true)\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`).then((response) => {\r\n          setmedicineslist(response.data.data.medicines)\r\n          setload(false)\r\n        }).catch(function error(e) {\r\n          Notiflix.Notify.failure(e.message)\r\n          setload(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      }\r\n    } else {\r\n      setload(true)\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n          setmedicineslist(response.data.data.medicines)\r\n          setload(false)\r\n        }).catch(function error(e) {\r\n          Notiflix.Notify.failure(e.message)\r\n          setload(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      }\r\n    }\r\n\r\n  }\r\n  const Get_Detailed_Data = async () => {\r\n    setmedicinearr([])\r\n    for (let i = 0; i < medicineslist.length; i++) {\r\n      let totalcurrentstockarr = []\r\n      if (medicineslist[i].stock_info.length == 0) {\r\n        let medicineobj = {\r\n          id: medicineslist[i].id ? medicineslist[i].id : '',\r\n          name: medicineslist[i].name ? medicineslist[i].name : '',\r\n          manufacturer: medicineslist[i].manufacturer ? medicineslist[i].manufacturer : '',\r\n          max_stock_count: medicineslist[i].max_stock_count ? medicineslist[i].max_stock_count : '',\r\n          alert_stock_count: medicineslist[i].alert_stock_count ? medicineslist[i].alert_stock_count : '',\r\n          min_stock_count: medicineslist[i].min_stock_count ? medicineslist[i].min_stock_count : '',\r\n        }\r\n        console.log(medicineobj)\r\n        if (medicinearr == undefined && medicinearr.length == 0) {\r\n          setmedicinearr(medicineobj)\r\n        } else {\r\n          setmedicinearr(prevState => [...prevState, medicineobj])\r\n        }\r\n\r\n      } else {\r\n        for (let j = 0; j < medicineslist[i].stock_info.length; j++) {\r\n          let ExpireDays = ''\r\n          if (medicineslist[i].stock_info[j].current_stock) {\r\n            totalcurrentstockarr.push(medicineslist[i].stock_info[j].current_stock)\r\n          } else {\r\n            totalcurrentstockarr = []\r\n          }\r\n          // if (medicineslist[i].stock_info[j].expiry_date) {\r\n          //   ExpireDays = Get_Diff(medicineslist[i].stock_info[j].expiry_date)\r\n          // } else {\r\n          //   ExpireDays = ''\r\n          // }\r\n          let medicineobj = {\r\n            id: medicineslist[i].id ? medicineslist[i].id : '',\r\n            name: medicineslist[i].name ? medicineslist[i].name : '',\r\n            manufacturer: medicineslist[i].manufacturer ? medicineslist[i].manufacturer : '',\r\n            max_stock_count: medicineslist[i].max_stock_count ? medicineslist[i].max_stock_count : '',\r\n            alert_stock_count: medicineslist[i].alert_stock_count ? medicineslist[i].alert_stock_count : '',\r\n            min_stock_count: medicineslist[i].min_stock_count ? medicineslist[i].min_stock_count : '',\r\n            CGST: medicineslist[i].stock_info[j].CGST ? medicineslist[i].stock_info[j].CGST : '',\r\n            CGST_rate: medicineslist[i].stock_info[j].CGST_rate ? medicineslist[i].stock_info[j].CGST_rate : '',\r\n            IGST: medicineslist[i].stock_info[j].IGST ? medicineslist[i].stock_info[j].IGST : '',\r\n            IGST_rate: medicineslist[i].stock_info[j].IGST_rate ? medicineslist[i].stock_info[j].IGST_rate : '',\r\n            SGST: medicineslist[i].stock_info[j].SGST ? medicineslist[i].stock_info[j].SGST : '',\r\n            SGST_rate: medicineslist[i].stock_info[j].SGST_rate ? medicineslist[i].stock_info[j].SGST_rate : '',\r\n            batch_no: medicineslist[i].stock_info[j].batch_no ? medicineslist[i].stock_info[j].batch_no : '',\r\n            channel: medicineslist[i].stock_info[j].channel ? medicineslist[i].stock_info[j].channel : '',\r\n            cost: medicineslist[i].stock_info[j].cost ? medicineslist[i].stock_info[j].cost : '',\r\n            current_stock: medicineslist[i].stock_info[j].current_stock ? medicineslist[i].stock_info[j].current_stock : '',\r\n            discount: medicineslist[i].stock_info[j].discount ? medicineslist[i].stock_info[j].discount : '',\r\n            expiry_date: medicineslist[i].stock_info[j].expiry_date ? medicineslist[i].stock_info[j].expiry_date : '',\r\n            free_qty: medicineslist[i].stock_info[j].free_qty ? medicineslist[i].stock_info[j].free_qty : '',\r\n            Batch_stock_id: medicineslist[i].stock_info[j].id ? medicineslist[i].stock_info[j].id : '',\r\n            mfd_date: medicineslist[i].stock_info[j].mfd_date ? medicineslist[i].stock_info[j].mfd_date : '',\r\n            mrp: medicineslist[i].stock_info[j].mrp ? medicineslist[i].stock_info[j].mrp : '',\r\n            purchase_entry_id: medicineslist[i].stock_info[j].purchase_entry_id ? medicineslist[i].stock_info[j].purchase_entry_id : '',\r\n            qty: medicineslist[i].stock_info[j].qty ? medicineslist[i].stock_info[j].qty : '',\r\n            rate: medicineslist[i].stock_info[j].rate ? medicineslist[i].stock_info[j].rate : '',\r\n            trade_discount: medicineslist[i].stock_info[j].trade_discount ? medicineslist[i].stock_info[j].trade_discount : '',\r\n            total_amount: medicineslist[i].stock_info[j].total_amount ? medicineslist[i].stock_info[j].total_amount : '',\r\n            totalstock: totalcurrentstockarr ? totalcurrentstockarr : '',\r\n            // Days_to_expire: ExpireDays ? ExpireDays : ''\r\n\r\n          }\r\n          console.log(medicineobj)\r\n          if (medicinearr == undefined && medicinearr.length == 0) {\r\n            setmedicinearr(medicineobj)\r\n          } else {\r\n            setmedicinearr(prevState => [...prevState, medicineobj])\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  // const reversefunction2 = (date) => {\r\n  //   if (date) {\r\n  //     let newdate = []\r\n  //     let DATE = ''\r\n  //     date = date.split(\"-\").reverse()\r\n  //     newdate.push(date[1])\r\n  //     newdate.push(date[0])\r\n  //     newdate.push(date[2])\r\n  //     DATE = newdate[0] + '/' + newdate[1] + '/' + newdate[2]\r\n  //     return DATE\r\n  //   }\r\n\r\n  // }\r\n  // const Get_Diff = (expiry) => {\r\n  //   // let currentdate = reversefunction(Todaydate).replaceAll('-', '/')\r\n  //   let expirydate = reversefunction2(expiry)\r\n  //   var date1 = new Date()\r\n  //   var date2 = new Date(expirydate)\r\n  //   const diffTime = Math.abs(date2 - date1);\r\n  //   const diffDays = Math.ceil(Number(diffTime) / (1000 * 60 * 60 * 24));\r\n  //   return diffDays\r\n  // }\r\n  const GetStatus = (totalstockarr, alertstockcount) => {\r\n    if (totalstockarr && alertstockcount) {\r\n      let total = 0\r\n      totalstockarr.map((item) => (\r\n        total += Number(item)\r\n      ))\r\n\r\n      if (total <= alertstockcount) {\r\n        return 1\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n\r\n  }\r\n  const CalculateTStock = (totalarr) => {\r\n    let total = 0\r\n    totalarr.map((item) => (\r\n      total += Number(item)\r\n    ))\r\n    return total\r\n  }\r\n  useEffect(() => {\r\n    GetPages()\r\n    GetMedicines()\r\n    Get_Detailed_Data()\r\n  }, [pagecount, searchname])\r\n\r\n  useEffect(() => {\r\n    Get_Detailed_Data()\r\n  }, [medicineslist])\r\n\r\n\r\n\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == 'none') {\r\n      setdetailsform('block')\r\n    }\r\n    if (detailsform === 'block') {\r\n      setdetailsform('none')\r\n      setindex()\r\n    }\r\n  }\r\n  console.log(medicineslist, medicinearr)\r\n  return (\r\n    <div className='p-0 m-0 vaccinestockinfo'>\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className='position-absolute searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Medicine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n      </div>\r\n      <div className='text-start ms-5 text-charcoal fw-bold p-2'>Medicine Stock Info</div>\r\n      <div className='scroll scroll-y p-0 m-0' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}>\r\n        <table className=\"table datatable text-start\" >\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th className='text-charcoal75 fw-bold'>No.</th>\r\n              <th className='text-charcoal75 fw-bold'>ID</th>\r\n              <th className='text-charcoal75 fw-bold'>Medicine Name</th>\r\n              <th className='text-charcoal75 fw-bold'>Batch No.</th>\r\n              <th className='text-charcoal75 fw-bold'>Expiry Date</th>\r\n              <th className='text-charcoal75 fw-bold'>MRP</th>\r\n              <th className='text-charcoal75 fw-bold'>Cost/Unit</th>\r\n              <th className='text-charcoal75 fw-bold'>B.Stock</th>\r\n              <th className='text-charcoal75 fw-bold'>T.Stock</th>\r\n              {/* <th className='text-charcoal75 fw-bold text-center'>Expired in</th> */}\r\n              <th className='text-charcoal75 fw-bold text-center'>Stock Status</th>\r\n              <th className='text-charcoal75 fw-bold text-center'></th>\r\n              <th className='text-charcoal75 fw-bold text-center'>more info</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                {/* <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td> */}\r\n                <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n              </tr>\r\n            ) : (\r\n              medicinearr == undefined || medicinearr.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Medicines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    medicinearr.map((data, i) => (\r\n                      <tr className={`text-start align-middle`}>\r\n                        <td className=' text-charcoal fw-bold'>{i + 1}</td>\r\n                        <td className=' text-charcoal fw-bold'>m{data.Batch_stock_id}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.batch_no}</td>\r\n                        <td className=' text-charcoal fw-bold'>{reversefunction(data.expiry_date)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.mrp}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.cost}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.current_stock}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.totalstock ? CalculateTStock(data.totalstock) : ''}</td>\r\n                        {/* <td className={`text-${data.Days_to_expire ? data.Days_to_expire :'' <= 60 ? 'burntumber' : 'charcoal'} fw-bold text-center`}>{data.Days_to_expire? data.Days_to_expire:''} Days</td> */}\r\n                        <td className=' text-charcoal fw-bold text-center'>\r\n                          {\r\n                            GetStatus(data.totalstock, data.alert_stock_count) == 1 ? (\r\n                              <img src={process.env.PUBLIC_URL + 'images/exclamation.png'} style={{ 'width': '1.5rem' }} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold align-items-center text-center '>\r\n                          <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                        </td>\r\n                        <td className={` bg-${index == i ? 'lightyellow' : ''} p-0 m-0 text-charcoal fw-bold text-center`}>\r\n                          <button className='btn p-0 m-0' onClick={() => { setindex(i); toggle_detailsform() }}>\r\n                            <img src={process.env.PUBLIC_URL + 'images/info.png'} style={{ 'width': '1.5rem' }} />\r\n                          </button>\r\n                        </td>\r\n                        {\r\n                          index == i ? (\r\n                            <td className={`stockdetailsfrom bg-white border border-1 col-lg-11 rounded-4 shadow p-0 col-md-11 col-sm-11 col-10 col-xl-6 d-${index == i ? detailsform : 'none'} position-absolute start-0 end-0 top-0`}>\r\n                              <MedicinesectionItemDetails toggle_detailsform={toggle_detailsform} data={medicinearr[i]} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GetMedicines}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nfunction VaccinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  return (\r\n    <div className=' p-0 m-0 position-relative bg-seashell rounded-4'>\r\n      <h6 className='text-center text-charcoal fw-bold pt-2'>{props.data.name}</h6>\r\n      <hr className='p-0 m-0' />\r\n      <button className='btn-close position-absolute end-0 top-0 p-1 m-1' onClick={props.toggle_detailsform}></button>\r\n      <p className='bg-pearl m-0 p-0 border rounded-2 p-2 ms-3 mt-2 align-middle' style={{ width: 'fit-content' }}>\r\n        <span className='text-charocal fw-bold p-0 m-0'>Total</span><span className='vr mx-2'></span><span className='text-charocal fw-bold p-0 m-0'>  {props.data.total_amount ? props.data.total_amount : ''}</span>\r\n      </p>\r\n      <div className='p-0 m-0 scroll'>\r\n        <table className='table text-center scroll'>\r\n          <thead>\r\n            <tr>\r\n              <th>Channel</th>\r\n              <th>Manuf.</th>\r\n              <th>Expiry</th>\r\n              <th>MRP</th>\r\n              <th>Disc%</th>\r\n              <th>Rate</th>\r\n              <th className='bg-seashell'>CGST%</th>\r\n              <th className='bg-seashell'>CGST</th>\r\n              <th className='bg-seashell'>SGST%</th>\r\n              <th className='bg-seashell'>SGST</th>\r\n              <th className='bg-seashell'>IGST%</th>\r\n              <th className='bg-seashell'>IGST</th>\r\n              <th>Cost</th>\r\n              <th>Qty</th>\r\n              <th>Total Amt.</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            <tr className='p-0 m-0 px-1'>\r\n              <td className='p-0 m-0 px-1'>{props.data.channel == 1 ? 'Pharmacy' : 'Clinic'}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.mfd_date ? reversefunction(props.data.mfd_date) : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.expiry_date ? reversefunction(props.data.expiry_date) : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.mrp ? props.data.mrp : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.discount && props.data.trade_discount ? Number(props.data.discount) + Number(props.data.trade_discount) : props.data.discount ? props.data.discount : props.data.trade_discount}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.rate ? props.data.rate : ''}</td>\r\n              <td className='p-0 m-0 px-1 bg-seashell'>{props.data.CGST ? props.data.CGST : ''}</td>\r\n              <td className='p-0 m-0 px-1 bg-seashell'>{props.data.CGST ? props.data.CGST_rate : ''}</td>\r\n              <td className='p-0 m-0 px-1 bg-seashell'>{props.data.SGST ? props.data.SGST : ''}</td>\r\n              <td className='p-0 m-0 px-1 bg-seashell'>{props.data.SGST_rate ? props.data.SGST_rate : ''}</td>\r\n              <td className='p-0 m-0 px-1 bg-seashell'>{props.data.IGST ? props.data.IGST : ''}</td>\r\n              <td className='p-0 m-0 px-1 bg-seashell'>{props.data.IGST_rate ? props.data.IGST_rate : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.cost ? props.data.cost : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.qty ? props.data.qty : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.total_amount ? props.data.total_amount : ''}</td>\r\n\r\n            </tr>\r\n\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction MedicinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  console.log(props.data)\r\n  return (\r\n    <div className=' p-0 m-0 position-relative bg-seashell rounded-4'>\r\n      <h6 className='text-center text-charcoal fw-bold pt-2'>{props.data.name}</h6>\r\n      <hr className='p-0 m-0' />\r\n      <button className='btn-close position-absolute end-0 top-0 p-1 m-1' onClick={props.toggle_detailsform}></button>\r\n      <p className='bg-pearl m-0 p-0 border rounded-2 p-2 ms-3 mt-2 align-middle' style={{ width: 'fit-content' }}>\r\n        <span className='text-charocal fw-bold p-0 m-0'>Total</span><span className='vr mx-2'></span><span className='text-charocal fw-bold p-0 m-0'>  {props.data.total_amount ? props.data.total_amount : ''}</span>\r\n      </p>\r\n      <div className='p-0 m-0 scroll'>\r\n        <table className='table text-center scroll'>\r\n          <thead>\r\n            <tr>\r\n              <th>Channel</th>\r\n              <th>Manuf.</th>\r\n              <th>Expiry</th>\r\n              <th>MRP</th>\r\n              <th>Disc%</th>\r\n              <th>Rate</th>\r\n              <th>CGST%</th>\r\n              <th>CGST</th>\r\n              <th>SGST%</th>\r\n              <th>SGST</th>\r\n              <th>IGST%</th>\r\n              <th>IGST</th>\r\n              <th>Cost</th>\r\n              <th>Qty</th>\r\n              <th>Total Amt.</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className='p-0 m-0 px-1'>\r\n              <td className='p-0 m-0 px-1'>{props.data.channel == 1 ? 'Pharmacy' : 'Clinic'}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.mfd_date ? reversefunction(props.data.mfd_date) : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.expiry_date ? reversefunction(props.data.expiry_date) : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.mrp ? props.data.mrp : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.discount && props.data.trade_discount ? Number(props.data.discount) + Number(props.data.trade_discount) : props.data.discount ? props.data.discount : props.data.trade_discount}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.rate ? props.data.rate : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.CGST ? props.data.CGST : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.CGST ? props.data.CGST_rate : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.SGST ? props.data.SGST : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.SGST_rate ? props.data.SGST_rate : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.IGST ? props.data.IGST : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.IGST_rate ? props.data.IGST_rate : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.cost ? props.data.cost : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.qty ? props.data.qty : ''}</td>\r\n              <td className='p-0 m-0 px-1'>{props.data.total_amount ? props.data.total_amount : ''}</td>\r\n\r\n            </tr>\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction MedicineList() {\r\n  const url = useContext(URL)\r\n  const [pagecount, setpagecount] = useState()\r\n  const [pages, setpages] = useState()\r\n  const [medicines, setmedicines] = useState([])\r\n  const [load, setload] = useState(false)\r\n  const [index, setindex] = useState()\r\n  const [NewMed, setNewMed] = useState('none')\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/medicine/list?limit=20&offset=0`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 20) + 1)\r\n        setload(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n  const medcinelist = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true)\r\n      try {\r\n        await axios.get(`${url}/medicine/list?limit=20&offset=0`).then((response) => {\r\n          console.log(response.data.data)\r\n          setmedicines(response.data.data.medicine)\r\n          setload(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      }\r\n    } else {\r\n      setload(true)\r\n      try {\r\n        await axios.get(`${url}/medicine/list?limit=20&offset=${Data.selected * 20}`).then((response) => {\r\n          console.log(response.data.data)\r\n          setmedicines(response.data.data.medicine)\r\n          setload(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages()\r\n    medcinelist()\r\n  }, [pagecount])\r\n\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == 'block') {\r\n      setNewMed('none')\r\n      setindex()\r\n    }\r\n    if (NewMed == 'none') {\r\n      setNewMed('block')\r\n    }\r\n  }\r\n\r\n  const DeleteMedicine = async (medid) => {\r\n    try {\r\n      await axios.post(`${url}/medicine/delete`, {\r\n        id: medid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        console.log(response.data)\r\n        medcinelist()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  const confirmmessage = (name, medid) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to delete Medicine ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        DeleteMedicine(medid)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='text-start ms-5 text-charcoal fw-bold p-2'>Medicines List</div>\r\n      <div className='scroll scroll-y p-0 m-0 overflow-scroll' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}  >\r\n        <table className=\"table datatable text-start\" >\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Update</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Display Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'> Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Salt Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>HSN Code</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Manufacturer</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n              </tr>\r\n            ) : (\r\n              medicines == undefined || medicines.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Medicines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    medicines.map((data, i) => (\r\n                      <tr className={`bg-${i % 2 == 0 ? 'seashell' : 'pearl'} align-middle text-start`}>\r\n                        <td className={`py-0 bg-${index === i ? 'lightyellow' : ''}`}>\r\n                          <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { ToggleNewMedicine(); setindex(i) }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" style={{ width: \"1.5rem\" }} key={i} />\r\n                          </button>\r\n                        </td>\r\n                        <td className=' text-charcoal fw-bold'>{data.display_name && data.display_name !== null ? data.display_name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.salt_name && data.salt_name !== null ? data.salt_name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.hsn_code && data.hsn_code !== null ? data.hsn_code : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.manufacturer && data.manufacturer !== null ? data.manufacturer : ''}</td>\r\n                        <td><button className='btn p-0 m-0' onClick={() => { confirmmessage(data.name, data.id) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} style={{ width: '1.5rem' }} /></button></td>\r\n\r\n                        {\r\n                          index == i ? (\r\n                            <td className={` text-start  d-${index == i ? NewMed : 'none'} border position-absolute start-0 end-0 top-0 bg-seashell`} style={{ padding: 0, marginTop: '-7.15rem' }}>\r\n                              <UpdateMedicine ToggleNewMedicine={ToggleNewMedicine} data={medicines[i]} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={medcinelist}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-2 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport { Stocksection };\r\n\r\n\r\n\r\n",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Pharmacy_Dsr.jsx",["572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655"],[],"import React, { useContext, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport '../../css/bootstrap.css'\r\nconst Pharmacy_Dsr = (props) => {\r\n  const Pendingsonly = useRef()\r\n  const saleentry = useRef()\r\n  const salereturn = useRef()\r\n  const pendingsrecieved = useRef()\r\n  const url = useContext(URL)\r\n  const [pendingpaid, setpendingpaid] = useState([])\r\n  const [advancepaid, setadvancepaid] = useState([])\r\n  const [SaleEntryList, setSaleEntryList] = useState([])\r\n  const [SalePendings, setSalePendings] = useState([])\r\n  const [SaleReturnList, setSaleReturnList] = useState([])\r\n  const [PendingPaid, setPendingPaid] = useState([])\r\n  const [load, setload] = useState()\r\n  const [pd, setpd] = useState('none')\r\n  const [se, setse] = useState('block')\r\n  const [pr,setpr] = useState('block')\r\n  const [prxl,setprxl]=useState('none')\r\n  const [pageindex, setpageindex] = useState()\r\n\r\n  const PharmacyList = async () => {\r\n    setload(true)\r\n    try {\r\n      await axios.get(`${url}/DSR/pharmacy?from=${props.fromdate}&to=${props.todate}`).then((response) => {\r\n        setSaleReturnList(response.data.data.pharmacy_sale_return)\r\n        setSaleEntryList(response.data.data.pharmacy)\r\n        setPendingPaid(response.data.data.pending_paid)\r\n        console.log(response)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    PharmacyList()\r\n  }, [props.fromdate, props.todate,props.clinic])\r\n\r\n\r\n\r\n\r\n  //  useEffect((>{\r\n\r\n  //  })\r\n\r\n  function payment_method_detailsForCash() {\r\n    let casharr = []\r\n    let cash = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForCard() {\r\n    let cardarr = []\r\n    let card = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForPaytm() {\r\n    let paytmarr = []\r\n    let paytm = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n  }\r\n  function payment_method_detailsForRazorPay() {\r\n    let razorpayarr = []\r\n    let razorpay = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForPoints() {\r\n    let pointsarr = []\r\n    let points = 0\r\n    if (pageindex == undefined || pageindex == 1) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n  }\r\n  function payment_method_detailsForPhonepe() {\r\n    let phonepearr = []\r\n    let phonepe = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n  }\r\n  function payment_method_detailsForWireTransfer() {\r\n    let wiretransferarr = []\r\n    let wiretransfer = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n  }\r\n  function TotalPendingPayment() {\r\n    let totalpendingarr = []\r\n    let totalpending = 0;\r\n    for (let i = 0; i < SaleEntryList.length; i++) {\r\n      for (let j = 0; j < SaleEntryList[i].pending_payments.length; j++) {\r\n        if (SaleEntryList[i].pending_payments[j].is_paid == 0) {\r\n          totalpendingarr.push(JSON.parse(SaleEntryList[i].pending_payments[j].pending_amount))\r\n        }\r\n      }\r\n    }\r\n    if (totalpendingarr.length != 0) {\r\n      totalpendingarr.forEach(item => {\r\n        totalpending += item\r\n      })\r\n      return totalpending\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function GrandTotal() {\r\n    let grandtotalarr = []\r\n    let grandtotal = 0;\r\n    if (pageindex == 0 || pageindex == undefined) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(SaleEntryList[i].grand_total))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(SaleReturnList[i].grand_total))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(PendingPaid[i].paid_amount))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n\r\n\r\n  }\r\n  function SumExtraCharges(i) {\r\n    let ExtraChargeSumarr = []\r\n    let sum = 0\r\n    SaleEntryList[i].other_charges.map((data) => (\r\n      ExtraChargeSumarr.push(data.amount)\r\n    ))\r\n\r\n    ExtraChargeSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n\r\n\r\n  function SumPendingpayments(i) {\r\n    let PendingPaymentsSumarr = []\r\n    let sum = 0\r\n\r\n    SaleEntryList[i].pending_payments.map((data) => {\r\n      if (data.is_paid == 0) {\r\n        PendingPaymentsSumarr.push(data.pending_amount)\r\n      }\r\n    })\r\n    PendingPaymentsSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date && date != null) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  function Conditionaldisplay(i) {\r\n    if (se == 'block') {\r\n      setse('none')\r\n      setpd('block')\r\n    }\r\n    if (pd == 'block') {\r\n      setse('block')\r\n      setpd('none')\r\n    }\r\n  }\r\n  // d-${Pendingsonly.current.checked = true ? Conditionaldisplay(i) : ''}\r\n  return (\r\n    <div className='Pharmacy_Dsrsection p-0 m-0'>\r\n      <div>\r\n\r\n        {/* <div className=\"col-lg-2 col-md-2 col-sm-2 col-2 CARD3 rounded-2\">\r\n            <h6 className='text-lightgreen mt-2'>Exports</h6>\r\n            <button className='button button-pearl border-bottom-lightgreen ms-lg-2'>CSV</button>\r\n            <button className='button button-pearl border-bottom-lightgreen ms-lg-2'>Excel</button>\r\n          </div> */}\r\n\r\n      </div>\r\n      <div className=''>\r\n        <ul className=\"nav nav-pills mb-3 ms-2 ms-lg-3 ms-md-1 ms-sm-1\" id=\"pills-tab\" role=\"tablist\">\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button className=\"nav-link active p-0 m-0 py-1 px-3\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\" onClick={() => { setpageindex(0) }}>Sale Entries<span class=\" p-0 m-0 ms-2 badge text-lightyellow fs-6 fw-normal\">{SaleEntryList.length}</span></button>\r\n          </li>\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button className=\"nav-link p-0 m-0 py-1 px-3\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\" onClick={() => { setpageindex(1) }}>Sale Returns<span class=\" p-0 m-0 ms-2 badge text-lightyellow fs-6 fw-normal\">{SaleReturnList.length}</span></button>\r\n          </li>\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button className=\"nav-link p-0 m-0 py-1 px-3\" id=\"pills-contact-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-contact\" type=\"button\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\" onClick={() => { setpageindex(2) }}>Pendings Recieved<span class=\" p-0 m-0 ms-2 badge text-lightyellow fs-6 fw-normal\">{PendingPaid.length}</span></button>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className=\"tab-content\" id=\"pills-tabContent\">\r\n\r\n          <div className=\"tab-pane fade show active text-start\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">\r\n            <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n            <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-lg-3  bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-3 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n\r\n            {/* onClick={()=>{setse('block')}} */}\r\n            <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 text-end'>\r\n              <span className={`d-${se}`}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Entries`}\r\n                  sheet=\"Sale Entries\"\r\n                  currentTableRef={saleentry.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 bg-pearl border-charcoal px-2 py-1 fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} />All Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </span>\r\n              <span className={`d-${pd}`}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pending Sale Entries`}\r\n                  sheet=\"Pendings\"\r\n                  currentTableRef={Pendingsonly.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 fw-bold bg-pearl border-charcoal px-2 py-1 '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} />Pending Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </span>\r\n              <input ref={Pendingsonly} type=\"checkbox\" className='form-check-input ms-2' onChange={() => { Conditionaldisplay() }} /><label className='text-burntumber fw-bold'>Show Pendings Only</label>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y mt-2 saleentries d-${se}`} ref={saleentry} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill no.</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Date</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Name</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Doctor</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Total</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Pending</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Payment Mode</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold text-center'>Payment Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5 '>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center align-middle'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start' style={{ paddingBottom: '30px' }}>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n                            <tr className={`align-middle`}>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{SumPendingpayments(i)}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td className='fw-bold text-charcoal text-center'>{SumPendingpayments(i) !== 0 ?\r\n                                <button className='button p-0 m-0 px-4 fw-bold text-charcoal rounded-pill button-lightred'>Pending</button>\r\n                                :\r\n                                <button className='button p-0 m-0 px-3 fw-bold rounded-pill text-cahrcoal button-lightgreen'>Completed</button>}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y mt-2 saleentries d-${pd}`} ref={Pendingsonly} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill no.</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Date</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Name</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Doctor</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Total</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Pending</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Payment Mode</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold text-center'>Payment Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      // d-${SumPendingpayments(i) > 0 ? '':'none'}\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n\r\n                            SumPendingpayments(i) > 0 ? (\r\n\r\n                              <tr className={``}>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{SumPendingpayments(i)}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                                <td className='fw-bold text-charcoal text-center'><button className='button p-0 m-0 px-4 fw-bold text-charcoal rounded-pill button-lightred'>Pending</button></td>\r\n                              </tr>\r\n                            ) : (<></>)\r\n\r\n\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll d-none scroll-y mt-2 saleentries d-${se}`} ref={saleentry} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    {/* <th rowspan='2' className='py-0' >Mobile</th> */}\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0 p-0 m-0'>Payment Method</th>\r\n                    <th rowspan='2' className='py-0' >Pending Amt.</th>\r\n                    <th rowspan='2' className='py-0' > Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start' style={{ paddingBottom: '30px' }}>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n                            <tr className={``}>\r\n                              <td key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                              <td>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                              {/* <td>{data && data.patient && data.patient.phone_number !== null ? data.patient.phone_number : ''}</td> */}\r\n                              <td>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                              <td>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                              <td>{SumPendingpayments(i)}</td>\r\n                              <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y d-none saleentries d-${pd}`} ref={Pendingsonly} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th rowspan='2' >Bill no.</th>\r\n                    <th rowspan='2' >Name</th>\r\n                    {/* <th rowspan='2' >Mobile</th> */}\r\n                    <th rowspan='2' >Doctor Name</th>\r\n                    <th rowspan='2' >Bill Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0'>Payment Method</th>\r\n                    <th rowspan='2' >Pending Amt.</th>\r\n                    <th rowspan='2' > Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white' scope='col'>Cash</th>\r\n                    <th className='bg-white' scope='col'>Card</th>\r\n                    <th className='bg-white' scope='col'>Paytm</th>\r\n                    <th className='bg-white' scope='col'>Phonepe</th>\r\n                    <th className='bg-white' scope='col'>Razorpay</th>\r\n                    <th className='bg-white' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      // d-${SumPendingpayments(i) > 0 ? '':'none'}\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n\r\n                            SumPendingpayments(i) > 0 ? (\r\n                              <tr className={` bg-lightred50`}>\r\n                                <td key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                                <td>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                                {/* <td>{data && data.patient && data.patient.phone_number !== null ? data.patient.phone_number : ''}</td> */}\r\n                                <td>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                                <td>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                                <td>{SumPendingpayments(i)}</td>\r\n                                <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                              </tr>\r\n                            ) : (<></>)\r\n\r\n\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Total Pending Payments</h6>\r\n                  <h5 className='fw-bold'>Rs. {TotalPendingPayment()}</h5>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                  <h5 className='fw-bold'>Rs. {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\" tabindex=\"0\">\r\n            <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n            <div className=\"row m-0 g-2 p-0 text-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-lg-3  bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-1 ms-sm-1 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-1 ms-sm-1 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-1 ms-sm-1 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-1 ms-sm-1 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-1 ms-sm-1 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-3 ms-md-1 ms-sm-1 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 text-end'>\r\n              <span>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Returns`}\r\n                  sheet=\"Sale Returns\"\r\n                  currentTableRef={salereturn.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 bg-pearl border-charcoal px-2 py-1 fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} /> Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </span>\r\n            </div>\r\n\r\n            <div className='container-fluid p-0 m-0 scroll scroll-y salereturns mt-2' ref={salereturn} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr>\r\n                    {/* <th rowspan='2' className='py-0' >SE ID</th> */}\r\n                    <th rowspan='2' className='py-0' >SR ID</th>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    {/* <th rowspan='2' className='py-0' >Mobile</th> */}\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    {/* <th colspan='7' scope='colgroup' className='border-0 py-0'>Payment Method</th> */}\r\n                    {/* <th rowspan='2' className='py-0' >Amount</th> */}\r\n                    <th rowspan='2' className='py-0' >Return Date</th>\r\n                    <th rowspan='2' className='py-0' >Returned Amount</th>\r\n                  </tr>\r\n                  {/* <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr> */}\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleReturnList && SaleReturnList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute   text-charcoal fw-bold start-0 end-0' >No Sale Returns</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleReturnList.map((data, i) => (\r\n                            <tr>\r\n                              {/* <td key={i}>{data.sale_entry_id && data.sale_entry_id !== null ? \"SE-\" + data.sale_entry_id : ''}</td> */}\r\n                              <td key={i}>{data.return_no && data.return_no !== null ? \"SR-\" + data.return_no : ''}</td>\r\n                              <td key={i}>{data.sale_entry && data.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              {/* <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.phone_number !== null ? data.sale_entry.patient.phone_number : ''}</td> */}\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              {/* <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Cash : data.sale_entry.pending_payments[0].payment_method_details && data.sale_entry.pending_payments[0].payment_method_details != null ? JSON.parse(data.sale_entry.pending_payments[0].payment_method_details).Cash:''}</td>\r\n                              <td>{data.sale_entry.pending_payments[0] !==undefined && data.sale_entry.pending_payments[0].payment_method_details !==undefined && data.sale_entry.pending_payments[0].payment_method_details != null ? JSON.parse(data.sale_entry.pending_payments[0].payment_method_details).Card :''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Points : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.grand_total !== null ? data.sale_entry.grand_total : ''}</td> */}\r\n                              <td>{data.return_date && data.return_date !== null ? reversefunction(data.return_date) : ''}</td>\r\n                              <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                              {/* : data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Card */}\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                  <h5 className='fw-bold'>Rs. {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\" tabindex=\"0\">\r\n            <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n            <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-lg-3  bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-2 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-1 px-3 ms-3 ms-md-2 ms-sm-2 ms-lg-3 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>Rs. {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n            <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 text-end'>\r\n              <span>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pendings Recieved`}\r\n                  sheet=\"Pendings Recieved\"\r\n                  currentTableRef={pendingsrecieved.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 bg-pearl border-charcoal px-2 py-1 fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} onClick={()=>{prxl('block')}} /> Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </span>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y pendingpayrecieve mt-2`} ref={pendingsrecieved} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr className='text-charcoal75 fw-bold'>\r\n                    <th className='py-0' >Bill no.</th>\r\n                    <th className='py-0' >Name</th>\r\n                    <th className='py-0' >Doctor Name</th>\r\n                    <th className='py-0' >Bill Date</th>\r\n                    <th className='py-0' >Pending Date</th>\r\n                    <th className='py-0' >Paid Date</th>\r\n                    <th className='py-0'>payment Mode</th>\r\n                    <th className='py-0'>Amt Recieved</th>\r\n                    <th className='py-0' >Total Received</th>\r\n                  </tr>\r\n               \r\n                </thead>\r\n\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n\r\n                  ) : (\r\n                    PendingPaid && PendingPaid.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Pending Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          PendingPaid.map((data, i) => (\r\n                            <tr className='text-charcoal fw-bold'>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              <td>{data.pending_date && data.pending_date !== null ? reversefunction(data.pending_date) : ''}</td>\r\n                              <td>{data.paid_date && data.paid_date !== null ? reversefunction(data.paid_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) +'' : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) +'' : ''}</td>\r\n                              <td>{data.paid_amount && data.paid_amount !== null ? data.paid_amount : ''}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n\r\n\r\n              </table>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y d-none pendingpayrecieve d-${prxl}`} ref={pendingsrecieved} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    <th rowspan='2' className='py-0' >Pending Date</th>\r\n                    <th rowspan='2' className='py-0' >Paid Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0 py-0'>Payment Method</th>\r\n                    <th rowspan='2' className='py-0' >Amount Received</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n\r\n                  ) : (\r\n                    PendingPaid && PendingPaid.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Pending Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          PendingPaid.map((data, i) => (\r\n                            <tr>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              <td>{data.pending_date && data.pending_date !== null ? reversefunction(data.pending_date) : ''}</td>\r\n                              <td>{data.paid_date && data.paid_date !== null ? reversefunction(data.paid_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                              <td>{data.paid_amount && data.paid_amount !== null ? data.paid_amount : ''}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n\r\n\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Total Amount Recieved</h6>\r\n                  <h5 className='fw-bold'>Rs. {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport { Pharmacy_Dsr }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\App.jsx",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Appointments_Dsr.jsx",["702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Doctors_Dsr.jsx",["723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742"],[],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { useContext, useRef } from 'react'\r\nimport { URL, DoctorsList } from '../../index'\r\nimport axios from 'axios'\r\n\r\nconst Doctors_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const AllDoctors = useContext(DoctorsList)\r\n  const [load, setload] = useState(false)\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [DocTimetyp1, setDocTimetyp1] = useState()\r\n  const tableref = useRef()\r\n  const Doctorwisetable = useRef()\r\n\r\n  async function GetDoctors() {\r\n    setload(true)\r\n    await axios.get(`${url}/DSR/doctors?from_date=${props.fromdate}&to_date=${props.todate}`).then((response) => {\r\n      // console.log(response)\r\n      setAppointments(response.data.data.doctor_login_list)\r\n      setload(false)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    GetDoctors()\r\n  }, [props.fromdate, props.todate])\r\n\r\n  let DoctorWisetotalarr = []\r\n\r\n  async function DoctorwiseTable() {\r\n    let total, hr, min\r\n    let doctorstime = {\r\n      id: '',\r\n      roomtype: '',\r\n      totaltime: '',\r\n      totalhours: '',\r\n      totalminutes: ''\r\n    }\r\n    for (let k = 0; k < AllDoctors.length; k++) {\r\n      DoctorWisetotalarr.push([AllDoctors[k][0], AllDoctors[k][1], [], []])\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (Appointments[i].doctor && Appointments[i].doctor.id == DoctorWisetotalarr[k][0]) {\r\n          if (Appointments[i].room && Appointments[i].room.room_type == 1) {\r\n            total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            hr = total.toString().substring(0, 2)\r\n            min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][2].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: Number(hr),\r\n              totalminutes: Number(min)\r\n            })\r\n          }\r\n          if (Appointments[i].room && Appointments[i].room_type == 2) {\r\n            let total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            let hr = total.toString().substring(0, 2)\r\n            let min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][3].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: hr,\r\n              totalminutes: min\r\n            })\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n    let Doctorwisetotalhrarr = []\r\n    let Doctorwisetotalminarr = []\r\n    if (DoctorWisetotalarr && DoctorWisetotalarr.length != 0) {\r\n      for (let i = 0; i < DoctorWisetotalarr.length; i++) {\r\n        if (DoctorWisetotalarr[i][0] == AllDoctors[i][0]) {\r\n          Doctorwisetotalhrarr.push([DoctorWisetotalarr[i][0], []])\r\n          Doctorwisetotalminarr.push([DoctorWisetotalarr[i][0], []])\r\n          if (DoctorWisetotalarr[i][2].length != 0) {\r\n            for (let g = 0; g < DoctorWisetotalarr[i][2].length; g++) {\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalhours && DoctorWisetotalarr[i][2][g].totalhours != null && DoctorWisetotalarr[i][2][g].totalhours != undefined) {\r\n                Doctorwisetotalhrarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalhours))\r\n              } else {\r\n                Doctorwisetotalhrarr[i][1].push(0)\r\n              }\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalminutes && DoctorWisetotalarr[i][2][g].totalminutes != null && DoctorWisetotalarr[i][2][g].totalminutes != undefined) {\r\n                Doctorwisetotalminarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalminutes))\r\n              } else {\r\n                Doctorwisetotalminarr[i][1].push(0)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = 0; k < Doctorwisetotalhrarr.length; k++) {\r\n        if (Doctorwisetotalhrarr[k][1].length == 0) {\r\n          Doctorwisetotalhrarr[k].push(0)\r\n        } else {\r\n          let Doctorwisehrtotal = 0\r\n          let Doctorwisemintotal = 0\r\n          for (let h = 0; h < Doctorwisetotalhrarr[k][1].length; h++) {\r\n            Doctorwisehrtotal += Number(Doctorwisetotalhrarr[k][1][h])\r\n          }\r\n          for (let a = 0; a < Doctorwisetotalminarr[k][1].length; a++) {\r\n            Doctorwisemintotal += Number(Doctorwisetotalminarr[k][1][a])\r\n\r\n          }\r\n          DoctorWisetotalarr[k].push(Doctorwisehrtotal)\r\n          DoctorWisetotalarr[k].push(Doctorwisemintotal)\r\n        }\r\n        if (DoctorWisetotalarr[k][5] >= 60) {\r\n          let remainsmin = DoctorWisetotalarr[k][5] % 60\r\n          let minhours = Math.floor(DoctorWisetotalarr[k][5] / 60)\r\n          DoctorWisetotalarr[k][5] = remainsmin\r\n          DoctorWisetotalarr[k][4] += minhours\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n    console.log(DoctorWisetotalarr)\r\n    setDocTimetyp1(DoctorWisetotalarr)\r\n  }\r\n  useEffect(() => {\r\n    async function load() {\r\n      DoctorwiseTable()\r\n    }\r\n    load()\r\n  }, [props.fromdate, props.todate, load])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function diff(start, end) {\r\n    if (start != null && end != null) {\r\n      start = start.split(\":\");\r\n      end = end.split(\":\");\r\n      var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n      var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n      var diff = endDate.getTime() - startDate.getTime();\r\n      var hours = Math.floor(diff / 1000 / 60 / 60);\r\n      diff -= hours * 1000 * 60 * 60;\r\n      var minutes = Math.floor(diff / 1000 / 60);\r\n      if (hours < 0)\r\n        hours = hours + 24;\r\n\r\n      return (hours <= 9 ? \"0\" : \"\") + hours + \"hrs\" + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins';\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n\r\n  function TotalTime() {\r\n    let hrarr = []\r\n    let minsarr = []\r\n    let totalhours, totalmins\r\n    let GetTotalHours = 0\r\n    let GetTotalMins = 0\r\n    let start, end;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      start = Appointments[i].login_time\r\n      end = Appointments[i].logout_time\r\n      if (start !== null && end !== null) {\r\n        start = start.split(\":\");\r\n        end = end.split(\":\");\r\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n        var diff = endDate.getTime() - startDate.getTime();\r\n        var hours = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hours * 1000 * 60 * 60;\r\n        var minutes = Math.floor(diff / 1000 / 60);\r\n        if (hours < 0)\r\n          hours = hours + 24;\r\n        totalhours = (hours <= 9 ? \"0\" : \"\") + hours\r\n        totalmins = (minutes <= 9 ? \"0\" : \"\") + minutes;\r\n        hrarr.push(totalhours)\r\n        minsarr.push(totalmins)\r\n      } else {\r\n        hrarr.push(0)\r\n        minsarr.push(0)\r\n      }\r\n    }\r\n    // console.log(hrarr)\r\n    // console.log(minsarr)\r\n    hrarr.forEach(item => {\r\n      GetTotalHours += Number(item)\r\n    })\r\n    minsarr.forEach(item => {\r\n      GetTotalMins += Number(item)\r\n    })\r\n\r\n    let a = Math.floor(GetTotalMins / 60)\r\n    let b = GetTotalMins % 60\r\n    // console.log(GetTotalHours,GetTotalMins,a,b)\r\n    return GetTotalHours + a + \" Hours \" + \" and \" + b + \" Minutes \"\r\n  }\r\n  return (\r\n    <div className=\"container-fluid Doctors_Dsrsection\">\r\n      <div className='py-2'>\r\n        <div className=\"container-fluid m-0 p-0\">\r\n          <div className=\"row p-0 m-0 justify-content-around\">\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 py-2 border border-1 rounded-2 shadow-sm\">\r\n              <h6 className='text-charcoa50 fw-bold'>Total Report</h6>\r\n              <div className=\"row gx-1\">\r\n                <div className=\"col-6 col-lg-6 col-md-6 p-0 m-0\">\r\n                  <button className='button-sm button-brandy'>Export CSV </button>\r\n                </div>\r\n                <div className=\"col-6 col-lg-6 col-md-6  p-0 m-0\">\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} All Doctors Login/Logout Details`}\r\n                    sheet=\"Login/Logout Details\"\r\n                    currentTableRef={tableref.current}\r\n                  >\r\n                    <button className='button-sm button-lightgreen'>Export Excel </button>\r\n\r\n                  </DownloadTableExcel>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 py-2 border border-1 rounded-2 shadow-sm\">\r\n              <h6 className='text-charcoa50 fw-bold'>Doctor Wise Report</h6>\r\n              <div className=\"row gx-1\">\r\n                <div className=\"col-6 col-lg-6 col-md-6 p-0 m-0\">\r\n                  <button className='button-sm button-brandy'>Export CSV </button>\r\n                </div>\r\n                <div className=\"col-6 col-lg-6 col-md-6 col-sm-4  p-0 m-0\">\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Doctors Summary`}\r\n                    sheet=\"Summary Report\"\r\n                    currentTableRef={Doctorwisetable.current}\r\n                  >\r\n                    <button className='button-sm button-lightgreen'>Export Excel </button>\r\n\r\n                  </DownloadTableExcel>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 border border-1 rounded-2 shadow-sm text-center align-items-center\">\r\n              {/* <h6 className='text-charcoa50 fw-bold'>Summary</h6> */}\r\n              <div className=\"col-12 col-lg-12 p-0 m-0 bg-lightyellow rounded-2 align-self-center mt-2 fw-bold\">Total Time <hr className='p-0 m-0' /> {TotalTime()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <h6 className=' p-0 m-0 text-charcoal75 fw-semibold ms-2 '>Doctors Login/Logout Details : {Appointments.length}  </h6>\r\n      <div className='container-fluid scroll scroll-y doctordsrtable' ref={tableref}>\r\n        <span className='d-none'>Total Time:{TotalTime()}</span>\r\n        <table className='table text-center border' >\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Doctors Name</th>\r\n              <th>Mobile</th>\r\n              <th>Date</th>\r\n              <th>Roomnumber</th>\r\n              <th>RoomType</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Total Hours</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tbody className='position-relative'>\r\n                <tr className='position-absolute start-0 end-0 fw-bolder text-charcoal'>Loading Doctors Login History </tr>\r\n              </tbody>\r\n            ) : (\r\n              Appointments.length == 0 || Appointments == undefined ? (\r\n                <tbody className='position-relative'>\r\n                  <tr className='position-absolute start-0 end-0 fw-bolder text-charcoal'>No Doctors Login History Found </tr>\r\n                </tbody>\r\n              ) : ( \r\n                <tbody className='border'>\r\n                  {\r\n                    Appointments.map((data, i) => (\r\n                      <tr key={i}>\r\n                        <td>{data.id ? data.id : 'N/A'}</td>\r\n                        <td>{data.doctor ? data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A' : 'N/A'}</td>\r\n                        <td>{data.doctor ? data.doctor.phone_number ? data.doctor.phone_number : 'N/A' : \"DoctorNotFound\"}</td>\r\n                        <td>{data.date && data.date != null ? reversefunction(data.date) : 'N/A'}</td>\r\n                        <td>{data.room ? data.room.room_number && data.room.room_number != null ? data.room.room_number : 'N/A' : \"RoomNotFound\"}</td>\r\n                        <td>{data.room ? data.room.room_type == 1 ? 'Consultation' : 'Procedure' : 'N/A'}</td>\r\n                        <td>{data.login_time ? tConvert(data.login_time) : 'N/A'}</td>\r\n                        <td>{data.logout_time ? tConvert(data.logout_time) : 'N/A'}</td>\r\n                        <td>{data.login_time && data.login_time != null && data.logout_time && data.logout_time != null ? diff(data.login_time, data.logout_time) : 'N/A'}</td>\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              )\r\n            )\r\n\r\n          }\r\n\r\n\r\n        </table>\r\n\r\n      </div>\r\n      <h6 className='text-charcoal75 fw-bolder p-0 m-0'>Doctor Summary</h6>\r\n      <div className='container-fluid scroll scroll-y doctordsrtable' ref={Doctorwisetable}>\r\n        <table className='table text-center'>\r\n          <thead className='position-sticky top-0 bg-pearl'>\r\n            <tr>\r\n              <th className='my-0 py-0' rowspan='2'>Doctor Id</th>\r\n              <th className='my-0 py-0' rowspan='2'>Doctor Name</th>\r\n              <th className='my-0 py-0' colspan='2' scope='colgroup'>Consultation</th>\r\n              <th className='my-0 py-0' colspan='2' scope='colgroup'>Procedure</th>\r\n            </tr>\r\n            <tr>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n              <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {\r\n            DocTimetyp1 == undefined || DocTimetyp1.length == 0 ? (\r\n              <tbody>\r\n                <tr>Loading...</tr>\r\n              </tbody>\r\n            ) : (\r\n              <tbody>{\r\n                DocTimetyp1.map((data) => (\r\n                  <tr className='border'>\r\n                    <td className='border'>{data[0]}</td>\r\n                    <td className='border'>{data[1]}</td>\r\n                    <td className='border'>{data[4]}</td>\r\n                    <td className='border'>{data[5]}</td>\r\n                    <td className='border'>0</td>\r\n                    <td className='border'>0</td>\r\n                  </tr>\r\n                ))\r\n              }\r\n              </tbody>\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Doctors_Dsr }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\index.jsx",["743","744","745","746","747","748","749","750","751","752","753","754"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\WelcomeLoader.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\livetime.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Timer.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\SearchField.jsx",["755","756"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Doctor.jsx",["757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport AmountPaid from './AmountPaid';\r\nimport { URL, TodayDate, Clinic } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport { customloading } from \"../features/notiflix/customloading\"\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/dashboard.css'\r\nimport { SelectedTimeAppointment } from '../Appointments/SelectedTimeAppointment'\r\nimport { AddSelectedDoctorSlot } from './SelectedDoctorSlot'\r\nimport { Vitalsoperation } from \"./Vitals\";\r\nimport { Payments } from \"./Payments\";\r\nimport { Bill } from \"./Bill\";\r\nimport { Bootstrap_Confirm } from '../features/Bootstrap_Confirm'\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.bundle'\r\nimport '../../../node_modules/bootstrap/js/dist/modal'\r\n\r\nfunction DoctorSchedule(props) {\r\n  //Global Variables\r\n  const url = useContext(URL)\r\n  const Date = useContext(TodayDate)\r\n  const adminid = localStorage.getItem('id')\r\n  //Use States\r\n  const [appointmentdata, setappointmentdata] = useState([]);\r\n  const [singleload, setsingleload] = useState(0)\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [tableindex, settableindex] = useState()\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [addappointmentform, setaddappointmentform] = useState('none')\r\n  const [appointmentid, setappointmentid] = useState()\r\n  const [timeindex, settimeindex] = useState()\r\n  const [addquickslots, setaddquickslots] = useState('none')\r\n  const [vitalsform, setvitalsform] = useState('none')\r\n  const [vitalindex, setvitalindex] = useState()\r\n  const [appointmentvitalslist, setappointmentvitalslist] = useState([])\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [paymentsindex, setpaymentsindex] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [d_form, setd_form] = useState()\r\n  // for UpdateAppointment\r\n  const closeappointmentform = () => {\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  };\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n\r\n  function ArraySum(arr) {\r\n    if (arr.length > 0) {\r\n      let sum = arr.reduce((accumulator, value) => {\r\n        return accumulator + value;\r\n      }, 0);\r\n      return sum;\r\n    } else {\r\n      return 0;\r\n    }\r\n\r\n  }\r\n\r\n  async function Appointmentlist() {\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?doctor_id=${props.todayDoc[props._selected][0]}&from_date=${Date}&to_date=${Date}`).then((response) => {\r\n      setappointmentdata(response.data.data);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  useEffect(() => {\r\n    Appointmentlist();\r\n  }, [props._selected]);\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let array = [[1, 'Pending', 'lightred'], [2, 'Booked', 'lightblue'], [3, 'Cancelled', 'lightred'], [4, 'QR Generated', 'light'], [5, 'Checked_in', 'brandy'], [6, 'Vitals Done', 'lightred'], [7, 'In_apppointment', 'lightyellow'], [8, 'Payment done', 'lightgreen'], [9, 'Unattained', 'lightyellow'], [10, 'Completed', 'lightgreen']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n\r\n\r\n\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Appointmentlist()\r\n          Loading.remove()\r\n          props.fetchapi()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n\r\n\r\n  const openAddApppointmentform = () => {\r\n    setaddappointmentform('block')\r\n  }\r\n  const closeAddAppointmentform = () => {\r\n    setaddappointmentform('none')\r\n    settimeindex()\r\n  }\r\n  function OpenAddQuickSlots() {\r\n    if (addquickslots === 'none') {\r\n      setaddquickslots('block')\r\n    }\r\n  }\r\n  function CloseAddQuickSlots() {\r\n    if (addquickslots === 'block') {\r\n      setaddquickslots('none')\r\n    }\r\n  }\r\n\r\n  //Vitals Section\r\n  function OpenVitals() {\r\n    if (vitalsform === 'none') {\r\n      setvitalsform('block')\r\n    }\r\n  }\r\n  function CloseVitals() {\r\n    if (vitalsform === 'block') {\r\n      setvitalsform('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n\r\n  async function GetAppointmentVitals(id) {\r\n    setloadvitals(true)\r\n    await axios.get(`${url}/appointment/vitals/list?appointment_id=${id}`).then((response) => {\r\n      setappointmentvitalslist(response.data.data.vitals)\r\n      setloadvitals(false)\r\n    })\r\n  }\r\n  //Vitals Section \r\n\r\n  //Send Notification\r\n  async function SendNotifcation(name, id) {\r\n    Notiflix.Loading.dots('Sending', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.3rem'\r\n    })\r\n    try {\r\n      await axios.post(`${url}/appointment/call/in`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message.slice(0, -1) + ' to ' + name)\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n\r\n  }\r\n  const confirmmessage = (name, id) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Call Patient `,\r\n      `Do you surely want to call ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SendNotifcation(name, id)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  //Send Notification\r\n\r\n  //Bill\r\n  function OpenBillForm() {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n  }\r\n  function CloseBillForm() {\r\n    if (billform == 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function OpenPaymentsForm() {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n  }\r\n  function ClosePaymentsForm() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsindex()\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  // const Modal = () => {\r\n  //   modalindex\r\n  // }\r\n  https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/swift/pdf\r\n  return (\r\n    <>\r\n      <section id=\"doctorscheduledata\">\r\n        <section className=\"timeslotsection\">\r\n          <div className=\"container-fluid p-0 m-0 \">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\" col-12 p-0 m-0 align-items-center\">\r\n                <div className=\"d-flex align-items-center p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <h5 className=\"p-0 m-0 ms-1 text-charcoal75 my-2 fw-bolder\">Time Slots Avaliable</h5>\r\n                  </div>\r\n                  <div className=\"col-2 ms-2\">\r\n                    <button className=\"btn m-0 p-0\">\r\n                      <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} style={{ width: \"1.5rem\" }} alt=\"displaying_image\" onClick={OpenAddQuickSlots} />\r\n                    </button>\r\n                    <div className={`d-${addquickslots} rounded-2 bg-seashell shadow col-lg-6 col-md-8 col-sm-12 col-12 col-xl-4 position-absolute end-0 start-0 top-0 m-auto mt-3`} style={{ zIndex: '3010', minWidth: '10rem', maxWidth: '30rem' }}>\r\n                      <AddSelectedDoctorSlot CloseAddQuickSlots={CloseAddQuickSlots} fetchapi={props.fetchapi} DocClinic={props.DocClinic} DoctorID={props.DoctorID} DoctorName={props.DoctorName} />\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"scroll timeslots col-12 justify-content-around\">\r\n              {\r\n                props.todayDoc[props._selected][3].map((data, i) => (\r\n                  data[1] == 0 ? (\r\n                    <>\r\n                      <button className={`button-sm button-${timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1`} onClick={(e) => { openAddApppointmentform(); settimeindex(i) }} key={i}>{tConvert(data[0])}</button>\r\n                      {\r\n                        timeindex == i ? (\r\n                          <section className={`d-${timeindex == i ? addappointmentform : 'none'} col-lg-8 col-md-8 col-sm-8 col-6 col-xl-6 shadow appointmentinfosection position-absolute m-auto start-0 end-0 bg-seashell rounded-4 border border-1`} style={{ zIndex: 4, top: '-1rem' }}>\r\n                            <SelectedTimeAppointment fetchapi={props.fetchapi} closeAddAppointmentform={closeAddAppointmentform} DocClinic={props.DocClinic} DoctorID={props.DoctorID} DoctorName={props.DoctorName} timeindex={timeindex} selectedtime={data[0]} selectedtimeID={data[2]} />\r\n                          </section>\r\n                        ) : (\r\n                          <></>\r\n                        )\r\n                      }\r\n\r\n                    </>\r\n                  ) : (\r\n                    <button disabled className=\"button button-sm button-charcoal50-outline m-1\" key={i}>{tConvert(data[0])}</button>\r\n                  )\r\n\r\n                ))\r\n\r\n              }\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"allappointmentsection p-0 m-0\">\r\n          <div className=\"col-auto m-0 p-0 align-items-center\">\r\n            <h5 className=\"p-0  ms-1 text-charcoal75 fw-bold my-2\">Appointments</h5>\r\n          </div>\r\n          <div className=\" scroll scroll-y align-content-center align-items-center\" style={{ minHeight: '30vh', maxHeight: '42vh', Height: '42vh' }}>\r\n            <table className=\"table datatable text-center\">\r\n              <thead className=\"p-0 m-0 px-2 bg-pearl\" style={{ 'zIndex': '4' }}>\r\n                <tr className=\"p-0 m-0 position-sticky top-0\">\r\n                  <th className=\"border-0 bg-pearl\" key={0}>Update</th>\r\n                  <th className=\"border-0 bg-pearl\" key={1}>Status</th>\r\n                  <th className=\"border-0 bg-pearl\" key={2}>Patient Name</th>\r\n                  <th className=\"border-0 bg-pearl\" key={3}>Phone Number</th>\r\n                  <th className=\"border-0 bg-pearl\" key={4}>Time</th>\r\n                  <th className=\"border-0 bg-pearl\" key={5}>Total Amount</th>\r\n                  <th className=\"border-0 bg-pearl\" key={6}>Amount Status</th>\r\n                  <th className=\"border-0 bg-pearl\" key={7}>Vitals</th>\r\n                  <th className=\"border-0 bg-pearl\" key={8}>Bill</th>\r\n                  <th className=\"border-0 bg-pearl\" key={9}>Payments</th>\r\n                  <th className=\"border-0 bg-pearl\" key={10}>more</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              {\r\n                singleload == 0 ? (\r\n                  <tbody className=\"scroll scroll-y\"  >\r\n                    <tr className=' position-relative text-burntumber fs-3 mt-1 text-center m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-burntumber fs-3 mt-1 text-center'>\r\n\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>\r\n                    {\r\n                      appointmentdata.length == 0 ? (\r\n                        <tr><button className=\"text-center position-absolute border-0 text-charcoal fw-bold px-5 start-0 end-0 mx-auto\">No Appointments Found</button></tr>\r\n                      ) : (\r\n                        appointmentdata.map((data, i) => (\r\n                          <tr className='align-middle'>\r\n                            <td className={`py-0 bg-${tableindex === i ? 'lightyellow' : ''}`}>\r\n                              <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { openapppointmentform(); settableindex(i); setappointmentid(data.id) }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" style={{ width: \"1.5rem\" }} key={i} />\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"\">\r\n                              <select className={` fw-bolder rounded-5 p-1 text-center button-${status_color(data.appointment_status)}`} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                <option className=\"button\" selected disabled>{status(data.appointment_status)}</option>\r\n                                <option key={0} className=\"button-lightred\" value='1'>Pending</option>\r\n                                <option key={1} className=\"button-lightblue\" value='2'>Booked</option>\r\n                                <option key={2} className=\"button-lightred\" value='3'>Cancelled</option>\r\n                                <option key={3} className=\"button-pearl\" value='4'>QR Generated</option>\r\n                                <option key={4} className=\"button-brandy\" value='5'>Checked_in</option>\r\n                                <option key={5} className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                                <option key={6} className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                                <option key={7} className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                                <option key={8} className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                                <option key={9} className=\"button-lightgreen\" value='10'>Completed</option>\r\n                              </select>\r\n                            </td>\r\n                            <td className=\"py-0\">{data.patient ? data.patient.full_name !== null ? data.patient.full_name : 'N/A' : 'N/A'}</td>\r\n                            <td className=\"py-0\">{data.patient ? data.patient.phone_number != null ? data.patient.phone_number : 'N/A' : 'N/A'}</td>\r\n                            <td className=\"py-0\">{tConvert(data.timeslot.time_from)}</td>\r\n                            <td className=\"py-0\">{data.total_amount}</td>\r\n                            <td className=\"py-0\"><AmountPaid appointmentData={data} Appointmentlist={Appointmentlist} /> </td>\r\n                            <td className={`py-0 bg-${vitalindex === i ? 'lightyellow' : ''}`}><button className=\"btn p-0 m-0\" onClick={() => { setvitalindex(i); OpenVitals(); GetAppointmentVitals(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                            <td className={`py-0 bg-${billindex === i ? 'lightyellow' : ''}`}> <button className=\"btn p-0 m-0\" onClick={() => { setbillindex(i); OpenBillForm(); }}><img src={process.env.PUBLIC_URL + \"/images/bill.png\"} alt=\"displaying_image\" style={{ width: \"1.8rem\" }} className=\"me-1\" /></button>  </td>\r\n                            <td className={`py-0 bg-${paymentsindex === i ? 'lightyellow' : ''}`}><button className=\"btn p-0 m-0\" onClick={() => { setpaymentsindex(i); OpenPaymentsForm(); }}><img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td>\r\n                            <td><div className=\"dropdown\">\r\n                              <button className=\"button button p-0 m-0 px-1 py-1 button-pearl fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                              </button>\r\n                              <ul className=\"dropdown-menu p-2\">\r\n                                <li className=\"text-start p-0 m-0 border-bottom border-1\" onClick={() => confirmmessage(data.patient.full_name, data.id)}>\r\n                                  <button className=\"btn p-0 m-0\" ><img src={process.env.PUBLIC_URL + \"/images/speaker.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.8rem\" }} /> Call Patient</button>\r\n                                </li>\r\n                                <li className=\"text-start p-0 m-0 border-bottom border-1\">\r\n                                  <button className=\"p-0 m-0 btn\" onClick={() => { Generate_Bill(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Bill</button>\r\n                                </li>\r\n                                <li className=\"text-start p-0 m-0 border-bottom border-1\">\r\n                                  <button className=\"p-0 m-0 btn\" onClick={() => { Generate_Prescription(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Prescription</button>\r\n                                </li>\r\n                                <li className=\"text-start p-0 m-0 border-bottom border-1\">\r\n                                  <button className=\"p-0 m-0 btn\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Send on Whats App</button>\r\n                                </li>\r\n                                <li className=\"text-start p-0 m-0 border-bottom border-1\">\r\n                                  <button className=\"p-0 m-0 btn\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='ms-1' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />{' '}Send on SMS</button>\r\n                                </li>\r\n\r\n\r\n                              </ul>\r\n                            </div></td>\r\n                            {\r\n                              tableindex === i ? (\r\n                                <td className={`updateappointment border border-1 rounded-3 bg-seashell mt-2 start-0 end-0 top-0 col-lg-8 col-md-10 col-sm-10 col-10 col-xl-5 d-${tableindex == i ? appointmentform : 'none'} position-absolute`}>\r\n                                  <UpdateAppointment fetchapi={props.fetchapi} fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} addappointmentform={addappointmentform} closeappointmentform={closeappointmentform} doctorid={props.doctorid} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              vitalindex === i ? (\r\n                                <td className={`vitals bg-${vitalindex === i ? 'lightred' : ''} col-lg-7 col-md-8 col-sm-12 col-12 col-xl-5 position-absolute border border-1 shadow rounded-2 d-${vitalindex == i ? vitalsform : 'none'}`} style={{ zIndex: '3010' }}>\r\n                                  <Vitalsoperation GetAppointmentVitals={GetAppointmentVitals} CloseVitals={CloseVitals} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} appointmentvitalslist={appointmentvitalslist} loadvitals={loadvitals} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              billindex == i ? (\r\n                                <td className={`bill d-${billindex == i ? billform : 'none'} col-lg-8 p-0 m-0 col-md-10 start-0 mx-auto mt-2 end-0 top-0 col-sm-12 col-12 col-xl-6 border border-1 rounded-3 shadow position-absolute`}>\r\n                                  <Bill fetchapi={props.fetchapi} CloseBillForm={CloseBillForm} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} appointmentid={data.id} doctorfee={data.doctor.consulationFee} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              paymentsindex === i ? (\r\n                                <td className={`payments start-0 bg-seashell end-0 top-0 border border-1 rounded-3 col-lg-6 col-md-8 col-sm-10 col-10 mt-2 col-xl-8 position-absolute d-${paymentsindex == i ? paymentsform : 'none'}`}>\r\n                                  <Payments ClosePaymentsForm={ClosePaymentsForm} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                          </tr>\r\n\r\n                        )))}\r\n                  </tbody>\r\n\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}\r\nexport { DoctorSchedule };\r\n\r\nfunction Timecard(props) {\r\n  const url = useContext(URL);\r\n  const clinics = useContext(Clinic)\r\n  const [cardindex, setcardindex] = useState()\r\n  const [rooms, setrooms] = useState([])\r\n  function diff(start, end) {\r\n    start = start.split(\":\");\r\n    end = end.split(\":\");\r\n    var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    var diff = endDate.getTime() - startDate.getTime();\r\n    var hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    var minutes = Math.floor(diff / 1000 / 60);\r\n    if (hours < 0)\r\n      hours = hours + 24;\r\n\r\n    return (hours <= 9 ? \"0\" : \"\") + hours + \"hrs\" + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins';\r\n  }\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let [doctime, setdoctime] = useState([]);\r\n  let [isLoading, setisLoading] = useState();\r\n  let [startload, setstartload] = useState(false)\r\n\r\n  let clinicid = localStorage.getItem('ClinicId');\r\n\r\n  async function fetchapi() {\r\n    setisLoading(true);\r\n    await axios.get(`${url}/todays/doctor/time/list?doctor_id=${props.docid}&clinic_id=${clinicid}`).then((response) => {\r\n      console.log(response)\r\n      console.log(response.data.data)\r\n      if (response.data.data.length == 0) {\r\n        setisLoading(false);\r\n      }\r\n      else {\r\n        setdoctime(response.data.data.reverse());\r\n        setisLoading(false);\r\n      }\r\n    })\r\n  }\r\n  const [refreshtimeslots, setrefreshtimeslot] = useState(false);\r\n  const [roomnumber, setroomnumber] = useState('1');\r\n\r\n  async function starttimeslot() {\r\n    setstartload(true)\r\n    let adminid = localStorage.getItem('id');\r\n    if (clinicid && roomnumber && props.docid && adminid) {\r\n      try {\r\n        await axios.post(`${url}/doctor/start/time`, {\r\n          clinic_id: clinicid,\r\n          room_id: roomnumber,\r\n          doctor_id: props.docid,\r\n          admin_id: adminid,\r\n        }).then((response) => {\r\n          setstartload(false)\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n        await fetchapi();\r\n\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n\r\n        setstartload(false)\r\n\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please fill all details')\r\n      setstartload(false)\r\n    }\r\n  }\r\n\r\n  async function endtimeslot(data) {\r\n    let adminid = localStorage.getItem('id');\r\n    setrefreshtimeslot(true);\r\n    let log_id = data.id;\r\n    try {\r\n      await axios.post(`${url}/doctor/end/time`, {\r\n        admin_id: adminid,\r\n        log_id: log_id\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n      await fetchapi();\r\n      setrefreshtimeslot(false)\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setrefreshtimeslot(false);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [props._selected]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < clinics.length; i++) {\r\n      if (clinics[i].id == Number(clinicid)) {\r\n        setrooms(clinics[i].rooms)\r\n      }\r\n    }\r\n\r\n  }, [clinicid])\r\n  // console.log(doctime, clinics, rooms, clinicid)\r\n  return (\r\n    <div className=\"scroll align-items-center align-content-center my-auto mb-2\">\r\n      <div id=\"cardslot\" className={`d-${isLoading ? 'none' : 'inline-flex'} m-1`}>\r\n        <div className=\"card card1 p-0 m-0 text-start\" id=\"card1\" >\r\n          <div className=\"card-body p-0 m-0\">\r\n            <div className=\"d-flex align-items-center ms-3\">\r\n              <p className=\" m-0 p-0 text-charcoal fw-bold me-2\">Room</p>\r\n              <select onChange={(e) => { setroomnumber(e.target.value) }} className=\"form-control bg-pearl my-1  mx-2 p-0 py-1 px-3 w-auto text-center border-0\" id=\"clinicroom1\">\r\n                {\r\n\r\n                  rooms.map((data) => (\r\n                    <option value={data.id}>{data.room_number}</option>\r\n                  ))\r\n\r\n\r\n                }\r\n              </select>\r\n              {\r\n                startload ? (\r\n                  <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                ) : (\r\n                  <button className=\"btn p-0 m-0 mx-2\" onClick={starttimeslot}><img src={process.env.PUBLIC_URL + 'images/play.png'} style={{ width: '1.8rem' }} /></button>\r\n                )\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ? (\r\n\r\n          <div className=\"card bg-pearl text-center ms-3 bg-seashell\" aria-hidden=\"true\" style={{ width: '18rem', paddingTop: '0.76rem', paddingBottom: '0.76rem' }}>\r\n            <div className=\" text-start   placeholder-glow gx-2\">\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-2 ms-2 text-start\"></span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          doctime.map((data, i) => (\r\n            <div id=\"cardslot text-start\" key={i} className=\"d-inline-flex m-1\">\r\n              <div className=\"card p-0 m-0 text-start\" id=\"card1\">\r\n                <div className=\"card-body p-0 m-0\">\r\n                  <div className=\"d-flex text-start align-items-center p-0 m-0 \">\r\n                    <p className=\" p-0 m-0  ms-2 text-charcoal fw-bold\">Room</p>\r\n                    <select className=\"form-control rounded-2 bg-pearl my-1 mx-2 p-0 py-1 px-3 border-0 w-auto\" value={data.room_id} id=\"clinicroom\">\r\n                      <option value={data.room_id}>{data.room_id}</option>\r\n                    </select>\r\n                    {\r\n                      refreshtimeslots && i === cardindex ? (\r\n                        <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"d-flex p-0 m-0 justify-content-center\">\r\n\r\n                            <button type=\"text\" className=\"btn p-0 m-0 float-end text-charcoal text-center\">{(data.login_time) ? tConvert(data.login_time) : ''}</button>\r\n                            <div className='vr h-50 mx-2 align-self-center' style={{ padding: '0.9px' }}></div>\r\n                            <button type=\"text\" className=\"btn p-0 m-0 text-charcoal float-end text-center\">{(data.logout_time) ? tConvert(data.logout_time) : '__'}</button>\r\n\r\n                          </div>\r\n\r\n                          <div className=\"d-flex mx-2 \">\r\n                            {\r\n                              data.logout_time ? (\r\n                                <div id=\"totalhrs\" className=\"btn p-0 m-0 text-charcoal fw-bold text-center me-3\" defaultValue=\"00\">{data.logout_time ? diff(data.login_time, data.logout_time) : ''}</div>\r\n                              ) : (\r\n                                <button className=\"btn p-0 m-0\" value={data.id} onClick={(e) => { endtimeslot(data); setcardindex(i) }}><img src={process.env.PUBLIC_URL + 'images/pause.png'} onClick={(e) => { endtimeslot(e); setcardindex(i) }} style={{ width: '1.8rem' }} /></button>\r\n\r\n                              )\r\n                            }\r\n\r\n\r\n                          </div>\r\n\r\n                        </>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n          ))\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\nexport { Timecard }\r\n\r\n\r\n\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddPatient.jsx",["789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddAppointment.jsx",["829","830","831","832","833","834","835","836","837","838","839","840","841","842","843"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddDoctorSlot.jsx",["844","845","846","847","848","849","850"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\apiarrays.jsx",["851","852","853","854","855","856"],[],"import axios from 'axios';\r\nimport React ,{useState,useEffect,useContext} from 'react';\r\nimport { URL } from '../../index';\r\n\r\nimport '../../css/pharmacy.css';\r\nimport Notiflix from 'notiflix';\r\n\r\nfunction Purchaseorderarray(props){\r\n    let purchaseorderarr =[{\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightyellow rounded-5\">Consumables</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightyellow rounded-5\">Pending</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightred rounded-5\">Cancelled</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-burntumber rounded-5\">Rejected</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n    }\r\n];\r\n    return(\r\n        <>{\r\n            purchaseorderarr.map((item,_key) => {\r\n            return<tr key={_key}>\r\n            <td>{item.c1}</td>\r\n            <td>{item.c2}</td>\r\n            <td>{item.c3}</td>\r\n            <td>{item.c4}</td>\r\n            <td>{item.c5}</td>\r\n            <td>{item.c6}</td>\r\n            <td>{item.c7}</td>  \r\n            <td>{item.c8}</td>\r\n            <td><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/enter.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button>\r\n              <button className='btn'onClick={props.itemdetails}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n            <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/delete.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n          </tr>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Pharmacystocktable(){\r\n  let  pharmacystockarr = [{\r\n        c1:'01',\r\n        c2:'Dolo 650',\r\n        c3:'04',\r\n        c4:'600',\r\n        c5:'Lucky Distributors'\r\n    }]\r\n    return(\r\n        <>{\r\n            pharmacystockarr.map((item,_key) => {\r\n            return<tr key={_key}>\r\n            <td>{item.c1}</td>\r\n            <td>{item.c2}</td>\r\n            <td>{item.c3}</td>\r\n            <td>{item.c4}</td>\r\n            <td>{item.c5}</td>\r\n            <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></td>\r\n            <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n          </tr>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction POitemdetailsarray(){\r\n    let POitemdetailsarr = [\r\n        {\r\n        c1:'01',\r\n        c2:'Dolo 650',\r\n        c3:'10',\r\n        c4:'600'\r\n        },\r\n]\r\n    return (\r\n        <>\r\n\r\n<table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n     \r\n            <th>No.</th>\r\n            <th>Item Name</th>\r\n            <th>Total Qty</th>\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            POitemdetailsarr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                </tr>\r\n            })\r\n        }\r\n        </tbody>\r\n    </table>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport{Purchaseorderarray};\r\nexport {Pharmacystocktable};\r\nexport{POitemdetailsarray};\r\n\r\n\r\n\r\n\r\nfunction Stockvaccinearray(){\r\n        let Stockvaccinearr = [{\r\n            id: 1,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 2,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 3,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 4,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 5,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 6,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        ];\r\n        return (\r\n            <>{\r\n                Stockvaccinearr.map((item, _key) => {\r\n                    return <tr key={item.id}>\r\n                        <td>{item.c1}</td>\r\n                        <td>{item.c2}</td>\r\n                        <td>{item.c3}</td>\r\n                        <td>{item.c4}</td>\r\n                        <td>{item.c5}</td>\r\n                        <td>{item.c6}</td>\r\n                        <td>{item.c7}</td>\r\n                        <td>{item.c8}</td>\r\n                        <td></td>\r\n                        <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n        \r\n                    </tr>\r\n                })\r\n            }\r\n            </>\r\n    )\r\n}\r\n\r\nfunction Stockmedicinearray(){\r\n    let Stockvaccinearr = [{\r\n        id: 1,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 2,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 3,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 4,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 5,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 6,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    ];\r\n    return (\r\n        <>{\r\n            Stockvaccinearr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td>{item.c6}</td>\r\n                    <td>{item.c7}</td>\r\n                    <td>{item.c8}</td>\r\n                    <td></td>\r\n                    <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n    \r\n                </tr>\r\n            })\r\n        }\r\n        </>\r\n)\r\n}\r\nexport{Stockvaccinearray};\r\nexport{Stockmedicinearray};\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\AllAppointmentslist.jsx",["857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedAppointments.jsx",["873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Patients\\UpdatePatient.jsx",["890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Doctors\\UpdateDoctor.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customconfirm.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Payments.jsx",["933","934","935","936","937","938","939","940","941","942"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.fetchallAppointmentslist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            pendings.push(props.appointmentdata.pending_payments[j])\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            if (props.appointmentdata.pending_payments[j].is_paid == 0) {\r\n                pendingid = props.appointmentdata.pending_payments[j].id\r\n            }\r\n\r\n        }\r\n\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.fetchallAppointmentslist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    // console.log(advancepaymentmethods)\r\n    console.log(props.appointmentdata)\r\n    return (\r\n        <div className='bg-seashell rounded-2'>\r\n            <h5 className='fs-4'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.toggle_payments}></button>\r\n            <hr />\r\n            <div className=\"row p-0 m-0 gx-2 justify-content-center\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n                        <div className=\"col-6 col-lg-4 col-md-6 col-xl-4 col-sm-6\">\r\n                            <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} border border-dark`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <hr />\r\n            <div className={`container-fluid p-0 m-0 text-center d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-2'>Advance Payment from {props.patientname}</h5>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n                            <div className='row align-items-center p-0 m-0'>\r\n                                <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                                <input className=' col-6 p-0 m-0 form-control w-50 text-center bg-seashell ' value={advancepaid.advnace_total} />\r\n                                <hr />\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-2'>Add Advance Payment</h5>\r\n                <label className='text-charcoal fw-bold'>Description</label>\r\n                <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mb-3' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                <label className='text-charcoal fw-bold'>Select Payment Method</label>\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2  justify-content-center\">\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container-fluid text-center mt-2\">\r\n                    <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                </div>\r\n                <button className='button button-burntumber mt-4' onClick={AddadvancePaymentMethods}>Save</button>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} text-center`}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h5 className='fw-bolder text-burntumber'>Previous Paid Pending Payments</h5>\r\n                                <div className='p-0 m-0 scroll scroll-y'>\r\n                                    <table className=' p-0 m-0 table text-center'>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='border p-0 m-0 px-1' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Cash</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Card</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Paytm</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Phonepe</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Razorpay</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Wire-Transfer</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={` text-center d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='border'>{data.paid_amount}</td>\r\n                                                        <td className='border'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='border'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} text-center`}>\r\n                                            <h5 className='text-burntumber fw-bolder mt-2'>Pending Remains</h5>\r\n                                            <div className=' bg-danger text-light fw-bolder fs-5 text-center' >{Data.pending_amount}</div>\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={`text-center`}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-center\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                                <button className='button button-burntumber mt-4' onClick={UpdatePendingPayments}>Save</button>\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <div className='rounded-2 bg-lightgreen fw-bolder p-2'>No Pending Payments Found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AmountPaid.jsx",["943","944","945"],[],"import React, { useState, useEffect } from 'react'\r\n\r\nconst AmountPaid = (props) => {\r\n\r\n    const [totalAmount, setTotalAmount] = useState(0)\r\n    const [paidpendingtotal,setpaidpending] =useState(0)\r\n    const calculate = () => {\r\n        var data = props.appointmentData;\r\n        if (data.payment_method != null) {\r\n            var payment = Object.values(JSON.parse(data.payment_method_details))\r\n            var val = 0;\r\n            for (let i = 0; i < payment.length; i++) {\r\n                var element = parseFloat(payment[i]);\r\n                val += element\r\n                setTotalAmount(val)\r\n            }\r\n        }\r\n    }\r\n    const CalculatePaidPendings=()=>{\r\n      let totalpaidpendings = []\r\n      let pendingtotal = 0\r\n      if(props.appointmentData.pending_payments && props.appointmentData.pending_payments!=null){\r\n        for(let i = 0;i<props.appointmentData.pending_payments.length;i++){\r\n            if(props.appointmentData.pending_payments[i].is_paid == 1){\r\n              totalpaidpendings.push(props.appointmentData.pending_payments[i].paid_amount!==null?props.appointmentData.pending_payments[i].paid_amount:0)\r\n            }\r\n        }\r\n      }\r\n\r\n   totalpaidpendings.forEach(item=>{\r\n    pendingtotal +=Number(item)\r\n   })\r\n   setpaidpending(pendingtotal)\r\n    }\r\n    useEffect(() => {\r\n      calculate()\r\n      CalculatePaidPendings()\r\n  }, [])\r\n\r\n    return (\r\n        totalAmount !=null ? (\r\n            totalAmount+paidpendingtotal == props.appointmentData.total_amount ? (<>\r\n            <button className=\"ms-1 btn btn-sm button-lightgreen fw-bold\">{Number(totalAmount)+Number(paidpendingtotal)} Done</button>\r\n                                    </>) : (<>\r\n                                      <button className=\"ms-1 btn btn-sm button-lightred fw-bold\">{Number(props.appointmentData.total_amount)-(Number(totalAmount)+Number(paidpendingtotal))} Pending</button>\r\n                                    </>)\r\n\r\n                                  ) : (\r\n                                    <button className=\"btn button-seashell p-0 m-0\" type=\"button\" disabled>\r\n                                      <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    </button>\r\n                                  )\r\n    \r\n    )\r\n}\r\n\r\nexport default AmountPaid","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedTimeAppointment.jsx",["946","947","948","949","950","951","952","953","954","955"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\SelectedDoctorSlot.jsx",["956","957","958","959","960","961","962","963","964"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\UpdateAppointment.jsx",["965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState()\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want yo update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center mt-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"col-12 location bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-center text-charcoal `}>\r\n                                <img className='mb-1' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                {data.title} {data.address}</div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal  bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12 bg-seashell\"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal'>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-charcoal50-outline shadow-none' >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                    <button className='btn px-5 button-charcoal' onClick={confirmmessage}>Done</button>\r\n                                </div>\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                    <button className=\"btn btn-light px-5 border \" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Bill.jsx",["989","990","991","992","993","994","995","996","997","998","999"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].other_charges.length; j++) {\r\n                    extracharges.push({\r\n                        description: props.appointmentdata[i].other_charges[j].description != null ? props.appointmentdata[i].other_charges[j].description : 'N/A',\r\n                        amount: props.appointmentdata[i].other_charges[j].total_amount != null ? props.appointmentdata[i].other_charges[j].total_amount : 0,\r\n                        discount: props.appointmentdata[i].other_charges[j].discount != null ? props.appointmentdata[i].other_charges[j].discount : 0,\r\n                        cgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n                        sgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n                        gross_amount: props.appointmentdata[i].other_charges[j].final_amount && props.appointmentdata[i].other_charges[j].final_amount !== null ? props.appointmentdata[i].other_charges[j].final_amount : '',\r\n                        id: props.appointmentdata[i].other_charges[j].id && props.appointmentdata[i].other_charges[j].id != null ? props.appointmentdata[i].other_charges[j].id : ''\r\n                    })\r\n\r\n                }\r\n                setaartasdiscount(props.appointmentdata[i].aartas_discount)\r\n                setdocdiscount(props.appointmentdata[i].doc_discount)\r\n                setconstext(props.appointmentdata[i].cons_text)\r\n            }\r\n        }\r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id && props.appointmentdata[i].payment_method_details) {\r\n                Payments.push(Object.keys(JSON.parse(props.appointmentdata[i].payment_method_details)))\r\n                amounts.push(Object.values(JSON.parse(props.appointmentdata[i].payment_method_details)))\r\n            }\r\n        }\r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    console.log(Total_Amount())\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell position-relative'>\r\n            <h5 className='text-charcoal mt-2 '>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2 ' onClick={() => { props.CloseBillForm() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start p-2 position-relative\">\r\n                                <h6 className='fw-bolder text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-1 me-4 text-cahrcoal fw-bolder'><input type='checkbox' checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell' value={AddConsAmt} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell' value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell'>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control bg-seashell' disabled value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell text-center' value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell text-center' value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell rounded-2 position-relative'>\r\n                                    <h6 className='p-1 text-charcoal fw-bolder'>ExtraCharges</h6>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0 text-center\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-3 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Description</label>\r\n                                                            <input className='form-control p-0 bg-seashell m-0 text-center' value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Amount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0 \">\r\n                                                            <label className='fw-bold text-charcoal75'>Discount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>FinalAmount</label>\r\n                                                            <input type='number' className='form-control  text-center bg-seashell p-0 m-0' value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>GST %</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='text-center fw-bold text-charcoal75'>Total </label>\r\n                                                            <input className=' form-control text-center bg-seashell p-0' value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                        </div>\r\n                                                        <div className=\"col-auto align-self-end\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n                                    <div className=\"container-fluid text-center mt-2\">\r\n                                        <button className='btn py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start \">\r\n                                <h6 className='fw-bolder text-charcoal'>Tax</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>SGST</label>\r\n                                        <input className='form-control bg-seashell' value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>CGST</label>\r\n                                        <input className='form-control bg-seashell' value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 text-center rounded-2 bg-lightyellow mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n                                    <div className='col-4 align-self-end'>\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Grand Total</label>\r\n                                        <input className='form-control text-success text-center border-0 fw-bolder p-0 fs-5 bg-seashell' value={Get_Grand_Total()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-center border-0 fw-bolder p-0 fs-5 bg-seashell' value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Consumables Amount</label>\r\n                                        <input className='form-control text-primary text-center border-0 fw-bolder p-0 fs-5 bg-seashell' />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative p-2\">\r\n                                <h6 className='text-charcoal fw-bolder'>Payments</h6>\r\n                                <div className=\"row justify-content-end p-0 m-0\">\r\n                                    <div className=\"col-6 text-end p-0 m-0\">\r\n                                        <div className=\"row text-end p-0 m-0\">\r\n                                            <span className=\"col-8 text-wrap text-end p-0 m-0 fw-bold\"> Total Amount: </span>\r\n                                            <span className=\"col-4 text-end align-self-end p-0 m-0 text-success fw-bold\"> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0} </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-6 text-center m-0 p-0'>\r\n                                        <div className=\"row text-center p-0 m-0\">\r\n                                            <p className=\"col-8 text-wrap text-center p-0 m-0 fw-bold\"> Return Amount: </p>\r\n                                            <p className=\"col-4 text-start align-self-end p-0 m-0 text-burntumber fw-bold\"> {Return_Amount()} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-end m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid pb-2\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0\">\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-burntumber' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-brandy' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Bill.jsx",["1000","1001","1002","1003","1004","1005","1006","1007","1008"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n\r\n           \r\n                for (let j = 0; j < props.appointmentdata.other_charges.length; j++) {\r\n                    extracharges.push({\r\n                        description: props.appointmentdata.other_charges[j].description != null ? props.appointmentdata.other_charges[j].description : 'N/A',\r\n                        amount: props.appointmentdata.other_charges[j].total_amount != null ? props.appointmentdata.other_charges[j].total_amount : 0,\r\n                        discount: props.appointmentdata.other_charges[j].discount != null ? props.appointmentdata.other_charges[j].discount : 0,\r\n                        cgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                        sgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                        gross_amount: props.appointmentdata.other_charges[j].final_amount && props.appointmentdata.other_charges[j].final_amount !== null ? props.appointmentdata.other_charges[j].final_amount : '',\r\n                        id: props.appointmentdata.other_charges[j].id && props.appointmentdata.other_charges[j].id != null ? props.appointmentdata.other_charges[j].id : ''\r\n                    })\r\n\r\n                }\r\n                setaartasdiscount(props.appointmentdata.aartas_discount)\r\n                setdocdiscount(props.appointmentdata.doc_discount)\r\n                setconstext(props.appointmentdata.cons_text)\r\n            \r\n        \r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n                Payments.push(Object.keys(JSON.parse(props.appointmentdata.payment_method_details)))\r\n                amounts.push(Object.values(JSON.parse(props.appointmentdata.payment_method_details)))\r\n            \r\n        \r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell rounded-4 position-relative'>\r\n            <h5 className='text-burntumber fw-bold'>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2' onClick={() => { props.toggle_bill() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start p-2 position-relative\">\r\n                                <h6 className='fw-bolder text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-1 me-4 text-cahrcoal fw-bolder'><input type='checkbox'disabled ={true} checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell' disabled={true} value={AddConsAmt} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell' disabled={true} value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell' disabled={true}>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell text-center'disabled ={true} value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell text-center' disabled ={true} value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell rounded-2 position-relative'>\r\n                                    <h6 className='p-1 text-charcoal fw-bolder'>ExtraCharges</h6>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0 text-center\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-3 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Description</label>\r\n                                                            <input className='form-control p-0 bg-seashell m-0 text-center' disabled ={true} value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Amount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' disabled ={true} value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0 \">\r\n                                                            <label className='fw-bold text-charcoal75'>Discount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>FinalAmount</label>\r\n                                                            <input type='number' className='form-control  text-center bg-seashell p-0 m-0' disabled ={true} value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>GST %</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' disabled ={true} value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='text-center fw-bold text-charcoal75'>Total </label>\r\n                                                            <input className=' form-control text-center bg-seashell p-0' disabled ={true} value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                        </div>\r\n                                                        <div className=\"col-auto align-self-end d-none\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n                                    <div className=\"container-fluid text-center mt-2 d-none\">\r\n                                        <button className='btn py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start \">\r\n                                <h6 className='fw-bolder text-charcoal'>Tax</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>SGST</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>CGST</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 text-center rounded-2 bg-lightyellow mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n                                    <div className='col-4 align-self-end'>\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Grand Total</label>\r\n                                        <input className='form-control text-success text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} value={Get_Grand_Total()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Consumables Amount</label>\r\n                                        <input className='form-control text-primary text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative p-2\">\r\n                                <h6 className='text-charcoal fw-bolder'>Payments</h6>\r\n                                <div className=\"row justify-content-end p-0 m-0\">\r\n                                    <div className=\"col-6 text-end p-0 m-0\">\r\n                                        <div className=\"row text-end p-0 m-0\">\r\n                                            <span className=\"col-8 text-wrap text-end p-0 m-0 fw-bold\"> Total Amount: </span>\r\n                                            <span className=\"col-4 text-end align-self-end p-0 m-0 text-success fw-bold\"> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0} </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-6 text-center m-0 p-0'>\r\n                                        <div className=\"row text-center p-0 m-0\">\r\n                                            <p className=\"col-8 text-wrap text-center p-0 m-0 fw-bold\"> Return Amount: </p>\r\n                                            <p className=\"col-4 text-start align-self-end p-0 m-0 text-burntumber fw-bold\"> {Return_Amount()} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-center m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1' disabled ={true} value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1' disabled ={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2 d-none\">\r\n                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2 d-none\">\r\n                                    <button className='btn py-0' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid pb-2 d-none\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0\">\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-burntumber' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-brandy' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\UpdateAppointment.jsx",["1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [load, setload] = useState()\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n            settrigger(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        props.fetchallAppointmentslist()\r\n                        props.closeappointmentform()\r\n                        setload(false)\r\n                        props.fetchapi()\r\n                        Notiflix.Notify.success(response.data.message);\r\n\r\n                    } else {\r\n                        setload(false)\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=' text-start position-relative p-0 m-0'>\r\n            <h5 className=\"text-center\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" disabled={load == true ? true : false} onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n             \r\n                <div className=\"col-12 bg-seashell align-self-center  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <label key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} `}><img src={process.env.PUBLIC_URL + '/images/location.png'} style={{width:'1.5rem'}}/> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr className='p-0 m-0 my-1' />\r\n                <div className=\"row p-0 m-0 ms-5\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control button-charcoal-outline\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" ref={dateref} className=\"form-control border-charcoal bg-seashell\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-lg-3 col-3\">\r\n                        <label>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-charcoal50 shadow-none' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoa50 m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className='btn px-5 button-charcoal' onClick={confirmmessage}>Done</button>\r\n                            </div>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Payments.jsx",["1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.Appointmentlist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                    pendings.push(props.appointmentdata[i].pending_payments[j])\r\n                }\r\n            }\r\n\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                if (props.appointmentid == props.appointmentdata[i].id) {\r\n                    if (props.appointmentdata[i].pending_payments[j].is_paid == 0) {\r\n                        pendingid = props.appointmentdata[i].pending_payments[j].id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    console.log(advancepaymentmethods)\r\n    return (\r\n        <div className=' p-0 m-0'>\r\n            <h5 className=''>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.ClosePaymentsForm}></button>\r\n            <div className=\"d-flex justify-content-center p-0 m-0 gx-2 mt-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 text-center d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h5 className='text-burntumber fw-bolder mt-3 mb-1'>Advance Payments from {props.patientname}</h5>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n                            <div className='row align-items-center p-0 m-0'>\r\n                                <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                                <input className=' col-6 p-0 m-0 form-control w-50 text-center bg-seashell ' value={advancepaid.advnace_total} />\r\n                                <hr />\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <hr/>\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-3'>Add Advance Payment</h5>\r\n                <label className='text-charcoal fw-bold'>Description</label>\r\n                <input type='text' className='form-control p-0 m-0 p-1 w-75 bg-seashell mb-3 mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                <label className='text-charcoal fw-bold'>Select Payment Method</label>\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2  justify-content-center\">\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container-fluid text-center mt-2\">\r\n                    <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                </div>\r\n                <button className='button button-burntumber mt-4 mb-2' disabled={Description?false:true} onClick={AddadvancePaymentMethods}>Save</button>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} text-center`}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h5 className='fw-bolder text-burntumber'>Previous Paid Pending Payments</h5>\r\n                                <div className='p-0 m-0 scroll scroll-y'>\r\n                                    <table className=' p-0 m-0 table text-center'>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='border p-0 m-0 px-1' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Cash</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Card</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Paytm</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Phonepe</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Razorpay</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Wire-Transfer</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={` text-center d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='border'>{data.paid_amount}</td>\r\n                                                        <td className='border'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='border'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} text-center`}>\r\n                                            <h5 className='text-burntumber fw-bolder mt-2'>Pending Remains</h5>\r\n                                            <div className=' bg-danger text-light fw-bolder fs-5 text-center' >{Data.pending_amount}</div>\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={`text-center`}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-center\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                                <button className='button button-burntumber mt-4 mb-2'  onClick={UpdatePendingPayments}>Save</button>\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <div className='rounded-2 bg-lightgreen fw-bolder p-2 my-4'>No Pending Payments Found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Vitals.jsx",["1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    // console.log(vitalid, vitalupdatevalue, appointmentvitalid, props.appointmentid, props.patientid)\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  // console.log(props.appointmentvitalslist)\r\n  return (\r\n    <div className='bg-seashell rounded-2 position-relative pb-4'>\r\n      <h5 className='p-1 text-center'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 m-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} style={{ width: '1.5rem' }} /></button>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '><h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6></div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0 align-self-end\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row p-0 m-0 justify-content-center mt-2\">\r\n              <div className=\"col-4 p-0 m-0\">\r\n                <select className='  border-0 text-center bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 rounded-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0\">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-1\"></div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <button className='button button-charcoal' onClick={props.CloseVitals}>Done</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customloading.jsx",["1057"],[],"import React from 'react'\r\nimport '../../../css/bootstrap.css'\r\nimport Notiflix from 'notiflix';\r\n\r\nconst customloading = () => {\r\n  return (\r\n    Notiflix.Loading.init({\r\n        className: 'notiflix-loading',\r\n        zindex: 4000,\r\n        backgroundColor: 'transparent',\r\n        rtl: false,\r\n        fontFamily: 'Quicksand',\r\n        cssAnimation: true,\r\n        cssAnimationDuration: 400,\r\n        clickToClose: false,\r\n        customSvgUrl: null,\r\n        customSvgCode: null,\r\n        svgSize: '80px',\r\n        svgColor: '#f2f2f2',\r\n        messageID: 'NotiflixLoadingMessage',\r\n        messageFontSize: '15px',\r\n        messageMaxLength: 34,\r\n        messageColor: '#f2f2f2',\r\n        })\r\n  )\r\n}\r\n\r\nexport  {customloading}","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\UpdateMedicine.jsx",["1058"],[],"import axios from 'axios'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport '../../css/bootstrap.css'\r\n\r\nconst UpdateMedicine = (props) => {\r\n  const url = useContext(URL)\r\n  const [displayname, setdisplayname] = useState()\r\n  const [name, setname] = useState()\r\n  const [saltname, setsaltname] = useState()\r\n  const [manufacturer, setmanufacturer] = useState()\r\n  const [strength, setstrength] = useState()\r\n  const [unit, setunit] = useState()\r\n  const [pack, setpack] = useState()\r\n  const [packtype, setpacktype] = useState()\r\n  const [mfid, setmfid] = useState()\r\n  const [schedule, setschedule] = useState()\r\n  const [hsn, sethsn] = useState()\r\n  const [rack, setrack] = useState()\r\n  const [maxsc, setmaxsc] = useState()\r\n  const [minsc, setminsc] = useState()\r\n  const [altsc, setaltsc] = useState()\r\n  const [img, setimg] = useState('')\r\n  const data = props.data\r\n  const FillDetails = async () => {\r\n    setdisplayname(data.display_name)\r\n    setname(data.name)\r\n    setsaltname(data.salt_name)\r\n    setmanufacturer(data.manufacturer)\r\n    setstrength(data.strength)\r\n    setunit(data.medicine_unit)\r\n    setpack(data.packaging)\r\n    setpacktype(data.packaging_type_id)\r\n    setmfid(data.medicine_form_id)\r\n    setschedule(data.schedule)\r\n    sethsn(data.hsn_code)\r\n    setrack(data.rack_number)\r\n    setmaxsc(data.max_stock_count)\r\n    setminsc(data.min_stock_count)\r\n    setaltsc(data.alert_stock_count)\r\n    setimg(data.image)\r\n\r\n  }\r\n  useEffect(() => {\r\n    FillDetails()\r\n  }, [])\r\n  const handleimage = async (e) => {\r\n    console.log(e.target.files)\r\n    if (e.target.files.length !== 0) {\r\n      setimg(e.target.files)\r\n    }\r\n\r\n  }\r\n  const UpdateMedicine = async () => {\r\n    const Data = {\r\n      medicine_id:data.id,\r\n      display_name: displayname,\r\n      name: name,\r\n      salt_name: saltname,\r\n      manufacturer: manufacturer,\r\n      strength: strength,\r\n      medicine_unit: Number(unit),\r\n      packaging: pack,\r\n      packaging_type_id: Number(packtype),\r\n      medicine_form_id: Number(mfid),\r\n      schedule: schedule,\r\n      hsn_code: hsn,\r\n      rack_number: rack,\r\n      max_stock_count: Number(maxsc),\r\n      min_stock_count: Number(minsc),\r\n      alert_stock_count: Number(altsc),\r\n      image:img ?  {\r\n        name:img[0].name,\r\n        size:img[0].size,\r\n        type:img[0].type,\r\n        webkitRelativePath:img[0].webkitRelativePath,\r\n        lastModifiedDate:img[0].lastModifiedDate,\r\n        lastModified:img[0].lastModified\r\n\r\n      } :''\r\n    }\r\n    console.log(props.data)\r\nconsole.log(props.data.id)\r\n    try {\r\n      await axios.post(`${url}/medicine/update`, Data).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to Update ${data.display_name} Details`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        UpdateMedicine()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  if (img !== null) {\r\n    console.log(img[0])\r\n  }\r\n  console.log(data)\r\n  return (\r\n    <div className='position-relative bg-seashell p-0 m-0'>\r\n      <h5 className='p-0 m-0 text-center py-2 border-bottom'>Update Medicine</h5>\r\n      <button className='btn btn-close position-absolute end-0 top-0 mt-1 me-1' onClick={props.ToggleNewMedicine}></button>\r\n      <div className='scroll scroll-y' style={{ height: '78vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Basic Details</p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Display Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={displayname ? displayname : ''} onChange={(e) => { setdisplayname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={name ? name : ''} onChange={(e) => { setname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Salt Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={saltname ? saltname : ''} onChange={(e) => { setsaltname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Manufacturer</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={manufacturer ? manufacturer : ''} onChange={(e) => { setmanufacturer(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end mt-3\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Other Details  </p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Strength</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={strength ? strength : ''} onChange={(e) => { setstrength(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Unit</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={unit ? unit : ''} onChange={(e) => { setunit(e.target.value) }}>\r\n                <option>Select Unit</option>\r\n                <option value='1'>mg</option>\r\n                <option value='2'>ml</option>\r\n                <option value='3'>mcg</option>\r\n                <option value='4'>g</option>\r\n                <option value='5'>%</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={pack ? pack : ''} onChange={(e) => { setpack(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging Type</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={packtype ? packtype : ''} onChange={(e) => { setpacktype(e.target.value) }}>\r\n                <option>Select Packaging Type</option>\r\n                <option value='1'>Strip</option>\r\n                <option value='2'>Tube</option>\r\n                <option value='3'>Bottle</option>\r\n                <option value='4'>Syringe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Form</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={mfid ? mfid : ''} onChange={(e) => { setmfid(e.target.value) }}>\r\n                <option>Select Medicine form</option>\r\n                <option value=\"1\" >tablet</option>\r\n                <option value=\"2\" >capsule</option>\r\n                <option value=\"3\" >liquid</option>\r\n                <option value=\"4\">topical</option>\r\n                <option value=\"5\" >cream</option>\r\n                <option value=\"6\" >device</option>\r\n                <option value=\"7\" >drop</option>\r\n                <option value=\"8\" >foam</option>\r\n                <option value=\"9\" >gel</option>\r\n                <option value=\"10\" >inhaler</option>\r\n                <option value=\"11\" >injection</option>\r\n                <option value=\"12\" >lotion</option>\r\n                <option value=\"13\" >ointment</option>\r\n                <option value=\"14\" >patch</option>\r\n                <option value=\"15\" >powder</option>\r\n                <option value=\"16\" >spray</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Schedule</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={schedule ? schedule : ''} onChange={(e) => { setschedule(e.target.value) }} >\r\n                <option>Select Schedule</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"H\" >H</option>\r\n                <option value=\"X\" >X</option>\r\n                <option value=\"J\" >J</option>\r\n                <option value=\"A\" >A</option>\r\n                <option value=\"B\" >B</option>\r\n                <option value=\"C\" >C</option>\r\n                <option value=\"D\" >D</option>\r\n                <option value=\"E\" >E</option>\r\n                <option value=\"F\" >F</option>\r\n                <option value=\"K\" >K</option>\r\n                <option value=\"M\" >M</option>\r\n                <option value=\"N\" >N</option>\r\n                <option value=\"O\" >O</option>\r\n                <option value=\"P\" >P</option>\r\n                <option value=\"Q\" >Q</option>\r\n                <option value=\"R\" >R</option>\r\n                <option value=\"S\" >S</option>\r\n                <option value=\"T\" >T</option>\r\n                <option value=\"U\" >U</option>\r\n                <option value=\"V\" >V</option>\r\n                <option value=\"Y\">Y</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-center mt-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Choose Medicine Photo</p>\r\n          <div className=\"col-4 ms-5\">\r\n            <input type='file' className='form-control bg-seashell p-0 m-0 px-2 py-1' onChange={(e) => { handleimage(e) }} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-end mt-3 mb-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>HSN Code and Count</p>\r\n          <div className=\"col-12\">\r\n            <p className='p-0 m-0'>HSN Code</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={hsn ? hsn : ''} onChange={(e) => { sethsn(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Rack Number</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={rack ? rack : ''} onChange={(e) => { setrack(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Max. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={maxsc ? maxsc : ''} onChange={(e) => { setmaxsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Min. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={minsc ? minsc : ''} onChange={(e) => { setminsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Alert Stock Count </p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={altsc ? altsc : ''} onChange={(e) => { setaltsc(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='bg-pearl border p-3 align-items-center '>\r\n        <div className=\"row p-0 m-0 text-center justify-content-between align-items-center align-self-center\">\r\n\r\n          <div className=\"col-6\">\r\n            <button className='button button-charcoal ' onClick={confirmmessage}>Update</button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button className='button button-seashell' onClick={FillDetails}>Set Previous</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { UpdateMedicine }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\NewMedicine.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customnotify.jsx",["1059"],[],"import React from 'react'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst customnotify = () => {\r\n  return (\r\n      \r\nNotiflix.Notify.init({\r\n    width: '280px',\r\n    position: 'right-top',\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 1000,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade',\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic',\r\n    fontAwesomeIconSize: '34px',\r\n    success: {\r\n    background: '#95B3AB',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-success',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-check-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n    failure: {\r\n    background: '#ff5549',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-failure',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-times-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n    warning: {\r\n    background: '#eebf31',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-warning',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n    info: {\r\n    background: '#26c0d3',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-info',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-info-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n    })\r\n  )\r\n}\r\n\r\nexport  {customnotify}\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\ExportExcel.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Bootstrap_Confirm.jsx",[],[],{"ruleId":"1060","severity":1,"message":"1061","line":15,"column":26,"nodeType":"1062","messageId":"1063","endLine":15,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":15,"column":43,"nodeType":"1062","messageId":"1063","endLine":15,"endColumn":45},{"ruleId":"1060","severity":1,"message":"1061","line":20,"column":26,"nodeType":"1062","messageId":"1063","endLine":20,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":20,"column":43,"nodeType":"1062","messageId":"1063","endLine":20,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1065","line":58,"column":21,"nodeType":"1066","messageId":"1067","endLine":58,"endColumn":33},{"ruleId":"1068","severity":1,"message":"1069","line":133,"column":8,"nodeType":"1070","endLine":133,"endColumn":32,"suggestions":"1071"},{"ruleId":"1060","severity":1,"message":"1061","line":154,"column":26,"nodeType":"1062","messageId":"1063","endLine":154,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":154,"column":43,"nodeType":"1062","messageId":"1063","endLine":154,"endColumn":45},{"ruleId":"1060","severity":1,"message":"1061","line":159,"column":26,"nodeType":"1062","messageId":"1063","endLine":159,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":159,"column":43,"nodeType":"1062","messageId":"1063","endLine":159,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1065","line":200,"column":21,"nodeType":"1066","messageId":"1067","endLine":200,"endColumn":33},{"ruleId":"1068","severity":1,"message":"1072","line":275,"column":8,"nodeType":"1070","endLine":275,"endColumn":33,"suggestions":"1073"},{"ruleId":"1060","severity":1,"message":"1061","line":297,"column":26,"nodeType":"1062","messageId":"1063","endLine":297,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":297,"column":43,"nodeType":"1062","messageId":"1063","endLine":297,"endColumn":45},{"ruleId":"1060","severity":1,"message":"1061","line":302,"column":26,"nodeType":"1062","messageId":"1063","endLine":302,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":302,"column":43,"nodeType":"1062","messageId":"1063","endLine":302,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1065","line":357,"column":21,"nodeType":"1066","messageId":"1067","endLine":357,"endColumn":33},{"ruleId":"1068","severity":1,"message":"1074","line":434,"column":8,"nodeType":"1070","endLine":434,"endColumn":28,"suggestions":"1075"},{"ruleId":"1060","severity":1,"message":"1061","line":454,"column":26,"nodeType":"1062","messageId":"1063","endLine":454,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":454,"column":43,"nodeType":"1062","messageId":"1063","endLine":454,"endColumn":45},{"ruleId":"1060","severity":1,"message":"1061","line":459,"column":26,"nodeType":"1062","messageId":"1063","endLine":459,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":459,"column":43,"nodeType":"1062","messageId":"1063","endLine":459,"endColumn":45},{"ruleId":"1064","severity":1,"message":"1065","line":504,"column":21,"nodeType":"1066","messageId":"1067","endLine":504,"endColumn":33},{"ruleId":"1068","severity":1,"message":"1076","line":581,"column":8,"nodeType":"1070","endLine":581,"endColumn":29,"suggestions":"1077"},{"ruleId":"1078","severity":1,"message":"1079","line":71,"column":19,"nodeType":"1066","messageId":"1080","endLine":71,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":127,"column":14,"nodeType":"1083","messageId":"1084","endLine":127,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":127,"column":44,"nodeType":"1083","messageId":"1084","endLine":127,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1085","line":180,"column":6,"nodeType":"1070","endLine":180,"endColumn":33,"suggestions":"1086"},{"ruleId":"1068","severity":1,"message":"1087","line":185,"column":6,"nodeType":"1070","endLine":185,"endColumn":17,"suggestions":"1088"},{"ruleId":"1081","severity":1,"message":"1082","line":198,"column":18,"nodeType":"1083","messageId":"1084","endLine":198,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":208,"column":18,"nodeType":"1083","messageId":"1084","endLine":208,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":256,"column":15,"nodeType":"1083","messageId":"1084","endLine":256,"endColumn":17},{"ruleId":"1081","severity":1,"message":"1089","line":338,"column":51,"nodeType":"1083","messageId":"1084","endLine":338,"endColumn":53},{"ruleId":"1081","severity":1,"message":"1082","line":342,"column":54,"nodeType":"1083","messageId":"1084","endLine":342,"endColumn":56},{"ruleId":"1081","severity":1,"message":"1082","line":351,"column":68,"nodeType":"1083","messageId":"1084","endLine":351,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":351,"column":135,"nodeType":"1083","messageId":"1084","endLine":351,"endColumn":137},{"ruleId":"1081","severity":1,"message":"1082","line":361,"column":68,"nodeType":"1083","messageId":"1084","endLine":361,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":70,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":390,"column":31,"nodeType":"1083","messageId":"1084","endLine":390,"endColumn":33},{"ruleId":"1081","severity":1,"message":"1082","line":396,"column":163,"nodeType":"1083","messageId":"1084","endLine":396,"endColumn":165},{"ruleId":"1081","severity":1,"message":"1082","line":398,"column":31,"nodeType":"1083","messageId":"1084","endLine":398,"endColumn":33},{"ruleId":"1078","severity":1,"message":"1090","line":471,"column":10,"nodeType":"1066","messageId":"1080","endLine":471,"endColumn":26},{"ruleId":"1078","severity":1,"message":"1091","line":471,"column":28,"nodeType":"1066","messageId":"1080","endLine":471,"endColumn":47},{"ruleId":"1078","severity":1,"message":"1092","line":491,"column":25,"nodeType":"1066","messageId":"1080","endLine":491,"endColumn":26},{"ruleId":"1068","severity":1,"message":"1093","line":500,"column":6,"nodeType":"1070","endLine":500,"endColumn":8,"suggestions":"1094"},{"ruleId":"1068","severity":1,"message":"1095","line":558,"column":6,"nodeType":"1070","endLine":558,"endColumn":26,"suggestions":"1096"},{"ruleId":"1081","severity":1,"message":"1082","line":578,"column":44,"nodeType":"1083","messageId":"1084","endLine":578,"endColumn":46},{"ruleId":"1097","severity":1,"message":"1098","line":602,"column":150,"nodeType":"1099","endLine":602,"endColumn":259},{"ruleId":"1097","severity":1,"message":"1098","line":611,"column":13,"nodeType":"1099","endLine":611,"endColumn":117},{"ruleId":"1081","severity":1,"message":"1082","line":627,"column":104,"nodeType":"1083","messageId":"1084","endLine":627,"endColumn":106},{"ruleId":"1081","severity":1,"message":"1082","line":647,"column":13,"nodeType":"1083","messageId":"1084","endLine":647,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":648,"column":18,"nodeType":"1083","messageId":"1084","endLine":648,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":653,"column":13,"nodeType":"1083","messageId":"1084","endLine":653,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":654,"column":17,"nodeType":"1083","messageId":"1084","endLine":654,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":662,"column":22,"nodeType":"1062","messageId":"1063","endLine":662,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":662,"column":39,"nodeType":"1062","messageId":"1063","endLine":662,"endColumn":41},{"ruleId":"1060","severity":1,"message":"1061","line":668,"column":22,"nodeType":"1062","messageId":"1063","endLine":668,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":668,"column":39,"nodeType":"1062","messageId":"1063","endLine":668,"endColumn":41},{"ruleId":"1081","severity":1,"message":"1082","line":689,"column":86,"nodeType":"1083","messageId":"1084","endLine":689,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":702,"column":114,"nodeType":"1083","messageId":"1084","endLine":702,"endColumn":116},{"ruleId":"1081","severity":1,"message":"1082","line":716,"column":34,"nodeType":"1083","messageId":"1084","endLine":716,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":721,"column":73,"nodeType":"1083","messageId":"1084","endLine":721,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":722,"column":73,"nodeType":"1083","messageId":"1084","endLine":722,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":723,"column":73,"nodeType":"1083","messageId":"1084","endLine":723,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":724,"column":73,"nodeType":"1083","messageId":"1084","endLine":724,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":725,"column":73,"nodeType":"1083","messageId":"1084","endLine":725,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":726,"column":73,"nodeType":"1083","messageId":"1084","endLine":726,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":742,"column":77,"nodeType":"1083","messageId":"1084","endLine":742,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":743,"column":77,"nodeType":"1083","messageId":"1084","endLine":743,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":744,"column":77,"nodeType":"1083","messageId":"1084","endLine":744,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":745,"column":77,"nodeType":"1083","messageId":"1084","endLine":745,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":746,"column":77,"nodeType":"1083","messageId":"1084","endLine":746,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":747,"column":77,"nodeType":"1083","messageId":"1084","endLine":747,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":780,"column":34,"nodeType":"1083","messageId":"1084","endLine":780,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":785,"column":73,"nodeType":"1083","messageId":"1084","endLine":785,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":786,"column":73,"nodeType":"1083","messageId":"1084","endLine":786,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":787,"column":73,"nodeType":"1083","messageId":"1084","endLine":787,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":788,"column":73,"nodeType":"1083","messageId":"1084","endLine":788,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":789,"column":73,"nodeType":"1083","messageId":"1084","endLine":789,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":790,"column":73,"nodeType":"1083","messageId":"1084","endLine":790,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":806,"column":77,"nodeType":"1083","messageId":"1084","endLine":806,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":807,"column":77,"nodeType":"1083","messageId":"1084","endLine":807,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":808,"column":77,"nodeType":"1083","messageId":"1084","endLine":808,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":809,"column":77,"nodeType":"1083","messageId":"1084","endLine":809,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":810,"column":77,"nodeType":"1083","messageId":"1084","endLine":810,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":811,"column":77,"nodeType":"1083","messageId":"1084","endLine":811,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":870,"column":14,"nodeType":"1083","messageId":"1084","endLine":870,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":870,"column":44,"nodeType":"1083","messageId":"1084","endLine":870,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1085","line":920,"column":6,"nodeType":"1070","endLine":920,"endColumn":24,"suggestions":"1100"},{"ruleId":"1068","severity":1,"message":"1101","line":925,"column":6,"nodeType":"1070","endLine":925,"endColumn":17,"suggestions":"1102"},{"ruleId":"1081","severity":1,"message":"1089","line":1004,"column":55,"nodeType":"1083","messageId":"1084","endLine":1004,"endColumn":57},{"ruleId":"1081","severity":1,"message":"1082","line":1008,"column":63,"nodeType":"1083","messageId":"1084","endLine":1008,"endColumn":65},{"ruleId":"1081","severity":1,"message":"1082","line":1018,"column":68,"nodeType":"1083","messageId":"1084","endLine":1018,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":1020,"column":33,"nodeType":"1083","messageId":"1084","endLine":1020,"endColumn":35},{"ruleId":"1078","severity":1,"message":"1103","line":1074,"column":9,"nodeType":"1066","messageId":"1080","endLine":1074,"endColumn":17},{"ruleId":"1078","severity":1,"message":"1104","line":1090,"column":20,"nodeType":"1066","messageId":"1080","endLine":1090,"endColumn":31},{"ruleId":"1078","severity":1,"message":"1105","line":1091,"column":10,"nodeType":"1066","messageId":"1080","endLine":1091,"endColumn":19},{"ruleId":"1078","severity":1,"message":"1106","line":1091,"column":21,"nodeType":"1066","messageId":"1080","endLine":1091,"endColumn":33},{"ruleId":"1081","severity":1,"message":"1082","line":1144,"column":12,"nodeType":"1083","messageId":"1084","endLine":1144,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":1147,"column":12,"nodeType":"1083","messageId":"1084","endLine":1147,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":1196,"column":15,"nodeType":"1083","messageId":"1084","endLine":1196,"endColumn":17},{"ruleId":"1068","severity":1,"message":"1107","line":1198,"column":6,"nodeType":"1070","endLine":1198,"endColumn":16,"suggestions":"1108"},{"ruleId":"1081","severity":1,"message":"1082","line":1220,"column":20,"nodeType":"1083","messageId":"1084","endLine":1220,"endColumn":22},{"ruleId":"1068","severity":1,"message":"1109","line":1251,"column":6,"nodeType":"1070","endLine":1251,"endColumn":24,"suggestions":"1110"},{"ruleId":"1081","severity":1,"message":"1082","line":1276,"column":53,"nodeType":"1083","messageId":"1084","endLine":1276,"endColumn":55},{"ruleId":"1081","severity":1,"message":"1082","line":1380,"column":13,"nodeType":"1083","messageId":"1084","endLine":1380,"endColumn":15},{"ruleId":"1068","severity":1,"message":"1111","line":1383,"column":6,"nodeType":"1070","endLine":1383,"endColumn":11,"suggestions":"1112"},{"ruleId":"1078","severity":1,"message":"1113","line":1401,"column":7,"nodeType":"1066","messageId":"1080","endLine":1401,"endColumn":8},{"ruleId":"1081","severity":1,"message":"1082","line":1416,"column":72,"nodeType":"1083","messageId":"1084","endLine":1416,"endColumn":74},{"ruleId":"1081","severity":1,"message":"1082","line":1416,"column":211,"nodeType":"1083","messageId":"1084","endLine":1416,"endColumn":213},{"ruleId":"1081","severity":1,"message":"1082","line":1424,"column":147,"nodeType":"1083","messageId":"1084","endLine":1424,"endColumn":149},{"ruleId":"1081","severity":1,"message":"1082","line":1434,"column":89,"nodeType":"1083","messageId":"1084","endLine":1434,"endColumn":91},{"ruleId":"1081","severity":1,"message":"1082","line":1457,"column":26,"nodeType":"1083","messageId":"1084","endLine":1457,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":1457,"column":49,"nodeType":"1083","messageId":"1084","endLine":1457,"endColumn":51},{"ruleId":"1081","severity":1,"message":"1082","line":1460,"column":35,"nodeType":"1083","messageId":"1084","endLine":1460,"endColumn":37},{"ruleId":"1081","severity":1,"message":"1082","line":1524,"column":34,"nodeType":"1083","messageId":"1084","endLine":1524,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":1524,"column":64,"nodeType":"1083","messageId":"1084","endLine":1524,"endColumn":66},{"ruleId":"1081","severity":1,"message":"1082","line":1531,"column":114,"nodeType":"1083","messageId":"1084","endLine":1531,"endColumn":116},{"ruleId":"1081","severity":1,"message":"1082","line":1543,"column":47,"nodeType":"1083","messageId":"1084","endLine":1543,"endColumn":49},{"ruleId":"1081","severity":1,"message":"1082","line":1550,"column":108,"nodeType":"1083","messageId":"1084","endLine":1550,"endColumn":110},{"ruleId":"1081","severity":1,"message":"1082","line":1590,"column":32,"nodeType":"1083","messageId":"1084","endLine":1590,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":1590,"column":60,"nodeType":"1083","messageId":"1084","endLine":1590,"endColumn":62},{"ruleId":"1081","severity":1,"message":"1082","line":1594,"column":138,"nodeType":"1083","messageId":"1084","endLine":1594,"endColumn":140},{"ruleId":"1097","severity":1,"message":"1098","line":1672,"column":109,"nodeType":"1099","endLine":1672,"endColumn":195},{"ruleId":"1078","severity":1,"message":"1114","line":1733,"column":9,"nodeType":"1066","messageId":"1080","endLine":1733,"endColumn":19},{"ruleId":"1078","severity":1,"message":"1115","line":1734,"column":10,"nodeType":"1066","messageId":"1080","endLine":1734,"endColumn":18},{"ruleId":"1078","severity":1,"message":"1116","line":1738,"column":10,"nodeType":"1066","messageId":"1080","endLine":1738,"endColumn":20},{"ruleId":"1078","severity":1,"message":"1117","line":1738,"column":22,"nodeType":"1066","messageId":"1080","endLine":1738,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":1773,"column":28,"nodeType":"1083","messageId":"1084","endLine":1773,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":1773,"column":70,"nodeType":"1083","messageId":"1084","endLine":1773,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":1914,"column":43,"nodeType":"1083","messageId":"1084","endLine":1914,"endColumn":45},{"ruleId":"1081","severity":1,"message":"1082","line":1918,"column":106,"nodeType":"1083","messageId":"1084","endLine":1918,"endColumn":108},{"ruleId":"1097","severity":1,"message":"1098","line":1937,"column":17,"nodeType":"1099","endLine":1937,"endColumn":103},{"ruleId":"1081","severity":1,"message":"1082","line":1982,"column":67,"nodeType":"1083","messageId":"1084","endLine":1982,"endColumn":69},{"ruleId":"1081","severity":1,"message":"1082","line":2040,"column":13,"nodeType":"1083","messageId":"1084","endLine":2040,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":2041,"column":18,"nodeType":"1083","messageId":"1084","endLine":2041,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":2046,"column":13,"nodeType":"1083","messageId":"1084","endLine":2046,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":2047,"column":17,"nodeType":"1083","messageId":"1084","endLine":2047,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":2055,"column":22,"nodeType":"1062","messageId":"1063","endLine":2055,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":2055,"column":39,"nodeType":"1062","messageId":"1063","endLine":2055,"endColumn":41},{"ruleId":"1060","severity":1,"message":"1061","line":2060,"column":22,"nodeType":"1062","messageId":"1063","endLine":2060,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":2060,"column":39,"nodeType":"1062","messageId":"1063","endLine":2060,"endColumn":41},{"ruleId":"1081","severity":1,"message":"1082","line":2090,"column":86,"nodeType":"1083","messageId":"1084","endLine":2090,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":2098,"column":119,"nodeType":"1083","messageId":"1084","endLine":2098,"endColumn":121},{"ruleId":"1081","severity":1,"message":"1082","line":2110,"column":32,"nodeType":"1083","messageId":"1084","endLine":2110,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":2115,"column":71,"nodeType":"1083","messageId":"1084","endLine":2115,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2116,"column":71,"nodeType":"1083","messageId":"1084","endLine":2116,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2117,"column":71,"nodeType":"1083","messageId":"1084","endLine":2117,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2118,"column":71,"nodeType":"1083","messageId":"1084","endLine":2118,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2119,"column":71,"nodeType":"1083","messageId":"1084","endLine":2119,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2120,"column":71,"nodeType":"1083","messageId":"1084","endLine":2120,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2138,"column":77,"nodeType":"1083","messageId":"1084","endLine":2138,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2139,"column":77,"nodeType":"1083","messageId":"1084","endLine":2139,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2140,"column":77,"nodeType":"1083","messageId":"1084","endLine":2140,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2141,"column":77,"nodeType":"1083","messageId":"1084","endLine":2141,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2142,"column":77,"nodeType":"1083","messageId":"1084","endLine":2142,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2143,"column":77,"nodeType":"1083","messageId":"1084","endLine":2143,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2178,"column":32,"nodeType":"1083","messageId":"1084","endLine":2178,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":2185,"column":71,"nodeType":"1083","messageId":"1084","endLine":2185,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2186,"column":71,"nodeType":"1083","messageId":"1084","endLine":2186,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2187,"column":71,"nodeType":"1083","messageId":"1084","endLine":2187,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2188,"column":71,"nodeType":"1083","messageId":"1084","endLine":2188,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2189,"column":71,"nodeType":"1083","messageId":"1084","endLine":2189,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2190,"column":71,"nodeType":"1083","messageId":"1084","endLine":2190,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2209,"column":77,"nodeType":"1083","messageId":"1084","endLine":2209,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2210,"column":77,"nodeType":"1083","messageId":"1084","endLine":2210,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2211,"column":77,"nodeType":"1083","messageId":"1084","endLine":2211,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2212,"column":77,"nodeType":"1083","messageId":"1084","endLine":2212,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2213,"column":77,"nodeType":"1083","messageId":"1084","endLine":2213,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2214,"column":77,"nodeType":"1083","messageId":"1084","endLine":2214,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2336,"column":14,"nodeType":"1083","messageId":"1084","endLine":2336,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":2336,"column":44,"nodeType":"1083","messageId":"1084","endLine":2336,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1085","line":2385,"column":6,"nodeType":"1070","endLine":2385,"endColumn":33,"suggestions":"1118"},{"ruleId":"1068","severity":1,"message":"1119","line":2390,"column":6,"nodeType":"1070","endLine":2390,"endColumn":17,"suggestions":"1120"},{"ruleId":"1081","severity":1,"message":"1089","line":2462,"column":61,"nodeType":"1083","messageId":"1084","endLine":2462,"endColumn":63},{"ruleId":"1081","severity":1,"message":"1082","line":2466,"column":63,"nodeType":"1083","messageId":"1084","endLine":2466,"endColumn":65},{"ruleId":"1081","severity":1,"message":"1082","line":2469,"column":103,"nodeType":"1083","messageId":"1084","endLine":2469,"endColumn":105},{"ruleId":"1081","severity":1,"message":"1082","line":2476,"column":68,"nodeType":"1083","messageId":"1084","endLine":2476,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":2478,"column":33,"nodeType":"1083","messageId":"1084","endLine":2478,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":2545,"column":13,"nodeType":"1083","messageId":"1084","endLine":2545,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":2546,"column":18,"nodeType":"1083","messageId":"1084","endLine":2546,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":2551,"column":13,"nodeType":"1083","messageId":"1084","endLine":2551,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":2552,"column":17,"nodeType":"1083","messageId":"1084","endLine":2552,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":2560,"column":22,"nodeType":"1062","messageId":"1063","endLine":2560,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":2560,"column":39,"nodeType":"1062","messageId":"1063","endLine":2560,"endColumn":41},{"ruleId":"1060","severity":1,"message":"1061","line":2565,"column":14,"nodeType":"1062","messageId":"1063","endLine":2565,"endColumn":16},{"ruleId":"1060","severity":1,"message":"1061","line":2565,"column":22,"nodeType":"1062","messageId":"1063","endLine":2565,"endColumn":24},{"ruleId":"1081","severity":1,"message":"1082","line":2589,"column":86,"nodeType":"1083","messageId":"1084","endLine":2589,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":2598,"column":112,"nodeType":"1083","messageId":"1084","endLine":2598,"endColumn":114},{"ruleId":"1081","severity":1,"message":"1082","line":2612,"column":32,"nodeType":"1083","messageId":"1084","endLine":2612,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":2618,"column":71,"nodeType":"1083","messageId":"1084","endLine":2618,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2619,"column":71,"nodeType":"1083","messageId":"1084","endLine":2619,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2620,"column":71,"nodeType":"1083","messageId":"1084","endLine":2620,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2621,"column":71,"nodeType":"1083","messageId":"1084","endLine":2621,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2622,"column":71,"nodeType":"1083","messageId":"1084","endLine":2622,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2623,"column":71,"nodeType":"1083","messageId":"1084","endLine":2623,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2643,"column":77,"nodeType":"1083","messageId":"1084","endLine":2643,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2644,"column":77,"nodeType":"1083","messageId":"1084","endLine":2644,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2645,"column":77,"nodeType":"1083","messageId":"1084","endLine":2645,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2646,"column":77,"nodeType":"1083","messageId":"1084","endLine":2646,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2647,"column":77,"nodeType":"1083","messageId":"1084","endLine":2647,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2648,"column":77,"nodeType":"1083","messageId":"1084","endLine":2648,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2684,"column":32,"nodeType":"1083","messageId":"1084","endLine":2684,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":2690,"column":71,"nodeType":"1083","messageId":"1084","endLine":2690,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2691,"column":71,"nodeType":"1083","messageId":"1084","endLine":2691,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2692,"column":71,"nodeType":"1083","messageId":"1084","endLine":2692,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2693,"column":71,"nodeType":"1083","messageId":"1084","endLine":2693,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2694,"column":71,"nodeType":"1083","messageId":"1084","endLine":2694,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2695,"column":71,"nodeType":"1083","messageId":"1084","endLine":2695,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":2715,"column":77,"nodeType":"1083","messageId":"1084","endLine":2715,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2716,"column":77,"nodeType":"1083","messageId":"1084","endLine":2716,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2717,"column":77,"nodeType":"1083","messageId":"1084","endLine":2717,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2718,"column":77,"nodeType":"1083","messageId":"1084","endLine":2718,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2719,"column":77,"nodeType":"1083","messageId":"1084","endLine":2719,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2720,"column":77,"nodeType":"1083","messageId":"1084","endLine":2720,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":2804,"column":28,"nodeType":"1083","messageId":"1084","endLine":2804,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":2857,"column":30,"nodeType":"1083","messageId":"1084","endLine":2857,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":2857,"column":72,"nodeType":"1083","messageId":"1084","endLine":2857,"endColumn":74},{"ruleId":"1081","severity":1,"message":"1082","line":3062,"column":20,"nodeType":"1083","messageId":"1084","endLine":3062,"endColumn":22},{"ruleId":"1081","severity":1,"message":"1082","line":3116,"column":22,"nodeType":"1083","messageId":"1084","endLine":3116,"endColumn":24},{"ruleId":"1068","severity":1,"message":"1121","line":3196,"column":6,"nodeType":"1070","endLine":3196,"endColumn":17,"suggestions":"1122"},{"ruleId":"1068","severity":1,"message":"1123","line":3201,"column":6,"nodeType":"1070","endLine":3201,"endColumn":17,"suggestions":"1124"},{"ruleId":"1068","severity":1,"message":"1125","line":3204,"column":6,"nodeType":"1070","endLine":3204,"endColumn":19,"suggestions":"1126"},{"ruleId":"1068","severity":1,"message":"1127","line":3204,"column":7,"nodeType":"1128","endLine":3204,"endColumn":18},{"ruleId":"1068","severity":1,"message":"1129","line":3208,"column":6,"nodeType":"1070","endLine":3208,"endColumn":35,"suggestions":"1130"},{"ruleId":"1068","severity":1,"message":"1127","line":3208,"column":7,"nodeType":"1128","endLine":3208,"endColumn":21},{"ruleId":"1068","severity":1,"message":"1127","line":3208,"column":23,"nodeType":"1128","endLine":3208,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":3258,"column":40,"nodeType":"1083","messageId":"1084","endLine":3258,"endColumn":42},{"ruleId":"1081","severity":1,"message":"1082","line":3272,"column":18,"nodeType":"1083","messageId":"1084","endLine":3272,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1089","line":3273,"column":41,"nodeType":"1083","messageId":"1084","endLine":3273,"endColumn":43},{"ruleId":"1081","severity":1,"message":"1082","line":3317,"column":18,"nodeType":"1083","messageId":"1084","endLine":3317,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":3317,"column":35,"nodeType":"1083","messageId":"1084","endLine":3317,"endColumn":37},{"ruleId":"1081","severity":1,"message":"1089","line":3318,"column":41,"nodeType":"1083","messageId":"1084","endLine":3318,"endColumn":43},{"ruleId":"1131","severity":1,"message":"1132","line":3326,"column":58,"nodeType":"1083","messageId":"1133","endLine":3326,"endColumn":59},{"ruleId":"1131","severity":1,"message":"1132","line":3327,"column":56,"nodeType":"1083","messageId":"1133","endLine":3327,"endColumn":57},{"ruleId":"1081","severity":1,"message":"1082","line":3362,"column":28,"nodeType":"1083","messageId":"1084","endLine":3362,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":3362,"column":70,"nodeType":"1083","messageId":"1084","endLine":3362,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":3369,"column":16,"nodeType":"1083","messageId":"1084","endLine":3369,"endColumn":18},{"ruleId":"1081","severity":1,"message":"1082","line":3372,"column":16,"nodeType":"1083","messageId":"1084","endLine":3372,"endColumn":18},{"ruleId":"1081","severity":1,"message":"1082","line":3398,"column":54,"nodeType":"1083","messageId":"1084","endLine":3398,"endColumn":56},{"ruleId":"1060","severity":1,"message":"1134","line":3398,"column":67,"nodeType":"1062","messageId":"1063","endLine":3398,"endColumn":69},{"ruleId":"1060","severity":1,"message":"1134","line":3398,"column":89,"nodeType":"1062","messageId":"1063","endLine":3398,"endColumn":91},{"ruleId":"1081","severity":1,"message":"1082","line":3398,"column":118,"nodeType":"1083","messageId":"1084","endLine":3398,"endColumn":120},{"ruleId":"1081","severity":1,"message":"1082","line":3415,"column":74,"nodeType":"1083","messageId":"1084","endLine":3415,"endColumn":76},{"ruleId":"1081","severity":1,"message":"1082","line":3425,"column":74,"nodeType":"1083","messageId":"1084","endLine":3425,"endColumn":76},{"ruleId":"1081","severity":1,"message":"1082","line":3453,"column":47,"nodeType":"1083","messageId":"1084","endLine":3453,"endColumn":49},{"ruleId":"1081","severity":1,"message":"1082","line":3459,"column":107,"nodeType":"1083","messageId":"1084","endLine":3459,"endColumn":109},{"ruleId":"1081","severity":1,"message":"1082","line":3459,"column":177,"nodeType":"1083","messageId":"1084","endLine":3459,"endColumn":179},{"ruleId":"1081","severity":1,"message":"1082","line":3518,"column":68,"nodeType":"1083","messageId":"1084","endLine":3518,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":3519,"column":70,"nodeType":"1083","messageId":"1084","endLine":3519,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":3537,"column":69,"nodeType":"1083","messageId":"1084","endLine":3537,"endColumn":71},{"ruleId":"1081","severity":1,"message":"1082","line":3559,"column":60,"nodeType":"1083","messageId":"1084","endLine":3559,"endColumn":62},{"ruleId":"1081","severity":1,"message":"1082","line":3559,"column":141,"nodeType":"1083","messageId":"1084","endLine":3559,"endColumn":143},{"ruleId":"1081","severity":1,"message":"1082","line":3574,"column":45,"nodeType":"1083","messageId":"1084","endLine":3574,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1082","line":3581,"column":116,"nodeType":"1083","messageId":"1084","endLine":3581,"endColumn":118},{"ruleId":"1081","severity":1,"message":"1082","line":3631,"column":68,"nodeType":"1083","messageId":"1084","endLine":3631,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":3644,"column":68,"nodeType":"1083","messageId":"1084","endLine":3644,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":3657,"column":68,"nodeType":"1083","messageId":"1084","endLine":3657,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":3688,"column":30,"nodeType":"1083","messageId":"1084","endLine":3688,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":3688,"column":50,"nodeType":"1083","messageId":"1084","endLine":3688,"endColumn":52},{"ruleId":"1081","severity":1,"message":"1082","line":3870,"column":14,"nodeType":"1083","messageId":"1084","endLine":3870,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":3870,"column":44,"nodeType":"1083","messageId":"1084","endLine":3870,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1085","line":3919,"column":6,"nodeType":"1070","endLine":3919,"endColumn":33,"suggestions":"1135"},{"ruleId":"1068","severity":1,"message":"1136","line":3924,"column":6,"nodeType":"1070","endLine":3924,"endColumn":17,"suggestions":"1137"},{"ruleId":"1081","severity":1,"message":"1089","line":3999,"column":61,"nodeType":"1083","messageId":"1084","endLine":3999,"endColumn":63},{"ruleId":"1081","severity":1,"message":"1082","line":4003,"column":61,"nodeType":"1083","messageId":"1084","endLine":4003,"endColumn":63},{"ruleId":"1081","severity":1,"message":"1082","line":4012,"column":66,"nodeType":"1083","messageId":"1084","endLine":4012,"endColumn":68},{"ruleId":"1081","severity":1,"message":"1082","line":4014,"column":31,"nodeType":"1083","messageId":"1084","endLine":4014,"endColumn":33},{"ruleId":"1081","severity":1,"message":"1082","line":4072,"column":13,"nodeType":"1083","messageId":"1084","endLine":4072,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":4073,"column":18,"nodeType":"1083","messageId":"1084","endLine":4073,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":4078,"column":13,"nodeType":"1083","messageId":"1084","endLine":4078,"endColumn":15},{"ruleId":"1081","severity":1,"message":"1082","line":4079,"column":17,"nodeType":"1083","messageId":"1084","endLine":4079,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":4087,"column":22,"nodeType":"1062","messageId":"1063","endLine":4087,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":4087,"column":39,"nodeType":"1062","messageId":"1063","endLine":4087,"endColumn":41},{"ruleId":"1060","severity":1,"message":"1061","line":4092,"column":22,"nodeType":"1062","messageId":"1063","endLine":4092,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":4092,"column":39,"nodeType":"1062","messageId":"1063","endLine":4092,"endColumn":41},{"ruleId":"1081","severity":1,"message":"1082","line":4123,"column":77,"nodeType":"1083","messageId":"1084","endLine":4123,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4131,"column":96,"nodeType":"1083","messageId":"1084","endLine":4131,"endColumn":98},{"ruleId":"1081","severity":1,"message":"1082","line":4148,"column":34,"nodeType":"1083","messageId":"1084","endLine":4148,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":4154,"column":73,"nodeType":"1083","messageId":"1084","endLine":4154,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":4155,"column":73,"nodeType":"1083","messageId":"1084","endLine":4155,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":4156,"column":73,"nodeType":"1083","messageId":"1084","endLine":4156,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":4157,"column":73,"nodeType":"1083","messageId":"1084","endLine":4157,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":4158,"column":73,"nodeType":"1083","messageId":"1084","endLine":4158,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":4159,"column":73,"nodeType":"1083","messageId":"1084","endLine":4159,"endColumn":75},{"ruleId":"1081","severity":1,"message":"1082","line":4179,"column":77,"nodeType":"1083","messageId":"1084","endLine":4179,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4180,"column":77,"nodeType":"1083","messageId":"1084","endLine":4180,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4181,"column":77,"nodeType":"1083","messageId":"1084","endLine":4181,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4182,"column":77,"nodeType":"1083","messageId":"1084","endLine":4182,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4183,"column":77,"nodeType":"1083","messageId":"1084","endLine":4183,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4184,"column":77,"nodeType":"1083","messageId":"1084","endLine":4184,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4220,"column":32,"nodeType":"1083","messageId":"1084","endLine":4220,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":4226,"column":71,"nodeType":"1083","messageId":"1084","endLine":4226,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":4227,"column":71,"nodeType":"1083","messageId":"1084","endLine":4227,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":4228,"column":71,"nodeType":"1083","messageId":"1084","endLine":4228,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":4229,"column":71,"nodeType":"1083","messageId":"1084","endLine":4229,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":4230,"column":71,"nodeType":"1083","messageId":"1084","endLine":4230,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":4231,"column":71,"nodeType":"1083","messageId":"1084","endLine":4231,"endColumn":73},{"ruleId":"1081","severity":1,"message":"1082","line":4251,"column":77,"nodeType":"1083","messageId":"1084","endLine":4251,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4252,"column":77,"nodeType":"1083","messageId":"1084","endLine":4252,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4253,"column":77,"nodeType":"1083","messageId":"1084","endLine":4253,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4254,"column":77,"nodeType":"1083","messageId":"1084","endLine":4254,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4255,"column":77,"nodeType":"1083","messageId":"1084","endLine":4255,"endColumn":79},{"ruleId":"1081","severity":1,"message":"1082","line":4256,"column":77,"nodeType":"1083","messageId":"1084","endLine":4256,"endColumn":79},{"ruleId":"1078","severity":1,"message":"1138","line":4286,"column":9,"nodeType":"1066","messageId":"1080","endLine":4286,"endColumn":17},{"ruleId":"1078","severity":1,"message":"1139","line":4287,"column":9,"nodeType":"1066","messageId":"1080","endLine":4287,"endColumn":19},{"ruleId":"1081","severity":1,"message":"1082","line":4331,"column":28,"nodeType":"1083","messageId":"1084","endLine":4331,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":4331,"column":70,"nodeType":"1083","messageId":"1084","endLine":4331,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":4485,"column":43,"nodeType":"1083","messageId":"1084","endLine":4485,"endColumn":45},{"ruleId":"1081","severity":1,"message":"1082","line":4489,"column":97,"nodeType":"1083","messageId":"1084","endLine":4489,"endColumn":99},{"ruleId":"1081","severity":1,"message":"1082","line":4514,"column":43,"nodeType":"1083","messageId":"1084","endLine":4514,"endColumn":45},{"ruleId":"1081","severity":1,"message":"1082","line":4518,"column":106,"nodeType":"1083","messageId":"1084","endLine":4518,"endColumn":108},{"ruleId":"1097","severity":1,"message":"1098","line":4536,"column":68,"nodeType":"1099","endLine":4536,"endColumn":154},{"ruleId":"1081","severity":1,"message":"1082","line":4581,"column":67,"nodeType":"1083","messageId":"1084","endLine":4581,"endColumn":69},{"ruleId":"1078","severity":1,"message":"1140","line":4696,"column":9,"nodeType":"1066","messageId":"1080","endLine":4696,"endColumn":18},{"ruleId":"1081","severity":1,"message":"1082","line":4721,"column":14,"nodeType":"1083","messageId":"1084","endLine":4721,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":4721,"column":44,"nodeType":"1083","messageId":"1084","endLine":4721,"endColumn":46},{"ruleId":"1081","severity":1,"message":"1082","line":4785,"column":45,"nodeType":"1083","messageId":"1084","endLine":4785,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1082","line":4795,"column":24,"nodeType":"1083","messageId":"1084","endLine":4795,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1082","line":4795,"column":58,"nodeType":"1083","messageId":"1084","endLine":4795,"endColumn":60},{"ruleId":"1081","severity":1,"message":"1082","line":4837,"column":26,"nodeType":"1083","messageId":"1084","endLine":4837,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":4837,"column":60,"nodeType":"1083","messageId":"1084","endLine":4837,"endColumn":62},{"ruleId":"1081","severity":1,"message":"1082","line":4898,"column":21,"nodeType":"1083","messageId":"1084","endLine":4898,"endColumn":23},{"ruleId":"1078","severity":1,"message":"1141","line":4906,"column":9,"nodeType":"1066","messageId":"1080","endLine":4906,"endColumn":25},{"ruleId":"1068","severity":1,"message":"1142","line":4933,"column":6,"nodeType":"1070","endLine":4933,"endColumn":29,"suggestions":"1143"},{"ruleId":"1068","severity":1,"message":"1144","line":4938,"column":6,"nodeType":"1070","endLine":4938,"endColumn":20,"suggestions":"1145"},{"ruleId":"1081","severity":1,"message":"1082","line":4985,"column":26,"nodeType":"1083","messageId":"1084","endLine":4985,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":4985,"column":60,"nodeType":"1083","messageId":"1084","endLine":4985,"endColumn":62},{"ruleId":"1081","severity":1,"message":"1082","line":5009,"column":80,"nodeType":"1083","messageId":"1084","endLine":5009,"endColumn":82},{"ruleId":"1097","severity":1,"message":"1098","line":5010,"column":31,"nodeType":"1099","endLine":5010,"endColumn":124},{"ruleId":"1081","severity":1,"message":"1082","line":5017,"column":53,"nodeType":"1083","messageId":"1084","endLine":5017,"endColumn":55},{"ruleId":"1097","severity":1,"message":"1098","line":5019,"column":29,"nodeType":"1099","endLine":5019,"endColumn":115},{"ruleId":"1081","severity":1,"message":"1082","line":5023,"column":33,"nodeType":"1083","messageId":"1084","endLine":5023,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":5024,"column":164,"nodeType":"1083","messageId":"1084","endLine":5024,"endColumn":166},{"ruleId":"1081","severity":1,"message":"1082","line":5092,"column":14,"nodeType":"1083","messageId":"1084","endLine":5092,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":5092,"column":44,"nodeType":"1083","messageId":"1084","endLine":5092,"endColumn":46},{"ruleId":"1081","severity":1,"message":"1082","line":5127,"column":46,"nodeType":"1083","messageId":"1084","endLine":5127,"endColumn":48},{"ruleId":"1081","severity":1,"message":"1082","line":5137,"column":25,"nodeType":"1083","messageId":"1084","endLine":5137,"endColumn":27},{"ruleId":"1081","severity":1,"message":"1082","line":5137,"column":60,"nodeType":"1083","messageId":"1084","endLine":5137,"endColumn":62},{"ruleId":"1078","severity":1,"message":"1146","line":5145,"column":15,"nodeType":"1066","messageId":"1080","endLine":5145,"endColumn":25},{"ruleId":"1081","severity":1,"message":"1082","line":5189,"column":27,"nodeType":"1083","messageId":"1084","endLine":5189,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":5189,"column":62,"nodeType":"1083","messageId":"1084","endLine":5189,"endColumn":64},{"ruleId":"1068","severity":1,"message":"1147","line":5253,"column":6,"nodeType":"1070","endLine":5253,"endColumn":29,"suggestions":"1148"},{"ruleId":"1068","severity":1,"message":"1144","line":5257,"column":6,"nodeType":"1070","endLine":5257,"endColumn":21,"suggestions":"1149"},{"ruleId":"1081","severity":1,"message":"1082","line":5262,"column":21,"nodeType":"1083","messageId":"1084","endLine":5262,"endColumn":23},{"ruleId":"1081","severity":1,"message":"1082","line":5315,"column":27,"nodeType":"1083","messageId":"1084","endLine":5315,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":5315,"column":62,"nodeType":"1083","messageId":"1084","endLine":5315,"endColumn":64},{"ruleId":"1081","severity":1,"message":"1082","line":5338,"column":80,"nodeType":"1083","messageId":"1084","endLine":5338,"endColumn":82},{"ruleId":"1097","severity":1,"message":"1098","line":5339,"column":31,"nodeType":"1099","endLine":5339,"endColumn":124},{"ruleId":"1081","severity":1,"message":"1082","line":5346,"column":53,"nodeType":"1083","messageId":"1084","endLine":5346,"endColumn":55},{"ruleId":"1097","severity":1,"message":"1098","line":5348,"column":29,"nodeType":"1099","endLine":5348,"endColumn":115},{"ruleId":"1081","severity":1,"message":"1082","line":5352,"column":33,"nodeType":"1083","messageId":"1084","endLine":5352,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":5353,"column":164,"nodeType":"1083","messageId":"1084","endLine":5353,"endColumn":166},{"ruleId":"1081","severity":1,"message":"1082","line":5434,"column":64,"nodeType":"1083","messageId":"1084","endLine":5434,"endColumn":66},{"ruleId":"1081","severity":1,"message":"1082","line":5501,"column":64,"nodeType":"1083","messageId":"1084","endLine":5501,"endColumn":66},{"ruleId":"1081","severity":1,"message":"1082","line":5553,"column":14,"nodeType":"1083","messageId":"1084","endLine":5553,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":5553,"column":44,"nodeType":"1083","messageId":"1084","endLine":5553,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1150","line":5582,"column":6,"nodeType":"1070","endLine":5582,"endColumn":17,"suggestions":"1151"},{"ruleId":"1081","severity":1,"message":"1082","line":5585,"column":16,"nodeType":"1083","messageId":"1084","endLine":5585,"endColumn":18},{"ruleId":"1081","severity":1,"message":"1082","line":5589,"column":16,"nodeType":"1083","messageId":"1084","endLine":5589,"endColumn":18},{"ruleId":"1081","severity":1,"message":"1082","line":5652,"column":25,"nodeType":"1083","messageId":"1084","endLine":5652,"endColumn":27},{"ruleId":"1081","severity":1,"message":"1082","line":5652,"column":58,"nodeType":"1083","messageId":"1084","endLine":5652,"endColumn":60},{"ruleId":"1081","severity":1,"message":"1082","line":5662,"column":50,"nodeType":"1083","messageId":"1084","endLine":5662,"endColumn":52},{"ruleId":"1097","severity":1,"message":"1098","line":5673,"column":116,"nodeType":"1099","endLine":5673,"endColumn":203},{"ruleId":"1081","severity":1,"message":"1082","line":5676,"column":33,"nodeType":"1083","messageId":"1084","endLine":5676,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":5677,"column":68,"nodeType":"1083","messageId":"1084","endLine":5677,"endColumn":70},{"ruleId":"1078","severity":1,"message":"1152","line":17,"column":10,"nodeType":"1066","messageId":"1080","endLine":17,"endColumn":21},{"ruleId":"1078","severity":1,"message":"1153","line":17,"column":23,"nodeType":"1066","messageId":"1080","endLine":17,"endColumn":37},{"ruleId":"1078","severity":1,"message":"1154","line":18,"column":10,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":21},{"ruleId":"1078","severity":1,"message":"1155","line":18,"column":23,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":37},{"ruleId":"1078","severity":1,"message":"1156","line":20,"column":10,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":22},{"ruleId":"1078","severity":1,"message":"1157","line":20,"column":24,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":39},{"ruleId":"1078","severity":1,"message":"1158","line":26,"column":10,"nodeType":"1066","messageId":"1080","endLine":26,"endColumn":12},{"ruleId":"1078","severity":1,"message":"1159","line":26,"column":13,"nodeType":"1066","messageId":"1080","endLine":26,"endColumn":18},{"ruleId":"1078","severity":1,"message":"1160","line":27,"column":15,"nodeType":"1066","messageId":"1080","endLine":27,"endColumn":22},{"ruleId":"1068","severity":1,"message":"1161","line":47,"column":6,"nodeType":"1070","endLine":47,"endColumn":49,"suggestions":"1162"},{"ruleId":"1081","severity":1,"message":"1082","line":59,"column":19,"nodeType":"1083","messageId":"1084","endLine":59,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":59,"column":45,"nodeType":"1083","messageId":"1084","endLine":59,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":65,"column":26,"nodeType":"1083","messageId":"1084","endLine":65,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":73,"column":19,"nodeType":"1083","messageId":"1084","endLine":73,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":79,"column":26,"nodeType":"1083","messageId":"1084","endLine":79,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":88,"column":19,"nodeType":"1083","messageId":"1084","endLine":88,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":94,"column":26,"nodeType":"1083","messageId":"1084","endLine":94,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":107,"column":19,"nodeType":"1083","messageId":"1084","endLine":107,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":107,"column":45,"nodeType":"1083","messageId":"1084","endLine":107,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":113,"column":26,"nodeType":"1083","messageId":"1084","endLine":113,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":121,"column":19,"nodeType":"1083","messageId":"1084","endLine":121,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":127,"column":26,"nodeType":"1083","messageId":"1084","endLine":127,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":136,"column":19,"nodeType":"1083","messageId":"1084","endLine":136,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":142,"column":26,"nodeType":"1083","messageId":"1084","endLine":142,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":155,"column":19,"nodeType":"1083","messageId":"1084","endLine":155,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":155,"column":45,"nodeType":"1083","messageId":"1084","endLine":155,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":161,"column":27,"nodeType":"1083","messageId":"1084","endLine":161,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":168,"column":19,"nodeType":"1083","messageId":"1084","endLine":168,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":174,"column":27,"nodeType":"1083","messageId":"1084","endLine":174,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":181,"column":19,"nodeType":"1083","messageId":"1084","endLine":181,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":187,"column":27,"nodeType":"1083","messageId":"1084","endLine":187,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":198,"column":19,"nodeType":"1083","messageId":"1084","endLine":198,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":198,"column":45,"nodeType":"1083","messageId":"1084","endLine":198,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":204,"column":30,"nodeType":"1083","messageId":"1084","endLine":204,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":211,"column":19,"nodeType":"1083","messageId":"1084","endLine":211,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":217,"column":30,"nodeType":"1083","messageId":"1084","endLine":217,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":224,"column":19,"nodeType":"1083","messageId":"1084","endLine":224,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":230,"column":30,"nodeType":"1083","messageId":"1084","endLine":230,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":242,"column":19,"nodeType":"1083","messageId":"1084","endLine":242,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":242,"column":45,"nodeType":"1083","messageId":"1084","endLine":242,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":248,"column":28,"nodeType":"1083","messageId":"1084","endLine":248,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":256,"column":19,"nodeType":"1083","messageId":"1084","endLine":256,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":262,"column":28,"nodeType":"1083","messageId":"1084","endLine":262,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":270,"column":19,"nodeType":"1083","messageId":"1084","endLine":270,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":276,"column":28,"nodeType":"1083","messageId":"1084","endLine":276,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":288,"column":19,"nodeType":"1083","messageId":"1084","endLine":288,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":288,"column":45,"nodeType":"1083","messageId":"1084","endLine":288,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":294,"column":29,"nodeType":"1083","messageId":"1084","endLine":294,"endColumn":31},{"ruleId":"1081","severity":1,"message":"1082","line":302,"column":19,"nodeType":"1083","messageId":"1084","endLine":302,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":308,"column":29,"nodeType":"1083","messageId":"1084","endLine":308,"endColumn":31},{"ruleId":"1081","severity":1,"message":"1082","line":316,"column":19,"nodeType":"1083","messageId":"1084","endLine":316,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":322,"column":29,"nodeType":"1083","messageId":"1084","endLine":322,"endColumn":31},{"ruleId":"1081","severity":1,"message":"1082","line":334,"column":19,"nodeType":"1083","messageId":"1084","endLine":334,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":334,"column":45,"nodeType":"1083","messageId":"1084","endLine":334,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1089","line":340,"column":34,"nodeType":"1083","messageId":"1084","endLine":340,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":348,"column":19,"nodeType":"1083","messageId":"1084","endLine":348,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":354,"column":34,"nodeType":"1083","messageId":"1084","endLine":354,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":362,"column":19,"nodeType":"1083","messageId":"1084","endLine":362,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":368,"column":34,"nodeType":"1083","messageId":"1084","endLine":368,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":382,"column":58,"nodeType":"1083","messageId":"1084","endLine":382,"endColumn":60},{"ruleId":"1081","severity":1,"message":"1089","line":387,"column":32,"nodeType":"1083","messageId":"1084","endLine":387,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":400,"column":19,"nodeType":"1083","messageId":"1084","endLine":400,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":400,"column":37,"nodeType":"1083","messageId":"1084","endLine":400,"endColumn":39},{"ruleId":"1081","severity":1,"message":"1089","line":406,"column":32,"nodeType":"1083","messageId":"1084","endLine":406,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":413,"column":19,"nodeType":"1083","messageId":"1084","endLine":413,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":419,"column":32,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":426,"column":19,"nodeType":"1083","messageId":"1084","endLine":426,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1089","line":432,"column":32,"nodeType":"1083","messageId":"1084","endLine":432,"endColumn":34},{"ruleId":"1078","severity":1,"message":"1163","line":442,"column":12,"nodeType":"1066","messageId":"1080","endLine":442,"endColumn":27},{"ruleId":"1164","severity":1,"message":"1165","line":460,"column":50,"nodeType":"1166","messageId":"1167","endLine":460,"endColumn":52},{"ruleId":"1081","severity":1,"message":"1082","line":461,"column":24,"nodeType":"1083","messageId":"1084","endLine":461,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1082","line":478,"column":12,"nodeType":"1083","messageId":"1084","endLine":478,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":482,"column":12,"nodeType":"1083","messageId":"1084","endLine":482,"endColumn":14},{"ruleId":"1097","severity":1,"message":"1098","line":555,"column":101,"nodeType":"1099","endLine":555,"endColumn":192},{"ruleId":"1097","severity":1,"message":"1098","line":565,"column":101,"nodeType":"1099","endLine":565,"endColumn":192},{"ruleId":"1081","severity":1,"message":"1082","line":598,"column":59,"nodeType":"1083","messageId":"1084","endLine":598,"endColumn":61},{"ruleId":"1081","severity":1,"message":"1082","line":665,"column":59,"nodeType":"1083","messageId":"1084","endLine":665,"endColumn":61},{"ruleId":"1081","severity":1,"message":"1082","line":743,"column":59,"nodeType":"1083","messageId":"1084","endLine":743,"endColumn":61},{"ruleId":"1081","severity":1,"message":"1082","line":821,"column":59,"nodeType":"1083","messageId":"1084","endLine":821,"endColumn":61},{"ruleId":"1097","severity":1,"message":"1098","line":923,"column":101,"nodeType":"1099","endLine":923,"endColumn":192},{"ruleId":"1081","severity":1,"message":"1082","line":968,"column":61,"nodeType":"1083","messageId":"1084","endLine":968,"endColumn":63},{"ruleId":"1097","severity":1,"message":"1098","line":1063,"column":101,"nodeType":"1099","endLine":1063,"endColumn":222},{"ruleId":"1081","severity":1,"message":"1082","line":1098,"column":55,"nodeType":"1083","messageId":"1084","endLine":1098,"endColumn":57},{"ruleId":"1081","severity":1,"message":"1082","line":1167,"column":55,"nodeType":"1083","messageId":"1084","endLine":1167,"endColumn":57},{"ruleId":"1078","severity":1,"message":"1168","line":2,"column":43,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":49},{"ruleId":"1078","severity":1,"message":"1169","line":7,"column":39,"nodeType":"1066","messageId":"1080","endLine":7,"endColumn":48},{"ruleId":"1078","severity":1,"message":"1170","line":10,"column":54,"nodeType":"1066","messageId":"1080","endLine":10,"endColumn":74},{"ruleId":"1078","severity":1,"message":"1171","line":12,"column":10,"nodeType":"1066","messageId":"1080","endLine":12,"endColumn":31},{"ruleId":"1078","severity":1,"message":"1172","line":72,"column":9,"nodeType":"1066","messageId":"1080","endLine":72,"endColumn":24},{"ruleId":"1078","severity":1,"message":"1173","line":122,"column":12,"nodeType":"1066","messageId":"1080","endLine":122,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1082","line":253,"column":16,"nodeType":"1083","messageId":"1084","endLine":253,"endColumn":18},{"ruleId":"1078","severity":1,"message":"1174","line":283,"column":7,"nodeType":"1066","messageId":"1080","endLine":283,"endColumn":14},{"ruleId":"1078","severity":1,"message":"1175","line":293,"column":23,"nodeType":"1066","messageId":"1080","endLine":293,"endColumn":37},{"ruleId":"1081","severity":1,"message":"1089","line":374,"column":53,"nodeType":"1083","messageId":"1084","endLine":374,"endColumn":55},{"ruleId":"1081","severity":1,"message":"1082","line":376,"column":22,"nodeType":"1083","messageId":"1084","endLine":376,"endColumn":24},{"ruleId":"1081","severity":1,"message":"1082","line":399,"column":16,"nodeType":"1083","messageId":"1084","endLine":399,"endColumn":18},{"ruleId":"1164","severity":1,"message":"1165","line":450,"column":41,"nodeType":"1166","messageId":"1167","endLine":450,"endColumn":43},{"ruleId":"1068","severity":1,"message":"1176","line":465,"column":6,"nodeType":"1070","endLine":465,"endColumn":8,"suggestions":"1177"},{"ruleId":"1068","severity":1,"message":"1176","line":469,"column":6,"nodeType":"1070","endLine":469,"endColumn":40,"suggestions":"1178"},{"ruleId":"1081","severity":1,"message":"1082","line":490,"column":18,"nodeType":"1083","messageId":"1084","endLine":490,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":501,"column":18,"nodeType":"1083","messageId":"1084","endLine":501,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1089","line":526,"column":20,"nodeType":"1083","messageId":"1084","endLine":526,"endColumn":22},{"ruleId":"1131","severity":1,"message":"1132","line":527,"column":20,"nodeType":"1083","messageId":"1133","endLine":527,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":545,"column":132,"nodeType":"1083","messageId":"1084","endLine":545,"endColumn":134},{"ruleId":"1081","severity":1,"message":"1082","line":646,"column":14,"nodeType":"1083","messageId":"1084","endLine":646,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":646,"column":44,"nodeType":"1083","messageId":"1084","endLine":646,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1179","line":668,"column":6,"nodeType":"1070","endLine":668,"endColumn":32,"suggestions":"1180"},{"ruleId":"1081","severity":1,"message":"1082","line":765,"column":51,"nodeType":"1083","messageId":"1084","endLine":765,"endColumn":53},{"ruleId":"1097","severity":1,"message":"1098","line":777,"column":119,"nodeType":"1099","endLine":777,"endColumn":209},{"ruleId":"1081","severity":1,"message":"1082","line":778,"column":33,"nodeType":"1083","messageId":"1084","endLine":778,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":781,"column":117,"nodeType":"1083","messageId":"1084","endLine":781,"endColumn":119},{"ruleId":"1081","severity":1,"message":"1082","line":868,"column":14,"nodeType":"1083","messageId":"1084","endLine":868,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":868,"column":44,"nodeType":"1083","messageId":"1084","endLine":868,"endColumn":46},{"ruleId":"1068","severity":1,"message":"1181","line":890,"column":6,"nodeType":"1070","endLine":890,"endColumn":32,"suggestions":"1182"},{"ruleId":"1081","severity":1,"message":"1082","line":936,"column":49,"nodeType":"1083","messageId":"1084","endLine":936,"endColumn":51},{"ruleId":"1097","severity":1,"message":"1098","line":948,"column":118,"nodeType":"1099","endLine":948,"endColumn":208},{"ruleId":"1081","severity":1,"message":"1082","line":949,"column":33,"nodeType":"1083","messageId":"1084","endLine":949,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":950,"column":104,"nodeType":"1083","messageId":"1084","endLine":950,"endColumn":106},{"ruleId":"1097","severity":1,"message":"1098","line":957,"column":60,"nodeType":"1099","endLine":957,"endColumn":154},{"ruleId":"1078","severity":1,"message":"1174","line":1004,"column":7,"nodeType":"1066","messageId":"1080","endLine":1004,"endColumn":14},{"ruleId":"1078","severity":1,"message":"1183","line":1008,"column":7,"nodeType":"1066","messageId":"1080","endLine":1008,"endColumn":18},{"ruleId":"1078","severity":1,"message":"1184","line":1014,"column":10,"nodeType":"1066","messageId":"1080","endLine":1014,"endColumn":14},{"ruleId":"1078","severity":1,"message":"1185","line":1014,"column":16,"nodeType":"1066","messageId":"1080","endLine":1014,"endColumn":23},{"ruleId":"1081","severity":1,"message":"1082","line":1022,"column":15,"nodeType":"1083","messageId":"1084","endLine":1022,"endColumn":17},{"ruleId":"1186","severity":1,"message":"1187","line":1023,"column":14,"nodeType":"1099","messageId":"1188","endLine":1023,"endColumn":151},{"ruleId":"1081","severity":1,"message":"1082","line":1025,"column":15,"nodeType":"1083","messageId":"1084","endLine":1025,"endColumn":17},{"ruleId":"1186","severity":1,"message":"1189","line":1026,"column":14,"nodeType":"1099","messageId":"1188","endLine":1026,"endColumn":150},{"ruleId":"1081","severity":1,"message":"1082","line":1028,"column":14,"nodeType":"1083","messageId":"1084","endLine":1028,"endColumn":16},{"ruleId":"1186","severity":1,"message":"1190","line":1029,"column":14,"nodeType":"1099","messageId":"1188","endLine":1029,"endColumn":151},{"ruleId":"1081","severity":1,"message":"1082","line":1045,"column":91,"nodeType":"1083","messageId":"1084","endLine":1045,"endColumn":93},{"ruleId":"1078","severity":1,"message":"1191","line":5,"column":10,"nodeType":"1066","messageId":"1080","endLine":5,"endColumn":19},{"ruleId":"1078","severity":1,"message":"1192","line":23,"column":10,"nodeType":"1066","messageId":"1080","endLine":23,"endColumn":18},{"ruleId":"1164","severity":1,"message":"1165","line":35,"column":54,"nodeType":"1166","messageId":"1167","endLine":35,"endColumn":56},{"ruleId":"1068","severity":1,"message":"1193","line":56,"column":6,"nodeType":"1070","endLine":56,"endColumn":8,"suggestions":"1194"},{"ruleId":"1068","severity":1,"message":"1193","line":59,"column":6,"nodeType":"1070","endLine":59,"endColumn":66,"suggestions":"1195"},{"ruleId":"1081","severity":1,"message":"1089","line":87,"column":24,"nodeType":"1083","messageId":"1084","endLine":87,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1089","line":102,"column":24,"nodeType":"1083","messageId":"1084","endLine":102,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1089","line":118,"column":25,"nodeType":"1083","messageId":"1084","endLine":118,"endColumn":27},{"ruleId":"1081","severity":1,"message":"1089","line":134,"column":28,"nodeType":"1083","messageId":"1084","endLine":134,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1089","line":150,"column":26,"nodeType":"1083","messageId":"1084","endLine":150,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1089","line":165,"column":27,"nodeType":"1083","messageId":"1084","endLine":165,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1089","line":181,"column":32,"nodeType":"1083","messageId":"1084","endLine":181,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1089","line":195,"column":30,"nodeType":"1083","messageId":"1084","endLine":195,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1089","line":210,"column":30,"nodeType":"1083","messageId":"1084","endLine":210,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":224,"column":57,"nodeType":"1083","messageId":"1084","endLine":224,"endColumn":59},{"ruleId":"1081","severity":1,"message":"1089","line":229,"column":32,"nodeType":"1083","messageId":"1084","endLine":229,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1089","line":247,"column":30,"nodeType":"1083","messageId":"1084","endLine":247,"endColumn":32},{"ruleId":"1164","severity":1,"message":"1165","line":270,"column":49,"nodeType":"1166","messageId":"1167","endLine":270,"endColumn":51},{"ruleId":"1081","severity":1,"message":"1082","line":271,"column":24,"nodeType":"1083","messageId":"1084","endLine":271,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1082","line":399,"column":41,"nodeType":"1083","messageId":"1084","endLine":399,"endColumn":43},{"ruleId":"1081","severity":1,"message":"1082","line":475,"column":41,"nodeType":"1083","messageId":"1084","endLine":475,"endColumn":43},{"ruleId":"1068","severity":1,"message":"1196","line":29,"column":6,"nodeType":"1070","endLine":29,"endColumn":36,"suggestions":"1197"},{"ruleId":"1081","severity":1,"message":"1082","line":45,"column":65,"nodeType":"1083","messageId":"1084","endLine":45,"endColumn":67},{"ruleId":"1081","severity":1,"message":"1082","line":46,"column":70,"nodeType":"1083","messageId":"1084","endLine":46,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":58,"column":65,"nodeType":"1083","messageId":"1084","endLine":58,"endColumn":67},{"ruleId":"1078","severity":1,"message":"1198","line":62,"column":43,"nodeType":"1066","messageId":"1080","endLine":62,"endColumn":54},{"ruleId":"1081","severity":1,"message":"1089","line":76,"column":57,"nodeType":"1083","messageId":"1084","endLine":76,"endColumn":59},{"ruleId":"1081","severity":1,"message":"1082","line":78,"column":38,"nodeType":"1083","messageId":"1084","endLine":78,"endColumn":40},{"ruleId":"1081","severity":1,"message":"1089","line":81,"column":47,"nodeType":"1083","messageId":"1084","endLine":81,"endColumn":49},{"ruleId":"1081","severity":1,"message":"1089","line":83,"column":54,"nodeType":"1083","messageId":"1084","endLine":83,"endColumn":56},{"ruleId":"1081","severity":1,"message":"1089","line":83,"column":193,"nodeType":"1083","messageId":"1084","endLine":83,"endColumn":195},{"ruleId":"1081","severity":1,"message":"1089","line":88,"column":54,"nodeType":"1083","messageId":"1084","endLine":88,"endColumn":56},{"ruleId":"1081","severity":1,"message":"1089","line":88,"column":199,"nodeType":"1083","messageId":"1084","endLine":88,"endColumn":201},{"ruleId":"1081","severity":1,"message":"1082","line":99,"column":47,"nodeType":"1083","messageId":"1084","endLine":99,"endColumn":49},{"ruleId":"1068","severity":1,"message":"1199","line":132,"column":6,"nodeType":"1070","endLine":132,"endColumn":42,"suggestions":"1200"},{"ruleId":"1131","severity":1,"message":"1132","line":216,"column":42,"nodeType":"1083","messageId":"1133","endLine":216,"endColumn":43},{"ruleId":"1081","severity":1,"message":"1082","line":292,"column":35,"nodeType":"1083","messageId":"1084","endLine":292,"endColumn":37},{"ruleId":"1081","severity":1,"message":"1082","line":292,"column":56,"nodeType":"1083","messageId":"1084","endLine":292,"endColumn":58},{"ruleId":"1081","severity":1,"message":"1082","line":306,"column":62,"nodeType":"1083","messageId":"1084","endLine":306,"endColumn":64},{"ruleId":"1081","severity":1,"message":"1082","line":343,"column":25,"nodeType":"1083","messageId":"1084","endLine":343,"endColumn":27},{"ruleId":"1081","severity":1,"message":"1082","line":343,"column":60,"nodeType":"1083","messageId":"1084","endLine":343,"endColumn":62},{"ruleId":"1078","severity":1,"message":"1201","line":2,"column":17,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":27},{"ruleId":"1078","severity":1,"message":"1202","line":16,"column":92,"nodeType":"1066","messageId":"1080","endLine":16,"endColumn":99},{"ruleId":"1068","severity":1,"message":"1203","line":112,"column":6,"nodeType":"1070","endLine":112,"endColumn":16,"suggestions":"1204"},{"ruleId":"1081","severity":1,"message":"1082","line":122,"column":26,"nodeType":"1083","messageId":"1084","endLine":122,"endColumn":28},{"ruleId":"1081","severity":1,"message":"1082","line":127,"column":20,"nodeType":"1083","messageId":"1084","endLine":127,"endColumn":22},{"ruleId":"1205","severity":1,"message":"1206","line":129,"column":15,"nodeType":"1099","endLine":129,"endColumn":141},{"ruleId":"1081","severity":1,"message":"1089","line":262,"column":226,"nodeType":"1083","messageId":"1084","endLine":262,"endColumn":228},{"ruleId":"1081","severity":1,"message":"1082","line":262,"column":274,"nodeType":"1083","messageId":"1084","endLine":262,"endColumn":276},{"ruleId":"1207","severity":1,"message":"1208","line":265,"column":25,"nodeType":"1099","endLine":265,"endColumn":147},{"ruleId":"1207","severity":1,"message":"1208","line":271,"column":25,"nodeType":"1099","endLine":271,"endColumn":108},{"ruleId":"1081","severity":1,"message":"1082","line":287,"column":106,"nodeType":"1083","messageId":"1084","endLine":287,"endColumn":108},{"ruleId":"1207","severity":1,"message":"1209","line":295,"column":65,"nodeType":"1099","endLine":295,"endColumn":110},{"ruleId":"1068","severity":1,"message":"1210","line":32,"column":8,"nodeType":"1070","endLine":32,"endColumn":26,"suggestions":"1211"},{"ruleId":"1081","severity":1,"message":"1082","line":54,"column":57,"nodeType":"1083","messageId":"1084","endLine":54,"endColumn":59},{"ruleId":"1078","severity":1,"message":"1212","line":8,"column":10,"nodeType":"1066","messageId":"1080","endLine":8,"endColumn":23},{"ruleId":"1078","severity":1,"message":"1213","line":18,"column":10,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":27},{"ruleId":"1078","severity":1,"message":"1214","line":34,"column":10,"nodeType":"1066","messageId":"1080","endLine":34,"endColumn":23},{"ruleId":"1078","severity":1,"message":"1215","line":45,"column":10,"nodeType":"1066","messageId":"1080","endLine":45,"endColumn":16},{"ruleId":"1078","severity":1,"message":"1216","line":60,"column":12,"nodeType":"1066","messageId":"1080","endLine":60,"endColumn":20},{"ruleId":"1068","severity":1,"message":"1217","line":89,"column":6,"nodeType":"1070","endLine":89,"endColumn":23,"suggestions":"1218"},{"ruleId":"1081","severity":1,"message":"1082","line":106,"column":18,"nodeType":"1083","messageId":"1084","endLine":106,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":117,"column":18,"nodeType":"1083","messageId":"1084","endLine":117,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":243,"column":18,"nodeType":"1083","messageId":"1084","endLine":243,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":304,"column":15,"nodeType":"1083","messageId":"1084","endLine":304,"endColumn":17},{"ruleId":"1081","severity":1,"message":"1082","line":320,"column":72,"nodeType":"1083","messageId":"1084","endLine":320,"endColumn":74},{"ruleId":"1081","severity":1,"message":"1082","line":350,"column":15,"nodeType":"1083","messageId":"1084","endLine":350,"endColumn":17},{"ruleId":"1081","severity":1,"message":"1082","line":366,"column":72,"nodeType":"1083","messageId":"1084","endLine":366,"endColumn":74},{"ruleId":"1219","severity":1,"message":"1220","line":397,"column":3,"nodeType":"1221","messageId":"1222","endLine":578,"endColumn":5},{"ruleId":"1223","severity":1,"message":"1224","line":397,"column":3,"nodeType":"1066","messageId":"1225","endLine":397,"endColumn":8},{"ruleId":"1081","severity":1,"message":"1082","line":424,"column":27,"nodeType":"1083","messageId":"1084","endLine":424,"endColumn":29},{"ruleId":"1081","severity":1,"message":"1082","line":426,"column":72,"nodeType":"1083","messageId":"1084","endLine":426,"endColumn":74},{"ruleId":"1081","severity":1,"message":"1082","line":428,"column":35,"nodeType":"1083","messageId":"1084","endLine":428,"endColumn":37},{"ruleId":"1081","severity":1,"message":"1082","line":429,"column":62,"nodeType":"1083","messageId":"1084","endLine":429,"endColumn":64},{"ruleId":"1081","severity":1,"message":"1082","line":472,"column":28,"nodeType":"1083","messageId":"1084","endLine":472,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":483,"column":46,"nodeType":"1083","messageId":"1084","endLine":483,"endColumn":48},{"ruleId":"1081","severity":1,"message":"1082","line":542,"column":190,"nodeType":"1083","messageId":"1084","endLine":542,"endColumn":192},{"ruleId":"1081","severity":1,"message":"1082","line":548,"column":207,"nodeType":"1083","messageId":"1084","endLine":548,"endColumn":209},{"ruleId":"1081","severity":1,"message":"1082","line":553,"column":41,"nodeType":"1083","messageId":"1084","endLine":553,"endColumn":43},{"ruleId":"1081","severity":1,"message":"1082","line":554,"column":68,"nodeType":"1083","messageId":"1084","endLine":554,"endColumn":70},{"ruleId":"1081","severity":1,"message":"1082","line":560,"column":201,"nodeType":"1083","messageId":"1084","endLine":560,"endColumn":203},{"ruleId":"1081","severity":1,"message":"1082","line":624,"column":37,"nodeType":"1083","messageId":"1084","endLine":624,"endColumn":39},{"ruleId":"1068","severity":1,"message":"1203","line":685,"column":6,"nodeType":"1070","endLine":685,"endColumn":23,"suggestions":"1226"},{"ruleId":"1081","severity":1,"message":"1082","line":689,"column":25,"nodeType":"1083","messageId":"1084","endLine":689,"endColumn":27},{"ruleId":"1068","severity":1,"message":"1227","line":694,"column":6,"nodeType":"1070","endLine":694,"endColumn":16,"suggestions":"1228"},{"ruleId":"1097","severity":1,"message":"1098","line":717,"column":80,"nodeType":"1099","endLine":717,"endColumn":164},{"ruleId":"1097","severity":1,"message":"1098","line":763,"column":137,"nodeType":"1099","endLine":763,"endColumn":275},{"ruleId":"1081","severity":1,"message":"1082","line":39,"column":18,"nodeType":"1083","messageId":"1084","endLine":39,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":43,"column":18,"nodeType":"1083","messageId":"1084","endLine":43,"endColumn":20},{"ruleId":"1081","severity":1,"message":"1082","line":99,"column":32,"nodeType":"1083","messageId":"1084","endLine":99,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":100,"column":31,"nodeType":"1083","messageId":"1084","endLine":100,"endColumn":33},{"ruleId":"1081","severity":1,"message":"1082","line":385,"column":130,"nodeType":"1083","messageId":"1084","endLine":385,"endColumn":132},{"ruleId":"1081","severity":1,"message":"1082","line":385,"column":150,"nodeType":"1083","messageId":"1084","endLine":385,"endColumn":152},{"ruleId":"1081","severity":1,"message":"1082","line":385,"column":193,"nodeType":"1083","messageId":"1084","endLine":385,"endColumn":195},{"ruleId":"1081","severity":1,"message":"1082","line":385,"column":213,"nodeType":"1083","messageId":"1084","endLine":385,"endColumn":215},{"ruleId":"1081","severity":1,"message":"1082","line":385,"column":266,"nodeType":"1083","messageId":"1084","endLine":385,"endColumn":268},{"ruleId":"1081","severity":1,"message":"1082","line":385,"column":286,"nodeType":"1083","messageId":"1084","endLine":385,"endColumn":288},{"ruleId":"1081","severity":1,"message":"1082","line":386,"column":86,"nodeType":"1083","messageId":"1084","endLine":386,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":386,"column":106,"nodeType":"1083","messageId":"1084","endLine":386,"endColumn":108},{"ruleId":"1081","severity":1,"message":"1082","line":386,"column":149,"nodeType":"1083","messageId":"1084","endLine":386,"endColumn":151},{"ruleId":"1081","severity":1,"message":"1082","line":386,"column":169,"nodeType":"1083","messageId":"1084","endLine":386,"endColumn":171},{"ruleId":"1081","severity":1,"message":"1082","line":386,"column":222,"nodeType":"1083","messageId":"1084","endLine":386,"endColumn":224},{"ruleId":"1081","severity":1,"message":"1082","line":386,"column":242,"nodeType":"1083","messageId":"1084","endLine":386,"endColumn":244},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":130,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":132},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":152,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":154},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":197,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":199},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":219,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":221},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":274,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":276},{"ruleId":"1081","severity":1,"message":"1082","line":388,"column":296,"nodeType":"1083","messageId":"1084","endLine":388,"endColumn":298},{"ruleId":"1081","severity":1,"message":"1082","line":389,"column":86,"nodeType":"1083","messageId":"1084","endLine":389,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":389,"column":108,"nodeType":"1083","messageId":"1084","endLine":389,"endColumn":110},{"ruleId":"1081","severity":1,"message":"1082","line":389,"column":153,"nodeType":"1083","messageId":"1084","endLine":389,"endColumn":155},{"ruleId":"1081","severity":1,"message":"1082","line":389,"column":175,"nodeType":"1083","messageId":"1084","endLine":389,"endColumn":177},{"ruleId":"1081","severity":1,"message":"1082","line":389,"column":230,"nodeType":"1083","messageId":"1084","endLine":389,"endColumn":232},{"ruleId":"1081","severity":1,"message":"1082","line":389,"column":252,"nodeType":"1083","messageId":"1084","endLine":389,"endColumn":254},{"ruleId":"1081","severity":1,"message":"1082","line":391,"column":130,"nodeType":"1083","messageId":"1084","endLine":391,"endColumn":132},{"ruleId":"1081","severity":1,"message":"1082","line":391,"column":152,"nodeType":"1083","messageId":"1084","endLine":391,"endColumn":154},{"ruleId":"1081","severity":1,"message":"1082","line":391,"column":197,"nodeType":"1083","messageId":"1084","endLine":391,"endColumn":199},{"ruleId":"1081","severity":1,"message":"1082","line":391,"column":219,"nodeType":"1083","messageId":"1084","endLine":391,"endColumn":221},{"ruleId":"1081","severity":1,"message":"1082","line":391,"column":266,"nodeType":"1083","messageId":"1084","endLine":391,"endColumn":268},{"ruleId":"1081","severity":1,"message":"1082","line":391,"column":288,"nodeType":"1083","messageId":"1084","endLine":391,"endColumn":290},{"ruleId":"1081","severity":1,"message":"1082","line":392,"column":86,"nodeType":"1083","messageId":"1084","endLine":392,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":392,"column":108,"nodeType":"1083","messageId":"1084","endLine":392,"endColumn":110},{"ruleId":"1081","severity":1,"message":"1082","line":392,"column":153,"nodeType":"1083","messageId":"1084","endLine":392,"endColumn":155},{"ruleId":"1081","severity":1,"message":"1082","line":392,"column":175,"nodeType":"1083","messageId":"1084","endLine":392,"endColumn":177},{"ruleId":"1081","severity":1,"message":"1082","line":392,"column":230,"nodeType":"1083","messageId":"1084","endLine":392,"endColumn":232},{"ruleId":"1081","severity":1,"message":"1082","line":392,"column":252,"nodeType":"1083","messageId":"1084","endLine":392,"endColumn":254},{"ruleId":"1078","severity":1,"message":"1105","line":23,"column":12,"nodeType":"1066","messageId":"1080","endLine":23,"endColumn":21},{"ruleId":"1068","severity":1,"message":"1229","line":35,"column":8,"nodeType":"1070","endLine":35,"endColumn":10,"suggestions":"1230"},{"ruleId":"1068","severity":1,"message":"1231","line":43,"column":7,"nodeType":"1070","endLine":43,"endColumn":34,"suggestions":"1232"},{"ruleId":"1081","severity":1,"message":"1089","line":96,"column":61,"nodeType":"1083","messageId":"1084","endLine":96,"endColumn":63},{"ruleId":"1081","severity":1,"message":"1082","line":163,"column":40,"nodeType":"1083","messageId":"1084","endLine":163,"endColumn":42},{"ruleId":"1081","severity":1,"message":"1082","line":175,"column":58,"nodeType":"1083","messageId":"1084","endLine":175,"endColumn":60},{"ruleId":"1081","severity":1,"message":"1082","line":177,"column":58,"nodeType":"1083","messageId":"1084","endLine":177,"endColumn":60},{"ruleId":"1081","severity":1,"message":"1082","line":186,"column":36,"nodeType":"1083","messageId":"1084","endLine":186,"endColumn":38},{"ruleId":"1081","severity":1,"message":"1082","line":186,"column":59,"nodeType":"1083","messageId":"1084","endLine":186,"endColumn":61},{"ruleId":"1081","severity":1,"message":"1082","line":189,"column":47,"nodeType":"1083","messageId":"1084","endLine":189,"endColumn":49},{"ruleId":"1081","severity":1,"message":"1082","line":209,"column":64,"nodeType":"1083","messageId":"1084","endLine":209,"endColumn":66},{"ruleId":"1081","severity":1,"message":"1082","line":209,"column":171,"nodeType":"1083","messageId":"1084","endLine":209,"endColumn":173},{"ruleId":"1081","severity":1,"message":"1082","line":244,"column":45,"nodeType":"1083","messageId":"1084","endLine":244,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1082","line":245,"column":93,"nodeType":"1083","messageId":"1084","endLine":245,"endColumn":95},{"ruleId":"1081","severity":1,"message":"1082","line":245,"column":120,"nodeType":"1083","messageId":"1084","endLine":245,"endColumn":122},{"ruleId":"1078","severity":1,"message":"1233","line":2,"column":20,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":29},{"ruleId":"1078","severity":1,"message":"1234","line":12,"column":9,"nodeType":"1066","messageId":"1080","endLine":12,"endColumn":16},{"ruleId":"1078","severity":1,"message":"1235","line":51,"column":9,"nodeType":"1066","messageId":"1080","endLine":51,"endColumn":25},{"ruleId":"1081","severity":1,"message":"1082","line":88,"column":32,"nodeType":"1083","messageId":"1084","endLine":88,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":99,"column":93,"nodeType":"1083","messageId":"1084","endLine":99,"endColumn":95},{"ruleId":"1081","severity":1,"message":"1082","line":117,"column":45,"nodeType":"1083","messageId":"1084","endLine":117,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1082","line":117,"column":147,"nodeType":"1083","messageId":"1084","endLine":117,"endColumn":149},{"ruleId":"1078","severity":1,"message":"1236","line":1,"column":8,"nodeType":"1066","messageId":"1080","endLine":1,"endColumn":13},{"ruleId":"1078","severity":1,"message":"1237","line":2,"column":16,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":24},{"ruleId":"1078","severity":1,"message":"1233","line":2,"column":25,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":34},{"ruleId":"1078","severity":1,"message":"1201","line":2,"column":35,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":45},{"ruleId":"1078","severity":1,"message":"1238","line":3,"column":10,"nodeType":"1066","messageId":"1080","endLine":3,"endColumn":13},{"ruleId":"1078","severity":1,"message":"1239","line":6,"column":8,"nodeType":"1066","messageId":"1080","endLine":6,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":146,"column":19,"nodeType":"1083","messageId":"1084","endLine":146,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":162,"column":82,"nodeType":"1083","messageId":"1084","endLine":162,"endColumn":84},{"ruleId":"1081","severity":1,"message":"1082","line":192,"column":19,"nodeType":"1083","messageId":"1084","endLine":192,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":208,"column":82,"nodeType":"1083","messageId":"1084","endLine":208,"endColumn":84},{"ruleId":"1081","severity":1,"message":"1082","line":240,"column":33,"nodeType":"1083","messageId":"1084","endLine":240,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":248,"column":51,"nodeType":"1083","messageId":"1084","endLine":248,"endColumn":53},{"ruleId":"1081","severity":1,"message":"1082","line":258,"column":61,"nodeType":"1083","messageId":"1084","endLine":258,"endColumn":63},{"ruleId":"1097","severity":1,"message":"1098","line":259,"column":33,"nodeType":"1099","endLine":259,"endColumn":211},{"ruleId":"1097","severity":1,"message":"1098","line":294,"column":168,"nodeType":"1099","endLine":294,"endColumn":280},{"ruleId":"1097","severity":1,"message":"1098","line":295,"column":176,"nodeType":"1099","endLine":295,"endColumn":289},{"ruleId":"1081","severity":1,"message":"1082","line":303,"column":44,"nodeType":"1083","messageId":"1084","endLine":303,"endColumn":46},{"ruleId":"1081","severity":1,"message":"1082","line":304,"column":69,"nodeType":"1083","messageId":"1084","endLine":304,"endColumn":71},{"ruleId":"1081","severity":1,"message":"1082","line":310,"column":43,"nodeType":"1083","messageId":"1084","endLine":310,"endColumn":45},{"ruleId":"1081","severity":1,"message":"1082","line":311,"column":72,"nodeType":"1083","messageId":"1084","endLine":311,"endColumn":74},{"ruleId":"1081","severity":1,"message":"1082","line":322,"column":46,"nodeType":"1083","messageId":"1084","endLine":322,"endColumn":48},{"ruleId":"1081","severity":1,"message":"1082","line":323,"column":206,"nodeType":"1083","messageId":"1084","endLine":323,"endColumn":208},{"ruleId":"1078","severity":1,"message":"1233","line":2,"column":20,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":29},{"ruleId":"1078","severity":1,"message":"1215","line":17,"column":10,"nodeType":"1066","messageId":"1080","endLine":17,"endColumn":16},{"ruleId":"1081","severity":1,"message":"1082","line":136,"column":15,"nodeType":"1083","messageId":"1084","endLine":136,"endColumn":17},{"ruleId":"1081","severity":1,"message":"1082","line":152,"column":78,"nodeType":"1083","messageId":"1084","endLine":152,"endColumn":80},{"ruleId":"1081","severity":1,"message":"1082","line":182,"column":15,"nodeType":"1083","messageId":"1084","endLine":182,"endColumn":17},{"ruleId":"1081","severity":1,"message":"1082","line":198,"column":78,"nodeType":"1083","messageId":"1084","endLine":198,"endColumn":80},{"ruleId":"1081","severity":1,"message":"1082","line":230,"column":33,"nodeType":"1083","messageId":"1084","endLine":230,"endColumn":35},{"ruleId":"1081","severity":1,"message":"1082","line":240,"column":40,"nodeType":"1083","messageId":"1084","endLine":240,"endColumn":42},{"ruleId":"1097","severity":1,"message":"1098","line":249,"column":19,"nodeType":"1099","endLine":249,"endColumn":198},{"ruleId":"1097","severity":1,"message":"1098","line":285,"column":150,"nodeType":"1099","endLine":285,"endColumn":262},{"ruleId":"1097","severity":1,"message":"1098","line":286,"column":176,"nodeType":"1099","endLine":286,"endColumn":289},{"ruleId":"1081","severity":1,"message":"1082","line":294,"column":30,"nodeType":"1083","messageId":"1084","endLine":294,"endColumn":32},{"ruleId":"1081","severity":1,"message":"1082","line":295,"column":70,"nodeType":"1083","messageId":"1084","endLine":295,"endColumn":72},{"ruleId":"1081","severity":1,"message":"1082","line":307,"column":29,"nodeType":"1083","messageId":"1084","endLine":307,"endColumn":31},{"ruleId":"1081","severity":1,"message":"1082","line":308,"column":56,"nodeType":"1083","messageId":"1084","endLine":308,"endColumn":58},{"ruleId":"1081","severity":1,"message":"1082","line":319,"column":32,"nodeType":"1083","messageId":"1084","endLine":319,"endColumn":34},{"ruleId":"1081","severity":1,"message":"1082","line":320,"column":190,"nodeType":"1083","messageId":"1084","endLine":320,"endColumn":192},{"ruleId":"1078","severity":1,"message":"1240","line":29,"column":12,"nodeType":"1066","messageId":"1080","endLine":29,"endColumn":15},{"ruleId":"1078","severity":1,"message":"1241","line":37,"column":14,"nodeType":"1066","messageId":"1080","endLine":37,"endColumn":35},{"ruleId":"1068","severity":1,"message":"1242","line":79,"column":8,"nodeType":"1070","endLine":79,"endColumn":26,"suggestions":"1243"},{"ruleId":"1081","severity":1,"message":"1082","line":83,"column":28,"nodeType":"1083","messageId":"1084","endLine":83,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":86,"column":28,"nodeType":"1083","messageId":"1084","endLine":86,"endColumn":30},{"ruleId":"1081","severity":1,"message":"1082","line":132,"column":36,"nodeType":"1083","messageId":"1084","endLine":132,"endColumn":38},{"ruleId":"1081","severity":1,"message":"1082","line":133,"column":35,"nodeType":"1083","messageId":"1084","endLine":133,"endColumn":37},{"ruleId":"1081","severity":1,"message":"1082","line":416,"column":130,"nodeType":"1083","messageId":"1084","endLine":416,"endColumn":132},{"ruleId":"1081","severity":1,"message":"1082","line":416,"column":150,"nodeType":"1083","messageId":"1084","endLine":416,"endColumn":152},{"ruleId":"1081","severity":1,"message":"1082","line":416,"column":193,"nodeType":"1083","messageId":"1084","endLine":416,"endColumn":195},{"ruleId":"1081","severity":1,"message":"1082","line":416,"column":213,"nodeType":"1083","messageId":"1084","endLine":416,"endColumn":215},{"ruleId":"1081","severity":1,"message":"1082","line":416,"column":266,"nodeType":"1083","messageId":"1084","endLine":416,"endColumn":268},{"ruleId":"1081","severity":1,"message":"1082","line":416,"column":286,"nodeType":"1083","messageId":"1084","endLine":416,"endColumn":288},{"ruleId":"1081","severity":1,"message":"1082","line":417,"column":86,"nodeType":"1083","messageId":"1084","endLine":417,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":417,"column":106,"nodeType":"1083","messageId":"1084","endLine":417,"endColumn":108},{"ruleId":"1081","severity":1,"message":"1082","line":417,"column":149,"nodeType":"1083","messageId":"1084","endLine":417,"endColumn":151},{"ruleId":"1081","severity":1,"message":"1082","line":417,"column":169,"nodeType":"1083","messageId":"1084","endLine":417,"endColumn":171},{"ruleId":"1081","severity":1,"message":"1082","line":417,"column":222,"nodeType":"1083","messageId":"1084","endLine":417,"endColumn":224},{"ruleId":"1081","severity":1,"message":"1082","line":417,"column":242,"nodeType":"1083","messageId":"1084","endLine":417,"endColumn":244},{"ruleId":"1081","severity":1,"message":"1082","line":419,"column":130,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":132},{"ruleId":"1081","severity":1,"message":"1082","line":419,"column":152,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":154},{"ruleId":"1081","severity":1,"message":"1082","line":419,"column":197,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":199},{"ruleId":"1081","severity":1,"message":"1082","line":419,"column":219,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":221},{"ruleId":"1081","severity":1,"message":"1082","line":419,"column":274,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":276},{"ruleId":"1081","severity":1,"message":"1082","line":419,"column":296,"nodeType":"1083","messageId":"1084","endLine":419,"endColumn":298},{"ruleId":"1081","severity":1,"message":"1082","line":420,"column":86,"nodeType":"1083","messageId":"1084","endLine":420,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":420,"column":108,"nodeType":"1083","messageId":"1084","endLine":420,"endColumn":110},{"ruleId":"1081","severity":1,"message":"1082","line":420,"column":153,"nodeType":"1083","messageId":"1084","endLine":420,"endColumn":155},{"ruleId":"1081","severity":1,"message":"1082","line":420,"column":175,"nodeType":"1083","messageId":"1084","endLine":420,"endColumn":177},{"ruleId":"1081","severity":1,"message":"1082","line":420,"column":230,"nodeType":"1083","messageId":"1084","endLine":420,"endColumn":232},{"ruleId":"1081","severity":1,"message":"1082","line":420,"column":252,"nodeType":"1083","messageId":"1084","endLine":420,"endColumn":254},{"ruleId":"1081","severity":1,"message":"1082","line":422,"column":130,"nodeType":"1083","messageId":"1084","endLine":422,"endColumn":132},{"ruleId":"1081","severity":1,"message":"1082","line":422,"column":152,"nodeType":"1083","messageId":"1084","endLine":422,"endColumn":154},{"ruleId":"1081","severity":1,"message":"1082","line":422,"column":197,"nodeType":"1083","messageId":"1084","endLine":422,"endColumn":199},{"ruleId":"1081","severity":1,"message":"1082","line":422,"column":219,"nodeType":"1083","messageId":"1084","endLine":422,"endColumn":221},{"ruleId":"1081","severity":1,"message":"1082","line":422,"column":266,"nodeType":"1083","messageId":"1084","endLine":422,"endColumn":268},{"ruleId":"1081","severity":1,"message":"1082","line":422,"column":288,"nodeType":"1083","messageId":"1084","endLine":422,"endColumn":290},{"ruleId":"1081","severity":1,"message":"1082","line":423,"column":86,"nodeType":"1083","messageId":"1084","endLine":423,"endColumn":88},{"ruleId":"1081","severity":1,"message":"1082","line":423,"column":108,"nodeType":"1083","messageId":"1084","endLine":423,"endColumn":110},{"ruleId":"1081","severity":1,"message":"1082","line":423,"column":153,"nodeType":"1083","messageId":"1084","endLine":423,"endColumn":155},{"ruleId":"1081","severity":1,"message":"1082","line":423,"column":175,"nodeType":"1083","messageId":"1084","endLine":423,"endColumn":177},{"ruleId":"1081","severity":1,"message":"1082","line":423,"column":230,"nodeType":"1083","messageId":"1084","endLine":423,"endColumn":232},{"ruleId":"1081","severity":1,"message":"1082","line":423,"column":252,"nodeType":"1083","messageId":"1084","endLine":423,"endColumn":254},{"ruleId":"1068","severity":1,"message":"1244","line":43,"column":8,"nodeType":"1070","endLine":43,"endColumn":10,"suggestions":"1245"},{"ruleId":"1068","severity":1,"message":"1246","line":91,"column":8,"nodeType":"1070","endLine":91,"endColumn":10,"suggestions":"1247"},{"ruleId":"1081","severity":1,"message":"1082","line":99,"column":67,"nodeType":"1083","messageId":"1084","endLine":99,"endColumn":69},{"ruleId":"1097","severity":1,"message":"1098","line":200,"column":178,"nodeType":"1099","endLine":200,"endColumn":287},{"ruleId":"1097","severity":1,"message":"1098","line":206,"column":149,"nodeType":"1099","endLine":206,"endColumn":253},{"ruleId":"1081","severity":1,"message":"1089","line":213,"column":90,"nodeType":"1083","messageId":"1084","endLine":213,"endColumn":92},{"ruleId":"1081","severity":1,"message":"1082","line":245,"column":99,"nodeType":"1083","messageId":"1084","endLine":245,"endColumn":101},{"ruleId":"1081","severity":1,"message":"1082","line":265,"column":75,"nodeType":"1083","messageId":"1084","endLine":265,"endColumn":77},{"ruleId":"1097","severity":1,"message":"1098","line":290,"column":210,"nodeType":"1099","endLine":290,"endColumn":319},{"ruleId":"1097","severity":1,"message":"1098","line":301,"column":165,"nodeType":"1099","endLine":301,"endColumn":269},{"ruleId":"1081","severity":1,"message":"1082","line":24,"column":66,"nodeType":"1083","messageId":"1084","endLine":24,"endColumn":68},{"ruleId":"1068","severity":1,"message":"1248","line":38,"column":6,"nodeType":"1070","endLine":38,"endColumn":8,"suggestions":"1249"},{"ruleId":"1081","severity":1,"message":"1082","line":42,"column":42,"nodeType":"1083","messageId":"1084","endLine":42,"endColumn":44},{"ruleId":"1078","severity":1,"message":"1233","line":1,"column":27,"nodeType":"1066","messageId":"1080","endLine":1,"endColumn":36},{"ruleId":"1078","severity":1,"message":"1250","line":4,"column":10,"nodeType":"1066","messageId":"1080","endLine":4,"endColumn":21},{"ruleId":"1078","severity":1,"message":"1169","line":4,"column":28,"nodeType":"1066","messageId":"1080","endLine":4,"endColumn":37},{"ruleId":"1078","severity":1,"message":"1104","line":20,"column":22,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":33},{"ruleId":"1078","severity":1,"message":"1251","line":21,"column":12,"nodeType":"1066","messageId":"1080","endLine":21,"endColumn":16},{"ruleId":"1078","severity":1,"message":"1252","line":55,"column":11,"nodeType":"1066","messageId":"1080","endLine":55,"endColumn":24},{"ruleId":"1081","severity":1,"message":"1082","line":87,"column":57,"nodeType":"1083","messageId":"1084","endLine":87,"endColumn":59},{"ruleId":"1097","severity":1,"message":"1098","line":87,"column":90,"nodeType":"1099","endLine":87,"endColumn":196},{"ruleId":"1081","severity":1,"message":"1082","line":100,"column":51,"nodeType":"1083","messageId":"1084","endLine":100,"endColumn":53},{"ruleId":"1081","severity":1,"message":"1082","line":106,"column":114,"nodeType":"1083","messageId":"1084","endLine":106,"endColumn":116},{"ruleId":"1078","severity":1,"message":"1233","line":2,"column":20,"nodeType":"1066","messageId":"1080","endLine":2,"endColumn":29},{"ruleId":"1078","severity":1,"message":"1253","line":13,"column":11,"nodeType":"1066","messageId":"1080","endLine":13,"endColumn":18},{"ruleId":"1078","severity":1,"message":"1254","line":17,"column":12,"nodeType":"1066","messageId":"1080","endLine":17,"endColumn":29},{"ruleId":"1078","severity":1,"message":"1255","line":17,"column":31,"nodeType":"1066","messageId":"1080","endLine":17,"endColumn":51},{"ruleId":"1078","severity":1,"message":"1256","line":18,"column":12,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":19},{"ruleId":"1078","severity":1,"message":"1257","line":18,"column":21,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":31},{"ruleId":"1078","severity":1,"message":"1104","line":21,"column":22,"nodeType":"1066","messageId":"1080","endLine":21,"endColumn":33},{"ruleId":"1081","severity":1,"message":"1082","line":77,"column":57,"nodeType":"1083","messageId":"1084","endLine":77,"endColumn":59},{"ruleId":"1097","severity":1,"message":"1098","line":77,"column":90,"nodeType":"1099","endLine":77,"endColumn":179},{"ruleId":"1078","severity":1,"message":"1258","line":11,"column":11,"nodeType":"1066","messageId":"1080","endLine":11,"endColumn":19},{"ruleId":"1078","severity":1,"message":"1259","line":19,"column":12,"nodeType":"1066","messageId":"1080","endLine":19,"endColumn":23},{"ruleId":"1078","severity":1,"message":"1260","line":19,"column":25,"nodeType":"1066","messageId":"1080","endLine":19,"endColumn":39},{"ruleId":"1078","severity":1,"message":"1261","line":20,"column":12,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":22},{"ruleId":"1078","severity":1,"message":"1262","line":20,"column":24,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":37},{"ruleId":"1078","severity":1,"message":"1263","line":21,"column":12,"nodeType":"1066","messageId":"1080","endLine":21,"endColumn":29},{"ruleId":"1078","severity":1,"message":"1264","line":21,"column":31,"nodeType":"1066","messageId":"1080","endLine":21,"endColumn":51},{"ruleId":"1078","severity":1,"message":"1265","line":22,"column":12,"nodeType":"1066","messageId":"1080","endLine":22,"endColumn":21},{"ruleId":"1078","severity":1,"message":"1266","line":22,"column":23,"nodeType":"1066","messageId":"1080","endLine":22,"endColumn":35},{"ruleId":"1078","severity":1,"message":"1104","line":24,"column":22,"nodeType":"1066","messageId":"1080","endLine":24,"endColumn":33},{"ruleId":"1078","severity":1,"message":"1105","line":27,"column":12,"nodeType":"1066","messageId":"1080","endLine":27,"endColumn":21},{"ruleId":"1078","severity":1,"message":"1106","line":27,"column":23,"nodeType":"1066","messageId":"1080","endLine":27,"endColumn":35},{"ruleId":"1068","severity":1,"message":"1229","line":42,"column":8,"nodeType":"1070","endLine":42,"endColumn":10,"suggestions":"1267"},{"ruleId":"1068","severity":1,"message":"1268","line":90,"column":8,"nodeType":"1070","endLine":90,"endColumn":11,"suggestions":"1269"},{"ruleId":"1068","severity":1,"message":"1270","line":90,"column":9,"nodeType":"1271","endLine":90,"endColumn":10},{"ruleId":"1068","severity":1,"message":"1272","line":94,"column":8,"nodeType":"1070","endLine":94,"endColumn":17,"suggestions":"1273"},{"ruleId":"1081","severity":1,"message":"1089","line":129,"column":122,"nodeType":"1083","messageId":"1084","endLine":129,"endColumn":124},{"ruleId":"1081","severity":1,"message":"1082","line":189,"column":40,"nodeType":"1083","messageId":"1084","endLine":189,"endColumn":42},{"ruleId":"1081","severity":1,"message":"1082","line":200,"column":40,"nodeType":"1083","messageId":"1084","endLine":200,"endColumn":42},{"ruleId":"1081","severity":1,"message":"1082","line":211,"column":99,"nodeType":"1083","messageId":"1084","endLine":211,"endColumn":101},{"ruleId":"1081","severity":1,"message":"1082","line":217,"column":67,"nodeType":"1083","messageId":"1084","endLine":217,"endColumn":69},{"ruleId":"1097","severity":1,"message":"1098","line":218,"column":33,"nodeType":"1099","endLine":218,"endColumn":139},{"ruleId":"1081","severity":1,"message":"1082","line":267,"column":45,"nodeType":"1083","messageId":"1084","endLine":267,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1082","line":268,"column":90,"nodeType":"1083","messageId":"1084","endLine":268,"endColumn":92},{"ruleId":"1081","severity":1,"message":"1082","line":45,"column":37,"nodeType":"1083","messageId":"1084","endLine":45,"endColumn":39},{"ruleId":"1081","severity":1,"message":"1082","line":70,"column":37,"nodeType":"1083","messageId":"1084","endLine":70,"endColumn":39},{"ruleId":"1078","severity":1,"message":"1092","line":82,"column":33,"nodeType":"1066","messageId":"1080","endLine":82,"endColumn":34},{"ruleId":"1068","severity":1,"message":"1274","line":93,"column":8,"nodeType":"1070","endLine":93,"endColumn":10,"suggestions":"1275"},{"ruleId":"1081","severity":1,"message":"1082","line":244,"column":39,"nodeType":"1083","messageId":"1084","endLine":244,"endColumn":41},{"ruleId":"1068","severity":1,"message":"1244","line":315,"column":8,"nodeType":"1070","endLine":315,"endColumn":10,"suggestions":"1276"},{"ruleId":"1081","severity":1,"message":"1082","line":333,"column":180,"nodeType":"1083","messageId":"1084","endLine":333,"endColumn":182},{"ruleId":"1097","severity":1,"message":"1098","line":411,"column":190,"nodeType":"1099","endLine":411,"endColumn":299},{"ruleId":"1097","severity":1,"message":"1098","line":420,"column":144,"nodeType":"1099","endLine":420,"endColumn":248},{"ruleId":"1097","severity":1,"message":"1098","line":508,"column":180,"nodeType":"1099","endLine":508,"endColumn":289},{"ruleId":"1097","severity":1,"message":"1098","line":514,"column":151,"nodeType":"1099","endLine":514,"endColumn":255},{"ruleId":"1078","severity":1,"message":"1092","line":80,"column":33,"nodeType":"1066","messageId":"1080","endLine":80,"endColumn":34},{"ruleId":"1068","severity":1,"message":"1274","line":91,"column":8,"nodeType":"1070","endLine":91,"endColumn":10,"suggestions":"1277"},{"ruleId":"1081","severity":1,"message":"1082","line":241,"column":39,"nodeType":"1083","messageId":"1084","endLine":241,"endColumn":41},{"ruleId":"1068","severity":1,"message":"1244","line":312,"column":8,"nodeType":"1070","endLine":312,"endColumn":10,"suggestions":"1278"},{"ruleId":"1081","severity":1,"message":"1082","line":330,"column":196,"nodeType":"1083","messageId":"1084","endLine":330,"endColumn":198},{"ruleId":"1097","severity":1,"message":"1098","line":408,"column":190,"nodeType":"1099","endLine":408,"endColumn":299},{"ruleId":"1097","severity":1,"message":"1098","line":417,"column":144,"nodeType":"1099","endLine":417,"endColumn":248},{"ruleId":"1097","severity":1,"message":"1098","line":505,"column":180,"nodeType":"1099","endLine":505,"endColumn":289},{"ruleId":"1097","severity":1,"message":"1098","line":511,"column":151,"nodeType":"1099","endLine":511,"endColumn":255},{"ruleId":"1078","severity":1,"message":"1258","line":10,"column":11,"nodeType":"1066","messageId":"1080","endLine":10,"endColumn":19},{"ruleId":"1078","severity":1,"message":"1259","line":18,"column":12,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":23},{"ruleId":"1078","severity":1,"message":"1260","line":18,"column":25,"nodeType":"1066","messageId":"1080","endLine":18,"endColumn":39},{"ruleId":"1078","severity":1,"message":"1261","line":19,"column":12,"nodeType":"1066","messageId":"1080","endLine":19,"endColumn":22},{"ruleId":"1078","severity":1,"message":"1262","line":19,"column":24,"nodeType":"1066","messageId":"1080","endLine":19,"endColumn":37},{"ruleId":"1078","severity":1,"message":"1263","line":20,"column":12,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":29},{"ruleId":"1078","severity":1,"message":"1264","line":20,"column":31,"nodeType":"1066","messageId":"1080","endLine":20,"endColumn":51},{"ruleId":"1078","severity":1,"message":"1265","line":21,"column":12,"nodeType":"1066","messageId":"1080","endLine":21,"endColumn":21},{"ruleId":"1078","severity":1,"message":"1266","line":21,"column":23,"nodeType":"1066","messageId":"1080","endLine":21,"endColumn":35},{"ruleId":"1078","severity":1,"message":"1104","line":23,"column":22,"nodeType":"1066","messageId":"1080","endLine":23,"endColumn":33},{"ruleId":"1068","severity":1,"message":"1229","line":37,"column":8,"nodeType":"1070","endLine":37,"endColumn":10,"suggestions":"1279"},{"ruleId":"1068","severity":1,"message":"1268","line":87,"column":8,"nodeType":"1070","endLine":87,"endColumn":11,"suggestions":"1280"},{"ruleId":"1068","severity":1,"message":"1270","line":87,"column":9,"nodeType":"1271","endLine":87,"endColumn":10},{"ruleId":"1068","severity":1,"message":"1272","line":91,"column":8,"nodeType":"1070","endLine":91,"endColumn":17,"suggestions":"1281"},{"ruleId":"1081","severity":1,"message":"1089","line":126,"column":122,"nodeType":"1083","messageId":"1084","endLine":126,"endColumn":124},{"ruleId":"1081","severity":1,"message":"1082","line":184,"column":40,"nodeType":"1083","messageId":"1084","endLine":184,"endColumn":42},{"ruleId":"1081","severity":1,"message":"1082","line":195,"column":40,"nodeType":"1083","messageId":"1084","endLine":195,"endColumn":42},{"ruleId":"1081","severity":1,"message":"1082","line":205,"column":118,"nodeType":"1083","messageId":"1084","endLine":205,"endColumn":120},{"ruleId":"1081","severity":1,"message":"1082","line":212,"column":69,"nodeType":"1083","messageId":"1084","endLine":212,"endColumn":71},{"ruleId":"1097","severity":1,"message":"1098","line":212,"column":103,"nodeType":"1099","endLine":212,"endColumn":188},{"ruleId":"1081","severity":1,"message":"1082","line":261,"column":45,"nodeType":"1083","messageId":"1084","endLine":261,"endColumn":47},{"ruleId":"1081","severity":1,"message":"1082","line":262,"column":90,"nodeType":"1083","messageId":"1084","endLine":262,"endColumn":92},{"ruleId":"1068","severity":1,"message":"1244","line":42,"column":8,"nodeType":"1070","endLine":42,"endColumn":10,"suggestions":"1282"},{"ruleId":"1081","severity":1,"message":"1082","line":84,"column":37,"nodeType":"1083","messageId":"1084","endLine":84,"endColumn":39},{"ruleId":"1068","severity":1,"message":"1246","line":95,"column":8,"nodeType":"1070","endLine":95,"endColumn":10,"suggestions":"1283"},{"ruleId":"1081","severity":1,"message":"1082","line":103,"column":41,"nodeType":"1083","messageId":"1084","endLine":103,"endColumn":43},{"ruleId":"1081","severity":1,"message":"1082","line":104,"column":78,"nodeType":"1083","messageId":"1084","endLine":104,"endColumn":80},{"ruleId":"1097","severity":1,"message":"1098","line":203,"column":178,"nodeType":"1099","endLine":203,"endColumn":287},{"ruleId":"1097","severity":1,"message":"1098","line":209,"column":149,"nodeType":"1099","endLine":209,"endColumn":253},{"ruleId":"1081","severity":1,"message":"1089","line":216,"column":90,"nodeType":"1083","messageId":"1084","endLine":216,"endColumn":92},{"ruleId":"1081","severity":1,"message":"1082","line":248,"column":99,"nodeType":"1083","messageId":"1084","endLine":248,"endColumn":101},{"ruleId":"1081","severity":1,"message":"1082","line":268,"column":75,"nodeType":"1083","messageId":"1084","endLine":268,"endColumn":77},{"ruleId":"1097","severity":1,"message":"1098","line":293,"column":210,"nodeType":"1099","endLine":293,"endColumn":319},{"ruleId":"1097","severity":1,"message":"1098","line":304,"column":165,"nodeType":"1099","endLine":304,"endColumn":269},{"ruleId":"1078","severity":1,"message":"1233","line":1,"column":27,"nodeType":"1066","messageId":"1080","endLine":1,"endColumn":36},{"ruleId":"1081","severity":1,"message":"1082","line":28,"column":24,"nodeType":"1083","messageId":"1084","endLine":28,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1082","line":86,"column":29,"nodeType":"1083","messageId":"1084","endLine":86,"endColumn":31},{"ruleId":"1081","severity":1,"message":"1082","line":104,"column":19,"nodeType":"1083","messageId":"1084","endLine":104,"endColumn":21},{"ruleId":"1081","severity":1,"message":"1082","line":111,"column":21,"nodeType":"1083","messageId":"1084","endLine":111,"endColumn":23},{"ruleId":"1097","severity":1,"message":"1098","line":122,"column":98,"nodeType":"1099","endLine":122,"endColumn":186},{"ruleId":"1081","severity":1,"message":"1082","line":131,"column":46,"nodeType":"1083","messageId":"1084","endLine":131,"endColumn":48},{"ruleId":"1081","severity":1,"message":"1082","line":144,"column":60,"nodeType":"1083","messageId":"1084","endLine":144,"endColumn":62},{"ruleId":"1081","severity":1,"message":"1082","line":148,"column":23,"nodeType":"1083","messageId":"1084","endLine":148,"endColumn":25},{"ruleId":"1081","severity":1,"message":"1082","line":149,"column":64,"nodeType":"1083","messageId":"1084","endLine":149,"endColumn":66},{"ruleId":"1081","severity":1,"message":"1082","line":165,"column":48,"nodeType":"1083","messageId":"1084","endLine":165,"endColumn":50},{"ruleId":"1081","severity":1,"message":"1082","line":169,"column":23,"nodeType":"1083","messageId":"1084","endLine":169,"endColumn":25},{"ruleId":"1081","severity":1,"message":"1082","line":170,"column":52,"nodeType":"1083","messageId":"1084","endLine":170,"endColumn":54},{"ruleId":"1097","severity":1,"message":"1098","line":176,"column":53,"nodeType":"1099","endLine":176,"endColumn":199},{"ruleId":"1078","severity":1,"message":"1284","line":1,"column":8,"nodeType":"1066","messageId":"1080","endLine":1,"endColumn":13},{"ruleId":"1068","severity":1,"message":"1285","line":48,"column":6,"nodeType":"1070","endLine":48,"endColumn":8,"suggestions":"1286"},{"ruleId":"1078","severity":1,"message":"1284","line":1,"column":8,"nodeType":"1066","messageId":"1080","endLine":1,"endColumn":13},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-redeclare","'vendorsitems' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MakePurchaseEntryExport'. Either include it or remove the dependency array.","ArrayExpression",["1287"],"React Hook useEffect has a missing dependency: 'MakePurchaseReturnExport'. Either include it or remove the dependency array.",["1288"],"React Hook useEffect has a missing dependency: 'MakeSaleEntryExport'. Either include it or remove the dependency array.",["1289"],"React Hook useEffect has a missing dependency: 'MakeSaleReturnExport'. Either include it or remove the dependency array.",["1290"],"no-unused-vars","'setchannel' is assigned a value but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'GetPages'. Either include it or remove the dependency array.",["1291"],"React Hook useEffect has missing dependencies: 'GETSalesList' and 'GETSalesListForExcel'. Either include them or remove the dependency array.",["1292"],"Expected '!==' and instead saw '!='.","'previouspayments' is assigned a value but never used.","'setpreviouspayments' is assigned a value but never used.","'p' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AddPaymentMethods'. Either include it or remove the dependency array.",["1293"],"React Hook useEffect has a missing dependency: 'CalPrevTotal'. Either include it or remove the dependency array.",["1294"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["1295"],"React Hook useEffect has missing dependencies: 'GETSaleReturns' and 'GETSaleReturnsForExcel'. Either include them or remove the dependency array.",["1296"],"'tableref' is assigned a value but never used.","'setclinicid' is assigned a value but never used.","'ischecked' is assigned a value but never used.","'setischecked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Doclist'. Either include it or remove the dependency array.",["1297"],"React Hook useEffect has a missing dependency: 'CalGrandttl'. Either include it or remove the dependency array.",["1298"],"React Hook useEffect has a missing dependency: 'SubmitSaleEntry'. Either include it or remove the dependency array.",["1299"],"'c' is assigned a value but never used.","'vendorsref' is assigned a value but never used.","'billname' is assigned a value but never used.","'itemsearch' is assigned a value but never used.","'setitemsearch' is assigned a value but never used.",["1300"],"React Hook useEffect has missing dependencies: 'GETPurchaseList' and 'GETPurchaseListForExcel'. Either include them or remove the dependency array.",["1301"],"React Hook useEffect has a missing dependency: 'CalculateGst'. Either include it or remove the dependency array.",["1302"],"React Hook useEffect has a missing dependency: 'CalculateIGst'. Either include it or remove the dependency array.",["1303"],"React Hook useEffect has a missing dependency: 'Calculate'. Either include it or remove the dependency array.",["1304"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'CalculateCPU'. Either include it or remove the dependency array.",["1305"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.",["1306"],"React Hook useEffect has missing dependencies: 'GETPurchaseReturns' and 'GETPurchaseReturnsForExcel'. Either include them or remove the dependency array.",["1307"],"'ClinicId' is assigned a value but never used.","'ClinicList' is assigned a value but never used.","'Todaydate' is assigned a value but never used.","'reversefunction2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPages', 'GetVaccines', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["1308"],"React Hook useEffect has a missing dependency: 'Get_Detailed_Data'. Either include it or remove the dependency array.",["1309"],"'ExpireDays' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetMedicines', 'GetPages', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["1310"],["1311"],"React Hook useEffect has missing dependencies: 'GetPages' and 'medcinelist'. Either include them or remove the dependency array.",["1312"],"'pendingpaid' is assigned a value but never used.","'setpendingpaid' is assigned a value but never used.","'advancepaid' is assigned a value but never used.","'setadvancepaid' is assigned a value but never used.","'SalePendings' is assigned a value but never used.","'setSalePendings' is assigned a value but never used.","'pr' is assigned a value but never used.","'setpr' is assigned a value but never used.","'setprxl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PharmacyList'. Either include it or remove the dependency array.",["1313"],"'SumExtraCharges' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useRef' is defined but never used.","'Doctorapi' is defined but never used.","'PEitemdetailssection' is defined but never used.","'Newpurchaseentryarray' is defined but never used.","'toggleaddoption' is assigned a value but never used.","'inactivelogout' is defined but never used.","'weekday' is assigned a value but never used.","'setdoctorindex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchallAppointmentslist'. Either include it or remove the dependency array.",["1314"],["1315"],"React Hook useEffect has missing dependencies: 'GetPages' and 'getAllPatients'. Either include them or remove the dependency array.",["1316"],"React Hook useEffect has missing dependencies: 'GetPages' and 'getAllDoctors'. Either include them or remove the dependency array.",["1317"],"'currentDate' is assigned a value but never used.","'type' is assigned a value but never used.","'settype' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Appointments_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Doctors_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pharmacy_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","'TodayDate' is defined but never used.","'visibles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DSR_All_Appointments'. Either include it or remove the dependency array.",["1318"],["1319"],"React Hook useEffect has a missing dependency: 'GetDoctors'. Either include it or remove the dependency array.",["1320"],"'doctorstime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DoctorwiseTable'. Either include it or remove the dependency array.",["1321"],"'useContext' is defined but never used.","'Exports' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchapi'. Either include it or remove the dependency array.",["1322"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'searchpatient'. Either include it or remove the dependency array.",["1323"],"'customloading' is defined but never used.","'Bootstrap_Confirm' is defined but never used.","'appointmentid' is assigned a value but never used.","'d_form' is assigned a value but never used.","'ArraySum' is defined but never used.","React Hook useEffect has a missing dependency: 'Appointmentlist'. Either include it or remove the dependency array.",["1324"],"no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'https:' is defined but never used.","unused",["1325"],"React Hook useEffect has a missing dependency: 'clinics'. Either include it or remove the dependency array.",["1326"],"React Hook useEffect has a missing dependency: 'ClinicList'. Either include it or remove the dependency array.",["1327"],"React Hook useEffect has a missing dependency: 'setfromsearch'. Either include it or remove the dependency array.",["1328"],"'useEffect' is defined but never used.","'APIDate' is assigned a value but never used.","'toggledoctorform' is assigned a value but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'URL' is defined but never used.","'Notiflix' is defined but never used.","'lng' is assigned a value but never used.","'capitalizeFirstLetter' is defined but never used.","React Hook useEffect has a missing dependency: 'currentvalue'. Either include it or remove the dependency array.",["1329"],"React Hook useEffect has a missing dependency: 'AdvancePayments'. Either include it or remove the dependency array.",["1330"],"React Hook useEffect has a missing dependency: 'ExistedPendingPayments'. Either include it or remove the dependency array.",["1331"],"React Hook useEffect has missing dependencies: 'CalculatePaidPendings' and 'calculate'. Either include them or remove the dependency array.",["1332"],"'DoctorsList' is defined but never used.","'time' is assigned a value but never used.","'gettime_value' is assigned a value but never used.","'Doctors' is assigned a value but never used.","'adddoctorfortoday' is assigned a value but never used.","'setadddoctorfortoday' is assigned a value but never used.","'docdate' is assigned a value but never used.","'setdocdate' is assigned a value but never used.","'colorref' is assigned a value but never used.","'searchinput' is assigned a value but never used.","'setsearchinput' is assigned a value but never used.","'searchlist' is assigned a value but never used.","'setsearchlist' is assigned a value but never used.","'displaysearchlist' is assigned a value but never used.","'setdisplaysearchlist' is assigned a value but never used.","'patientid' is assigned a value but never used.","'setpatientid' is assigned a value but never used.",["1333"],"React Hook useEffect has missing dependencies: 'getCurrentTimeslots' and 'props.appointmentdate'. Either include them or remove the dependency array.",["1334"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'getCurrentTimefrom'. Either include it or remove the dependency array.",["1335"],"React Hook useEffect has missing dependencies: 'AddExtraCharges' and 'AddPaymentMethods'. Either include them or remove the dependency array.",["1336"],["1337"],["1338"],["1339"],["1340"],["1341"],["1342"],["1343"],["1344"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'FillDetails'. Either include it or remove the dependency array.",["1345"],{"desc":"1346","fix":"1347"},{"desc":"1348","fix":"1349"},{"desc":"1350","fix":"1351"},{"desc":"1352","fix":"1353"},{"desc":"1354","fix":"1355"},{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1366","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1370","fix":"1371"},{"desc":"1354","fix":"1372"},{"desc":"1373","fix":"1374"},{"desc":"1375","fix":"1376"},{"desc":"1377","fix":"1378"},{"desc":"1379","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1354","fix":"1383"},{"desc":"1384","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1388","fix":"1389"},{"desc":"1390","fix":"1391"},{"desc":"1392","fix":"1393"},{"desc":"1394","fix":"1395"},{"desc":"1396","fix":"1397"},{"desc":"1398","fix":"1399"},{"desc":"1400","fix":"1401"},{"desc":"1402","fix":"1403"},{"desc":"1404","fix":"1405"},{"desc":"1406","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1410","fix":"1411"},{"desc":"1412","fix":"1413"},{"desc":"1414","fix":"1415"},{"desc":"1416","fix":"1417"},{"desc":"1418","fix":"1419"},{"desc":"1420","fix":"1421"},{"desc":"1422","fix":"1423"},{"desc":"1424","fix":"1425"},{"desc":"1426","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1434","fix":"1435"},{"desc":"1424","fix":"1436"},{"desc":"1437","fix":"1438"},{"desc":"1439","fix":"1440"},{"desc":"1441","fix":"1442"},{"desc":"1430","fix":"1443"},{"desc":"1441","fix":"1444"},{"desc":"1430","fix":"1445"},{"desc":"1424","fix":"1446"},{"desc":"1437","fix":"1447"},{"desc":"1439","fix":"1448"},{"desc":"1430","fix":"1449"},{"desc":"1432","fix":"1450"},{"desc":"1451","fix":"1452"},"Update the dependencies array to be: [MakePurchaseEntryExport, props.purchaseentryarr]",{"range":"1453","text":"1454"},"Update the dependencies array to be: [MakePurchaseReturnExport, props.purchasereturnarr]",{"range":"1455","text":"1456"},"Update the dependencies array to be: [MakeSaleEntryExport, props.saleentryarr]",{"range":"1457","text":"1458"},"Update the dependencies array to be: [MakeSaleReturnExport, props.salereturnarr]",{"range":"1459","text":"1460"},"Update the dependencies array to be: [GetPages, channel, fromdate, todate]",{"range":"1461","text":"1462"},"Update the dependencies array to be: [GETSalesList, GETSalesListForExcel, pagecount]",{"range":"1463","text":"1464"},"Update the dependencies array to be: [AddPaymentMethods]",{"range":"1465","text":"1466"},"Update the dependencies array to be: [CalPrevTotal, props.saleentryarr]",{"range":"1467","text":"1468"},"Update the dependencies array to be: [GetPages, fromdate, todate]",{"range":"1469","text":"1470"},"Update the dependencies array to be: [GETSaleReturns, GETSaleReturnsForExcel, pagecount]",{"range":"1471","text":"1472"},"Update the dependencies array to be: [Doclist, doctorid]",{"range":"1473","text":"1474"},"Update the dependencies array to be: [CalGrandttl, SelectedProducts]",{"range":"1475","text":"1476"},"Update the dependencies array to be: [AtC, SubmitSaleEntry]",{"range":"1477","text":"1478"},{"range":"1479","text":"1462"},"Update the dependencies array to be: [GETPurchaseList, GETPurchaseListForExcel, pagecount]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [CalculateGst, sgstprcnt]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [CalculateIGst, igstprcnt]",{"range":"1484","text":"1485"},"Update the dependencies array to be: [Calculate]",{"range":"1486","text":"1487"},"Update the dependencies array to be: [CalculateCPU]",{"range":"1488","text":"1489"},{"range":"1490","text":"1462"},"Update the dependencies array to be: [GETPurchaseReturns, GETPurchaseReturnsForExcel, pagecount]",{"range":"1491","text":"1492"},"Update the dependencies array to be: [GetPages, GetVaccines, Get_Detailed_Data, pagecount, searchname]",{"range":"1493","text":"1494"},"Update the dependencies array to be: [Get_Detailed_Data, vaccineslist]",{"range":"1495","text":"1496"},"Update the dependencies array to be: [GetMedicines, GetPages, Get_Detailed_Data, pagecount, searchname]",{"range":"1497","text":"1498"},"Update the dependencies array to be: [Get_Detailed_Data, medicineslist]",{"range":"1499","text":"1500"},"Update the dependencies array to be: [GetPages, medcinelist, pagecount]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [props.fromdate, props.todate, props.clinic, PharmacyList]",{"range":"1503","text":"1504"},"Update the dependencies array to be: [fetchallAppointmentslist]",{"range":"1505","text":"1506"},"Update the dependencies array to be: [doctorid, fetchallAppointmentslist, fromdate, todate, type]",{"range":"1507","text":"1508"},"Update the dependencies array to be: [GetPages, getAllPatients, pagecount, patientsearch]",{"range":"1509","text":"1510"},"Update the dependencies array to be: [pagecount, Doctorssearch, GetPages, getAllDoctors]",{"range":"1511","text":"1512"},"Update the dependencies array to be: [DSR_All_Appointments]",{"range":"1513","text":"1514"},"Update the dependencies array to be: [props.doctorid, props.fromdate, props.todate, props.clinic, DSR_All_Appointments]",{"range":"1515","text":"1516"},"Update the dependencies array to be: [GetDoctors, props.fromdate, props.todate]",{"range":"1517","text":"1518"},"Update the dependencies array to be: [props.fromdate, props.todate, load, DoctorwiseTable]",{"range":"1519","text":"1520"},"Update the dependencies array to be: [ClinicId, fetchapi]",{"range":"1521","text":"1522"},"Update the dependencies array to be: [props.searchtext, searchpatient]",{"range":"1523","text":"1524"},"Update the dependencies array to be: [Appointmentlist, props._selected]",{"range":"1525","text":"1526"},"Update the dependencies array to be: [fetchapi, props._selected]",{"range":"1527","text":"1528"},"Update the dependencies array to be: [clinicid, clinics]",{"range":"1529","text":"1530"},"Update the dependencies array to be: [ClinicList]",{"range":"1531","text":"1532"},"Update the dependencies array to be: [props.patientidfromsearch, setfromsearch]",{"range":"1533","text":"1534"},"Update the dependencies array to be: [currentvalue, props.patient_id]",{"range":"1535","text":"1536"},"Update the dependencies array to be: [AdvancePayments]",{"range":"1537","text":"1538"},"Update the dependencies array to be: [ExistedPendingPayments]",{"range":"1539","text":"1540"},"Update the dependencies array to be: [CalculatePaidPendings, calculate]",{"range":"1541","text":"1542"},{"range":"1543","text":"1532"},"Update the dependencies array to be: [getCurrentTimeslots, props.appointmentdate]",{"range":"1544","text":"1545"},"Update the dependencies array to be: [getCurrentTimefrom, trigger]",{"range":"1546","text":"1547"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods]",{"range":"1548","text":"1549"},{"range":"1550","text":"1538"},{"range":"1551","text":"1549"},{"range":"1552","text":"1538"},{"range":"1553","text":"1532"},{"range":"1554","text":"1545"},{"range":"1555","text":"1547"},{"range":"1556","text":"1538"},{"range":"1557","text":"1540"},"Update the dependencies array to be: [FillDetails]",{"range":"1558","text":"1559"},[8080,8104],"[MakePurchaseEntryExport, props.purchaseentryarr]",[16444,16469],"[MakePurchaseReturnExport, props.purchasereturnarr]",[25893,25913],"[MakeSaleEntryExport, props.saleentryarr]",[35094,35115],"[MakeSaleReturnExport, props.salereturnarr]",[6294,6321],"[GetPages, channel, fromdate, todate]",[6400,6411],"[GETSalesList, GETSalesListForExcel, pagecount]",[23525,23527],"[AddPaymentMethods]",[25136,25156],"[CalPrevTotal, props.saleentryarr]",[45052,45070],"[GetPages, fromdate, todate]",[45153,45164],"[GETSaleReturns, GETSaleReturnsForExcel, pagecount]",[57656,57666],"[Doclist, doctorid]",[58820,58838],"[CalGrandttl, SelectedProducts]",[62299,62304],"[AtC, SubmitSaleEntry]",[113413,113440],[113525,113536],"[GETPurchaseList, GETPurchaseListForExcel, pagecount]",[150626,150637],"[CalculateGst, sgstprcnt]",[150719,150730],"[CalculateIGst, igstprcnt]",[150789,150802],"[Calculate]",[150861,150890],"[CalculateCPU]",[186277,186304],[186395,186406],"[GETPurchaseReturns, GETPurchaseReturnsForExcel, pagecount]",[232656,232679],"[GetPages, GetVaccines, Get_Detailed_Data, pagecount, searchname]",[232757,232771],"[Get_Detailed_Data, vaccineslist]",[249465,249488],"[GetMedicines, GetPages, Get_Detailed_Data, pagecount, searchname]",[249544,249559],"[Get_Detailed_Data, medicineslist]",[266506,266517],"[GetPages, medcinelist, pagecount]",[1736,1779],"[props.fromdate, props.todate, props.clinic, PharmacyList]",[20144,20146],"[fetchallAppointmentslist]",[20209,20243],"[doctorid, fetchallAppointmentslist, fromdate, todate, type]",[28164,28190],"[GetPages, getAllPatients, pagecount, patientsearch]",[37321,37347],"[pagecount, Doctorssearch, GetPages, getAllDoctors]",[2114,2116],"[DSR_All_Appointments]",[2173,2233],"[props.doctorid, props.fromdate, props.todate, props.clinic, DSR_All_Appointments]",[1007,1037],"[GetDoctors, props.fromdate, props.todate]",[5261,5297],"[props.fromdate, props.todate, load, DoctorwiseTable]",[4115,4125],"[ClinicId, fetchapi]",[1221,1239],"[props.searchtext, searchpatient]",[3361,3378],"[Appointmentlist, props._selected]",[30383,30400],"[fetchapi, props._selected]",[30582,30592],"[clinicid, clinics]",[1416,1418],"[ClinicList]",[1619,1646],"[props.patientidfromsearch, setfromsearch]",[3373,3391],"[currentvalue, props.patient_id]",[1576,1578],"[AdvancePayments]",[3262,3264],"[ExistedPendingPayments]",[1380,1382],"[CalculatePaidPendings, calculate]",[1598,1600],[3193,3196],"[getCurrentTimeslots, props.appointmentdate]",[3261,3270],"[getCurrentTimefrom, trigger]",[4432,4434],"[AddExtraCharges, AddPaymentMethods]",[12052,12054],[4046,4048],[11633,11635],[1548,1550],[3217,3220],[3285,3294],[1536,1538],[3408,3410],[1653,1655],"[FillDetails]"]