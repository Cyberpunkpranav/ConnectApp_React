[{"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\index.jsx":"1","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\SelectedAppointments.jsx":"2","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\AllAppointmentslist.jsx":"3","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\pharmacy.jsx":"4","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Bill.jsx":"5","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Exports.jsx":"6","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Pharmacy.jsx":"7","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\ExportExcel.jsx":"8","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Doctor.jsx":"9","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Medicines\\NewMedicine.jsx":"10","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Medicines\\UpdateMedicine.jsx":"11","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Patients.jsx":"12","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Patients\\AddAddress.jsx":"13","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Report.jsx":"14","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Patients\\UpdatePatient.jsx":"15","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\batchdetails.jsx":"16","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockreport_by_name.jsx":"17","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\summarydata.jsx":"18","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddPatient.jsx":"19","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\WelcomeLoader.jsx":"20","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\InactiveLogout.jsx":"21","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\DSR.jsx":"22","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Navbar.jsx":"23","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Doctors.jsx":"24","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Appointments.jsx":"25","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Clinic.jsx":"26","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockvaluation.jsx":"27","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockreport.jsx":"28","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\openingstock.jsx":"29","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\SearchField.jsx":"30","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\TransferIn.jsx":"31","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\TransferOut.jsx":"32","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\doctorwisesales.jsx":"33","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockconfirmation.jsx":"34","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\vendordetails.jsx":"35","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\schedulewisesales.jsx":"36","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\taxwisedata.jsx":"37","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\patientsaleshistory.jsx":"38","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\ratelist.jsx":"39","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\grossprofitmargin.jsx":"40","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Dsr\\Doctors_Dsr.jsx":"41","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Dsr\\Appointments_Dsr.jsx":"42","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Dsr\\Pharmacy_Dsr.jsx":"43","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Patients\\UpdateAddress.jsx":"44","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\notiflix\\customconfirm.jsx":"45","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddAppointment.jsx":"46","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddDoctorSlot.jsx":"47","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Doctors\\UpdateDoctor.jsx":"48","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\Payments.jsx":"49","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\SelectedTimeAppointment.jsx":"50","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AmountPaid.jsx":"51","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\UpdateAppointment.jsx":"52","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\SelectedDoctorSlot.jsx":"53","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Vitals.jsx":"54","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Payments.jsx":"55","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddConsumables.jsx":"56","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\Bill.jsx":"57","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\UpdateAppointment.jsx":"58","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\qrcode.jsx":"59","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Vaccines\\UpdateVaccine.jsx":"60","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Vaccines\\NewVaccine.jsx":"61","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\camera.jsx":"62","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\prescription.jsx":"63","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Prescription.jsx":"64","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\generated_bill.jsx":"65","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\timer_notify.jsx":"66","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\timeout_notifications.jsx":"67","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\fetch_apis.jsx":"68"},{"size":19886,"mtime":1699613095239,"results":"69","hashOfConfig":"70"},{"size":23005,"mtime":1697520192852,"results":"71","hashOfConfig":"70"},{"size":26950,"mtime":1698647500574,"results":"72","hashOfConfig":"70"},{"size":456374,"mtime":1697542545233,"results":"73","hashOfConfig":"70"},{"size":47051,"mtime":1698909653816,"results":"74","hashOfConfig":"70"},{"size":47719,"mtime":1693898947844,"results":"75","hashOfConfig":"70"},{"size":3313,"mtime":1693458475655,"results":"76","hashOfConfig":"70"},{"size":880,"mtime":1693459071356,"results":"77","hashOfConfig":"70"},{"size":55610,"mtime":1699612727061,"results":"78","hashOfConfig":"70"},{"size":11514,"mtime":1697531498103,"results":"79","hashOfConfig":"70"},{"size":11903,"mtime":1693648671793,"results":"80","hashOfConfig":"70"},{"size":12954,"mtime":1695443211449,"results":"81","hashOfConfig":"70"},{"size":13594,"mtime":1694003472184,"results":"82","hashOfConfig":"70"},{"size":8924,"mtime":1693898936309,"results":"83","hashOfConfig":"70"},{"size":40196,"mtime":1695384097501,"results":"84","hashOfConfig":"70"},{"size":12705,"mtime":1696404736019,"results":"85","hashOfConfig":"70"},{"size":17700,"mtime":1693898985115,"results":"86","hashOfConfig":"70"},{"size":7601,"mtime":1693898988784,"results":"87","hashOfConfig":"70"},{"size":38448,"mtime":1699937068290,"results":"88","hashOfConfig":"70"},{"size":432,"mtime":1691488969945,"results":"89","hashOfConfig":"70"},{"size":2117,"mtime":1698301057481,"results":"90","hashOfConfig":"70"},{"size":7759,"mtime":1697010179397,"results":"91","hashOfConfig":"70"},{"size":16737,"mtime":1698389570584,"results":"92","hashOfConfig":"70"},{"size":8004,"mtime":1691821988130,"results":"93","hashOfConfig":"70"},{"size":13749,"mtime":1696911629681,"results":"94","hashOfConfig":"70"},{"size":6924,"mtime":1698906183979,"results":"95","hashOfConfig":"70"},{"size":12443,"mtime":1692688197639,"results":"96","hashOfConfig":"70"},{"size":14031,"mtime":1693289332350,"results":"97","hashOfConfig":"70"},{"size":12846,"mtime":1692686628010,"results":"98","hashOfConfig":"70"},{"size":6347,"mtime":1697009791314,"results":"99","hashOfConfig":"70"},{"size":9993,"mtime":1692170820727,"results":"100","hashOfConfig":"70"},{"size":11079,"mtime":1692170931238,"results":"101","hashOfConfig":"70"},{"size":14419,"mtime":1692688969534,"results":"102","hashOfConfig":"70"},{"size":10944,"mtime":1692169421052,"results":"103","hashOfConfig":"70"},{"size":10151,"mtime":1692168002759,"results":"104","hashOfConfig":"70"},{"size":11592,"mtime":1692167617435,"results":"105","hashOfConfig":"70"},{"size":11701,"mtime":1692166468509,"results":"106","hashOfConfig":"70"},{"size":13384,"mtime":1692688369406,"results":"107","hashOfConfig":"70"},{"size":10506,"mtime":1692003988196,"results":"108","hashOfConfig":"70"},{"size":11641,"mtime":1692166844760,"results":"109","hashOfConfig":"70"},{"size":15324,"mtime":1695819068519,"results":"110","hashOfConfig":"70"},{"size":59394,"mtime":1696395168523,"results":"111","hashOfConfig":"70"},{"size":69346,"mtime":1692275245660,"results":"112","hashOfConfig":"70"},{"size":8767,"mtime":1694003676620,"results":"113","hashOfConfig":"70"},{"size":1018,"mtime":1691488969946,"results":"114","hashOfConfig":"70"},{"size":13675,"mtime":1696402666226,"results":"115","hashOfConfig":"70"},{"size":5265,"mtime":1693032537367,"results":"116","hashOfConfig":"70"},{"size":132,"mtime":1691488969871,"results":"117","hashOfConfig":"70"},{"size":21315,"mtime":1691822144242,"results":"118","hashOfConfig":"70"},{"size":7147,"mtime":1697873488423,"results":"119","hashOfConfig":"70"},{"size":3219,"mtime":1697461805240,"results":"120","hashOfConfig":"70"},{"size":14400,"mtime":1691840552387,"results":"121","hashOfConfig":"70"},{"size":4605,"mtime":1691840706213,"results":"122","hashOfConfig":"70"},{"size":10713,"mtime":1696508876605,"results":"123","hashOfConfig":"70"},{"size":23261,"mtime":1696918680523,"results":"124","hashOfConfig":"70"},{"size":35192,"mtime":1698737001429,"results":"125","hashOfConfig":"70"},{"size":30157,"mtime":1696835848260,"results":"126","hashOfConfig":"70"},{"size":13209,"mtime":1695443045537,"results":"127","hashOfConfig":"70"},{"size":383,"mtime":1691488969947,"results":"128","hashOfConfig":"70"},{"size":5282,"mtime":1693049262211,"results":"129","hashOfConfig":"70"},{"size":4942,"mtime":1693052782345,"results":"130","hashOfConfig":"70"},{"size":9851,"mtime":1696827700842,"results":"131","hashOfConfig":"70"},{"size":788,"mtime":1696487098200,"results":"132","hashOfConfig":"70"},{"size":1332,"mtime":1696073848726,"results":"133","hashOfConfig":"70"},{"size":755,"mtime":1699087624083,"results":"134","hashOfConfig":"70"},{"size":1338,"mtime":1698904217362,"results":"135","hashOfConfig":"70"},{"size":3857,"mtime":1698922285661,"results":"136","hashOfConfig":"70"},{"size":2070,"mtime":1698473234648,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bo87vf",{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"145"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":657,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"145"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":67,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"145"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":77,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"145"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"145"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"145"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"145"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"145"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"145"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"145"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"145"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"145"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"145"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"145"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"145"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"145"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"145"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"145"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"145"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"145"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"145"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"145"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"145"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"145"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"145"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"145"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"145"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"145"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"145"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"145"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"145"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"145"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"145"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"145"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":75,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"145"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":86,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"145"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"145"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"145"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"145"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"145"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"145"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"145"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"145"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"145"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"145"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"145"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"145"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"145"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"145"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"145"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"145"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"145"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"145"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"145"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"145"},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"145"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"145"},"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\index.jsx",["401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423"],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\SelectedAppointments.jsx",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Payments } from './Payments.jsx'\r\nimport { Prescription } from '../Today/prescription'\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport Notiflix from 'notiflix';\r\nimport { URL, Permissions,TodayDate } from '../../index'\r\nimport '../../css/appointment.css'\r\nimport { Bill } from './Bill'\r\nimport { Bill as TodayBill } from '../Today/Bill'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport { Generated_bill } from '../Today/generated_bill'\r\nimport { appointment_status } from '../Today/fetch_apis'\r\n\r\nconst SelectedAppointments = (props) => {\r\n  const url = useContext(URL);\r\n  const todaydate = useContext(TodayDate)\r\n  const permission = useContext(Permissions)\r\n  let adminid = localStorage.getItem('id')\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [paymentindex, setpaymentindex] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [tableindex, settableindex] = useState()\r\n  const[bindex,setbindex]=useState()\r\n  const [status_appointment,setstatus_appointment] = useState([])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n    }\r\n  }\r\n  const closeappointmentform = () => {\r\n\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  }\r\n  const toggle_payments = () => {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentindex()\r\n    }\r\n  }\r\n  const toggle_bill = () => {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n    if (billform === 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Notiflix.Loading.circle('Updating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E'\r\n        }\r\n        )\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Notiflix.Loading.remove()\r\n          props.fetchallAppointmentslist()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Loading.remove()\r\n        alert(e)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.success(response.data.message)\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n        props.fetchallAppointmentslist()\r\n        props.setsingleload(0)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n     await axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.fetchallAppointmentslist()\r\n        props.setsingleload(0)\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Notiflix.Loading.remove()\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n     \r\n        })\r\n      } catch (e) {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const[pindex,setpindex]=useState()\r\n  const [prescriptions,setprescriptions] =useState([])\r\n  const[pload,setpload]=useState('none')\r\n  const Get_Document=(id,i)=>{\r\n    setpindex(i)\r\n    try{\r\n      setpload(true)\r\n      axios.get(`${url}/all/document?appointment_id=${id}`).then((response)=>{\r\n        setprescriptions(response.data.data)\r\n        setpload(false)\r\n      })\r\n    }catch(e){\r\n      setpload(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  const toggle_ScannedPres = ()=>{\r\n      setpindex()\r\n      }\r\n      const toggle_Scannedbill = ()=>{\r\n        setbindex()\r\n        }\r\n        const togglecamera = (id)=>{\r\n          localStorage.setItem('appointmentid',id)\r\n          window.open('/scan/prescription','_blank')\r\n        }\r\n  useEffect(()=>{\r\n    Get_Document()\r\n  },[])\r\n  async function getdata (){\r\n    if(status_appointment!=undefined && status_appointment.length==0){\r\n      const data = await appointment_status()\r\n      setstatus_appointment(data)\r\n     }\r\n  }\r\n  useEffect(()=>{\r\n    getdata()\r\n  },[]) \r\n  return (\r\n    <>\r\n      {\r\n        props.singleload == 0 ? (\r\n          <div className='container text-center position-absolute start-0 end-0'>\r\n            <h4>Hold on its loading</h4>\r\n            <div class=\"spinner-grow bg-charcoal col-2\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n\r\n          props.appointmentdata.length == 0 ? (\r\n            <div className=\"container text-center text-charcoal position-absolute start-0 end-0\">\r\n              <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n            </div>\r\n          ) : (\r\n\r\n            props.appointmentdata.map((data, key) => (\r\n              <tr id={key} className='text-charcoal fw-bold align-middle text-start'>\r\n                <td className={`ps-3 text-center d-${permission.appointment_edit == 1 ? '' : 'none'} bg-${tableindex == key ? 'lightyellow' : ''}`}>\r\n                  <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} onClick={(e) => { settableindex(key); openapppointmentform(); }} className=\"btn p-0 m-0\" />\r\n                </td>\r\n                <td className='fw-bold text-charcoal'>{data.bill_id ? 'C-'+data.bill_id:\"\"}</td>\r\n                <td>\r\n                  <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-1 p-0 m-0 me-2\">\r\n                      <div className={`rounded-circle border-1 button-${props.status_color(data.appointment_status)}`} style={{ height: '12px', width: '12px' }}></div>\r\n                    </div>\r\n                        <div className=\"col-5 p-0 m-0 text-wrap \">\r\n                                        <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent fw-bold border-0 text-wrap `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                            <option className=\"button text-start\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                                            {\r\n                                      status_appointment && status_appointment.length > 0 && status_appointment.map((data)=>(\r\n                                        <option className=\"fw-bold\" value={data.id}>{data.title}</option>\r\n                                      ))\r\n                                    }\r\n                                        </select>\r\n                                    </div>\r\n                  </div>\r\n                </td>\r\n                {/* <td><button className={`btn button-${props.status_color(data.appointment_status)} text-charcoal fw-bold rounded-5`}>{props.status(data.appointment_status)}</button></td> */}\r\n                <td>\r\n                  <div className=\"col-auto\">\r\n                    {data.patient != null && data.patient.full_name != null ? data.patient.full_name : ''}{data.patient != null && data.patient.is_profile_verified ==1 ? <img className='img-fluid p-0 m-0' src={process.env.PUBLIC_URL + 'images/verified.png'} style={{scale:'0.8'}}/>:'' }\r\n                  </div>\r\n                  <div className=\"col-auto text-burntumber\">\r\n                    {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"}\r\n                  </div>\r\n                </td>\r\n                <td>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                {/* <td></td> */}\r\n                <td>\r\n                  <div className=\"col-auto\">\r\n                    {data.timeslot.date && data.timeslot.date !== null ? reversefunction(data.timeslot.date) : ''}\r\n                  </div>\r\n                  <div className=\"col-auto text-burntumber\">\r\n                    {data.follow_up_date ? 'F/U- ' + reversefunction(data.follow_up_date ? data.follow_up_date : '') : ''}\r\n                  </div>\r\n                </td>\r\n                <td>{props.tConvert(data.timeslot.time_from)}</td>\r\n                <td>\r\n                  <div className=\"col-auto\">\r\n                    {data.total_amount}\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <AmountPaid appointmentData={data} />\r\n                  </div>\r\n                </td>\r\n                {/* <td className=''></td> */}\r\n                {/* <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td> */}\r\n                {/* <td>{data.follow_up_date ? data.follow_up_date : ''}</td> */}\r\n                {/* <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td> */}\r\n                <td className='text-center'>\r\n                  <div className=\"dropdown text-decoration-none d-inline-block bg-transparent\">\r\n                  <button className=\"button p-0 m-0 bg-transparent border-0 p-0 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\"  />\r\n                  </button>\r\n                  <ul className=\"dropdown-menu text-decoration-none bg-white p-2\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content' }}>\r\n                    <li className='dropdown-item  fw-bold d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + 'images/bill.png'} />Bill</li>\r\n                    <li className={`d-${ todaydate == data.timeslot.date ?'':'none'} dropdown-item fw-bold d-flex border-bottom p-0 m-0 align-items-center`} onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" />Generate Bill</li>\r\n                    <li className={`d-${data.bill_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() => { setbindex(key) }}> <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" /> View Bill</li>\r\n                    <li className={`d-${ todaydate == data.timeslot.date ?'':'none'} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() =>togglecamera(data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/new_tab.png\"} alt=\"displaying_image\"/>Scan Prescription</li>\r\n                    <li className={`d-${ todaydate == data.timeslot.date ?'':'none'} dropdown-item fw-bold d-flex border-bottom p-0 m-0 align-items-center`} onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\"/> Generate Prescription </li>\r\n                    <li className={`d-${data.prescription_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() =>Get_Document(data.id,key)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/new_tab.png\"} alt=\"displaying_image\"/>View Prescription</li>\r\n                    <li className={`dropdown-item fw-bold  border-bottom p-0 m-0 align-items-center d-${permission.appointment_charges_edit == 1 ? '' : 'none'}`} onClick={() => { setpaymentindex(key); toggle_payments(); }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + 'images/rupee.png'} />Payments</li>\r\n                    <li className=\"dropdown-item fw-bold d-flex border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\"/> Send on Whats App </li>\r\n                    <li className=\"dropdown-item fw-bold d-flex p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\" />{' '}Send on SMS</li>\r\n                  </ul>\r\n                </div></td>\r\n                {\r\n                  tableindex == key ? (\r\n                    <>\r\n                    <div className=\"backdrop\"></div>\r\n                    <td className={` d-${tableindex == key ? appointmentform : 'none'}  updateappointment bg-seashell col-lg-8 col-xl-5 col-md-10 col-sm-10 col-12 start-0 end-0  mx-auto top-0 border border-1 rounded-1 position-absolute`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                      <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}\r\n                        patientid={data.patient && data.patient.id !== null ? data.patient.id : 'N/A'} appointmentid={data.id && data.id !== null ? data.id : 'N/A'}\r\n                        closeappointmentform={closeappointmentform} doctorid={props.doctorid ? props.doctorid : 'N/A'}\r\n                        fetchapi={props.fetchapi}\r\n                        appointmentdoctorid={data.doctor.id}\r\n                        appointmentdate={data.appointment_date}\r\n                        appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                        </>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  billindex == key ? (\r\n                    <>\r\n                     <div className=\"backdrop\"></div>\r\n                    \r\n                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 p-0 m-0 top-0 col-sm-12 col-12 col-xl-6 border border-2 rounded-1 shadow position-absolute top-0`} style={{ zIndex: '3',height:'70vh'}}>\r\n                        {\r\n                          todaydate == data.timeslot.date ? (\r\n                            <>\r\n                            <TodayBill fetchapi={props.fetchapi}\r\n                             CloseBillForm={toggle_bill} \r\n                             patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} \r\n                             phone_number = {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"} \r\n                             patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} \r\n                             Appointmentlist={props.fetchallAppointmentslist} \r\n                             setsingleload={props.setsingleload} \r\n                              Data={data} \r\n                             appointmentdata={props.appointmentdata} \r\n                             appointmentid={data.id} doctorfee={data.doctor.consulationFee} billform={billform}/>\r\n                            </>\r\n                          ):(\r\n                            <>\r\n                            <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                            toggle_bill={toggle_bill}\r\n                            patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                            appointmentdata={props.appointmentdata[key]}\r\n                            appointmentid={data.id}\r\n                            doctorfee={data.doctor.consulationFee} />\r\n                            </>\r\n                          )\r\n                        }\r\n   \r\n                        </td>\r\n                              </>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  paymentindex == key ? (\r\n                    <>\r\n                    <div className=\"backdrop\"></div>\r\n                    <td className={`payments top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-12 col-12 col-xl-6 rounded-1 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                      <Payments\r\n                        toggle_payments={toggle_payments}\r\n                        appointmentdata={props.appointmentdata[key]}\r\n                        fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                    </td>\r\n                    </>\r\n                  ) : (<></>)\r\n                }\r\n                 {\r\n                              pindex == key ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${pindex == key ? pindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                <Prescription prescriptions={data.prescription_file} toggle_ScannedPres={toggle_ScannedPres} load={pload}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>)\r\n                  }\r\n                                         {\r\n                              bindex == key ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${bindex == key ? bindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                <Generated_bill bill={data.bill_file} toggle_Scannedbill={toggle_Scannedbill}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>) \r\n                            }\r\n              </tr>\r\n            ))\r\n          )\r\n        )\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SelectedAppointments }",[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\AllAppointmentslist.jsx",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],[],"import React from 'react'\r\nimport { useState, useContext,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Prescription } from '../Today/prescription'\r\nimport { Bill as TodayBill } from '../Today/Bill'\r\nimport { Bill } from './Bill'\r\nimport '../../css/appointment.css'\r\nimport { Payments } from './Payments.jsx'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport { Generated_bill } from '../Today/generated_bill'\r\nimport { appointment_status } from '../Today/fetch_apis'\r\n//COntext APIs\r\nimport { URL, Permissions,TodayDate } from '../../index'\r\n\r\nconst AllAppointmentslist = (props) => {\r\n    const url = useContext(URL);\r\n    const todaydate = useContext(TodayDate)\r\n    const permission = useContext(Permissions);\r\n    let adminid = localStorage.getItem('id')\r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    const [paymentsform, setpaymentsform] = useState('none')\r\n    const [paymentindex, setpaymentindex] = useState()\r\n    const [tableindex, settableindex] = useState()\r\n    const [billindex, setbillindex] = useState()\r\n    const [billform, setbillform] = useState('none')\r\n    const[bindex,setbindex]=useState()\r\n    const [status_appointment,setstatus_appointment] = useState([])\r\n\r\n    const closeappointmentform = () => {\r\n        if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\");\r\n            settableindex()\r\n        }\r\n    };\r\n    const openapppointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\");\r\n        }\r\n    }\r\n    const toggle_payments = () => {\r\n        if (paymentsform === 'none') {\r\n            setpaymentsform('block')\r\n        }\r\n        if (paymentsform === 'block') {\r\n            setpaymentsform('none')\r\n            setpaymentindex()\r\n        }\r\n    }\r\n    const toggle_bill = () => {\r\n        if (billform === 'none') {\r\n            setbillform('block')\r\n        }\r\n        if (billform === 'block') {\r\n            setbillform('none')\r\n            setbillindex()\r\n        }\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    async function UpadteStatus(e) {\r\n        if (e.target.value && adminid && e.target.name) {\r\n            try {\r\n                Notiflix.Loading.circle('Updating Appointment Status', {\r\n                    backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                    svgColor: '#96351E',\r\n                    messageColor: '#96351E',\r\n                    messageFontSize: '1.5rem'\r\n                }\r\n                )\r\n                await axios.post(`${url}/appointment/change/status`, {\r\n                    appointment_id: e.target.name,\r\n                    status: e.target.value,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    Notiflix.Loading.remove()\r\n                    props.fetchallAppointmentslist()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                }).catch((e)=>{\r\n                    Notiflix.Loading.remove()\r\n                    Notiflix.Notify.failure(e.message)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Loading.remove()\r\n                alert(e)\r\n\r\n            }\r\n        } else {\r\n            Notiflix.Notify.alert('Please try Again')\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n    const Generate_Bill = async (id) => {\r\n        Notiflix.Loading.circle('Generating Bill', {\r\n            backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n            svgColor: '#96351E',\r\n            messageColor: '#96351E',\r\n            messageFontSize: '1.5rem'\r\n        })\r\n        try {\r\n            axios.post(`${url}/appointment/bill`, {\r\n                appointment_id: id,\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.fetchallAppointmentslist()\r\n                props.setsingleload(0)\r\n                window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n  \r\n            }).catch((e)=>{\r\n                Notiflix.Loading.remove()\r\n                Notiflix.Notify.failure(e.message)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Loading.remove()\r\n            Notiflix.Notify.failure(e.message)\r\n     \r\n        }\r\n    }\r\n    const Generate_Prescription = async (id) => {\r\n        Notiflix.Loading.circle('Generating Prescription', {\r\n            backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n            svgColor: '#96351E',\r\n            messageColor: '#96351E',\r\n            messageFontSize: '1.5rem'\r\n        })\r\n        try {\r\n           await axios.post(`${url}/swift/pdf`, {\r\n                appointment_id: id,\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                Notiflix.Notify.success(response.data.message)\r\n                if(response.data.data.prescription_pdf){\r\n                    props.fetchallAppointmentslist()\r\n                    props.setsingleload(0)\r\n                    window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n                }\r\n   \r\n        \r\n             \r\n            }).catch((e)=>{\r\n                Notiflix.Loading.remove()\r\n                Notiflix.Notify.failure(e.message)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Loading.remove()\r\n            Notiflix.Notify.failure(e.message)\r\n          \r\n        }\r\n         \r\n    }\r\n    const Send_On_WhatsApp = async (id, phone, check) => {\r\n        let checkpres = check\r\n        if (phone == undefined || phone == null) {\r\n            Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n        } else {\r\n            Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E',\r\n                messageColor: '#96351E',\r\n                messageFontSize: '1.5rem'\r\n            })\r\n            try {\r\n                axios.post(`${url}/send/bill/whatsapp`, {\r\n                    appointment_id: id,\r\n                    check_pres: checkpres,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    Notiflix.Loading.remove()\r\n                    Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n                \r\n                })\r\n            } catch (e) {\r\n                Notiflix.Loading.remove()\r\n                Notiflix.Notify.failure(e.message)\r\n            }\r\n        }\r\n\r\n    }\r\n    const Confirm_For_Prescription = (id, phone) => {\r\n\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Choose Option to Send `,\r\n            `Do you want to send the Bill`,\r\n            'With the Prescription ?',\r\n            'Without the Prescription ?',\r\n            () => {\r\n                Send_On_WhatsApp(id, phone, 1)\r\n            },\r\n            () => {\r\n                Send_On_WhatsApp(id, phone, 0)\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const Send_On_SMS = async (id, phone, check) => {\r\n        let checkpres = check\r\n        if (phone == undefined || phone == null) {\r\n            Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n        } else {\r\n            Notiflix.Loading.circle('Sending Bill on SMS', {\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E',\r\n                messageColor: '#96351E',\r\n                messageFontSize: '1.5rem'\r\n            })\r\n            try {\r\n                axios.post(`${url}/send/bill/sms`, {\r\n                    appointment_id: id,\r\n                    check_bill: 1,\r\n                    check_pre: checkpres,\r\n                }).then((response) => {\r\n                    Notiflix.Loading.remove()\r\n                    Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n        \r\n                })\r\n            } catch (e) {\r\n                Notiflix.Loading.remove()\r\n                Notiflix.Notify.failure(e.message)\r\n  \r\n            }\r\n        }\r\n\r\n    }\r\n    const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Choose Option to Send `,\r\n            `Do you want to send the Bill`,\r\n            'With the Prescription ?',\r\n            'Without the Prescription ?',\r\n            () => {\r\n                Send_On_SMS(id, phone, 1)\r\n            },\r\n            () => {\r\n                Send_On_SMS(id, phone, 0)\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const[pindex,setpindex]=useState()\r\n    const [prescriptions,setprescriptions] =useState([])\r\n    const[pload,setpload]=useState('none')\r\n\r\n    const Get_Document=(id,i)=>{\r\n      setpindex(i)\r\n      try{\r\n        setpload(true)\r\n        axios.get(`${url}/all/document?appointment_id=${id}`).then((response)=>{\r\n          setprescriptions(response.data.data)\r\n          setpload(false)\r\n        })\r\n      }catch(e){\r\n        setpload(false)\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    }\r\n    const toggle_ScannedPres = ()=>{\r\n        setpindex()\r\n        }\r\n    useEffect(()=>{\r\n      Get_Document()\r\n    },[])\r\n    const toggle_Scannedbill = ()=>{\r\n        setbindex()\r\n        }\r\n        const togglecamera = (id)=>{\r\n            localStorage.setItem('appointmentid',id)\r\n            window.open('/scan/prescription','_blank')\r\n          }\r\n          async function getdata (){\r\n            if(status_appointment!=undefined && status_appointment.length==0){\r\n              const data = await appointment_status()\r\n              setstatus_appointment(data)\r\n             }\r\n          }\r\n          useEffect(()=>{\r\n            getdata()\r\n          },[])\r\n      \r\n    return (\r\n        <>\r\n            {\r\n                props.singleload == 0 ? (\r\n\r\n                    <div className='container text-center position-absolute start-0 end-0' >\r\n                        <h4>Hold on its Loading</h4>\r\n                        <div className=\"spinner-grow bg-secondary col-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (props.getAppointments.length == 0 ? (\r\n\r\n                    <div className=\"container text-center text-charcoal position-absolute start-0 end-0\">\r\n                        <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n                    </div>\r\n\r\n                ) : (\r\n\r\n                    props.getAppointments.map((data, key) => (\r\n                        <tr id={key} key={key} className='align-middle text-start'>\r\n                            <td className={`d-${permission.appointment_edit == 1 ? '' : 'none'} bg-${tableindex == key ? 'lightyellow' : ''} text-center ps-3`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"}  onClick={(e) => { openapppointmentform(); settableindex(key) }} className=\"btn img-fluid p-0 m-0\" />\r\n                            </td>\r\n                            <td className='fw-bold text-charcoal'>{data.bill_id ? 'C-'+data.bill_id:\"\"}</td>\r\n                            <td className='text-start pe-5 pe-lg-0 '>\r\n                                <div className=\"row p-0 m-0 align-items-center text-wrap\">\r\n                                    <div className=\"col-1 p-0 m-0 me-2\">\r\n                                        <div className={`rounded-circle border-1 button-${props.status_color(data.appointment_status)}`} style={{ height: '12px', width: '12px' }}></div>\r\n                                    </div>\r\n                                    <div className=\"col-5 p-0 m-0 text-wrap \">\r\n                                        <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent fw-bold border-0 text-wrap `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                            <option className=\"button text-start\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                                            {\r\n                                      status_appointment && status_appointment.length > 0 && status_appointment.map((data)=>(\r\n                                        <option className=\"fw-bold\" value={data.id}>{data.title}</option>\r\n                                      ))\r\n                                    }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>\r\n                                <div className=\"col-auto\">\r\n                                    {data.patient != null && data.patient.full_name != null ? data.patient.full_name : ''}{data.patient != null && data.patient.is_profile_verified ==1 ? <img className='p-0 m-0' src={process.env.PUBLIC_URL + 'images/verified.png'} style={{scale:'0.8'}}/>:'' }\r\n                                </div>\r\n                                <div className=\"col-auto text-burntumber\">\r\n                                    {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"}\r\n                                </div>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                            {/* <td className='text-charcoal fw-bold'></td> */}\r\n                            <td className='text-charcoal fw-bold'>\r\n                                <div className=\"col-auto\">\r\n                                    {data.timeslot && data.timeslot.date !== null ? reversefunction(data.timeslot.date) : ''}\r\n                                </div>\r\n                                <div className=\"col-auto text-burntumber\">\r\n                                    {data.follow_up_date ? 'F/U- ' + reversefunction(data.follow_up_date ? data.follow_up_date : '') : ''}\r\n                                </div>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>{data.timeslot && data.timeslot.time_from !== null ? props.tConvert(data.timeslot.time_from) : ''}</td>\r\n                            <td className='text-charcoal fw-bold text-start' style={{ width: 'min-content' }}>\r\n                                <div className=\"col-auto\">\r\n                                    ₹{data.total_amount && data.total_amount !== null ? data.total_amount : data.total_amount}\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                    <AmountPaid appointmentData={data} Appointmentlist = {props.fetchallAppointmentslist} />\r\n                                </div>\r\n                            </td>   \r\n\r\n                            {/* <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td> */}\r\n                            {/* <td>\r\n                              \r\n                             </td> */}\r\n                            {/* <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td> */}\r\n                            <td className='text-center  align-self-center p-0 m-0 '>\r\n                                <div className=\"dropdown text-decoration-none d-inline-block\">\r\n                                    <button className=\"button p-0 m-0 bg-transparent border-0 p-0  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" />\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu shadow-sm text-decoration-none p-0 m-0 p-2\" style={{ '-webkit-appearance': 'none', width: 'max-content' }}>\r\n                                <li className='dropdown-item fw-bold border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + 'images/bill.png'} />Bill</li> \r\n\r\n\r\n                                    <li className={`d-${ todaydate == data.timeslot.date ? '':'none'} dropdown-item fw-bold border-bottom p-0 m-0 align-items-center`} onClick={() => { Generate_Bill(data.id) }}>\r\n                                    <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" />Generate Bill</li>\r\n\r\n                                <li className={`d-${data.bill_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() => { setbindex(key) }}>\r\n                                    <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" /> View Bill</li>\r\n\r\n\r\n                                    <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() =>togglecamera(data.id)}>\r\n                                        <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/new_tab.png\"} alt=\"displaying_image\"/>Scan Prescription</li>\r\n\r\n                                <li className={`d-${ todaydate == data.timeslot.date ?'':'none'} dropdown-item fw-bold border-bottom p-0 m-0 align-items-center`} onClick={() => { Generate_Prescription(data.id) }}>\r\n                                    <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Prescription </li>\r\n\r\n                                 <li className={`d-${data.prescription_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() =>Get_Document(data.id,key)}>\r\n                                    <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/new_tab.png\"} alt=\"displaying_image\"/>View Prescription</li>\r\n\r\n                                    <li className={`dropdown-item fw-bold border-bottom p-0 m-0 align-items-center d-${permission.appointment_charges_edit == 1 ? '' : 'none'}`} onClick={() => { setpaymentindex(key); toggle_payments(); }}>\r\n                                    <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + 'images/rupee.png'} />Payments</li> \r\n                                <li className=\"dropdown-item fw-bold border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}>\r\n                                    <img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" /> Send on Whats App </li>\r\n\r\n                                <li className=\"dropdown-item fw-bold p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}>\r\n                                    <img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\"/>{' '}Send on SMS</li>\r\n                                    </ul>\r\n                                </div></td>\r\n                            {\r\n                                tableindex == key ? (\r\n                                    <>\r\n                                             <div className=\"backdrop\"></div>\r\n                                             <td className={` d-${tableindex == key ? appointmentform : 'none'} updateappointment bg-seashell p-0 col-lg-8 col-xl-5 col-md-10 col-sm-10 col-12 start-0 end-0 fw-none  mx-auto top-0 border border-1 rounded-2 shadow-sm position-absolute`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                                        <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} closeappointmentform={closeappointmentform} doctorid={props.doctorid} fetchapi={props.fetchapi} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} />\r\n                                    </td>\r\n                                    </>\r\n                          \r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                billindex == key ? (\r\n                                    <>\r\n                                              <div className=\"backdrop\"></div>\r\n                                   \r\n                                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell p-0 m-0 col-lg-8 col-md-10 start-0 top-0 mx-auto end-0 top-0 col-sm-12 col-12 col-xl-6 border border-2 rounded-1 shadow-sm position-absolute`} style={{ zIndex: '3', height:'70vh' }}>\r\n                            {\r\n                                todaydate == data.timeslot.date ? (\r\n                                    <>\r\n                                    <TodayBill fetchapi={props.fetchapi} \r\n                            CloseBillForm={toggle_bill} \r\n                            patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} \r\n        phone_number = {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} Appointmentlist={props.fetchallAppointmentslist} \r\n        setsingleload={props.setsingleload} \r\n        Data={data} \r\n        appointmentdata={props.getAppointments} \r\n        appointmentid={data.id} doctorfee={data.doctor.consulationFee} billform={billform}/>\r\n                                                </>\r\n                            ):(\r\n                                <>\r\n                            <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                    toggle_bill={toggle_bill}\r\n                                            patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            appointmentid={data.id}\r\n                                            doctorfee={data.doctor.consulationFee}\r\n                                            />\r\n                                                </>\r\n                                            )\r\n                                        }\r\n                                   </td>\r\n                                             </>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                paymentindex == key ? (\r\n                                    <>\r\n                                    <div className=\"backdrop\"></div>\r\n                                    <td className={`payments top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-12 col-12 col-xl-6 rounded-1 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                                        <Payments\r\n                                            toggle_payments={toggle_payments}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                    </td>\r\n                                    </>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                              pindex == key ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${pindex == key ? pindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                <Prescription prescriptions={data.prescription_file} toggle_ScannedPres={toggle_ScannedPres} load={pload}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>)\r\n                            }\r\n                            {\r\n                              bindex == key ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${bindex == key ? bindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                <Generated_bill bill={data.bill_file} toggle_Scannedbill={toggle_Scannedbill}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>) \r\n                            }\r\n                        </tr>\r\n                    ))\r\n                )\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport { AllAppointmentslist }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\pharmacy.jsx",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../index\";\r\nimport { ExportPurchaseEntry, ExportPurchaseReturn, ExportSaleEntry, ExportSaleReturn,ExportTransferIn,ExportTransferOut,ExportDump } from \"../pharmacy/Exports\";\r\nimport { QRcode } from \"../features/qrcode\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport \"../../css/bootstrap.css\";\r\nimport \"../../css/dashboard.css\";\r\nimport \"../../css/pharmacy.css\";\r\nimport { AddAddress } from '../Patients/AddAddress';\r\nimport { NewMedicine } from \"./Medicines/NewMedicine\";\r\nimport { UpdateMedicine } from \"./Medicines/UpdateMedicine\";\r\nimport {UpdateVaccine} from './Vaccines/UpdateVaccine'\r\nimport {NewVaccine} from './Vaccines/NewVaccine'\r\n\r\n//-------------------------------------------------Sales------------------------------------------------------------------------------------------\r\nfunction Salesection(props) {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const permission = useContext(Permissions);\r\n  const first = [\r\n    {\r\n      option: \"Sale Entry\",\r\n      display: permission.sale_entry_view ? 1 : 0,\r\n    },\r\n    {\r\n      option: \"Sale Returns\",\r\n      display: permission.sale_return_view ? 1 : 0,\r\n    },\r\n  ];\r\n  const [second, setSecond] = useState(\"Sale Entry\");\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === \"Sale Entry\") {\r\n      return (\r\n        <Saleentrysection function={props.func} function2={props.function} fromdate={fromdate} todate={todate} ClinicID={ClinicID} />\r\n      );\r\n    }\r\n    if (_selected === \"Sale Returns\") {\r\n      return <SaleReturns fromdate={fromdate} todate={todate} ClinicID={ClinicID} />;\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"salesection pt-1\">\r\n        <div className=\"container-fluid p-0 m-0 mt-3\">\r\n          <div className=\"row gx-3 p-0 m-0 ms-1 position-relative\">\r\n            <div className=\"col-auto\">\r\n              <div class=\"dropdown\">\r\n                <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                 {second?second:\" Sale Type \"}\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                  {\r\n                    first.map((e, i) => (\r\n                      <li className={`dropdown-item text-${e.option === second ? \"light\" : \"dark\"} fw-bold bg-${e.option === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(e.option)} > {e.option} </li>\r\n                    )\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-auto bg-seashell rounded-2 \">\r\n              <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 border-0 text-charcoal text-center fw-bold \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0\">-</div>\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" className=\" border-0 button button-seashell text-charcoal text-center fw-bold\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid p-0 m-0 pt-3\">\r\n          <div className=\"\">{_selectedScreen(second)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction Saleentrysection(props) {\r\n  const permission = useContext(Permissions);\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = props.ClinicID;\r\n  const fromdate = props.fromdate;\r\n  const todate = props.todate;\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const url = useContext(URL);\r\n  const [seidw, setseidw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [saleentryarr, setsaleentryarr] = useState([]);\r\n  const [saleentryarrforExcel, setsaleentryarrforExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const [pages, setpages] = useState([]);\r\n  const [paymentsapage, setpaymentsapage] = useState(\"none\");\r\n  const [tabindex, settabindex] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n\r\n\r\n  const toggle_nsef = () => {\r\n    if (nsef === \"none\") {\r\n      setnsef(\"block\");\r\n    }\r\n    if (nsef === \"block\") {\r\n      setnsef(\"none\");\r\n    }\r\n  };\r\n  const toggle_seidw = () => {\r\n    if (seidw === \"none\") {\r\n      setseidw(\"block\");\r\n    }\r\n    if (seidw === \"block\") {\r\n      setseidw(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const toggle_payments = () => {\r\n    if (paymentsapage === \"none\") {\r\n      setpaymentsapage(\"block\");\r\n    }\r\n    if (paymentsapage === \"block\") {\r\n      setpaymentsapage(\"none\");\r\n      settabindex();\r\n    }\r\n  }\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETSalesList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n          .then((response) => {\r\n            ;\r\n            setsaleentryarr(response.data.data.sale_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n          .then((response) => {\r\n            ;\r\n            setsaleentryarr(response.data.data.sale_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETSalesListForExcel() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/entry?clinic_id=${ClinicID}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        ).then((response) => {\r\n          setsaleentryarrforExcel(response.data.data.sale_entry);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETSalesList();\r\n    GETSalesListForExcel();\r\n  }, [pagecount]);\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  let array = [\r\n    [1, \"Confirmed\", \"lightgreen\"],\r\n    [2, \"Payment done\", \"success\"],\r\n    [3, \"Completed\", \"lightyellow\"],\r\n    [4, \"Cancelled\", \"lightred\"],\r\n  ]\r\n  function status(number) {\r\n    let status;\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1];\r\n        break;\r\n      }\r\n    }\r\n    return status;\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2];\r\n        break;\r\n      }\r\n    }\r\n    return status_color;\r\n  }\r\n  //Status\r\n  const UpdateStatus = async (e, id) => {\r\n    try {\r\n      await axios.post(`${url}/sale/entry/change/status`, { sale_entry_id: id, status: e.target.value, admin_id: adminid, })\r\n        .then((response) => {\r\n          ;\r\n          Notiflix.Notify.success(response.data.message);\r\n          GETSalesList();\r\n        })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle(\"Generating Bill\", {\r\n      backgroundColor: \"rgb(242, 242, 242,0.5)\",\r\n      svgColor: \"#96351E\",\r\n      messageColor: \"#96351E\",\r\n      messageFontSize: \"1.5rem\",\r\n    });\r\n    try {\r\n      axios\r\n        .post(`${url}/sale/entry/bill`, {\r\n          sale_entry_id: id,\r\n          admin_id: adminid,\r\n        })\r\n        .then((response) => {\r\n            if(response.data.status==true){\r\n              Notiflix.Notify.success(response.data.message);\r\n              Notiflix.Loading.remove();\r\n            }else{\r\n              Notiflix.Notify.failure(response.data.message);\r\n              Notiflix.Loading.remove();\r\n            }\r\n          window.open(response.data.data.bill_url, \"_blank\", \"noreferrer\");\r\n          Notiflix.Loading.remove();\r\n        }).catch((e)=>{\r\n          Notiflix.Loading.remove();\r\n          Notiflix.Notify.failure(e.message);     \r\n        })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove();\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n\r\n  };\r\n  const Send_On_WhatsApp = async (id, phone) => {\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure(\r\n        \"Please Add a Phone Number to send the message on WhatsApp\"\r\n      );\r\n    } else {\r\n      Notiflix.Loading.circle(\"Sending Bill on Whats App\", {\r\n        backgroundColor: \"rgb(242, 242, 242,0.5)\",\r\n        svgColor: \"#96351E\",\r\n        messageColor: \"#96351E\",\r\n        messageFontSize: \"1.5rem\",\r\n      });\r\n      try {\r\n        axios\r\n          .post(`${url}/sale/entry/send/bill/whatsapp`, {\r\n            sale_entry_id: id,\r\n            admin_id: adminid,\r\n          })\r\n          .then((response) => {\r\n            ;\r\n            Notiflix.Notify.success(response.data.message);\r\n            Notiflix.Loading.remove();\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        Notiflix.Loading.remove();\r\n      }\r\n    }\r\n  };  \r\n  return (\r\n    <>\r\n           <div className=\"col-auto position-absolute p-0 m-0 export align-self-center text-center \">\r\n          <ExportSaleEntry saleentryarr={saleentryarrforExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      <button className={`button addentrypurchase button-charcoal end-0 me-3  position-absolute d-${permission.sale_entry_add == 1 ? \"\" : \"none\"}`} onClick={toggle_nsef} >\r\n        <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />\r\n        Entry Sale\r\n      </button>\r\n          <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Sale Entries\" : \"Sale Entry\"}{\" \"} </h2>\r\n          <div className=\"position-relative\">\r\n      <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"100%\" }} >\r\n        <table className=\"table text-start table-responsive \">\r\n          <thead className=\" position-sticky top-0 bg-pearl\">\r\n            <tr className=\" \">\r\n              {/* <th className=\"text-charcoal75 fw-bolder text-center px-3\"> ID </th> */}\r\n              <th className=\"text-charcoal75 fw-bolder px-3\"> Bill ID </th>\r\n              <th className=\"text-charcoal75 fw-bolder\"> Patient Name </th>\r\n              <th className=\"text-charcoal75 fw-bolder\"> Bill Date </th>\r\n              <th className=\"text-charcoal75 fw-bolder\"> Bill Total </th>\r\n              {/* <th className=\"text-charcoal75 fw-bolder\"> Appointment Date </th> */}\r\n              <th className=\"text-charcoal75 fw-bolder\"> Doctor Name </th>\r\n              <th className=\"text-charcoal75 fw-bolder\"> Invoice No. </th>\r\n              <th className=\"text-charcoal75 fw-bolder text-center\"> Status </th>\r\n              <th className=\"text-charcoal75 fw-bolder text-center \"> Actions </th>\r\n              {/* <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>more</th> */}\r\n            </tr>\r\n          </thead>\r\n          {Loading ? (\r\n            <tbody\r\n              className=\"text-center\"\r\n              style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n            >\r\n              <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                <div class=\"d-flex align-items-center spinner\">\r\n                  <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                    Getting Details please be Patient ...\r\n                  </strong>\r\n                  <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </tr>\r\n            </tbody>\r\n          ) : saleentryarr && saleentryarr.length != 0 ? (\r\n            <tbody>\r\n              {saleentryarr.map((item, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                  {/* <td className=\"text-charcoal fw-bold text-center px-3\"> {item.id && item.id !== null ? item.id : \"\"} </td> */}\r\n                  <td className=\"text-charcoal fw-bold px-3\"> {item.bill_id && item.bill_id !== null ? \"P-\" + item.bill_id : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.patient && item.patient && item.patient.full_name != null ? item.patient.full_name : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.bill_date && item.bill_date ? reversefunction(item.bill_date) : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.grand_total && item.grand_total ? \"Rs. \" + item.grand_total : \"\"} </td>\r\n                  {/* <td className=\"text-charcoal fw-bold\"> {item.appointment && item.appointment != null && item.appointment.appointment_date && item.appointment.appointment_date != null ? reversefunction(item.appointment.appointment_date) : \"\"} </td> */}\r\n                  <td className=\"text-charcoal fw-bold\"> {item && item.doctor_name != null ? item.doctor_name : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.bill_id && item.bill_id !== null ? \"P-\" + item.bill_id : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold text-center\">\r\n                    <select disabled={item.sale_entry_status == 4 ? true : false} className={` fw-bolder border-0 bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} text-center rounded-pill  bg-${status_color(item.sale_entry_status)}`} name={item.id} onChange={(e) => { UpdateStatus(e, item.id); }} style={{ appearance: \"none\" }} >\r\n                      <option className=\"button\" selected disabled> {status(item.sale_entry_status)} </option>\r\n                      <option key={0} className=\"text-lightred bg-pearl\" value=\"1\" > Confirmed </option>\r\n                      <option key={1} className=\"text-lightblue  bg-pearl\" value=\"2\" > Payment Done </option>\r\n                      <option key={2} className=\"text-lightred  bg-pearl\" value=\"3\" > Completed </option>\r\n                      <option key={3} className=\"text-charcoal  bg-pearl\" value=\"4\" > Cancelled </option>\r\n                    </select>\r\n                  </td>\r\n                  <td className={`text-charcoal text-center bg-transparent fw-bold`} >\r\n                    <div className={`dropdown  bg-${tabindex == i ? \"lightyellow\" : \"\"} d-inline-block text-center text-decoration-none`} >\r\n                      <button className=\"button border-0 p-0 m-0 text-decoration-none dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" >\r\n                        <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\"/>\r\n                      </button>\r\n                      <ul className=\"dropdown-menu text-start\">\r\n                        <li className={`text-start dropdown-item border-bottom `} onClick={() => { settabindex(i); toggle_payments(); }}> <img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" className=\"me-1\" /> Payments </li>\r\n                        <li className=\" text-start dropdown-item border-bottom\" onClick={() => { setindex(i); toggle_seidw(); }}> <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"me -1\" />{\" \"} Inventory </li>\r\n                        <li className=\"text-start dropdown-item border-bottom\" onClick={() => { Generate_Bill(item.id); }}> <img src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" />{\" \"} Generate Bill </li>\r\n                        <li className=\"text-start dropdown-item\" onClick={() => { Send_On_WhatsApp(item.id, item.patient.phone_number); }}> <img src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" />{\" \"} Send Bill On WhatsApp{\" \"} </li>\r\n                      </ul>\r\n                    </div>\r\n                  </td>\r\n\r\n                  <td className=\"p-0 m-0\">\r\n                    {i == index ? (\r\n                      <>\r\n                      <div className=\"backdrop\"></div>\r\n                      <section className={`position-absolute d-${i == index ? seidw : \"none\"} start-0 end-0 mx-auto border border-1 bg-seashell rounded-4`} style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }}>\r\n                      <SEitemdetailssection saleentryarr={saleentryarr[i]} itembillid={\"P-\" + item.bill_id} toggle_seidw={toggle_seidw} />\r\n                      </section>\r\n                      </>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n       \r\n\r\n                  </td>\r\n\r\n                  <td className=\"p-0 m-0\">\r\n                    {i == tabindex ? (\r\n                      <>\r\n                      <div className=\"backdrop\"></div>\r\n                      <section className={`col-lg-8 col-xl-6 col-md-8 col-sm-10 start-0 end-0 top-0 mx-auto shadow rounded-4 position-absolute bg-pearl d-${tabindex == i ? paymentsapage : \"none\"}`}>\r\n                      <SaleEntrypayments GETSalesList={GETSalesList} saleentryarr={saleentryarr[i]} toggle_payments={toggle_payments} itembillid={\"P-\" + item.bill_id} />\r\n                      </section>\r\n                      </>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <strong className=\"text-charcoal fw-bolder text-center\"> No Sale Entries </strong>\r\n              </div>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETSalesList}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n      <section className={`newsaleentryform col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute d-${nsef} border rounded-2 shadow mx-auto top-0 bottom-0 m-auto start-0 end-0 bg-seashell`} style={{ height: \"70vh\" }} >\r\n        <SaleEntryForm toggle_nsef={toggle_nsef} GETSalesList={GETSalesList} />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction SaleEntrypayments(props) {\r\n  const url = useContext(URL);\r\n  const permission = useContext(Permissions);\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const [paymentmethods, setpaymentmethods] = useState([]);\r\n  const [previoustotal, setprevioustotal] = useState(0);\r\n  const [loading, setloading] = useState();\r\n  const paymentmethoddetails = {\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  };\r\n  async function AddPaymentMethods() {\r\n    let Payments = []\r\n    let amounts = []\r\n    let allamounts = []\r\n    Payments.push(Object.keys(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    amounts.push(Object.values(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    let paymentobj = []\r\n    let p = {\r\n      paymentmethod: \"\",\r\n      amount: 0,\r\n    }\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push((p = { paymentmethod: Payments[0][j], amount: amounts[0][j] }))\r\n      }\r\n      setpaymentmethods(allamounts)\r\n    }\r\n    paymentmethods.push(paymentobj)\r\n  }\r\n  useEffect(() => {\r\n    AddPaymentMethods();\r\n  }, [])\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i);\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments of  ${props.itembillid}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveSaleEntryCharges();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  async function SaveSaleEntryCharges() {\r\n    let PaymentMethod = [];\r\n    let PaymentMethodDetails = [];\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      PaymentMethod.push(paymentmethods[i].amount);\r\n      PaymentMethodDetails.push(paymentmethods[i].paymentmethod);\r\n    }\r\n    let Data = {\r\n      sale_entry_id: props.saleentryarr.id,\r\n      g_total_main: props.saleentryarr.grand_total,\r\n      payment_method: PaymentMethodDetails,\r\n      payment_method_main: PaymentMethodDetails,\r\n      payment_method_details: PaymentMethod,\r\n      admin_id: adminid,\r\n    };\r\n    try {\r\n      setloading(true);\r\n      await axios\r\n        .post(`${url}/sale/entry/save/charges`, Data)\r\n        .then((response) => {\r\n          props.GETSalesList();\r\n          setloading(false);\r\n          Notiflix.Notify.success(response.data.message);\r\n        });\r\n    } catch (e) {\r\n      setloading(false);\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  }\r\n  const CalPrevTotal = async () => {\r\n    let total = 0;\r\n    paymentmethods && paymentmethods.map((data) => (total += Number(data.amount)));\r\n    setprevioustotal(total);\r\n  }\r\n  useEffect(() => {\r\n    CalPrevTotal();\r\n  }, [props.saleentryarr]);\r\n\r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods((prevState) => [...prevState, paymentmethoddetails]);\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails]);\r\n    }\r\n  }\r\n  function Return_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    let Advance = 0;\r\n    if (paymentmethods && paymentmethods !== undefined) {\r\n      for (let i = 0; i < paymentmethods.length; i++) {\r\n        totalarr.push(Number(paymentmethods[i].amount));\r\n      }\r\n      totalarr.forEach((item) => {\r\n        total += item;\r\n      });\r\n      if (total > props.saleentryarr.grand_total) {\r\n        Advance = total - props.saleentryarr.grand_total;\r\n        return Number(Advance).toFixed(2);\r\n      } else {\r\n        return Number(Advance).toFixed(2);\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"p-0 m-0 text-center\">\r\n      <h6 className=\"text-center mt-2 fw-bold\">{props.itembillid} Payments</h6>\r\n      <hr className=\"p-0 m-0 mt-1\" />\r\n      <button className=\"btn-close position-absolute top-0 end-0 p-2 m-2 \" onClick={() => {props.toggle_payments();setpaymentmethods([])}} ></button>\r\n\r\n      <p className=\"text-charcoal p-0 m-auto fw-bolder\"> Grand Total :{\" \"} <span className=\"text-burntumber\"> Rs {props.saleentryarr.grand_total} </span> </p>\r\n      <hr className=\"p-0 m-0 mb-1\" />\r\n      <div className=\"container-fluid text-start position-relative\">\r\n        <div className={`d-${previoustotal == props.saleentryarr.grand_total ? \"\" : \"none\"} bg-lightgreen fw-bold text-center p-2 my-2`} > Payment Done </div>\r\n        <h6 className=\"text-charcoal fw-bolder text-center\">Payments</h6>\r\n        <h6 className=\"text-burntumber fw-bolder text-center\">{Return_Amount() > 0 ? `Amount Exceeded by ${Return_Amount()}` : \"\"}</h6>\r\n        {\r\n          paymentmethods ? (\r\n            paymentmethods.map((data, i) =>\r\n              permission.sale_entry_charges_edit == 1 ? (\r\n                <div className={`row p-0 m-0 justify-content-end g-2`}>\r\n                  <div className=\"col-4 \">\r\n                    <select className=\"form-control border-success py-1 text-center\" value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} >\r\n                      <option className=\"text-charcoal75 fw-bolder\"> Payment Method </option>\r\n                      <option value=\"Cash\">Cash</option>\r\n                      <option value=\"Card\">Card</option>\r\n                      <option value=\"Paytm\">Paytm</option>\r\n                      <option value=\"Phonepe\">Phone Pe</option>\r\n                      <option value=\"Wire-Transfer\">Wire Transfer</option>\r\n                      <option value=\"Razorpay\">Razorpay</option>\r\n                      <option value=\"Points\">Points</option>\r\n                      <option value=\"Adjust-Advance\">Adjust-Advance</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-4 text-center \">\r\n                    <input className=\"form-control border-success py-1 text-center\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                  </div>\r\n                  <div className=\"col-2 text-center\">\r\n                    <button className=\"btn btn-sm p-0 m-0\" onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\"/>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : props.saleentryarr.payment_method_details == null ? (\r\n                <div className={`row p-0 m-0 justify-content-end g-2`}>\r\n                  <div className=\"col-4 \">\r\n                    <select className=\"form-control border-success py-1 text-center\" value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} >\r\n                      <option className=\"text-charcoal75 fw-bolder\"> Payment Method </option>\r\n                      <option value=\"Cash\">Cash</option>\r\n                      <option value=\"Card\">Card</option>\r\n                      <option value=\"Paytm\">Paytm</option>\r\n                      <option value=\"Phonepe\">Phone Pe</option>\r\n                      <option value=\"Wire-Transfer\">Wire Transfer</option>\r\n                      <option value=\"Razorpay\">Razorpay</option>\r\n                      <option value=\"Points\">Points</option>\r\n                      <option value=\"Adjust-Advance\">Adjust-Advance</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-4 text-center \">\r\n                    <input className=\"form-control border-success py-1 text-center\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                  </div>\r\n                  <div className=\"col-2 text-center\">\r\n                    <button className=\"btn btn-sm p-0 m-0\" onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className={`row p-0 m-0 justify-content-center g-2`}>\r\n                  <div className=\"col-4 text-center \">\r\n                    <input className=\"form-control py-1\" disabled={true} value={data.paymentmethod} />\r\n                  </div>\r\n                  <div className=\"col-4 text-center \">\r\n                    <input className=\"form-control py-1 text-center\" disabled={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                  </div>\r\n                </div>\r\n              )\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        <div className={`container-fluid text-center mt-2 `}>\r\n          {permission.sale_entry_charges_edit == 1 ? (\r\n            <button className=\"btn py-0\" onClick={AddMethods}>\r\n              <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"2rem\" }} />\r\n            </button>\r\n          ) : props.saleentryarr.payment_method_details == null ? (\r\n            <button className=\"btn py-0\" onClick={AddMethods}>\r\n              <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"2rem\" }} />\r\n            </button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-2 pb-3\">\r\n        {loading ? (\r\n          <div className=\"container-fliud pt-2\">\r\n            <div className=\"d-flex fs-6 align-items-center justify-content-around\">\r\n              <h6 className=\"text-charcoal\">Updating...</h6>\r\n              <div className=\"text-charcoal spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button className=\"button button-charcoal m-0 p-0 py-1 px-5\" disabled={previoustotal == props.saleentryarr.grand_total ? true : false} onClick={confirmmessage} > Save </button>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <button className=\"button button-pearl border-charcoal p-0 m-0 py-1 px-5\" onClick={() => { setpaymentmethods(); props.toggle_payments(); }} > Cancel </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let e = Number(cgst) + Number(sgst) + Number(igst);\r\n      return e;\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      return e;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 \">\r\n      <h5 className=\"text-center text-charcoal pt-3\"> {props.itembillid} Sale Entry Item Details </h5>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close closebtn position-absolute end-0 me-4\"\r\n        onClick={props.toggle_seidw}\r\n        aria-label=\"Close\"\r\n      ></button>\r\n\r\n      <div className=\"d-flex p-0 m-0 mt-3 mb-1 justify-content-center\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button shadow-0 rounded-0 border-charcoal button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"row p-0 m-0 justify-content-between\">\r\n        <div className=\"col-auto ms-2 mb-2 text-burntumber rounded-1 fw-bolder bg-pearl\">\r\n          <p className=\"text-charcoal p-0 m-0 ms-1 text-start\">Grand Total</p>\r\n          <hr className=\"p-0 m-0\" />\r\n          <h5 className=\"text-charcoal p-0 m-0 fw-bold text-start ms-1\">\r\n            {props.saleentryarr.grand_total\r\n              ? props.saleentryarr.grand_total\r\n              : 0}\r\n          </h5>\r\n        </div>\r\n        <div className=\"col-auto align-self-end justify-content-end me-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            value={Taxon ? Taxon : \"\"}\r\n            onChange={() => {\r\n              Taxon == true ? setTaxon(false) : setTaxon(true);\r\n            }}\r\n          />\r\n          <label>Show Tax Details</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${medicine}`}\r\n        style={{ Height: \"100%\"}}\r\n      >\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Stock ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Medicine </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc. % </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> {\" \"} Amt </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Grand Total </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > Total CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST%{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > Total SGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > Total IGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total Tax </th>\r\n            </tr>\r\n          </thead>\r\n          {props.saleentryarr.sale_medicines &&\r\n            props.saleentryarr.sale_medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.saleentryarr.sale_medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.medicine_stocks && item.medicine_stocks.id !== null ? \"m\" + item.medicine_stocks.id : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.main_mrp ? item.main_mrp : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty && item.qty != null ? item.qty : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount != null ? item.discount : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? Number(item.SGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? Number(item.CGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? Number(item.IGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.disc_mrp ? item.disc_mrp : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.total_amount ? item.total_amount : \"\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <p className=\" text-center text-charcoal fw-bold\">\r\n                  No Medicines Found\r\n                </p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{Height: \"100%\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Stock ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Vaccine </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc. % </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Amt </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Grand Total </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > Total CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > Total SGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > Total IGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total Tax </th>\r\n            </tr>\r\n          </thead>\r\n          {props.saleentryarr.sale_vaccines !== undefined &&\r\n            props.saleentryarr.sale_vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.saleentryarr.sale_vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.vaccine_stocks && item.vaccine_stocks.id !== null ? \"v\" + item.vaccine_stocks.id : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.vaccine && item.vaccine.name !== null ? item.vaccine.name : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.main_mrp ? item.main_mrp : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.qty && item.qty != null ? item.qty : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.discount != null ? item.discount : \"\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST_rate ? Number(item.SGST_rate) : \"\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST ? Number(item.SGST) * Number(item.qty) : \"\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST_rate ? Number(item.CGST_rate) : \"\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST ? Number(item.CGST) * Number(item.qty) : \"\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST_rate ? Number(item.IGST_rate) : \"\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST ? Number(item.IGST) * Number(item.qty) : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxPercent( item.CGST_rate, item.SGST_rate, item.IGST_rate )} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.disc_mrp ? item.disc_mrp : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.total_amount ? item.total_amount : \"\"} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold text-charcoal\"> No Vaccines Found </p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SaleReturns(props) {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = props.ClinicID;\r\n  const fromdate = props.fromdate;\r\n  const todate = props.todate;\r\n  const url = useContext(URL);\r\n  const [sridw, setsridw] = useState(\"none\");\r\n  const [Loading, setLoading] = useState(false);\r\n  const [salereturnarr, setsalereturnarr] = useState([]);\r\n  const [salereturnarrExcel, setsalereturnarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [nref, setnref] = useState(\"none\");\r\n\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/return?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETSaleReturns(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/sale/return?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n            }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n          )\r\n          .then((response) => {\r\n            ;\r\n            setsalereturnarr(response.data.data.sale_return);\r\n\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/sale/return?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            ;\r\n            setsalereturnarr(response.data.data.sale_return);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETSaleReturnsForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/return?clinic_id=${ClinicID}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          ;\r\n          setpagecount(response.data.data.total_count);\r\n          setsalereturnarrExcel(response.data.data.sale_return);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETSaleReturns();\r\n    GETSaleReturnsForExcel();\r\n  }, [pagecount]);\r\n\r\n  const toggle_sridw = () => {\r\n    if (sridw === \"none\") {\r\n      setsridw(\"block\");\r\n    }\r\n    if (sridw === \"block\") {\r\n      setsridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n         <div className=\"col-auto position-absolute p-0 m-0 export align-self-center text-center ms-3\">\r\n            <ExportSaleReturn salereturnarr={salereturnarrExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n          </div>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute end-0 me-3\" onClick={toggle_nref} >\r\n        <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\"/> Entry Return </button>\r\n      <div classsName=\"p-0 m-0\">\r\n            <h2 className=\" p-0 m-0 heading text-charcoal fw-bolder ms-3  \" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Sale Returns\" : \"Sale Return\"}{\" \"} </h2>\r\n \r\n        <div className=\"scroll scroll-y overflow-scroll p-0 m-0\" style={{ minHeight: \"40vh\", height: \"59vh\", maxHeight: \"70vh\" }} >\r\n          <table className=\"table text-start p-0 m-0\">\r\n            <thead className=\"p-0 m-0 align-middle\">\r\n              <tr>\r\n                <th className=\"fw-bolder text-charcoal75 text-center\" scope=\"col\"> Return No. </th>\r\n                <th className=\"fw-bolder text-charcoal75 text-start\" scope=\"col\"> Name </th>\r\n                <th className=\"fw-bolder text-charcoal75 text-start\" scope=\"col\"> Sale Entry ID </th>\r\n                <th className=\"fw-bolder text-charcoal75 text-start\" scope=\"col\"> Return Date </th>\r\n                <th className=\"fw-bolder text-charcoal75 text-start\" scope=\"col\"> Return Amount </th>\r\n                <th className=\"fw-bolder text-charcoal75 text-center\" scope=\"col\"> Inventory </th>\r\n                {/* <th className=\"fw-bolder text-charcoal75 text-center\" scope=\"col\"> more </th> */}\r\n              </tr>\r\n            </thead>\r\n            {Loading ? (\r\n              <body className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n                <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className=\"fs-5\"> Getting Details please be Patient ... </strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                  </div>\r\n                </tr>\r\n              </body>\r\n            ) : salereturnarr && salereturnarr.length != 0 ? (\r\n              <tbody>\r\n                {\r\n                  salereturnarr.map((item, i) => (\r\n                    <tr key={i} className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} >\r\n                      <td className=\"text-charcoal fw-bold text-center\"> SR-{item.return_no} </td>\r\n                      <td className=\"text-charcoal fw-bold text-start\"> {item.sale_entry && item.sale_entry.patient && item.sale_entry.patient.full_name != null ? item.sale_entry.patient.full_name : \"N/A\"} </td>\r\n                      <td className=\"text-charcoal fw-bold text-start\"> {item.sale_entry && item.sale_entry && item.sale_entry.id != null ? item.sale_entry.id : \"\"}</td>\r\n                      <td className=\"text-charcoal fw-bold text-start\"> {item.return_date ? reversefunction(item.return_date) : \"\"} </td>\r\n                      <td className=\"text-charcoal fw-bold text-start\"> {item.grand_total ? item.grand_total : \"N/A\"} </td>\r\n                      <td className=\"text-charcoal fw-bold text-center\">\r\n                        {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                        <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_sridw(); }} >\r\n                          <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\"/>\r\n                        </button>\r\n                      </td>\r\n                      {/* <td className=\"p-0 m-0 text-charcoal text-center fw-bold\">\r\n                        <button className=\"btn position-relative cursor-pointer more p-0 m-0\">\r\n                          <img\r\n                            src={process.env.PUBLIC_URL + \"/images/more.png\"}\r\n                            alt=\"displaying_image\"\r\n                          />\r\n                        </button>\r\n                      </td> */}\r\n                      <td className={` position-absolute d-${i == index ? sridw : \"none\"} bg-seashell border border-1 start-0 end-0 mx-auto p-0 m-0 rounded-4`} style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }} >\r\n                        {\r\n                          i == index ? (\r\n                            <SRitemdetailssection salereturnarr={salereturnarr[i]} toggle_sridw={toggle_sridw} />\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody className=\"text-center position-relative p-0 m-0 \" style={{ minHeight: \"55vh\" }} >\r\n                <tr className=\"\">\r\n                  <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\"> No Sale Returns </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            breakLabel={\". . .\"}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={GETSaleReturns}\r\n            containerClassName={\"pagination\"}\r\n            pageClassName={\"page-item text-charcoal\"}\r\n            pageLinkClassName={\r\n              \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n            }\r\n            previousClassName={\"btn button-charcoal-outline me-2\"}\r\n            previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n            nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n            breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <section className={`rounded-2 position-absolute start-0 top-0 end-0 mx-auto border shadow bg-seashell d-${nref}`} style={{height:'70vh',width:'60vh'}} >\r\n         {<NewSaleReturnentryform toggle_nref={toggle_nref} GETSaleReturns={GETSaleReturns} />} \r\n        </section>\r\n    </>\r\n  );\r\n}\r\nfunction SaleEntryForm(props) {\r\n  const tableref = useRef(null);\r\n  const cliniclist = useContext(Clinic);\r\n  const permission = useContext(Permissions);\r\n  const url = useContext(URL);\r\n  const Doclist = useContext(DoctorsList);\r\n  const clinicID = localStorage.getItem(\"ClinicId\");\r\n  const medicinesref = useRef(null);\r\n  const medbyidref = useRef(null);\r\n  const patientaddref = useRef(null);\r\n  const stockref = useRef(null);\r\n  const [searchinput, setsearchinput] = useState(props.patientname ? props.patientname : \"\");\r\n  const [searchlist, setsearchlist] = useState([]);\r\n  const [displaysearchlist, setdisplaysearchlist] = useState(\"none\");\r\n  const [patientid, setpatientid] = useState(props.patientid ? props.patientid : \"\");\r\n  const [patientdata, setpatientdata] = useState([]);\r\n  const [doctorid, setdoctorid] = useState(props.DoctorID ? props.DoctorID : \"\");\r\n  const [doctorname, setdoctorname] = useState(props.DoctorName ? props.DoctorName : \"\");\r\n  const [otherdoctor, setotherdoctor] = useState();\r\n  const [clinicid, setclinicid] = useState(clinicID);\r\n  const [ischecked, setischecked] = useState();\r\n  const [ischecked2, setischecked2] = useState();\r\n  const [Dc, setDc] = useState(0);\r\n  const [AtC, setAtC] = useState(0);\r\n  const [load, setload] = useState();\r\n  const [searchload, setsearchload] = useState(false);\r\n  const [products, setproducts] = useState([]);\r\n  const [itemsearch, setitemsearch] = useState([]);\r\n  const [itembyid, setitembyid] = useState([]);\r\n  const [loadbyId, setloadbyId] = useState();\r\n  const [itemname, setitemname] = useState();\r\n  const [itemid, setitemid] = useState();\r\n  const [SelectedProducts, setSelectedProducts] = useState([]);\r\n  const [Grandtotal, setGrandtotal] = useState();\r\n  const [loadsearch, setloadsearch] = useState();\r\n  const [addressid, setaddressid] = useState();\r\n  const [addressform, setaddressform] = useState(\"none\");\r\n  const [number, setnumber] = useState(props.data ? props.data.patient.phone_number ? props.data.patient.phone_number : '' : \"\")\r\n  const [Response, setResponse] = useState()\r\n  const [ask1, setask1] = useState('none')\r\n\r\n  const searchpatient = (e) => {\r\n    setsearchload(true);\r\n    setsearchinput(e.target.value);\r\n    axios\r\n      .get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`)\r\n      .then((response) => {\r\n        setsearchlist(response.data.data.patients_list);\r\n        setsearchload(false);\r\n      });\r\n    if (searchinput && searchinput.length > 1) {\r\n      setdisplaysearchlist(\"block\");\r\n    } else {\r\n      setdisplaysearchlist(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const get_value = (id, name, data) => {\r\n    setsearchinput(name);\r\n    setpatientid(id);\r\n    setpatientdata(data);\r\n    setnumber(data.phone_number)\r\n    setdisplaysearchlist(\"none\");\r\n  };\r\n  const selectaddress = (data) => {\r\n    if (data) {\r\n      setaddressid(data.id);\r\n      setDc(1);\r\n    } else {\r\n      setaddressid();\r\n      setDc(0);\r\n    }\r\n  };\r\n  const DC = () => {\r\n    if (Dc == 0) {\r\n      setaddressform(\"block\");\r\n    }\r\n    if (Dc == 1) {\r\n      if (addressid) {\r\n        setDc(0);\r\n        setaddressform(\"none\");\r\n      } else {\r\n        setaddressform(\"block\");\r\n      }\r\n    }\r\n  };\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios.get(`${url}/stock/list?search=${search}&location_id=${clinicID}`).then((response) => {\r\n        let medicines = [];\r\n        let vaccines = [];\r\n        let items = [];\r\n        medicines.push(\r\n          response.data.data.medicines ? response.data.data.medicines : []\r\n        );\r\n        vaccines.push(\r\n          response.data.data.vaccines ? response.data.data.vaccines : []\r\n        );\r\n        items = medicines.concat(vaccines);\r\n        items = items.flat();\r\n        setitemsearch(items);\r\n        setloadsearch(false);\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = \"block\";\r\n        } else {\r\n          medicinesref.current.style.display = \"none\";\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const searchmedbyId = async (search) => {\r\n    if (search.length > 0) {\r\n      setloadbyId(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/sale/item/search/by/id?item=${search}`)\r\n          .then((response) => {\r\n            setloadbyId(false);\r\n            setitembyid([response.data.data]);\r\n          });\r\n      } catch (e) {\r\n        setloadbyId(false);\r\n        Notiflix.Notify.failure(e.message);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Doclist.map((data) => (data[0] == doctorid ? setdoctorname(data[1]) : \"\"));\r\n  }, [doctorid]);\r\n\r\n  function CalSellingCost(mrp, disc) {\r\n    let cost = mrp;\r\n    if (!disc) {\r\n      cost = Number(mrp);\r\n      return cost;\r\n    } else {\r\n      cost = Number(mrp) - (Number(mrp) * Number(disc)) / 100;\r\n      cost = cost.toFixed(2);\r\n      return cost;\r\n    }\r\n  }\r\n  function CalTotalAmount(qty, cst, realcst) {\r\n    let cost = cst;\r\n    if (Number(realcst) > Number(cost)) {\r\n      Notiflix.Notify.failure(\"Selling Cost should not less than Cost\");\r\n    }\r\n    if (!qty) {\r\n      return 0;\r\n    } else if (qty == 1) {\r\n      cst = Number(cst);\r\n      return cst;\r\n    } else {\r\n      cost = Number(cst) * Number(qty);\r\n      cost = cost.toFixed(2);\r\n      return cost;\r\n    }\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0;\r\n    SelectedProducts.map((data) => (ttl += Number(data.totalamt)));\r\n    setGrandtotal(ttl);\r\n  }\r\n  function CaltotalDiscount(data) {\r\n    let total = 0;\r\n    if (data) {\r\n      data.forEach((item) => {\r\n        total += Number(item.discount);\r\n      });\r\n      return total;\r\n    } else {\r\n      return total;\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    CalGrandttl();\r\n  }, [SelectedProducts]);\r\n  function AddProducts(data) {\r\n    let T = \"\";\r\n    if (data.vaccine_brand_id) {\r\n      T = \"v\";\r\n    } else {\r\n      T = \"m\";\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      type: data.type ? data.type : T,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      batch: data.batch_no,\r\n      expiry: data.expiry_date,\r\n      quantity: data.current_stock,\r\n      qtytoSale: 1,\r\n      discount: 0,\r\n      cost: data.cost,\r\n      mainmrp: data.mrp,\r\n      disccost: data.mrp,\r\n      gst:\r\n        Number(data.CGST_rate) +\r\n        Number(data.SGST_rate) +\r\n        Number(data.IGST_rate),\r\n      totalamt: data.mrp,\r\n    };\r\n\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails]);\r\n    } else {\r\n      setSelectedProducts((prevState) => [...prevState, ProductDetails]);\r\n    }\r\n  }\r\n  async function DeleteProduct(Batch) {\r\n    let obj = [];\r\n    obj.push(\r\n      SelectedProducts.filter(function (e) {\r\n        return e.batch !== Batch;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setSelectedProducts(obj);\r\n  }\r\n  async function SubmitSaleEntry() {\r\n    let productids = [];\r\n    let proquantity = [];\r\n    let Discount = [];\r\n    let discountonmrp = [];\r\n    let mrp = [];\r\n    let GST = [];\r\n    let Totalamount = [];\r\n    if (doctorname != undefined && doctorname.length > 0 || otherdoctor != undefined && otherdoctor.length > 0) {\r\n      for (let i = 0; i < SelectedProducts.length; i++) {\r\n        productids.push(\r\n          SelectedProducts[i].type + SelectedProducts[i].productid\r\n        );\r\n        proquantity.push(SelectedProducts[i].qtytoSale);\r\n        Discount.push(SelectedProducts[i].discount);\r\n        discountonmrp.push(SelectedProducts[i].disccost);\r\n        mrp.push(SelectedProducts[i].mainmrp);\r\n        GST.push(SelectedProducts[i].gst);\r\n        Totalamount.push(SelectedProducts[i].totalamt);\r\n      }\r\n      let Data = {\r\n        clinic_id: clinicid,\r\n        doctor_id: doctorid,\r\n        doctor_name: doctorid ? doctorname : otherdoctor,\r\n        patient_id: patientid,\r\n        pro_id: productids,\r\n        qty: proquantity,\r\n        discount: Discount,\r\n        disc_mrp: discountonmrp,\r\n        main_mrp: mrp,\r\n        gst: GST,\r\n        total_amount: Totalamount,\r\n        grand_total: Grandtotal,\r\n        appointment_id: \"\",\r\n        add_to_cart: AtC,\r\n        deliver: Dc,\r\n        address_id: addressid,\r\n      }\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .post(`${url}/sale/entry/save`, Data).then((response) => {\r\n            setload(false);\r\n            setResponse(response)\r\n            if (props.saleindex == undefined) {\r\n              props.GETSalesList();\r\n              // props.toggle_nsef();\r\n            }\r\n            if (response.data.status == true) {\r\n              Notiflix.Notify.success(response.data.message);\r\n            } else {\r\n              Notiflix.Notify.warning(response.data.message);\r\n            }\r\n\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n\r\n      Notiflix.Notify.failure(\"Please Choose A Doctor to further proceed the sale entry\");\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Sale Entry`,\r\n      `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? \"entry\" : \"entries\"\r\n      }  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        // SaveSaleEntryCharges()\r\n        SubmitSaleEntry();\r\n        toggleStage4();\r\n        toggleStage3();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  const UpdateStatus = async (e, id) => {\r\n    try {\r\n      await axios\r\n        .post(`${url}/sale/entry/change/status`, {\r\n          sale_entry_id: Response.data.data.id,\r\n          status: 2,\r\n          admin_id: adminid,\r\n        })\r\n        .then((response) => {\r\n          ;\r\n          Notiflix.Notify.success(response.data.message);\r\n          props.GETSalesList();\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (AtC == 1) {\r\n      SubmitSaleEntry();\r\n    }\r\n  }, [AtC]);\r\n  const ClearForm = async () => {\r\n    setSelectedProducts([]);\r\n    setaddressid();\r\n    setitemname();\r\n    setdoctorname();\r\n    setdoctorid();\r\n    setpatientid();\r\n    setGrandtotal();\r\n    setAtC();\r\n    setDc(0);\r\n    setsearchinput();\r\n    setpatientdata();\r\n  };\r\n\r\n  const [stage1, setstage1] = useState('block')\r\n  const toggleStage1 = () => {\r\n    if (stage1 == 'block') {\r\n      setstage1('none')\r\n    }\r\n    if (stage1 == 'none') {\r\n      setstage1('block')\r\n    }\r\n  }\r\n  const [stage2, setstage2] = useState('none')\r\n  const toggleStage2 = () => {\r\n    if (stage2 == 'block') {\r\n      setstage2('none')\r\n    }\r\n    if (stage2 == 'none') {\r\n      setstage2('block')\r\n    }\r\n  }\r\n  const [stage3, setstage3] = useState('none')\r\n\r\n  const toggleStage3 = () => {\r\n    if (stage3 == 'none') {\r\n      setstage3('block')\r\n    }\r\n    if (stage3 == 'block') {\r\n      setstage3('none')\r\n    }\r\n  }\r\n\r\n  const [stage4, setstage4] = useState('none')\r\n  const toggleStage4 = () => {\r\n    if (stage4 == 'none') {\r\n      setstage4('block')\r\n    }\r\n    if (stage4 == 'block') {\r\n      setstage4('none')\r\n    }\r\n  }\r\n\r\n  const Go_Back = () => {\r\n    if (stage2 === 'block') {\r\n      toggleStage2()\r\n      toggleStage1()\r\n    }\r\n    if (stage3 === 'block') {\r\n      toggleStage3()\r\n      toggleStage2()\r\n    }\r\n    if (stage4 === 'block') {\r\n      toggleStage4()\r\n      toggleStage3()\r\n    }\r\n  }\r\n  // Payments\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const [paymentmethods, setpaymentmethods] = useState([{\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  }]);\r\n  const [previoustotal, setprevioustotal] = useState(0);\r\n  const [loading, setloading] = useState();\r\n  const paymentmethoddetails = {\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  };\r\n\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i);\r\n  }\r\n  const confirmmessage2 = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments of  ${Response.data.data.id}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveSaleEntryCharges();\r\n\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  async function SaveSaleEntryCharges() {\r\n    let PaymentMethod = [];\r\n    let PaymentMethodDetails = [];\r\n    let total_money = 0\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      PaymentMethod.push(paymentmethods[i].amount);\r\n      PaymentMethodDetails.push(paymentmethods[i].paymentmethod);\r\n    }\r\n    let Data = {\r\n      sale_entry_id: Response ? Response.data.data.id : '',\r\n      g_total_main: Response ? Response.data.data.grand_total : '',\r\n      payment_method: PaymentMethodDetails,\r\n      payment_method_main: PaymentMethodDetails,\r\n      payment_method_details: PaymentMethod,\r\n      admin_id: adminid,\r\n    };\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      total_money += Number(paymentmethods[i].amount)\r\n    }\r\n    if (total_money == Math.round(Data.g_total_main)) {\r\n\r\n      Notiflix.Notify.success('Payment Successfull')\r\n      try {\r\n        setloading(true);\r\n        await axios\r\n          .post(`${url}/sale/entry/save/charges`, Data)\r\n          .then((response) => {\r\n            if (props.saleindex != undefined) {\r\n              console.log('Run')\r\n            } else {\r\n              props.GETSalesList()\r\n            }\r\n            props.toggle_nsef()\r\n\r\n            setpaymentmethods([{\r\n              paymentmethod: \"\",\r\n              amount: 0,\r\n            }])\r\n            setResponse()\r\n            UpdateStatus()\r\n            ClearForm();\r\n            setloading(false);\r\n\r\n            Notiflix.Notify.success(response.data.message);\r\n          });\r\n      } catch (e) {\r\n        setloading(false);\r\n        // Notiflix.Notify.failure(e.message);\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning('Unsufficent Amount to proceed Payment successfully')\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   SaveSaleEntryCharges()\r\n  // }, [props.saleentryarr])\r\n  const CalPrevTotal = async () => {\r\n    let total = 0;\r\n    paymentmethods && paymentmethods.map((data) => (total += Number(data.amount)));\r\n    setprevioustotal(total);\r\n  };\r\n  useEffect(() => {\r\n    CalPrevTotal();\r\n\r\n  }, [props.saleentryarr]);\r\n  \r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods((prevState) => [...prevState, paymentmethoddetails]);\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails]);\r\n    }\r\n  }\r\n  // function Return_Amount() {\r\n  //   let totalarr = [];\r\n  //   let total = 0;\r\n  //   let Advance = 0;\r\n  //   if (paymentmethods && paymentmethods !== undefined) {\r\n  //     for (let i = 0; i < paymentmethods.length; i++) {\r\n  //       totalarr.push(Number(paymentmethods[i].amount));\r\n  //     }\r\n  //     totalarr.forEach((item) => {\r\n  //       total += item;\r\n  //     });\r\n  //     if (total > props.saleentryarr.grand_total) {\r\n  //       Advance = total - props.saleentryarr.grand_total;\r\n  //       return Advance;\r\n  //     } else {\r\n  //       return Advance;\r\n  //     }\r\n  //   }\r\n\r\n  // }\r\n\r\n  const [addresspage, setaddresspage] = useState('none')\r\n  const Toggle_Address = () => {\r\n    if (addresspage == 'block') {\r\n      setaddresspage('none')\r\n    }\r\n    if (addresspage == 'none') {  \r\n      setaddresspage('block')\r\n    }\r\n  }\r\n  function AskForDelivery(i){\r\n    if(i==true){\r\n      setask1('block')\r\n    }else{\r\n      toggleStage3()\r\n      toggleStage4()\r\n      setask1('none')\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    setask1('none')\r\n  },[props.toggle_nsef])\r\n  return (\r\n      <div className=\"saleentry rounded-2\">\r\n        <div className=\"shadow-sm\">\r\n          <h5 className=\"text-center fw-bold py-2\">New Sale Entry</h5>\r\n          <button className={`btn btn-back position-absolute start-0 top-0 ms-2 d-${stage1 == 'block' ? 'none' : 'block'}`} onClick={() => { Go_Back() }}   ></button>\r\n          <button className=\"btn btn-close position-absolute end-0 top-0 me-2\" onClick={props.toggle_nsef}  ></button>\r\n        </div>\r\n        <div className={`stage1 d-${stage1}`}>\r\n          <div className=\"container-fluid ps-5 mt-2\">\r\n            <div className=\"order mt-4\">\r\n              <div className=\"patient mt-4\">\r\n                <h6 className=\"m-0 p-0 pb-1 fw-bold text-charcoal75\">Patient</h6>\r\n                <input type=\"text\" placeholder=\"Search Name or Number\" className=\"form-control rounded-1 border-2 border-charcoal75 fw-bold w-auto bg-seashell\" value={searchinput ? searchinput : \"\"} onFocus={() => setsearchload(true)} onChange={searchpatient} />\r\n                <div className={`col-auto d-${displaysearchlist} text-decoration-none searchinput position-absolute rounded-1 shadow bg-pearl px-2`} style={{ width: \"max-content\", zIndex: \"2\" }} >\r\n                  {searchload == true || searchinput == undefined ? (\r\n                    <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\"> Loading...{\" \"} </p>\r\n                  ) : searchlist.length == 0 ? (\r\n                    <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found</p>\r\n                  ) : (\r\n                    searchlist.map((data) => (\r\n                      <div className=\"col-auto ms-1 py-2 bg-pearl text-decoration-none text-charcoal text-start px-1\" onClick={() => { get_value(data.id, data.full_name, data); }} style={{ width: \"max-content\", cursor: 'pointer' }}>\r\n                        <div className=\" fw-bold text-charcoal\"> {data.full_name} <span className=\"fw-bold text-charcoal75\">{data.phone_number}</span> </div>\r\n                      </div>\r\n\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </div>\r\n  \r\n              <div className=\"row mt-4\">\r\n                <div className=\"doctor col-6\">\r\n                  <h6 className=\"m-0 p-0 pb-1 fw-bold text-charcoal75\">Doctor</h6>\r\n                  <select className=\"col-10 form-control selectdoctor text-charcoal fw-bold rounded-1 border-2 border-charcoal75 w-auto bg-seashell\" placeholder=\"Select Doctor\" value={doctorid ? doctorid : \"\"} onChange={(e) => { setdoctorid(e.target.value); }} >\r\n                    <option className=\"text-charcoal\">Select Doctor</option>\r\n                    {\r\n                      Doclist.map((data, i) => (\r\n                        <option className={`text-charcoal`} key={i} value={data[0]}> {\"Dr.\"} {data[1]} </option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                </div>\r\n                <div className=\"anotherdoctor col-6\">\r\n                  <h6 className=\"m-0 p-0 pb-1 fw-bold text-charcoal75\"> Another Doctor</h6>\r\n                  <input type=\"text\" placeholder=\"Type Name\" className=\"form-control rounded-1 fw-bold text-charcoal border-2 border-charcoal75 w-auto bg-seashell\" value={otherdoctor ? otherdoctor : \"\"} onChange={(e) => { setotherdoctor(e.target.value); }} />\r\n                </div>\r\n              </div>\r\n\r\n              {/* <button className=\"button-sm button-charcoal rounded-1 my-2\">Add Doctor</button> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\"col-8\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> {\" \"} Order Total{\" \"} </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\"> {Grandtotal} </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      {\" \"}\r\n                      Discount %\r\n                    </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {CaltotalDiscount(SelectedProducts)}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      {\" \"}\r\n                      Total Items\r\n                    </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {SelectedProducts.length}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4 align-self-center d-flex justify-content-end\">\r\n\r\n                <button className=\"button button-charcoal px-5\" onMouseDown={() => { toggleStage2(); }} onMouseUp={() => { toggleStage1() }} > Next </button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`stage2 d-${stage2}`}>\r\n          <div className=\"container-fluid mt-4 text-center p-0 m-0\">\r\n            <div className=\"col-12 p-0 m-0 justify-content-center\">\r\n              <h6 className=\"text-charcoal75 p-0 m-0 fw-bolder text-start ms-3\"> Add Products </h6>\r\n              <div className=\"row p-0 m-0 my-2 justify-content-start\">\r\n                <div className=\"col-4\">\r\n                  <input className=\"form-control fw-bold border-charcoal75 border-2 rounded-1 bg-seashell\" placeholder=\"Search Product by Name\" value={itemname ? itemname : \"\"} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemid(); setproducts(); stockref.current.style.display = \"none\"; }} />\r\n                  <div ref={medicinesref} className=\"position-absolute rounded-1 mt-1\" style={{ Width: \"max-content\", zIndex: \"1\" }} >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className=\"rounded-1 p-1 bg-pearl\">\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span>\r\n                            </div>\r\n                          </div>\r\n                        ) : loadsearch == false && itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-1 p-1\"> Oops! Not Avaliable </div>\r\n                        ) : (\r\n                          <div className={`rounded-4 scroll border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? \"block\" : \"none\"}`} style={{ height: '30vh' }} >\r\n                            <p className={`text-start p-2 position-sticky top-0 bg-pearl fw-bold text-charcoal75 ms-2`} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                            {\r\n                              itemsearch.map((data, i) => (\r\n                                <div style={{ cursor: \"pointer\", Width: \"10rem\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} text-start fw-bold p-2 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = \"block\"; }} > {data.display_name ? data.display_name : data.name} <span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span> </div>\r\n                              ))\r\n                            }\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        <div className=\"bg-seashell\"></div>\r\n                      )}\r\n                  </div>\r\n                  <div ref={stockref} className={`position-absolute start-50 mt-1 bg-pearl scroll scroll-y align-self-center rounded-2 border border-1 p-2 d-${products && products.stock_info && products.stock_info !== undefined ? \"block\" : \"none\"}`} style={{ zIndex: \"2\", width: \"10rem\", 'min-height': \"30vh\", }} >\r\n                    <p className={`text-start fw-bold text-charcoal75`} style={{ fontSize: \"0.8rem\" }} > {products && products.stock_info !== undefined ? products.stock_info.length : \"\"}{\" \"} Batch Stocks </p>\r\n                    {\r\n                      products && products.length != 0 ? (\r\n                        products.stock_info.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-white fw-bold p-2\">Oops! Not Available</div>\r\n                        ) : (\r\n                          products.stock_info.map((data, i) => (\r\n                            <div style={{ cursor: \"pointer\", Width: \"max-content\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} border-bottom text-wrap`} onClick={() => { AddProducts(data); setitemname(); setitemid(); setproducts(); setitemsearch(); }} >\r\n                              <p className=\"text-start m-0 p-0 fw-bold\">{itemname}</p>\r\n                              <p className=\"text-start p-0 m-0 \"> BatchNo. -{\" \"} {data.batch_no && data.batch_no !== null ? data.batch_no : \"\"} </p>\r\n                              <p className=\"text-start p-0 m-0 \"> Stock -{\" \"} {data.current_stock && data.current_stock ? data.current_stock : \"\"} </p>\r\n                              <p className=\"text-start p-0 m-0 \"> Expiry Date -{\" \"} {data.expiry_date ? reversefunction(data.expiry_date) : \"\"} </p>\r\n                            </div>\r\n                          ))\r\n                        )\r\n                      ) : (\r\n                        <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                      )\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-1 text-burntumber fw-bold align-self-center\">\r\n                  OR\r\n                </div>\r\n                <div className=\"col-4 \">\r\n                  <input className=\"form-control bg-seashell border-charcoal75 border-2 rounded-1 fw-bold\" value={itemid ? itemid : \"\"} placeholder=\"Search Product by ID\" onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = \"block\"; }} />\r\n                  <div ref={medbyidref} className=\"position-absolute rounded-1 mt-1\" style={{ Width: \"max-content\", zIndex: \"2\" }} >\r\n                    {itembyid ? (\r\n                      loadbyId ? (\r\n                        <div className=\"rounded-1 p-1 bg-pearl\"> Searching Please wait.... \r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" > \r\n                        <span className=\"sr-only\"> </span>{\" \"} </div> </div>\r\n                      ) : loadbyId == false && itembyid.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-1 p-1\"> Oops! Not Avaliable </div>\r\n                      ) : (\r\n                        itembyid.map((data, i) => (\r\n                          <div style={{ cursor: \"pointer\", Width: \"max-content\" }} className={`p-0 p-1 rounded-pill shadow bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} fs-6 `} onClick={(e) => { setitemid(data.type + data.id); AddProducts(data); medbyidref.current.style.display = \"none\"; }} > {data.item_name ? data.item_name : \"\"} </div>\r\n                        ))\r\n                      )\r\n                    ) : (\r\n                      <div className=\"bg-seashell\"></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 m-0 p-0 mt-5\">\r\n              <div className=\"d-flex p-0 m-0 justify-content-between\">\r\n                <h6 className=\"text-charcoal75 p-0 m-0 fw-bolder text-start ms-3\">\r\n                  Product Added\r\n                </h6>\r\n              </div>\r\n\r\n              <div className=\"p-0 m-0 scroll scroll-y\" style={{ height: \"35vh\" }}>\r\n                <table className=\"table p-0 m-0\">\r\n                  <thead className=\"p-0 m-0\">\r\n                    <tr className={`p-0 m-0 `}>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Item ID </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Item Name </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> BatchNo. </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Expiry Date </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Avl.Stock </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Qty To Sale </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Discount % </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" colSpan=\"4\" scope=\"col-group\"> Costing </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Total Amount </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Delete </th>\r\n                    </tr>\r\n                    <tr className=\"p-0 m-0\">\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" scope=\"col\"> MRP </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" scope=\"col\"> Cost </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" scope=\"col\"> GST Rate </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" scope=\"col\"> Selling Cost/Unit </th>\r\n                    </tr>\r\n                  </thead>\r\n                  {SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                    <tbody className=\"p-0 m-0\">\r\n                      {SelectedProducts.map((data) => (\r\n                        <tr className={`p-0 m-0 align-middle text-charcoal fw-bold bg-${Number(data.disccost) < Number(data.cost) ? \"lightred50\" : \"\"}`} >\r\n                          <td>{data.type} {data.productid} </td>\r\n                          <td>{data.product}</td>\r\n                          <td>{data.batch}</td>\r\n                          <td>{reversefunction(data.expiry)}</td>\r\n                          <td>{data.quantity}</td>\r\n                          <td>\r\n                            <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell\" value={data.qtytoSale ? data.qtytoSale : \"\"} onChange={(e) => { e.target.value <= data.quantity ? (data.qtytoSale = e.target.value) : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\"); data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost); setSelectedProducts((prevState) => [...prevState]); }} />{\" \"}\r\n                          </td>\r\n                          <td className=\"text-center p-0 m-0\" style={{ Width: \"0rem\" }} >\r\n                            <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell\" value={data.discount ? data.discount : \"\"} onChange={(e) => { data.discount = e.target.value; data.disccost = CalSellingCost(data.mainmrp, e.target.value); data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost)); setSelectedProducts((prevState) => [...prevState]); }} />{\" \"}\r\n                          </td>\r\n                          <td>{data.mainmrp}</td>\r\n                          <td>{data.cost}</td>\r\n                          <td>{data.gst + \"%\"}</td>\r\n                          <td>{data.disccost}</td>\r\n                          <td>{data.totalamt}</td>\r\n                          <td>\r\n                            <button className=\"btn p-0 m-0\" onClick={() => { DeleteProduct(data.batch); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"images/delete.png\"} />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"p-0 m-0 position-relative\">\r\n                      <tr className=\"p-0 m-0\">\r\n                        <td className=\"p-0 m-0 position-absolute text-charcoal75 fw-bold start-0 end-0\"> No Product Added </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\"col-8\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> {\" \"} Order Total{\" \"} </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\"> {Grandtotal} </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      {\" \"}\r\n                      Discount %\r\n                    </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {CaltotalDiscount(SelectedProducts)}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      {\" \"}\r\n                      Total Items\r\n                    </p>\r\n                    <h4 className=\"text-charcoal p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {SelectedProducts.length}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4 align-self-center d-flex justify-content-end\">\r\n                <button className=\"button button-charcoal px-5\" onMouseDown={() => { toggleStage3(); }} onMouseUp={() => { toggleStage2() }} > + Address </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`stage3 d-${stage3} `}>\r\n          <div className=\"row align-items-center p-0 m-0 pt-2\">\r\n            <div className=\"col-auto\">\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <h6 className=\"fw-bold text-charcoal75\">Patient Details</h6>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <h6 className=\"fw-bold text-charcoal\">Name:{searchinput}</h6>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <h6 className=\"fw-bold text-charcoal\">Phone:{number != undefined ? number : ''}</h6>\r\n            </div>\r\n          </div>\r\n          <hr className=\"my-1\" />\r\n            <div className={`container rounded-2 m-auto w-75 bg-pearl d-${ask1 =='block'?'none':'block'}`} >\r\n            <div className=\"row shadow rounded-2 p-2\" style={{zIndex:'10'}}>\r\n       \r\n       <div className=\"col-12\">\r\n       <p className=\"fw-bolder text-charcoal\">Deliver to the Address?</p>\r\n       </div>\r\n         <div className=\"col-6\">\r\n         <div className=\"button button-charcoal fw-bold\" onClick={()=>AskForDelivery(true)}>Yes</div>\r\n         </div>\r\n           <div className=\"col-6\">\r\n           <div className=\"button button-charcoal-outline fw-bold\" onClick={()=>AskForDelivery(false)}>No</div>\r\n           </div>\r\n\r\n            </div>\r\n            </div>\r\n          <div className={`container mt-4 position-relative d-${ask1} `}>\r\n          <div className=\"button button-charcoal\" onClick={() => Toggle_Address()}>Add New Address</div>\r\n            <h6 className=\"fw-bold text-charcoal75 mt-4\">Select Shipping Address</h6>\r\n            {\r\n              props.data != undefined && patientdata != undefined && patientdata.length == 0 ? (\r\n                props.data && props.data.patient && props.data.patient.address && props.data.patient.address.length !== 0 ? (\r\n                  <div className=\"overflow-scroll \" style={{ height: '40vh' }}>\r\n                    {\r\n                      props.data.patient.address.map((data, i) => (\r\n                        <>\r\n                          <input type=\"checkbox\" className=\"form-check-input\" checked={ischecked2 === i ? true : false} name={data.id} onClick={(e) => { setischecked2(i); addressid ? selectaddress() : selectaddress(data); }} /> <h6 className=\"fw-bold text-charcoal d-inline-block\">{data.address_line1 && data.address_line1 !== null ? data.address_line1 : \"\"} {data.address_line2 && data.address_line2 !== null ? data.address_line2 : \"\"} {data.zip_code && data.zip_code !== null ? data.zip_code : \"\"}</h6>\r\n                          <br />\r\n                        </>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-danger fw-bold p-2\"> Addresses not found.Please add a new address{\" \"} </div>\r\n                )\r\n              ) : (<></>)\r\n            }\r\n            {\r\n              patientdata && patientdata.address != undefined ? (\r\n                patientdata != undefined && patientdata.address.length == 0 ? (\r\n                  <div className=\"text-danger fw-bold p-2\"> Addresses not found.Please add a new address{\" \"} </div>\r\n                ) : (\r\n                  <div className=\"overflow-scroll\" style={{ height: '30vh' }}>\r\n                    {\r\n                      patientdata.address.map((data, i) => (\r\n                        <>\r\n                          <input type=\"checkbox\" className=\"form-check-input\" checked={ischecked2 === i ? true : false} name={data.id} onClick={(e) => { setischecked2(i); addressid ? selectaddress() : selectaddress(data); }} /> <h6 className=\"fw-bold text-charcoal d-inline-block\">{data.address_line1 && data.address_line1 !== null ? data.address_line1 : \"\"} {data.address_line2 && data.address_line2 !== null ? data.address_line2 : \"\"} {data.zip_code && data.zip_code !== null ? data.zip_code : \"\"}</h6>\r\n                          <br />\r\n                        </>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                )\r\n              ) : (<></>)\r\n            }\r\n            <div className={`container position-absolute bg-seashell w-75 border border-1 shadow-sm rounded-2 start-0 end-0 d-${addresspage}`} style={{ top: '-3rem' }}>\r\n              <AddAddress Toggle_Address={Toggle_Address} patientid={patientid} searchinput={searchinput} setpatientdata={setpatientdata} />\r\n            </div>\r\n          </div>\r\n          <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\"col-8\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> {\" \"} Order Total{\" \"} </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\"> {Grandtotal} </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      Discount %\r\n                    </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {CaltotalDiscount(SelectedProducts)}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> Total Items </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {SelectedProducts.length}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4 align-self-center d-flex justify-content-end\">\r\n                <button className=\"button button-charcoal px-5\" onClick={() => { confirmmessage(); }}  > + Payment </button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`stage4 d-${stage4}`}>\r\n          <div className=\"row align-items-center p-0 m-0 pt-2\">\r\n            <div className=\"col-auto\">\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <h6 className=\"fw-bold text-charcoal75\">Patient Details</h6>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <h6 className=\"fw-bold text-charcoal\">Order Id:{Response != undefined ? Response.data.data.id : ''}</h6>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <h6 className=\"fw-bold text-charcoal\">Phone:{number != undefined ? number : ''}</h6>\r\n            </div>\r\n          </div>\r\n          <hr className=\"my-1\" />\r\n          <div className=\"container\">\r\n            <h6 className=\"text-charcoal75 fw-bold\">Total Amount Due</h6>\r\n            <h1 className=\"fw-bold text-charcoal\">₹{Response != undefined ? Math.round(Response.data.data.grand_total) : 0}</h1>\r\n          </div>\r\n          <div className=\"container-fluid text-start position-relative scroll scroll-y\" style={{ height: '35vh' }}>\r\n            {/* <div className={`d-${previoustotal == props.saleentryarr.grand_total ? \"\" : \"none\"} bg-lightgreen fw-bold text-center p-2 my-2`} > Payment Done </div> */}\r\n            {/* <h6 className=\"text-charcoal fw-bolder text-center\">Payments</h6> */}\r\n            {/* <h6 className=\"text-burntumber fw-bolder text-center\">{Return_Amount() > 0 ? `Amount Exceeded by ${Return_Amount()}` : \"\"}</h6> */}\r\n            {\r\n              paymentmethods && paymentmethods !== undefined ? (\r\n                paymentmethods.map((data, i) =>\r\n                  permission.sale_entry_charges_edit == 1 ? (\r\n                    <>\r\n                      <div className=\"container mt-4\">\r\n                        <div className=\"row align-items-center\">\r\n                          <div className=\"col-10\">\r\n                            <h6 className=\"text-charcoal75 fw-bold\">Enter Amount</h6>\r\n                            <input type=\"number\" placeholder=\"₹00\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} className=\"form-control rounded-1 fw-bold text-charocoal75 bg-seashell w-25 border-2\" />\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                            <button className={`btn btn-sm p-0 m-0 d-${i == 0 ? 'none' : 'block'}`} onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className=\"img-fluid\" style={{ width: \"1.8rem\" }}/>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div >\r\n                      <h6 className=\"text-charcoal75 fw-bold mt-2 ms-2\">Select Payment Method</h6>\r\n                      <div className=\"d-flex flex-horizontal ms-2 mt-2 scroll scroll-y\">\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Cash'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Cash' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Cash' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Cash</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Card'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Card' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Card' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Card</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Paytm'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Paytm' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Paytm' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Paytm</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Phonepe'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Phonepe' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Phonepe' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Phonepe</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Razorpay'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Razorpay' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Razorpay' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Razorpay</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Wire-Transfer'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Wire-Transfer' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Wire-Transfer' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Wire-Transfer</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Points'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Points' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Points' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Points</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Adjust-Advance'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Adjust-Advance' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Adjust-Advance' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Adjust-Advance</h6></span>\r\n\r\n                      </div>\r\n                    </>\r\n                  ) :\r\n                    (\r\n                      <>\r\n                        <div className=\"container mt-4\">\r\n                          <div className=\"row align-items-center\">\r\n                            <div className=\"col-10\">\r\n                              <h6 className=\"text-charcoal75 fw-bold\">Enter Amount</h6>\r\n                              <input type=\"number\" placeholder=\"₹00\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} className=\"form-control rounded-1 fw-bold text-charocoal75 bg-seashell w-25 border-2\" />\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                              <button className={`btn btn-sm p-0 m-0 d-${i == 0 ? 'none' : 'block'}`} onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                                <img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className=\"img-fluid\" style={{ width: \"1.8rem\" }} />\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div >\r\n                        <h6 className=\"text-charcoal75 fw-bold mt-2 ms-2\">Select Payment Method</h6>\r\n                        <div className=\"d-flex flex-horizontal ms-2 mt-2 scroll scroll-y\">\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Cash'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Cash' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Cash' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Cash</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Card'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Card' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Card' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Card</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Paytm'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Paytm' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Paytm' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Paytm</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Phonepe'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Phonepe' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Phonepe' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Phonepe</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Razorpay'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Razorpay' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Razorpay' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Razorpay</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Wire-Transfer'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Wire-Transfer' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Wire-Transfer' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Wire-Transfer</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Points'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Points' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Points' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Points</h6></span>\r\n                          <input type=\"checkbox\" disabled className=\"form-check-input bg-seashell border-charcoal p-2 mt-1\" onChange={() => { data.paymentmethod = 'Adjust-Advance'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Adjust-Advance' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Adjust-Advance' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Adjust-Advance</h6></span>\r\n\r\n                        </div>\r\n                      </>\r\n                    )\r\n                )\r\n              ) : (\r\n                <></>\r\n              )\r\n            }\r\n            <div className={`container-fluid text-center mt-2  `}>\r\n              {\r\n                permission.sale_entry_charges_edit == 1 ? (\r\n                  <button className=\"btn py-0\" onClick={AddMethods}>\r\n                    <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"1.8rem\" }} />\r\n                  </button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\"col-8\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> {\" \"} Order Total{\" \"} </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">₹{Response != undefined ? Math.round(Response.data.data.grand_total) : 0} </h4>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    {/* <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      {\" \"}\r\n                      Discount %\r\n                    </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {CaltotalDiscount(SelectedProducts)}\r\n                    </h4> */}\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    {/* <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                      {\" \"}\r\n                      Total Items\r\n                    </p>\r\n                    <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                      {SelectedProducts.length}\r\n                    </h4> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4 align-self-center d-flex justify-content-end\">\r\n                <button className=\"button button-charcoal px-5\" onClick={() => confirmmessage2()} > Sale </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n  \r\n  )\r\n}\r\nfunction NewSaleReturnentryform(props) {\r\n  const url = useContext(URL);\r\n  const medicinesref = useRef(null);\r\n  const vendorsref = useRef(null);\r\n  const [billname, setbillname] = useState();\r\n  const [billid, setbillid] = useState();\r\n  const [loadbills, setloadbills] = useState();\r\n  const [billsearch, setbillsearch] = useState([\"\"]);\r\n  const [itemsearch, setitemsearch] = useState([\"\"]);\r\n  const [itemname, setitemname] = useState(\"\");\r\n  const [load, setload] = useState();\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([]);\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0;\r\n      costing = Number(cost) * Number(qtytotreturn);\r\n      return costing.toFixed(2);\r\n    } else {\r\n      return cost;\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.sale_disc_mrp,\r\n      totalcost: data.sale_disc_mrp,\r\n      saleqty: data.sale_qty,\r\n      qtytoReturn: data.sale_qty,\r\n    };\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj]);\r\n      setitemname();\r\n    } else {\r\n      setMedicineentriesArr((prevState) => [...prevState, MedicineentriesObj]);\r\n      setitemname();\r\n    }\r\n  }\r\n\r\n  const searchProduct = async () => {\r\n    medicinesref.current.style.display = \"block\";\r\n    setloadbills(true);\r\n    try {\r\n      await axios\r\n        .get(\r\n          `${url}/sale/return/item/search/by/id?item=${itemname}&bill_id=${billid}`\r\n        )\r\n        .then((response) => {\r\n          ;\r\n          setbillsearch([response.data.data]);\r\n\r\n          setloadbills(false);\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            Notiflix.Notify.failure(error.response.data);\r\n            Notiflix.Notify.failure(error.response.status);\r\n            Notiflix.Notify.failure(error.response.headers);\r\n          }\r\n          setloadbills(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n      setloadbills(false);\r\n    }\r\n  };\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = [];\r\n    let Totalamount = [];\r\n    let quantity = [];\r\n\r\n    let grosstotal = 0;\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(\r\n        MedicineentriesArr[i].Itemid\r\n          ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}`\r\n          : \"\"\r\n      );\r\n      Totalamount.push(\r\n        MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : \"\"\r\n      );\r\n      quantity.push(\r\n        MedicineentriesArr[i].qtytoReturn\r\n          ? MedicineentriesArr[i].qtytoReturn\r\n          : \"\"\r\n      );\r\n    }\r\n\r\n    Totalamount.forEach((item) => {\r\n      grosstotal += Number(item);\r\n    });\r\n\r\n    var Data = {\r\n      bill_id: billid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal,\r\n    };\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/sale/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message);\r\n        props.GETSaleReturns();\r\n        setMedicineentriesArr();\r\n        setbillid();\r\n        setbillname();\r\n        setload(false);\r\n        props.toggle_nref();\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  };\r\n\r\n  function confirmmessage() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Sale ${MedicineentriesArr.length <= 1 ? \"Return \" : \"Returns\"\r\n      } of Bill P-${billid} `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveReturnEntry();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = [];\r\n    obj.push(\r\n      MedicineentriesArr.filter(function (e) {\r\n        return e.Itemid !== id;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setMedicineentriesArr(obj);\r\n  }\r\n  function Grand() {\r\n    let c = 0;\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (c += Number(data.totalcost)));\r\n    }\r\n    return c;\r\n  }\r\n  return (\r\n    <div className=\"p-0 m-0 \">\r\n      <div className=\"shadow-sm\">\r\n          <h5 className=\"text-center fw-bold py-2\"> New Sale Return Entry </h5>\r\n          <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-3\" onClick={props.toggle_nref} disabled={load ? true : false} aria-label=\"Close\" ></button>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell mt-4\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Bill</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder=\"Bill Id (Does not require initials)\" value={billid ? billid : \"\"} onChange={(e) => { setbillid(e.target.value); setMedicineentriesArr([]); }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className=\"position-relative\">\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className=\"form-control bg-seashell\" placeholder=\"Product Id (Require initials)\" value={itemname ? itemname : \"\"} onChange={(e) => { billid ? setitemname(e.target.value) : Notiflix.Notify.failure(\"Please Add Bill id First\"); medicinesref.current.style.display = \"block\"; }} />\r\n                <div\r\n                  ref={medicinesref}\r\n                  className=\"position-absolute rounded-1 bg-pearl col-12\"\r\n                  style={{ zIndex: \"1\" }}\r\n                >\r\n                  {billsearch ? (\r\n                    loadbills ? (\r\n                      <div className=\"rounded-1 p-1\">\r\n                        Searching Please wait....\r\n                        <div\r\n                          className=\"spinner-border my-auto\"\r\n                          style={{ width: \"1rem\", height: \"1rem\" }}\r\n                          role=\"status\"\r\n                        >\r\n                          <span className=\"sr-only\"> </span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    ) : billsearch.length == 0 ? (\r\n                      <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                        Oops! Not Avaliable\r\n                      </div>\r\n                    ) : (\r\n                      billsearch.map((data, i) => (\r\n                        <div style={{ cursor: \"pointer\" }} className={`p-0 ps-1 shadow bg-${i % 2 == 0 ? \"pearl\" : \"lightyellow\" } fs-6 `} name={data.id} onClick={(e) => { setitemname(data.item_name); InsertMedicines(data); medicinesref.current.style.display = \"none\"; }} > {data.item_name} </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <div className=\"bg-seashell\"></div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className=\"p-0 m-0 btn\" onClick={searchProduct}> <img src={process.env.PUBLIC_URL + \"images/search.png\"} /> </button>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"text-start fw-bold text-charcoal p-0 m-0 ms-4 mt-4\"> Items To Return </h6>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ height: \"40vh\", zIndex: \"2\" }} >\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead className=\"text-charcoal75 fw-bold\">\r\n                <tr>\r\n                  <th className=\"px-2\">Stock ID</th>\r\n                  <th className=\"px-2\">Item Name</th>\r\n                  <th className=\"px-2\">batch No.</th>\r\n                  <th className=\"px-2\">Expiry Date</th>\r\n                  <th className=\"px-2\">Sale Qty</th>\r\n                  <th className=\"px-2\">Qty to Return</th>\r\n                  <th className=\"px-2\">Sale Rate/Unit</th>\r\n                  <th className=\"px-2\">Sale Rate</th>\r\n                  <th className=\"px-2\">Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                  <tbody className=\"position-relative\" style={{ height: \"40vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                    <tr className=\"\">\r\n                      <td className=\"position-absolute start-0 end-0 top-0 text-center mx-auto\">\r\n                        No items Added\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className=\"align-middle\" style={{ height: \"40vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                    {MedicineentriesArr.map((item, _key) => (\r\n                      <tr key={_key} className=\"\">\r\n                        <td> {item.Type} {item.Itemid} </td>\r\n                        <td>{item.Item}</td>\r\n                        <td>{item.batchno}</td>\r\n                        <td>{reversefunction(item.expirydate)}</td>\r\n                        <td>{item.saleqty}</td>\r\n                        <td className=\"p-0 m-0\" style={{ width: \"0px\", height: \"0px\" }} >\r\n                          <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2\" value={item.qtytoReturn ? item.qtytoReturn : \"\"} onChange={(e) => { e.target.value <= item.saleqty ? (item.qtytoReturn = e.target.value) : Notiflix.Notify.failure( \"Quantity Cannot be Greater then Current Stock Available\" ); item.totalcost = CalculateCost( item.cost, item.saleqty, e.target.value ); setMedicineentriesArr((prevState) => [ ...prevState, ]); }} />\r\n                        </td>\r\n                        <td>{item.cost}</td>\r\n                        <td>{item.totalcost}</td>\r\n                        <td>\r\n                          <button onClick={() => { DeleteMedicine(item.Itemid); }} className=\"btn p-0 m-0\" > <img className=\"img-fluid\" src={process.env.PUBLIC_URL + '/images/delete.png'}/> </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                )\r\n                }\r\n            </table>\r\n          </div>\r\n        </div>\r\n      <div className=\"col-12 position-absolute start-0 end-0 bottom-0 text-center bg-pearl  border border-1 py-3 bottom_bar\">\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Order Total{\" \"}\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {Grand()}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Total Items\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {MedicineentriesArr ? MedicineentriesArr.length : 0}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 align-self-center\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Proceed Return </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let c = Number(cgst) + Number(sgst) + Number(igst);\r\n      return c * Number(qty);\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0\">\r\n        <div className=\"row p-0 m-0 position-relative\">\r\n          <h5 className=\"text-center text-charcoal pt-3\"> {props.itembillid} Sale Return Item Details </h5>\r\n          <button type=\"button\" className=\"btn-close closebtn m-auto position-absolute end-0 me-4\" onClick={props.toggle_sridw} aria-label=\"Close\" ></button>\r\n          <div className=\"col-2 d-none\">\r\n            <div className=\" position-relative searchbutton\" style={{ top: \"0.25rem\", right: \"1rem\" }} >\r\n              <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n              <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }} > <img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /> </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\" }`} onClick={() => { setindex(i); }} > {data} </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"row justify-content-end me-5\">\r\n        <div className=\"col-3\">\r\n          <input type=\"checkbox\" className=\"form-check-input\" value={Taxon ? Taxon : \"\"} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true); }} />\r\n          <label>Show Tax Details</label>\r\n        </div>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ height:'100%' }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Stock ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP in Rs. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Selling Cost </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Discount% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total in Rs. </th>\r\n              {/* <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th> */}\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"}`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"}`} > CGST in Rs. </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"}`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"}`} > SGST in Rs. </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"}`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"}`} > IGST in Rs. </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total in Rs. </th>\r\n            </tr>\r\n          </thead>\r\n          {props.salereturnarr.sale_medicines &&\r\n            props.salereturnarr.sale_medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.salereturnarr.sale_medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.medicine_stocks && item.medicine_stocks.id !== null ? \"m\" + item.medicine_stocks.id : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.medicine && item.medicine.name !== null ? item.medicine.name : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.medicine_stocks.batch_no && item.medicine_stocks.batch_no != null ? item.medicine_stocks.batch_no : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.medicine_stocks.expiry_date && item.medicine_stocks.expiry_date != null ? reversefunction(item.medicine_stocks.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.main_mrp ? item.main_mrp : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.disc_mrp ? item.disc_mrp : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.discount ? item.discount : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST_rate ? item.SGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST ? Number(item.SGST) * Number(item.qty) : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST_rate ? item.CGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST ? Number(item.CGST) * Number(item.qty) : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST_rate ? item.IGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST ? Number(item.IGST) * Number(item.qty) : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxPercent( item.CGST_rate, item.SGST_rate, item.IGST_rate )} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n                  {/* <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 bg-lightred\">\r\n                <strong className=\"fs-5 text-center bg-lightred\">\r\n                  No Medicines Found\r\n                </strong>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ height:\"100%\"}} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n            <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Stock ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP in Rs. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate in Rs. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className={`border p-0 m-0 px-1`} > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost in Rs. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total in Rs. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Print QR </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST Rs. </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST in Rs. </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST in Rs. </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total in Rs. </th>\r\n            </tr>\r\n          </thead>\r\n          {props.salereturnarr.purchase_vaccines &&\r\n            props.salereturnarr.purchase_vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.salereturnarr.purchase_vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                   <td className=\"border p-0 m-0 align-middle\"> {item.vaccine_stocks && item.vaccine_stocks.id !== null ? \"v\" + item.vaccine_stocks.id : \"\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.vaccine && item.vaccine.name !== null ? item.vaccine.name : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.batch_no && item.batch_no != null ? item.batch_no : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.mrp ? item.mrp : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.rate ? item.rate : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.discount ? item.discount : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.trade_discount ? item.trade_discount : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST_rate ? item.SGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST ? item.SGST : \"N/A\"} </td> \r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST_rate ? item.CGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST ? item.CGST : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST_rate ? item.IGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST ? item.IGST : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxPercent( item.CGST_rate, item.SGST_rate, item.IGST_rate )} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxRate(item.CGST, item.SGST, item.IGST)} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.cost ? item.cost : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> <button className=\"btn\"> <img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" className=\"me-1\" /> </button> </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <strong className=\"fs-6 text-center\">No Vaccines Found</strong>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport { Salesection };\r\nexport { SaleEntryForm };\r\n\r\n//---------------------------------------------------------------purchase-----------------------------------------------------------------------------------------\r\nfunction Purchasesection(props) {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [channel, setchannel] = useState(1);\r\n  const permission = useContext(Permissions);\r\n  const [pageindex,setpageindex] =useState(\"Purchase Entry\")\r\n  const first = [\r\n    {\r\n      option: \"Purchase Entry\",\r\n      display: permission.purchase_entry_view,\r\n    },\r\n    {\r\n      option: \"Purchase Returns\",\r\n      display: permission.purchase_return_view,\r\n    },\r\n  ]\r\n  const [second, setSecond] = useState(\"Pharmacy\");\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === \"Purchase Entry\") {\r\n      return (\r\n        <Purchaseentrysection function={props.func} function2={props.function} channel = {channel} fromdate={fromdate} todate={todate} ClinicID={ClinicID} />\r\n      );\r\n    }\r\n    if (_selected === \"Purchase Returns\") {\r\n      return <PurchaseReturns fromdate={fromdate} todate={todate} ClinicID={ClinicID} channel={channel} />;\r\n    }\r\n    // if (_selected === 2) {\r\n    //   return <Purchaseordersection />;\r\n    // }\r\n    return <div className=\"\">Nothing Selected</div>;\r\n  }\r\n  return (\r\n    <>  \r\n      <section className=\"purchasesection\">\r\n      <div className=\"container-fluid p-0 m-0 mt-3\">\r\n        <div className=\"row p-0 m-0 mt-1 gx-3 position-relative\">\r\n        <div className=\"col-auto\">\r\n              <div class=\"dropdown\">\r\n                <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  {pageindex?pageindex:\"Purchase Type \"}\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                  {\r\n                    first.map((e, i) => (\r\n                      <li className={`dropdown-item text-${ pageindex == e.option ? \"light\" : \"dark\"} fw-bold bg-${pageindex == e.option? \"charcoal\" : \"seashell\"}`} onClick={(a) => setpageindex(e.option)} > {e.option} </li>\r\n                    )\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  {second?second:\"\"}\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                      <li className={`dropdown-item text-${second === \"Pharmacy\" ? \"light\" : \"dark\"} fw-bold bg-${second === 'Pharmacy' ? \"charcoal\" : \"seashell\"}`} onClick={(a) => {setSecond('Pharmacy');setchannel(1)}} > Pharmacy </li>\r\n                      <li className={`dropdown-item text-${second === \"Clinic\" ? \"light\" : \"dark\"} fw-bold bg-${second === 'Clinic' ? \"charcoal\" : \"seashell\"}`} onClick={(a) => {setSecond('Clinic');setchannel(2)}} > Clinic </li>\r\n                </ul>\r\n              </div>\r\n                {/* <select className=\" border-0 text-burntumber fw-bolder button-seashell rounded-2 button\" value={channel ? channel : \"\"} onChange={(e) => { setchannel(e.target.value); }} >\r\n                <option className=\"border-0 text-charcoal fw-bolder\" value=\"1\" > Pharmacy </option>\r\n                <option className=\"border-0 text-charcoal fw-bolder\" value=\"2\" > Consumables </option>\r\n              </select> */}\r\n            </div>\r\n          <div className=\"col-auto bg-seashell rounded-2 \">\r\n              <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 border-0 text-charcoal text-center fw-bold \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0\">-</div>\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" className=\" border-0 button button-seashell text-charcoal text-center fw-bold\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />                \r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid mt-lg-4 mt-md-3 mt-2 p-0 m-0\">\r\n          <div className=\"\">{_selectedScreen(pageindex)}</div>\r\n        </div>\r\n      </section>\r\n   \r\n    </>\r\n  );\r\n}\r\nfunction Purchaseentrysection(props) {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const permission = useContext(Permissions);\r\n  const url = useContext(URL);\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n      setindex()\r\n    }\r\n  };\r\n\r\n  const fromdate = props.fromdate\r\n  const todate = props.todate\r\n  const channel = props.channel\r\n  const [Loading, setLoading] = useState(false);\r\n  const [purchaseentryarr, setpurchaseentryarr] = useState([]);\r\n  const [purchaseentryarrExcel, setpurchaseentryarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n  const [qr, setqr] = useState(\"none\");\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function GETPurchaseList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get( `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}` )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            setpurchaseentryarr(response.data.data.purchase_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            setpurchaseentryarr(response.data.data.purchase_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETPurchaseListForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpurchaseentryarrExcel(response.data.data.purchase_entry);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [channel, fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETPurchaseList();\r\n    GETPurchaseListForExcel();\r\n  }, [pagecount]);\r\n\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  function GenerateQR(props) {\r\n    let medicines = props.purchaseentry.medicines ? props.purchaseentry.medicines : 0;\r\n    let vaccines = props.purchaseentry.vaccines\r\n      ? props.purchaseentry.vaccines\r\n      : 0;\r\n    let medicineobj = {};\r\n    let vaccineobj = {};\r\n    let medcount = [];\r\n    let vaccount = [];\r\n    if (\r\n      props.purchaseentry.medicines !== undefined &&\r\n      props.purchaseentry.medicines.length !== 0\r\n    ) {\r\n      for (let i = 0; i < medicines.length; i++) {\r\n        for (let j = 0; j < props.purchaseentry.medicines[i].qty; j++) {\r\n          medicineobj[j] = {\r\n            id: \"m\" + props.purchaseentry.medicines[i].id,\r\n            name: props.purchaseentry.medicines[i].medicine.name,\r\n            qrcode: <QRcode id={\"m\" + props.purchaseentry.medicines[i].id} />,\r\n          };\r\n          medcount.push(medicineobj[j]);\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      props.purchaseentry.vaccines !== undefined &&\r\n      props.purchaseentry.vaccines.length !== 0\r\n    ) {\r\n      for (let i = 0; i < vaccines.length; i++) {\r\n        for (let j = 0; j < props.purchaseentry.vaccines[i].qty; j++) {\r\n          vaccineobj[j] = {\r\n            id: \"v\" + props.purchaseentry.vaccines[i].id,\r\n            name: props.purchaseentry.vaccines[i].vaccine.name,\r\n            qrcode: <QRcode id={\"v\" + props.purchaseentry.vaccines[i].id} />,\r\n          };\r\n          vaccount.push(vaccineobj[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h5 className=\"text-charcoal75 fw-bold\">Medicines</h5>\r\n        <div className=\"row\">\r\n          {medcount.map((Data) => (\r\n            <div className=\"col-auto m-2\" key={Data}>\r\n              <p className=\"text-charcoal75\">\r\n                {Data.name} | {Data.id}\r\n              </p>\r\n              <div className=\"container\">{Data.qrcode}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h5 className=\"text-charcoal75 fw-bold mt-2\">Vaccines</h5>\r\n        <div className=\"row\">\r\n          {vaccount.map((Data) => (\r\n            <div className=\"col-auto m-2\" key={Data}>\r\n              <p className=\"text-charcoal75\">\r\n                {Data.name} | {Data.id}\r\n              </p>\r\n              <div className=\"container\">{Data.qrcode}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n         <div className=\"col-auto position-absolute p-0 m-0 ms-2 export_2 align-self-center text-center\">\r\n          <ExportPurchaseEntry purchaseentryarr={purchaseentryarrExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      <button className={`button addpurchase button-charcoal position-absolute d-${permission.purchase_entry_add == 1 ? \"\" : \"none\" }`} onClick={toggle_npef} > <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /> Entry Purchase </button>\r\n          <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 1 ? \"Purchase Entries\" : \"Purchase Entry\"}{\" \"} </h2>\r\n      <div>\r\n        <div className=\"scroll scroll-y overflow-scroll p-0 m-0 mt-2\" style={{ minHeight: \"56vh\", height: \"56vh\" }} >\r\n          <table className=\"table\">\r\n            <thead className=\" align-middle position-sticky top-0 bg-pearl\">\r\n              <tr>\r\n                <th className=\"fw-bolder   text-charcoal75\" > PE ID </th>\r\n                <th className=\"fw-bolder   text-charcoal75\" > PO ID </th>\r\n                <th className=\"fw-bolder   text-charcoal75\" > Channel </th>\r\n                <th className=\"fw-bolder   text-charcoal75\" > Invoice No. </th>\r\n                <th className=\"fw-bolder   text-charcoal75\" > Bill Date </th>\r\n                <th className=\"fw-bolder   text-charcoal75\" > Bill Total </th>\r\n                <th className=\"fw-bolder   text-charcoal75\" > Vendor </th>\r\n                <th className=\"fw-bolder  text-center  text-charcoal75\"  > Inventory </th>\r\n                <th className=\"fw-bolder  text-center  text-charcoal75\"  > QR Code </th>\r\n                {/* <th className='fw-bolder p-0 m-0  text-charcoal75 text-center' scope='col' style={{ zIndex: '3' }}>more</th> */}\r\n              </tr>\r\n            </thead>\r\n            {Loading ? (\r\n              <tbody className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n                <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className=\"\">\r\n                      Getting Details please be Patient ...\r\n                    </strong>\r\n                    <div\r\n                      class=\"spinner-border ms-auto\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    ></div>\r\n                  </div>\r\n                </tr>\r\n              </tbody>\r\n            ) : purchaseentryarr && purchaseentryarr.length != 0 ? (\r\n              <tbody>\r\n                {purchaseentryarr.map((item, i) => (\r\n                  <tr key={i} className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\" } align-middle`} >\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold ps-2\"> PE-{item.bill_id} </td>\r\n                    <td className=\"text-charcoal fw-bold\"> {item.purchase_order_id && item.purchase_order_id !== null ? item.purchase_order_id : \"N/A\"} </td>\r\n                    <td className=\"text-charcoal fw-bold\"> {item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"} </td>\r\n                    <td className=\"text-charcoal fw-bold\"> {item.invoice_no ? item.invoice_no : \"N/A\"} </td>\r\n                    <td className=\"text-charcoal fw-bold\">\r\n                      {item.bill_date && item.bill_date\r\n                        ? reversefunction(item.bill_date)\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"text-charcoal fw-bold\">\r\n                      {item.bill_total && item.bill_total\r\n                        ? \"Rs. \" + item.bill_total\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"text-charcoal fw-bold\">\r\n                      {item.distributor &&\r\n                        item.distributor != null &&\r\n                        item.distributor.entity_name &&\r\n                        item.distributor.entity_name != null\r\n                        ? item.distributor.entity_name\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"text-charcoal fw-bold text-center\">\r\n                      {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                      <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_peidw(); }} > <img src={ process.env.PUBLIC_URL + \"/images/archivebox.png\" } alt=\"displaying_image\" className=\"ms-1 img-fluid\" /> </button>\r\n                    </td>\r\n                    <td className='text-charcoal fw-bold text-center'>\r\n                    <button className=\"btn p-0 m-0\" onClick={() => { setqr(i); }} > <img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" className=\"me-1 img-fluid\" /> </button>\r\n                          </td>\r\n                    <td>\r\n                       {i == index ? ( \r\n                        <>\r\n                        <div className=\"backdrop\"></div>\r\n                        <section className={` position-absolute d-${i == index ? peidw : \"none\" } border border-1 start-0 mx-auto end-0 bg-seashell rounded-4 p-0 m-0`} style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }}>\r\n                       <PEitemdetailssection purchaseentryarr={purchaseentryarr[i]} itembillid={\"PE-\" + item.bill_id} toggle_peidw={toggle_peidw} /> \r\n                       </section>\r\n                       </>\r\n                       ) : ( <></> )}\r\n                    </td>\r\n                    <td className={`position-absolute start-0 text-start bg-pearl container-fluid d-${qr == i ? \"block\" : \"none\" }`} style={{ top: \"-8.5rem\", zIndex: \"5\", height: \"89vh\" }} >\r\n                      {i == qr ? (\r\n                        <div className=\"container-fluid position-relative\">\r\n                          <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={() => setqr()} aria-label=\"Close\" ></button>\r\n                          <div className=\"row\">\r\n                            <GenerateQR purchaseentry={purchaseentryarr[i]} />\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody className=\"text-center position-relative p-0 m-0 \" style={{ minHeight: \"55vh\" }} >\r\n                <tr className=\"\">\r\n                  <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\"> No Purchase Entries </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            breakLabel={\". . .\"}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={GETPurchaseList}\r\n            containerClassName={\"pagination\"}\r\n            pageClassName={\"page-item text-charcoal\"}\r\n            pageLinkClassName={ \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\" }\r\n            previousClassName={\"btn button-charcoal-outline me-2\"}\r\n            previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n            nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n            breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <section className={`newpurchaseentrysection position-absolute start-0 end-0 bg-seashell d-${npef}` } style={{Height:'100vh'}} >\r\n        {\r\n          <Newpurchaseentryform toggle_npef={toggle_npef} GETPurchaseList={GETPurchaseList} />\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction PEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  const [qr, setqr] = useState(\"none\");\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst) || igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n  function GenerateQR(props) {\r\n    let count = [];\r\n    for (let i = 0; i < props.qty; i++) {\r\n      count.push(props.qty);\r\n    }\r\n    return count.map((data) => (\r\n      <div className=\"col-auto m-2\" key={data}>\r\n        <QRcode id={props.id} />\r\n      </div>\r\n    ));\r\n  }\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0\">\r\n        <h5 className=\"text-center pt-3 text-charcoal\">\r\n          {props.itembillid} Purchase Entry Item Details\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute end-0 me-2\"\r\n          onClick={props.toggle_peidw}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div\r\n            className=\" position-relative searchbutton\"\r\n            style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className=\" form-control d-inline PEsearch bg-seashell\"\r\n              placeholder=\"Search PE\"\r\n            />\r\n            <button\r\n              className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\"\r\n              style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }}\r\n            >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n                alt=\"displaying_image\"\r\n                className=\"img-fluid p-0 m-0\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          value={Taxon ? Taxon : \"\"}\r\n          onChange={() => {\r\n            Taxon == true ? setTaxon(false) : setTaxon(true);\r\n          }}\r\n        />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${medicine}`}\r\n        style={{ height:\"100%\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className=\"border p-0 m-0 px-1\"\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Print QR\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchaseentryarr.medicines &&\r\n            props.purchaseentryarr.medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchaseentryarr.medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? \"m\" + item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST\r\n                      ? (Number(item.SGST) * Number(item.qty)).toFixed(2)\r\n                      : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST\r\n                      ? (Number(item.CGST) * Number(item.qty)).toFixed(2)\r\n                      : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST\r\n                      ? (Number(item.IGST) * Number(item.qty)).toFixed(2)\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => {\r\n                        setqr(_key);\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"/images/qrcode.png\"}\r\n                        alt=\"displaying_image\"\r\n                        className=\"me-1\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  <div\r\n                    className={`position-absolute top-0 start-0  text-start bg-pearl container-fluid d-${qr == _key ? \"block\" : \"none\"\r\n                      }`}\r\n                    style={{ top: \"-4.2rem\", zIndex: \"5\", height: \"89vh\" }}\r\n                  >\r\n                    <div className=\"container-fluid position-relative\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn-close closebtn position-absolute end-0 me-2\"\r\n                        onClick={() => setqr()}\r\n                        aria-label=\"Close\"\r\n                      ></button>\r\n                      <p className=\"mt-2 text-burntumber border-1 \">\r\n                        {item.medicine && item.medicine.name !== null\r\n                          ? item.medicine.name\r\n                          : \"N/A\"}{\" \"}\r\n                        | {item && item.id !== null ? \"m\" + item.id : \"N/A\"}\r\n                      </p>\r\n                      <div className=\"row\">\r\n                        <GenerateQR qty={item.qty} id={\"m\" + item.id} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold\">No Medicines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{ height:'100%' }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className={`border p-0 m-0 px-1`} > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Print QR </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total{\" \"} </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchaseentryarr.vaccines &&\r\n            props.purchaseentryarr.vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchaseentryarr.vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item && item.id !== null ? \"v\" + item.id : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.vaccine && item.vaccine.name !== null ? item.vaccine.name : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.batch_no && item.batch_no != null ? item.batch_no : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.mrp ? item.mrp : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.rate ? item.rate : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.discount ? item.discount : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.trade_discount ? item.trade_discount : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST_rate ? item.SGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.SGST ? item.SGST : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST_rate ? item.CGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST ? item.CGST : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST_rate ? item.IGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST ? item.IGST : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxPercent( item.CGST_rate, item.SGST_rate, item.IGST_rate )} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.cost ? item.cost : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    <button className=\"btn\" onClick={() => { setqr(_key); }} > <img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" className=\"me-1\" /> </button>\r\n                  </td>\r\n                  <div className={`position-absolute top-0 start-0  text-start bg-pearl container-fluid d-${qr == _key ? \"block\" : \"none\" }`} style={{ top: \"-8.2rem\", zIndex: \"5\", height: \"89vh\" }} >\r\n                    <div className=\"container-fluid position-relative\">\r\n                      <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={() => setqr()} aria-label=\"Close\" ></button>\r\n                      <p className=\"mt-2 text-burntumber border-1 \"> {item.vaccine && item.vaccine.name !== null ? item.vaccine.name : \"N/A\"}{\" \"} | {item && item.id !== null ? \"v\" + item.id : \"N/A\"} </p>\r\n                      <div className=\"row\">\r\n                        <GenerateQR qty={item.qty} id={\"v\" + item.id} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\"fw-bold text-center\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Newpurchaseentryform(props) {\r\n  const url = useContext(URL);\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  const ClinicList = useContext(Clinic);\r\n  const medicinesref = useRef(null);\r\n  const vendorsref = useRef(null);\r\n  const Tableref = useRef(null);\r\n  const [channel, setchannel] = useState();\r\n  const [po, setpo] = useState();\r\n  const [invoice, setinvoice] = useState();\r\n  const [invoicedate, setinvoicedate] = useState();\r\n  const [vendorname, setvendorname] = useState();\r\n  const [vendorid, setvendorid] = useState();\r\n  const [loadvendors, setloadvendors] = useState();\r\n  const [vendorcode, setvendorcode] = useState();\r\n  const [vendorsearch, setvendorsearch] = useState();\r\n  const [itemsearch, setitemsearch] = useState([\"\"]);\r\n  const [itemname, setitemname] = useState();\r\n  const [itemid, setitemid] = useState();\r\n  const [IsConsumable, setIsConsumable] = useState(0);\r\n  const [itemtype, setitemtype] = useState();\r\n  const [batchno, setbatchno] = useState();\r\n  const [expdate, setexpdate] = useState();\r\n  const [manufdate, setmanufdate] = useState();\r\n  const [mrp, setmrp] = useState();\r\n  const [rate, setrate] = useState();\r\n  const [qty, setqty] = useState();\r\n  const [freeqty, setfreeqty] = useState(0);\r\n  const [disc, setdisc] = useState(0);\r\n  const [trddisc, settrddisc] = useState(0);\r\n  const [cgst, setcgst] = useState(0);\r\n  const [cgstprcnt, setcgstprcnt] = useState(0);\r\n  const [sgst, setsgst] = useState(0);\r\n  const [sgstprcnt, setsgstprcnt] = useState(0);\r\n  const [igst, setigst] = useState(0);\r\n  const [igstprcnt, setigstprcnt] = useState(0);\r\n  const [cpu, setcpu] = useState(0);\r\n  const [totalamt, settotalamt] = useState();\r\n  const [loadsearch, setloadsearch] = useState();\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState();\r\n  const [tableindex, settableindex] = useState();\r\n  const [clinicstatecode, setclinicstatecode] = useState();\r\n  const [load, setload] = useState();\r\n  const [Exceldata, setExceldata] = useState([]);\r\n  const [NewMed, setNewMed] = useState(\"none\");\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  }\r\n  async function filterclinic() {\r\n    for (let i = 0; i < ClinicList.length; i++) {\r\n      if (ClinicList[i].id == ClinicId) {\r\n        setclinicstatecode(ClinicList[i].state_code);\r\n      } \r\n    }\r\n  }\r\n  let MedicineentriesObj = {\r\n    type: \"\",\r\n    isconsumable: 0,\r\n    Itemid: \"\",\r\n    Itemname: \"\",\r\n    batchno: \"\",\r\n    expirydate: \"\",\r\n    manufacturingDate: \"\",\r\n    quantity: \"\",\r\n    freeQty: \"\",\r\n    MRP: \"\",\r\n    Rate: \"\",\r\n    Discount: \"\",\r\n    tradeDiscount: \"\",\r\n    sgst: \"\",\r\n    sgstpercent: \"\",\r\n    cgst: \"\",\r\n    cgstper: \"\",\r\n    igst: \"\",\r\n    igstper: \"\",\r\n    costperunit: \"\",\r\n    totalamount: \"\",\r\n  };\r\n  async function InsertMedicines() {\r\n    MedicineentriesObj = {\r\n      type: itemtype,\r\n      isconsumable: IsConsumable,\r\n      Itemid: itemid,\r\n      Itemname: itemname,\r\n      batchno: batchno,\r\n      expirydate: expdate,\r\n      manufacturingDate: manufdate,\r\n      MRP: mrp,\r\n      Rate: rate,\r\n      Qty: qty,\r\n      freeQty: freeqty,\r\n      Discount: disc,\r\n      tradeDiscount: trddisc,\r\n      sgstper: sgstprcnt,\r\n      sgst: sgst,\r\n      cgstper: cgstprcnt,\r\n      cgst: cgst,\r\n      igstper: igstprcnt,\r\n      igst: igst,\r\n      costperunit: cpu,\r\n      totalamount: totalamt,\r\n    };\r\n    if (qty) {\r\n      if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n        setMedicineentriesArr([MedicineentriesObj]);\r\n      } else {\r\n        setMedicineentriesArr((prevState) => [...prevState, MedicineentriesObj,]);\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please choose quantity\");\r\n    }\r\n\r\n    resetfields();\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios\r\n        .get(`${url}/item/search?search=${search}`)\r\n        .then((response) => {\r\n          let medicines = [];\r\n          let vaccines = [];\r\n          let items = [];\r\n          medicines.push(\r\n            response.data.data.medicines ? response.data.data.medicines : []\r\n          );\r\n          vaccines.push(\r\n            response.data.data.vaccines ? response.data.data.vaccines : []\r\n          );\r\n          items = medicines.concat(vaccines);\r\n          items = items.flat();\r\n          setitemsearch(items);\r\n          setloadsearch(false);\r\n          if (search.length > 1) {\r\n            medicinesref.current.style.display = \"block\";\r\n          } else {\r\n            medicinesref.current.style.display = \"none\";\r\n          }\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true);\r\n    try {\r\n      await axios\r\n        .get(`${url}/kyc/list?limit=10&offset=0&search=${search}`)\r\n        .then((response) => {\r\n          setvendorsearch(response.data.data);\r\n          setloadvendors(false);\r\n          if (search.length > 1) {\r\n            vendorsref.current.style.display = \"block\";\r\n          } else {\r\n            vendorsref.current.style.display = \"none\";\r\n          }\r\n        })\r\n        .catch(function error(e) {\r\n          Notiflix.Notify.warning(e.data.message);\r\n          setloadvendors(false);\r\n        });\r\n    } catch (e) {\r\n      setloadvendors(false);\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const SavePurchase = async () => {\r\n    let Is_consumable = [];\r\n    let MedId = [];\r\n    let medname = [];\r\n    let Type = [];\r\n    let batches = [];\r\n    let expirydate = [];\r\n    let manufacturingDate = [];\r\n    let MRP = [];\r\n    let Rate = [];\r\n    let Discount = [];\r\n    let tradeDiscount = [];\r\n    let sgst = [];\r\n    let sgstpercent = [];\r\n    let cgst = [];\r\n    let cgstpercent = [];\r\n    let igst = [];\r\n    let igstpercent = [];\r\n    let costperunit = [];\r\n    let totalamount = [];\r\n    let quantity = [];\r\n    let freequantity = [];\r\n    let grosstotal = 0;\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      Type.push(MedicineentriesArr[i].type ? MedicineentriesArr[i].type : \"\");\r\n      Is_consumable.push(\r\n        MedicineentriesArr[i].isconsumable\r\n          ? MedicineentriesArr[i].isconsumable\r\n          : 0\r\n      );\r\n      MedId.push(\r\n        MedicineentriesArr[i].Itemid ? MedicineentriesArr[i].Itemid : \"\"\r\n      );\r\n      medname.push(\r\n        MedicineentriesArr[i].Itemname ? MedicineentriesArr[i].Itemname : \"\"\r\n      );\r\n      batches.push(\r\n        MedicineentriesArr[i].batchno ? MedicineentriesArr[i].batchno : \"\"\r\n      );\r\n      expirydate.push(\r\n        MedicineentriesArr[i].expirydate ? MedicineentriesArr[i].expirydate : \"\"\r\n      );\r\n      manufacturingDate.push(\r\n        MedicineentriesArr[i].manufacturingDate\r\n          ? MedicineentriesArr[i].manufacturingDate\r\n          : \"\"\r\n      );\r\n      MRP.push(\r\n        MedicineentriesArr[i].MRP ? Number(MedicineentriesArr[i].MRP) : \"\"\r\n      );\r\n      Rate.push(\r\n        MedicineentriesArr[i].Rate ? Number(MedicineentriesArr[i].Rate) : \"\"\r\n      );\r\n      Discount.push(\r\n        MedicineentriesArr[i].Discount\r\n          ? Number(MedicineentriesArr[i].Discount)\r\n          : 0\r\n      );\r\n      tradeDiscount.push(\r\n        MedicineentriesArr[i].tradeDiscount\r\n          ? Number(MedicineentriesArr[i].tradeDiscount)\r\n          : 0\r\n      );\r\n      sgst.push(\r\n        MedicineentriesArr[i].sgst ? Number(MedicineentriesArr[i].sgst) : \"\"\r\n      );\r\n      sgstpercent.push(MedicineentriesArr[i].sgstper ? Number(MedicineentriesArr[i].sgstper) : 0);\r\n      cgst.push(MedicineentriesArr[i].cgst ? Number(MedicineentriesArr[i].cgst) : \"\");\r\n      cgstpercent.push(MedicineentriesArr[i].cgstper ? Number(MedicineentriesArr[i].cgstper) : 0);\r\n      igst.push(MedicineentriesArr[i].igst ? Number(MedicineentriesArr[i].igst) : \"\");\r\n      igstpercent.push(MedicineentriesArr[i].igstper ? Number(MedicineentriesArr[i].igstper) : 0);\r\n      costperunit.push(MedicineentriesArr[i].costperunit ? Number(MedicineentriesArr[i].costperunit) : \"\");\r\n      totalamount.push(MedicineentriesArr[i].totalamount ? Number(MedicineentriesArr[i].totalamount) : \"\");\r\n      quantity.push(MedicineentriesArr[i].Qty ? Number(MedicineentriesArr[i].Qty) : \"\");\r\n      freequantity.push(MedicineentriesArr[i].freeQty ? Number(MedicineentriesArr[i].freeQty) : 0);\r\n    }\r\n\r\n    totalamount.forEach((item) => {\r\n      grosstotal += Number(item);\r\n    });\r\n    var Data = { distributor_id: vendorid, purchase_order_id: po, invoice_no: invoice, bill_date: invoicedate, clinic_id: ClinicId, channel: channel, is_consumable: Is_consumable, bill_total: grosstotal, id: MedId, type: Type, qty: quantity, free_qty: freequantity, mrp: MRP, rate: Rate, trade_discount: tradeDiscount, discount: Discount, SGST_rate: sgstpercent, SGST: sgst, CGST_rate: cgstpercent, CGST: cgst, IGST_rate: igstpercent, IGST: igst, cost: costperunit, total_amount: totalamount, expiry_date: expirydate, mfd_date: manufacturingDate, batch_no: batches, };\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/purchase/entry/save`, Data).then((response) => {\r\n        setload(false);\r\n        props.GETPurchaseList();\r\n        setload(false);\r\n        props.toggle_npef();\r\n        if (response.data.status == true) {\r\n          Notiflix.Notify.success(response.data.message);\r\n        } else {\r\n          Notiflix.Notify.warning(response.data.message);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      setload(false);\r\n      Notiflix.Notify.warning(e.message);\r\n    }\r\n  };\r\n  const ClearFields = () => {\r\n    setMedicineentriesArr();\r\n    setchannel();\r\n    setpo();\r\n    setinvoice();\r\n    setinvoicedate();\r\n    setvendorname();\r\n    setvendorid();\r\n  };\r\n  const resetfields = async () => {\r\n    setitemname();\r\n    setitemid();\r\n    setbatchno();\r\n    setexpdate();\r\n    setmanufdate();\r\n    setmrp();\r\n    setrate();\r\n    setqty();\r\n    setfreeqty();\r\n    setdisc();\r\n    settrddisc();\r\n    setcgst();\r\n    setsgst();\r\n    setigst();\r\n    setcgstprcnt();\r\n    setsgstprcnt();\r\n    setigstprcnt();\r\n    setcpu();\r\n    settotalamt();\r\n    setloadsearch();\r\n  };\r\n  function confirmmessage(entries, vendor) {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add total ${entries.length} purchase ${entries.length <= 1 ? \"entry\" : \"entries\"\r\n      } of Distributor ${vendor}  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SavePurchase();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  function indexing(i) {\r\n    if (tableindex == i) {\r\n      settableindex(-1);\r\n      Emptytableindex();\r\n    } else {\r\n      settableindex(i);\r\n      EditTableEntry(i);\r\n    }\r\n  }\r\n  function EditTableEntry(index) {\r\n    setitemid(MedicineentriesArr[index].Itemid);\r\n    setitemname(MedicineentriesArr[index].Itemname);\r\n    setbatchno(MedicineentriesArr[index].batchno);\r\n    setexpdate(MedicineentriesArr[index].expirydate);\r\n    setmanufdate(MedicineentriesArr[index].manufacturingDate);\r\n    setmrp(MedicineentriesArr[index].MRP);\r\n    setrate(MedicineentriesArr[index].Rate);\r\n    setqty(MedicineentriesArr[index].Qty);\r\n    setfreeqty(MedicineentriesArr[index].freeQty);\r\n    setdisc(MedicineentriesArr[index].Discount);\r\n    settrddisc(MedicineentriesArr[index].tradeDiscount);\r\n    setcgst(MedicineentriesArr[index].cgst);\r\n    setcgstprcnt(MedicineentriesArr[index].cgstper);\r\n    setsgst(MedicineentriesArr[index].sgst);\r\n    setsgstprcnt(MedicineentriesArr[index].sgstper);\r\n    setigst(MedicineentriesArr[index].igst);\r\n    setigstprcnt(MedicineentriesArr[index].igstper);\r\n    setcpu(MedicineentriesArr[index].costperunit);\r\n    settotalamt(MedicineentriesArr[index].totalamount);\r\n  }\r\n  function Emptytableindex() {\r\n    setIsConsumable(0);\r\n    setitemid();\r\n    setitemname();\r\n    setbatchno();\r\n    setexpdate();\r\n    setmanufdate();\r\n    setmrp();\r\n    setrate();\r\n    setqty();\r\n    setfreeqty();\r\n    setdisc();\r\n    settrddisc();\r\n    setcgst();\r\n    setcgstprcnt();\r\n    setsgst();\r\n    setsgstprcnt();\r\n    setigst();\r\n    setigstprcnt();\r\n    setcpu();\r\n    settotalamt();\r\n  }\r\n  async function UpdateMedicines() {\r\n    for (let j = 0; j < MedicineentriesArr.length; j++) {\r\n      if (tableindex == j) {\r\n        MedicineentriesArr[j] = {\r\n          type: itemtype,\r\n          isconsumable: IsConsumable,\r\n          Itemid: itemid,\r\n          Itemname: itemname,\r\n          batchno: batchno,\r\n          expirydate: expdate,\r\n          manufacturingDate: manufdate,\r\n          MRP: mrp,\r\n          Rate: rate,\r\n          Qty: qty,\r\n          freeQty: freeqty,\r\n          Discount: disc,\r\n          tradeDiscount: trddisc,\r\n          sgstper: sgstprcnt,\r\n          sgst: sgst,\r\n          cgstper: cgstprcnt,\r\n          cgst: cgst,\r\n          igstper: igstprcnt,\r\n          igst: igst,\r\n          costperunit: cpu,\r\n          totalamount: totalamt,\r\n        };\r\n        Notiflix.Notify.success(\r\n          `Item Number ${tableindex + 1} Updated Successfully`\r\n        );\r\n        Emptytableindex();\r\n        settableindex(-1);\r\n      }\r\n    }\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = [];\r\n    obj.push(\r\n      MedicineentriesArr.filter(function (e) {\r\n        return e.Itemid !== id;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setMedicineentriesArr(obj);\r\n  }\r\n  let total = 0;\r\n  function Calculate() {\r\n    total = qty ? rate * qty : rate;\r\n    // total = freeqty ? total - (rate * freeqty) : total\r\n    total = disc ? total - (total * disc) / 100 : total;\r\n    total = trddisc ? total - (total * trddisc) / 100 : total;\r\n    total = sgstprcnt\r\n      ? Number(total) +\r\n      Number((total * sgstprcnt) / 100 + (total * sgstprcnt) / 100)\r\n      : total;\r\n    total = igstprcnt\r\n      ? Number(total) + Number((total * Number(igstprcnt)) / 100)\r\n      : total;\r\n    total = total ? parseFloat(total).toFixed(2) : total;\r\n    return total;\r\n  }\r\n  let CostPerUnit = 0;\r\n  function CalculateCPU() {\r\n    let newqty = Number(qty) + Number(freeqty);\r\n    CostPerUnit = Number(parseFloat(Calculate() / newqty));\r\n    CostPerUnit = parseFloat(CostPerUnit).toFixed(2);\r\n    return CostPerUnit;\r\n  }\r\n  let GsT = 0;\r\n  function CalculateGst() {\r\n    total = qty ? rate * qty : rate;\r\n    total = disc ? total - (total * disc) / 100 : total;\r\n    total = trddisc ? total - (total * trddisc) / 100 : total;\r\n    GsT = sgstprcnt\r\n      ? Number(((rate * sgstprcnt) / 100 + (rate * sgstprcnt) / 100) / 2)\r\n      : GsT;\r\n    GsT = parseFloat(GsT).toFixed(2);\r\n    return GsT;\r\n  }\r\n  let IgsT = 0;\r\n  function CalculateIGst() {\r\n    total = qty ? rate * qty : rate;\r\n    total = disc ? total - (total * disc) / 100 : total;\r\n    total = trddisc ? total - (total * trddisc) / 100 : total;\r\n    IgsT = igstprcnt ? Number((rate * igstprcnt) / 100) : IgsT;\r\n    IgsT = parseFloat(IgsT).toFixed(2);\r\n    return IgsT;\r\n  }\r\n  \r\n  const searchmedAuto = async (search) => {\r\n    await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n      let medicines = [];\r\n      let vaccines = [];\r\n      let items = [];\r\n      medicines.push(\r\n        response.data.data.medicines ? response.data.data.medicines : []\r\n      );\r\n      vaccines.push(\r\n        response.data.data.vaccines ? response.data.data.vaccines : []\r\n      );\r\n      items = medicines.concat(vaccines);\r\n      items = items.flat();\r\n      if (items[0] && items[0].id !== undefined) {\r\n        let ID = items[0].id;\r\n        return ID;\r\n      } else {\r\n        return \"Please Select ID\";\r\n      }\r\n    });\r\n  }\r\n  const CalGST = (rate, cgst) => {\r\n    let gst = 0;\r\n    if (cgst && rate) {\r\n      gst = (cgst * rate) / 100;\r\n      gst = Number(gst);\r\n      gst = gst.toFixed(2);\r\n      return gst;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  const Disc = (rate, dis) => {\r\n    let disrate = 0;\r\n    if (rate && dis) {\r\n      disrate = (rate * dis) / 100;\r\n      return disrate;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  const SubmitExcel = () => {\r\n    if (Tableref.current.files[0].type == \"application/vnd.ms-excel\") {\r\n      let SelectedFile = Tableref.current.files[0];\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(SelectedFile);\r\n      reader.onload = (e) => {\r\n        setExceldata(e.target.result);\r\n      };\r\n    } else {\r\n      Notiflix.Notify.failure(\"Choose Only Excel File to Upload\");\r\n    }\r\n  }\r\n  const ConvertExcel = async () => {\r\n    let e = [];\r\n    if (vendorid == 2) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { type: \"buffer\" });\r\n        const ExcelSheet = Excelfile.SheetNames[0];\r\n        const Sheet = Excelfile.Sheets[ExcelSheet];\r\n        const data = XLSX.utils.sheet_to_json(Sheet);\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = data[i].EXPIRY.replace(\"/\", \"-20\");\r\n          expiry = \"01-\" + expiry;\r\n          expiry = reversefunction(expiry);\r\n          let CpU = Number(data[i].SRATE);\r\n          CpU = data[i][\"CGST\"]\r\n            ? CpU +\r\n            Number(CalGST(CpU, data[i][\"CGST\"])) +\r\n            Number(CalGST(CpU, data[i][\"SGST\"]))\r\n            : CpU;\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS));\r\n          CpU = Number(CpU).toFixed(2);\r\n          let ITEMID = await searchmedAuto(data[i][\"ITEM NAME\"]);\r\n\r\n          MedicineentriesObj = {\r\n            type: \"\",\r\n            Itemid: \"\",\r\n            Itemname: data[i][\"ITEM NAME\"],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: manufdate,\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i][\"F.QTY\"],\r\n            Discount: \"\",\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i][\"SGST\"],\r\n            sgst: CalGST(data[i].SRATE, data[i][\"SGST\"]),\r\n            cgstper: data[i][\"CGST\"],\r\n            cgst: CalGST(data[i].SRATE, data[i][\"CGST\"]),\r\n            igstper: CalGST(data[i].SRATE, data[i][\"IGST\"]),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: CpU * data[i].QTY.toFixed(2),\r\n          };\r\n          e.push(MedicineentriesObj);\r\n        }\r\n      }\r\n    }\r\n    if (vendorid == 4 || vendorid == 3) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { type: \"buffer\" });\r\n        const ExcelSheet = Excelfile.SheetNames[0];\r\n        const Sheet = Excelfile.Sheets[ExcelSheet];\r\n        const data = XLSX.utils.sheet_to_json(Sheet);\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = \"20\" + data[i].EXPYEAR;\r\n          expiry =\r\n            expiry +\r\n            (data[i].EXPMONTH < 10\r\n              ? \"-\" + \"0\" + data[i].EXPMONTH\r\n              : \"-\" + data[i].EXPMONTH);\r\n          expiry =\r\n            expiry +\r\n            (data[i].EXPDAY < 10 ? \"-\" + \"0\" + data[i].EXPDAY : data[i].EXPDAY);\r\n          let CpU = Number(data[i].SRATE);\r\n          CpU = data[i][\"CGST\"]\r\n            ? CpU +\r\n            Number(CalGST(CpU, data[i][\"CGST\"])) +\r\n            Number(CalGST(CpU, data[i][\"SGST\"]))\r\n            : CpU;\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS));\r\n          CpU = Number(CpU).toFixed(2);\r\n          MedicineentriesObj = {\r\n            type: \"\",\r\n            Itemid: \"\",\r\n            Itemname: data[i][\"ITEM NAME\"],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: \"\",\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i][\"F.QTY\"],\r\n            Discount: \"\",\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i][\"SGST\"],\r\n            sgst: CalGST(data[i].SRATE, data[i][\"SGST\"]),\r\n            cgstper: data[i][\"CGST\"],\r\n            cgst: CalGST(data[i].SRATE, data[i][\"CGST\"]),\r\n            igstper: CalGST(data[i].SRATE, data[i][\"IGST\"]),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: (CpU * data[i].QTY).toFixed(2),\r\n          };\r\n          e.push(MedicineentriesObj);\r\n        }\r\n      }\r\n    }\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr(e);\r\n    } else {\r\n      setMedicineentriesArr((prevState) => [...prevState, e]);\r\n    }\r\n  }\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == \"block\") {\r\n      setNewMed(\"none\");\r\n    }\r\n    if (NewMed == \"none\") {\r\n      setNewMed(\"block\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    CalculateGst();\r\n    setsgst(CalculateGst());\r\n    setcgst(CalculateGst());\r\n  }, [sgstprcnt]);\r\n\r\n  useEffect(() => {\r\n    CalculateIGst();\r\n    setigst(CalculateIGst());\r\n  }, [igstprcnt]);\r\n  useEffect(() => {\r\n    settotalamt(Calculate());\r\n  }, [Calculate()]);\r\n\r\n  useEffect(() => {\r\n    setcpu(CalculateCPU());\r\n  }, [CalculateCPU(), Calculate()]);\r\n  return (\r\n    <div className=\" p-0 m-0\" style={{ zIndex: \"2\" }}>\r\n        <div className=\"row p-0 m-0 p-2\">\r\n          <div className=\"col-1\">\r\n            <button type=\"button\" className=\"btn-close closebtn m-auto mt-2\" onClick={props.toggle_npef} aria-label=\"Close\" ></button>\r\n          </div>\r\n          <div className=\"col-8 col-md-7 col-lg-8 col-xl-8\">\r\n            <h5 className=\"text-center mt-2 fw-bold text-charcoal\"> New Purchase Entry </h5>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button disabled={MedicineentriesArr == undefined || (MedicineentriesArr && MedicineentriesArr.length == 0) ? true : false} className=\"button button-charcoal\" onClick={() => { confirmmessage(MedicineentriesArr, vendorname); }} > Save All </button>\r\n            )}\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <button className=\"btn btn-sm text-burntumber fw-bold\" onClick={ClearFields}> Clear </button>\r\n          </div>\r\n        </div>\r\n\r\n      <div className=\"container-fluid p-0 m-0 entrydetails bg-pearl\" style={{ Height: \"100vh\" }} >\r\n        <div className=\"row p-0 m-0\">\r\n          <div className={`col-${vendorid ? \"8\" : \"12\"} p-0 m-0`}>\r\n            <div className=\"row p-0 m-0 align-items-center\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      checked={channel == 1 ? true : false}\r\n                      value=\"1\"\r\n                      onClick={(e) => {\r\n                        setchannel(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Pharmacy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" checked={channel == 2 ? true : false} value=\"2\" onClick={(e) => { setchannel(e.target.value); }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Clinic</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8 p-0 m-0\">\r\n              <div className=\"row p-0 m-0 gx-2 gy-1\">\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select PO</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder=\"Enter PO\" value={po ? po : \"\"} onChange={(e) => { setpo(e.target.value); }} style={{ zIndex: \"5\" }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Vendor</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder=\"Search Vendors\" value={vendorname ? vendorname : \"\"} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setvendorcode(); }} />\r\n                  <div ref={vendorsref} className=\"position-absolute ms-2 rounded-1 bg-pearl col-auto\" style={{ zIndex: \"5\", width: \"fit-content\" }} >\r\n                    {vendorsearch ? (\r\n                      loadvendors ? (\r\n                        <div className=\"rounded-1 p-1 bg-pearl mt-1 border shadow\" style={{ width: \"fit-content\" }} >\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"></span>\r\n                          </div>\r\n                        </div>\r\n                      ) : vendorsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-1 p-2\">\r\n                          Oops! Not Avaliable\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"bg-pearl border shadow rounded-1 p-1 col-12\" style={{ zIndex: \"40\" }} >\r\n                          {\r\n                          vendorsearch.map((data, i) => (\r\n                            <div style={{ cursor: \"pointer\" }} className={`p-0 p-1 d-${vendorsearch == undefined || vendorsearch.length > 0 ? \"\" : \"none\" }  bg-${i % 2 == 0 ? \"pearl\" : \"seashell\" } `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); setvendorcode(data.state_code); filterclinic(); vendorsref.current.style.display = \"none\"; }} > {data.entity_name} </div>\r\n                          ))}\r\n                        </div>\r\n                      )\r\n                    ) : (\r\n                      <></> \r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Number</h6>\r\n                  <input type=\"text\" placeholder=\"Enter No.\" className=\"form-control ms-2 rounded-1\" value={invoice ? invoice : \"\"} onChange={(e) => { setinvoice(e.target.value); }} style={{ color: \"gray\" }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Date</h6>\r\n                  <input type=\"date\" className=\"form-control ms-2 rounded-1\" value={invoicedate ? invoicedate : \"\"} onChange={(e) => { setinvoicedate(e.target.value); }} style={{ color: \"gray\" }} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row p-0 m-0 align-items-center mt-2\">\r\n                <div className=\"col-6 col-lg-5 col-md-5 p-0 m-0 align-self-center ms-1\">\r\n                  <button className=\"button button-charcoal p-0 m-0 pe-3 ms-2\" onClick={ToggleNewMedicine} > {\" \"} <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" />{\" \"} Medicine{\" \"} </button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                      <input ref={Tableref} className=\"form-control w-100 p-0 m-0 px-2 py-1 rounded-1 bg-pearl\" onChange={SubmitExcel} type=\"file\" />\r\n                    </div>\r\n                    <div className=\"col-5 text-end\">\r\n                      <button className=\"button button-charcoal\" onClick={ConvertExcel} > Submit </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\" p-0 m-0 scroll scroll-y\" >\r\n              <table className=\"table m-0 datatable bg-pearl text-start position-relative align-middle\">\r\n                <thead className=\" bg-pearl position-sticky top-0\" style={{ color: \"gray\", fontWeight: \"600\" }} >\r\n                  <tr>\r\n                    <th>Edit</th>\r\n                    <th>Item ID</th>\r\n                    <th>Item Name</th>\r\n                    <th>batch No.</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>MRP</th>\r\n                    <th>Rate</th>\r\n                    <th>Total Disc</th>\r\n                    <th>Qty.</th>\r\n                    <th>Cost</th>\r\n                    <th>Amount</th>\r\n                    <th className=\"text-center\">Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                {MedicineentriesArr ? (\r\n                  <tbody style={{ Height: \"48vh\", maxHeight: \"48vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                    {\r\n                    MedicineentriesArr.map((item, _key) => (\r\n                      <tr key={_key} className={`bg-${_key % 2 == 0 ? \"seashell\" : \"pearl\"}`} >\r\n                        <td><input type=\"checkbox\" checked={_key == tableindex ? true : false} onClick={() => { indexing(_key); }} className=\" form-check-input p-1\" /> </td>\r\n                        <td>{item.Itemid}</td>\r\n                        <td>{item.Itemname}</td>\r\n                        {/* <td>{reversefunction(item.manufacturingDate)}</td> */}\r\n                        <td>{item.batchno}</td>\r\n                        <td>{reversefunction(item.expirydate)}</td>\r\n                        <td>{item.MRP}</td>\r\n                        <td>{item.Rate}</td>\r\n                        <td>{Number(item.Discount) + Number(item.tradeDiscount)} </td>\r\n                        <td>{item.Qty}</td>\r\n                        <td>{item.costperunit}</td>\r\n                        <td>{item.totalamount}</td>\r\n                        <td><button onClick={() => { DeleteMedicine(item.Itemid); }} className=\"btn btn-sm text-burntumber fw-bold\" > Delete </button> </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                ) : MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                  <tbody className=\"position-relative bg-pearl text-center\" style={{ height: \"48vh\", maxHeight: \"48vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                    <tr>\r\n                      <td className=\"position-absolute start-0 end-0 top-0\"> No items Added </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className=\"position-relative bg-pearl text-center\" style={{ height: \"48vh\", maxHeight: \"48vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                    <tr className=\"\">\r\n                      <td className=\"position-absolute start-0 end-0\"> No items Added </td>\r\n                    </tr>\r\n                  </tbody>\r\n                )}\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`col-4 m-0 p-0 scroll scroll-y border border-1 medicineinfosection d-${vendorid ? \"block\" : \"none\"} bg-seashell ps-2`} id=\"medicineinfosection\" style={{ maxHeight: \"81vh\", Height: \"81vh\" }} >\r\n            <h5 className=\"mt-2\">Add Items</h5>\r\n            <div className=\"col-12\">\r\n              <input type=\"checkbox\" checked={IsConsumable == 0 ? false : true} className=\"form-check-input\" onChange={() => { IsConsumable == 0 ? setIsConsumable(1) : setIsConsumable(0); }} />\r\n              <label>Is Consumable</label>\r\n              <div className=\" col-lg-10 col-12\">\r\n                <div className=\"position-relative\">\r\n                  <label>Search Items </label>\r\n                  <input className=\"form-control bg-seashell\" placeholder=\"Items\" value={itemname ? itemname : \"\"} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemtype(); }} />\r\n                  <div ref={medicinesref} className=\"position-absolute rounded-4 col-12\" style={{ zIndex: \"2\" }} >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className=\"rounded-1 p-1 bg-pearl\">\r\n                            Searching Please wait....\r\n                            <div\r\n                              className=\"spinner-border my-auto\"\r\n                              style={{ width: \"1rem\", height: \"1rem\" }}\r\n                              role=\"status\"\r\n                            >\r\n                              <span className=\"sr-only\"> </span>{\" \"}\r\n                            </div>\r\n                          </div>\r\n                        ) : itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-1 p-1 text-wrap\">\r\n                            Oops! Not Avaliable\r\n                          </div>\r\n                        ) : (\r\n                          <div className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1 ? \"block\" : \"none\"}`} >\r\n                            <p className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 rounded-4 ps-2 `} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                            {itemsearch.map((data, i) => (\r\n                              <div style={{ cursor: \"pointer\" }} className={`p-0 ps-1 text-wrap  bg-${i % 2 == 0 ? \"\" : \"lightyellow\"}`} name={data.id} onClick={(e) => { setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); setitemtype(data.vaccines_id ? \"v\" : \"m\"); medicinesref.current.style.display = \"none\"; }} >\r\n                                {data.display_name ? data.display_name : data.name}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                  </div>\r\n                </div>\r\n                <label className=\"mb-2 pt-2\">Batch Number</label>\r\n                <input type=\"text\" max=\"10\" className=\"form-control bg-seashell batchnumber rounded-1\" id=\"inputEmail4\" placeholder=\"Batch Number\" value={batchno ? batchno : \"\"} onChange={(e) => setbatchno(e.target.value)} required />\r\n                <label className=\"pt-3 mb-2\">Expiry Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 expirydate\" value={expdate ? expdate : \"\"} onChange={(e) => { setexpdate(e.target.value); }} required />\r\n                <label className=\"pt-3 mb-2\">Manufacturing Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 manufacturingdate\" value={manufdate ? manufdate : \"\"} onChange={(e) => { setmanufdate(e.target.value); }} required />\r\n              </div>\r\n              <div className=\"col-12 form-group col-md-12 col-lg-11\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">MRP</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={mrp ? mrp : \"\"} onChange={(e) => { setmrp(e.target.value); }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\"> Rate</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={rate ? rate : \"\"} onChange={(e) => { setrate(e.target.value); Calculate(e.target.value); }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={qty ? qty : \"\"} onChange={(e) => { setqty(e.target.value); Calculate(rate, e.target.value); }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Free Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={freeqty ? freeqty : \"\"} onChange={(e) => { setfreeqty(e.target.value); }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Discount &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={disc ? disc : \"\"} onChange={(e) => { setdisc(e.target.value); }} required />\r\n                  </div>\r\n                  <div className=\"col-5 pb-3\">\r\n                    <label className=\"mb-2\">Trade Disc. &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={trddisc ? trddisc : \"\"} onChange={(e) => { settrddisc(e.target.value); }} required />\r\n                  </div>\r\n                  <hr />\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? \"block\" : \"none\" }`} >\r\n                    <div className=\"row align-items-center p-0 m-0\">\r\n                      <div className=\"col-auto \">\r\n                        <h6>SGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\" bg-seashell mrp rounded-1 w-100 border border-seashell m-auto\" placeholder=\"00\" disabled={true} value={sgst ? sgst : \"\"} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\" bg-seashell mrp rounded-1 w-100 border border-seashell m-auto p-0 m-0\" placeholder=\"Rate\" value={sgstprcnt ? sgstprcnt : \"\"} onChange={(e) => { setsgstprcnt(e.target.value); setcgstprcnt(e.target.value); CalculateGst(); }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? \"block\" : \"none\" }`} >\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-auto\">\r\n                        <h6>CGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\" bg-seashell mrp rounded-1 w-100 border border-seashell  m-auto\" disabled={true} placeholder=\"00\" value={cgst ? cgst : sgst ? sgst : \"\"} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\" bg-seashell mrp rounded-1 w-100 border border-seashell  m-auto\" disabled={true} placeholder=\"Rate\" value={ cgstprcnt ? cgstprcnt : sgstprcnt ? sgstprcnt : \"\" } required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? \"none\" : \"block\" }`} >\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>IGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={CalculateIGst() ? CalculateIGst() : \"\"} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={igstprcnt ? igstprcnt : \"\"} onChange={(e) => { setigstprcnt(e.target.value); }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"col-12 form-group\">\r\n                <div className=\"row p-0 m-0 g-3\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Cost/Unit</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell costunit rounded-1\" placeholder=\"00\" disabled value={CalculateCPU() ? CalculateCPU() : \"\"} onChange={(e) => { setcpu(e.target.value); }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Total Amount</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell totalamount rounded-1\" placeholder=\"00\" disabled value={Calculate() ? Calculate() : \"\"} onChange={(e) => { settotalamt(e.target.value); }} required />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6 py-3 m-auto text-center\">\r\n                {tableindex == -1 || tableindex == undefined ? (\r\n                  <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={InsertMedicines} > {\" \"} Add{\" \"} </button>\r\n                ) : (\r\n                  <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={UpdateMedicines} > {\" \"} Update{\" \"} </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`position-absolute bg-seashell top-0 start-0 end-0 d-${NewMed}`}>\r\n        <NewMedicine ToggleNewMedicine={ToggleNewMedicine} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n// function Purchaseordersection() {\r\n//   let cartselect = [\"Pharmacy\", \"Clinic\"];\r\n//   const [cartselectindex, setcartselectindex] = useState(0);\r\n//   const [displayviewcart, setdisplayviewcart] = useState(\"none\");\r\n//   const [displayitemdetails, setdisplayitemdetails] = useState(\"none\");\r\n//   const _displayviewcart = () => {\r\n//     if (displayviewcart === \"none\") {\r\n//       setdisplayviewcart(\"block\");\r\n//     }\r\n//     if (displayviewcart === \"block\") {\r\n//       setdisplayviewcart(\"none\");\r\n//     }\r\n//   };\r\n//   const _displayitemdetails = () => {\r\n//     if (displayitemdetails === \"none\") {\r\n//       setdisplayitemdetails(\"block\");\r\n//     }\r\n//     if (displayitemdetails === \"block\") {\r\n//       setdisplayitemdetails(\"none\");\r\n//     }\r\n//   };\r\n//   const _selectedcart = (cardindex) => {\r\n//     if (cardindex === 0) {\r\n//       return (\r\n//         <table className=\"table datatable text-center\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>No.</th>\r\n//               <th>Item Name</th>\r\n//               <th>Total Qty</th>\r\n//               <th>Amount</th>\r\n//               <th>Last Vendor</th>\r\n//               <th>Add</th>\r\n//               <th>Delete</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>{<Pharmacystocktable />}</tbody>\r\n//         </table>\r\n//       );\r\n//     }\r\n//     if (cardindex === 1) {\r\n//       return <div className=\"\">{cardindex}</div>;\r\n//     }\r\n//     return <div className=\"fs-2\">Nothing Selected</div>;\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <button\r\n//         className=\"button viewcart button-charcoal position-absolute\"\r\n//         onClick={_displayviewcart}\r\n//       >\r\n//         <img\r\n//           src={process.env.PUBLIC_URL + \"/images/cartwhite.png\"}\r\n//           alt=\"displaying_image\"\r\n//           className=\"img-fluid\"\r\n//         />\r\n//         View Cart\r\n//       </button>\r\n//       <div\r\n//         className={`container-fluid pt-2  p-0 m-0 cartform d-${displayviewcart} w-50 border1 rounded bg-seashell position-absolute text-center`}\r\n//       >\r\n//         <div className=\"container-fluid  w-100 shadow-sm\">\r\n//           <h5 className=\"text-dark fw-bold\">Items in Cart</h5>\r\n//         </div>\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"btn-close closebtn position-absolute\"\r\n//           aria-label=\"Close\"\r\n//           onClick={_displayviewcart}\r\n//         ></button>\r\n//         <div className=\"pt-1\">\r\n//           <div className=\"row g-0 justify-content-center\">\r\n//             {cartselect.map((e, i) => {\r\n//               return (\r\n//                 <button\r\n//                   className={`col-2 p-0 m-0 button text-${i === cartselectindex ? \"light\" : \"dark\"\r\n//                     } bg-${i === cartselectindex ? \"charcoal\" : \"seashell\"\r\n//                     } rounded-0`}\r\n//                   onClick={(a) => setcartselectindex(i)}\r\n//                 >\r\n//                   {e}\r\n//                 </button>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"scroll scroll-y\">{_selectedcart(cartselectindex)}</div>\r\n//         <div className=\"bg-pearl rounded\">\r\n//           <div className=\"row p-3 justify-content-between\">\r\n//             <div className=\"col-3\">\r\n//               <select\r\n//                 className=\"form-control bg-pearl\"\r\n//                 style={{ color: \"gray\" }}\r\n//               >\r\n//                 <option\r\n//                   selected\r\n//                   disabled\r\n//                   defaultValue=\"Select Vendor\"\r\n//                   className=\"Selectvendor\"\r\n//                   style={{ color: \"gray\" }}\r\n//                 >\r\n//                   Select Vendor\r\n//                 </option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"col-3\">\r\n//               <button className=\"button button-charcoal\">Create New PO</button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div\r\n//         className={`container-fluid pt-2  p-0 m-0 itemdetailsform d-${displayitemdetails} w-50 border1 rounded bg-seashell position-absolute text-center`}\r\n//       >\r\n//         <div className=\"container-fluid  w-100 shadow-sm\">\r\n//           <h5 className=\"text-dark fw-bold\">PO-14 Item Details</h5>\r\n//         </div>\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"btn-close closebtn position-absolute\"\r\n//           aria-label=\"Close\"\r\n//           onClick={_displayitemdetails}\r\n//         ></button>\r\n//         <div className=\"scroll scroll-y\">{<POitemdetailsarray />}</div>\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"btn btn-lg text-center button-charcoal m-2\"\r\n//           onClick={_displayitemdetails}\r\n//         >\r\n//           Done\r\n//         </button>\r\n//       </div>\r\n//       <h3 className=\"ps-3\">Purchase Order List</h3>\r\n//       <table className=\"table datatable text-center\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>PO ID</th>\r\n//             <th>Channel</th>\r\n//             <th>Vendor</th>\r\n//             <th>PO Date</th>\r\n//             <th>Created By</th>\r\n//             <th>Total Items</th>\r\n//             <th>Amount</th>\r\n//             <th>Approval Status</th>\r\n//             <th></th>\r\n//             <th></th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {<Purchaseorderarray itemdetails={_displayitemdetails} />}\r\n//         </tbody>\r\n//       </table>\r\n//     </>\r\n//   );\r\n// }\r\n// function POitemdetailssection() {\r\n//   return (\r\n//     <table className=\"table datatable text-center\">\r\n//       <thead>\r\n//         <tr>\r\n//           <th>No.</th>\r\n//           <th>Item Name</th>\r\n//           <th>Total Qty</th>\r\n//           <th>Amount</th>\r\n//           <th>Last Vendor</th>\r\n//           <th>Add</th>\r\n//           <th>Delete</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>{<POitemdetailsarray />}</tbody>\r\n//     </table>\r\n//   );\r\n// }\r\nfunction PurchaseReturns(props) {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const url = useContext(URL);\r\n  const [pridw, setpridw] = useState(\"none\");\r\n  const channel =  props.channel\r\n  const fromdate = props.fromdate\r\n  const todate = props.todate\r\n  const [Loading, setLoading] = useState(false);\r\n  const [purchasereturnarr, setpurchasereturnarr] = useState([]);\r\n  const [purchasereturnarrExcel, setpurchasereturnarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETPurchaseReturns(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n            }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n          )\r\n          .then((response) => {\r\n            setpurchasereturnarr(response.data.data.purchase_return);\r\n            setpagecount(response.data.data.total_count);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            setpurchasereturnarr(response.data.data.purchase_return);\r\n            setpagecount(response.data.data.total_count);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETPurchaseReturnsForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpurchasereturnarrExcel(response.data.data.purchase_return);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [channel, fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETPurchaseReturns();\r\n    GETPurchaseReturnsForExcel();\r\n  }, [pagecount]);\r\n\r\n  const toggle_pridw = () => {\r\n    if (pridw === \"none\") {\r\n      setpridw(\"block\");\r\n    }\r\n    if (pridw === \"block\") {\r\n      setpridw(\"none\");\r\n      setindex()\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"col-auto position-absolute p-0 m-0 ms-2  export_2 align-self-center text-center   \">\r\n          <ExportPurchaseReturn purchasereturnarr={purchasereturnarrExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      <button className=\"button addpurchase button-charcoal position-absolute\" onClick={toggle_nref} >\r\n        <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />\r\n        Entry Return\r\n      </button>\r\n\r\n        <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 1 ? \"Purchase Returns\" : \"Purchase Return\"}{\" \"} </h2>\r\n        \r\n      \r\n      <div className=\"scroll scroll-y overflow-scroll p-0 m-0\" style={{ minHeight: \"57vh\", height: \"57vh\" }} >\r\n        <table className=\"table text-center p-0 m-0\">\r\n          <thead className=\"p-0 m-0 align-middle text-start\">\r\n            <tr>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> PR ID </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Channel </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Distributor </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Return Date </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Return Amount </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Inventory </th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n          Loading ? (\r\n            <body className=\" text-center\" style={{ minHeight: \"57vh\" }}>\r\n              <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <strong className=\"fs-5\">\r\n                    Getting Details please be Patient ...\r\n                  </strong>\r\n                  <div\r\n                    className=\"spinner-border ms-auto\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></div>\r\n                </div>\r\n              </tr>\r\n            </body>\r\n          ) : purchasereturnarr && purchasereturnarr.length != 0 ? (\r\n            <tbody className=\"text-start\">\r\n              {purchasereturnarr.map((item, i) => (\r\n                <tr key={i} className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\" } align-middle`} >\r\n                  <td className=\"text-charcoal fw-bold\"> PR-{item.return_no} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : \"N/A\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.return_date ? reversefunction(item.return_date) : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> ₹{item.grand_total ? item.grand_total : \"N/A\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\">\r\n                    <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_pridw(); }} > <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\"/> </button>\r\n                  </td>\r\n                  <td className=\"p-0 m-0\">\r\n                    {\r\n                    i == index ? (\r\n                      <>\r\n                      <div className=\"backdrop\"></div>\r\n                      <section className={` position-absolute d-${i == index ? pridw : \"none\" } border border-1 start-0 mx-auto end-0 bg-seashell rounded-4 p-0 m-0`} style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }}>\r\n                      <PRitemdetailssection purchasereturnarr={purchasereturnarr[i]} itembillid={\"PR-\" + item.return_no} toggle_pridw={toggle_pridw} />\r\n                      </section>\r\n                      </>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"text-center position-relative p-0 m-0 \" style={{ minHeight: \"55vh\" }} >\r\n              <tr className=\"\">\r\n                <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\"> No Purchase Returns </td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\". . .\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETPurchaseReturns}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={ \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\" }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n\r\n      <section className={`top-0 position-absolute bg-seashell border shaodw rounded-2 start-0 end-0 mx-auto d-${nref}`} style={{height:'70vh',width:'60vh'}}>\r\n        {\r\n          <NewPurchaseReturnentryform toggle_nref={toggle_nref} GETPurchaseReturns={GETPurchaseReturns} />\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction PRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0 position-relative\">\r\n        <h5 className=\"text-center text-charcoal mt-3\">\r\n          {props.itembillid} Purchase Return Item Details\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute end-0 me-2 \"\r\n          onClick={props.toggle_pridw}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n        <div className=\"col-2 d-none\">\r\n          <div\r\n            className=\" position-relative searchbutton\"\r\n            style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className=\" form-control d-inline PEsearch bg-seashell\"\r\n              placeholder=\"Search PE\"\r\n            />\r\n            <button\r\n              className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\"\r\n              style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }}\r\n            >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n                alt=\"displaying_image\"\r\n                className=\"img-fluid p-0 m-0\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button border-charcoal rounded-0 button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-end me-5 \">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          value={Taxon ? Taxon : \"\"}\r\n          onChange={() => {\r\n            Taxon == true ? setTaxon(false) : setTaxon(true);\r\n          }}\r\n        />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ height:\"100%\"}} >\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchasereturnarr.purchase_medicines &&\r\n            props.purchasereturnarr.purchase_medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchasereturnarr.purchase_medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? Number(item.SGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? Number(item.CGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? Number(item.IGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <p className=\" text-charcoal fw-bold text-center\">\r\n                  No Medicines Found\r\n                </p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{ height:\"100%\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className={`border p-0 m-0 px-1`}\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchasereturnarr.purchase_vaccines &&\r\n            props.purchasereturnarr.purchase_vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchasereturnarr.purchase_vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.vaccine && item.vaccine.name !== null\r\n                      ? item.vaccine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? item.SGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? item.SGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? item.CGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.CGST ? item.CGST : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST_rate ? item.IGST_rate : \"N/A\"} </td>\r\n                  <td className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.IGST ? item.IGST : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxPercent( item.CGST_rate, item.SGST_rate, item.IGST_rate )} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {TotalTaxRate(item.CGST, item.SGST, item.IGST)} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.cost ? item.cost : \"N/A\"} </td>\r\n                  <td className=\"border p-0 m-0 align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <p className=\" text-center fw-bold\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction NewPurchaseReturnentryform(props) {\r\n  const url = useContext(URL);\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  const ClinicList = useContext(Clinic);\r\n  const medicinesref = useRef(null);\r\n  const vendorsref = useRef(null);\r\n\r\n  const [vendorname, setvendorname] = useState();\r\n  const [vendorid, setvendorid] = useState();\r\n  const [loadvendors, setloadvendors] = useState();\r\n  const [vendorsearch, setvendorsearch] = useState([\"\"]);\r\n  const [itemsearch, setitemsearch] = useState([\"\"]);\r\n  const [itemname, setitemname] = useState();\r\n  const [loadsearch, setloadsearch] = useState();\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([]);\r\n  const [load, setload] = useState();\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0;\r\n      costing = Number(cost) * Number(qtytotreturn);\r\n      return costing.toFixed(2);\r\n    } else {\r\n      return costing;\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.cost,\r\n      totalcost: 0,\r\n      currentstock: data.current_stock,\r\n      qtytoReturn: 0,\r\n    };\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj]);\r\n    } else {\r\n      setMedicineentriesArr((prevState) => [...prevState, MedicineentriesObj]);\r\n    }\r\n  }\r\n  const searchmeds = async () => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios\r\n        .get(\r\n          `${url}/purchase/item/search/by/id?item=${itemname}&distributor_id=${vendorid}`\r\n        )\r\n        .then((response) => {\r\n          setitemsearch([response.data.data]);\r\n          setloadsearch(false);\r\n          if (itemname.length >= 1) {\r\n            medicinesref.current.style.display = \"block\";\r\n          } else {\r\n            medicinesref.current.style.display = \"none\";\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            Notiflix.Notify.failure(error.response.data);\r\n            Notiflix.Notify.failure(error.response.status);\r\n            Notiflix.Notify.failure(error.response.headers);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  };\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true);\r\n    try {\r\n      await axios\r\n        .get(`${url}/kyc/list?limit=10&offset=0&search=${search}`)\r\n        .then((response) => {\r\n          setvendorsearch(response.data.data);\r\n          setloadvendors(false);\r\n          if (search.length > 1) {\r\n            vendorsref.current.style.display = \"block\";\r\n          } else {\r\n            vendorsref.current.style.display = \"none\";\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            Notiflix.Notify.failure(error.response.data);\r\n            Notiflix.Notify.failure(error.response.status);\r\n            Notiflix.Notify.failure(error.response.headers);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  };\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = [];\r\n    let Totalamount = [];\r\n    let quantity = [];\r\n\r\n    let grosstotal = 0;\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(\r\n        MedicineentriesArr[i].Itemid\r\n          ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}`\r\n          : \"\"\r\n      );\r\n      Totalamount.push(\r\n        MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : \"\"\r\n      );\r\n      quantity.push(\r\n        MedicineentriesArr[i].qtytoReturn\r\n          ? MedicineentriesArr[i].qtytoReturn\r\n          : \"\"\r\n      );\r\n    }\r\n\r\n    Totalamount.forEach((item) => {\r\n      grosstotal += Number(item);\r\n    });\r\n\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal,\r\n    };\r\n   \r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/purchase/return/save`, Data).then((response) => {\r\n        props.GETPurchaseReturns();\r\n        setMedicineentriesArr();\r\n        setvendorname();\r\n        setvendorid();\r\n        setitemname();\r\n        setload(false);\r\n        props.toggle_nref();\r\n        if (response.data.status == true) {\r\n          Notiflix.Notify.success(response.data.message);\r\n        } else {\r\n          Notiflix.Notify.warning(response.data.message);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n\r\n    }\r\n  };\r\n  function confirmmessage() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Purchase ${MedicineentriesArr.length <= 1 ? \"Return \" : \"Returns\"\r\n      } of Distributor ${vendorname}  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveReturnEntry();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = [];\r\n    obj.push(\r\n      MedicineentriesArr.filter(function (e) {\r\n        return e.Itemid !== id;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setMedicineentriesArr(obj);\r\n  }\r\n  function Grand() {\r\n    let c = 0;\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (c += Number(data.totalcost)));\r\n    }\r\n    return c;\r\n  }\r\n  return (\r\n    <div className=\"newpurchaseentryform p-0 m-0\">\r\n        <div className=\" p-0 m-0 shadow-sm  position-relative  \">\r\n          <h5 className=\"text-center fw-bold text-charcoal py-2\"> New Purchase Return Entry </h5>\r\n          <button type=\"button\" className=\"btn-close position-absolute top-0 end-0 closebtn me-2 pt-2\" onClick={props.toggle_nref} aria-label=\"Close\" ></button>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 pt-2 justify-content-center\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Distributor</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder=\"Search Vendors\" value={vendorname ? vendorname : \"\"} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setMedicineentriesArr([]); }} />\r\n              <div ref={vendorsref} className=\"position-absolute ms-2 rounded-1 bg-pearl col-2\" style={{ display: \"none\", zIndex: \"1\" }} >\r\n                {\r\n                vendorsearch ? (\r\n                  loadvendors ? (\r\n                    <div className=\"rounded-1 p-1\">\r\n                      Searching Please wait....\r\n                      <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                        <span className=\"sr-only\"> </span>\r\n                      </div>\r\n                    </div>\r\n                  ) : vendorsearch.length == 0 ? (\r\n                    <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                      Oops! Not Avaliable\r\n                    </div>\r\n                  ) : (\r\n                    vendorsearch.map((data, i) => (\r\n                      <div\r\n                        style={{ cursor: \"pointer\" }}\r\n                        className={`p-0 p-1  bg-${i % 2 == 0 ? \"pearl\" : \"lightblue\"\r\n                          } fs-6 `}\r\n                        name={data.id}\r\n                        onClick={(e) => {\r\n                          setvendorname(data.entity_name);\r\n                          setvendorid(data.id);\r\n                          vendorsref.current.style.display = \"none\";\r\n                        }}\r\n                      >\r\n                        {data.entity_name}\r\n                      </div>\r\n                    ))\r\n                  )\r\n                ) : (\r\n                  <div className=\"bg-seashell\"></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className=\"position-relative\">\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input\r\n                  className=\"form-control bg-seashell\"\r\n                  placeholder=\"Product Id\"\r\n                  value={itemname ? itemname : \"\"}\r\n                  onChange={(e) => {\r\n                    vendorid\r\n                      ? setitemname(e.target.value)\r\n                      : Notiflix.Notify.failure(\"Please Add Vendor First\");\r\n                  }}\r\n                />\r\n                <div\r\n                  ref={medicinesref}\r\n                  className=\"position-absolute rounded-1 bg-pearl col-12\"\r\n                  style={{ zIndex: \"1\" }}\r\n                >\r\n                  {itemsearch ? (\r\n                    loadsearch ? (\r\n                      <div className=\"rounded-1 p-1\">\r\n                        Searching Please wait....\r\n                        <div\r\n                          className=\"spinner-border my-auto\"\r\n                          style={{ width: \"1rem\", height: \"1rem\" }}\r\n                          role=\"status\"\r\n                        >\r\n                          <span className=\"sr-only\"> </span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    ) : itemsearch.length == 0 ? (\r\n                      <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                        Oops! Not Avaliable\r\n                      </div>\r\n                    ) : (\r\n                      itemsearch.map((data, i) => (\r\n                        <div\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={`p-0 ps-1 shadow bg-${i % 2 == 0 ? \"pearl\" : \"lightyellow\"\r\n                            } fs-6 `}\r\n                          name={data.id}\r\n                          onClick={(e) => {\r\n                            setitemname(data.item_name);\r\n                            InsertMedicines(data);\r\n                            medicinesref.current.style.display = \"none\";\r\n                          }}\r\n                        >\r\n                          {data.item_name}\r\n                        </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <div className=\"bg-seashell\"></div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className=\"p-0 m-0 btn\" onClick={searchmeds}>\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"images/search.png\"}\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-3 scroll scroll-y\" style={{ Height: \"65vh\" }} >\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead style={{ color: \"gray\", fontWeight: \"600\" }}>\r\n                <tr>\r\n                  <th className=\"px-2\">Item ID</th>\r\n                  <th className=\"px-2\">Item Name</th>\r\n                  <th className=\"px-2\">batch No.</th>\r\n                  <th className=\"px-2\">Expiry Date</th>\r\n                  <th className=\"px-2\">Avl. Stock</th>\r\n                  <th className=\"px-2\">Qty to Return</th>\r\n                  <th className=\"px-2\">Purchase Rate/Unit</th>\r\n                  <th className=\"px-2\">Purchase Rate</th>\r\n                  <th className=\"px-2\">Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n              MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                <tbody style={{ maxHeight: \"65vh\", minHeight: \"65vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                  {\r\n                  MedicineentriesArr.map((item, _key) => (\r\n                    <tr key={_key} className=\"\">\r\n                      <td>{item.Itemid}</td>\r\n                      <td>{item.Item}</td>\r\n                      <td>{item.batchno}</td>\r\n                      <td>{reversefunction(item.expirydate)}</td>\r\n                      <td>{item.currentstock}</td>\r\n                      <td className=\"p-0 m-0\" style={{ width: \"0px\", height: \"0px\" }} >\r\n                        <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2\" value={item.qtytoReturn ? item.qtytoReturn : \"\"} onChange={(e) => { e.target.value <= item.currentstock ? (item.qtytoReturn = e.target.value) : Notiflix.Notify.failure( \"Quantity Cannot be Greater then Current Stock Available\" ); item.totalcost = CalculateCost( item.cost, item.currentstock, e.target.value ); setMedicineentriesArr((prevState) => [ ...prevState, ]); }} />\r\n                      </td>\r\n                      <td>{item.cost}</td>\r\n                      <td>{item.totalcost}</td>\r\n                      <td><button onClick={() => { DeleteMedicine(item.Itemid); }} className=\"btn btn-sm button-burntumber\" > Delete </button> </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=\"position-relative\" style={{ height: \"65vh\", maxHeight: \"65vh\", color: \"var(--charcoal)\", fontWeight: \"600\", }} >\r\n                  <tr>\r\n                    <td className=\"position-absolute start-0 end-0 top-0\">\r\n                      No items Added\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ) }\r\n            </table>\r\n          </div>\r\n        </div>\r\n      <div className=\"col-12 position-absolute start-0 end-0 bottom-0 rounded-bottom text-center bg-pearl align-items-center border border-1 py-3\">\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row\">\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> Order Total </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\"> {Grand()} </h4>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> Total Items </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {MedicineentriesArr ? MedicineentriesArr.length : 0}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 mx-auto align-self-center text-end\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Save Return </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------Stock Info---------------------------------------------------------\r\nfunction Stocksection() {\r\n  let menu = [\"Vaccines\", \"Medicines\"];\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const [stockname,setstockname] = useState('Vaccines')\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return (\r\n        <div className=\"\">\r\n          <Stockvaccinesection />\r\n        </div>\r\n      );\r\n    }\r\n    if (_menu === 1) {\r\n      return (\r\n        <div className=\"\">\r\n          <Stockmedicinesection />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };  \r\n  return (\r\n    <>\r\n      <section className=\"stocksection pt-1\">\r\n        <div className=\"container-fluid mt-2\">\r\n          <div className=\"row gx-3\">\r\n            <div className=\"row m-0 p-0\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  {stockname?stockname:'Stock Type'} \r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                  {\r\n                    menu.map((e, i) => (\r\n                      <li className={`dropdown-item text-${i === menuindex ? \"light\" : \"dark\"} fw-bold bg-${i === menuindex ? \"charcoal\" : \"seashell\"}`} onClick={(a) => {setmenuindex(i);setstockname(e)}} > {e} </li>\r\n                    )\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div>\r\n\r\n            </div>    \r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid p-0 m-0 pt-3\">\r\n          <div className=\"\">{_selectedmenu(menuindex)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction Stockvaccinesection() {\r\n  const clinicID = localStorage.getItem(\"ClinicId\");\r\n  const url = useContext(URL);\r\n  const Todaydate = useContext(TodayDate);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [vaccineslist, setvaccineslist] = useState([]);\r\n  const [vaccinearr, setvaccinearr] = useState([]);\r\n  const [load, setload] = useState();\r\n  const [searchname, setsearchname] = useState(\"\");\r\n  const [index, setindex] = useState();\r\n  const [detailsform, setdetailsform] = useState(\"none\")\r\n  \r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(`${url}/stock/list?search=${searchname}&location_id=${clinicID}&limit=10&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count_vaccines);\r\n          setpages(\r\n            Math.round(response.data.data.total_count_vaccines / 10) + 1\r\n          );\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const GetVaccines = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        axios\r\n          .get(`${url}/stock/list?search=${searchname}&location_id=${clinicID}&limit=10&offset=0`)\r\n          .then((response) => {\r\n            setvaccineslist(response.data.data.vaccines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        axios.get( `${url}/stock/list?search=${searchname}&location_id=${clinicID}&limit=10&offset=${Data.selected * 10 }` )\r\n          .then((response) => {\r\n            setvaccineslist(response.data.data.vaccines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const Get_Detailed_Data = async () => {\r\n    setvaccinearr([]);\r\n    for (let i = 0; i < vaccineslist.length; i++) {\r\n      let totalcurrentstockarr = [];\r\n      if (vaccineslist[i].stock_info.length == 0) {\r\n        let vaccineobj = {\r\n          id: vaccineslist[i].id,\r\n          name: vaccineslist[i].name,\r\n          manufacturer: vaccineslist[i].manufacturer,\r\n          max_stock_count: vaccineslist[i].max_stock_count,\r\n          alert_stock_count: vaccineslist[i].alert_stock_count,\r\n          min_stock_count: vaccineslist[i].min_stock_count,\r\n        }\r\n        if (vaccinearr == undefined && vaccinearr.length == 0) {\r\n          setvaccinearr(vaccineobj);\r\n        } else {\r\n          setvaccinearr((prevState) => [...prevState, vaccineobj]);\r\n        }\r\n      } else {\r\n        for (let j = 0; j < vaccineslist[i].stock_info.length; j++) {\r\n          totalcurrentstockarr.push(\r\n            vaccineslist[i].stock_info[j].current_stock\r\n          );\r\n          let ExpireDays = Get_Diff(vaccineslist[i].stock_info[j].expiry_date);\r\n          let vaccineobj = {\r\n            id: vaccineslist[i].id,\r\n            name: vaccineslist[i].name,\r\n            manufacturer: vaccineslist[i].manufacturer,\r\n            max_stock_count: vaccineslist[i].max_stock_count,\r\n            alert_stock_count: vaccineslist[i].alert_stock_count,\r\n            min_stock_count: vaccineslist[i].min_stock_count,\r\n            CGST: vaccineslist[i].stock_info[j].CGST,\r\n            CGST_rate: vaccineslist[i].stock_info[j].CGST_rate,\r\n            IGST: vaccineslist[i].stock_info[j].IGST,\r\n            IGST_rate: vaccineslist[i].stock_info[j].IGST_rate,\r\n            SGST: vaccineslist[i].stock_info[j].SGST,\r\n            SGST_rate: vaccineslist[i].stock_info[j].SGST_rate,\r\n            batch_no: vaccineslist[i].stock_info[j].batch_no,\r\n            channel: vaccineslist[i].stock_info[j].channel,\r\n            cost: vaccineslist[i].stock_info[j].cost,\r\n            current_stock: vaccineslist[i].stock_info[j].current_stock,\r\n            discount: vaccineslist[i].stock_info[j].discount,\r\n            expiry_date: vaccineslist[i].stock_info[j].expiry_date,\r\n            free_qty: vaccineslist[i].stock_info[j].free_qty,\r\n            Batch_stock_id: vaccineslist[i].stock_info[j].id,\r\n            mfd_date: vaccineslist[i].stock_info[j].mfd_date,\r\n            mrp: vaccineslist[i].stock_info[j].mrp,\r\n            purchase_entry_id: vaccineslist[i].stock_info[j].purchase_entry_id,\r\n            qty: vaccineslist[i].stock_info[j].qty,\r\n            rate: vaccineslist[i].stock_info[j].rate,\r\n            trade_discount: vaccineslist[i].stock_info[j].trade_discount,\r\n            total_amount: vaccineslist[i].stock_info[j].total_amount,\r\n            totalstock: totalcurrentstockarr,\r\n            Days_to_expire: ExpireDays,\r\n          };\r\n          if (vaccinearr == undefined && vaccinearr.length == 0) {\r\n            setvaccinearr(vaccineobj);\r\n          } else {\r\n            setvaccinearr((prevState) => [...prevState, vaccineobj]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const CalculateTStock = (totalarr) => {\r\n    if (totalarr !== undefined) {\r\n      let total = 0;\r\n      totalarr.map((item) => (total += Number(item)));\r\n      return total;\r\n    }\r\n  };\r\n\r\n  const GetStatus = (totalstockarr, alertstockcount) => {\r\n    if (totalstockarr !== undefined) {\r\n      let total = 0;\r\n      totalstockarr.map((item) => (total += Number(item)));\r\n\r\n      if (total <= alertstockcount) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == \"none\") {\r\n      setdetailsform(\"block\");\r\n    }\r\n    if (detailsform === \"block\") {\r\n      setdetailsform(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const reversefunction2 = (date) => {\r\n    if (date) {\r\n      let newdate = [];\r\n      let DATE = \"\";\r\n      date = date.split(\"-\").reverse();\r\n      newdate.push(date[1]);\r\n      newdate.push(date[0]);\r\n      newdate.push(date[2]);\r\n      DATE = newdate[0] + \"/\" + newdate[1] + \"/\" + newdate[2];\r\n      return DATE;\r\n    }\r\n  };\r\n  const Get_Diff = (expiry) => {\r\n    // let currentdate = reversefunction(Todaydate).replaceAll('-', '/')\r\n    let expirydate = reversefunction2(expiry);\r\n    var date1 = new Date();\r\n    var date2 = new Date(expirydate);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    let diffDays = Math.ceil(Number(diffTime) / (1000 * 60 * 60 * 24));\r\n    let diffMonths = (Number(diffDays) / 30).toFixed(0);\r\n    let diffremainDays = Number(diffDays)%30\r\n    return `${diffMonths} ${diffMonths > 1 ?\"Months\":'Month'} ${diffremainDays} ${diffremainDays > 1 ? 'Days':'Day'}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetPages();\r\n    GetVaccines();\r\n    Get_Detailed_Data();\r\n  }, [pagecount, searchname]);\r\n  // Do_Pagination()\r\n  useEffect(() => {\r\n    Get_Detailed_Data();\r\n  }, [vaccineslist]);\r\n  return (\r\n    <div className=\"p-0 m-0 vaccinestockinfo\">\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className=\"position-absolute searchbutton\">\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Vaccine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn searchbtn p-0 m-0 bg-transparent border-0 position-absolute\"> <img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0\" style={{width:'1.5rem',marginTop:'0.05rem'}} /> </button>\r\n      </div>\r\n      <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Vaccine Stocks Info\" : \"Vaccine Stock Info\"}{\" \"} </h2>\r\n\r\n      <div className=\"heading text-start text-charcoal p-lg-2 p-md-2 p-2 ms-lg-5 ms-md-3 ms-1 fw-bold\">\r\n        \r\n      </div>\r\n      <div className=\"scroll scroll-y\">\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr className=\"text-start\">\r\n              <th className=\"text-charcoal75 fw-bold\">ID</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Vaccine Name</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Batch No.</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Expiry Date</th>\r\n              <th className=\"text-charcoal75 fw-bold\">MRP</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Cost/Unit</th>\r\n              <th className=\"text-charcoal75 fw-bold\">B.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold\">T.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"> Expired in </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"> Stock Status </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"></th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">more info</th>\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n                     <tbody\r\n                     className=\"text-center\"\r\n                     style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                   >\r\n                     <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                       <div class=\"d-flex align-items-center spinner\">\r\n                         <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                           Getting Details please be Patient ...\r\n                         </strong>\r\n                         <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                       </div>\r\n                     </tr>\r\n                   </tbody>\r\n          ) : vaccinearr == undefined || vaccinearr.length == 0 ? (\r\n            <tbody className=\"text-center\">\r\n              <tr>\r\n                <td className=\"position-absolute text-charcoal fw-bolder start-0 end-0 text-center\"> No Vaccines Found </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {\r\n              vaccinearr.map((data, i) => (\r\n                <tr className={`text-start align-middle`}>\r\n                  <td className=\" text-charcoal fw-bold\"> v{data.Batch_stock_id} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.name && data.name !== null ? data.name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.batch_no}</td>\r\n                  <td className=\" text-charcoal fw-bold\"> {reversefunction(data.expiry_date)} </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.mrp}</td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.cost}</td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.current_stock} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {CalculateTStock(data.totalstock)} </td>\r\n                  <td className={`text-${data.Days_to_expire <= 2 ? \"burntumber\" : \"charcoal\" } fw-bold text-center`} > {data.Days_to_expire} </td>\r\n                  <td className=\" text-charcoal fw-bold text-center\"> {GetStatus(data.totalstock, data.alert_stock_count) == 1 ? ( <img src={process.env.PUBLIC_URL + \"images/exclamation.png\"} /> ) : ( <></> )} </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold align-items-center text-center \"> <div className=\"vr rounded-1 align-self-center\" style={{ padding: \"0.8px\" }} ></div> </td>\r\n                  <td className={` bg-${index == i ? \"lightyellow\" : \"\" } p-0 m-0 text-charcoal fw-bold text-center`} >\r\n                    <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_detailsform(); }} > <img src={process.env.PUBLIC_URL + \"images/info.png\"} /> </button>\r\n                  </td>\r\n                  {\r\n                  index == i ? (\r\n                    <td className={`stockdetailsfrom bg-white border border-1 col-lg-11 rounded-4 shadow p-0 col-md-11 col-sm-11 col-10 col-xl-6 d-${index == i ? detailsform : \"none\" } position-absolute start-0 end-0 top-0`} >\r\n                      <VaccinesectionItemDetails\r\n                        toggle_detailsform={toggle_detailsform}\r\n                        data={vaccinearr[i]}\r\n                      />\r\n                    </td>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                  }\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\". . .\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GetVaccines}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Stockmedicinesection() {\r\n  const clinicID = localStorage.getItem(\"ClinicId\");\r\n  const url = useContext(URL);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [medicineslist, setmedicineslist] = useState([]);\r\n  const [medicinearr, setmedicinearr] = useState([]);\r\n  const [load, setload] = useState();\r\n  const [searchname, setsearchname] = useState(\"\");\r\n  const [index, setindex] = useState();\r\n  const [detailsform, setdetailsform] = useState(\"none\");\r\n\r\n  function GetPages() {       \r\n    try {\r\n      axios\r\n        .get(`${url}/stock/list?search=${searchname}&location_id=${clinicID}&limit=25&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count_medicines);\r\n          setpages( Math.round(response.data.data.total_count_medicines / 25) + 1 );\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const GetMedicines = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        axios\r\n          .get(`${url}/stock/list?search=${searchname}&location_id=${clinicID}&limit=25&offset=0`)\r\n          .then((response) => {\r\n            setmedicineslist(response.data.data.medicines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&location_id=${clinicID}&limit=10&offset=${Data.selected * 25}`)\r\n          .then((response) => {\r\n            setmedicineslist(response.data.data.medicines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n  const Get_Detailed_Data = async () => {\r\n    setmedicinearr([]);\r\n    for (let i = 0; i < medicineslist.length; i++) {\r\n      let totalcurrentstockarr = [];\r\n      if (medicineslist[i].stock_info.length == 0) {\r\n        let medicineobj = {\r\n          id: medicineslist[i].id ? medicineslist[i].id : \"\", \r\n          name: medicineslist[i].name ? medicineslist[i].name : \"\",\r\n          manufacturer: medicineslist[i].manufacturer ? medicineslist[i].manufacturer : \"\",\r\n          max_stock_count: medicineslist[i].max_stock_count ? medicineslist[i].max_stock_count : \"\",\r\n          alert_stock_count: medicineslist[i].alert_stock_count ? medicineslist[i].alert_stock_count : \"\",\r\n          min_stock_count: medicineslist[i].min_stock_count ? medicineslist[i].min_stock_count : \"\",\r\n        };\r\n        if (medicinearr == undefined && medicinearr.length == 0) {\r\n          setmedicinearr(medicineobj);\r\n        } else {\r\n          setmedicinearr((prevState) => [...prevState, medicineobj]);\r\n        }\r\n      } else {\r\n        for (let j = 0; j < medicineslist[i].stock_info.length; j++) {\r\n          let ExpireDays = \"\";\r\n          if (medicineslist[i].stock_info[j].current_stock) {\r\n            totalcurrentstockarr.push(\r\n              medicineslist[i].stock_info[j].current_stock\r\n            );\r\n          } else {\r\n            totalcurrentstockarr = [];\r\n          }\r\n          ExpireDays = Get_Diff(medicineslist[i].stock_info[j].expiry_date);\r\n\r\n          let medicineobj = {\r\n            id: medicineslist[i].id ? medicineslist[i].id : \"\",\r\n            name: medicineslist[i].name ? medicineslist[i].name : \"\",\r\n            manufacturer: medicineslist[i].manufacturer ? medicineslist[i].manufacturer : \"\",\r\n            max_stock_count: medicineslist[i].max_stock_count ? medicineslist[i].max_stock_count : \"\",\r\n            alert_stock_count: medicineslist[i].alert_stock_count ? medicineslist[i].alert_stock_count : \"\",\r\n            min_stock_count: medicineslist[i].min_stock_count ? medicineslist[i].min_stock_count : \"\",\r\n            CGST: medicineslist[i].stock_info[j].CGST ? medicineslist[i].stock_info[j].CGST : \"\",\r\n            CGST_rate: medicineslist[i].stock_info[j].CGST_rate ? medicineslist[i].stock_info[j].CGST_rate : \"\",\r\n            IGST: medicineslist[i].stock_info[j].IGST ? medicineslist[i].stock_info[j].IGST : \"\",\r\n            IGST_rate: medicineslist[i].stock_info[j].IGST_rate ? medicineslist[i].stock_info[j].IGST_rate : \"\",\r\n            SGST: medicineslist[i].stock_info[j].SGST ? medicineslist[i].stock_info[j].SGST : \"\",\r\n            SGST_rate: medicineslist[i].stock_info[j].SGST_rate ? medicineslist[i].stock_info[j].SGST_rate : \"\",\r\n            batch_no: medicineslist[i].stock_info[j].batch_no ? medicineslist[i].stock_info[j].batch_no : \"\",\r\n            channel: medicineslist[i].stock_info[j].channel ? medicineslist[i].stock_info[j].channel : \"\",\r\n            cost: medicineslist[i].stock_info[j].cost ? medicineslist[i].stock_info[j].cost : \"\",\r\n            current_stock: medicineslist[i].stock_info[j].current_stock ? medicineslist[i].stock_info[j].current_stock : \"\",\r\n            discount: medicineslist[i].stock_info[j].discount ? medicineslist[i].stock_info[j].discount : \"\",\r\n            expiry_date: medicineslist[i].stock_info[j].expiry_date ? medicineslist[i].stock_info[j].expiry_date : \"\",\r\n            free_qty: medicineslist[i].stock_info[j].free_qty ? medicineslist[i].stock_info[j].free_qty : \"\",\r\n            Batch_stock_id: medicineslist[i].stock_info[j].id ? medicineslist[i].stock_info[j].id : \"\",\r\n            mfd_date: medicineslist[i].stock_info[j].mfd_date ? medicineslist[i].stock_info[j].mfd_date : \"\",\r\n            mrp: medicineslist[i].stock_info[j].mrp ? medicineslist[i].stock_info[j].mrp : \"\",\r\n            purchase_entry_id: medicineslist[i].stock_info[j].purchase_entry_id ? medicineslist[i].stock_info[j].purchase_entry_id : \"\",\r\n            qty: medicineslist[i].stock_info[j].qty ? medicineslist[i].stock_info[j].qty : \"\",\r\n            rate: medicineslist[i].stock_info[j].rate ? medicineslist[i].stock_info[j].rate : \"\",\r\n            trade_discount: medicineslist[i].stock_info[j].trade_discount ? medicineslist[i].stock_info[j].trade_discount : \"\",\r\n            total_amount: medicineslist[i].stock_info[j].total_amount ? medicineslist[i].stock_info[j].total_amount : \"\",\r\n            totalstock: totalcurrentstockarr ? totalcurrentstockarr : \"\",\r\n            Days_to_expire: ExpireDays ? ExpireDays : \"\",\r\n          };\r\n          if (medicinearr == undefined && medicinearr.length == 0) {\r\n            setmedicinearr(medicineobj);\r\n          } else {\r\n            setmedicinearr((prevState) => [...prevState, medicineobj]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const reversefunction2 = (date) => {\r\n    if (date) {\r\n      let newdate = [];\r\n      let DATE = \"\";\r\n      date = date.split(\"-\").reverse();\r\n      newdate.push(date[1]);\r\n      newdate.push(date[0]);\r\n      newdate.push(date[2]);\r\n      DATE = newdate[0] + \"/\" + newdate[1] + \"/\" + newdate[2];\r\n      return DATE;\r\n    }\r\n  };\r\n  const Get_Diff = (expiry) => {\r\n    // let currentdate = reversefunction(Todaydate).replaceAll('-', '/')\r\n    let expirydate = reversefunction2(expiry);\r\n    var date1 = new Date();\r\n    var date2 = new Date(expirydate);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    let diffDays = Math.ceil(Number(diffTime) / (1000 * 60 * 60 * 24));\r\n    let diffMonths = (Number(diffDays) / 30).toFixed(0);\r\n    let diffremainDays = Number(diffDays)%30\r\n    return `${diffMonths} ${diffMonths > 1 ?\"Months\":'Month'} ${diffremainDays} ${diffremainDays > 1 ? 'Days':'Day'}`;\r\n  };\r\n  const GetStatus = (totalstockarr, alertstockcount) => {\r\n    if (totalstockarr && alertstockcount) {\r\n      let total = 0;\r\n      totalstockarr.map((item) => (total += Number(item)));\r\n\r\n      if (total <= alertstockcount) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n  const CalculateTStock = (totalarr) => {\r\n    let total = 0;\r\n    totalarr.map((item) => (total += Number(item)));\r\n    return total;\r\n  };\r\n  useEffect(() => {\r\n    GetPages();\r\n    GetMedicines();\r\n    Get_Detailed_Data();\r\n  }, [pagecount, searchname]);\r\n\r\n  useEffect(() => {\r\n    Get_Detailed_Data();\r\n  }, [medicineslist]);\r\n\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == \"none\") {\r\n      setdetailsform(\"block\");\r\n    }\r\n    if (detailsform === \"block\") {\r\n      setdetailsform(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"p-0 m-0 vaccinestockinfo\">\r\n      <div className=\"position-absolute searchbutton\" style={{ top: \"0.25rem\", right: \"1rem\" }} >\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Medicine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn searchbtn p-0 m-0 bg-transparent border-0 position-absolute\">\r\n          <img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0\" style={{width:'1.5rem',marginTop:'0.05rem'}} />\r\n        </button>\r\n      </div>\r\n      <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Medicine Stocks Info\" : \"Medicine Stock Info\"}{\" \"} </h2>\r\n\r\n      <div className=\"scroll scroll-y p-0 m-0\">\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr>\r\n       \r\n              <th className=\"text-charcoal75 fw-bold\">ID</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Medicine Name</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Batch No.</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Expiry Date</th>\r\n              <th className=\"text-charcoal75 fw-bold\">MRP</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Cost/Unit</th>\r\n              <th className=\"text-charcoal75 fw-bold\">B.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold\">T.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"> Expired in </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"> Stock Status </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"></th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">more info</th>\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n            <tbody\r\n            className=\"text-center\"\r\n            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n          >\r\n            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n              <div class=\"d-flex align-items-center spinner\">\r\n                <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                  Getting Details please be Patient ...\r\n                </strong>\r\n                <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n          ) : medicinearr == undefined || medicinearr.length == 0 ? (\r\n            <tbody className=\"\">\r\n              <tr>\r\n                <td className=\"position-absolute w-100 text-charcoal fw-bolder start-0 end-0 text-center\">\r\n                  No Medicines Found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {medicinearr.map((data, i) => (\r\n                <tr className={`text-start align-middle`}>\r\n         \r\n                  <td className=\" text-charcoal fw-bold\"> m{data.Batch_stock_id} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.name && data.name !== null ? data.name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.batch_no}</td>\r\n                  <td className=\" text-charcoal fw-bold\"> {reversefunction(data.expiry_date)} </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.mrp}</td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.cost}</td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.current_stock} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.totalstock ? CalculateTStock(data.totalstock) : \"\"} </td>\r\n                  <td className={`text-${data.Days_to_expire ? data.Days_to_expire : \"\" <= 2 ? \"burntumber\" : \"charcoal\" } fw-bold text-center`} > {data.Days_to_expire ? data.Days_to_expire : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold text-center\"> {GetStatus(data.totalstock, data.alert_stock_count) == 1 ? ( <img src={process.env.PUBLIC_URL + \"images/exclamation.png\"} /> ) : ( <></> )} </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold align-items-center text-center \"> <div className=\"vr rounded-1 align-self-center\" style={{ padding: \"0.8px\" }} ></div> </td>\r\n                  <td className={` bg-${index == i ? \"lightyellow\" : \"\" } p-0 m-0 text-charcoal fw-bold text-center`} > <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_detailsform(); }} > <img src={process.env.PUBLIC_URL + \"images/info.png\"} /> </button> </td>\r\n                  {index == i ? (\r\n                    <td className={`stockdetailsfrom bg-white border border-1 col-lg-11 rounded-4 shadow p-0 col-md-11 col-sm-11 col-10 col-xl-6 d-${index == i ? detailsform : \"none\" } position-absolute start-0 end-0 top-0`} >\r\n                      <MedicinesectionItemDetails\r\n                        toggle_detailsform={toggle_detailsform}\r\n                        data={medicinearr[i]}\r\n                      />\r\n                    </td>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GetMedicines}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction VaccinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\" p-0 m-0 position-relative bg-seashell rounded-4\">\r\n      <h6 className=\"text-center text-charcoal fw-bold pt-2\">\r\n        {props.data.name}\r\n      </h6>\r\n      <hr className=\"p-0 m-0\" />\r\n      <button\r\n        className=\"btn-close position-absolute end-0 top-0 p-1 m-1\"\r\n        onClick={props.toggle_detailsform}\r\n      ></button>\r\n\r\n      <div className=\"p-0 m-0 scroll py-4\">\r\n        <table className=\"table text-center scroll\">\r\n          <thead>\r\n            <tr>\r\n              <th>Channel</th>\r\n              <th>Expiry</th>\r\n              <th>Qty</th>\r\n              <th>MRP</th>\r\n              <th>Disc%</th>\r\n              <th>Rate</th>\r\n              <th className=\"bg-seashell\">CGST</th>\r\n              <th className=\"bg-seashell\">CGST%</th>\r\n              <th className=\"bg-seashell\">SGST</th>\r\n              <th className=\"bg-seashell\">SGST%</th>\r\n              <th className=\"bg-seashell\">IGST</th>\r\n              <th className=\"bg-seashell\">IGST%</th>\r\n              <th>Cost</th>\r\n\r\n              <th>Total Amt.</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"p-0 m-0 px-1\">\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.channel == 1 ? \"Pharmacy\" : \"Clinic\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.expiry_date\r\n                  ? reversefunction(props.data.expiry_date)\r\n                  : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.qty ? props.data.qty : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.mrp ? props.data.mrp : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.discount && props.data.trade_discount\r\n                  ? Number(props.data.discount) +\r\n                  Number(props.data.trade_discount)\r\n                  : props.data.discount\r\n                    ? props.data.discount\r\n                    : props.data.trade_discount}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.rate ? props.data.rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.CGST ? props.data.CGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.CGST ? props.data.CGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.SGST ? props.data.SGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.SGST_rate ? props.data.SGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.IGST ? props.data.IGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.IGST_rate ? props.data.IGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.cost ? props.data.cost : \"\"}\r\n              </td>\r\n\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.total_amount ? props.data.total_amount : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction MedicinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\" p-0 m-0 position-relative bg-seashell rounded-4\">\r\n      <h6 className=\"text-center text-charcoal fw-bold pt-2\">\r\n        {props.data.name}\r\n      </h6>\r\n      <hr className=\"p-0 m-0\" />\r\n      <button\r\n        className=\"btn-close position-absolute end-0 top-0 p-1 m-1 me-2\"\r\n        onClick={props.toggle_detailsform}\r\n      ></button>\r\n      <div className=\"p-0 m-0 scroll\">\r\n        <table className=\"table text-center scroll\">\r\n          <thead>\r\n            <tr>\r\n              <th>Channel</th>\r\n              <th>Manuf.</th>\r\n              <th>Expiry</th>\r\n              <th>MRP</th>\r\n              <th>Disc%</th>\r\n              <th>Rate</th>\r\n              <th>CGST%</th>\r\n              <th>CGST</th>\r\n              <th>SGST%</th>\r\n              <th>SGST</th>\r\n              <th>IGST%</th>\r\n              <th>IGST</th>\r\n              <th>Cost</th>\r\n              <th>Qty</th>\r\n              <th>Total Amt.</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"p-0 m-0 px-1\">\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.channel == 1 ? \"Pharmacy\" : \"Clinic\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.mfd_date\r\n                  ? reversefunction(props.data.mfd_date)\r\n                  : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.expiry_date\r\n                  ? reversefunction(props.data.expiry_date)\r\n                  : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.mrp ? props.data.mrp : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.discount && props.data.trade_discount\r\n                  ? Number(props.data.discount) +\r\n                  Number(props.data.trade_discount)\r\n                  : props.data.discount\r\n                    ? props.data.discount\r\n                    : props.data.trade_discount}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.rate ? props.data.rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.CGST ? props.data.CGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.CGST ? props.data.CGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.SGST ? props.data.SGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.SGST_rate ? props.data.SGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.IGST ? props.data.IGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.IGST_rate ? props.data.IGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.cost ? props.data.cost : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.qty ? props.data.qty : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.total_amount ? props.data.total_amount : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//-------------------------------------------------------------------------Lists--------------------------------------------------------------\r\nfunction Listsection() {\r\n  const permission = useContext(Permissions);\r\n  let menu = [\r\n    {\r\n      option: \"Vaccines\",\r\n      display: permission.vaccine_view,\r\n    },\r\n    {\r\n      option: \"Medicines\",\r\n      display: permission.medicine_view,\r\n    },\r\n  ];\r\n\r\n  const [menuindex, setmenuindex] = useState('Vaccines');\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 'Vaccines') {\r\n      return (\r\n        <div className=\"\">\r\n          <VaccineList />\r\n        </div>\r\n      );\r\n    }\r\n    if (_menu === 'Medicines') {\r\n      return (\r\n        <div className=\"\">\r\n          <MedicineList />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"stocksection pt-1\">\r\n        <div className=\"container-fluid mt-2\">\r\n          <div className=\"row gx-3\">\r\n            <div className=\"row m-0 p-0\">\r\n                  <div class=\"dropdown\">\r\n                  <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                   {menuindex?menuindex:\" List \"}\r\n                  </button>\r\n                  <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                    {\r\n                      menu.map((e, i) => (\r\n                        <li className={`dropdown-item text-${e.option === menuindex ? \"light\" : \"dark\"} fw-bold bg-${e.option === menuindex ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setmenuindex(e.option)} > {e.option} </li>\r\n                      )\r\n                      )\r\n                    }\r\n                  </ul>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid mt-lg-3 mt-md-3 mt-sm-2 mt-1 p-0\">\r\n          <div className=\"\">{_selectedmenu(menuindex)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction VaccineList() { \r\n  const url = useContext(URL);\r\n  const permission = useContext(Permissions);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [vaccines, setvaccines] = useState([]);\r\n  const [load, setload] = useState(false);\r\n  const [index, setindex] = useState();\r\n  const [NewVacc, setNewVacc] = useState(\"none\");\r\n  const [UptVacc, setUptVacc] = useState(\"none\");\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(`${url}/vaccine/brand/list?limit=20&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 20) + 1);\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const vaccinelist = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/vaccine/brand/list?limit=20&offset=0`)\r\n          .then((response) => {\r\n            setvaccines(response.data.data.vaccine_brand_list);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/vaccine/brand/list?limit=20&offset=${Data.selected * 20}`)\r\n          .then((response) => {\r\n            setvaccines(response.data.data.vaccine_brand_list);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetPages();\r\n    vaccinelist();\r\n  }, [pagecount]);\r\n  const ToggleNewVaccine = () => {\r\n    if (NewVacc == \"block\") {\r\n      setNewVacc(\"none\");\r\n    }\r\n    if (NewVacc == \"none\") {\r\n      setNewVacc(\"block\");\r\n    }\r\n  };\r\n  const ToggleUpdateVaccine = () => {\r\n    if (UptVacc == \"none\") {\r\n      setUptVacc(\"block\");\r\n    }\r\n    if (UptVacc == \"block\") {\r\n      setUptVacc(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const DeleteVaccine = async (vaccid) => {\r\n    try {\r\n      await axios.post(`${url}/vaccine/brand/delete`, { id: vaccid, })\r\n        .then((response) => {\r\n          Notiflix.Notify.success(response.data.message);\r\n          vaccinelist();\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  };\r\n  const confirmmessage = (name, vaccid) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to delete Medicine ${name}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        DeleteVaccine(vaccid);\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"position-relative\">\r\n      <div className=\"row p-0 m-0 justify-content-between align-items-center align-self-center\">\r\n        <div className=\"col-auto\">\r\n        <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Vaccines\" : \"Vaccine\"}{\" \"} </h2>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n        <div className={` p-0 m-0 align-self-center ms-1 d-${permission.vaccine_add == 1 ? \"\" : \"none\"} `} >\r\n        <button className=\"button button-charcoal m-0 p-0 py-1 px-4 me-3\" onClick={ToggleNewVaccine} >\r\n          <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} className=\"p-0 m-0 img-fluid\" alt=\"displaying_image\"/>\r\n          Vaccine\r\n        </button>\r\n      </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"scroll scroll-y p-0 m-0 overflow-scroll\" style={{ height: \"68vh\", minHeight: \"68vh\", maxHeight: \"68vh\" }} >\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr>\r\n              <th rowSpan=\"2\" className={`text-charcoal75 fw-bold d-${permission.vaccine_edit == 1 ? \"\" : \"none\"}`} > Update </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Name </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Salt Name </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> HSN Code </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Manufacturer </th>\r\n              {/* <th rowSpan=\"2\" className={`text-charcoal75 fw-bold d-${permission.vaccine_delete == 1 ? \"\" : \"none\"}`} > Delete </th> */}\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n            <tr className=\"p-0 m-0\">\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              {/* <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td> */}\r\n            </tr>\r\n          ) : vaccines == undefined || vaccines.length == 0 ? (\r\n            <tbody className=\"\">\r\n              <tr>\r\n                <td className=\"position-absolute text-charcoal text-center fw-bolder start-0 end-0\">\r\n                  No Vaccines Found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {vaccines.map((data, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle text-start`} >\r\n                  <td className={`py-0 bg-${index === i ? \"lightyellow\" : \"\"} d-${permission.vaccine_edit == 1 ? \"\" : \"none\"}`} >\r\n                    <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { ToggleUpdateVaccine(); setindex(i); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" key={i} />\r\n                    </button>\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.name && data.name !== null ? data.name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.salt_name && data.salt_name !== null ? data.salt_name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.hsn_code && data.hsn_code !== null ? data.hsn_code : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.manufacturer && data.manufacturer !== null ? data.manufacturer : \"\"} </td>\r\n                  {/* <td className={`d-${permission.vaccine_delete == 1 ? \"\" : \"none\"}`} >\r\n                    <button className=\"btn p-0 m-0\" onClick={() => { confirmmessage(data.name, data.id); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" />\r\n                    </button>\r\n                  </td> */}\r\n                  {index == i ? (\r\n                    <>\r\n                    <div className=\"backdrop\"></div>\r\n                    <td className={` text-start  d-${index == i ? UptVacc : \"none\"} border position-absolute rounded-2 start-0 end-0 top-0 mx-auto bg-seashell`} style={{ padding: 0, zIndex: \"2\",width:'60vh',height:'70vh' }} >\r\n                      <UpdateVaccine vaccinelist={vaccinelist} ToggleUpdateVaccine={ToggleUpdateVaccine} data={vaccines[i]} />\r\n                    </td>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <section className={`position-absolute border-1 shadow start-0 bg-seashell rounded-1 mx-auto end-0 d-${NewVacc}`} style={{ top: \"-4rem\", zIndex: \"2\",width:'60vh',height:'70vh' }} >\r\n        <NewVaccine ToggleNewVaccine={ToggleNewVaccine} vaccinelist={vaccinelist} />\r\n      </section>  \r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={vaccinelist}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction MedicineList() {\r\n  const url = useContext(URL);\r\n  const permission = useContext(Permissions);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [medicines, setmedicines] = useState([]);\r\n  const [load, setload] = useState(false);\r\n  const [index, setindex] = useState();\r\n  const [NewMed, setNewMed] = useState(\"none\");\r\n  const [UptMed, setUptMed] = useState(\"none\");\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(`${url}/medicine/list?limit=20&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 20) + 1);\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const medcinelist = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/medicine/list?limit=20&offset=0`)\r\n          .then((response) => {\r\n            setmedicines(response.data.data.medicine);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/medicine/list?limit=20&offset=${Data.selected * 20}`)\r\n          .then((response) => {\r\n            setmedicines(response.data.data.medicine);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetPages();\r\n    medcinelist();\r\n  }, [pagecount]);\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == \"block\") {\r\n      setNewMed(\"none\");\r\n    }\r\n    if (NewMed == \"none\") {\r\n      setNewMed(\"block\");\r\n    }\r\n  };\r\n  const ToggleUpdateMedicine = () => {\r\n    if (UptMed == \"none\") {\r\n      setUptMed(\"block\");\r\n    }\r\n    if (UptMed == \"block\") {\r\n      setUptMed(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const DeleteMedicine = async (medid) => {\r\n    try {\r\n      await axios\r\n        .post(`${url}/medicine/delete`, {\r\n          id: medid,\r\n        })\r\n        .then((response) => {\r\n          Notiflix.Notify.success(response.data.message);\r\n          medcinelist();\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  };\r\n  const confirmmessage = (name, medid) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to delete Medicine ${name}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        DeleteMedicine(medid);\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"position-relative\">\r\n        <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Medicines\" : \"Medicine\"}{\" \"} </h2>\r\n      <div className={` p-0 m-0 align-self-center ms-1 position-absolute top-0 end-0 d-${permission.medicine_add == 1 ? \"\" : \"none\"} `} >\r\n        <button className=\"button button-charcoal m-0 p-0 py-1 px-4 me-3\" onClick={ToggleNewMedicine} >\r\n          <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} className=\"p-0 m-0 img-fluid\" alt=\"displaying_image\"/>\r\n          Medicine\r\n        </button>\r\n      </div>\r\n      <div className=\"scroll scroll-y p-0 m-0 overflow-scroll\" style={{  height: \"68vh\", minHeight: \"68vh\", maxHeight: \"68vh\"  }} >\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr>\r\n              <th rowSpan=\"2\" className={`text-charcoal75 fw-bold d-${permission.medicine_edit == 1 ? \"\" : \"none\"}`} > Update </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Display Name </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Name </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Salt Name </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> HSN Code </th>\r\n              <th rowSpan=\"2\" className=\"text-charcoal75 fw-bold\"> Manufacturer </th>\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n            <tr className=\"p-0 m-0\">\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              {/* <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td> */}\r\n            </tr>\r\n          ) : medicines == undefined || medicines.length == 0 ? (\r\n            <tbody className=\"\">\r\n              <tr>\r\n                <td className=\"position-absolute text-charcoal fw-bolder start-0 end-0\">\r\n                  No Medicines Found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {medicines.map((data, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle text-start`} >\r\n                  <td className={`py-0 bg-${index === i ? \"lightyellow\" : \"\"} d-${permission.medicine_edit == 1 ? \"\" : \"none\"}`} >\r\n                    <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { ToggleUpdateMedicine(); setindex(i); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" key={i} />\r\n                    </button>\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.display_name && data.display_name !== null ? data.display_name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.name && data.name !== null ? data.name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.salt_name && data.salt_name !== null ? data.salt_name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.hsn_code && data.hsn_code !== null ? data.hsn_code : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.manufacturer && data.manufacturer !== null ? data.manufacturer : \"\"} </td>\r\n                  {/* <td className={`d-${permission.medicine_delete == 1 ? \"\" : \"none\"}`} >\r\n                    <button className=\"btn p-0 m-0\" onClick={() => { confirmmessage(data.name, data.id); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" />\r\n                    </button>\r\n                  </td> */}\r\n                  {index == i ? (\r\n                    <>\r\n                     <div className=\"backdrop\"></div>\r\n                    <td className={` text-start d-${index == i ? UptMed : \"none\"} mx-auto rounded-2 p-0 m-0 border position-absolute shadow start-0 top-0 end-0 top-0 bg-seashell`} style={{zIndex: \"2\", height:'70vh',width:'60vh' }} >\r\n                      <UpdateMedicine medcinelist={medcinelist} ToggleUpdateMedicine={ToggleUpdateMedicine} data={medicines[i]} />\r\n                    </td>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <section className={`position-absolute border-1 shadow start-0 bg-seashell rounded-2 mx-auto top-0 end-0 d-${NewMed}`} style={{  zIndex: \"2\",height:'70vh',width:'60vh' }} >\r\n        <NewMedicine ToggleNewMedicine={ToggleNewMedicine}  medcinelist={medcinelist}/>\r\n      </section>  \r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={medcinelist}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Transfersection(){\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const permission = useContext(Permissions);\r\n  const [pageindex,setpageindex] =useState(\"Transfers In\")\r\n  const [status,setstatus] =useState('')\r\n  const [statusname,setstatusname]=useState('')\r\n  const first = [\r\n    {\r\n      option: \"Transfers In\",\r\n      display: permission.purchase_entry_view,\r\n    },\r\n    {\r\n      option: \"Transfers Out\",\r\n      display: permission.purchase_return_view,\r\n    },\r\n  ]\r\n\r\n  const Selected_Screen=(_menu)=>{\r\n    if(_menu  == \"Transfers In\"){\r\n      return <TransferIn fromdate={fromdate} todate={todate} status={status}/>\r\n    }\r\n    if(_menu == \"Transfers Out\"){\r\n      return <TransferOut fromdate={fromdate} todate={todate} status={status}/>\r\n    }\r\n  }\r\nreturn(\r\n  <>\r\n  <section className=\"purchasesection\">\r\n  <div className=\"container-fluid p-0 m-0 mt-3\">\r\n    <div className=\"row p-0 m-0 mt-1 gx-3 position-relative\">\r\n    <div className=\"col-auto\">\r\n          <div class=\"dropdown\">\r\n            <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              {pageindex?pageindex:\"Transfers Type \"}\r\n            </button>\r\n            <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n              {\r\n                first.map((e, i) => (\r\n                  <li className={`dropdown-item text-${e.option === pageindex ? \"light\" : \"dark\"} fw-bold bg-${e.option === pageindex ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setpageindex(e.option)} > {e.option} </li>\r\n                )\r\n                )                                                                                                                                                           \r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n          <div className=\"dropdown\">\r\n          <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              {statusname?statusname:'All'} \r\n            </button>\r\n            <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                  <li className={`dropdown-item fw-bolder  text-${statusname == ''?'white':'charcoal'} bg-${statusname == ''?'charcoal':'seashell'}`} onClick={(a) =>{setstatus('');setstatusname('')} }>All</li>\r\n                  <li className={`dropdown-item fw-bolder text-${statusname == 'Pending'?'white':'charcoal'} bg-${statusname == 'Pending'?'charcoal':'seashell'}`} onClick={(a) =>{setstatus(0);setstatusname('Pending')} }>Pending</li>\r\n                  <li className={`dropdown-item fw-bolder text-${statusname == 'Accepted'?'white':'charcoal'} bg-${statusname == 'Accepted'?'charcoal':'seashell'}`} onClick={(a) =>{setstatus(1);setstatusname('Accepted')}}>Accepted</li>\r\n                  <li className={`dropdown-item fw-bolder text-${statusname == 'Rejected'?'white':'charcoal'} bg-${statusname == 'Rejected'?'charcoal':'seashell'}`} onClick={(a) =>{setstatus(2);setstatusname('Rejected')}}>Rejected</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      <div className=\"col-auto bg-seashell rounded-2\">\r\n          <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n            <div className=\"col-auto p-0 m-0\">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 border-0 text-charcoal text-center fw-bold \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">-</div>\r\n            <div className=\"col-auto p-0 m-0\">\r\n              <input type=\"date\" className=\" border-0 button button-seashell text-charcoal text-center fw-bold\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />                \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  </section>\r\n  <section className=\"tablesrender position-relative\">\r\n  <div className=\" p-0 mt-lg-4 mt-md-3 mt-2 me-0 ms-0\">\r\n    {Selected_Screen(pageindex)}\r\n  </div>\r\n  </section>\r\n  </>\r\n)\r\n}\r\nfunction TransferIn(props){\r\n  const currentDate = useContext(TodayDate);\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const permission = useContext(Permissions);\r\n  const url = useContext(URL);\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n      setindex()\r\n    }\r\n  }\r\n\r\n  const fromdate = props.fromdate\r\n  const todate = props.todate\r\n  const stat = props.status\r\n  const [Loading, setLoading] = useState(false);\r\n  const [transferinarr, settransferinarr] = useState([]);\r\n  const [transferinarrExcel, settransferinarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n  const [updateload, setupdateload] = useState(false);\r\n  const[updateindex,setupdateindex]=useState()\r\n  \r\n  function GetPages() {\r\n    try {\r\n      axios.get( `${url}/transfer/stocks/list?location_id=${ClinicID}&limit=25&offset=0&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // &from_date=${fromdate ? fromdate : currentDate }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}\r\n  // &from_date=${fromdate ? fromdate : currentDate }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}\r\n  // https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/transfer/stocks/list?location_id=1&limit=10&offset=0\r\n  \r\n  function GETTransferInList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios.get( `${url}/transfer/stocks/list?location_id=${ClinicID}&limit=25&offset=0&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            settransferinarr(response.data.data.transfer_stocks_recevied);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/transfer/stocks/list?location_id=${ClinicID}&limit=25&offset=${Data.selected * 25 }&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n          .then((response) => {\r\n    \r\n            setpagecount(response.data.data.total_count);\r\n            settransferinarr(response.data.data.transfer_stocks_recevied);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETTransferInListForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios.get(`${url}/transfer/stocks/list?location_id=${ClinicID}&limit=${pagecount?pagecount:25}&offset=0&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n        .then((response) => {\r\n          settransferinarrExcel(response.data.data.transfer_stocks_recevied);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [fromdate, todate,stat]);\r\n\r\n  useEffect(() => {\r\n    GETTransferInList();\r\n    GETTransferInListForExcel();\r\n  }, [fromdate, todate,stat]);\r\n\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  };\r\n  let array = [[0, 'Pending', 'lightyellow'], [1, 'Accepted', 'lightgreen'], [2, 'Rejected', 'lightred']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const UpdateStatus = async (data,e) => {\r\n    setupdateload(true)\r\n    try {\r\n      await axios.post(`${url}/transfer/stocks/change/status`, { \r\n        transfer_id: data.id, \r\n        transfer_status: e.target.value, \r\n        admin_id: adminid, \r\n      })\r\n        .then((response) => {\r\n          Notiflix.Notify.success(response.data.message);\r\n          GETTransferInList();\r\n          setupdateload(false)\r\n        })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n      setupdateload(false)\r\n    }\r\n  }\r\n  \r\n  return(\r\n    <>\r\n    <div className=\"col-auto position-absolute p-0 m-0 ms-2 export_2 align-self-center text-center\">\r\n     <ExportTransferIn transferinarr={transferinarrExcel} fromdate={reversefunction(fromdate ? fromdate:currentDate)} todate={reversefunction(todate?todate:fromdate?fromdate:currentDate)}  />\r\n   </div>\r\n {/* <button className={`button addpurchase button-charcoal me-3 position-absolute d-${permission.purchase_entry_add == 1 ? \"\" : \"none\" }`} onClick={toggle_npef} > <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />Transfer In </button> */}\r\n     <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {transferinarr!=undefined?transferinarr.length:\"\"} {transferinarr!=undefined?transferinarr.length > 1 ? \"Transfers In\" : \"Transfer In\":\"\"}{\" \"} </h2>\r\n <div>\r\n   <div className=\"scroll scroll-y overflow-scroll p-0 m-0 mt-2\" style={{ minHeight: \"56vh\", height: \"56vh\" }} >\r\n   <table className=\"table\">\r\n       <thead className=\" align-middle position-sticky top-0 bg-pearl\">\r\n         <tr>\r\n           <th className=\"fw-bolder text-charcoal75\"> TI ID </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Channel </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Location From </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Location To </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Date </th>\r\n           <th className=\"fw-bolder text-charcoal75\">Transfer By </th>\r\n           <th className=\"fw-bolder text-charcoal75\">Transfer To </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Total Items</th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Amount </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Approval Status </th>\r\n           <th className=\"fw-bolder  text-center  text-charcoal75\"  > Inventory </th>\r\n           {/* <th className='fw-bolder p-0 m-0  text-charcoal75 text-center' scope='col' style={{ zIndex: '3' }}>more</th> */}\r\n         </tr>\r\n       </thead>\r\n       {Loading ? (\r\n         <tbody className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n           <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n             <div class=\"d-flex align-items-center\">\r\n               <strong className=\"\">\r\n                 Getting Details please be Patient ...\r\n               </strong>\r\n               <div\r\n                 class=\"spinner-border ms-auto\"\r\n                 role=\"status\"\r\n                 aria-hidden=\"true\"\r\n               ></div>\r\n             </div>\r\n           </tr>\r\n         </tbody> \r\n       ) : transferinarr && transferinarr.length != 0 ? (\r\n         <tbody>\r\n           {\r\n           transferinarr.map((item, i) => (\r\n             <tr key={i} className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\" } align-middle`} >\r\n               <td className=\"py-0 my-0 text-charcoal fw-bold ps-2\"> TI-{item.id} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.from_location.title ? item.from_location.title : \"N/A\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.to_location.title ? item.to_location.title : \"N/A\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.transfer_date && item.transfer_date ? reversefunction(item.transfer_date) : \"N/A\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> </td>\r\n               <td className=\"text-charcoal fw-bold\"> </td>\r\n               <td className=\"text-charcoal fw-bold\"> </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.total_amount && item.total_amount ? \"Rs. \" + item.total_amount : \"N/A\"} </td>\r\n               <td className=\"text-center\">\r\n                { \r\n                updateload == true && updateindex==i ? (\r\n        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n                ):(\r\n                  <select className={`bg-${status_color(item.transfer_status)} rounded-2 rounded-pill py-1 px-2 fw-bold text-center border-0 text-wrap `} value={status(item.transfer_status)} onChange={(e)=>{UpdateStatus(item,e);updateindex(i)}} name={item.transfer_status}>\r\n                  <option className=\"button text-center\" selected disabled>{status(item.transfer_status)}</option>\r\n                  <option className=\"button-lightred\" value='0'  >Pending</option>\r\n                  <option className=\"button-lightblue\" value='1'>Accepted</option>\r\n                  <option className=\"button-lightred\" value='2'   >Rejected</option>\r\n              </select>\r\n                )}\r\n\r\n               </td>\r\n               <td className=\"text-charcoal fw-bold text-center\">\r\n                 <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_peidw(); }} > <img src={ process.env.PUBLIC_URL + \"/images/archivebox.png\" } alt=\"displaying_image\" className=\"ms-1 img-fluid\" /> </button>\r\n               </td>\r\n               <td className={`p-0 m-0`}  >\r\n                  {i == index ?  (\r\n                    <>\r\n                    <div className=\"backdrop\"></div>\r\n                    <section className={` position-absolute d-${i == index ? peidw : \"none\" } border border-1 start-0 mx-auto end-0 bg-seashell rounded-4 p-0 m-0`} style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }}>\r\n                    <TIitemdetailssection transferinarr={transferinarr[i]} id={\"TI-\" + item.id} toggle_peidw={toggle_peidw} /> \r\n                    </section>\r\n                    </>\r\n                   ) : ( <></> )}\r\n               </td>\r\n             </tr>\r\n           ))}\r\n         </tbody>\r\n       ) : (\r\n         <tbody className=\"text-center position-relative p-0 m-0 \" style={{ minHeight: \"55vh\" }} >\r\n           <tr className=\"\">\r\n             <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\">\r\n               No Transfers In\r\n             </td>\r\n           </tr>\r\n         </tbody>\r\n       )}\r\n     </table>\r\n   </div>\r\n   <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n     <ReactPaginate\r\n       previousLabel={\"Previous\"}\r\n       nextLabel={\"Next\"}\r\n       breakLabel={\". . .\"}\r\n       pageCount={pages}\r\n       marginPagesDisplayed={3}\r\n       pageRangeDisplayed={2}\r\n       onPageChange={GETTransferInList}\r\n       containerClassName={\"pagination\"}\r\n       pageClassName={\"page-item text-charcoal\"}\r\n       pageLinkClassName={ \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\" }\r\n       previousClassName={\"btn button-charcoal-outline me-2\"}\r\n       previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n       nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n       breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       activeClassName={\"active\"}\r\n     />\r\n   </div>\r\n </div>\r\n\r\n</>\r\n)\r\n}\r\nfunction TransferOut(props){\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const permission = useContext(Permissions);\r\n  const url = useContext(URL);  \r\n  const [peidw, setpeidw] = useState(\"none\");\r\n\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n      setindex()\r\n    }\r\n  }\r\n\r\n  const fromdate = props.fromdate\r\n  const todate = props.todate\r\n  const stat = props.status\r\n  const [Loading, setLoading] = useState(false);\r\n  const [transferoutarr, settransferoutarr] = useState([]);\r\n  const [transferoutarrExcel, settransferoutarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/transfer/stocks/list?location_id=${ClinicID}&limit=25&offset=0&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function GETTransferOutList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try { \r\n        axios.get(`${url}/transfer/stocks/list?location_id=${ClinicID}&limit=25&offset=0&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n          .then((response) => {\r\n            // setpagecount(response.data.data.total_count);\r\n            settransferoutarr(response.data.data.transfer_stocks_sent);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/transfer/stocks/list?location_id=${ClinicID}&limit=25&offset=${Data.selected * 25 }&status=${stat}&from_date=${fromdate}&to_date=${todate}` )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            settransferoutarr(response.data.data.transfer_stocks_sent);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  async  function GETTransferOutListForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get(`${url}/transfer/stocks/list?location_id=${ClinicID}&limit=${pagecount?pagecount:''}&offset=0&status=${stat}` ) .then((response) => {\r\n          settransferoutarrExcel(response.data.data.transfer_stocks_sent);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [fromdate, todate,stat]);\r\n\r\n  useEffect(() => {\r\n    GETTransferOutList();\r\n    GETTransferOutListForExcel();\r\n  }, [fromdate, todate,stat]);\r\n\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  let array = [[0, 'Pending', 'lightyellow'], [1, 'Accepted', 'lightgreen'], [2, 'Rejected', 'lightred']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  const UpdateStatus = async (data,e) => {\r\n    try {\r\n      await axios.post(`${url}/transfer/stocks/change/status`, { \r\n        transfer_id: data.id, \r\n        transfer_status: e.target.value, \r\n        admin_id: adminid, \r\n      })\r\n        .then((response) => {\r\n          ;\r\n          Notiflix.Notify.success(response.data.message);\r\n          GETTransferOutList();\r\n        })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  }\r\n  return(\r\n    <>\r\n    <div className=\"col-auto position-absolute p-0 m-0 ms-2 export_2 align-self-center text-center\">\r\n     <ExportTransferOut transferoutarr={transferoutarrExcel} fromdate={reversefunction(fromdate ?fromdate:currentDate)} todate={reversefunction(todate?todate:fromdate?fromdate:currentDate)} />\r\n   </div>\r\n <button className={`button addpurchase button-charcoal me-3 position-absolute d-${permission.purchase_entry_add == 1 ? \"\" : \"none\" }`} onClick={toggle_npef} > <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />Transfer Out </button>\r\n     <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {transferoutarr!=undefined?transferoutarr.length:''} {transferoutarr!=undefined?transferoutarr.length > 1 ? \"Transfers Out\" : \"Transfer Out\":''}{\" \"} </h2>\r\n <div>\r\n   <div className=\"scroll scroll-y overflow-scroll p-0 m-0 mt-2\" style={{ minHeight: \"56vh\", height: \"56vh\" }} >\r\n     <table className=\"table\">\r\n       <thead className=\" align-middle position-sticky top-0 bg-pearl\">\r\n         <tr>\r\n           <th className=\"fw-bolder text-charcoal75\"> TO ID </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Channel </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Location From </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Location To </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Date </th>\r\n           <th className=\"fw-bolder text-charcoal75\">Transfer By </th>\r\n           <th className=\"fw-bolder text-charcoal75\">Transfer To </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Total Items</th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Amount </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Approval Status </th>\r\n           <th className=\"fw-bolder  text-center  text-charcoal75\"  > Inventory </th>\r\n           {/* <th className='fw-bolder p-0 m-0  text-charcoal75 text-center' scope='col' style={{ zIndex: '3' }}>more</th> */}\r\n         </tr>\r\n       </thead>\r\n       {Loading ? (\r\n         <tbody className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n           <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n             <div class=\"d-flex align-items-center\">\r\n               <strong className=\"\">\r\n                 Getting Details please be Patient ...\r\n               </strong>\r\n               <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n             </div>\r\n           </tr>\r\n         </tbody> \r\n       ) : transferoutarr && transferoutarr.length != 0 ? (\r\n         <tbody>\r\n           {\r\n           transferoutarr.map((item, i) => (\r\n             <tr key={i} className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\" } align-middle`} >\r\n               <td className=\"py-0 my-0 text-charcoal fw-bold ps-2\"> TO-{item.id} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.from_location.title ? item.from_location.title : \"N/A\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.to_location.title ? item.to_location.title : \"N/A\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.transfer_date && item.transfer_date ? reversefunction(item.transfer_date) : \"N/A\"} </td>\r\n               <td className=\"text-charcoal fw-bold\"> </td>\r\n               <td className=\"text-charcoal fw-bold\"> </td>\r\n               <td className=\"text-charcoal fw-bold\"> </td>\r\n               <td className=\"text-charcoal fw-bold\"> {item.total_amount && item.total_amount ? \"Rs. \" + item.total_amount : \"N/A\"} </td>\r\n               <td>\r\n               <select className={`bg-${status_color(item.transfer_status)} rounded-2 rounded-pill py-1 px-2  fw-bold border-0 text-wrap `} onChange={(e)=>{UpdateStatus(item,e)}} name={item.transfer_status}>\r\n                                            <option className=\"button text-center\" selected disabled>{status(item.transfer_status)}</option>\r\n                                            <option className=\"button-lightred\" value='0'>Pending {status_color(item.transfer_status)}</option>\r\n                                            <option className=\"button-lightblue\" value='1'>Accepted</option>\r\n                                            <option className=\"button-lightred\" value='2'>Rejected</option>\r\n                  \r\n                                        </select>\r\n               </td>\r\n               <td className=\"text-charcoal fw-bold text-center\">\r\n                 <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_peidw(); }} > <img src={ process.env.PUBLIC_URL + \"/images/archivebox.png\" } alt=\"displaying_image\" className=\"ms-1 img-fluid\" /> </button>\r\n               </td>\r\n               <td className={` `} >\r\n                  {i == index ? ( \r\n                  <>\r\n                  <div className=\"backdrop\"></div>\r\n                    <section className={`position-absolute d-${i == index ? peidw : \"none\" } border border-1 start-0 mx-auto end-0 bg-seashell rounded-4 p-0 m-0`}  style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }}>\r\n                  <TOitemdetailssection transferoutarr={transferoutarr[i]} id={\"TO-\" + item.id} toggle_peidw={toggle_peidw} />\r\n                  </section>\r\n                  </>\r\n                   ) : ( <></> )}\r\n               </td>\r\n             </tr>\r\n           ))}\r\n         </tbody>\r\n       ) : (\r\n         <tbody className=\"text-center position-relative p-0 m-0 \" style={{ minHeight: \"55vh\" }} >\r\n           <tr className=\"\">\r\n             <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\">\r\n               No Transfers Out\r\n             </td>\r\n           </tr>\r\n         </tbody>\r\n       )}\r\n     </table>\r\n   </div>\r\n   <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n     <ReactPaginate\r\n       previousLabel={\"Previous\"}\r\n       nextLabel={\"Next\"}\r\n       breakLabel={\". . .\"}\r\n       pageCount={pages}\r\n       marginPagesDisplayed={3}\r\n       pageRangeDisplayed={2}\r\n       onPageChange={GETTransferOutList}\r\n       containerClassName={\"pagination\"}\r\n       pageClassName={\"page-item text-charcoal\"}\r\n       pageLinkClassName={ \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\" }\r\n       previousClassName={\"btn button-charcoal-outline me-2\"}\r\n       previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n       nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n       breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       activeClassName={\"active\"}\r\n     />\r\n   </div>\r\n </div>\r\n <section className={` position-absolute start-0 top-0 end-0 mx-auto bg-seashell rounded-2 border shadow border-1 d-${npef}`} style={{height:'70vh',width:'60vh'}} >\r\n   {\r\n     <NewTransferOutForm toggle_npef={toggle_npef} GETTransferOutList={GETTransferOutList} />\r\n   }\r\n </section>\r\n</>\r\n)\r\n}\r\nfunction TIitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  const [qr, setqr] = useState(\"none\");\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst) || igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0\">\r\n        <h5 className=\"text-center pt-3 text-charcoal\">\r\n          {props.id} Transfer In Item Details\r\n        </h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={props.toggle_peidw} aria-label=\"Close\" ></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div className=\" position-relative searchbutton\" style={{ top: \"0.25rem\", right: \"1rem\" }} >\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\" }`} onClick={() => { setindex(i); }} > {data} </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" value={Taxon ? Taxon : \"\"} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true); }} />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ height:\"100%\" }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total </th>\r\n            </tr>\r\n          </thead>\r\n          {props.transferinarr.medicines && props.transferinarr.medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.transferinarr.medicines.map((item, _key) => (\r\n                <tr className=\"border align-middle\" key={_key}>\r\n                  <td className=\"border align-middle\"> {item.medicies_stocks_id && item.medicies_stocks_id !== undefined ? \"m\"+item.medicies_stocks_id : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.medicine.display_name !== undefined ? item.medicine_stock_details.medicine.display_name : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.batch_no !== undefined ? item.medicine_stock_details.batch_no : \"N/A\"}</td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.expiry_date !== undefined ? reversefunction(item.medicine_stock_details.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.mrp !== undefined ? \"₹\"+item.medicine_stock_details.mrp : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.rate !== undefined ? \"₹\"+item.medicine_stock_details.rate : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.discount !== undefined ?  item.medicine_stock_details.discount: \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.trade_discount !== undefined ?  item.medicine_stock_details.trade_discount: \"N/A\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.SGST_rate ? Number( item.medicine_stock_details.SGST_rate) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.SGST ? (Number(item.medicine_stock_details.SGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.CGST_rate ? Number(item.medicine_stock_details.CGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.CGST ? (Number(item.medicine_stock_details.CGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.IGST_rate ? Number(item.medicine_stock_details.IGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.IGST ? (Number(item.medicine_stock_details.IGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxPercent(item.medicine_stock_details.CGST_rate , item.medicine_stock_details.SGST_rate, item.medicine_stock_details.IGST_rate)} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxRate(item.medicine_stock_details.CGST,item.medicine_stock_details.SGST,item.medicine_stock_details.IGST, item.qty)} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details.cost ?\"₹\"+item.medicine_stock_details.cost  : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty && item.medicine_stock_details.cost ?  Number(Number(item.medicine_stock_details.cost)*Number(item.qty)).toFixed(2):''} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold\">No Medicines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ height:'100%' }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className={`border p-0 m-0 px-1`} > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total{\" \"} </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total{\" \"} </th>\r\n            </tr>\r\n          </thead>\r\n          {props.transferinarr.vaccines &&\r\n            props.transferinarr.vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.transferinarr.vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stocks_id  && item.vaccine_stocks_id !== undefined ? \"v\"+item.vaccine_stocks_id : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.vaccine.name !== undefined ? item.vaccine_stock_details.vaccine.name : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.batch_no !== undefined ? item.vaccine_stock_details.batch_no : \"N/A\"}</td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.expiry_date !== undefined ? reversefunction(item.vaccine_stock_details.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.mrp !== undefined ? \"₹\"+item.vaccine_stock_details.mrp : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.rate !== undefined ? \"₹\"+item.vaccine_stock_details.rate : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details && item.vaccine_stock_details.discount !== undefined ?  item.vaccine_stock_details.discount: \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details && item.vaccine_stock_details.trade_discount !== undefined ?  item.vaccine_stock_details.trade_discount: \"N/A\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.SGST_rate ? Number( item.vaccine_stock_details.SGST_rate) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.SGST ? (Number(item.vaccine_stock_details.SGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.CGST_rate ? Number(item.vaccine_stock_details.CGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.CGST ? (Number(item.vaccine_stock_details.CGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.IGST_rate ? Number(item.vaccine_stock_details.IGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.IGST ? (Number(item.vaccine_stock_details.IGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxPercent(item.vaccine_stock_details.CGST_rate , item.vaccine_stock_details.SGST_rate, item.vaccine_stock_details.IGST_rate)} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxRate(item.vaccine_stock_details.CGST,item.vaccine_stock_details.SGST,item.vaccine_stock_details.IGST, item.qty)} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details.cost ?\"₹\"+item.vaccine_stock_details.cost  : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty && item.vaccine_stock_details.cost ?  Number(Number(item.vaccine_stock_details.cost)*Number(item.qty)).toFixed(2):''} </td>\r\n\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\"fw-bold text-center\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction TOitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  const [qr, setqr] = useState(\"none\");\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst) || igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n  function GenerateQR(props) {\r\n    let count = [];\r\n    for (let i = 0; i < props.qty; i++) {\r\n      count.push(props.qty);\r\n    }\r\n    return count.map((data) => (\r\n      <div className=\"col-auto m-2\" key={data}>\r\n        <QRcode id={props.id} />\r\n      </div>\r\n    ));\r\n  }\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0\">\r\n        <h5 className=\"text-center pt-3 text-charcoal\">\r\n          {props.id} Transfer Out Item Details\r\n        </h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={props.toggle_peidw} aria-label=\"Close\" ></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div className=\" position-relative searchbutton\" style={{ top: \"0.25rem\", right: \"1rem\" }} >\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\" }`} onClick={() => { setindex(i); }} > {data} </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" value={Taxon ? Taxon : \"\"} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true); }} />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ height:\"100%\" }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total </th>\r\n            </tr>\r\n          </thead>\r\n          {props.transferoutarr.medicines && props.transferoutarr.medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.transferoutarr.medicines.map((item, _key) => (\r\n                <tr className=\"border align-middle\" key={_key}>\r\n                  <td className=\"border align-middle\"> {item.medicies_stocks_id && item.medicies_stocks_id !== undefined ? \"m\"+item.medicies_stocks_id : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.medicine.display_name !== undefined ? item.medicine_stock_details.medicine.display_name : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.batch_no !== undefined ? item.medicine_stock_details.batch_no : \"N/A\"}</td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.expiry_date !== undefined ? reversefunction(item.medicine_stock_details.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.mrp !== undefined ? \"₹\"+item.medicine_stock_details.mrp : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.rate !== undefined ? \"₹\"+item.medicine_stock_details.rate : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.discount !== undefined ?  item.medicine_stock_details.discount: \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details && item.medicine_stock_details.trade_discount !== undefined ?  item.medicine_stock_details.trade_discount: \"N/A\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.SGST_rate ? Number( item.medicine_stock_details.SGST_rate) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.SGST ? (Number(item.medicine_stock_details.SGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.CGST_rate ? Number(item.medicine_stock_details.CGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.CGST ? (Number(item.medicine_stock_details.CGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.IGST_rate ? Number(item.medicine_stock_details.IGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_stock_details && item.medicine_stock_details.IGST ? (Number(item.medicine_stock_details.IGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxPercent(item.medicine_stock_details.CGST_rate , item.medicine_stock_details.SGST_rate, item.medicine_stock_details.IGST_rate)} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxRate(item.medicine_stock_details.CGST,item.medicine_stock_details.SGST,item.medicine_stock_details.IGST, item.qty)} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_stock_details.cost ?\"₹\"+item.medicine_stock_details.cost  : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n  \r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold\">No Medicines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ height:'100%' }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className={`border p-0 m-0 px-1`} > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total{\" \"} </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total{\" \"} </th>\r\n            </tr>\r\n          </thead>\r\n          {props.transferoutarr.vaccines &&\r\n            props.transferoutarr.vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.transferoutarr.vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stocks_id  && item.vaccine_stocks_id !== undefined ? \"v\"+item.vaccine_stocks_id : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.vaccine.name !== undefined ? item.vaccine_stock_details.vaccine.name : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.batch_no !== undefined ? item.vaccine_stock_details.batch_no : \"N/A\"}</td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.expiry_date !== undefined ? reversefunction(item.vaccine_stock_details.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.mrp !== undefined ? \"₹\"+item.vaccine_stock_details.mrp : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details  && item.vaccine_stock_details.rate !== undefined ? \"₹\"+item.vaccine_stock_details.rate : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details && item.vaccine_stock_details.discount !== undefined ?  item.vaccine_stock_details.discount: \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details && item.vaccine_stock_details.trade_discount !== undefined ?  item.vaccine_stock_details.trade_discount: \"N/A\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.SGST_rate ? Number( item.vaccine_stock_details.SGST_rate) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.SGST ? (Number(item.vaccine_stock_details.SGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.CGST_rate ? Number(item.vaccine_stock_details.CGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.CGST ? (Number(item.vaccine_stock_details.CGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.IGST_rate ? Number(item.vaccine_stock_details.IGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_stock_details && item.vaccine_stock_details.IGST ? (Number(item.vaccine_stock_details.IGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxPercent(item.vaccine_stock_details.CGST_rate , item.vaccine_stock_details.SGST_rate, item.vaccine_stock_details.IGST_rate)} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxRate(item.vaccine_stock_details.CGST,item.vaccine_stock_details.SGST,item.vaccine_stock_details.IGST, item.qty)} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stock_details.cost ?\"₹\"+item.vaccine_stock_details.cost  : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\"fw-bold text-center\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NewTransferOutForm(props){\r\n  const url = useContext(URL)\r\n  const medicinesref = useRef(null)\r\n  const stockref = useRef(null)\r\n  const cliniclist = useContext(Clinic)\r\n  const currentDate = useContext(TodayDate);\r\n  const clinicid = localStorage.getItem('ClinicId')\r\n  const [clinicname,setclinicname]= useState(\"\")\r\n  const [fromlocation,setfromlocation] =useState(clinicid)\r\n  const [fromlocationname,setfromlocationname] =useState(\"\")\r\n  const [tolocation,settolocation] =useState()\r\n  const [tolocationname,settolocationname] =useState(\"\")\r\n  const [channel,setchannel]=useState(\"\")\r\n  const [channelname,setchannelname]=useState()\r\n  const [transferdate,settransferdate]=useState(currentDate)\r\n  const [stage1, setstage1] = useState('block')\r\n  const [stage2, setstage2] = useState('none')\r\n  const [loadsearch,setloadsearch]=useState(false)\r\n  const [itemsearch, setitemsearch] = useState();\r\n  const [itemname, setitemname] = useState();\r\n  const [itemid, setitemid] = useState();\r\n  const [itemtype, setitemtype] = useState();\r\n  const [qty,setqty] =useState();\r\n  const [tableindex, settableindex] = useState()\r\n  const [products, setproducts] = useState([]);\r\n  const [SelectedProducts, setSelectedProducts] = useState([]); \r\n  const [load,setload]=useState(false)\r\n  const [Grandtotal, setGrandtotal] = useState();\r\n  const toggleStage1 = () => {\r\n    if (stage1 == 'block') {\r\n      setstage1('none')\r\n    }\r\n    if (stage1 == 'none') {\r\n      setstage1('block')\r\n    }\r\n  }\r\n\r\n  const toggleStage2 = () => {\r\n    if (stage2 == 'block') {\r\n      setstage2('none')\r\n    }\r\n    if (stage2 == 'none') {\r\n      setstage2('block')\r\n    }\r\n  }\r\n  const Go_Back = () => {\r\n    if (stage2 === 'block') { \r\n      toggleStage2()\r\n      toggleStage1()\r\n    }\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Transfer Out`,\r\n      `Do you surely want to do the following Transfer Out `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveTransferOut();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  const SaveTransferOut = async () => {\r\n    let MedId = [];\r\n    let Type = [];\r\n    let quantity = [];\r\n    for (let i = 0; i < SelectedProducts.length; i++) {\r\n      Type.push(SelectedProducts[i].type ? SelectedProducts[i].type : \"\");\r\n      MedId.push( SelectedProducts[i].productid ? SelectedProducts[i].productid : \"\" );\r\n      quantity.push(SelectedProducts[i].qtytoTransfer ? Number(SelectedProducts[i].qtytoTransfer) : \"\");\r\n    }\r\n    var Data = {\r\n      from_location:fromlocation,\r\n      to_location:tolocation, \r\n      channel: channel, \r\n      transfer_date: transferdate,\r\n      total_amount:Grandtotal,\r\n      items: MedId, \r\n      items_type: Type, \r\n      qty: quantity\r\n     }\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/transfer/stocks/add`, Data).then((response) => {\r\n        setload(false);\r\n        props.GETTransferOutList();\r\n        setload(false);\r\n        props.toggle_npef();\r\n        if (response.data.status == true) {\r\n          Notiflix.Notify.success(response.data.message);\r\n        } else {\r\n          Notiflix.Notify.warning(response.data.message);\r\n        }\r\n        resetfields()\r\n      });\r\n    } catch (e) {\r\n      setload(false);\r\n      Notiflix.Notify.warning(e.message);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    CalGrandttl();\r\n  }, [SelectedProducts]);\r\n\r\n  function AddProducts(data) {\r\n    let T = \"\";\r\n    if (data.vaccine_brand_id) {\r\n      T = \"v\";\r\n    } else {\r\n      T = \"m\";\r\n    } \r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      type: data.type ? data.type : T,\r\n      avlstock: data.current_stock,\r\n      qtytoTransfer: '',\r\n      mrp: data.mrp,\r\n    }\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails]);\r\n    } else {\r\n      setSelectedProducts((prevState) => [...prevState, ProductDetails]);\r\n    }\r\n  }\r\n  async function DeleteProduct(productid) {\r\n    let obj = [];\r\n    obj.push(\r\n      SelectedProducts.filter(function (e) {\r\n        return e.productid !== productid;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setSelectedProducts(obj);\r\n  }\r\n  const resetfields = async () => {\r\n    setclinicname()\r\n    setfromlocation()\r\n    settolocation()\r\n    settransferdate()\r\n    setchannelname()\r\n    setchannel()\r\n    setSelectedProducts([])\r\n  };\r\n\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios.get(`${url}/stock/list?search=${search}&location_id=${clinicid}`).then((response) => {\r\n        let medicines = [];\r\n        let vaccines = [];\r\n        let items = [];\r\n        medicines.push(\r\n          response.data.data.medicines ? response.data.data.medicines : []\r\n        );\r\n        vaccines.push(\r\n          response.data.data.vaccines ? response.data.data.vaccines : []\r\n        );\r\n        items = medicines.concat(vaccines);\r\n        items = items.flat();\r\n        setitemsearch(items);\r\n        setloadsearch(false);\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = \"block\";\r\n        } else {\r\n          medicinesref.current.style.display = \"none\";\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e);\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  }\r\n  const ClinicName = ()=>{\r\n    for(let i=0;i<cliniclist.length;i++){\r\n      if(clinicid == cliniclist[i].id){\r\n        setclinicname(cliniclist[i].title)\r\n      }\r\n    }\r\n  }\r\n  function CalTotalAmount(qty, mrp) {\r\n    let cost = mrp;\r\n    if (!qty) {\r\n      return 0;\r\n    } else if (qty == 1 || qty =='1') {\r\n      mrp = Number(mrp);\r\n      return mrp;\r\n    } else {\r\n      cost = Number(mrp) * Number(qty);\r\n      cost = cost.toFixed(2);\r\n      return cost;\r\n    }\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0;\r\n    SelectedProducts.map((data) => (ttl += Number(data.totalamt)));\r\n    setGrandtotal(ttl);\r\n  }\r\n  useEffect(()=>{\r\n    ClinicName()\r\n  },[])\r\n  return(\r\n    <section className=\"position-relative\" style={{minHeight:'100%'}}>\r\n      <h5 className=\"text-center text-charocal fw-bold pt-2 shadow-sm pb-2\">New Transfer Out</h5> \r\n      <button className={`btn btn-back position-absolute start-0 top-0 ms-2 d-${stage1 == 'block' ? 'none' : 'block'}`} onClick={() => { Go_Back() }}   ></button>\r\n      <button type=\"button\" className=\"btn-close closebtn m-auto mt-2 position-absolute top-0 end-0 me-2 mt-2\" onClick={props.toggle_npef} aria-label=\"Close\" ></button>\r\n      <div className={`stage1 d-${stage1}`} style={{minHeight:'90%'}}>\r\n      <div className=\"row p-0 m-0 mt-4 ms-3 align-items-end align-self-end\">\r\n        <div className=\"col-5\">\r\n          <label className=\"text-charcoal75 fw-bold\" htmlFor=\"\">From Location</label>\r\n        <div className=\"dropdown \">\r\n            <button className=\" button button-pearl text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> {fromlocationname?fromlocationname:clinicname} </button>\r\n            <ul className=\"dropdown-menu p-2 bg-pearl border-0 shadow-sm\" >\r\n            {\r\n                        cliniclist ? (\r\n                        cliniclist.map((data) => (\r\n                            <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" onClick={() => { setfromlocation(data.id);setfromlocationname(data.title) }}>{data.title} </li>\r\n                          ))\r\n                        ) : (\r\n                          <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" >Loading...</li>\r\n                          )\r\n            }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-5\">\r\n        <label className=\"text-charcoal75 fw-bold\" htmlFor=\"\">To Location</label>\r\n        <div className=\"dropdown \">\r\n            <button className=\" button button-pearl text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> {tolocationname?tolocationname:\"To Location\"} </button>\r\n            <ul className=\"dropdown-menu p-2 bg-pearl border-0 shadow-sm\" >\r\n            {\r\n                        cliniclist ? (\r\n                        cliniclist.map((data) => (\r\n                            <li className={`text-start p-2 text-charcoal fw-bolder border-bottom py-2 d-${clinicid==data.id?'none':''}`} onClick={() => { settolocation(data.id);settolocationname(data.title) }}>{data.title} </li>\r\n                          ))\r\n                        ) : (\r\n                          <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" >Loading...</li>\r\n                          )\r\n            }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row p-0 m-0 mt-5 ms-3 \">\r\n        <div className=\"col-5\">\r\n        <div className=\"text-charcoal75 fw-bold\" htmlFor=\"\">Select Channel</div>\r\n        <div className=\"dropdown \">\r\n            <button className=\" button button-pearl text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> {channelname?channelname:\"Select Channel\"} </button>\r\n            <ul className=\"dropdown-menu p-2 bg-pearl border-0 shadow-sm\" >\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" onClick={() => { setchannel(1);setchannelname(\"Pharmacy\") }}>Pharmacy </li>\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder py-2\" onClick={() => { setchannel(2);setchannelname(\"Clinic\") }}>Clinic </li>\r\n            </ul>\r\n          </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n            <div className=\"text-charcoal75 fw-bold\" htmlFor=\"\">Transfer Date</div>\r\n              <input type=\"date\" className=\"button button-pearl fw-bolder tet-charcoal \" onChange={(e)=>{settransferdate(e.target.value)}} value={transferdate?transferdate:currentDate}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 position-absolute bottom-0 bg-pearl bottom_bar\">\r\n          <div className=\"row p-0 m-0 py-3 justify-content-end\">\r\n            <div className=\"col-auto\">\r\n            <button className=\"button button-charcoal\" onMouseDown={() => { toggleStage2(); }} onMouseUp={() => { toggleStage1() }} >Add Items</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div className={`stage2 d-${stage2}`}>\r\n          <div className=\"row p-0 m-0 align-items-end align-self-end\">\r\n            <div className=\"col-auto\">\r\n                  <input className=\"form-control fw-bold border-charcoal75 border-2 rounded-1 bg-seashell\" placeholder=\"Search Product by Name\" value={itemname ? itemname : \"\"} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemid(); setproducts(); stockref.current.style.display = \"none\"; }} />\r\n                  <div ref={medicinesref} className=\"position-absolute rounded-1 mt-1\" style={{ Width: \"max-content\", zIndex: \"1\" }} >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className=\"rounded-1 p-1 bg-pearl\">\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span>\r\n                            </div>\r\n                          </div>\r\n                        ) : loadsearch == false && itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-1 p-1\"> Oops! Not Avaliable </div>\r\n                        ) : (\r\n                          <div className={`rounded-4 scroll border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? \"block\" : \"none\"}`} style={{ height: '30vh' }} >\r\n                            <p className={`text-start p-2 position-sticky top-0 bg-pearl fw-bold text-charcoal75 ms-2`} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                            {\r\n                              itemsearch.map((data, i) => (\r\n                                <div style={{ cursor: \"pointer\", Width: \"10rem\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} text-start fw-bold p-2 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = \"block\"; }} > {data.display_name ? data.display_name : data.name} <span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span> </div>\r\n                              ))\r\n                            }\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        <div className=\"bg-seashell\"></div>\r\n                      )}\r\n                  </div>\r\n                  <div ref={stockref} className={`position-absolute start-50 mt-1 bg-pearl scroll scroll-y align-self-center rounded-2 border border-1 p-2 d-${products && products.stock_info && products.stock_info !== undefined ? \"block\" : \"none\"}`} style={{ zIndex: \"2\", width: \"10rem\", 'min-height': \"30vh\", }} >\r\n                    <p className={`text-start fw-bold text-charcoal75`} style={{ fontSize: \"0.8rem\" }} > {products && products.stock_info !== undefined ? products.stock_info.length : \"\"}{\" \"} Batch Stocks </p>\r\n                    {\r\n                      products && products.length != 0 ? (\r\n                        products.stock_info.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-white fw-bold p-2\">Oops! Not Available</div>\r\n                        ) : (\r\n                          products.stock_info.map((data, i) => (\r\n                            <div style={{ cursor: \"pointer\", Width: \"max-content\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} border-bottom text-wrap`} onClick={() => { AddProducts(data); setitemname(); setitemid(); setproducts(); setitemsearch(); }} >\r\n                              <p className=\"text-start m-0 p-0 fw-bold\">{itemname}</p>\r\n                              <p className=\"text-start p-0 m-0 \"> BatchNo. -{\" \"} {data.batch_no && data.batch_no !== null ? data.batch_no : \"\"} </p>\r\n                              <p className=\"text-start p-0 m-0 \"> Stock -{\" \"} {data.current_stock && data.current_stock ? data.current_stock : \"\"} </p>\r\n                              <p className=\"text-start p-0 m-0 \"> Expiry Date -{\" \"} {data.expiry_date ? reversefunction(data.expiry_date) : \"\"} </p>\r\n                            </div>\r\n                          ))\r\n                        )\r\n                      ) : (\r\n                        <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                      )\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                  </div>\r\n       \r\n            </div>\r\n          </div>\r\n     \r\n                <div className=\"container-fluid p-0 m-0 mt-2 scroll scroll-y\">\r\n                <table className=\"table p-0 m-0\">\r\n                  <thead className=\"p-0 m-0\">\r\n                    <tr className={`p-0 m-0 `}>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Item ID </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Item Name </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Mrp </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Avl.Stock </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Qty To Transfer </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Total </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Delete </th>\r\n                    </tr>\r\n                  </thead>\r\n                  {SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                    <tbody className=\"p-0 m-0\">\r\n                      {\r\n                      SelectedProducts.map((data) => (\r\n                        <tr className={`p-0 m-0 align-middle text-charcoal fw-bold`} >\r\n                          <td>{data.type} {data.productid} </td>\r\n                          <td>{data.product}</td>\r\n                          <td>{data.mrp}</td>\r\n                          <td>{data.avlstock}</td>\r\n                          <td>\r\n                            <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell\" value={data.qtytoTransfer ? data.qtytoTransfer : \"\"} onChange={(e) => { e.target.value <= data.avlstock ? (data.qtytoTransfer = e.target.value) : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\"); data.totalamt = CalTotalAmount(data.qtytoTransfer, data.mrp); setSelectedProducts((prevState) => [...prevState]); }} />{\" \"}\r\n                          </td>\r\n                          <td>{data.totalamt}</td>\r\n                          <td>\r\n                            <button className=\"btn p-0 m-0\" onClick={() => { DeleteProduct(data.productid); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"images/minus.png\"} />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"p-0 m-0 position-relative\">\r\n                      <tr className=\"p-0 m-0\">\r\n                        <td className=\"p-0 m-0 position-absolute text-charcoal75 fw-bold text-center start-0 end-0\"> No Product Added </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )}\r\n                </table>\r\n                </div>\r\n                     \r\n        <div className=\"container-fluid p-0 m-0 position-absolute bottom-0 bottom_bar bg-pearl\">\r\n          <div className=\"row p-0 m-0 py-3 justify-content-between align-items-center align-self-center\">\r\n            <div className=\"col-auto\">\r\n              <label className=\"fw-bolder text-charcoal75\" htmlFor=\"\">Grand Total</label>\r\n              <div className=\"col-auto \">\r\n              <h5 className=\"fw-bolder text-charcoal\">₹{Grandtotal }</h5>\r\n              </div>\r\n          \r\n            </div>\r\n            <div className=\"col-auto\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n            <button className=\"button button-charcoal\"onClick={()=>confirmmessage()} >Save Transfer</button>\r\n            )\r\n            }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction Dumpsection(props){\r\n  const currentDate = useContext(TodayDate);\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const [cliniclist,setcliniclist]=useState('')\r\n  const permission = useContext(Permissions);\r\n  const url = useContext(URL);\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n  const [Loading, setLoading] = useState(false);\r\n  const [dumpsarr, setdumpsarr] = useState([]);\r\n  const [dumpsarrExcel, setdumpsarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n  const [updateload, setupdateload] = useState(false);\r\n  const [fromdate,setfromdate] =useState()\r\n  const [todate,settodate] =useState()\r\n  const [channel,setchannel] =useState()\r\n  const [second ,setSecond] =  useState()\r\n  const [statusindex,setstatusindex] = useState()\r\n\r\n\r\n  function ClinicList() {\r\n    axios.get(`${url}/clinic/list`).then((response) => {\r\n        setcliniclist(response.data.data)\r\n    })\r\n}\r\nuseEffect(() => {\r\n    ClinicList()\r\n}, [])\r\n\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n      setindex()\r\n    }\r\n  }\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/dump/stocks/list?location_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // &from_date=${fromdate ? fromdate : currentDate }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}\r\n  // &from_date=${fromdate ? fromdate : currentDate }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}\r\n  // https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/transfer/stocks/list?location_id=1&limit=10&offset=0\r\n  \r\n  function GETDumpList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios.get( `${url}/dump/stocks/list?location_id=${ClinicID}&limit=25&offset=0` )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            setdumpsarr(response.data.data.dump_stocks);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/dump/stocks/list?location_id=${ClinicID}&limit=25&offset=${Data.selected * 25 }` )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            setdumpsarr(response.data.data.dump_stocks);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETDumpListForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios.get(`${url}/dump/stocks/list?location_id=${ClinicID}&limit=${pagecount?pagecount:''}&offset=0` )\r\n        .then((response) => {\r\n          setdumpsarrExcel(response.data.data.dump_stocks);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [fromdate, todate,channel])\r\n\r\n  useEffect(() => {\r\n    GETDumpList()\r\n    GETDumpListForExcel()\r\n  }, [fromdate, todate,channel])\r\n\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  }\r\n  let array = [[1, 'Dumped', 'lightgreen'], [2, 'Cancelled', 'lightred']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const UpdateStatus = async (data,e) => {\r\n    setupdateload(true)\r\n    try {\r\n      await axios.post(`${url}/transfer/stocks/change/status`, { \r\n        transfer_id: data.id, \r\n        transfer_status: e.target.value, \r\n        admin_id: adminid, \r\n      }).then((response) => {\r\n          Notiflix.Notify.success(response.data.message);\r\n          GETDumpList();\r\n          setupdateload(false)\r\n        })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setupdateload(false)\r\n    }\r\n  }\r\n  return(\r\n    <>\r\n   <div className=\"row p-0 m-0 mt-3\">\r\n   <div className=\"col-auto\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  {second?second:\"Channel\"}\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                      <li className={`dropdown-item text-${second === \"Pharmacy\" ? \"light\" : \"dark\"} fw-bold bg-${second === 'Pharmacy' ? \"charcoal\" : \"seashell\"}`} onClick={(a) => {setSecond('Pharmacy');setchannel(1)}} > Pharmacy </li>\r\n                      <li className={`dropdown-item text-${second === \"Clinic\" ? \"light\" : \"dark\"} fw-bold bg-${second === 'Clinic' ? \"charcoal\" : \"seashell\"}`} onClick={(a) => {setSecond('Clinic');setchannel(2)}} > Clinic </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-auto bg-seashell rounded-2 \">\r\n              <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 border-0 text-charcoal text-center fw-bold \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0\">-</div>\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" className=\" border-0 button button-seashell text-charcoal text-center fw-bold\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />                </div>\r\n              </div>\r\n            </div>\r\n    <div className=\"col-auto\">\r\n    <ExportDump dumpsarr={dumpsarrExcel} fromdate={reversefunction(fromdate?fromdate:currentDate)} todate={reversefunction(todate?todate:fromdate?fromdate:currentDate)} />\r\n    </div>\r\n   </div>\r\n   <div className=\"row p-0 m-0 justify-content-between mt-3\">\r\n    <div className=\"col-auto ps-0 ms-0\">\r\n    <h2 className=\" ms-3 text-charcoal fw-bolder\" style={{ width: \"fit-content\" }} > {dumpsarr!=undefined?dumpsarr.length:\"\"} {dumpsarr!=undefined?dumpsarr.length > 1 ? \"Dumps\" : \"Dump\":\"\"}{\" \"} </h2>\r\n    </div>\r\n    <div className=\"col-auto me-3\">\r\n    <button className={`button addpurchase button-charcoal  d-${permission.purchase_entry_add == 1 ? \"\" : \"none\" }`} onClick={toggle_npef} > <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />Dump </button>\r\n    </div>\r\n   </div>\r\n <div>\r\n   <div className=\"scroll scroll-y overflow-scroll p-0 m-0 mt-2 position-relative\" style={{ minHeight: \"56vh\", height: \"56vh\" }} >\r\n   <table className=\"table\">\r\n       <thead className=\" align-middle position-sticky top-0 bg-pearl\">\r\n       <tr>\r\n           <th className=\"fw-bolder text-charcoal75\">  ID </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Channel </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Dump From </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Dump Date </th>\r\n           <th className=\"fw-bolder text-charcoal75\"> Amount </th>\r\n           <th className=\"fw-bolder text-charcoal75 text-center\"> Status </th>\r\n           <th className=\"fw-bolder  text-center  text-charcoal75\"  > Inventory </th>\r\n           {/* <th className='fw-bolder p-0 m-0  text-charcoal75 text-center' scope='col' style={{ zIndex: '3' }}>more</th> */}\r\n         </tr>\r\n       </thead>\r\n       {Loading ? (\r\n         <tbody className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n           <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n             <div class=\"d-flex align-items-center\">\r\n               <strong className=\"\">\r\n                 Getting Details please be Patient ...\r\n               </strong>\r\n               <div\r\n                 class=\"spinner-border ms-auto\"\r\n                 role=\"status\"\r\n                 aria-hidden=\"true\"\r\n               ></div>\r\n             </div>\r\n           </tr>\r\n         </tbody> \r\n       ) : dumpsarr && dumpsarr.length != 0 ? (\r\n        <tbody>\r\n        {\r\n        dumpsarr.map((item, i) => (\r\n          <tr key={i} className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\" } align-middle`} >\r\n            <td className=\"py-0 my-0 text-charcoal fw-bold ps-2\"> D-{item.id} </td>\r\n            <td className=\"text-charcoal fw-bold\"> {item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"} </td>\r\n            <td className=\"text-charcoal fw-bold pe-3\"> \r\n                 {\r\n                    cliniclist ? cliniclist.map((data, i) => (\r\n                         <label className={`d-${ClinicID == data.id ? 'block' : 'none'}`}>{data.title}</label>\r\n\r\n                     )):(<></>)\r\n                 }\r\n           </td>\r\n            <td className=\"text-charcoal fw-bold\"> {item.dump_date && item.dump_date ? reversefunction(item.dump_date) : \"N/A\"} </td>\r\n            <td className=\"text-charcoal fw-bold\"> {item.total_amount && item.total_amount ? \"Rs. \" + item.total_amount : \"N/A\"} </td>\r\n            <td className=\"text-center\">\r\n             {     updateload == true && statusindex == i ? (\r\n     <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n     <div className=\"spinner-border\" role=\"status\">\r\n       <span className=\"visually-hidden\">Loading...</span>\r\n     </div>\r\n   </div>  \r\n             ):(\r\n               <select disabled={item.dump_status==2?true:false} className={`bg-${status_color(item.dump_status)} rounded-2 rounded-pill py-1 px-2 fw-bold text-center border-0 text-wrap `} onChange={(e)=>{UpdateStatus(item,e)}} name={item.dump_status}>\r\n               <option className=\"button text-center\" selected disabled>{status(item.dump_status)}</option>\r\n               <option className=\"button-lightgreen\" value='1' onClick={()=>{setstatusindex(i)}}>Dumped</option>\r\n               <option className=\"button-lightred\" value='2' onClick={()=>{setstatusindex(i)}}>Cancelled</option>\r\n           </select>\r\n             )}\r\n\r\n            </td>\r\n            <td className=\"text-charcoal fw-bold text-center\">\r\n              <button className=\"btn p-0 m-0\" onClick={() => { setindex(i); toggle_peidw(); }} > <img src={ process.env.PUBLIC_URL + \"/images/archivebox.png\" } alt=\"displaying_image\" className=\"ms-1 img-fluid\" /> </button>\r\n            </td>\r\n            <td >\r\n               {i == index ? ( \r\n                <>\r\n                <div className=\"backdrop\"></div>\r\n                <section className={` position-absolute d-${i == index ? peidw : \"none\" } border border-1 start-0 mx-auto end-0 bg-seashell rounded-4 p-0 m-0`} style={{zIndex:'10', top: \"0\",width:'70vh',height: \"40vh\" }}>\r\n                <DumpItemDetails dumpsarr={dumpsarr[i]} id={\"D-\" + item.id} toggle_peidw={toggle_peidw} />\r\n                </section>\r\n               </>\r\n                ) : ( <></> )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n\r\n       ) : (\r\n         <tbody className=\"text-center position-relative p-0 m-0 \" style={{ minHeight: \"55vh\" }} >\r\n           <tr className=\"\">\r\n             <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\">\r\n               No Dumps\r\n             </td>\r\n           </tr>\r\n         </tbody>\r\n       )}\r\n     </table>\r\n   </div>\r\n   <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n     <ReactPaginate\r\n       previousLabel={\"Previous\"}\r\n       nextLabel={\"Next\"}\r\n       breakLabel={\". . .\"}\r\n       pageCount={pages}\r\n       marginPagesDisplayed={3}\r\n       pageRangeDisplayed={2}\r\n       onPageChange={GETDumpList}\r\n       containerClassName={\"pagination\"}\r\n       pageClassName={\"page-item text-charcoal\"}\r\n       pageLinkClassName={ \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\" }\r\n       previousClassName={\"btn button-charcoal-outline me-2\"}\r\n       previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n       nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n       breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n       activeClassName={\"active\"}\r\n     />\r\n   </div>\r\n </div>\r\n <section className={` position-absolute bottom-0 start-0 mx-auto end-0 bg-seashell border border-1 shadow rounded-2 d-${npef}`} style={{minHeight:'70vh',height:'70vh',width:'60vh'}} >\r\n   {\r\n     <NewDumpForm toggle_npef={toggle_npef} GETDumpList={GETDumpList} />\r\n   }\r\n </section>\r\n</>\r\n  )\r\n}\r\n\r\nfunction DumpItemDetails(props){\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  const [qr, setqr] = useState(\"none\");\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst) || igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0\">\r\n        <h5 className=\"text-center pt-3 text-charcoal\">\r\n          {props.id} Dump Item Details\r\n        </h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={props.toggle_peidw} aria-label=\"Close\" ></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div className=\" position-relative searchbutton\" style={{ top: \"0.25rem\", right: \"1rem\" }} >\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\" }`} onClick={() => { setindex(i); }} > {data} </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" value={Taxon ? Taxon : \"\"} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true); }} />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ height:\"100%\" }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Stock ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className=\"border p-0 m-0 px-1\" > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total </th>\r\n            </tr>\r\n          </thead>\r\n          {props.dumpsarr.medicines && props.dumpsarr.medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.dumpsarr.medicines.map((item, _key) => (\r\n                <tr className=\"border align-middle\" key={_key}>\r\n                  <td className=\"border align-middle\"> {item.medicies_stocks_id && item.medicies_stocks_id !== undefined ? \"m\"+item.medicies_stocks_id : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.medicine.display_name !== undefined ? item.medicine_details.medicine.display_name : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.batch_no !== undefined ? item.medicine_details.batch_no : \"N/A\"}</td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.expiry_date !== undefined ? reversefunction(item.medicine_details.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.mrp !== undefined ? \"₹\"+item.medicine_details.mrp : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.rate !== undefined ? \"₹\"+item.medicine_details.rate : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.discount !== undefined ?  item.medicine_details.discount: \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details && item.medicine_details.trade_discount !== undefined ?  item.medicine_details.trade_discount: \"N/A\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_details && item.medicine_details.SGST_rate ? Number( item.medicine_details.SGST_rate) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_details && item.medicine_details.SGST ? (Number(item.medicine_details.SGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_details && item.medicine_details.CGST_rate ? Number(item.medicine_details.CGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_details && item.medicine_details.CGST ? (Number(item.medicine_details.CGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_details && item.medicine_details.IGST_rate ? Number(item.medicine_details.IGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.medicine_details && item.medicine_details.IGST ? (Number(item.medicine_details.IGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxPercent(item.medicine_details.CGST_rate , item.medicine_details.SGST_rate, item.medicine_details.IGST_rate)} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxRate(item.medicine_details.CGST,item.medicine_details.SGST,item.medicine_details.IGST, item.qty)} </td>\r\n                  <td className=\"border align-middle\"> {item.medicine_details.cost ?\"₹\"+item.medicine_details.cost  : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n  \r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold\">No Medicines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ height:'100%' }} >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Stock ID </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Item Name </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Batch No. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Expiry Date </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> MRP{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Rate{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Qty. </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Disc% </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Trade Disc% </th>\r\n              <th colspan={Taxon == true ? \"8\" : \"2\"} scope=\"col-group\" className={`border p-0 m-0 px-1`} > Total Tax </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Cost{\" \"} </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\"> Total{\" \"} </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > CGST </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > SGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\" }`} > IGST{\" \"} </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total% </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}> Total{\" \"} </th>\r\n            </tr>\r\n          </thead>\r\n          {props.dumpsarr.vaccines &&\r\n            props.dumpsarr.vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.dumpsarr.vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border align-middle\"> {item.vaccine_stocks_id  && item.vaccine_stocks_id !== undefined ? \"v\"+item.vaccine_stocks_id : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details  && item.vaccine_details.vaccine.name !== undefined ? item.vaccine_details.vaccine.name : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details  && item.vaccine_details.batch_no !== undefined ? item.vaccine_details.batch_no : \"N/A\"}</td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details  && item.vaccine_details.expiry_date !== undefined ? reversefunction(item.vaccine_details.expiry_date) : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details  && item.vaccine_details.mrp !== undefined ? \"₹\"+item.vaccine_details.mrp : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details  && item.vaccine_details.rate !== undefined ? \"₹\"+item.vaccine_details.rate : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.qty ? item.qty : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details && item.vaccine_details.discount !== undefined ?  item.vaccine_details.discount: \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details && item.vaccine_details.trade_discount !== undefined ?  item.vaccine_details.trade_discount: \"N/A\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_details && item.vaccine_details.SGST_rate ? Number( item.vaccine_details.SGST_rate) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_details && item.vaccine_details.SGST ? (Number(item.vaccine_details.SGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_details && item.vaccine_details.CGST_rate ? Number(item.vaccine_details.CGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_details && item.vaccine_details.CGST ? (Number(item.vaccine_details.CGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_details && item.vaccine_details.IGST_rate ? Number(item.vaccine_details.IGST_rate ) : \"\"} </td>\r\n                  <td className={`border align-middle d-${Taxon == true ? \"\" : \"none\" }`} > {item.vaccine_details && item.vaccine_details.IGST ? (Number(item.vaccine_details.IGST) * Number(item.qty)).toFixed(2) : \"\"} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxPercent(item.vaccine_details.CGST_rate , item.vaccine_details.SGST_rate, item.vaccine_details.IGST_rate)} </td>\r\n                  <td className=\"border align-middle\"> {TotalTaxRate(item.vaccine_details.CGST,item.vaccine_details.SGST,item.vaccine_details.IGST, item.qty)} </td>\r\n                  <td className=\"border align-middle\"> {item.vaccine_details.cost ?\"₹\"+item.vaccine_details.cost  : \"N/A\"} </td>\r\n                  <td className=\"border align-middle\"> {item.total_amount ? item.total_amount : \"N/A\"} </td>\r\n\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\"fw-bold text-center\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NewDumpForm(props){\r\n\r\n  const url = useContext(URL)\r\n  const medicinesref = useRef(null)\r\n  const stockref = useRef(null)\r\n  const cliniclist = useContext(Clinic)\r\n  const currentDate = useContext(TodayDate);\r\n  const clinicid = localStorage.getItem('ClinicId')\r\n  const [channel,setchannel]=useState(\"\")\r\n  const [channelname,setchannelname]=useState()\r\n  const [dumpdate,setdumpdate]=useState(currentDate)\r\n  const [stage1, setstage1] = useState('block')\r\n  const [stage2, setstage2] = useState('none')\r\n  const [loadsearch,setloadsearch]=useState(false)\r\n  const [itemsearch, setitemsearch] = useState();\r\n  const [itemname, setitemname] = useState();\r\n  const [itemid, setitemid] = useState();\r\n  const [itemtype, setitemtype] = useState();\r\n  const [qty,setqty] =useState();\r\n  const [tableindex, settableindex] = useState()\r\n  const [products, setproducts] = useState([]);\r\n  const [SelectedProducts, setSelectedProducts] = useState([]); \r\n  const [load,setload]=useState(false)\r\n  const [Grandtotal, setGrandtotal] = useState();\r\n  const toggleStage1 = () => {\r\n    if (stage1 == 'block') {\r\n      setstage1('none')\r\n    }\r\n    if (stage1 == 'none') {\r\n      setstage1('block')\r\n    }\r\n  }\r\n\r\n  const toggleStage2 = () => {\r\n    if (stage2 == 'block') {\r\n      setstage2('none')\r\n    }\r\n    if (stage2 == 'none') {\r\n      setstage2('block')\r\n    }\r\n  }\r\n  const Go_Back = () => {\r\n    if (stage2 === 'block') { \r\n      toggleStage2()\r\n      toggleStage1()\r\n    }\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Transfer Out`,\r\n      `Do you surely want to do the following Dump `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveDump();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  const SaveDump = async () => {\r\n    let MedId = [];\r\n    let Type = [];\r\n    let quantity = [];\r\n    for (let i = 0; i < SelectedProducts.length; i++) {\r\n      Type.push(SelectedProducts[i].type ? SelectedProducts[i].type : \"\");\r\n      MedId.push( SelectedProducts[i].productid ? SelectedProducts[i].productid : \"\" );\r\n      quantity.push(SelectedProducts[i].qtytoTransfer ? Number(SelectedProducts[i].qtytoTransfer) : \"\");\r\n    }\r\n    var Data = {\r\n      location_id:clinicid,\r\n      dump_date:dumpdate,\r\n      channel: channel, \r\n      dump_date: dumpdate,\r\n      total_amount:Grandtotal,\r\n      items: MedId, \r\n      items_type: Type, \r\n      qty: quantity\r\n     }\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/dump/stocks/add`, Data).then((response) => {\r\n        setload(false);\r\n        props.GETDumpList();\r\n        setload(false);\r\n        props.toggle_npef();\r\n        if (response.data.status == true) {\r\n          Notiflix.Notify.success(response.data.message);\r\n        } else {\r\n          Notiflix.Notify.warning(response.data.message);\r\n        }\r\n        resetfields()\r\n      });\r\n    } catch (e) {\r\n      setload(false);\r\n      Notiflix.Notify.warning(e.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    CalGrandttl();\r\n  }, [SelectedProducts]);\r\n\r\n  function AddProducts(data) {\r\n    let T = \"\";\r\n    if (data.vaccine_brand_id) {\r\n      T = \"v\";\r\n    } else {\r\n      T = \"m\";\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      type: data.type ? data.type : T,\r\n      avlstock: data.current_stock,\r\n      qtytoTransfer: '',\r\n      mrp: data.mrp,\r\n    }\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails]);\r\n    } else {\r\n      setSelectedProducts((prevState) => [...prevState, ProductDetails]);\r\n    }\r\n  }\r\n  async function DeleteProduct(productid) {\r\n    let obj = [];\r\n    obj.push(\r\n      SelectedProducts.filter(function (e) {\r\n        return e.productid !== productid;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setSelectedProducts(obj);\r\n  }\r\n  const resetfields = async () => {\r\n    setdumpdate()\r\n    setchannelname()\r\n    setchannel()\r\n    setSelectedProducts([])\r\n  };\r\n\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios.get(`${url}/stock/list?&location_id=${clinicid}&search=${search}`).then((response) => {\r\n        let medicines = [];\r\n        let vaccines = [];\r\n        let items = [];\r\n        medicines.push(\r\n          response.data.data.medicines ? response.data.data.medicines : []\r\n        );\r\n        vaccines.push(\r\n          response.data.data.vaccines ? response.data.data.vaccines : []\r\n        );\r\n        items = medicines.concat(vaccines);\r\n        items = items.flat();\r\n        setitemsearch(items);\r\n        setloadsearch(false);\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = \"block\";\r\n        } else {\r\n          medicinesref.current.style.display = \"none\";\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  }\r\n\r\n  function AddProducts(data) {\r\n    let T = \"\";\r\n    if (data.vaccine_brand_id) {\r\n      T = \"v\";\r\n    } else {\r\n      T = \"m\";\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      type: data.type ? data.type : T,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      avlstock: data.current_stock,\r\n      qtytoTransfer: '',\r\n      mrp: data.mrp,\r\n    };\r\n\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails]);\r\n    } else {\r\n      setSelectedProducts((prevState) => [...prevState, ProductDetails]);\r\n    }\r\n  }\r\n  function CalTotalAmount(qty, mrp) {\r\n    let cost = mrp;\r\n    if (!qty) {\r\n      return 0;\r\n    } else if (qty == 1 || qty =='1') {\r\n      mrp = Number(mrp);\r\n      return mrp;\r\n    } else {\r\n      cost = Number(mrp) * Number(qty);\r\n      cost = cost.toFixed(2);\r\n      return cost;\r\n    }\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0;\r\n    SelectedProducts.map((data) => (ttl += Number(data.totalamt)));\r\n    setGrandtotal(ttl);\r\n  }\r\n\r\n\r\n  return(\r\n    <section className=\"position-relative\" style={{minHeight:'100%'}}>\r\n      <h5 className=\"text-center text-charocal fw-bold pt-2 shadow-sm pb-2\">New Dump</h5> \r\n      <button className={`btn btn-back position-absolute start-0 top-0 ms-2 d-${stage1 == 'block' ? 'none' : 'block'}`} onClick={() => { Go_Back() }}   ></button>\r\n      <button type=\"button\" className=\"btn-close closebtn m-auto mt-2 position-absolute top-0 end-0 me-2 mt-2\" onClick={props.toggle_npef} aria-label=\"Close\" ></button>\r\n      <div className={`stage1 d-${stage1}`} style={{minHeight:'90%'}}>\r\n      <div className=\"row p-0 m-0 mt-4 ms-3 align-items-end align-self-end\">\r\n          <div className=\"col-12 clinics bg-seashell align-self-center border-0 ps-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicid == data.id ? 'block' : 'none'} `}>\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img src={process.env.PUBLIC_URL + '/images/location.png'}  />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold mt-1\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div></div>\r\n                        ))\r\n                    }\r\n                </div>\r\n      </div>\r\n      <div className=\"row p-0 m-0 mt-3 ms-3 \">\r\n        <div className=\"col-5\">\r\n        <div className=\"text-charcoal75 fw-bold\" htmlFor=\"\">Select Channel</div>\r\n        <div className=\"dropdown \">\r\n            <button className=\" button button-pearl text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> {channelname?channelname:\"Select Channel\"} </button>\r\n            <ul className=\"dropdown-menu p-2 bg-pearl border-0 shadow-sm\" >\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" onClick={() => { setchannel(1);setchannelname(\"Pharmacy\") }}>Pharmacy </li>\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder py-2\" onClick={() => { setchannel(2);setchannelname(\"Clinic\") }}>Clinic </li>\r\n            </ul>\r\n          </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n            <div className=\"text-charcoal75 fw-bold\" htmlFor=\"\">Dump Date</div>\r\n              <input type=\"date\" className=\"button button-pearl fw-bolder tet-charcoal \" onChange={(e)=>{setdumpdate(e.target.value)}} value={dumpdate?dumpdate:currentDate}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 position-absolute bottom-0 bg-pearl bottom_bar\">\r\n          <div className=\"row p-0 m-0 py-3 justify-content-end\">\r\n            <div className=\"col-auto\">\r\n            <button className=\"button button-charcoal\" onMouseDown={() => { toggleStage2(); }} onMouseUp={() => { toggleStage1() }} >Add Items</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div className={`stage2 d-${stage2}`}>\r\n          <div className=\"row p-0 m-0 align-items-end align-self-end\">\r\n            <div className=\"col-auto\">\r\n                  <input className=\"form-control fw-bold border-charcoal75 border-2 rounded-1 bg-seashell\" placeholder=\"Search Product by Name\" value={itemname ? itemname : \"\"} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemid(); setproducts(); stockref.current.style.display = \"none\"; }} />\r\n                  <div ref={medicinesref} className=\"position-absolute rounded-1 mt-1\" style={{ Width: \"max-content\", zIndex: \"1\" }} >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className=\"rounded-1 p-1 bg-pearl\">\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span>\r\n                            </div>\r\n                          </div>\r\n                        ) : loadsearch == false && itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-1 p-1\"> Oops! Not Avaliable </div>\r\n                        ) : (\r\n                          <div className={`rounded-4 scroll border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? \"block\" : \"none\"}`} style={{ height: '30vh' }} >\r\n                            <p className={`text-start p-2 position-sticky top-0 bg-pearl fw-bold text-charcoal75 ms-2`} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                            {\r\n                              itemsearch.map((data, i) => (\r\n                                <div style={{ cursor: \"pointer\", Width: \"10rem\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} text-start fw-bold p-2 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = \"block\"; }} > {data.display_name ? data.display_name : data.name} <span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span> </div>\r\n                              ))\r\n                            }\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        <div className=\"bg-seashell\"></div>\r\n                      )}\r\n                  </div>\r\n                  <div ref={stockref} className={`position-absolute start-50 mt-1 bg-pearl scroll scroll-y align-self-center rounded-2 border border-1 p-2 d-${products && products.stock_info && products.stock_info !== undefined ? \"block\" : \"none\"}`} style={{ zIndex: \"2\", width: \"10rem\", 'min-height': \"30vh\", }} >\r\n                    <p className={`text-start fw-bold text-charcoal75`} style={{ fontSize: \"0.8rem\" }} > {products && products.stock_info !== undefined ? products.stock_info.length : \"\"}{\" \"} Batch Stocks </p>\r\n                    {\r\n                      products && products.length != 0 ? (\r\n                        products.stock_info.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-white fw-bold p-2\">Oops! Not Available</div>\r\n                        ) : (\r\n                          products.stock_info.map((data, i) => (\r\n                            <div style={{ cursor: \"pointer\", Width: \"max-content\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} border-bottom text-wrap`} onClick={() => { AddProducts(data); setitemname(); setitemid(); setproducts(); setitemsearch(); }} >\r\n                              <p className=\"text-start m-0 p-0 fw-bold\">{itemname}</p>\r\n                              <p className=\"text-start p-0 m-0 \"> BatchNo. -{\" \"} {data.batch_no && data.batch_no !== null ? data.batch_no : \"\"} </p>\r\n                              <p className=\"text-start p-0 m-0 \"> Stock -{\" \"} {data.current_stock && data.current_stock ? data.current_stock : \"\"} </p>\r\n                              <p className=\"text-start p-0 m-0 \"> Expiry Date -{\" \"} {data.expiry_date ? reversefunction(data.expiry_date) : \"\"} </p>\r\n                            </div>\r\n                          ))\r\n                        )\r\n                      ) : (\r\n                        <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                      )\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                  </div>\r\n       \r\n            </div>\r\n          </div>\r\n     \r\n                <div className=\"container-fluid p-0 m-0 mt-2\">\r\n                <table className=\"table p-0 m-0\">\r\n                  <thead className=\"p-0 m-0\">\r\n                    <tr className={`p-0 m-0 `}>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Item ID </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Item Name </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Mrp </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Avl.Stock </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Qty To Dump </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Total </th>\r\n                      <th className=\"p-0 m-0 px-2 text-charcoal75\" rowSpan=\"2\"> Delete </th>\r\n                    </tr>\r\n                  </thead>\r\n                  {SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                    <tbody className=\"p-0 m-0\">\r\n                      {\r\n                      SelectedProducts.map((data) => (\r\n                        <tr className={`p-0 m-0 align-middle text-charcoal fw-bold`} >\r\n                          <td>{data.type} {data.productid} </td>\r\n                          <td>{data.product}</td>\r\n                          <td>{data.mrp}</td>\r\n                          <td>{data.avlstock}</td>\r\n                          <td>\r\n                            <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell\" value={data.qtytoTransfer ? data.qtytoTransfer : \"\"} onChange={(e) => { e.target.value <= data.avlstock ? (data.qtytoTransfer = e.target.value) : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\"); data.totalamt = CalTotalAmount(data.qtytoTransfer, data.mrp); setSelectedProducts((prevState) => [...prevState]); }} />{\" \"}\r\n                          </td>\r\n                          <td>{data.totalamt}</td>\r\n                          <td>\r\n                            <button className=\"btn p-0 m-0\" onClick={() => { DeleteProduct(data.productid); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"images/minus.png\"} />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"p-0 m-0 position-relative\">\r\n                      <tr className=\"p-0 m-0\">\r\n                        <td className=\"p-0 m-0 position-absolute text-charcoal75 fw-bold text-center start-0 end-0\"> No Product Added </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )}\r\n                </table>\r\n                </div>\r\n                     \r\n        <div className=\"container-fluid p-0 m-0 position-absolute bottom-0 bg-pearl bottom_bar\">\r\n          <div className=\"row p-0 m-0 py-3 justify-content-between align-items-center align-self-center\">\r\n            <div className=\"col-auto\">\r\n              <label className=\"fw-bolder text-charcoal75\" htmlFor=\"\">Grand Total</label>\r\n              <div className=\"col-auto \">\r\n              <h5 className=\"fw-bolder text-charcoal\">₹{Grandtotal }</h5>\r\n              </div>\r\n          \r\n            </div>\r\n            <div className=\"col-auto\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n            <button className=\"button button-charcoal\"onClick={()=>confirmmessage()} >Save Dump</button>\r\n            )\r\n            }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\nexport { Purchasesection }\r\nexport { Purchaseentrysection }\r\nexport { PEitemdetailssection }\r\nexport { Stocksection}\r\nexport { Listsection}\r\nexport{Transfersection}\r\nexport {Dumpsection}","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Bill.jsx",["1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216"],[],"import React, { useState, useEffect, useContext, useRef,useCallback,useDebounceEffect } from \"react\";\r\nimport { URL } from \"../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport \"../../css/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport {ReactCrop } from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport '../../css/bootstrap.css'\r\nimport Webcam from 'react-webcam'\r\nimport { Get_Document } from \"./fetch_apis\";\r\nconst Bill = (props) => {\r\n  const url = useContext(URL);\r\n  localStorage.setItem('appointmentid',props.appointmentid)\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const Charges = {\r\n    description: \"\",\r\n    amount: 0,\r\n    discount: 0,\r\n    cgst: 0,\r\n    sgst: 0,\r\n    gross_amount: 0,\r\n    id: \"\",\r\n  };\r\n  const paymentmethoddetails = {\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  };\r\n  //Advance payments\r\n  const [loadadvancepayments, setloadadvancepayments] = useState(false);\r\n  const [advancepayments, setadvancepayments] = useState();\r\n\r\n  //ExtraCharge\r\n  const [extrachargecount, setextrachargecount] = useState([{\r\n    description: \"\",\r\n    amount: 0,\r\n    discount: 0,\r\n    cgst: 0,\r\n    sgst: 0,\r\n    gross_amount: 0,\r\n    id: \"\",\r\n  }]);\r\n\r\n  //Bill\r\n  const [constext, setconstext] = useState(\"\");\r\n  const [docdiscount, setdocdiscount] = useState(0);\r\n  const [coupondiscount, setcoupondiscount] = useState(0);\r\n  const [aartasdiscount, setaartasdiscount] = useState(0);\r\n  const [AtC, setAtC] = useState(0);\r\n  const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee);\r\n  const [SGST, setSGST] = useState();\r\n  const [CGST, setCGST] = useState();\r\n  const [paymentmethods, setpaymentmethods] = useState([{\r\n    paymentmethod: \"\",\r\n    amount: '',\r\n  }]);\r\n  const [load, setload] = useState();\r\n  const [ischecked, setischecked] = useState();\r\n\r\n\r\n  async function AddExtraCharges() {\r\n    let extracharges = [];\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id) {\r\n        for ( let j = 0; j < props.appointmentdata[i].other_charges.length; j++ ) {\r\n          extracharges.push({\r\n            description: props.appointmentdata[i].other_charges[j].description != null ? props.appointmentdata[i].other_charges[j].description : \"N/A\",\r\n            amount: props.appointmentdata[i].other_charges[j].total_amount != null ? props.appointmentdata[i].other_charges[j].total_amount : 0,\r\n            discount: props.appointmentdata[i].other_charges[j].discount != null ? props.appointmentdata[i].other_charges[j].discount : 0,\r\n            cgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0, sgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n            gross_amount: props.appointmentdata[i].other_charges[j].final_amount && props.appointmentdata[i].other_charges[j].final_amount !== null ? props.appointmentdata[i].other_charges[j].final_amount : \"\",\r\n            id: props.appointmentdata[i].other_charges[j].id && props.appointmentdata[i].other_charges[j].id != null ? props.appointmentdata[i].other_charges[j].id : \"\",\r\n          });\r\n        }\r\n        setaartasdiscount(props.appointmentdata[i].aartas_discount);\r\n        setdocdiscount(props.appointmentdata[i].doc_discount);\r\n        setconstext(props.appointmentdata[i].cons_text);\r\n      }\r\n    }\r\n    if(extracharges.length>0){\r\n      setextrachargecount(extracharges);\r\n    }else{\r\n      setextrachargecount([Charges])\r\n    }\r\n  }\r\n  async function AddPaymentMethods() {\r\n    let Payments = [];\r\n    let amounts = [];\r\n    let allamounts = [];\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id && props.appointmentdata[i].payment_method_details) {\r\n        Payments.push(Object.keys(JSON.parse(props.appointmentdata[i].payment_method_details)));\r\n        amounts.push(Object.values(JSON.parse(props.appointmentdata[i].payment_method_details)));\r\n      }\r\n    }\r\n    let paymentobj = [];\r\n    let p = {\r\n      paymentmethod: \"\",\r\n      amount: 0,\r\n    };\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(\r\n          (p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n        );\r\n      }\r\n      if(allamounts.length>0){\r\n        setpaymentmethods(allamounts);\r\n      }else{\r\n        setpaymentmethods([paymentmethoddetails]);\r\n      }\r\n    \r\n    }\r\n\r\n    // paymentmethods.push(paymentobj);\r\n  }\r\n\r\n  useEffect(() => {\r\n    AddExtraCharges()\r\n    AddPaymentMethods();\r\n  }, [props.billform])\r\n\r\n  useEffect(() => {\r\n      AddExtraCharges()\r\n  }, [])\r\n\r\n  async function DeleteExtraCharges(i) {\r\n    if (extrachargecount[i].id) {\r\n      setextrachargecount([]);\r\n      await axios\r\n        .post(`${url}/appointment/delete/extra/charges`, {\r\n          id: extrachargecount[i].id,\r\n        })\r\n        .then((response) => {\r\n          setextrachargecount([]);\r\n          extrachargecount.splice(i, i);\r\n          Notiflix.Notify.success(response.data.message);\r\n          props.Appointmentlist();\r\n        });\r\n    } else {\r\n      extrachargecount.splice(i, i);\r\n    }\r\n  }\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i);\r\n  }\r\n  function Calculate_gst(amount, discount, cgst, sgst) {\r\n    setextrachargecount((prevState) => [...prevState]);\r\n    let AMOUNT = amount ? amount : 0;\r\n    let DISCOUNT = discount ? discount : 0;\r\n    let CGST = cgst ? cgst : 0;\r\n    let SGST = sgst ? sgst : 0;\r\n    let total = AMOUNT - DISCOUNT;\r\n    CGST = ((CGST + SGST) * total) / 100;\r\n    total = total + CGST;\r\n    total = total.toFixed(2);\r\n    return total;\r\n  }\r\n  function Get_total_Seperate_gsts() {\r\n    let grosstotal = [];\r\n    let total = 0;\r\n    for (let i = 0; i < extrachargecount.length; i++) {\r\n      grosstotal.push( (Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2);\r\n    }\r\n    grosstotal.forEach((item) => {\r\n      total += item;\r\n    });\r\n    total = total.toFixed(2);\r\n    return total;\r\n  }\r\n  function Get_Grand_Total() {\r\n    let total = 0;\r\n    let discounts =\r\n      Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount);\r\n    extrachargecount.map((data) => (total += Number(data.gross_amount)));\r\n    total = total + Number(AddConsAmt) - discounts;\r\n    total = total.toFixed(2);\r\n    // if (Addcons == true) {\r\n    //   total = Number(total) + Number(ConsumableAmount())\r\n    // } else {\r\n    //   total = total\r\n    // }\r\n    return total;\r\n  }\r\n  function Total_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      for (let i = 0; i < paymentmethods.length; i++) {\r\n        if(paymentmethods[i].amount){\r\n          totalarr.push(Number(paymentmethods[i].amount));\r\n        }\r\n      }\r\n      totalarr.forEach((item) => {\r\n        total += Number(item);\r\n      });\r\n      total = total.toFixed(2)\r\n      return total;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  function Return_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    let Advance = 0;\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      totalarr.push(Number(paymentmethods[i].amount));\r\n    }\r\n    totalarr.forEach((item) => {\r\n      total += item;\r\n    });\r\n    if (total > Get_Grand_Total()) {\r\n      Advance = total - Get_Grand_Total();\r\n      return Advance;\r\n    } else {\r\n      return Advance;\r\n    }\r\n  }\r\n  async function SaveBill() {\r\n    let GrandTotal = Get_Grand_Total();\r\n    GrandTotal = Number(GrandTotal);\r\n    let Docfee = Number(props.doctorfee);\r\n    let DoctorDiscount = Number(docdiscount);\r\n    let AartasDiscount = Number(aartasdiscount);\r\n    let TotalCGST = Get_total_Seperate_gsts();\r\n    let TotalSGST = Get_total_Seperate_gsts();\r\n    let Description = [];\r\n    let TotalAmount = [];\r\n    let Discount = [];\r\n    let Grossamount = [];\r\n    let DiscountedAmount = [];\r\n    let ids = [];\r\n    let gstrate = [];\r\n    for (let i = 0; i < extrachargecount.length; i++) {\r\n      Description.push(extrachargecount[i].description);\r\n      TotalAmount.push(Number(extrachargecount[i].amount));\r\n      Discount.push(Number(extrachargecount[i].discount));\r\n      DiscountedAmount.push(\r\n        Number(extrachargecount[i].amount) -\r\n        Number(extrachargecount[i].discount)\r\n      );\r\n      if (extrachargecount[i].id) {\r\n        ids.push(Number(extrachargecount[i].id));\r\n      }\r\n      if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n        gstrate.push(\r\n          Number(extrachargecount[i].cgst + extrachargecount[i].sgst)\r\n        );\r\n      } else {\r\n        gstrate.push(0);\r\n      }\r\n      Grossamount.push(extrachargecount[i].gross_amount);\r\n    }\r\n    let Paymentmethod = [];\r\n    let Paymentmethodsvalue = [];\r\n    for (let j = 0; j < paymentmethods.length; j++) {\r\n      Paymentmethod.push(paymentmethods[j].paymentmethod);\r\n      Paymentmethodsvalue.push(Number(paymentmethods[j].amount));\r\n    }\r\n    let Data = {\r\n      appointment_id: props.appointmentid,\r\n      g_total_main: GrandTotal,\r\n      cons_fee: Docfee,\r\n      description: Description,\r\n      total_amount: TotalAmount,\r\n      discount: Discount,\r\n      amount: DiscountedAmount,\r\n      doc_dis: DoctorDiscount,\r\n      aartas_discount: AartasDiscount,\r\n      payment_method: Paymentmethod,\r\n      payment_method_main: Paymentmethod,\r\n      payment_method_details: Paymentmethodsvalue,\r\n      SGST: Number(TotalSGST),\r\n      CGST: Number(TotalCGST),\r\n      admin_id: Number(adminid),\r\n      cons_text: constext,\r\n      add_to_cart: AtC,\r\n      show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n      ot_id: ids,\r\n      gst_rate: gstrate,\r\n      final_amount: Grossamount,\r\n      status:props.Data.appointment_status\r\n    };\r\n    async function Payment() {\r\n      try {\r\n        setload(true);  \r\n        await axios\r\n          .post(`${url}/appointment/save/charges`, Data)\r\n          .then((response) => {\r\n            props.Appointmentlist();          \r\n            if(response.data.status == true){\r\n              Notiflix.Notify.success(response.data.message);  \r\n              toggleStage3()\r\n              toggleStage4()\r\n              setload(false);\r\n            }else{\r\n              setload(false);\r\n              Notiflix.Notify.failure(response.data.message);  \r\n            }\r\n          })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n    Payment();\r\n    toggleStage3()\r\n    toggleStage4()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(0);\r\n        SaveBill();\r\n      },\r\n      () => {\r\n        toggleStage3()\r\n        toggleStage4()\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  const AddtoCart = async () => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments in Cart`,\r\n      `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(1);\r\n        SaveBill();\r\n      },\r\n      () => {\r\n        setAtC(0);\r\n        SaveBill();\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  async function AdvancePayments() {\r\n    setloadadvancepayments(true);\r\n    axios.post(`${url}/advance/balance`, {\r\n        patient_id: props.patientid,\r\n      })\r\n      .then((response) => {\r\n          setadvancepayments(response.data.data);\r\n          setloadadvancepayments(false);\r\n      }).catch((e)=>{\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n  }\r\n  const ConsumableAmount = () => {\r\n    let consumables_amount = []\r\n    let Total = 0;\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id) {\r\n        for (let j = 0; j < props.appointmentdata[i].medicine_used.length; j++) {\r\n          consumables_amount.push(props.appointmentdata[i].medicine_used[j].total_amount)\r\n        }\r\n      }\r\n    }\r\n\r\n    consumables_amount.forEach((data) => (\r\n      Total += data\r\n    ))\r\n    Total = Total.toFixed(2)\r\n    return Total\r\n  }\r\n  useEffect(() => {\r\n    AdvancePayments();\r\n    ConsumableAmount();\r\n  }, []);\r\n  const [stage1, setstage1] = useState('block')\r\n  const toggleStage1 = () => {\r\n    if (stage1 == 'block') {\r\n      setstage1('none')\r\n    }\r\n    if (stage1 == 'none') {\r\n      setstage1('block')\r\n    }\r\n  }\r\n  const [stage2, setstage2] = useState('none')\r\n  const toggleStage2 = () => {\r\n    if (stage2 == 'block') {\r\n      setstage2('none')\r\n    }\r\n    if (stage2 == 'none') {\r\n      setstage2('block')\r\n    }\r\n  }\r\n  const [stage3, setstage3] = useState('none')\r\n\r\n  const toggleStage3 = () => {\r\n    if (stage3 == 'none') {\r\n      setstage3('block')\r\n    }\r\n    if (stage3 == 'block') {\r\n      setstage3('none')\r\n    }\r\n  }\r\n\r\n  const [stage4, setstage4] = useState('none')\r\n  const toggleStage4 = () => {\r\n    if (stage4 == 'none') {\r\n      setstage4('block')\r\n    }\r\n    if (stage4 == 'block') {\r\n      setstage4('none')\r\n    }\r\n  }\r\n  const Go_Back = () => {\r\n    if (stage2 === 'block') {\r\n      toggleStage2()\r\n      toggleStage1()\r\n    }\r\n    if (stage3 === 'block') {\r\n      toggleStage3()\r\n      toggleStage2()\r\n    }\r\n    if (stage4 === 'block') {\r\n      toggleStage4()\r\n      toggleStage3()\r\n    }\r\n  }\r\n    \r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods((prevState) => [...prevState, paymentmethoddetails]);\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails]);\r\n    }\r\n  }\r\n\r\n  function AddCharges() {\r\n    if (extrachargecount && extrachargecount.length > 0) {\r\n      setextrachargecount((prevState) => [...prevState, Charges]);\r\n    } else {\r\n      setextrachargecount([Charges]);\r\n    }\r\n  }\r\n\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        if(response.data.status == true){\r\n          Notiflix.Loading.remove()\r\n          Notiflix.Notify.success(response.data.message)\r\n          props.Appointmentlist();  \r\n          window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n        }else{\r\n          Notiflix.Loading.remove()\r\n          Notiflix.Notify.failure(response.data.message)\r\n        }    \r\n      }).catch(()=>{\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n  \r\n    }\r\n  }\r\n\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        if(response.data.status == true){\r\n          Notiflix.Notify.success(response.data.message)\r\n          props.Appointmentlist();  \r\n          window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n        }else{\r\n          Notiflix.Notify.failure(response.data.message)\r\n        }\r\n      }).catch((e)=>{\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          if(response.data.status == true){\r\n            Notiflix.Loading.remove()\r\n            Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n         \r\n          }else{\r\n            Notiflix.Loading.remove()\r\n            Notiflix.Notify.failure(response.data.message)\r\n          }\r\n\r\n        }).catch(()=>{\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    }\r\n\r\n  } \r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          if(response.data.status == true){\r\n            Notiflix.Loading.remove()\r\n            Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n    \r\n          }else{\r\n            Notiflix.Loading.remove()\r\n            Notiflix.Notify.failure(response.data.message)\r\n     \r\n          }\r\n        }).catch(()=>{\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  // const [OnWhatsapp,setOnWhatsapp] = useState()\r\n  // const On_Whatsapp = ()=>{\r\n  //   try{\r\n  //     axios.post(`${url}/check/contact/on/whatsapp`,{\r\n  //       phone_number:props.phone_number\r\n  //     }).then((response)=>{\r\n  //       setOnWhatsapp(response.data.data)\r\n  //     })\r\n  //   }catch(e){\r\n  //     Notiflix.Notify.failure(e.message)\r\n  //   }\r\n  // }\r\n\r\nconst togglecamera = ()=>{\r\n  window.open('/scan/prescription','_blank')\r\n}\r\nconst [prescriptions,setprescriptions] =useState([])\r\nconst [presload,setpresload] =useState(false)\r\n async function get_docs(){\r\n  setpresload(true)\r\n  const data = await Get_Document(props.appointmentid)\r\n  setprescriptions(data)\r\n  setpresload(false)\r\n  }\r\nuseEffect(()=>{\r\n  get_docs()\r\n  // On_Whatsapp()\r\n},[])\r\n\r\n\r\nreturn (\r\n    <>\r\n    <div className=\" position-relative rounded-2 bg-seashell\" style={{minHeight:'100%'}}>\r\n    <div className=\"shadow-sm\">\r\n      <h5 className=\"text-center fw-bold py-2\">{props.patientname} Bill</h5>\r\n      <button className={`btn btn-back position-absolute start-0 top-0 ms-2 d-${stage1 == 'block' ? 'none' : 'block'}`} onClick={() => { Go_Back() }}   ></button>\r\n      <button className=\"btn btn-close position-absolute end-0 top-0 me-2\" onClick={() => { props.CloseBillForm(); }}  ></button>\r\n    </div>\r\n    <div className={`stage1 d-${stage1}`}>\r\n               <div className=\"px-4 pt-4\">\r\n               <label className=\" text-charcoal fw-bolder mt-2 mb-3\">\r\n                 <input className=\"form-check-input me-1 \" type=\"checkbox\" checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />\r\n                 Add Consultation Amount\r\n               </label>\r\n               <div className=\"row p-0 m-0 justify-content-between\">\r\n                 <div className=\"col-4 ps-0 \">\r\n                   <label className=\"text-charcoal75 fw-bold\"> Doctor's Consultation Charge </label>\r\n                   <input className=\"form-control bg-seashell fw-bold\" disabled={true} value={AddConsAmt} />\r\n                 </div>\r\n                 <div className=\"col-8 pe-0 \">\r\n                   <label className=\"text-charcoal75 fw-bold\"> Consultation text </label>\r\n                   <input className=\"form-control bg-seashell fw-bold\" value={constext ? constext : \"\"} onChange={(e) => setconstext(e.target.value)} />\r\n                 </div>\r\n               </div>\r\n               <div className=\"mt-5 text-start\">\r\n                <h5 className=\"fw-bolder text-charcoal\">Discounts</h5>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-4 ps-0\">\r\n                    <label className=\"text-charcoal75 fw-bold\">Coupon</label>\r\n                    <input\r\n                      className=\"form-control fw-bold text-charcoal text-start\"\r\n                      disabled={true}\r\n                      value={coupondiscount ? coupondiscount : \"\"}\r\n                      onChange={(e) => setcoupondiscount(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <label className=\"text-charcoal75 fw-bold\">Doctor</label>\r\n                    <input className=\"form-control bg-seashell fw-bold text-charcoal text-start\" value={docdiscount ? docdiscount : \"\"} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <label className=\"text-charcoal75 fw-bold\">Aartas</label>\r\n                    <input className=\"form-control bg-seashell fw-bold text-charcoal text-start\" value={aartasdiscount ? aartasdiscount : \"\"} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n               </div>\r\n               \r\n        \r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 justify-content-between \">\r\n                <div className=\"col-4 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0  bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                  <button className=\"button button-charcoal \" onClick={()=>{toggleStage1();toggleStage2();}} >Extra Charges </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={`stage2 d-${stage2} scroll`}>\r\n                <div className=\"container-fluid text-start p-2\">\r\n                <div className=\"bg-seashell position-relative\">\r\n                  <div className=\"row p-0 m-0 align-items-center mb-2\">\r\n                    <div className=\"col-auto p-0 m-0 ps-2 pe-1\">\r\n                      <h5 className=\" p-0 m-0 text-charcoal fw-bolder\"> Extra Charges </h5>\r\n                    </div>\r\n                  </div>\r\n                  {props.isLoading ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    extrachargecount.map((data, i) => (\r\n                      <div className=\"container-fluid p-0 m-0\">\r\n                        <div className=\"row p-0 m-0 align-items-center\">\r\n                          <div className=\"col-10\">\r\n                          <div className=\"row p-0 m-0\">\r\n                          <div className=\"col-8 ps-0 ms-0\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\"> Description </label>\r\n                            <input className=\"form-control bg-seashell m-0 text-start fw-bold \" value={data.description ? data.description : \"\"} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\">\r\n                              Amount\r\n                            </label>\r\n                            <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.amount ? data.amount : \"\"} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          </div>\r\n                          <div className=\"row p-0 m-0 mt-1\">\r\n                          <div className=\"col-4 ms-0 ps-0\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\">\r\n                              Discount ₹\r\n                            </label>\r\n                            <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.discount ? data.discount : \"\"} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\"> GST % </label>\r\n                            <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.cgst && data.sgst ? data.cgst + data.sgst : \"\"} onChange={(e) => { data.cgst = e.target.value / 2; data.sgst = e.target.value / 2; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"col-4 p-0 align-self-end \">\r\n                            <div className=\"row p-0 m-0 \">\r\n                              <div className=\"col-6 p-0 m-0 fw-bold text-charcoal75 text-end\"> Amount: </div>\r\n                              <input type=\"number\" className=\"col-6 p-0 border-0 text-start bg-seashell m-0 ps-1 fw-bold text-burntumber\" style={{ letterSpacing: \"1px\" }} value={data.amount && data.discount ? data.amount - data.discount : \"\"} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                            </div>\r\n                            <div className=\"row p-0 m-0\">\r\n                              <div className=\"col-6 p-0 m-0 fw-bold text-charcoal75 text-end\"> incl. gst: </div>\r\n                              <input className=\"col-6 p-0 border-0 m-0 text-start bg-seashell ps-1 fw-bold text-burntumber\" style={{ letterSpacing: \"1px\" }} value={data.gross_amount ? data.gross_amount : \"\"} />\r\n                            </div>\r\n                          </div>\r\n                          </div>\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                            <button className={`btn btn-sm p-0 m-0 d-${i==0?'none':'block'}`} onClick={() => { DeleteExtraCharges(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className=\"img-fluid p-0 m-0\" style={{width:'1.5rem'}} />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n           \r\n                      </div>\r\n                    ))\r\n                  )}\r\n                               <div className={`container-fluid text-center mt-2  `}>    \r\n                        <button className=\"btn p-0 m-0 py-0\" onClick={() =>AddCharges()} >\r\n                        <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{width:'1.8rem'}} />\r\n                      </button>\r\n            </div>\r\n                 \r\n                </div>\r\n              </div>\r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 \">\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                <label className=\"fw-bolder text-charcoal text-wrap text-start\"><small>SGST</small> </label>\r\n                <input className=\"form-control rounded-1 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" disabled value={SGST ? SGST : \"₹\" +Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                <label className=\"fw-bolder text-charcoal text-wrap text-start\"><small>CGST</small></label>\r\n                <input className=\"form-control rounded-1 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" disabled value={CGST ? CGST : \"₹\" + Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\" col-3 d-flex justify-content-end ps-2\">\r\n                  <button className=\"button button-charcoal \" onClick={()=>{toggleStage2();toggleStage3();}} > Payments </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={`stage3 d-${stage3} scroll`}>\r\n\r\n            <div className=\" text-start position-relative px-3\">\r\n            <h5 className=\"text-charcoal fw-bolder text-start ps-1\">Payments</h5>\r\n            {\r\n              paymentmethods && paymentmethods !== undefined ? (\r\n                paymentmethods.map((data, i) =>\r\n                    <>\r\n                      <div className=\" mt-4\">\r\n                        <div className=\"row p-0 m-0 align-items-center\">\r\n                          <div className=\"col-10 ps-0\">\r\n                            <h6 className=\"text-charcoal75 fw-bold\">Enter Amount</h6>\r\n                            <input type=\"number\" placeholder=\"₹00\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} className=\"form-control rounded-1 fw-bold text-charocoal75 bg-seashell w-25 border-2\" />\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                            <button className={`btn btn-sm p-0 m-0 d-${i == 0 ? 'none' : 'block'}`} onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className=\"img-fluid\" style={{ width: \"1.5rem\" }}/>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div >\r\n                      <h6 className=\"text-charcoal75 fw-bold mt-2\">Select Payment Method</h6>\r\n                      <div className=\"d-flex flex-horizontal mt-2 scroll\" style={{minHeight:'min-content'}}>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Cash'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Cash' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Cash' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Cash</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Points'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Points' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Points' />\r\n                        <span>\r\n                        <h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Points<div className=\" text-success fw-bold\">{props.Data.patient.reward_points !=undefined  && props.Data.patient.reward_points.points_total!=undefined && props.Data.patient.reward_points.points_total !=null ? props.Data.patient.reward_points.points_total :0}</div></h6>\r\n                        </span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Adjust-Advance'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Adjust-Advance' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Adjust-Advance' />\r\n                        <span>\r\n                        <h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Adjust-Advance                {\r\n                      loadadvancepayments ? (\r\n                        <div className=\" py-2 pb-2 m-auto text-center\">\r\n                          <div class=\"spinner-border spinner-border-sm\" role=\"status\" >\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                        </div>\r\n                      ) : advancepayments ? (\r\n                        <div className=\"text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell\">\r\n                          {\"₹\" + advancepayments.advnace_total}\r\n                        </div>\r\n                      ) : (\r\n                        // <input className='form-control text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell' value= />\r\n                        <div className=\"text-success fw-bold\"> 0 </div>\r\n                      )}</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Card'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Card' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Card' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Card</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Paytm'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Paytm' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Paytm' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Paytm</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Phonepe'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Phonepe' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Phonepe' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Phonepe</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Razorpay'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Razorpay' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Razorpay' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Razorpay</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Wire-Transfer'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Wire-Transfer' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Wire-Transfer' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Wire-Transfer</h6></span>\r\n                      </div>\r\n                    </>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )\r\n            }\r\n            <div className={`container-fluid text-center mt-2  `}>    \r\n                  <button className=\"btn py-0\" onClick={AddMethods}>\r\n                    <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"1.8rem\" }} />\r\n                  </button>\r\n            </div>\r\n          </div>\r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 \">\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Amount Recieved</label>\r\n                  <div className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\"> {paymentmethods && paymentmethods.length > 0 ? \"₹\" + Total_Amount() : \"₹\" + 0} </div>\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start fw-bolder text-charcoal text-wrap text-start \">\r\n                 Extra Amount\r\n                 <div className=\"toolTip\">\r\n                 {\r\n                  Return_Amount() > 0 ?(\r\n                    <img src={process.env.PUBLIC_URL+'/images/info.png'} className=\"p-0 m-0 ms-2 img-fluid toolTip\" style={{width:'1rem'}}/>\r\n                  ):(<></>)\r\n                 }\r\n                <span className=\"tooltiptext\">Click to save it as Advance Payment</span>\r\n              </div>\r\n      \r\n                <div className=\"form-control rounded-1 fs-6 text-success text-start border-0 fw-bolder p-0 bg-pearl\">{Return_Amount() > 0 ? `+ ₹${Return_Amount()}` : \"₹\"+0} </div>\r\n                  </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                  <button className=\"button button-charcoal\" onClick={()=>{confirmmessage();}}> Bill & Prescription </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={`stage4 d-${stage4} scroll`} style={{minHeight:'57vh'}}>\r\n        <div className=\"container px-3\">\r\n        <h5 className=\"text-charcoal fw-bold mb-3\">Bill & Prescription</h5>\r\n        <div className=\"container p-0 m-0 mb-3\">\r\n          <button className=\"btn p-0 m-0 justify-content-end fw-bold\" onClick={()=>get_docs()}><img className='img-fluid' src={process.env.PUBLIC_URL+'/images/refresh.png'}/>Referesh Prescriptions</button>\r\n            <div className=\"row p-0 m-0 bg-pearl rounded-2\r\n            \">\r\n              {\r\n                prescriptions?(\r\n                  presload ?(\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                      <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                  ):(\r\n                    prescriptions && prescriptions.map((Data,i)=>(\r\n                      <div className=\"col \"key={i}><img src={`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/assets/scanned_documents/${Data.file}`} className=\"img-fluid\" style={{width:'8rem'}}/></div>\r\n                    ))\r\n                  )\r\n           \r\n                ):(\r\n                  <div className=\"text-center text-charcoal75 py-4 fw-bold d-flex align-items-center justify-content-center\">No prescriptions Scanned</div>\r\n                )\r\n            \r\n              }\r\n            </div>\r\n        </div>\r\n\r\n            <button className=\"button button-charcoal\" onClick={()=>{togglecamera()}}>Scan Prescription</button>\r\n\r\n            <div className=\"row p-0 m-0 mt-4\">\r\n              <h6 className=\"fw-bold text-charcoal75 ps-0 ms-0\">Generate Bill & Prescription</h6>\r\n            <div className=\"col-auto ps-0 ms-0\">\r\n            <button className=\"button button-charcoal px-4\" onClick={()=>{Generate_Bill(props.appointmentid)}}>Bill</button>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n            <div className='vr rounded-1 align-self-center' style={{ padding: '0.8px' }}></div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n            <button className=\"button button-charcoal\" onClick={()=>{Generate_Prescription(props.appointmentid)}}>Prescription</button> \r\n            </div>\r\n            </div>\r\n          <div className=\"row p-0 m-0 mt-4\">\r\n            <h6 className=\"fw-bold text-charcoal75 ms-0 ps-0\">Send Bill and Prescription</h6>\r\n            <div className=\"row ps-0 ms-0\">\r\n              <div className={`col-12 ms-0 ps-0 mt-2 `}>\r\n                <div className=\"row ps-0 ms-0\">\r\n                <h6 className=\"ms-0 ps-0 text-charcoal fw-bold\">On WhatsApp <span className=\"ms-2 text-success\">{props.Data.whatsapp_sent==1?'(Already Sent on Whats App)':''}</span></h6>\r\n                  <div className=\"col-6 ms-0 ps-0\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{Send_On_WhatsApp(props.appointmentid, props.Data.patient.phone_number, 0)}}><img src={process.env.PUBLIC_URL+'/images/whatsapp.png'} className=\"img-fluid\" style={{width:'1.5rem'}}/>Bill</button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{Send_On_WhatsApp(props.appointmentid, props.Data.patient.phone_number, 1)}}><img src={process.env.PUBLIC_URL+'/images/whatsapp.png'} className=\"img-fluid\" style={{width:'1.5rem'}}/>Bill with Prescription</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 ms-0 ps-0 mt-2\">\r\n              <div className=\"row ps-0 ms-0\">\r\n                <h6 className=\"ms-0 ps-0 text-charcoal fw-bold\">On SMS</h6>\r\n                  <div className=\"col-6 ms-0 ps-0\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{Send_On_SMS(props.appointmentid, props.Data.patient.phone_number, 0)}}><img src={process.env.PUBLIC_URL+'/images/message.png'} className=\"img-fluid\" style={{width:'1.2rem'}}/>Bill</button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{ Send_On_SMS(props.appointmentid, props.Data.patient.phone_number, 1)}}><img src={process.env.PUBLIC_URL+'/images/message.png'} className=\"img-fluid\" style={{width:'1.2rem'}}/>Bill with Prescription</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 justify-content-between \">\r\n                <div className=\"col-4 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0  bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                  <button className=\"button button-charcoal \" onClick={()=>{props.setsingleload(0);props.Appointmentlist();props.CloseBillForm()}} > Done </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n  </div >\r\n  </>\r\n  );\r\n};\r\n\r\nexport { Bill };\r\n","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Exports.jsx",["1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293"],[],"import React, { useState, useEffect } from 'react'\r\nimport { ExportExcel } from '../features/ExportExcel'\r\n\r\nconst ExportPurchaseEntry = (props) => {\r\n    const [ExportPurchaseEntry, setExportPurchaseEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Purchase Entry'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakePurchaseEntryExport() {\r\n        if (props.purchaseentryarr.length !== 0) {\r\n            for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n                var vendorsitems = props.purchaseentryarr[i].medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost in Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.purchaseentryarr[i].vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccines && Data.vaccines.name && Data.vaccines.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.vaccines && Data.vaccines.hsn_code !== null ? Data.vaccines.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n\r\n            }\r\n\r\n            var obj2 = obj.flat()\r\n            setExportPurchaseEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseEntryExport()\r\n        }\r\n        func()\r\n    }, [props.purchaseentryarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ExportPurchaseEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportPurchaseEntry }\r\n\r\nconst ExportPurchaseReturn = (props) => {\r\n    const [ReturnEntry, setReturnEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Purchase Return'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakePurchaseReturnExport() {\r\n        if (props.purchasereturnarr.length !== 0) {\r\n            for (let i = 0; i < props.purchasereturnarr.length; i++) {\r\n                let distributor = props.purchasereturnarr[i].distributor.entity_name\r\n                let GST = props.purchasereturnarr[i].distributor.GSTIN_no\r\n                var vendorsitems = props.purchasereturnarr[i].purchase_medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': distributor,\r\n                    'GSTIN': GST,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.purchasereturnarr[i].purchase_vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': distributor,\r\n                    'GSTIN': GST,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount %': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc. %5': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n            var obj2 = obj.flat()\r\n            setReturnEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseReturnExport()\r\n        }\r\n        func()\r\n    }, [props.purchasereturnarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ReturnEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportPurchaseReturn }\r\n\r\nconst ExportSaleEntry = (props) => {\r\n    const [SaleEntry, setSaleEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Sale Entry'\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTaxPercent(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function TotalTax(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function taxableAmount(amt, cgst, sgst, igst) {\r\n        if (amt) {\r\n            amt = amt - (cgst + sgst + igst)\r\n            return amt\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    async function MakeSaleEntryExport() {\r\n        if (props.saleentryarr.length !== 0) {\r\n\r\n            var obj = []\r\n            for (let i = 0; i < props.saleentryarr.length; i++) {\r\n                let billid = props.saleentryarr[i].bill_id ? props.saleentryarr[i].bill_id : ''\r\n                let billdate = props.saleentryarr[i].bill_date ? reversefunction(props.saleentryarr[i].bill_date) : ''\r\n                let name = props.saleentryarr[i].patient.full_name !== null ? props.saleentryarr[i].patient.full_name : ''\r\n                let doctor = props.saleentryarr[i].doctor_name !== null ? props.saleentryarr[i].doctor_name : ''\r\n\r\n                var vendorsitems = props.saleentryarr[i].sale_medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'Bill ID': billid,\r\n                    'Name': name,\r\n                    'Doctor': doctor,\r\n                    // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': billdate,\r\n                    'Item ID': Data.medicine_stocks.id != null ? Data.medicine_stocks.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stocks.batch_no != null ? Data.medicine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.medicine_stocks.expiry_date) : '',\r\n                    'Rate': Data.medicine_stocks.rate != null ? Data.medicine_stocks.rate : '',\r\n                    'Cost': Data.medicine_stocks.cost != null ? Data.medicine_stocks.cost : '',\r\n                    'MRP': Data.medicine_stocks.mrp != null ? Data.medicine_stocks.mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'Disc. %': Data.discount != null ? Data.discount : '',\r\n                    'Taxable Amt': taxableAmount(Number(Data.total_amount), Number(Data.CGST), Number(Data.SGST), Number(Data.IGST)),\r\n                    'Total CGST': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'Total SGST': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'Total IGST': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total Tax ': TotalTax(Data.CGST, Data.SGST, Data.IGST) * Number(Data.qty),\r\n                    'Amount': Data.total_amount !== null ? Data.total_amount : '',\r\n                    'Grand Total': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.saleentryarr[i].sale_vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'Bill ID': billid,\r\n                    'Name': name,\r\n                    'Doctor': doctor,\r\n                    // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': billdate,\r\n                    'Item ID': Data.vaccine_stocks.id != null ? Data.vaccine_stocks.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.vaccine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n                    'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n                    'Cost': Data.vaccine_stocks.cost != null ? Data.vaccine_stocks.cost : '',\r\n                    'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'Disc. %': Data.discount != null ? Data.discount : '',\r\n                    'Taxable Amt': taxableAmount(Number(Data.total_amount), Number(Data.CGST), Number(Data.SGST), Number(Data.IGST)),\r\n                    'Total CGST': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'Total SGST': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'Total IGST': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total Tax ': TotalTax(Data.CGST, Data.SGST, Data.IGST) * Number(Data.qty),\r\n                    'Amount': Data.total_amount !== null ? Data.total_amount : '',\r\n                    'Grand Total': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n            var obj2 = obj.flat()\r\n            setSaleEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeSaleEntryExport()\r\n        }\r\n        func()\r\n    }, [props.saleentryarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={SaleEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportSaleEntry }\r\n\r\nconst ExportSaleReturn = (props) => {\r\n    const [ReturnEntry, setReturnEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Sale Returns'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakeSaleReturnExport() {\r\n        if (props.salereturnarr.length !== 0) {\r\n            for (let i = 0; i < props.salereturnarr.length; i++) {\r\n                let returndate = props.salereturnarr[i].return_date !== null ? reversefunction(props.salereturnarr[i].return_date) : ''\r\n                let seid = props.salereturnarr[i].sale_entry_id !== null ? 'P-' + props.salereturnarr[i].sale_entry_id : ''\r\n                let srid = props.salereturnarr[i].return_no !== null ? 'SR-' + props.salereturnarr[i].return_no : ''\r\n                let name = props.salereturnarr[i].sale_entry.patient.full_name !== null ? props.salereturnarr[i].sale_entry.patient.full_name : ''\r\n                let returnedamt = props.salereturnarr[i].grand_total !== null ? props.salereturnarr[i].grand_total : ''\r\n                var vendorsitems = props.salereturnarr[i].sale_medicines.map(Data => ({\r\n                    'Return No.': srid,\r\n                    'Name': name,\r\n                    'Type': 'Medicine',\r\n                    'SE ID': seid,\r\n                    // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n                    'Return Date': returndate,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stocks.batch_no != null ? Data.medicine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.medicine_stocks.expiry_date) : '',\r\n                    'MRP': Data.medicine_stocks.mrp != null ? Data.medicine_stocks.mrp : '',\r\n                    'Rate': Data.medicine_stocks.rate != null ? Data.medicine_stocks.rate : '',\r\n                    'Cost': Data.medicine_stocks.cost != null ? Data.medicine_stocks.cost : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'Returned Amount': returnedamt,\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.salereturnarr[i].sale_vaccines.map(Data => ({\r\n                    'Return No.': srid,\r\n                    'Name': name,\r\n                    'Type': 'Vaccine',\r\n                    'SE ID': seid,\r\n                    // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n                    'Return Date': returndate,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n                    'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n                    'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n                    'Cost': Data.vaccine_stocks.cost != null ? Data.vaccine_stocks.cost : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'Returned Amount': returnedamt,\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n            var obj2 = obj.flat()\r\n            setReturnEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeSaleReturnExport()\r\n        }\r\n        func()\r\n    }, [props.salereturnarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ReturnEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportSaleReturn }\r\n\r\nconst ExportTransferIn=(props)=>{\r\n    const [ExportTransferIn, setExportTransferIn] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + ' Transfer In '\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakeTransferInExport() {\r\n        if (props.transferinarr.length !== 0) {\r\n            for (let i = 0; i < props.transferinarr.length; i++) {\r\n                var vendorsitems = props.transferinarr[i].medicines.map(Data => ({\r\n                    'Type': 'Medicine', \r\n                    'TI ID': props.transferinarr[i].id != undefined ? \"TI-\" + props.transferinarr[i].id : '', \r\n                    'From Location' :props.transferinarr[i].from_location != undefined && props.transferinarr[i].from_location.title !=undefined ? props.transferinarr[i].from_location.title:'',\r\n                    'Channel' :props.transferinarr[i].channel !=undefined ? props.transferinarr[i].channel== 1 ? \"Pharmacy\" : \"Clinic\":'',\r\n                    'To Location' :props.transferinarr[i].to_location !== undefined && props.transferinarr[i].to_location.title !=undefined ? props.transferinarr[i].to_location.title:'',\r\n                    'Transfer Date': props.transferinarr[i].transfer_date!=undefined?reversefunction(props.transferinarr[i].transfer_date):\"\",\r\n                    'Item ID': Data.medicine_id != null ? Data.medicine_id : '',\r\n                    'Item Stock ID': Data.medicies_stocks_id != null ? Data.medicies_stocks_id : '',\r\n                    'Item Name': Data.medicine_stock_details.medicine.name && Data.medicine_stock_details.medicine.name !== null ? Data.medicine_stock_details.medicine.name : '',\r\n                    'HSN Code': Data.medicine_stock_details.medicine.hsn_code && Data.medicine_stock_details.medicine.hsn_code !== null ? Data.medicine_stock_details.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stock_details.batch_no && Data.medicine_stock_details.batch_no !== null ? Data.medicine_stock_details.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stock_details.expiry_date !== null ? reversefunction(Data.medicine_stock_details.expiry_date) : '',\r\n                    'MRP': Data.medicine_stock_details.mrp != null ? Data.medicine_stock_details.mrp : '',\r\n                    'Rate': Data.medicine_stock_details.rate != null ? Data.medicine_stock_details.rate : '',\r\n                    'Qty': Data.qty !==null ? Data.qty:'',\r\n                    'Discount':  Data.medicine_stock_details.discount != null ?  Data.medicine_stock_details.discount : '',\r\n                    'Trade Disc.':  Data.medicine_stock_details.trade_discount != null ?  Data.medicine_stock_details.trade_discount : '',\r\n                    'CGST in Rs': Number( Data.medicine_stock_details.CGST) * Number(Data.qty),\r\n                    'CGST %':  Data.medicine_stock_details.CGST_rate,\r\n                    'SGST in Rs': Number(Data.medicine_stock_details.SGST) * Number(Data.qty),\r\n                    'SGST %':  Data.medicine_stock_details.SGST_rate,\r\n                    'IGST in Rs': Number( Data.medicine_stock_details.IGST) * Number(Data.qty),\r\n                    'IGST %':  Data.medicine_stock_details.IGST_rate,\r\n                    'Total Tax': TotalTax( Data.medicine_stock_details.CGST,  Data.medicine_stock_details.SGST,  Data.medicine_stock_details.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate( Data.medicine_stock_details.CGST_rate,  Data.medicine_stock_details.SGST_rate, Data.medicine_stock_details.IGST_rate),\r\n                    'Cost in Rs':  Data.medicine_stock_details.cost,\r\n                    'Total Rs':  Data.medicine_stock_details.total_amount ?  Data.medicine_stock_details.total_amount : '',\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.transferinarr[i].vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'TO ID': props.transferinarr[i].id && props.transferinarr[i].id != null ? \"TO-\" + props.transferinarr[i].id : '',\r\n                    'Channel' :props.transferinarr[i].channel !=undefined ? props.transferinarr[i].channel== 1 ? \"Pharmacy\" : \"Clinic\":'', \r\n                    'From Location' : props.transferinarr[i].from_location!=undefined && props.transferinarr[i].from_location.title !=undefined ? props.transferinarr[i].from_location.title:'',\r\n                    'To Location' :  props.transferinarr[i].to_location!=undefined && props.transferinarr[i].to_location.title !=undefined ? props.transferinarr[i].to_location.title:'',\r\n                    'Transfer Date': props.transferinarr[i].transfer_date!=undefined?reversefunction(props.transferinarr[i].transfer_date):\"\",\r\n                    'Item ID': Data.vaccine_brand_id != null ? Data.vaccine_brand_id : '',\r\n                    'Item Stock ID': Data.vaccine_stocks_id != null ? Data.vaccine_stocks_id : '',\r\n                    'Item Name': Data.vaccine_stock_details.vaccine.name && Data.vaccine_stock_details.vaccine.name !== null ? Data.vaccine_stock_details.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine_stock_details.vaccine.hsn_code && Data.vaccine_stock_details.vaccine.hsn_code !== null ? Data.vaccine_stock_details.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stock_details.batch_no && Data.vaccine_stock_details.batch_no !== null ? Data.vaccine_stock_details.batch_no : '',\r\n                    'ExpiryDate': Data.vaccine_stock_details.expiry_date !== null ? reversefunction(Data.vaccine_stock_details.expiry_date) : '',\r\n                    'MRP': Data.vaccine_stock_details.mrp != null ? Data.vaccine_stock_details.mrp : '',\r\n                    'Rate': Data.vaccine_stock_details.rate != null ? Data.vaccine_stock_details.rate : '',\r\n                    'Qty': Data.qty !==null ? Data.qty:'',\r\n                    'Discount':  Data.vaccine_stock_details.discount != null ?  Data.vaccine_stock_details.discount : '',\r\n                    'Trade Disc.':  Data.vaccine_stock_details.trade_discount != null ?  Data.vaccine_stock_details.trade_discount : '',\r\n                    'CGST in Rs': Number( Data.vaccine_stock_details.CGST) * Number(Data.qty),\r\n                    'CGST %':  Data.vaccine_stock_details.CGST_rate,\r\n                    'SGST in Rs': Number(Data.vaccine_stock_details.SGST) * Number(Data.qty),\r\n                    'SGST %':  Data.vaccine_stock_details.SGST_rate,\r\n                    'IGST in Rs': Number( Data.vaccine_stock_details.IGST) * Number(Data.qty),\r\n                    'IGST %':  Data.vaccine_stock_details.IGST_rate,\r\n                    'Total Tax': TotalTax( Data.vaccine_stock_details.CGST,  Data.vaccine_stock_details.SGST,  Data.vaccine_stock_details.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate( Data.vaccine_stock_details.CGST_rate,  Data.vaccine_stock_details.SGST_rate, Data.vaccine_stock_details.IGST_rate),\r\n                    'Cost in Rs':  Data.vaccine_stock_details.cost,\r\n                    'Total Rs':  Data.vaccine_stock_details.total_amount ?  Data.vaccine_stock_details.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n      \r\n            }\r\n            var obj2 = obj.flat()\r\n            setExportTransferIn(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeTransferInExport()\r\n        }\r\n        func()\r\n    }, [props.transferinarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ExportTransferIn} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport {ExportTransferIn}\r\n\r\nconst ExportTransferOut=(props)=>{\r\n    const [ExportTransferOut, setExportTransferOut] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + ' Transfer Out '\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakeTransferOutExport() {\r\n        if (props.transferoutarr.length !== 0) {\r\n            for (let i = 0; i < props.transferoutarr.length; i++) {\r\n                var vendorsitems = props.transferoutarr[i].medicines.map(Data => ({\r\n                    'Type': 'Medicine', \r\n                    'TO ID': props.transferoutarr[i].id != undefined ? \"TO-\" + props.transferoutarr[i].id : '', \r\n                    'From Location' :props.transferoutarr[i].from_location != undefined && props.transferoutarr[i].from_location.title !=undefined ? props.transferoutarr[i].from_location.title:'',\r\n                    'Channel' :props.transferoutarr[i].channel !=undefined ? props.transferoutarr[i].channel== 1 ? \"Pharmacy\" : \"Clinic\":'',\r\n                    'To Location' :props.transferoutarr[i].to_location !== undefined && props.transferoutarr[i].to_location.title !=undefined ? props.transferoutarr[i].to_location.title:'',\r\n                    'Transfer Date': props.transferoutarr[i].transfer_date!=undefined?reversefunction(props.transferoutarr[i].transfer_date):\"\",\r\n                    'Item ID': Data.medicine_id != null ? Data.medicine_id : '',\r\n                    'Item Stock ID': Data.medicies_stocks_id != null ? Data.medicies_stocks_id : '',\r\n                    'Item Name': Data.medicine_stock_details.medicine.name && Data.medicine_stock_details.medicine.name !== null ? Data.medicine_stock_details.medicine.name : '',\r\n                    'HSN Code': Data.medicine_stock_details.medicine.hsn_code && Data.medicine_stock_details.medicine.hsn_code !== null ? Data.medicine_stock_details.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stock_details.batch_no && Data.medicine_stock_details.batch_no !== null ? Data.medicine_stock_details.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stock_details.expiry_date !== null ? reversefunction(Data.medicine_stock_details.expiry_date) : '',\r\n                    'MRP': Data.medicine_stock_details.mrp != null ? Data.medicine_stock_details.mrp : '',\r\n                    'Rate': Data.medicine_stock_details.rate != null ? Data.medicine_stock_details.rate : '',\r\n                    'Qty': Data.qty !==null ? Data.qty:'',\r\n                    'Discount':  Data.medicine_stock_details.discount != null ?  Data.medicine_stock_details.discount : '',\r\n                    'Trade Disc.':  Data.medicine_stock_details.trade_discount != null ?  Data.medicine_stock_details.trade_discount : '',\r\n                    'CGST in Rs': Number( Data.medicine_stock_details.CGST) * Number(Data.qty),\r\n                    'CGST %':  Data.medicine_stock_details.CGST_rate,\r\n                    'SGST in Rs': Number(Data.medicine_stock_details.SGST) * Number(Data.qty),\r\n                    'SGST %':  Data.medicine_stock_details.SGST_rate,\r\n                    'IGST in Rs': Number( Data.medicine_stock_details.IGST) * Number(Data.qty),\r\n                    'IGST %':  Data.medicine_stock_details.IGST_rate,\r\n                    'Total Tax': TotalTax( Data.medicine_stock_details.CGST,  Data.medicine_stock_details.SGST,  Data.medicine_stock_details.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate( Data.medicine_stock_details.CGST_rate,  Data.medicine_stock_details.SGST_rate, Data.medicine_stock_details.IGST_rate),\r\n                    'Cost in Rs':  Data.medicine_stock_details.cost,\r\n                    'Total Rs':  Data.medicine_stock_details.total_amount ?  Data.medicine_stock_details.total_amount : '',\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.transferoutarr[i].vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'TO ID': props.transferoutarr[i].id && props.transferoutarr[i].id != null ? \"TO-\" + props.transferoutarr[i].id : '',\r\n                    'Channel' :props.transferoutarr[i].channel !=undefined ? props.transferoutarr[i].channel== 1 ? \"Pharmacy\" : \"Clinic\":'', \r\n                    'From Location' : props.transferoutarr[i].from_location!=undefined && props.transferoutarr[i].from_location.title !=undefined ? props.transferoutarr[i].from_location.title:'',\r\n                    'To Location' :  props.transferoutarr[i].to_location!=undefined && props.transferoutarr[i].to_location.title !=undefined ? props.transferoutarr[i].to_location.title:'',\r\n                    'Transfer Date': props.transferoutarr[i].transfer_date!=undefined?reversefunction(props.transferoutarr[i].transfer_date):\"\",\r\n                    'Item ID': Data.vaccine_brand_id != null ? Data.vaccine_brand_id : '',\r\n                    'Item Stock ID': Data.vaccine_stocks_id != null ? Data.vaccine_stocks_id : '',\r\n                    'Item Name': Data.vaccine_stock_details.vaccine.name && Data.vaccine_stock_details.vaccine.name !== null ? Data.vaccine_stock_details.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine_stock_details.vaccine.hsn_code && Data.vaccine_stock_details.vaccine.hsn_code !== null ? Data.vaccine_stock_details.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stock_details.batch_no && Data.vaccine_stock_details.batch_no !== null ? Data.vaccine_stock_details.batch_no : '',\r\n                    'ExpiryDate': Data.vaccine_stock_details.expiry_date !== null ? reversefunction(Data.vaccine_stock_details.expiry_date) : '',\r\n                    'MRP': Data.vaccine_stock_details.mrp != null ? Data.vaccine_stock_details.mrp : '',\r\n                    'Rate': Data.vaccine_stock_details.rate != null ? Data.vaccine_stock_details.rate : '',\r\n                    'Qty': Data.qty !==null ? Data.qty:'',\r\n                    'Discount':  Data.vaccine_stock_details.discount != null ?  Data.vaccine_stock_details.discount : '',\r\n                    'Trade Disc.':  Data.vaccine_stock_details.trade_discount != null ?  Data.vaccine_stock_details.trade_discount : '',\r\n                    'CGST in Rs': Number( Data.vaccine_stock_details.CGST) * Number(Data.qty),\r\n                    'CGST %':  Data.vaccine_stock_details.CGST_rate,\r\n                    'SGST in Rs': Number(Data.vaccine_stock_details.SGST) * Number(Data.qty),\r\n                    'SGST %':  Data.vaccine_stock_details.SGST_rate,\r\n                    'IGST in Rs': Number( Data.vaccine_stock_details.IGST) * Number(Data.qty),\r\n                    'IGST %':  Data.vaccine_stock_details.IGST_rate,\r\n                    'Total Tax': TotalTax( Data.vaccine_stock_details.CGST,  Data.vaccine_stock_details.SGST,  Data.vaccine_stock_details.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate( Data.vaccine_stock_details.CGST_rate,  Data.vaccine_stock_details.SGST_rate, Data.vaccine_stock_details.IGST_rate),\r\n                    'Cost in Rs':  Data.vaccine_stock_details.cost,\r\n                    'Total Rs':  Data.vaccine_stock_details.total_amount ?  Data.vaccine_stock_details.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n            var obj2 = obj.flat()\r\n            setExportTransferOut(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeTransferOutExport()\r\n        }\r\n        func()\r\n    }, [props.transferoutarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ExportTransferOut} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport {ExportTransferOut}\r\n\r\nconst ExportDump = (props)=>{\r\n    const [ExportTDump, setExportTDump] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + ' Transfer In '\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakeDumpExport() {\r\n        if (props.dumpsarr.length !== 0) {\r\n            for (let i = 0; i < props.dumpsarr.length; i++) {\r\n                var vendorsitems = props.dumpsarr[i].medicines.map(Data => ({\r\n                    'Type': 'Medicine', \r\n                    'Dump ID': props.dumpsarr[i].id != undefined ? \"D-\" + props.dumpsarr[i].id : '', \r\n                    'Channel' :props.dumpsarr[i].channel !=undefined ? props.dumpsarr[i].channel== 1 ? \"Pharmacy\" : \"Clinic\":'',\r\n                    'Dump Date': props.dumpsarr[i].dump_date!=undefined?reversefunction(props.dumpsarr[i].dump_date):\"\",\r\n                    'Item ID': Data.medicine_id != null ? Data.medicine_id : '',\r\n                    'Item Stock ID': Data.medicies_stocks_id != null ? Data.medicies_stocks_id : '',\r\n                    'Item Name': Data.medicine_details.medicine.name && Data.medicine_details.medicine.name !== null ? Data.medicine_details.medicine.name : '',\r\n                    'HSN Code': Data.medicine_details.medicine.hsn_code && Data.medicine_details.medicine.hsn_code !== null ? Data.medicine_details.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_details.batch_no && Data.medicine_details.batch_no !== null ? Data.medicine_details.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_details.expiry_date !== null ? reversefunction(Data.medicine_details.expiry_date) : '',\r\n                    'MRP': Data.medicine_details.mrp != null ? Data.medicine_details.mrp : '',\r\n                    'Rate': Data.medicine_details.rate != null ? Data.medicine_details.rate : '',\r\n                    'Qty': Data.qty !==null ? Data.qty:'',\r\n                    'Discount':  Data.medicine_details.discount != null ?  Data.medicine_details.discount : '',\r\n                    'Trade Disc.':  Data.medicine_details.trade_discount != null ?  Data.medicine_details.trade_discount : '',\r\n                    'CGST in Rs': Number( Data.medicine_details.CGST) * Number(Data.qty),\r\n                    'CGST %':  Data.medicine_details.CGST_rate,\r\n                    'SGST in Rs': Number(Data.medicine_details.SGST) * Number(Data.qty),\r\n                    'SGST %':  Data.medicine_details.SGST_rate,\r\n                    'IGST in Rs': Number( Data.medicine_details.IGST) * Number(Data.qty),\r\n                    'IGST %':  Data.medicine_details.IGST_rate,\r\n                    'Total Tax': TotalTax( Data.medicine_details.CGST,  Data.medicine_details.SGST,  Data.medicine_details.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate( Data.medicine_details.CGST_rate,  Data.medicine_details.SGST_rate, Data.medicine_details.IGST_rate),\r\n                    'Cost in Rs':  Data.medicine_details.cost,\r\n                    'Total Rs':  Data.medicine_details.total_amount ?  Data.medicine_details.total_amount : '',\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.dumpsarr[i].vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'Dump ID': props.dumpsarr[i].id && props.dumpsarr[i].id != null ? \"D-\" + props.dumpsarr[i].id : '',\r\n                    'Channel' :props.dumpsarr[i].channel !=undefined ? props.dumpsarr[i].channel== 1 ? \"Pharmacy\" : \"Clinic\":'', \r\n                    'Dump Date': props.dumpsarr[i].dump_date!=undefined?reversefunction(props.dumpsarr[i].dump_date):\"\",\r\n                    'Item ID': Data.vaccine_brand_id != null ? Data.vaccine_brand_id : '',\r\n                    'Item Stock ID': Data.vaccine_stocks_id != null ? Data.vaccine_stocks_id : '',\r\n                    'Item Name': Data.vaccine_details.vaccine.name && Data.vaccine_details.vaccine.name !== null ? Data.vaccine_details.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine_details.vaccine.hsn_code && Data.vaccine_details.vaccine.hsn_code !== null ? Data.vaccine_details.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_details.batch_no && Data.vaccine_details.batch_no !== null ? Data.vaccine_details.batch_no : '',\r\n                    'ExpiryDate': Data.vaccine_details.expiry_date !== null ? reversefunction(Data.vaccine_details.expiry_date) : '',\r\n                    'MRP': Data.vaccine_details.mrp != null ? Data.vaccine_details.mrp : '',\r\n                    'Rate': Data.vaccine_details.rate != null ? Data.vaccine_details.rate : '',\r\n                    'Qty': Data.qty !==null ? Data.qty:'',\r\n                    'Discount':  Data.vaccine_details.discount != null ?  Data.vaccine_details.discount : '',\r\n                    'Trade Disc.':  Data.vaccine_details.trade_discount != null ?  Data.vaccine_details.trade_discount : '',\r\n                    'CGST in Rs': Number( Data.vaccine_details.CGST) * Number(Data.qty),\r\n                    'CGST %':  Data.vaccine_details.CGST_rate,\r\n                    'SGST in Rs': Number(Data.vaccine_details.SGST) * Number(Data.qty),\r\n                    'SGST %':  Data.vaccine_details.SGST_rate,\r\n                    'IGST in Rs': Number( Data.vaccine_details.IGST) * Number(Data.qty),\r\n                    'IGST %':  Data.vaccine_details.IGST_rate,\r\n                    'Total Tax': TotalTax( Data.vaccine_details.CGST,  Data.vaccine_details.SGST,  Data.vaccine_details.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate( Data.vaccine_details.CGST_rate,  Data.vaccine_details.SGST_rate, Data.vaccine_details.IGST_rate),\r\n                    'Cost in Rs':  Data.vaccine_details.cost,\r\n                    'Total Rs':  Data.vaccine_details.total_amount ?  Data.vaccine_details.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n      \r\n            }\r\n            var obj2 = obj.flat()\r\n            setExportTDump(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeDumpExport()\r\n        }\r\n        func()\r\n    }, [props.dumpsarr])\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ExportTDump} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport {ExportDump}","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Pharmacy.jsx",["1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314"],[],"import { useState, useEffect, useContext, useRef } from \"react\"\r\nimport axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport { URL, TodayDate, DoctorsList, Doctorapi, Permissions, Secretkey } from '../../index'\r\nimport { Salesection, Purchasesection, Stocksection, Listsection,Transfersection,Dumpsection } from \"../pharmacy/pharmacy\"\r\n\r\n//css\r\nimport '../../css/pharmacy.css'\r\nfunction Pharmacy() {\r\n  const permission = useContext(Permissions)\r\n  let menu = [\r\n    {\r\n      option: \"Sale\",\r\n      display: permission.sale_entry_view == undefined && permission.ale_return_view == undefined ? 0 : 1,\r\n    },\r\n    {\r\n      option: \"Stock Info\",\r\n      display: permission.purchase_entry_view == undefined && permission.purchase_orders_view == undefined && permission.purchase_return_view == undefined ? 0 : 1,\r\n    },\r\n    {\r\n      option: \"Purchase\",\r\n      display: permission.purchase_entry_view == undefined && permission.purchase_orders_view == undefined && permission.purchase_return_view == undefined ? 0 : 1,\r\n    },\r\n    {\r\n      option: \"Lists\",\r\n      display: permission.vaccine_view == undefined && permission.medicine_view == undefined ? 0 : 1,\r\n    },\r\n    {\r\n      option: \"Transfers\",\r\n      display: 1,\r\n      // permission.transfer_view == undefined && permission.transfer_view == undefined ? 0 : \r\n    },\r\n    {\r\n      option: \"Dumps\",\r\n      display: 1,\r\n      // permission.transfer_view == undefined && permission.transfer_view == undefined ? 0 : \r\n    }\r\n  ]\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return <Salesection />\r\n    }\r\n    if (_menu === 1) {\r\n      return <Stocksection />\r\n    }\r\n    if (_menu === 2) {\r\n      return <Purchasesection />;\r\n    }\r\n    if (_menu === 3) {\r\n      return <Listsection />;\r\n    }\r\n    if (_menu === 4){\r\n      return <Transfersection/>\r\n    }\r\n    if (_menu === 5){\r\n      return <Dumpsection/>\r\n    }\r\n    return <div className=\"\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className={`pharmacy position-relative mt-1`} >\r\n        <div className=\"pharmacysection p-0 m-0\">\r\n          <div className=\"container-fluid pharmacytabsection shadow-sm rounded-bottom border-bottom pb-1\">\r\n            <div className=\"gap-3 d-flex p-0 m-0 ms-1 p-1 py-1 align-items-center \">\r\n              {\r\n                menu.map((e, i) => {\r\n                  return (\r\n                    <>\r\n                      <div className={`col-auto p-0 m-0 d-${e.display == 1 ? '' : 'none'}`}>\r\n                        <button className={`button animatebuttons rounded-1 col-auto shadow-none text-${i === menuindex ? 'light' : 'charcoal75 fw-bolder'} button-${i === menuindex ? \"charcoal\" : \"seashell\"} border-${i === menuindex ? 'secondary' : 'none'}`} onClick={(a) => setmenuindex(i)} > {e.option} </button>\r\n                      </div>\r\n                      <div className={`vr rounded-1 h-75 align-self-center d-${e.display == 1 ? '' : 'none'}`} style={{ padding: '0.8px' }}></div>\r\n                    </>\r\n                  );\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-0 m-0\">{_selectedmenu(menuindex)}</div>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}\r\nexport default Pharmacy","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\ExportExcel.jsx",[],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Doctor.jsx",["1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375"],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Medicines\\NewMedicine.jsx",["1376"],[],"import axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../../index'\r\nimport { customconfirm } from '../../features/notiflix/customconfirm'\r\n\r\n\r\nconst NewMedicine = (props) => {\r\n  const url = useContext(URL)\r\n  const [displayname, setdisplayname] = useState()\r\n  const [name, setname] = useState()\r\n  const [saltname, setsaltname] = useState()\r\n  const [manufacturer, setmanufacturer] = useState()\r\n  const [strength, setstrength] = useState()\r\n  const [unit, setunit] = useState()\r\n  const [pack, setpack] = useState()\r\n  const [packtype, setpacktype] = useState()\r\n  const [mfid, setmfid] = useState()\r\n  const [schedule, setschedule] = useState()\r\n  const [hsn, sethsn] = useState()\r\n  const [rack, setrack] = useState()\r\n  const [maxsc, setmaxsc] = useState()\r\n  const [minsc, setminsc] = useState()\r\n  const [altsc, setaltsc] = useState()\r\n  const [img, setimg] = useState()\r\n\r\n  const SaveMedicine = async () => {\r\n    const data = {\r\n      display_name: displayname,\r\n      name: name,\r\n      salt_name: saltname,\r\n      manufacturer: manufacturer,\r\n      strength: strength,\r\n      medicine_unit: unit,\r\n      packaging: pack,\r\n      packaging_type_id: packtype,\r\n      medicine_form_id: mfid,\r\n      schedule: schedule,\r\n      hsn_code: hsn,\r\n      rack_number: rack,\r\n      max_stock_count: maxsc,\r\n      min_stock_count: minsc,\r\n      alert_stock_count: altsc,\r\n      image: img\r\n    }\r\n    if (displayname && name && saltname && manufacturer && strength && unit && pack && packtype && mfid && schedule && hsn && rack && maxsc && minsc && altsc && img) {\r\n      try {\r\n        await axios.post(`${url}/medicine/add`, data).then((response) => {\r\n          props.ToggleNewMedicine()\r\n          ClearFields()\r\n          if (response.data.status == true) {\r\n            props.medcinelist()\r\n            Notiflix.Notify.success(response.data.message)\r\n          } else {\r\n            Notiflix.Notify.warning(response.data.message)\r\n          }\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Details')\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add ${displayname} as New Medicine `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveMedicine()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    )\r\n  }\r\n  const ClearFields = async () => {\r\n    setdisplayname()\r\n    setname()\r\n    setsaltname()\r\n    setmanufacturer()\r\n    setstrength()\r\n    setunit()\r\n    setpack()\r\n    setpacktype()\r\n    setmfid()\r\n    setschedule()\r\n    sethsn()\r\n    setrack()\r\n    setmaxsc()\r\n    setminsc()\r\n    setaltsc()\r\n    setimg()\r\n  }\r\n  return (\r\n    <div className='position-relative p-0 m-0 fw-bold bg-seashell'>\r\n      <div className=\"shadow-sm\">\r\n      <h5 className='p-0 m-0 text-center py-2 fw-bold text-charcoal'>Add New Medicine</h5>\r\n      <button className='btn btn-close position-absolute end-0 top-0 mt-1 me-1' onClick={props.ToggleNewMedicine}></button>\r\n      </div>\r\n      <div className='scroll scroll-y ps-2' style={{ minHeight: '100%' }}>\r\n        <div className=\"row p-0 m-0  ms-3\">\r\n        <p className='text-charcoal fw-bold p-0 m-0 py-2 text-start'>Basic Details</p>\r\n          <div className=\"row p-0 m-0\">\r\n\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Display Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={displayname ? displayname : ''} onChange={(e) => { setdisplayname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={name ? name : ''} onChange={(e) => { setname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Salt Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={saltname ? saltname : ''} onChange={(e) => { setsaltname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Manufacturer</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={manufacturer ? manufacturer : ''} onChange={(e) => { setmanufacturer(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0 ms-3 mt-3\">\r\n        <p className='text-charcoal fw-bold p-0 m-0 py-2 text-start'>Other Details  </p>\r\n          <div className=\"row p-0 m-0 \">\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Strength</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={strength ? strength : ''} onChange={(e) => { setstrength(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Unit</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={unit ? unit : ''} onChange={(e) => { setunit(e.target.value) }}>\r\n                <option>Select Unit</option>\r\n                <option value='1'>mg</option>\r\n                <option value='2'>ml</option>\r\n                <option value='3'>mcg</option>\r\n                <option value='4'>g</option>\r\n                <option value='5'>%</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging</p>\r\n              <input type='number' className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={pack ? pack : ''} onChange={(e) => { setpack(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging Type</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={packtype ? packtype : ''} onChange={(e) => { setpacktype(e.target.value) }}>\r\n                <option>Select Packaging Type</option>\r\n                <option value='1'>Strip</option>\r\n                <option value='2'>Tube</option>\r\n                <option value='3'>Bottle</option>\r\n                <option value='4'>Syringe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Form</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={mfid ? mfid : ''} onChange={(e) => { setmfid(e.target.value) }}>\r\n                <option>Select Medicine form</option>\r\n                <option value=\"1\" >tablet</option>\r\n                <option value=\"2\" >capsule</option>\r\n                <option value=\"3\" >liquid</option>\r\n                <option value=\"4\">topical</option>\r\n                <option value=\"5\" >cream</option>\r\n                <option value=\"6\" >device</option>\r\n                <option value=\"7\" >drop</option>\r\n                <option value=\"8\" >foam</option>\r\n                <option value=\"9\" >gel</option>\r\n                <option value=\"10\" >inhaler</option>\r\n                <option value=\"11\" >injection</option>\r\n                <option value=\"12\" >lotion</option>\r\n                <option value=\"13\" >ointment</option>\r\n                <option value=\"14\" >patch</option>\r\n                <option value=\"15\" >powder</option>\r\n                <option value=\"16\" >spray</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Schedule</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={schedule ? schedule : ''} onChange={(e) => { setschedule(e.target.value) }} >\r\n                <option>Select Schedule</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"H\" >H</option>\r\n                <option value=\"X\" >X</option>\r\n                <option value=\"J\" >J</option>\r\n                <option value=\"A\" >A</option>\r\n                <option value=\"B\" >B</option>\r\n                <option value=\"C\" >C</option>\r\n                <option value=\"D\" >D</option>\r\n                <option value=\"E\" >E</option>\r\n                <option value=\"F\" >F</option>\r\n                <option value=\"K\" >K</option>\r\n                <option value=\"M\" >M</option>\r\n                <option value=\"N\" >N</option>\r\n                <option value=\"O\" >O</option>\r\n                <option value=\"P\" >P</option>\r\n                <option value=\"Q\" >Q</option>\r\n                <option value=\"R\" >R</option>\r\n                <option value=\"S\" >S</option>\r\n                <option value=\"T\" >T</option>\r\n                <option value=\"U\" >U</option>\r\n                <option value=\"V\" >V</option>\r\n                <option value=\"Y\">Y</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-start mt-3 ms-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-start'>Choose Medicine Photo</p>\r\n          <div className=\"col-auto\">\r\n            <input type='file' className='form-control bg-seashell p-0 m-0 px-2 py-1' value={img ? img : ''} onChange={(e) => { setimg(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-end mt-3 mb-5 ms-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-start'>HSN Code and Count</p>\r\n          <div className=\"col-12\">\r\n            <p className='p-0 m-0'>HSN Code</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={hsn ? hsn : ''} onChange={(e) => { sethsn(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Rack Number</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={rack ? rack : ''} onChange={(e) => { setrack(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Max. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={maxsc ? maxsc : ''} onChange={(e) => { setmaxsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Min. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={minsc ? minsc : ''} onChange={(e) => { setminsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Alert Stock Count </p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={altsc ? altsc : ''} onChange={(e) => { setaltsc(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='bg-pearl border p-3 align-items-center '>\r\n        <div className=\"row p-0 m-0 text-center justify-content-between align-items-center align-self-center\">\r\n\r\n          <div className=\"col-6\">\r\n            <button className='button button-charcoal ' onClick={confirmmessage}>Save</button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button className='button button-seashell' onClick={ClearFields}>Cancel</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { NewMedicine }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Medicines\\UpdateMedicine.jsx",["1377","1378"],[],"import axios from 'axios'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../../index'\r\nimport { customconfirm } from '../../features/notiflix/customconfirm'\r\n\r\n\r\nconst UpdateMedicine = (props) => {\r\n  const url = useContext(URL)\r\n  const [displayname, setdisplayname] = useState()\r\n  const [name, setname] = useState()\r\n  const [saltname, setsaltname] = useState()\r\n  const [manufacturer, setmanufacturer] = useState()\r\n  const [strength, setstrength] = useState()\r\n  const [unit, setunit] = useState()\r\n  const [pack, setpack] = useState()\r\n  const [packtype, setpacktype] = useState()\r\n  const [mfid, setmfid] = useState()\r\n  const [schedule, setschedule] = useState()\r\n  const [hsn, sethsn] = useState()\r\n  const [rack, setrack] = useState()\r\n  const [maxsc, setmaxsc] = useState()\r\n  const [minsc, setminsc] = useState()\r\n  const [altsc, setaltsc] = useState()\r\n  const [img, setimg] = useState('')\r\n  const data = props.data\r\n  const FillDetails = async () => {\r\n    setdisplayname(data.display_name)\r\n    setname(data.name)\r\n    setsaltname(data.salt_name)\r\n    setmanufacturer(data.manufacturer)\r\n    setstrength(data.strength)\r\n    setunit(data.medicine_unit)\r\n    setpack(data.packaging)\r\n    setpacktype(data.packaging_type_id)\r\n    setmfid(data.medicine_form_id)\r\n    setschedule(data.schedule)\r\n    sethsn(data.hsn_code)\r\n    setrack(data.rack_number)\r\n    setmaxsc(data.max_stock_count)\r\n    setminsc(data.min_stock_count)\r\n    setaltsc(data.alert_stock_count)\r\n    setimg(data.image)\r\n\r\n  }\r\n  useEffect(() => {\r\n    FillDetails()\r\n  }, [])\r\n  const handleimage = async (e) => {\r\n    if (e.target.files.length !== 0) {\r\n      setimg(e.target.files)\r\n    }\r\n\r\n  }\r\n  const UpdateMedicine = async () => {\r\n    const Data = {\r\n      medicine_id: data.id,\r\n      display_name: displayname,\r\n      name: name,\r\n      salt_name: saltname,\r\n      manufacturer: manufacturer,\r\n      strength: strength,\r\n      medicine_unit: Number(unit),\r\n      packaging: pack,\r\n      packaging_type_id: Number(packtype),\r\n      medicine_form_id: Number(mfid),\r\n      schedule: schedule,\r\n      hsn_code: hsn,\r\n      rack_number: rack,\r\n      max_stock_count: Number(maxsc),\r\n      min_stock_count: Number(minsc),\r\n      alert_stock_count: Number(altsc),\r\n      image: img ? {\r\n        name: img[0].name,\r\n        size: img[0].size,\r\n        type: img[0].type,\r\n        webkitRelativePath: img[0].webkitRelativePath,\r\n        lastModifiedDate: img[0].lastModifiedDate,\r\n        lastModified: img[0].lastModified\r\n\r\n      } : ''\r\n    }\r\n\r\n    try {\r\n      await axios.post(`${url}/medicine/update`, Data).then((response) => {\r\n        \r\n        Notiflix.Notify.success(response.data.message)\r\n        props.medcinelist()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to Update ${data.display_name} Details`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        UpdateMedicine()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=' p-0 m-0 fw-bold'>\r\n      <div className=\"shadow-sm\">\r\n      <h5 className='p-0 m-0 text-center py-2 fw-bold text-charcoal'>Update Medicine</h5>\r\n      <button className='btn btn-close position-absolute end-0 top-0 mt-1 me-1' onClick={props.ToggleUpdateMedicine}></button>\r\n      </div>\r\n      <div className='scroll scroll-y' style={{ minHeight: '100%' }}>\r\n        <div className=\"row p-0 m-0 ms-3 mt-3\">\r\n          <div className=\"row p-0 m-0\">\r\n            <p className='text-charcoal75 fw-bold p-0 m-0 py-2 text-start ps-3'>Basic Details</p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Display Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={displayname ? displayname : ''} onChange={(e) => { setdisplayname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={name ? name : ''} onChange={(e) => { setname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Salt Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={saltname ? saltname : ''} onChange={(e) => { setsaltname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Manufacturer</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={manufacturer ? manufacturer : ''} onChange={(e) => { setmanufacturer(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0 mt-5\">\r\n          <div className=\"row p-0 m-0 ms-3\">\r\n            <p className='text-charcoal75 fw-bold p-0 m-0 py-2 text-start ps-3'>Other Details  </p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Strength</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={strength ? strength : ''} onChange={(e) => { setstrength(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Unit</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={unit ? unit : ''} onChange={(e) => { setunit(e.target.value) }}>\r\n                <option>Select Unit</option>\r\n                <option value='1'>mg</option>\r\n                <option value='2'>ml</option>\r\n                <option value='3'>mcg</option>\r\n                <option value='4'>g</option>\r\n                <option value='5'>%</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={pack ? pack : ''} onChange={(e) => { setpack(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging Type</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={packtype ? packtype : ''} onChange={(e) => { setpacktype(e.target.value) }}>\r\n                <option>Select Packaging Type</option>\r\n                <option value='1'>Strip</option>\r\n                <option value='2'>Tube</option>\r\n                <option value='3'>Bottle</option>\r\n                <option value='4'>Syringe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Form</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={mfid ? mfid : ''} onChange={(e) => { setmfid(e.target.value) }}>\r\n                <option>Select Medicine form</option>\r\n                <option value=\"1\" >tablet</option>\r\n                <option value=\"2\" >capsule</option>\r\n                <option value=\"3\" >liquid</option>\r\n                <option value=\"4\">topical</option>\r\n                <option value=\"5\" >cream</option>\r\n                <option value=\"6\" >device</option>\r\n                <option value=\"7\" >drop</option>\r\n                <option value=\"8\" >foam</option>\r\n                <option value=\"9\" >gel</option>\r\n                <option value=\"10\" >inhaler</option>\r\n                <option value=\"11\" >injection</option>\r\n                <option value=\"12\" >lotion</option>\r\n                <option value=\"13\" >ointment</option>\r\n                <option value=\"14\" >patch</option>\r\n                <option value=\"15\" >powder</option>\r\n                <option value=\"16\" >spray</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Schedule</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={schedule ? schedule : ''} onChange={(e) => { setschedule(e.target.value) }} >\r\n                <option>Select Schedule</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"H\" >H</option>\r\n                <option value=\"X\" >X</option>\r\n                <option value=\"J\" >J</option>\r\n                <option value=\"A\" >A</option>\r\n                <option value=\"B\" >B</option>\r\n                <option value=\"C\" >C</option>\r\n                <option value=\"D\" >D</option>\r\n                <option value=\"E\" >E</option>\r\n                <option value=\"F\" >F</option>\r\n                <option value=\"K\" >K</option>\r\n                <option value=\"M\" >M</option>\r\n                <option value=\"N\" >N</option>\r\n                <option value=\"O\" >O</option>\r\n                <option value=\"P\" >P</option>\r\n                <option value=\"Q\" >Q</option>\r\n                <option value=\"R\" >R</option>\r\n                <option value=\"S\" >S</option>\r\n                <option value=\"T\" >T</option>\r\n                <option value=\"U\" >U</option>\r\n                <option value=\"V\" >V</option>\r\n                <option value=\"Y\">Y</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"row p-0 m-0 justify-content-center mt-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Choose Medicine Photo</p>\r\n          <div className=\"col-4 ms-5\">\r\n            <input type='file' className='form-control bg-seashell p-0 m-0 px-2 py-1' onChange={(e) => { handleimage(e) }} />\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row p-0 m-0 ms-3 mt-5 mb-4\">\r\n          <p className='text-charcoal75 fw-bold p-0 m-0 py-2 text-start ps-3'>HSN Code and Count</p>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>HSN Code</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={hsn ? hsn : ''} onChange={(e) => { sethsn(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Rack Number</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={rack ? rack : ''} onChange={(e) => { setrack(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Max. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={maxsc ? maxsc : ''} onChange={(e) => { setmaxsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Min. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={minsc ? minsc : ''} onChange={(e) => { setminsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Alert Stock Count </p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={altsc ? altsc : ''} onChange={(e) => { setaltsc(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n          <div className='position-absolute w-100 bottom-0 bottom_bar bg-pearl border p-2 align-items-center '>\r\n          <div className=\"row p-0 m-0 text-center justify-content-between align-items-center align-self-center\">\r\n  \r\n            <div className=\"col-6\">\r\n              <button className='button button-charcoal ' onClick={confirmmessage}>Update</button>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <button className='button button-seashell' onClick={FillDetails}>Set Previous</button>\r\n  \r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n  )\r\n}\r\nexport { UpdateMedicine }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Patients.jsx",["1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405"],[],"import { useState, useEffect, useContext, useRef } from \"react\"\r\nimport axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport { URL, TodayDate, DoctorsList, Doctorapi, Permissions, Secretkey } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\"\r\nimport { UpdatePatient } from '../Patients/UpdatePatient'\r\nimport { UpdateAddress } from '../Patients/UpdateAddress'\r\nimport { AddAddress } from '../Patients/AddAddress'\r\n//css\r\nimport '../../css/patient.css'\r\nfunction Patients() {\r\n  const url = useContext(URL)\r\n  const permission = useContext(Permissions)\r\n  const adminid = localStorage.getItem('id')\r\n  const [PatientsList, setPatientsList] = useState([])\r\n  const [pages, setpages] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n  const [tabindex, settabindex] = useState(0)\r\n  const [Loading, setLoading] = useState(false)\r\n  const [patientsearch, setpatientsearch] = useState()\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/patient/list?search=${patientsearch ? patientsearch : ''}&limit=10&offset=0`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 10) + 1)\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  async function getAllPatients(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true)\r\n      setPatientsList()\r\n      await axios.get(`${url}/patient/list?search=${patientsearch ? patientsearch : ''}&limit=10&offset=0`).then((response) => {\r\n        setPatientsList(response.data.data.patients_list)\r\n      })\r\n      setLoading(false)\r\n    } else {\r\n      setLoading(true)\r\n      setPatientsList()\r\n      await axios.get(`${url}/patient/list?search=${patientsearch ? patientsearch : ''}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n        setPatientsList(response.data.data.patients_list)\r\n      })\r\n      setLoading(false)\r\n    }\r\n\r\n\r\n  }\r\n  useEffect(() => {\r\n    GetPages()\r\n    getAllPatients()\r\n  }, [pagecount, patientsearch])\r\n\r\n\r\n  async function DeletePatient(patientid) {\r\n    if (adminid && patientid) {\r\n      try {\r\n        await axios.post(`${url}/delete/patient`, {\r\n          id: patientid,\r\n          admin_id: adminid\r\n\r\n        }).then((response) => {\r\n          Notiflix.Notify.success(response.data.message)\r\n          getAllPatients()\r\n        })\r\n      } catch (e) {\r\n        alert(e)\r\n      }\r\n    }\r\n  }\r\n  function confirmmessage(name, patientid) {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Delete Patient`,\r\n      `Do you surely want to Delete Patient ${name} `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        DeletePatient(patientid)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const [updateaddress, setupdateaddress] = useState('none')\r\n  const [updatepatient, setupdatepatient] = useState('none')\r\n  const [addresspage, setaddresspage] = useState('none')\r\n  const [form, setform] = useState();\r\n  const [form2, setform2] = useState();\r\n  const [form3, setform3] = useState();\r\n\r\n  const OpenUpdatePatient = (i) => {\r\n    if (updatepatient === 'none') {\r\n      setupdatepatient('block')\r\n      setform(i)\r\n    }\r\n  }\r\n  const CloseUpdatePatient = () => {\r\n    if (updatepatient === 'block') {\r\n      setupdatepatient('none')\r\n      setform()\r\n    }\r\n  }\r\n  const OpenUpdateAddress = (i) => {\r\n    if (updateaddress == 'none') {\r\n      setupdateaddress('block')\r\n      setform2(i)\r\n    }\r\n  }\r\n  const CloseUpdateAddress = () => {\r\n    if (updateaddress == 'block') {\r\n      setupdateaddress('none')\r\n      setform2()\r\n    }\r\n  }\r\n  const Toggle_Address = (i)=>{\r\n    if(addresspage == 'block'){\r\n      setaddresspage('none')\r\n      setform3()\r\n    }\r\n    if(addresspage == 'none'){\r\n      setaddresspage('block')\r\n      setform3(i)\r\n    }\r\n  }\r\n  return (\r\n    <section className=\"patientsection text-center position-relative\">\r\n      <div className=\"conatainer searchbar\">\r\n        <input className=\" form-control m-auto mt-2\" placeholder=\"Search Patient By Name or Number\" onChange={(e) => { setpatientsearch(e.target.value); getAllPatients(); }} onBlur={getAllPatients} />\r\n      </div>\r\n      <div className=\"container-fluid p-0 m-0 scroll scroll-y \" style={{ minHeight: '30rem' }}>\r\n        <table className=\"table text-start fw-bold\" >\r\n          <thead className=\"text-charcoal75\">\r\n            <tr>\r\n              <th className={`d-${permission.patient_edit == 1 ? '' : 'none'}`}>Update</th>\r\n              <th>Patient Name</th>\r\n              <th>Gender</th>\r\n              <th>DOB</th>\r\n              <th>Email</th>\r\n              <th>Pincode</th>\r\n              <th>Phone Number</th>\r\n              <th>Is Main Account</th>\r\n              <th className={`d-${permission.patient_delete == 1 ? '' : 'none'}`}>Delete</th>\r\n              {/* <th>More</th> */}\r\n            </tr>\r\n          </thead>\r\n\r\n          {\r\n            Loading ? (\r\n              <tbody className=' text-center' style={{ minHeight: '30vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div class=\"d-flex align-items-center spinner\">\r\n                    <strong className=''>Getting Details please be Patient ...</strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n              </tbody>\r\n            ) : (\r\n              PatientsList !=undefined && PatientsList.length == 0 ? (\r\n                <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '30vh' }}>\r\n                  <tr className=''>\r\n                    <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Patients found</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              ) : (\r\n                <tbody>\r\n                  {\r\n                    PatientsList !=undefined && PatientsList.map((data, i) => (\r\n                      <tr className=\"align-middle\">\r\n                        <td className={`d-${permission.patient_edit == 1 ? '' : 'none'}`}>\r\n                          <button className=\"button p-0 m-0 bg-transparent border-0 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\"/>\r\n                          </button>\r\n                          <ul className=\"dropdown-menu shadow-sm p-2 scroll\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content', height: '40vh' }}>\r\n                            <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Toggle_Address(i); }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" />Add Address</li>\r\n                            <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { settabindex(i); OpenUpdatePatient(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\"/> Update Patient</li>\r\n                            <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { OpenUpdateAddress(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" />Update Address</li>\r\n                          </ul>\r\n                          { \r\n                            form == i ? (\r\n                              <>\r\n                              <div className=\"backdrop\"></div>\r\n                              <section id={i} className={`updatepatientform text-start position-absolute d-${tabindex == i ? updatepatient : 'none'} col-md-8 col-10 col-lg-6 bg-seashell top-0 rounded-2 shadow-sm border`}>\r\n                                <UpdatePatient index={i} getAllPatients={getAllPatients} CloseUpdatePatient={CloseUpdatePatient} patientid={data.id} data={data} phonecountrycode={data.phone_country_code ? data.phone_country_code : 'N/A'} PhoneNo={data.phone_number ? Number(data.phone_number) : ''} dob={data.dob ? data.dob : ''} gender={data.gender ? data.gender : ''} full_name={data.full_name ? data.full_name : ''} email={data.email ? data.email : ''} pincode={data.pin_code ? data.pin_code : ''} location={data.location ? data.location : ''} parent={data.parent} linkid={data.link_id ? data.link_id : ''} relation={data.relation} latitude={data.latitude} longitude={data.longitude} />\r\n                              </section>\r\n                              </>\r\n                            ) : (<></>)\r\n                          }\r\n                          {\r\n                            form2 == i ? (\r\n                              <>\r\n                              <div className=\"backdrop\"></div>\r\n                              <section className={`updatepatientform col-12 text-start position-absolute d-${form2 == i ? updateaddress : 'none'} bg-seashell top-0 rounded-1 shadow-sm border`} style={{ width: '100vh' }}>\r\n                                <UpdateAddress i={i} data={data} CloseUpdateAddress={CloseUpdateAddress} getAllPatients={getAllPatients} />\r\n                              </section>\r\n                              </>\r\n                            ) : (<></>)\r\n                          }\r\n                          {\r\n                            form3 == i ?(\r\n                              <>\r\n                              <div className=\"backdrop\"></div>\r\n                              <section className={` col-12 text-start position-absolute d-${form3 == i ? addresspage : 'none'} bg-seashell mx-auto start-0 end-0 top-0 rounded-1 shadow-sm border`} style={{ width: '60vh' ,height:'50vh'}}>\r\n                                <AddAddress Toggle_Address={Toggle_Address} patientid={data.id} searchinput={data.full_name ? data.full_name : ''} getAllPatients={getAllPatients} form3={form3}/>\r\n                              </section>\r\n                              </>\r\n                            ):(<></>)\r\n                          }\r\n\r\n                        </td>\r\n                        <td>{data.full_name ? data.full_name : 'N/A'}{ data.is_profile_verified ==1 ? <img src={process.env.PUBLIC_URL + 'images/verified.png'} style={{scale:'0.8'}}/>:'' }</td>\r\n                        <td>{data.gender ? data.gender : 'N/A'}</td>\r\n                        <td>{data.dob ? reversefunction(data.dob) : 'N/A'}</td>\r\n                        <td>{data.email ? data.email : 'N/A'}</td>\r\n                        <td>{data.pin_code ? data.pin_code : 'N/A'}</td>\r\n                        <td>{data.phone_number ? data.phone_number : 'N/A'}</td>\r\n                        <td>{data.parent ? ' No' : 'Yes'}</td>\r\n                        <td className={`d-${permission.patient_delete == 1 ? '' : 'none'}`}>\r\n                          <button className=\"btn p-0 m-0\" onClick={(e) => { confirmmessage(data.full_name, data.id); }}><img src={process.env.PUBLIC_URL + \"/images/delete.png\"} alt=\"displaying_image\" className=\"img-fluid\" /></button></td>\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              ))\r\n          }\r\n\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'.'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={getAllPatients}\r\n          containerClassName={'pagination scroll align-self-center align-items-center'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n\r\n\r\n\r\n}\r\nexport default Patients","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Patients\\AddAddress.jsx",["1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425"],[],"import React, { useContext, useMemo, useRef } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/dashboard.css'\r\n\r\nconst AddAddress = (props) => {\r\n    const url = useContext(URL)\r\n    const stateref = useRef(null)\r\n    const [address, setaddress] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [location, setlocation] = useState()\r\n    const [placeid, setplaceid] = useState()\r\n    const [data, setData] = useState(\"\")\r\n    const [state, setstate] = useState()\r\n    const [country, setcountry] = useState()\r\n\r\n    // useEffect(() => {\r\n\r\n    //     if (data !== undefined && data.value != undefined && data.value.place_id !== undefined) {\r\n    //         setpincode()\r\n    //         setplaceid()\r\n    //         // initialize the map\r\n    //         const map = new window.google.maps.Map({\r\n    //             zoom: 14\r\n    //         });\r\n    //         // initialize the PlacesService object with your API key and map\r\n    //         const placesService = new window.google.maps.places.PlacesService(map);\r\n\r\n    //         // send a getDetails request for the place using its Place ID\r\n    //         placesService.getDetails({\r\n    //             placeId: data.value.place_id\r\n    //         }, (placeResult, status) => {\r\n    //             if (status === 'OK') {\r\n    //                 // find the address component with type \"postal_code\"\r\n    //                 const postalCodeComponent = placeResult.address_components.find(component => {\r\n    //                     return component.types.includes('postal_code');\r\n    //                 });\r\n\r\n    //                 if (postalCodeComponent) {\r\n    //                     const postalCode = postalCodeComponent.short_name;\r\n    //                     setpincode(postalCode);\r\n    //                 } else {\r\n    //                     Notiflix.Notify.warning('Postal code not found for this place.');\r\n    //                 }\r\n    //             } else {\r\n    //                 Notiflix.Notify.failure(`Failed to get place details: ${status}`);\r\n    //             }\r\n    //         });\r\n    //     } \r\n\r\n    //     data === \"\" ? setData(\"\") : setData(data);\r\n    //     setplace(data && data.label != undefined ? data.label : '')\r\n    // }, [data]);\r\n    useEffect(()=>{\r\n        setplace(data && data.label != undefined ? data.label : '')\r\n        setplaceid(data && data.value !=undefined && data.value.place_id !=undefined ?data.value.place_id:'ChIJo2X9SlLiDDkRnZp6DO-GNP0')\r\n\r\n    },[data])\r\n    // const config =  {\r\n    //     headers:{\r\n    //        'Access-Control-Allow-Origin': '*',\r\n    //        'Access-Control-Request-Method':'GET',\r\n    //     }\r\n    // }\r\n    const GetPostal_code = async()=>{\r\n        if(placeid !=undefined){\r\n        // if(pincode == undefined || state == undefined || country == undefined){\r\n            try{\r\n                await axios.get(`https://maps.googleapis.com/maps/api/place/details/json?key=AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE&place_id=${placeid}`).then((response)=>{\r\n                    if(response){\r\n                        let data = response.data.result !=undefined ? response.data.result.address_components:[]\r\n                    for(let i=0;i<data.length;i++){\r\n                            if(data[i].types.includes('postal_code')){\r\n                              setpincode(data[i].short_name?data[i].short_name:'')\r\n                            }\r\n                            if(data[i].types.includes('country')){\r\n                                setcountry(data[i].long_name?data[i].long_name:'')\r\n                            }\r\n                            if(data[i].types.includes('locality')){\r\n                                setstate(data[i].long_name?data[i].long_name:'')\r\n                            }\r\n                    }\r\n    \r\n                }\r\n    \r\n            }).catch((response)=>{\r\n               console.log(response)\r\n            })\r\n            }catch(e){\r\n               console.log(e)\r\n            }\r\n\r\n    }\r\n    // }\r\n}\r\n\r\n       useEffect(()=>{\r\n        GetPostal_code()\r\n       },[placeid])\r\n\r\n    const Add_Address = async () => {\r\n        await axios.post(`${url}/add/patient/address`, {\r\n            patient_id: props.patientid,\r\n            full_name: props.searchinput,\r\n            address_line_1: address,\r\n            address_line_2: '',\r\n            zip_code: pincode,\r\n            country: country,\r\n            state: state,\r\n            city: place,\r\n        }).then((response) => {\r\n            if (response.data.status == true) {\r\n                Notiflix.Notify.success(response.data.message)\r\n                if(props.form3 !== undefined){\r\n                    props.getAllPatients()\r\n              \r\n                }else{\r\n                    props.setpatientdata(response.data.data)\r\n                }\r\n \r\n                clear()\r\n            } \r\n            \r\n        })\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        customconfirm();\r\n        Notiflix.Confirm.show(\r\n            `Add New Address`,\r\n            `Do you surely want to add a new address of ${props.searchinput}`,\r\n            \"Yes\",\r\n            \"No\",\r\n            () => {\r\n                Add_Address()\r\n            },\r\n            () => {\r\n                return 0;\r\n            },\r\n            {}\r\n        );\r\n    };\r\n    const confirmmessage2 = (e) => {\r\n        customconfirm();\r\n        Notiflix.Confirm.show(\r\n            `Update Address`,\r\n            `Do you surely want to Update the following Address?`,\r\n            \"Yes\",\r\n            \"No\",\r\n            () => {\r\n                Update_Address()\r\n            },\r\n            () => {\r\n                return 0;\r\n            },\r\n            {}\r\n        );\r\n    };\r\n    const clear = () => {\r\n        setcountry()\r\n        setstate()\r\n        setData()\r\n        setplaceid()\r\n        setplace()\r\n        setpincode()\r\n        setaddress()\r\n    }\r\n    const fill_data = () => {\r\n        if (props.data != undefined) {\r\n            setaddress(props.data.address_line1 != undefined ? props.data.address_line1 : '')\r\n            setpincode(props.data.zip_code != undefined ? props.data.zip_code : '')\r\n            setlocation(props.data.city != undefined ? props.data.city : '')\r\n            setstate(props.data.state != undefined ? props.data.state : '')\r\n            setcountry(props.data.country != undefined ? props.data.country : '')\r\n        }\r\n    }\r\n\r\n    const Update_Address = async () => {\r\n        await axios.post(`${url}/update/patient/address`, {\r\n            address_id: props.data.id,\r\n            patient_id: props.data.patient_id,\r\n            full_name: props.searchinput,\r\n            address_line_1: address,\r\n            address_line_2: '',\r\n            zip_code: pincode,\r\n            country: country,\r\n            state: state,\r\n            city: place,\r\n        }).then((response) => {\r\n            if (response.data.status == true) {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Toggle_Address()\r\n                props.getAllPatients()\r\n                clear()\r\n            }\r\n            \r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fill_data()\r\n    }, [])\r\n    return (\r\n        <div className='text-center px-2 py-1'>\r\n            <div className=\"text-start\">\r\n                <h5 className='fw-bold text-charcoal py-2 ms-2'>{props.data != undefined ? 'Update Address' : 'Add New Address'}</h5>\r\n                <div className=\"btn-close position-absolute end-0 top-0 mt-2 me-2\" onClick={props.Toggle_Address}></div>\r\n                <div className=\"col-auto mx-2 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\" fw-bold text-charcoal75 \">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control \" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Address\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className={`col-12 d-${props.data != undefined ? 'block' : 'none'} my-2`}>\r\n                        <label className=\" fw-bold text-charcoal75\">Selected Location:<span className='text-charcoal ps-1'>{location ? location : <i>Not selected</i>}</span></label>\r\n                    </div>\r\n                    <div className=\"col-6 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\" fw-bold text-charcoal75\">{props.data != undefined ? 'Select another Location' : 'Select Location'}</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: location ? location : data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                Notiflix.Notify.warning(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-6 m-auto\">\r\n                            <label className=\" fw-bold text-charcoal75\">Pin Code</label>\r\n                            <input type=\"text\" className=\"form-control \" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                        </div>\r\n                        <div className=\"col-6 m-auto\">\r\n                            <label htmlFor=\"inputpincode\" className=\" fw-bold text-charcoal75\">State</label>\r\n                            <input type=\"text\"  className=\"form-control\" value={state?state:''} placeholder=\"state\" onChange={(e) => { setstate(e.target.value) }} required />\r\n                        </div>\r\n                        <div className=\"col-6 m-auto\">\r\n                            <label htmlFor=\"inputpincode\" className=\" fw-bold text-charcoal75\">Country</label>\r\n                            <input type=\"text\" className=\"form-control\" value={country ?country: ''} placeholder=\"country\" onChange={(e) => { setcountry(e.target.value) }} required />\r\n                        </div>\r\n\r\n                </div>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \r\n            </div>\r\n            <div className=\"button button-charcoal my-2 \" onClick={() => { props.data ? confirmmessage2() : confirmmessage() }}>Save</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddAddress }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Report.jsx",["1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459"],[],"\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../index\";\r\nimport axios from \"axios\";\r\nimport { lazy } from \"react\";\r\n// const StockReport =  lazy(() => import(\"./components/App/Report\"));\r\nimport { TransferIn } from '../Reports/pharmacy/TransferIn'\r\nimport { TransferOut } from '../Reports/pharmacy/TransferOut'\r\nimport { StockConfirmation } from '../Reports/pharmacy/stockconfirmation'\r\nimport { DoctorWiseSales } from '../Reports/pharmacy/doctorwisesales'\r\nimport { VendorDetails } from '../Reports/pharmacy/vendordetails'\r\nimport { BatchDetails } from '../Reports/pharmacy/batchdetails'\r\nimport { ScheduleWiseSales } from '../Reports/pharmacy/schedulewisesales'\r\nimport { PatientSalesHistory } from '../Reports/pharmacy/patientsaleshistory'\r\nimport { TaxWiseData } from '../Reports/pharmacy/taxwisedata'\r\nimport { GrossProfitMargin } from '../Reports/pharmacy/grossprofitmargin'\r\nimport { SummaryData } from '../Reports/pharmacy/summarydata'\r\nimport { RateList } from '../Reports/pharmacy/ratelist'\r\nimport { StockReport } from '../Reports/pharmacy/stockreport'\r\nimport { OpeningStock } from '../Reports/pharmacy/openingstock'\r\nimport { StockValuation } from '../Reports/pharmacy/stockvaluation'\r\nimport { StockReport_By_Name } from '../Reports/pharmacy/stockreport_by_name'\r\n//css\r\nimport \"../../css/bootstrap.css\";\r\nimport \"../../css/dashboard.css\";\r\nimport \"../../css/pharmacy.css\";\r\n// const StockReport = lazy(() => import(\"../Reports/stockreport\"));\r\n// const StockReport_By_Name = lazy(() => import(\"../Reports/stock_report_by_name\"));\r\n\r\nconst Reports = () => {\r\n  const permission = useContext(Permissions);\r\n  const [select, setselect] = useState('')\r\n  const [reportname,setreportname] =  useState('')\r\n  const first = [\r\n    {\r\n      option: \"Pharmacy\",\r\n      display: permission.sale_entry_view ? 1 : 0,\r\n    },\r\n    {\r\n      option: \"Clinic\",\r\n      display: permission.sale_return_view ? 1 : 0,\r\n    },\r\n  ];\r\n  const [second, setSecond] = useState(0)\r\n  const [secondname, setSecondname] = useState(\"Pharmacy\")\r\n\r\n\r\n  function selectfunc() {\r\n    if( select == ''){\r\n      return (\r\n        <div className=\"container rounded-4 border border-1  mt-5\" >\r\n          <h1 className=\"row p-0 m-0 align-items-center text-center fw-bold justify-content-center text-charcoal75\"style={{height:'50vh'}}>\r\n               Select Report to show data   \r\n            </h1> \r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (select == 1) {\r\n      window.open('/Reports/stock_report_by_name','_blank')\r\n      window.location.reload()\r\n      // return <StockReport_By_Name />\r\n    }\r\n    if (select == 2) {\r\n      window.open('/Reports/stock_valuation','_blank')\r\n      window.location.reload()\r\n\r\n      // return <StockValuation />\r\n    }\r\n    if (select == 3) {\r\n      window.open('/Reports/opening_stock','_blank')\r\n      window.location.reload()\r\n      // return <OpeningStock />\r\n    }\r\n    if (select == 4) {\r\n      return <RateList />\r\n    }\r\n    if (select == 5) {\r\n      return <SummaryData />\r\n    }\r\n    if (select == 6) {\r\n      return <TaxWiseData />\r\n    }\r\n    if (select == 7) {\r\n      return <GrossProfitMargin />\r\n    }\r\n    if (select == 7) {\r\n      return <GrossProfitMargin />\r\n    }\r\n    if (select == 8) {\r\n      return <PatientSalesHistory />\r\n    }\r\n    if (select == 9) {\r\n      return <ScheduleWiseSales />\r\n    }\r\n    if (select == 10) {\r\n      return <VendorDetails />\r\n    }\r\n    if (select == 11) {\r\n      return <BatchDetails />\r\n    }\r\n    if (select == 12) {\r\n      return <StockConfirmation />\r\n    }\r\n    if (select == 13) {\r\n      return <DoctorWiseSales />\r\n    }\r\n    if (select == 14) {\r\n      return <TransferIn />\r\n    }\r\n    if (select == 15) {\r\n      return <TransferOut />\r\n    }\r\n    if (select == 16) {\r\n      window.open('/Reports/stock_report','_blank')\r\n      window.location.reload()\r\n      // return <StockReport />\r\n\r\n    }\r\n  }\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return (\r\n        <div class=\"dropdown\">\r\n        <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          {reportname?reportname:\"Select Report\"}\r\n        </button>\r\n        <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n            <li className={`dropdown-item fw-bold text-charcoal`} onClick={(a) =>{ setselect(16);setreportname(\"Stock Report\");}} >Stock Report<img src={process.env.PUBLIC_URL + '/images/new_tab.png'} className=\"img-fluid\"/></li>\r\n            <li className={`dropdown-item fw-bold text-charcoal`} onClick={(a) =>{setselect(1); setreportname(\"StockReport By ItemName \");}}>StockReport By ItemName<img src={process.env.PUBLIC_URL + '/images/new_tab.png'} className=\"img-fluid\"/></li>\r\n            <li className={`dropdown-item fw-bold text-charcoal`} onClick={(a) =>{setselect(2); setreportname(\"Stock Valuation\");}}>Stock Valuation<img src={process.env.PUBLIC_URL + '/images/new_tab.png'} className=\"img-fluid\"/></li>\r\n            <li className={`dropdown-item fw-bold text-charcoal`} onClick={(a) =>{setselect(3); setreportname(\"Opening Stocks\");}}>Opening Stocks <img src={process.env.PUBLIC_URL + '/images/new_tab.png'} className=\"img-fluid\"/></li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(4); setreportname(\"Rate List\");}}>Rate List</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(5); setreportname(\"Summary Wise Data (for All)\");}}>Summary Wise Data (for All)</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(6); setreportname(\"Tax Rate Wise Data\");}}>Tax Rate Wise Data</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(7); setreportname(\"Gross Profit Margin\");}}>Gross Profit Margin</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(8); setreportname(\"Patient Sales History\");}}>Patient Sales History</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(9); setreportname(\"Schedule Wise Sales\");}}>Schedule Wise Sales</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(10); setreportname(\"Vendor Details\");}}>Vendor Details</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(11); setreportname(\"Batch Details\");}}>Batch Details</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(12); setreportname(\"Stock Value Confirmation\");}}>Stock Value Confirmation</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(13); setreportname(\"Doctor Wise Sales\");}}>Doctor Wise Sales</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(14); setreportname(\"Transfer Stocks In\");}}>Transfer Stocks In</li>\r\n            <li className={`dropdown-item fw-bold text-charcoal py-2`} onClick={(a) =>{setselect(15); setreportname(\"Transfer Stocks Out\");}}>Transfer Stocks Out</li>\r\n      </ul>\r\n      </div>\r\n\r\n      )\r\n\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"pharmacy_report_section pt-2\">\r\n        <div className=\"container-fluid p-0 m-0 mt-3\">\r\n          <div className=\"row gx-3 p-0 m-0\">\r\n            <div className=\"col-auto\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  {secondname?secondname:'Report Type '}\r\n                </button>\r\n\r\n                <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                  {\r\n                    first.map((e, i) => (\r\n                      <li className={`dropdown-item text-${i === second ? \"light\" : \"dark\"} fw-bold bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => {setSecond(i);setSecondname(e.option)}} > {e.option} </li>\r\n                    )\r\n                    ) \r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n              <div className=\"col-auto\">\r\n              <div className=\"\">{_selectedScreen(second)}</div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"col-auto\">\r\n            <section className=\"tablesrender position-relative p-0 m-0\">\r\n        <div className=\"container-fluid p-0 m-0 \">\r\n        <div>{selectfunc(select)}</div>\r\n   \r\n        </div>\r\n      </section>\r\n            </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Reports","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Patients\\UpdatePatient.jsx",["1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n// import {useJsApiLoader, Autocomplete } from '@react-google-maps/api'\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/patient.css';\r\n\r\nconst UpdatePatient = (props) => {\r\n    const url = useContext(URL);\r\n    let adminid = localStorage.getItem('id')\r\n    const [load,setload] =useState(false)\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState()\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n    const [placeid,setplaceid]=useState()\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const [is_verified,setis_verified]=useState()\r\n    const ismainref = useRef()\r\n\r\n\r\n    async function currentvalue() {\r\n        setgender(props.data.gender)\r\n        if (props.data.address[0] && props.data.address[0].address_line2) {\r\n            setaddress(props.data.address[0].address_line1 + props.data.address[0].address_line2)\r\n        } else if (props.data.address[0] && props.data.address[0].address_line1) {\r\n            setaddress(props.data.address[0].address_line1)\r\n        } else {\r\n            setaddress('')\r\n        }\r\n        props.phonecountrycode ? setcountrycode(props.phonecountrycode) : setcountrycode()\r\n        props.PhoneNo ? setphonenumber(props.PhoneNo.toString()) : setphonenumber()\r\n        props.full_name ? setfullname(props.full_name) : setfullname('')\r\n        props.dob ? setDOB(props.dob) : setDOB()\r\n        props.pincode ? setpincode(props.pincode) : setpincode()\r\n        props.email ? setemail(props.email) : setemail('')\r\n        props.location ? setplace(props.location) : setplace()\r\n        props.main ? setmain(props.main) : setmain()\r\n        props.latitude ? setlat(props.latitude) : setlat()\r\n        props.longitude ? setlng(props.longitude) : setlng()\r\n        props.data.is_profile_verified ?setis_verified(props.data.is_profile_verified):setis_verified()\r\n        if (props.parent === null) {\r\n            ismainref.current.value = '1'\r\n            setmain('1')\r\n        } else {\r\n            ismainref.current.value = '2'\r\n            setmain('2')\r\n            setdisplay('block')\r\n            setrelation(props.relation)\r\n        }\r\n\r\n        if (props.data.parent) {\r\n            if (props.data.parent.full_name || props.data.parent.email) {\r\n                setaccountinput(props.data.parent.full_name + \" | \" + props.data.parent.id + \" | \" + props.data.parent.email)\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        currentvalue()\r\n    }, [props.patient_id])\r\n\r\n\r\n    const d = (e) => {\r\n        if (e.target.value == 1) {\r\n            setdisplay('none')\r\n        }\r\n        if (e.target.value == 2) {\r\n            setdisplay('flex')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data.patient_list)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    async function UpdatePatient() {\r\n        setload(true)\r\n        try {\r\n            if (fullname && countrycode && phonenumber && DOB && email && address && pincode && main && adminid) {\r\n                await axios.post(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/update/patient`, {\r\n                    patient_id: props.patientid,\r\n                    full_name: fullname,\r\n                    phone_country_code: countrycode,\r\n                    phone_number: phonenumber,\r\n                    dob: DOB,\r\n                    gender: gender,\r\n                    email: email,\r\n                    address: address,\r\n                    pin_code: pincode,\r\n                    location: place ? place : props.location,\r\n                    is_main: main,\r\n                    latitude: props.latitude ? props.latitude : lat,\r\n                    longitude: props.longitude ? props.longitude : lat,\r\n                    relation: main == 2 ? props.relation ? props.relation : relation : '',\r\n                    link_id: main == 2 ? props.linkid ? props.linkid : linkid : '',\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    Notiflix.Notify.success(response.data.message);\r\n                    props.getAllPatients(0)\r\n                    props.CloseUpdatePatient()\r\n                    setload(false)\r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais');\r\n                setload(false)\r\n            }\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message)\r\n            setload(false)\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Patient Details`,\r\n            `Do you surely want to update ${props.data.full_name}'s Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdatePatient()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(()=>{\r\n        setplace(data && data.label != undefined ? data.label : '')\r\n        setplaceid(data && data.value !=undefined && data.value.place_id !=undefined ?data.value.place_id:'ChIJo2X9SlLiDDkRnZp6DO-GNP0')\r\n        GetPostal_code()\r\n    },[data])\r\n\r\n       const GetPostal_code = async()=>{\r\n        if(placeid != undefined){\r\n        await axios.get(`https://maps.googleapis.com/maps/api/place/details/json?key=AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE&place_id=${placeid}`).then((response)=>{\r\n                if(response){\r\n                    let data = response.data.result !=undefined ? response.data.result.address_components:[]\r\n                for(let i=0;i<data.length;i++){\r\n                        if(data[i].types.includes('postal_code')){\r\n                            setpincode(data[i].short_name?data[i].short_name:'')\r\n                        }\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n       }\r\n       useEffect(()=>{\r\n        GetPostal_code()\r\n       },[placeid])\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n    const ValidatePhone_Number = ()=>{\r\n        if (phonenumber !=undefined){\r\n        let number = phonenumber.toString().replace('91','')\r\n        setphonenumber(number)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        ValidatePhone_Number()\r\n    },[phonenumber])\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-3 position-relative\">Update Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseUpdatePatient} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                <input type='checkbox' checked={is_verified==1?true:false} className='form-check-input' onChange={()=>{is_verified ==0?setis_verified(1):setis_verified(0)}}/><span className='fw-bold ms-2 text-charcoal'>Is Profile Verified</span><br className='p-0 m-0'/><hr className='pt-1 mt-1'/>\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countryCode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countryCode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countryCode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countryCode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countryCode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countryCode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countryCode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countryCode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countryCode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countryCode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countryCode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countryCode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countryCode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countryCode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countryCode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countryCode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countryCode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countryCode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countryCode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countryCode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countryCode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countryCode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countryCode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countryCode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countryCode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countryCode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countryCode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countryCode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countryCode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countryCode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countryCode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countryCode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countryCode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countryCode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countryCode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countryCode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countryCode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countryCode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countryCode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countryCode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countryCode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countryCode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countryCode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countryCode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countryCode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countryCode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countryCode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countryCode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countryCode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countryCode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countryCode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countryCode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countryCode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countryCode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countryCode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countryCode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countryCode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countryCode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countryCode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countryCode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countryCode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countryCode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countryCode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countryCode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countryCode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countryCode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countryCode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countryCode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countryCode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countryCode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countryCode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countryCode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countryCode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countryCode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countryCode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countryCode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countryCode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countryCode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countryCode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countryCode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countryCode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countryCode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countryCode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countryCode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countryCode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countryCode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countryCode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countryCode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countryCode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countryCode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countryCode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countryCode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countryCode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countryCode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countryCode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countryCode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countryCode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countryCode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countryCode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countryCode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countryCode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countryCode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countryCode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countryCode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countryCode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countryCode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countryCode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countryCode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countryCode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countryCode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countryCode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countryCode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countryCode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countryCode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countryCode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countryCode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countryCode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countryCode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countryCode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countryCode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countryCode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countryCode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countryCode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countryCode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countryCode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countryCode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countryCode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countryCode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countryCode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countryCode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countryCode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countryCode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countryCode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countryCode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countryCode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countryCode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countryCode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countryCode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countryCode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countryCode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countryCode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countryCode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countryCode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countryCode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countryCode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countryCode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countryCode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countryCode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countryCode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countryCode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countryCode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countryCode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countryCode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countryCode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countryCode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countryCode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countryCode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countryCode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countryCode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countryCode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countryCode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countryCode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countryCode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countryCode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countryCode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countryCode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countryCode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countryCode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countryCode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countryCode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countryCode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countryCode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countryCode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countryCode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countryCode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countryCode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countryCode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countryCode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countryCode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countryCode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countryCode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countryCode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countryCode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countryCode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countryCode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countryCode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countryCode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countryCode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countryCode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countryCode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countryCode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countryCode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countryCode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countryCode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countryCode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countryCode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countryCode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countryCode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countryCode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countryCode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countryCode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countryCode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countryCode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countryCode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countryCode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countryCode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countryCode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countryCode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countryCode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countryCode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countryCode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countryCode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countryCode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countryCode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <input className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { setphonenumber(e.target.value) }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Location\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2 align-items-end\">\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: props.location ? props.location : data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                Notiflix.Notify.warning(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 align-self-end\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' ref={ismainref} onChange={(e) => { setmain(e.target.value); d(e); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`container m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' value={relation ? relation : ''} onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option>Select Relation</option>\r\n                                <option value='Son'>Son</option>\r\n                                <option value='Daughter'>Daughter</option>\r\n                                <option value='Father'>Father</option>\r\n                                <option value='Mother'>Mother</option>\r\n                                <option value='Husband'>Husband</option>\r\n                                <option value='Wife'>Wife</option>\r\n                                <option value='Brother'>Brother</option>\r\n                                <option value='Sister'>Sister</option>\r\n                                <option value='Grand Father'>Grand Father</option>\r\n                                <option value='Grand Mother'>Grand Mother</option>\r\n                                <option value='Grand Child'>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} start-0 end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-5\">\r\n                    <div className=\"col-6 text-center\">\r\n                        {\r\n                            load ?(\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                            ):(\r\n                                <button className=\"btn button-charcoal\" onClick={confirmmessage} > Save Changes </button>\r\n                            )\r\n                        }\r\n     \r\n                    </div>\r\n                    <div className=\"col-6 text-center\">\r\n                        <button className=\"btn button-pearl \" onClick={currentvalue}>Set Previous</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { UpdatePatient }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\batchdetails.jsx",["1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst BatchDetails = () => {\r\n  const permission = useContext(Permissions);\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const url = useContext(URL);\r\n  const BatchDetailsref = useRef();\r\n  const [searchname, setsearchname] = useState('')\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [batchdetailsarr, setbatchdetailsarr] = useState([]);\r\n  const [batcharr,setbatcharr] =useState([])\r\n  const [pages, setpages] = useState([]);\r\n  const [pagecount, setpagecount] = useState();\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&location=${ClinicID}&limit=25&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(Number(response.data.data.total_count_medicines + response.data.data.total_count_vaccines));\r\n          setpages(Math.round(Number(response.data.data.total_count_medicines + response.data.data.total_count_vaccines) / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETBatchDetails(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&location=${ClinicID}&limit=25&offset=0`)\r\n          .then((response) => {\r\n            ;\r\n            let arr = response.data.data.vaccines.concat(response.data.data.medicines)\r\n            setbatchdetailsarr(arr);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios.get(`${url}/stock/list?search=${searchname}&location=${ClinicID}&limit=25&offset=${Data.selected * 25}`)\r\n          .then((response) => {\r\n            ;\r\n            let arr = response.data.data.vaccines.concat(response.data.data.medicines)\r\n            setbatchdetailsarr(arr);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  const Get_Detailed_Data = async () => {\r\n    setbatcharr([]);\r\n    for (let i = 0; i < batchdetailsarr.length; i++) {\r\n      let totalcurrentstockarr = [];\r\n      if (batchdetailsarr[i].stock_info.length == 0) {\r\n        let batchobj = {\r\n          id: batchdetailsarr[i].id,\r\n          name: batchdetailsarr[i].name,\r\n          manufacturer: batchdetailsarr[i].manufacturer,\r\n          max_stock_count: batchdetailsarr[i].max_stock_count,\r\n          alert_stock_count: batchdetailsarr[i].alert_stock_count,\r\n          min_stock_count: batchdetailsarr[i].min_stock_count,\r\n        }\r\n        if (batchdetailsarr == undefined && batchdetailsarr.length == 0) {\r\n          setbatcharr(batchobj);\r\n        } else {\r\n          setbatcharr((prevState) => [...prevState, batchobj]);\r\n        }\r\n      } else {\r\n        for (let j = 0; j < batchdetailsarr[i].stock_info.length; j++) {\r\n          totalcurrentstockarr.push(\r\n            batchdetailsarr[i].stock_info[j].current_stock\r\n          );\r\n          let batchobj = {\r\n            id: batchdetailsarr[i].id,\r\n            name: batchdetailsarr[i].name,\r\n            manufacturer: batchdetailsarr[i].manufacturer,\r\n            max_stock_count: batchdetailsarr[i].max_stock_count,\r\n            alert_stock_count: batchdetailsarr[i].alert_stock_count,\r\n            min_stock_count: batchdetailsarr[i].min_stock_count,\r\n            CGST: batchdetailsarr[i].stock_info[j].CGST,\r\n            CGST_rate: batchdetailsarr[i].stock_info[j].CGST_rate,\r\n            IGST: batchdetailsarr[i].stock_info[j].IGST,\r\n            IGST_rate: batchdetailsarr[i].stock_info[j].IGST_rate,\r\n            SGST: batchdetailsarr[i].stock_info[j].SGST,\r\n            SGST_rate: batchdetailsarr[i].stock_info[j].SGST_rate,\r\n            batch_no: batchdetailsarr[i].stock_info[j].batch_no,\r\n            channel: batchdetailsarr[i].stock_info[j].channel,\r\n            cost: batchdetailsarr[i].stock_info[j].cost,\r\n            current_stock: batchdetailsarr[i].stock_info[j].current_stock,\r\n            discount: batchdetailsarr[i].stock_info[j].discount,\r\n            expiry_date: batchdetailsarr[i].stock_info[j].expiry_date,\r\n            free_qty: batchdetailsarr[i].stock_info[j].free_qty,\r\n            Batch_stock_id: batchdetailsarr[i].stock_info[j].id,\r\n            mfd_date: batchdetailsarr[i].stock_info[j].mfd_date,\r\n            mrp: batchdetailsarr[i].stock_info[j].mrp,\r\n            purchase_entry_id: batchdetailsarr[i].stock_info[j].purchase_entry_id,\r\n            qty: batchdetailsarr[i].stock_info[j].qty,\r\n            rate: batchdetailsarr[i].stock_info[j].rate,\r\n            trade_discount: batchdetailsarr[i].stock_info[j].trade_discount,\r\n            total_amount: batchdetailsarr[i].stock_info[j].total_amount,\r\n            totalstock: totalcurrentstockarr,\r\n          };\r\n          if (batchdetailsarr == undefined && batchdetailsarr.length == 0) {\r\n            setbatcharr(batchobj);\r\n          } else {\r\n            setbatcharr((prevState) => [...prevState, batchobj]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n    GETBatchDetails();\r\n    Get_Detailed_Data()\r\n  }, [searchname,fromdate,todate]);\r\n\r\n  useEffect(() => {\r\n    GETBatchDetails();\r\n  }, [pagecount]);\r\n  return (\r\n    <>\r\n    <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Batches Details\" : \"Batch Details\"}{\" \"}  </h2>\r\n      <div className=\"row p-0 m-0 text-center mt-2 ms-2\">\r\n        <div className=\"col-auto border-0 rounded-2 bg-seashell\">\r\n          <div className=\"row p-0 m-0 fw-bolder align-items-center align-self-center\">\r\n            <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n              <input type=\"text\" placeholder=\"itemname\" className=\"button button-seashell rounded-0 text-charcoal text-center fw-bolder \" value={searchname ? searchname : \"\"} onChange={(e) => { setsearchname(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">-</div>\r\n            <div className=\"col-auto p-0 m-0  text-charcoal text-center fw-bolder bg-seashell\">\r\n              <input type=\"date\" className=\"button button-seashell rounded-0 text-charcoal text-center bg-seashell fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-auto p-0 m-0 export align-self-center text-center \">\r\n          <DownloadTableExcel\r\n            filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Batch Details`}\r\n            sheet=\"BatchDetails\"\r\n            currentTableRef={BatchDetailsref.current}\r\n          >\r\n            <button className='button button-seashell text-start fw-bold'> Export</button>\r\n\r\n          </DownloadTableExcel> \r\n        </div>\r\n      </div>  \r\n      <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n        <table className=\"table text-start table-responsive\" ref={BatchDetailsref}>\r\n          <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n            <tr className=\" \">\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Item ID </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Item Name</th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Batch No. </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Purchase Date </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Expiry Date </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Qty </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">MRP </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Cost </th>\r\n            </tr>\r\n          </thead>\r\n          {Loading ? (\r\n            <tbody\r\n              className=\"text-center\"\r\n              style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n            >\r\n              <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                <div class=\"d-flex align-items-center spinner\">\r\n                  <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                    Getting Details please be Patient ...\r\n                  </strong>\r\n                  <div\r\n                    className=\"spinner-border ms-auto\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></div>\r\n                </div>\r\n              </tr>\r\n            </tbody>\r\n          ) : batcharr && batcharr.length != 0 ? (\r\n            <tbody>\r\n              {batcharr.map((item, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                  <td className=\"text-charcoal fw-bold\">{item.id?item.id:''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.name?item.name:''}</td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.batch_no?item.batch_no:''} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.expiry_date?reversefunction(item.expiry_date):\"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.qty?item.qty:''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">₹{item.mrp?item.mrp:''}</td>\r\n                  <td className=\"text-charcoal fw-bold\">₹{item.cost?item.cost:''}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <strong className=\"text-charcoal fw-bolder text-center\"> No Batch Details </strong>\r\n              </div>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETBatchDetails}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { BatchDetails }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockreport_by_name.jsx",["1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { customconfirm } from \"../../features/notiflix/customconfirm\";\r\n//css\r\nimport \"../../../css/bootstrap.css\";\r\nimport \"../../../css/dashboard.css\";\r\nimport \"../../../css/pharmacy.css\";\r\n\r\nconst StockReport_By_Name = () => {\r\n    const medicinesref = useRef(null);\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const StockReport_By_Name_ref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [stockreportarr, setstockreportarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    //search meds\r\n    const [itemsearch, setitemsearch] = useState([\"\"]);\r\n    const [itemname, setitemname] = useState();\r\n    const [itemid, setitemid] = useState();\r\n    const [itemtype, setitemtype] = useState('');\r\n    const [loadsearch, setloadsearch] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n\r\n    // function GetPages() {\r\n    //     if (itemid && itemtype && itemid !== undefined && itemtype !== undefined) {\r\n    //     try {\r\n    //         axios.get(`${url}/reports/stock/report/by/item?item_id=${itemid}&item_type=${itemtype}&from=${fromdate ? fromdate : currentDate}&to=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n    //             .then((response) => {\r\n    //                 setpagecount(response.data.data.count);\r\n    //                 setpages(Math.round(response.data.data.count / 25) + 1);\r\n    //                 setLoading(false);\r\n    //             })\r\n    //             .catch((e) => {\r\n    //                 Notiflix.Notify.warning(e.message);\r\n    //                 setLoading(false);\r\n    //             });\r\n    //     } catch (e) {\r\n    //         Notiflix.Notify.warning(e.message);\r\n    //         setLoading(false);\r\n    //     }\r\n    //     }\r\n    // }\r\n    function GETStockReport(Data) {\r\n        // if (itemid && itemtype && itemid !== undefined && itemtype !== undefined) {\r\n            if (itemid !== undefined){\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report/by/item?item_id=${itemid ? itemid : ''}&item_type=${itemtype ? itemtype : ''}&from=${fromdate ? fromdate : currentDate}&to=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setstockreportarr(dataarr.flat());\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report/by/item?item_id=${itemid}&item_type=${itemtype}&from=${fromdate ? fromdate : currentDate}&to=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setstockreportarr(dataarr.flat());\r\n                        // setstockreportarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n        // } else {\r\n        //     Notiflix.Notify.info('Please Select Item to get the stock report')\r\n        // }\r\n    }\r\n\r\n    const searchmeds = async (search) => {\r\n       \r\n        setloadsearch(true);\r\n        try {\r\n            await axios.get(`${url}/item/search?search=${search}`)  \r\n                .then((response) => {\r\n                    let medicines = [];\r\n                    let vaccines = [];\r\n                    let items = [];\r\n                    medicines.push(response.data.data.medicines ? response.data.data.medicines : []);\r\n                    vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : []);\r\n                    items = medicines.concat(vaccines);\r\n                    items = items.flat();\r\n                    setitemsearch(items);\r\n                    setloadsearch(false);\r\n                    if (search.length > 1) {\r\n                        medicinesref.current.style.display = \"block\";\r\n                    } else {\r\n                        medicinesref.current.style.display = \"none\";\r\n                    }\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.data.message);\r\n        }\r\n    \r\n    };\r\n    // useEffect(() => {\r\n    //     GetPages();\r\n    // }, [itemid, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETStockReport();\r\n    }, [itemid, fromdate, todate]);\r\n\r\n    const parentArray = Object.keys(stockreportarr).map(key => ({\r\n        id: key,\r\n        ...stockreportarr[key]\r\n    }));\r\n    return (\r\n        <>\r\n                    <h2 className=\" ms-3 text-charcoal fw-bolder mt-4\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? ` Stock Reports By Name` : ` Stock Report By Name`}{\" \"}  </h2>\r\n            <div className=\"row p-0 m-0  mt-2 ms-2\">\r\n            <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell me-2 align-items-center rounded-2\">\r\n                            <div className=\"position-relative\">\r\n                                <input className=\"fw-bold button button-seashell text-charcoal border-0 text-center bg-seashell\" placeholder=\"Search Items\" value={itemname ? itemname : \"\"} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemtype(); }} />\r\n                                <div ref={medicinesref} className=\"position-absolute rounded-4 col-12\" style={{ zIndex: \"2\" }} >\r\n                                    {\r\n                                        itemsearch ? (\r\n                                            loadsearch ? (\r\n                                                <div className=\"rounded-1 p-1 bg-pearl\">\r\n                                                    Searching Please wait....\r\n                                                    <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                        <span className=\"sr-only\"> </span>{\" \"}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : itemsearch.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1 text-wrap\"> Oops! Not Avaliable </div>\r\n                                            ) : (\r\n                                                <div className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1 ? \"block\" : \"none\"}`} >\r\n                                                    <p className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 text-start rounded-4 ps-2 `} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                                                    {itemsearch.map((data, i) => (\r\n                                                        <div style={{ cursor: \"pointer\" }} className={`p-0 ps-1 text-start text-charcoal text-wrap py-2  bg-${i % 2 == 0 ? \"\" : \"seashell\"}`} name={data.id} onClick={(e) => { setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); setitemtype(data.vaccines_id ? \"v\" : \"m\"); medicinesref.current.style.display = \"none\"; }} >\r\n                                                            {data.display_name ? data.display_name : data.name}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            )\r\n                                        ) : (\r\n                                            <></>\r\n                                        )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                  \r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">-</div>\r\n            <div className=\"col-auto p-0 m-0  text-charcoal text-center fw-bolder bg-seashell\">\r\n              <input type=\"date\" className=\"button button-seashell rounded-0 text-charcoal text-center bg-seashell fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n            </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockReports_by_Name`}\r\n                        sheet=\"StockReports_by_Name\"\r\n                        currentTableRef={StockReport_By_Name_ref.current}\r\n                    >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={StockReport_By_Name_ref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Date Opening </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Invoice No. </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Party Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Batch </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">  Price </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">  Qty In </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Qty Out  </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Closing </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody className=\"text-center\" style={{ minHeight: \"55vh\", height: \"55vh\" }} >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : stockreportarr && stockreportarr.length != 0 ? (\r\n                        <tbody>\r\n                            {parentArray.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{itemtype} </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Stock Reports By Name </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETStockReport}\r\n                    containerClassName={\"pagination scroll align-self-center align-items-center\"}\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"}\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockReport_By_Name \r\n","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\summarydata.jsx",["1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557","1558","1559"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst SummaryData = () => {\r\n    const permission = useContext(Permissions);\r\n    const d = new Date();\r\n    const date = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\r\n    const monthcount = d.getMonth() + 1 < 10 ? `0${d.getMonth() + 1}` : d.getMonth() + 1;\r\n    const yearcount = d.getFullYear();\r\n    var currentDate = `${yearcount}-${monthcount}`;\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const OpeningStockref = useRef();\r\n\r\n    // const [fromdate, setfromdate] = useState();\r\n    // const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [summarydataarr, setsummarydataarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    const [fromdate, setfromdate] = useState()\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n    // https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/reports/summary/wise/data\r\n\r\n    function GETSummaryData() {\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`${url}/reports/summary/wise/data?from_date=${fromdate ? fromdate : currentDate}`)\r\n                .then((response) => {\r\n                    ;\r\n                    const parentArray = Object.keys(response.data.data).map(key => ({\r\n                        particular: key,\r\n                        ...response.data.data[key]\r\n                    }));\r\n                    setsummarydataarr(parentArray);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e.message);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GETSummaryData();\r\n    }, [fromdate]);\r\n    let months = [[\"Jan\", '01'], [\"Feb\", \"02\"], [\"Mar\", \"03\"], [\"Apr\", \"04\"], [\"May\", \"05\"], [\"Jun\", \"06\"], [\"Jul\", \"07\"], [\"Aug\", \"08\"], [\"Sep\", \"09\"], [\"Oct\", \"10\"], [\"Nov\", \"11\"], [\"Dec\", \"12\"]]\r\n    function month_explorer(date) {\r\n        date = date.split(\" to \")\r\n        let fromdate = date[0];\r\n        let todate = date[1]\r\n        fromdate = fromdate.split('-')\r\n\r\n        for (let i = 0; i < months.length; i++) {\r\n            if (fromdate[1] == months[i][1]) {\r\n                fromdate[1] = months[i][0]\r\n            }\r\n        }\r\n        let newdate = fromdate[1] + \" \" + fromdate[0]\r\n        return newdate\r\n    }\r\n    return (\r\n        <>\r\n                <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Summary Data\" : \"Summary Data\"}{\" \"} </h2>\r\n\r\n            <div className=\"row p-0 m-0 align-items-center ms-2\">\r\n            <div className=\"col-auto text-charcoal text-center fw-bolder bg-seashell rounded-2\">\r\n                    <input type=\"month\" placeholder=\"month\" className=\"form-control rounded-0 border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} /> \r\n            </div>\r\n        \r\n                <div className=\"col-auto p-0 m-0 export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={` Summary Data`}\r\n                        sheet=\"SummaryData\"\r\n                        currentTableRef={OpeningStockref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start fw-bold'> Export</button>\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={OpeningStockref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Particular</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Taxable </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Tax </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : summarydataarr && summarydataarr.length != 0 ? (\r\n                        <tbody>\r\n                            {summarydataarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">{item.particular !== undefined ? month_explorer(item.particular) : \"\"} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.taxable !== undefined ? Number(item.taxable).toFixed(2) : \"\"} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.tax !== undefined ? Number(item.tax).toFixed(2) : \"\"} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.taxable !== undefined && item.tax !== undefined ? Number(Number(item.taxable) + Number(item.tax)).toFixed(2) : ''} </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Rate Lists </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { SummaryData }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddPatient.jsx",["1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612"],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\WelcomeLoader.jsx",[],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\InactiveLogout.jsx",[],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\DSR.jsx",["1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636"],[],"import axios from \"axios\"\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { Appointments_Dsr } from '../Dsr/Appointments_Dsr'\r\nimport { Doctors_Dsr } from '../Dsr/Doctors_Dsr'\r\nimport { Pharmacy_Dsr } from '../Dsr/Pharmacy_Dsr'\r\nimport { URL, TodayDate, DoctorsList, Permissions } from '../../index'\r\n\r\n\r\nfunction DailySaleReport(props) {\r\n  const permission = useContext(Permissions)\r\n  const Doctors = useContext(DoctorsList)\r\n  const CurrentDate = useContext(TodayDate)\r\n  const clinicid = localStorage.getItem('ClinicId')\r\n  const options = [\r\n    {\r\n      option: 'Appointments',\r\n      display: permission.dsr_appointments ? 1 : 0,\r\n    },\r\n    {\r\n      option: 'Doctors',\r\n      display: permission.dsr_doctor_timings ? 1 : 0,\r\n    },\r\n    {\r\n      option: 'Pharmacy',\r\n      display: permission.dsr_pharmacy ? 1 : 0\r\n    }\r\n\r\n  ]\r\n  // permission.dsr_appointments ? 0 :  permission.dsr_doctor_timings ? 1 : permission.dsr_pharmacy ? 2:''\r\n  const [menu, setmenu] = useState(permission.dsr_appointments ? 0 : permission.dsr_doctor_timings ? 1 : permission.dsr_pharmacy ? 2 : '')\r\n  const [type, settype] = useState('text')\r\n  const [doctorid, setdoctorid] = useState()\r\n  const [doctorname, setdoctorname] = useState()\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [clinic, setclinic] = useState(clinicid)\r\n  const [clinicname, setclinicname] = useState(\"Aartas CliniShare Delhi\")\r\n\r\n\r\n  function ToggleOptions(_menu) {\r\n    if (permission.dsr_appointments == 1 && _menu == 0) {\r\n      return <Appointments_Dsr clinic={clinic} doctorid={doctorid} fromdate={fromdate ? fromdate : CurrentDate} todate={todate ? todate : fromdate} />\r\n    }\r\n    if (permission.dsr_doctor_timings == 1 && _menu == 1) {\r\n      return <Doctors_Dsr clinicid={clinicid} doctorid={doctorid} fromdate={fromdate ? fromdate : CurrentDate} todate={todate ? todate : fromdate} />\r\n    }\r\n    if (permission.dsr_pharmacy == 1 && menu == 2) {\r\n      return <Pharmacy_Dsr clinicid={clinicid} doctorid={doctorid} fromdate={fromdate ? fromdate : CurrentDate} todate={todate ? todate : fromdate} />\r\n    }\r\n    return <div>Please Select an Option from above</div>\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"DSRsection mt-1\">\r\n      <div className=\"p-0 m-0 mb-2\">\r\n        <div className=\"row p-0 m-0 options align-items-center bg-seashell \">\r\n          <div className=\" hstack gap-3 d-flex p-0 m-0 p-1 align-items-center\">\r\n            {\r\n              options.map((data, i) => (\r\n                <>\r\n                  <div className={`col-auto p-0 m-0 d-${data.display == 1 ? '' : 'none'}`}>\r\n                    <button className={`button m-0 p-0 px-2 py-1 ms-1 border-0 button-${i == menu ? 'charcoal' : 'seashell text-charcoal75 fw-bold'} `} id={i} key={i} onClick={() => { setmenu(i) }}>{data.option}</button>\r\n                  </div>\r\n                  <div className={`vr rounded-1 h-50 align-self-center d-${data.display == 1 ? '' : 'none'}`} style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n\r\n          <div className=\"row p-0 m-0 align-items-center align-self-center mt-2 ms-2 \">\r\n          <div className=\"col-auto p-0 m-0 bg-seashell rounded-2\">\r\n          <div className=\"dropdown \">\r\n            <button className=\" button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> {clinicname?clinicname:\"Select Clnic\"} </button>\r\n            <ul className=\"dropdown-menu bg-seashell border-0 shadow-sm\" >\r\n            {\r\n                        props.cliniclist ? (\r\n                          props.cliniclist.map((data) => (\r\n                            <li className={`text-start p-2 text-charcoal fw-bolder border-bottom py-2 text-${clinic==data.id ? 'white':'charcoal'} bg-${clinic==data.id?'charcoal':''}`} onClick={() => { setclinic(data.id);setclinicname(data.title) }}>{data.title} </li>\r\n                          ))\r\n                        ) : (\r\n                          <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" >Loading...</li>\r\n                          )\r\n            }\r\n            </ul>\r\n          </div>\r\n                    {/* <select className=\"button button-seashell fw-bolder border-0 w-100 custom_select\" value={clinic ? clinic : ''} onChange={(e) => { setclinic(e.target.value) }}>\r\n                      <option value=\"Select Clinic\">Clinic</option>\r\n              \r\n                    </select> */}\r\n                    </div>\r\n                    <div className=\"col-auto p-0 m-0 ms-1 bg-seashell rounded-2\">\r\n                    <div className=\"dropdown \">\r\n            <button className=\" button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> {doctorname?doctorname:\"Select Doctor\"} </button>\r\n            <ul className=\"dropdown-menu bg-seashell border-0 scroll-y scroll\" style={{maxHeight:'50vh'}} >\r\n            <li className={`text-start p-2 text-charcoal fw-bolder border-bottom py-2 text-${doctorid=='' ? 'white':'charcoal'} bg-${doctorid==''?'charcoal':''}`} onClick={() => { setdoctorid('');setdoctorname(`` ) }}>All Doctors </li>\r\n            {\r\n                        Doctors ? (\r\n                          Doctors.map((data) => (\r\n                            <li className={`text-start p-2 text-charcoal fw-bolder border-bottom py-2 text-${doctorid==data[0] ? 'white':'charcoal'} bg-${doctorid==data[0]?'charcoal':''}`} onClick={() => { setdoctorid(data[0]);setdoctorname(`Dr.${data[1]}` ) }}>Dr.{data[1]}  </li>\r\n                          ))\r\n                        ) : (\r\n                          <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" >Loading...</li>\r\n                          )\r\n            }\r\n            </ul>\r\n          </div>\r\n                    {/* <select className=\"button button-seashell fw-bolder border-0 w-100\" value={doctorid ? doctorid : ''} onChange={(e) => setdoctorid(e.target.value)}>\r\n                      <option value='Doctors'>Select Doctor</option>\r\n                      {\r\n                        Doctors.map((data) => (\r\n                          <>\r\n                            <option className=\"text-start\" value={data[0]}> Dr.{data[1]} </option>\r\n\r\n                          </>\r\n                        ))\r\n                      } \r\n                    </select> */}\r\n                    </div>\r\n                    <div className=\"col-5 bg-seashell rounded-2 ms-1 \">\r\n                    <div className=\"row p-0 m-0 text-center justify-content-between bg-seashell align-items-center align-self-center\">\r\n                      <div className=\"col-5 p-0 m-0\">\r\n                      <input type='date' placeholder=\"from Date\" value={fromdate ? fromdate : CurrentDate ? CurrentDate : ''} className='button button-seashell w-100 border-0 rounded-0 fw-bolder text-charcoal ' onChange={(e) => setfromdate(e.target.value)} />\r\n\r\n                      </div>\r\n                      <div className=\"col-auto p-0 m-0\"> - </div>\r\n                      <div className=\"col-5 p-0 m-0\">\r\n                      <input type='date' placeholder=\"to Date\" value={todate ? todate :fromdate?fromdate: CurrentDate ? CurrentDate : ''} className='button button-seashell border-0 fw-bolder text-charcoal ' onChange={(e) => settodate(e.target.value)} />\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n          </div>\r\n       \r\n      </div>\r\n      <div className=\"container-fluid m-0 p-0  \">\r\n        <div className=\"p-0 m-0\">{ToggleOptions(menu)}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailySaleReport","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Navbar.jsx",["1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663"],[],"import React, { useMemo, useRef } from 'react'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext } from \"react\";\r\n\r\n//Context APIs\r\nimport { Permissions } from '../../index'\r\n//Components\r\nimport { SearchField } from '../features/SearchField'\r\nimport { AddPatient } from '../Today/AddPatient'\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\nimport { AddAppointment } from '../Today/AddAppointment'\r\n\r\n\r\nfunction Navbar(props) {\r\n    const message_Box = useRef()\r\n    const adminid = localStorage.getItem(\"id\");\r\n    //Use States\r\n    const [searchtext, setsearchtext] = useState()\r\n    const [patientform, setpatientform] = useState(\"none\");\r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    const [doctorform, setdoctorform] = useState(\"none\");\r\n    const [Docval, setDocval] = useState()\r\n    const [highlighticon, sethighlighticon] = useState()\r\n\r\n    const location = useLocation()\r\n    const togglepatientform = () => {\r\n        if (patientform === \"none\") {\r\n            setpatientform(\"block\");\r\n        } else if (patientform === \"block\") {\r\n            setpatientform(\"none\");\r\n        }\r\n    };\r\n\r\n\r\n    const toggleappointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\");\r\n        } else if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\");\r\n        }\r\n    };\r\n\r\n    const toggledoctorform = () => {\r\n        if (doctorform === \"none\") {\r\n            setDocval(1)\r\n            setdoctorform(\"block\");\r\n\r\n        } else if (doctorform === \"block\") {\r\n            setDocval(0)\r\n            setdoctorform(\"none\");\r\n        }\r\n    };\r\n\r\n\r\n    const NavbarIcons = [\r\n        {\r\n            title: 'Today',\r\n            path: '/',\r\n            image: '/images/today.png',\r\n            display: props.permissions.dashboard_view !== undefined ? props.permissions.dashboard_view : 0\r\n\r\n        },\r\n        {\r\n            title: 'Appointments',\r\n            path: '/Appointments',\r\n            image: '/images/appointment.png',\r\n            display: props.permissions.appointment_view !== undefined ? props.permissions.appointment_view : 0\r\n\r\n        },\r\n        {\r\n            title: 'Patients',\r\n            path: '/Patients',\r\n            image: '/images/patient.png',\r\n            display: props.permissions.patient_view !== undefined ? props.permissions.patient_view : 0\r\n\r\n        },\r\n        {\r\n            title: 'Doctors',\r\n            path: '/Doctors',\r\n            image: '/images/doctor.png',\r\n            display: props.permissions.doctor_view !== undefined ? props.permissions.doctor_view : 0\r\n        },\r\n        {\r\n            title: 'DSR',\r\n            path: '/DailySaleReport',\r\n            image: '/images/dsr.png',\r\n            display: props.permissions.dsr_pharmacy == undefined && props.permissions.dsr_appointment == undefined && props.permissions.dsr_doctor_timings == undefined ? 0 : 1\r\n        },\r\n        {\r\n            title: 'Pharmacy',\r\n            path: '/pharmacy',\r\n            image: '/images/Pharmacy.png',\r\n            display: props.permissions.purchase_entry_view == undefined && props.permissions.purchase_orders_view == undefined && props.permissions.purchase_return_view == undefined && props.permissions.sale_entry_view == undefined && props.permissions.sale_return_view == undefined ? 0 : 1\r\n        },\r\n        {\r\n            title: 'Reports',\r\n            path: '/Reports',\r\n            image: '/images/report.png',\r\n            display: props.permissions.purchase_entry_view == undefined && props.permissions.purchase_orders_view == undefined && props.permissions.purchase_return_view == undefined && props.permissions.sale_entry_view == undefined && props.permissions.sale_return_view == undefined ? 0 : 1\r\n        },\r\n\r\n    ]\r\n    //websocket\r\n    // const [Users, setUsers] = useState([])\r\n    // const [messages, setmessages] = useState([])\r\n    // const [openchat, setopenchat] = useState('none')\r\n    // const [sendmessage, setsendmessage] = useState()\r\n    // const [user, setuser] = useState()\r\n    // const [online, setonline] = useState(0)\r\n\r\n    // let JsonData = {\r\n    //     action: 'username',\r\n    //     username: '',\r\n    //     message: sendmessage,\r\n    //     id: adminid\r\n    // }\r\n\r\n\r\n    // let socket = new WebSocket('ws://192.168.3.27:8080/Chat')\r\n\r\n    // useEffect(() => {\r\n    //     socket.onopen = () => {\r\n    //         setonline(1)\r\n    //     }\r\n    //     socket.onmessage = (msg) => {\r\n    //         let data = JSON.parse(msg.data)\r\n    //         switch (data.action) {\r\n    //             case \"UserLists\":\r\n    //                 if (data.connected_users.length > 0) {\r\n    //                     setUsers(data.connected_users)\r\n    //                 }\r\n    //                 break;\r\n    //             case \"Broadcast\":\r\n    //                 if (data.message) {\r\n    //                     if (data.message.length > 0) {\r\n    //                         setmessages(data.message)\r\n    //                         setuser(data.user)\r\n    //                     }\r\n    //                 }\r\n    //                 break;\r\n    //         }\r\n\r\n    //     }\r\n    // }, [socket.data])\r\n    // socket.onclose = (event) => {\r\n    //     if (event.code === 1001) {\r\n    //         socket.close()\r\n    //         setonline(0)\r\n    //     }\r\n    // }\r\n    // let JsonDataOut = {\r\n    //     action: 'left',\r\n    //     username: props.username,\r\n    //     message: '',\r\n    //     id: adminid\r\n    // }\r\n    // window.addEventListener('beforeunload', function () {\r\n    //     JsonDataOut = {\r\n    //         action: 'left',\r\n    //         username: props.username,\r\n    //         message: '',\r\n    //         id: adminid\r\n    //     }\r\n    // })\r\n    // window.addEventListener('unload', function () {\r\n    //     if (JsonDataOut) {\r\n    //         // socket.onopen = () => {\r\n    //         socket.send(JSON.stringify(JsonData))\r\n    //         // }\r\n    //     }\r\n\r\n    // })\r\n    // useEffect(() => {\r\n    //     JsonData = {\r\n    //         action: 'username',\r\n    //         username: props.username,\r\n    //         message: sendmessage,\r\n    //         id: adminid\r\n    //     }\r\n\r\n    //     socket.onopen = () => {\r\n    //         socket.send(JSON.stringify(JsonData))\r\n    //     }\r\n\r\n    // }, [props.username])\r\n\r\n\r\n    // function LeftChat() {\r\n    //     JsonData = {\r\n    //         action: 'left',\r\n    //         username: props.username,\r\n    //         message: '',\r\n    //         id: adminid\r\n    //     }\r\n    //     socket.onopen = () => {\r\n    //         socket.send(JSON.stringify(JsonData))\r\n    //     }\r\n    // }\r\n\r\n    // function Braodcast() {\r\n    //     JsonData = {\r\n    //         action: 'broadcast',\r\n    //         username: props.username,\r\n    //         message: sendmessage,\r\n    //         Id: adminid\r\n    //     }\r\n    //     socket.send(JSON.stringify(JsonData))\r\n    // }\r\n    // function Toggle_Chat() {\r\n    //     if (openchat == 'none') {\r\n    //         setopenchat('block')\r\n    //     }\r\n    //     if (openchat == 'block') {\r\n    //         setopenchat('none')\r\n    //     }\r\n\r\n    // }\r\n    return (\r\n        <div className='shadow shadow-sm' style={{zIndex:'10'}}>\r\n            <div className=\"navsection p-0 m-0 py-1\">\r\n                <div className=\"container-fluid p-0 m-0 \">\r\n                    <div className=\"row m-0 p-0 justify-content-lg-between justify-content-md-between justify-content-sm-between justify-content-between align-items-center\">\r\n                        <div className=\"col-lg-auto col-xl-auto col-md-2 col-sm-auto col-auto p-0 m-0 ms-2 text-start dropdown logout\">\r\n                            <button className=\"button dropdown-toggle button-seashell shadow-none d-inline-block col-md-auto col-auto user position-relative p-0 m-0 ms-2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                <h1 className=\"m-0 username text-decoration-none  text-start fw-bold\"> {props.username} </h1>\r\n                                <div className=\"m-0 userstatus text-decoration-none text-start text-burntumber fw-bold text-wrap\" >{props.designation} </div>\r\n                                <ul class=\"dropdown-menu p-0 m-0 border-0\" onClick={props.logout}>\r\n                                    <li class=\"dropdown-item p-0 m-0 bg-lightred50 text-center rounded-2 p-1 fw-bold border-0 text-burntumber\">Logout</li>\r\n                                </ul>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-lg-auto col-xl-7 align-self-center col-sm-auto col-md-auto col-12 p-0 m-0 menu order-2 order-xl-0 order-sm-0 order-md-0 mt-lg-0 mt-md-0 md-sm-0\">\r\n                            <div className=\"row p-0 m-0 justify-content-sm-center justify-content-evenly\">\r\n                                {\r\n                                    NavbarIcons.map((data, i) => (\r\n                                        <div className={`col-auto p-0 m-0 align-self-end d-${data.display == 1 ? '' : 'none'} `} onClick={() => sethighlighticon(data.path)}>\r\n                                            <Link to={data.path} className=\"text-decoration-none\">\r\n                                                <div className=\"text-center\">\r\n                                                    <img src={process.env.PUBLIC_URL + data.image} alt=\"displaying_image\" className={`img-fluid rounded-1 p-2 bg-${location.pathname === data.path ? 'burntumber25' : 'seashell'}`} style={{width:'1.5rem', boxSizing: 'content-box' }} />\r\n                                                </div>\r\n                                                <small className=\"col-12 m-0 p-0 px-2 text-center fw-bold text-charcoal\">{data.title}</small>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {/* className=\"col-lg-2 col-xl-2 col-md-2 col-sm-6 col-6 mt-sm-2 search text-center position-relative\" */}\r\n                        <div className=\"col-lg-auto col-xl-2 col-md-2 col-8 col-sm-auto text-center align-self-center position-relative p-0 m-0 order-sm-2 order-md-1 order-1 \">\r\n                            <div className=\"row p-0 m-0 align-items-center justify-content-md-start justify-content-center\">\r\n                                <div className=\"col-sm-auto col-xl-8 col-lg-8 col-md-8 me-1 col-7 p-0 m-0 position-relative \" style={{ zIndex: '3' }} >\r\n                                    <input type=\"text\" disabled={true} className=\"rounded-1 text-charcoal search bg-charcoal25 positon-relative border border-0 text-start py-sm-1 ps-2 py-1 fw-bold\" placeholder=\"search\" onChange={(e) => setsearchtext(e.target.value)} />\r\n                                    <div className=\"position-absolute bg-pearl rounded-2 end-0 shadow mt-1 \" style={{ width: '60vh' }}>\r\n                                        <SearchField searchtext={searchtext} fetchapi={props.fetchapi} />\r\n                                    </div>\r\n                                </div>\r\n                                {/* col-xl-2 col-md-auto col-sm-auto col-6  */}\r\n                                <div className={`col-auto p-0 m-0 dropdown addbutton text-decoration-none me-sm-1 d-${props.permissions.patient_add == undefined && props.permissions.doctor_add == undefined && props.permissions.appointment_add == undefined ? 'none' : ''}`}>\r\n                                    <button className=\"button p-0 m-0 px-2 pe-2 py-1 mt-md-1 mt-lg-0 button-burntumber dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        + Add\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\">\r\n                                        <li className={`dropdown-item text-charcoal border-bottom d-${props.permissions.patient_add == 1 ? '' : 'none'} fs-6`} onClick={() => { togglepatientform() }}>+ Patient</li>\r\n                                        <li className={`d-${props.permissions.appointment_add == 1 ? '' : 'none'} text-charcoal dropdown-item border-bottom fs-6`} onClick={() => { toggleappointmentform() }}>+ Appointment</li>\r\n                                        <li className={`dropdown-item fs-6 text-charcoal`} onClick={() => { toggledoctorform() }}>+ Doctor</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`col-lg-5 col-md-6 col-sm-12 col-12 rounded-4 px-2 me-lg-2 me-md-2 mt-2 bg-seashell scroll shadow patientinfosection d-${patientform} border position-absolute`}>\r\n                <AddPatient togglepatientform={togglepatientform} patientform={patientform} />\r\n            </div>\r\n\r\n            <div className={`col-lg-5 col-md-6 col-sm-12 rounded-4 p-2 me-lg-2 me-md-2 mt-2 col-12 bg-seashell shadow appointmentinfosection d-${appointmentform} border position-absolute`} style={{ zIndex: '4', right: '0' }} >\r\n                <AddAppointment toggleappointmentform={toggleappointmentform} fetchapi={props.fetchapi} />\r\n            </div>\r\n            {\r\n                Docval == 1 ? (\r\n                    <div className={`col-lg-5 col-md-6 col-sm-12 col-12 px-2 me-lg-2 me-md-2 mt-lg-2 mt-md-2 mt-1 bg-seashell shadow rounded-4 doctorinfosection d-${doctorform} border position-absolute`} >\r\n                        <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop3'} fetchapi={props.fetchapi} />\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n{/* \r\n            <div className=\"position-absolute bottom-0 end-0 me-5 mb-3 d-block\" style={{zIndex:'10  '}}>\r\n                <button className={`btn p-0 m-0 text-pearl fw-bold bg-charcoal p-2`} onClick={() => Toggle_Chat()}>Chat</button>\r\n            </div>\r\n            <div className={`d-${openchat}`} ref={message_Box} style={{ zIndex: '4' }}>\r\n                <div className={`message_box`}  >\r\n                    <div div className='message_box bg-seashell border border-1 shadow-sm position-absolute end-0 top-0' style={{ height: '100vh', width: '50vh' }}>\r\n                        <div className=\"chatbox position-relative\" style={{ height: '100vh', width: '50vh' }}>\r\n                            <button className=\"btn-close position-absolute end-0 me-3 mt-2\" onClick={() => { Toggle_Chat(); }} ></button>\r\n                            <div className=\"messagebox bg-seashell pt-5 border border-1\" style={{ height: '90vh', width: '50vh' }}>\r\n                                <ul className='p-2 bg-seashell scroll'>\r\n                                    {\r\n                                        Users.map((data) => (\r\n                                            <button className=' button bg-pearl border-0 mx-2'>{data}</button>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                                <div className=\"messages d-block ms-3\">\r\n\r\n                                    {\r\n                                        messages.length > 0 ? (\r\n                                            <button className='button my-2 button-lightgreen py-2 shadow-sm rounded-4 ps-2 text-lightyellow fw-bold'>{user}:<span className='text-white'>{messages}</span></button>\r\n                                        ) : (\r\n                                            <></>\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row position-absolute bottom-0 mb-4 end-0 me-5\">\r\n                                <div className=\"col-8\">\r\n                                    <input type='text' className='form-control ms-2 p-0 py-1 ps-1 w-100' onBlur={(e) => setsendmessage(e.target.value)} />\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <button className='button-sm button-burntumber' onClick={() => Braodcast()} >Send</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div >\r\n            </div > */}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Doctors.jsx",["1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675"],[],"import axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport Notiflix from 'notiflix';\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { UpdateDoctor } from \"../Doctors/UpdateDoctor\"\r\nimport { URL } from '../../index'\r\n//css\r\nimport '../../css/Doctors.css'\r\n\r\nfunction Doctors() {\r\n  const url = useContext(URL)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const imagepath = 'https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/assets/doctor/'\r\n  const [Doctorssearch, setDoctorssearch] = useState()\r\n  const [Doctorslist, setDoctorslist] = useState([])\r\n  const [pages, setpages] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n  const [tabindex, settabindex] = useState()\r\n  const [form, setform] = useState()\r\n  const [pageloading, setpageloading] = useState(false)\r\n  const [updatedoctor, setupdatedoctor] = useState('none')\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=0`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 10) + 1)\r\n        setpageloading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setpageloading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setpageloading(false)\r\n    }\r\n  }\r\n\r\n  async function getAllDoctors(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setpageloading(true)\r\n      setDoctorslist()\r\n      await axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=0`).then((response) => {\r\n        setDoctorslist(response.data.data.doctor_list)\r\n        \r\n      })\r\n      setpageloading(false)\r\n    } else {\r\n      setpageloading(true)\r\n      setDoctorslist()\r\n      await axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n        setDoctorslist(response.data.data.doctor_list)\r\n      })\r\n      setpageloading(false)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetPages()\r\n    getAllDoctors()\r\n  }, [pagecount, Doctorssearch])\r\n\r\n  function OpenUpdateDoctor(i) {\r\n    if (updatedoctor === 'none') {\r\n      setupdatedoctor('block')\r\n      setform(i)\r\n    }\r\n  }\r\n  function CloseUpdateDoctor() {\r\n    if (updatedoctor === 'block') {\r\n      setupdatedoctor('none')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"Doctorspage text-center position-relative\">\r\n      <div className=\"conatainer searchbar\">\r\n        <input className=\"form-control m-auto mt-2\" placeholder=\"Search Doctor\" onChange={(e) => { setDoctorssearch(e.target.value) }} />\r\n      </div>\r\n      <div className=\"container-fluid p-0 m-0 scroll scroll-y\" style={{ minHeight: '30rem' }}>\r\n        <table className=\"table text-start fw-bold\" >\r\n          <thead className=\"text-charcoal75\">\r\n            <tr>\r\n              {/* <th>Update</th> */}\r\n              <th>Name</th>\r\n              <th>Specialization</th>\r\n              <th>Degree</th>\r\n              <th>Mobile No.</th>\r\n              <th>Email Id</th>\r\n              {/* <th>Procedures</th> */}\r\n              {/* <th>More</th> */}\r\n            </tr>\r\n          </thead>\r\n\r\n          {\r\n            pageloading ? (\r\n              <tbody className=' text-center' style={{ minHeight: '30vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className=''>Getting Details please be Patient ...</strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n\r\n              </tbody>\r\n            ) : (\r\n              Doctorslist && Doctorslist.length == 0 ? (\r\n                <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '30vh' }}>\r\n                  <tr className=''>\r\n                    <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Doctors found</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              ) : (\r\n                <tbody style={{ minHeight: '32vh' }}>\r\n                  {\r\n                    Doctorslist && Doctorslist.map((data, i) => (\r\n                      <tr className=\"align-middle\">\r\n                        {/* <td><button className=\"btn p-0 m-0\" onClick={(e) => { settabindex(i); OpenUpdateDoctor(i) }}><img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} /></button>\r\n                            {form == i ? (\r\n                              <section id={i} className={`scroll scroll-y position-absolute d-${tabindex == i ? updatedoctor : 'none'} bg-seashell rounded shadow top-0 bottom-2 `} style={{ marginLeft: '22.5rem', width: '40rem', height: '35rem' }}>\r\n                                <UpdateDoctor index={i} CloseUpdateDoctor={CloseUpdateDoctor} patientid={data.id} data={data} phonecountrycode={data.phone_country_code ? data.phone_country_code : ''} PhoneNo={data.phone_number ? Number(data.phone_number) : ''} dob={data.dob ? data.dob : ''} gender={data.gender ? data.gender : ''} full_name={data.full_name ? data.full_name : ''} email={data.email ? data.email : ''} pincode={data.pin_code ? data.pin_code : ''} location={data.location ? data.location : ''} parent={data.parent} linkid={data.link_id ? data.link_id : ''} relation={data.relation} latitude={data.latitude} longitude={data.longitude} />\r\n                              </section>\r\n                            ) : (<></>)\r\n                            }\r\n  \r\n                          </td> */}\r\n                        <td className=\"pe-5\">{data.image ? <img className=\"img-fluid rounded-5\" style={{ width: '2rem' }} src={imagepath + data.image} /> : 'Image not found'}{' '}{data.doctor_name ? data.doctor_name : ''}</td>\r\n                        <td>{data.speciality.name}</td>\r\n                        <td>{data.degree_suffix ? data.degree_suffix : ''}</td>\r\n                        <td>{data.phone_number ? data.phone_number : ''}</td>\r\n                        <td>{data.email}</td>\r\n                        {/* <td className=\"text-center\"><button className=\"btn p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/info.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td> */}\r\n                        {/* <td><button className=\"btn p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td> */}\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              )\r\n            )\r\n          }\r\n\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"d-flex text-center justify-content-center mt-3\">\r\n\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={getAllDoctors}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\nexport default Doctors","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Appointments.jsx",["1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698"],[],"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport { AllAppointmentslist } from '../../components/Appointments/AllAppointmentslist'\r\nimport { SelectedAppointments } from '../../components/Appointments/SelectedAppointments'\r\nimport { URL, TodayDate, DoctorsList, Permissions } from '../../index'\r\n//css\r\nimport '../../css/appointment.css'\r\nfunction Appointments(props) {\r\n    //Global Variables\r\n    const APIDate = useContext(TodayDate)\r\n    const permission = useContext(Permissions)\r\n    const url = useContext(URL)\r\n    let clinicID = localStorage.getItem('ClinicId')\r\n    const docnames = useContext(DoctorsList)\r\n    //Appointments use state\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [fromdate, setfromdate] = useState(APIDate)\r\n    const [todate, settodate] = useState(APIDate)\r\n    const [search,setsearch]=useState()\r\n    //Selected Appointments use state\r\n    const [isselectedLoading, setisselectedLoading] = useState()\r\n    const [appointmentdata, setappointmentdata] = useState([])\r\n    const [type, settype] = useState()\r\n    //All Appointments use state\r\n    const [getAppointments, setgetAppointments] = useState([])\r\n    const [isLoading, setisLoading] = useState()\r\n    const [visibles, setvisibles] = useState([])\r\n    const [pageindex,setpageindex] = useState(\"All\")\r\n    const[doctorname,setdoctorname]=useState('')\r\n    const [singleload,setsingleload] = useState(0)\r\n\r\n    async function fetchallAppointmentslist() {\r\n        \r\n        if (doctorid) {\r\n            setgetAppointments([])\r\n            try {\r\n                await axios.get(`${url}/appointment/list?clinic_id=${clinicID}&doctor_id=${doctorid}&from_date=${fromdate ? fromdate : APIDate}&to_date=${todate ? todate : fromdate ? fromdate : APIDate}&status=${type ? type : ''}`).then((response) => {\r\n                    setappointmentdata(response.data.data)  \r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n            setsingleload(1)\r\n        } else {\r\n            setappointmentdata([])\r\n            let listdata = []\r\n            try {\r\n                setvisibles()\r\n        \r\n                await axios.get(`${url}/appointment/list?clinic_id=${clinicID}&from_date=${fromdate ? fromdate : APIDate}&to_date=${todate ? todate : fromdate ? fromdate : APIDate}&status=${type ? type : ''}`).then((response) => {\r\n                    setgetAppointments(response.data.data)\r\n                    response.data.data.map((data) => {\r\n                        listdata.push(data.doctor.id)\r\n                    })\r\n                    setvisibles(listdata, [])\r\n                })\r\n          \r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n            setsingleload(1)\r\n        }\r\n\r\n    }\r\n   async function fetchdata(){\r\n    setisLoading(true)\r\n    await fetchallAppointmentslist()\r\n    setisLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchdata()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchdata()\r\n    }, [doctorid, fromdate, todate, type,search])\r\n\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n\r\n    let array = [[1, 'Pending', 'lightred'], [2, 'Booked', 'lightblue'], [3, 'Cancelled', 'lightred'], [4, 'QR Generated', 'light'], [5, 'Checked_in', 'brandy'], [6, 'Vitals Done', 'lightred'], [7, 'In_apppointment', 'lightyellow'], [8, 'Payment done', 'lightgreen'], [9, 'Unattained', 'lightyellow'], [10, 'Completed', 'lightgreen']]\r\n\r\n    function status(number) {\r\n        let status\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (number == array[i][0]) {\r\n                status = array[i][1]\r\n                break;\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    function status_color(number) {\r\n        let status_color;\r\n        for (let j = 0; j < array.length; j++) {\r\n            if (number == array[j][0]) {\r\n                status_color = array[j][2]\r\n                break;\r\n            }\r\n        }\r\n        return status_color\r\n    }\r\n\r\n    const options = [['All', ''], ['Cancelled', 3], ['Completed', 10], ['Unattended', 9]]\r\n    const [optionsindex, setoptionsindex] = useState(0)\r\n\r\n    const clearfields = () => {\r\n        setdoctorid()\r\n        setfromdate(APIDate)\r\n        setdoctorname()\r\n        settodate()\r\n    }\r\n\r\n    function CountAppointments(response) {\r\n        let arr = []\r\n        for (let i = 0; i < visibles.length; i++) {\r\n            if (response === visibles[i]) {\r\n                arr.push(response)\r\n            }\r\n        }\r\n        if (arr.length != 0) {\r\n            return '(' + arr.length + ' Appointments)'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"page2appointment \">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-auto\">\r\n                            <div className=\"col-12 mt-2\">\r\n                                <h4 className=\"p-lg-2 p-md-2 p-sm-2\">All Appointments</h4>\r\n                            </div>\r\n                            <div className=\"col-auto mt-2\">\r\n                                <div className=\"row p-0 m-0 g-lg-2 g-md-2 g-sm-2 g-2\">\r\n                                    <div className=\"col-auto\">\r\n                                        <div className=\"dropdown\">\r\n                                        <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                           {pageindex?pageindex :\"Status\"}    <span class={` p-0 m-0 ms-2 badge text-burntumber fw-bolder`} style={{ zIndex: '2' }}> {doctorid ? appointmentdata.length : getAppointments.length} </span>\r\n                                         </button>\r\n                                        <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                                              <li className={`dropdown-item fw-bolder text-${pageindex == \"All\"?\"white\":'charcoal'} bg-${pageindex == \"All\"?\"charcoal\":'seashell'}`} onClick={()=>{setpageindex(\"All\");settype('') }} >All  </li>\r\n                                              <li className={`dropdown-item fw-bolder text-${pageindex == \"Cancelled\"?\"white\":'charcoal'} bg-${pageindex == \"Cancelled\"?\"charcoal\":'seashell'}`} onClick={()=>{setpageindex(\"Cancelled\");settype(3) }} >Cancelled </li>\r\n                                              <li className={`dropdown-item fw-bolder text-${pageindex == \"Completed\"?\"white\":'charcoal'} bg-${pageindex == \"Completed\"?\"charcoal\":'seashell'}`} onClick={()=>{setpageindex(\"Completed\");settype(10) }} >Completed </li>\r\n                                              <li className={`dropdown-item fw-bolder text-${pageindex == \"Unattended\"?\"white\":'charcoal'} bg-${pageindex == \"Unattended\"?\"charcoal\":'seashell'}`} onClick={()=>{setpageindex(\"Unattended\");settype(9) }} >Unattended </li>\r\n                                        </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                        <div className=\"dropdown\">\r\n                                        <button class=\"button button-seashell border-0 rounded-2 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                           {doctorname?doctorname :\"Select Doctor\"} \r\n                                         </button>\r\n                                        <ul class=\"dropdown-menu bg-seashell shadow-sm border-0\">\r\n                                            {\r\n                                               visibles ? (\r\n                                                docnames.map((response,i)=>(\r\n                                                    <li className={`dropdown-item fw-bolder text-${doctorid == response[0]?\"white\":'charcoal'} bg-${doctorid == response[0]?\"charcoal\":'seashell'}`} onClick={()=>{setdoctorid(response[0]);setdoctorname(\"Dr.\" +response[1]+\" \"+CountAppointments(response[0])) }} >Dr. {response[1]}{' '}{' '}{CountAppointments(response[0])}  </li>\r\n\r\n                                                ))\r\n                                               ):(\r\n                                                <li></li>\r\n                                               ) \r\n                                            }\r\n                                        </ul>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    {/* <div className=\"col-2\">\r\n                                        <input type='text' placeholder=\"name or number\" className=\"form-control bg-seashell border-0 pb-2 \" onChange={(e)=>{setsearch(e.target.value)}}/>\r\n                                    </div> */}\r\n                                    <div className=\"col-auto bg-seashell rounded-2\">\r\n                                        <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                                            <div className=\"col-auto p-0 m-0 bg-seashell\">\r\n                                            <input placeholder=\"Start Date\" className=\"button button-seashell bg-seashell fw-bolder\" value={fromdate ? fromdate : APIDate ? APIDate : ''} onFocus={() => { settodate(); setdoctorid();setdoctorname(\"\"); }} type=\"date\" onChange={(e) => { setfromdate(e.target.value) }} />\r\n                                            </div>\r\n                                            <div className=\"col-auto p-0 m-0\">-</div>\r\n                                            <div className=\"col-auto p-0 m-0\">\r\n                                            <input disabled={fromdate == null} value={todate ? todate : fromdate ? fromdate : APIDate ? APIDate : ''} placeholder=\"End Date\" className=\"button button-seashell border-0 fw-bolder\" type=\"date\" onChange={(e) => { settodate(e.target.value) }} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                    <button className=\" button fw-bolder text-burntumber button-pearl\" onClick={clearfields}>Clear</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"position-relative\">\r\n                <section className=\"container-fluid scroll scroll-y mt-2\" >\r\n                    <table className=\"table text-start\">\r\n                        <thead className=\"text-charcoal75 fw-bold\">\r\n                            <tr className=\" bg-pearl position-sticky top-0\">\r\n                                <th className={`text-center d-${permission.appointment_edit == 1 ? '' : 'none'}`}>Update</th>\r\n                                <th className=\"\">Bill no.</th>\r\n                                <th className=\"\">Status</th>\r\n                                <th>Patient</th>\r\n                                <th>Doctor Name</th>\r\n                                <th>Date & F/U Date</th>\r\n                                <th>Time</th>\r\n                                <th>Amount</th>\r\n                                <th className=\" text-center bg-pearl\">More</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-charcoal appointments \">\r\n                            {\r\n                                isLoading ? (\r\n                                    <div className='container text-center position-absolute start-0 end-0' >\r\n                                    <h6 className=\"fw-bold text-charcoal75\">Hold on its Loading</h6>\r\n                                    <div className=\"spinner-grow bg-secondary col-2\" role=\"status\">\r\n                                        <span className=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                                ):(\r\n                                    doctorid ? (\r\n                                        <SelectedAppointments appointmentdata={appointmentdata.reverse()} type={type} doctorid={doctorid} singleload={singleload} setsingleload={setsingleload} fromdate={fromdate} todate={todate} fetchallAppointmentslist={fetchallAppointmentslist} status={status} status_color={status_color} tConvert={tConvert} fetchapi={props.fetchapi} />\r\n                                    ) : (\r\n    \r\n                                        <AllAppointmentslist getAppointments={getAppointments.reverse()} singleload = {singleload} setsingleload={setsingleload} type={type} fromdate={fromdate} todate={todate} doctorid={doctorid} fetchallAppointmentslist={fetchallAppointmentslist} status={status} status_color={status_color} tConvert={tConvert} fetchapi={props.fetchapi} />\r\n                                    )\r\n                                )\r\n                          \r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n                </div>\r\n            </section>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default Appointments","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\App\\Clinic.jsx",["1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711"],[],"import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext, createContext } from \"react\";\r\n// import { w3cwebsocket as websocket } from 'websocket'\r\nimport { Timecard, DoctorSchedule } from '../Today/Doctor'\r\nimport { timer_notify } from '../features/timer_notify';\r\n//Context APIs\r\nimport { Permissions,URL } from '../../index'\r\n//Components\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\n//css\r\nimport '../../css/dashboard.css'\r\n\r\nconst DOCTORNAME = createContext()\r\nconst DOCTORID = createContext()\r\n\r\nfunction Doctorsection(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  const permission = useContext(Permissions)\r\n  const [Docval, setDocval] = useState(0)\r\n  const [Doctor, setDoctor] = useState(0)\r\n  const [DoctorID, setDoctorID] = useState()\r\n  const [DoctorName, setDoctorName] = useState()\r\n  const [DocClinic, setDocClinic] = useState()\r\n  const [doctorindex, setdoctorindex] = useState([0])\r\n  const [doctorform, setdoctorform] = useState(\"none\");\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setDocval(1)\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setDocval(0)\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  function getindexes() {\r\n    for (let j = 0; j < doctorindex.length; j++) {\r\n      if (doctorindex.includes(Doctor)) {\r\n        break;\r\n      } else {\r\n        doctorindex.push(Doctor)\r\n      }\r\n    }\r\n  }\r\n  getindexes()\r\n\r\n  const doctor_wise_appointment_count= (doc_id)=>{\r\n    let appointments = []\r\n    if(props.appointment_data !=undefined){\r\n      for(let j=0;j<props.appointment_data.length;j++){\r\n        if(doc_id== props.appointment_data[j].doctor_id){\r\n          appointments.push(props.appointment_data[j])\r\n        }\r\n  }\r\n}\r\n  return appointments.length\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid doctorsection p-0 m-0 mt-1 ps-1 scroll\">\r\n        <div className=\" hstack gap-3 d-flex p-0 m-0 py-1 ps-1 align-items-center\">\r\n          {\r\n            props.isLoading ? (\r\n              <div className='col-3'>\r\n                <div className=\"spinner-border my-auto\" style={{ width: \"2rem\", height: \"2rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div>\r\n                <div className=\"spinner-grow my-auto\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div> </div>\r\n            ) : (\r\n              props.todayDoc.map((data, i) => (\r\n                <>\r\n                  <div className='col-auto doctors p-0 m-0'>\r\n                    <button key={i} className={` button rounded-1 p-0 m-0 py-1 px-3 btn-sm col-auto shadow-none text-${i === Doctor ? 'light' : 'charcoal75 fw-bolder'} button-${i === Doctor ? \"charcoal\" : \"pearl\"} border-${i === Doctor ? 'secondary' : 'none'}`}\r\n                      style={{ fontSize: '0.9rem' }}\r\n                      autoFocus={i === Doctor ? true : false}\r\n                      onFocus={() => { setDoctorID(data[0]); setDoctorName(data[1]); setDocClinic(data[2]) }}\r\n                      value={`${data[0]}.${data[1]}`} onClick={(a) => { setDoctor(i); setDoctorID(data[0]); setDoctorName(data[1]); }}>{`Dr. ${data[1]}`}<span className='ms-2 px-1 text-lightyellow '>{doctor_wise_appointment_count(data[0])} {timer_notify(data[0])==1?<span className='m-0 p-0 ms-2'><img src={process.env.PUBLIC_URL+'/images/time_on.png'} className='img-fluid p-0 m-0' style={{width:'0.8rem'}}/></span>:<span></span>}</span> </button>\r\n                  </div>\r\n                  <div className='vr rounded-1 h-75 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            )}\r\n          <div className='col-auto'>\r\n            <button className={`btn bg-transparent border-0 `} id=\"adddoctorbtn\" onClick={toggledoctorform} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <section className=\"patientsection p-0 m-0 ps-1 position-relative\">\r\n        {\r\n          props.Loading ? (\r\n            <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-charcoal\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n\r\n          ) : (\r\n            props.todayDoc && props.todayDoc.length != 0 ? (\r\n              doctorindex.map((data, i) => (\r\n                data == Doctor ? (\r\n                  <div key={i}>\r\n                    <div className={`p-0 m-0 my-2 d-${permission.dashboard_all == 1 ? '' : 'none'}`}>\r\n                      <Timecard docid={props.todayDoc[Doctor][0]} _selected={Doctor} />\r\n                    </div>\r\n                    <div className=\"p-0 m-0 my-2\">\r\n{/* \r\n                    DoctorID={DoctorID} DoctorName={DoctorName} */}\r\n\r\n                      <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n                      <DoctorSchedule todayDoc={props.todayDoc} DoctorID={DoctorID} DoctorName={DoctorName}  _selected={Doctor} fetchapi={props.fetchapi} DocClinic={DocClinic} get_appointment_data={props.get_appointment_data}   />\r\n                        </DOCTORID.Provider>    \r\n                      </DOCTORNAME.Provider>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )\r\n              ))\r\n            ) : (\r\n              <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-burntumber\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </section>\r\n      {\r\n        Docval == 1 ? (\r\n          <div className={`col-lg-5 col-md-6 col-sm-12 col-12 doctorinfosection d-${doctorform} me-lg-2 top-0  me-md-2 rounded-4 border bg-seashell shadow-sm position-absolute`} style={{ zIndex: '2', marginTop: '5.1rem' }} >\r\n                    <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n            <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop4'} fetchapi={props.fetchapi} />\r\n            </DOCTORID.Provider>    \r\n            </DOCTORNAME.Provider>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n\r\n    </>\r\n  );\r\n\r\n}\r\nexport default Doctorsection\r\nexport { DOCTORNAME, DOCTORID }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockvaluation.jsx",["1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { customconfirm } from \"../../features/notiflix/customconfirm\";\r\n//css\r\nimport \"../../../css/bootstrap.css\";\r\nimport \"../../../css/dashboard.css\";\r\nimport \"../../../css/pharmacy.css\";\r\n\r\nconst StockValuation = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const clinic = useContext(Clinic)\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const StockValuationref = useRef();\r\n    // const [seidw, setseidw] = useState(\"none\");\r\n    // const [channel, setchannel] = useState(1);\r\n    const [itemname, setitemname] = useState()\r\n    const [Location_Id, setLocation_Id] = useState()\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [stockvaluationarr, setstockvaluationarr] = useState([]);\r\n    const [index, setindex] = useState();\r\n    // const [nsef, setnsef] = useState(\"none\");\r\n    const [pages, setpages] = useState([]);\r\n    // const [paymentsapage, setpaymentsapage] = useState(\"none\");\r\n    const [tabindex, settabindex] = useState();\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.count);\r\n                    setpages(Math.round(response.data.data.count / 10) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e.message);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETStockValuation(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=10&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        setstockvaluationarr(response.data.data.medicine);\r\n                        setLoading(false);\r\n                    }).catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=25&offset=${Data.selected * 10}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n                    ;\r\n                    setstockvaluationarr(response.data.data.medicine);\r\n                    setLoading(false);\r\n                })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [Location_Id, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETStockValuation();\r\n    }, [pagecount]);\r\n    const parentArray = Object.keys(stockvaluationarr).map(key => ({\r\n        id: key,\r\n        ...stockvaluationarr[key]\r\n    }));\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Stock Valuations\" : \"Stock Valution\"}{\" \"}  </h2>\r\n            <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n            <div className=\"col-auto p-0 m-0 text-burntumber text-center fw-bolder bg-seashell me-2 align-self-center rounded-2 \">\r\n                            <select className=\"fw-bold button button-seashell text-burntumber border-0 text-center\" onChange={(e) => { setLocation_Id(e.target.value) }}>\r\n                                <option value=\"Choose Location\">Choose Location</option>\r\n                                {\r\n                                    clinic.map((data) => (\r\n                                        <option value={data.id}>{data.title}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n     \r\n                        <div className=\"col-auto p-0 m-0 text-burntumber text-center fw-bolder bg-pearl  rounded-1 \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0  text-burntumber text-center fw-bolder bg-pearl rounded-1\">\r\n                            <input type=\"date\" className=\" form-control border-0 bg-seashell text-charcoal text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export ms-xl-4\">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockValuation`}\r\n                        sheet=\"StockValuation\"\r\n                        currentTableRef={StockValuationref.current}\r\n                    >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={StockValuationref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Stock Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Batch </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Stock Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Rate </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : stockvaluationarr && stockvaluationarr.length != 0 ? (\r\n                        <tbody>\r\n                            {\r\n                                parentArray.map((item, i) => (\r\n                                    <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                        <td className=\"text-charcoal fw-bold\">{item.id != undefined ? item.id : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{item.item_name != undefined ? item.item_name : ''}</td>\r\n                                        <td className=\"text-charcoal fw-bold\"> </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{item.batch != undefined ? item.batch : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{item.closing_qty != undefined ? item.closing_qty : \"\"} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{item.rate != undefined ? item.rate : \"\"} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{item.rate != undefined && item.closing_qty != undefined ? Number(item.rate) * Number(item.closing_qty) : ''} </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Stock Valuations </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETStockValuation}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockValuation ","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockreport.jsx",["1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755","1756","1757","1758"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { customconfirm } from \"../../features/notiflix/customconfirm\";\r\n//css\r\nimport \"../../../css/bootstrap.css\";\r\nimport \"../../../css/dashboard.css\";\r\nimport \"../../../css/pharmacy.css\";\r\n\r\nconst StockReport = () => {\r\n    const clinic = useContext(Clinic)\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const StockReportref = useRef();\r\n    // const [seidw, setseidw] = useState(\"none\");\r\n    // const [channel, setchannel] = useState(1);\r\n    const [Location_Id, setLocation_Id] = useState()\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [stockreportarr, setstockreportarr] = useState([]);\r\n    const [index, setindex] = useState();\r\n    // const [nsef, setnsef] = useState(\"none\");\r\n    const [pages, setpages] = useState([]);\r\n    // const [paymentsapage, setpaymentsapage] = useState(\"none\");\r\n    const [tabindex, settabindex] = useState();\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.count);\r\n                    setpages(Math.round(response.data.data.count / 10) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e.message);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETStockReport(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=10&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        setstockreportarr(response.data.data.medicine);\r\n                        setLoading(false);\r\n                    }).catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=10&offset=${Data.selected * 10}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n\r\n                    let medicines = []\r\n                    let vaccines = []\r\n                    let dataarr = []\r\n                    const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                        medicine_id: key,\r\n                        ...response.data.data.medicine[key]\r\n                    }));\r\n                    medicines.push(medicinearr)\r\n                    const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                        vaccine_id: key,\r\n                        ...response.data.data.vaccine[key]\r\n                    }));\r\n                    vaccines.push(vaccinearr)\r\n                    dataarr.push(medicines)\r\n                    dataarr.push(vaccines)\r\n                    dataarr = dataarr.flat()\r\n                    setstockreportarr(dataarr.flat());\r\n                    setLoading(false);\r\n                })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [Location_Id, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETStockReport();\r\n    }, [pagecount]);\r\n    const parentArray = Object.keys(stockreportarr).map(key => ({\r\n        id: key,\r\n        ...stockreportarr[key]\r\n    }));\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-4\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Stock Reports\" : \"Stock Report\"}{\" \"}  </h2>\r\n\r\n            <div className=\"row p-0 m-0 text-center ms-2 mt-2\">\r\n            <div className=\"col-auto text-charcoal text-center fw-bolder bg-seashell rounded-2 \">\r\n                            <select className=\"fw-bold form-control bg-seashell text-burntumber text-center border-0\" onChange={(e) => { setLocation_Id(e.target.value) }}>\r\n                                <option value=\"Choose Location\">Choose Location <div className=\"mt-3 bg-seashell border-0\"></div> </option>\r\n                                {\r\n                                    clinic.map((data) => (\r\n                                        <option value={data.id}>{data.title}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                <div className=\"col-auto ms-1 bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0  text-charcoal text-center fw-bolder bgseashell\">\r\n                            <input type=\"date\" className=\" form-control border-0 bg-seashell text-charcoal text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export align-self-center text-center ms-xl-4 \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockReports`}\r\n                        sheet=\"StockReports\"\r\n                        currentTableRef={StockReportref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={StockReportref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Opening Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Opening Value </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Purchase Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Purchase Value </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Sale Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Sale Value </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Closing Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Closing Value </th>\r\n                            {/* <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>more</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : stockreportarr && stockreportarr.length != 0 ? (\r\n                        <tbody>\r\n                            {\r\n                                parentArray.map((key, i) => (\r\n                                    <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                        <td className=\"text-charcoal fw-bold\">{key.id != undefined ? key.id : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{key.item_name != undefined ? key.item_name : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{key.opening_qty != undefined ? key.opening_qty : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">₹{key.opening_value != undefined ? Number(key.opening_value).toFixed(2) : ''}</td>\r\n                                        <td className=\"text-charcoal fw-bold\">{key.purchase_qty != undefined ? key.purchase_qty : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">₹{key.purchase_value != undefined ? Number(key.purchase_value).toFixed(2) : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">{key.sale_qty != undefined ? key.sale_qty : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">₹{key.sale_value != undefined ? Number(key.sale_value).toFixed(2) : ''}</td>\r\n                                        <td className=\"text-charcoal fw-bold\">{key.closing_qty != undefined ? key.closing_qty : ''} </td>\r\n                                        <td className=\"text-charcoal fw-bold\">₹{key.closing_value != undefined ? Number(key.closing_value).toFixed(2) : ''}</td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Stock Reports </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETStockReport}\r\n                    containerClassName={\"pagination scroll align-self-center align-items-center\"}\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"}\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockReport ","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\openingstock.jsx",["1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst OpeningStock = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const clinic = useContext(Clinic)\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const OpeningStockref = useRef();\r\n    const [Location_Id, setLocation_Id] = useState()\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [openingstockarr, setopeningstockarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.count);\r\n                    setpages(Math.round(response.data.data.count / 10) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e.message);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETOpeningStock(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=10&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setopeningstockarr(dataarr.flat());\r\n                        setLoading(false);\r\n                    }).catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=25&offset=${Data.selected * 10}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n                    ;\r\n                    setopeningstockarr(response.data.data.medicine);\r\n                    setLoading(false);\r\n                })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [Location_Id, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETOpeningStock();\r\n    }, [pagecount]);\r\n\r\n    const parentArray = Object.keys(openingstockarr).map(key => ({\r\n        id: key,\r\n        ...openingstockarr[key]\r\n    }));\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-4\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Opening Stocks\" : \"Opening Stock\"}{\" \"}  </h2>\r\n\r\n            <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n            <div className=\"col-auto p-0 m-0 text-center fw-bolder bg-seashell rounded-2 align-self-center me-2 text-center \">\r\n                            <select className=\"fw-bold button button-seashell text-burntumber text-center border-0\" onChange={(e) => { setLocation_Id(e.target.value) }} style={{cursor:'pointer'}}>\r\n                                <option value=\"Choose Location\">Choose Location</option>\r\n                                {\r\n                                    clinic.map((data) => (\r\n                                        <option value={data.id}>{data.title}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n     \r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">-</div>\r\n            <div className=\"col-auto p-0 m-0  text-charcoal text-center fw-bolder bg-seashell\">\r\n              <input type=\"date\" className=\"button button-seashell rounded-0 text-charcoal text-center bg-seashell fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n            </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export ms-xl-5 ms-lg-0 \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockReports`}\r\n                        sheet=\"StockReports\"\r\n                        currentTableRef={OpeningStockref.current}\r\n                    >\r\n                        <button className='button button-seashell  fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={OpeningStockref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Stock Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Party </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Batch </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Stock Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Rate </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : openingstockarr && openingstockarr.length != 0 ? (\r\n                        <tbody>\r\n                            {parentArray.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">{item.id != undefined ? item.id : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.item_name != undefined ? item.item_name : ''}</td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.distributor != undefined ? item.distributor : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.batch != undefined ? item.batch : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.opening_qty != undefined ? item.opening_qty : ''}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.rate != undefined ? Number(item.rate).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> {item.rate != undefined && item.opening_qty != undefined ? (Number(item.opening_qty) * Number(item.rate)).toFixed(2) : ''}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Opening Stocks </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETOpeningStock}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpeningStock ","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\SearchField.jsx",["1776","1777","1778","1779","1780","1781","1782","1783","1784","1785","1786","1787","1788"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport '../../css/dashboard.css'\r\nimport { AddAppointment } from '../Today/AddAppointment'\r\nimport { URL, TodayDate } from '../../index'\r\nimport { Permissions } from '../../index'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst SearchField = (props) => {\r\n    const permission = useContext(Permissions)\r\n    const todaydate = useContext(TodayDate)\r\n    const url = useContext(URL)\r\n    const [searchload, setsearchload] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [patientname, setpatientname] = useState()\r\n    const [appointmentform, setappointmentform] = useState(\"none\")\r\n    const [doctorid, setdoctorid] = useState([])\r\n\r\n\r\n    const get_value = (e) => {\r\n        setpatientid(e.target.name)\r\n        setpatientname(e.target.value)\r\n        toggleappointmentform()\r\n    }\r\n    const toggleappointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\")\r\n        } else if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\")\r\n        }\r\n    }\r\n    const Mostly_treated_By = (data) => {\r\n        let count = []\r\n        let max = 0\r\n        let doc = ''\r\n        let obj = {\r\n            appointments: '',\r\n            doctor: '',\r\n        }\r\n        if (data != null) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].Appointments != null) {\r\n                    obj[i] = {\r\n                        appointments: data[i].Appointments.length,\r\n                        doctor: data[i].doctor_name\r\n                    }\r\n                    count.push(obj[i])\r\n                }\r\n\r\n            }\r\n          \r\n            let arr = []\r\n            for (let k = 0; k < count.length; k++) {\r\n                arr.push(count[k].appointments)\r\n            }\r\n            if (arr.length != 0) {\r\n                max = Math.max(...arr)\r\n            }\r\n            count.map((data) => {\r\n                if (data.appointments == max) {\r\n                  \r\n                    doc = \"Dr.\" + data.doctor\r\n                }\r\n            })\r\n        \r\n        }\r\n\r\n        return doc\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`col-12 d-${displaysearchlist} searchlist bg-pearl rounded-2 p-0 m-0`} style={{ minHeight: 'fit-content' }}>\r\n                {\r\n                    searchload ? (\r\n                        <h6 className=\"row p-0 m-0 mainsearch text-charcoal75 rounded-1 p-2\" >Loading... </h6>\r\n                    ) : (\r\n                        searchlist && searchlist.length == 0 ? (\r\n                            <h6 className=\"text-danger fw-bold mainsearch bg-lightred50 p-0 m-0 p-2\" >Patient not found. Add as new to book appointments</h6>\r\n                        ) : (\r\n                            <div className='rounded-2 mainsearch'>\r\n                                {/* <p className='text-secondary p-0 m-0 text-start fw-bold ps-2' style={{ fontSize: '0.8rem' }}>{searchlist.length} searches found</p> */}\r\n                                {\r\n                                    searchlist && searchlist.map((data) => (\r\n                                        <div className='row p-0 m-0 bg-pearl p-2 border-top rounded-bottom align-items-center justify-content-between px-lg-3'>\r\n                                            <small className='text-start p-0 m-0'>Mostly treated by<span className='text-burntumber p-0 m-0 mx-1 fw-bold'> {Mostly_treated_By(data.doctor)}</span></small>\r\n                                            <div className=\"col-8 col-xl-6 col-lg-9 col-md-8 p-0 m-0 text-start ps-lg-2\">\r\n                                                <h6 className=' p-0 m-0 border-0 text-charcoal bg-pearl text-start text-wrap fw-bold ' >{data.patient_name}</h6>\r\n                                                <small className='p-0 m-0 border-0 text-charcoal75 bg-pearl text-start text-wrap fw-bold ' > {data.phone_number}</small>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0 align-self-center justify-content-center\">\r\n                                                <button className={`button-sm button-pearl text-burntumber border fw-bold border-0 p-0 m-0 d-${permission.appointment_add == 1 ? '' : 'none'}`} name={data.patient_id} value={data.patient_name} onClick={(e) => get_value(e)} style={{ fontSize: '0.8rem' }}>+Appointment</button>\r\n                                            </div>\r\n                                            <div className=\"d-flex scroll p-0 m-0\">\r\n                                                {\r\n                                                    data.doctor.map((Data) => (\r\n                                                        Data.Appointments != null ? (\r\n                                                            <button className={`button-charcoal-outline button-sm me-2 rounded-1 d-${permission.appointment_add == 1 ? '' : 'none'}`} name={data.patient_id} value={data.patient_name} onClick={(e) => { get_value(e); setdoctorid(Data.doctor_id) }}>{Data.doctor_name}<span className='p-0 m-0 ms-2 text-burntumber fw-bold'>{Data.Appointments.length}</span> </button>\r\n                                                        ) : (<></>)\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        )\r\n\r\n\r\n                    )\r\n\r\n                }\r\n            </div>\r\n            <div className={`rounded-4 bg-seashell mt-4 appointmentinfosection d-${appointmentform} border p-2 border-1 position-absolute`} style={{ maxWidth: '25rem', right: '-3vh', top: '0' }}>\r\n                <AddAppointment fetchapi={props.fetchapi} doctorid={doctorid} todaydate={todaydate} toggleappointmentform={toggleappointmentform} patientidfromsearch={patientid} patientnamefromsearch={patientname} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { SearchField }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\TransferIn.jsx",["1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst TransferIn = () => {\r\n    const clinic = useContext(Clinic)\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const TransferInref = useRef();\r\n    const [searchname, setsearchname] = useState('')\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [transferinarr, settransferinarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    const [Location_Id, setLocation_Id] = useState()\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n    // https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/transfer/stocks/list?location_id=1&limit=10&offset=0\r\n\r\n    function GETTransferIn(Data) {\r\n\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/transfer/stocks/list?location_id=${Location_Id} `)\r\n                .then((response) => {\r\n                    ;\r\n                    settransferinarr(response.data.data.transfer_stocks_recevied);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     GetPages();\r\n    // }, [Location_Id]);\r\n\r\n    useEffect(() => {\r\n        GETTransferIn();\r\n    }, [Location_Id]);\r\n    return (\r\n        <>\r\n          <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Transfer Stocks In\" : \"Transfer Stock In\"}{\" \"}  </h2>\r\n            <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                        <div className=\"col-auto bg-seashell\">\r\n                            <select className=\"fw-bold form-control bg-seashell border-0 text-charcoal\" onChange={(e) => { setLocation_Id(e.target.value) }}>\r\n                                <option value=\"Choose Location\">Choose Location</option>\r\n                                {\r\n                                    clinic.map((data) => (\r\n                                        <option value={data.id}>{data.title}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell  \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control bg-seashell text-charcoal text-center border-0 fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0 text-charcoal  text-center fw-bolder bg-seashell \">\r\n                            <input type=\"date\" className=\" form-control bg-seashell text-charcoal text-center border-0 fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export text-center \">\r\n                    <DownloadTableExcel filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Stock transfer In`} sheet=\"StockTransferIn\" currentTableRef={TransferInref.current} >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={TransferInref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Delivery Note No. </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Date</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Location Name</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Item name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Batch</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Expiry </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Taxable </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Tax Rate</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : transferinarr && transferinarr.length != 0 ? (\r\n                        <tbody>\r\n                            {transferinarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"></td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Stocks Transfers In </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETTransferIn}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { TransferIn }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\TransferOut.jsx",["1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst TransferOut = () => {\r\n  const clinic = useContext(Clinic)\r\n  const permission = useContext(Permissions);\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const url = useContext(URL);\r\n  const TransferInref = useRef();\r\n  const [transferout, settransferout] = useState('')\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [transferoutarr, settransferoutarr] = useState([]);\r\n  const [pages, setpages] = useState([]);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [Location_Id, setLocation_Id] = useState()\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  // function GetPages() {\r\n  //   try {\r\n  //     axios.get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`)\r\n  //       .then((response) => {\r\n  //         setpagecount(response.data.data.total_count);\r\n  //         setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n  //         setLoading(false);\r\n  //       })\r\n  //       .catch((e) => {\r\n  //         Notiflix.Notify.warning(e);\r\n  //         setLoading(false);\r\n  //       });\r\n  //   } catch (e) {\r\n  //     Notiflix.Notify.warning(e.message);\r\n  //     setLoading(false);\r\n  //   }\r\n  // }\r\n  function GETTransferOut(Data) {\r\n    setLoading(true);\r\n    try {\r\n      axios.get(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/transfer/stocks/list?location_id=${Location_Id} `)\r\n        .then((response) => {\r\n          ;\r\n          settransferoutarr(response.data.data.transfer_stocks_sent);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  let TransferOut = {\r\n    receipt_no: '',\r\n    date: '',\r\n    location: '',\r\n    item_name: '',\r\n    qty: '',\r\n    batch: '',\r\n    expiry: '',\r\n    taxable: '',\r\n    tax_rate: '',\r\n    total: ''\r\n  }\r\n  const Detailed_Data = async () => {\r\n    settransferout();\r\n    let Transferout = []\r\n    for (let i = 0; i < transferoutarr.length; i++) {\r\n      for (let j = 0; j < transferoutarr[i].medicines.length; j++) {\r\n        TransferOut = {\r\n          receipt_no: '',\r\n          date: transferoutarr[i].transfer_date ? transferoutarr[i].transfer_date : '',\r\n          location: transferoutarr[i].to_location.title != undefined ? transferoutarr[i].to_location.title : '',\r\n          item_name: transferoutarr[i].medicines[j].medicine_stock_details.medicine.display_name ? transferoutarr[i].medicines[j].medicine_stock_details.medicine.display_name : \"\",\r\n          qty: transferoutarr[i].medicines[j].qty,\r\n          batch: transferoutarr[i].medicines[j].medicine_stock_details.batch_no ? transferoutarr[i].medicines[j].medicine_stock_details.batch_no : '',\r\n          expiry: transferoutarr[i].medicines[j].medicine_stock_details.expiry_date ? transferoutarr[i].medicines[j].medicine_stock_details.expiry_date : '',\r\n          taxable: transferoutarr[i].medicines[j].medicine_stock_details.rate ? transferoutarr[i].medicines[j].medicine_stock_details.rate : '',\r\n          tax_rate: '',\r\n          total: transferoutarr[i].total_amount\r\n        }\r\n        Transferout.push(TransferOut)\r\n      }\r\n    }\r\n    settransferout(Transferout)\r\n  }\r\n\r\n  useEffect(() => {\r\n    Detailed_Data()\r\n  }, [transferoutarr]);\r\n\r\n  useEffect(() => {\r\n    GETTransferOut();\r\n    Detailed_Data()\r\n  }, [Location_Id]);\r\n  return (\r\n    <>\r\n      <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Transfer Stocks Out\" : \"Transfer Stock Out\"}{\" \"}  </h2>\r\n      <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n        <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                        <div className=\"col-auto bg-seashell\">\r\n                            <select className=\"fw-bold form-control bg-seashell border-0 text-charcoal\" onChange={(e) => { setLocation_Id(e.target.value) }}>\r\n                                <option value=\"Choose Location\">Choose Location</option>\r\n                                {\r\n                                    clinic.map((data) => (\r\n                                        <option value={data.id}>{data.title}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell  \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control bg-seashell text-charcoal text-center border-0 fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0 text-charcoal  text-center fw-bolder bg-seashell \">\r\n                            <input type=\"date\" className=\" form-control bg-seashell text-charcoal text-center border-0 fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        <div className=\"col-auto export\">\r\n          <DownloadTableExcel filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Stock transfer In`} sheet=\"StockTransferIn\" currentTableRef={TransferInref.current} >\r\n            <button className='button button-seashell fw-bold'> Export</button>\r\n          </DownloadTableExcel>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n        <table className=\"table text-start table-responsive\" ref={TransferInref}>\r\n          <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n            <tr className=\" \">\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Reciept Note No. </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Date</th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">To Location </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Item name </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Qty </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Batch</th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Expiry </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Taxable </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Tax Rate</th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Total </th>\r\n            </tr>\r\n          </thead>\r\n          {Loading ? (\r\n            <tbody className=\"text-center\" style={{ minHeight: \"55vh\", height: \"55vh\" }} >\r\n              <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                <div class=\"d-flex align-items-center spinner\">\r\n                  <strong className=\"\" style={{ fontSize: \"1rem\" }}> Getting Details please be Patient ... </strong>\r\n                  <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </tr>\r\n            </tbody>\r\n          ) : transferoutarr && transferoutarr.length != 0 ? (\r\n            <tbody>\r\n              {transferout.map((item, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                  <td className=\"text-charcoal fw-bold\">{item.receipt_no != undefined ? item.receipt_no : ''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.date != undefined ? reversefunction(item.date) : ''}</td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.location != undefined ? item.location : ''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.item_name != undefined ? item.item_name : ''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.qty != undefined ? item.qty : ''}  </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.batch != undefined ? item.batch : ''}</td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.expiry != undefined ? item.expiry : ''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.taxable != undefined ? item.taxable : ''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.tax_rate != undefined ? item.tax_rate : ''} </td>\r\n                  <td className=\"text-charcoal fw-bold\">{item.total != undefined ? item.total : ''} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <strong className=\"text-charcoal fw-bolder text-center\"> No Stocks Transfers Out </strong>\r\n              </div>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETTransferOut}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { TransferOut }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\doctorwisesales.jsx",["1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\n\r\nconst DoctorWiseSales = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const BatchDetailsref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [doctorwisesales, setdoctorwisesales] = useState([]);\r\n    const [doctorwisesalesreturn, setdoctorwisesalesreturn] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    const [doctorid, setdoctorid] = useState()\r\n    const docnames = useContext(DoctorsList)\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n    // https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/reports/sales/doctor?from_date=2023-01-01&to_date=2023-06-01&doctor_id=1\r\n\r\n    function GETDoctorWiseSales() {\r\n        if (doctorid && doctorid !== undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/sales/doctor?from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}&doctor_id=${doctorid}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setdoctorwisesales(dataarr.flat());\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n    function GETDoctorWiseSalesReturn() {\r\n        if (doctorid && doctorid !== undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/sales/return/doctor?from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}&doctor_id=${doctorid}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setdoctorwisesalesreturn(dataarr.flat());\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GETDoctorWiseSales();\r\n        GETDoctorWiseSalesReturn()\r\n    }, [doctorid, fromdate, todate]);\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> Doctor Wise Sales</h2>\r\n            <div className=\"row p-0 m-0 ms-2  mt-2\">\r\n            <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell me-2 rounded-2\">\r\n                            <select className=\"button button-seashell border-0 text-charcoal fw-bold text-center\" value={doctorid ? doctorid : ''} onChange={(e) => { setdoctorid(e.target.value) }}>\r\n                                <option selected value=\"Select Doctor\">Select Doctor</option>\r\n                                {\r\n                                    docnames ? (\r\n                                        docnames.map((response, i) => (\r\n                                            <option className={`form-control text-charcoal`} key={i} value={response[0]} >Dr. {response[1]}</option>\r\n                                        ))\r\n\r\n                                    ) : (<option>Loading..</option>)\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n\r\n                        <div className=\"col-auto p-0 m-0 text-burntumber text-center fw-bolder bg-pearl  rounded-1 \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control bg-seashell border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0  text-burntumber text-center fw-bolder bg-pearl rounded-1\">\r\n                            <input type=\"date\" className=\"form-control bg-seashell border-0 bg-seashell text-charcoal text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Doctor Wise Sales`}\r\n                        sheet=\"DoctorWiseSales\"\r\n                        currentTableRef={BatchDetailsref.current}\r\n                    >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={BatchDetailsref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            {/* <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Item ID </th> */}\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Item Name</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Type</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">SaleType</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Batch No. </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Invoice </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Date </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Taxable Amt </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Tax </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Total </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Total Profit </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody className=\"text-center\" style={{ minHeight: \"55vh\", height: \"55vh\" }} >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : doctorwisesales && doctorwisesales.length != 0 ? (\r\n                        <tbody>\r\n                            {doctorwisesales.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    {/* <td className=\"text-charcoal fw-bold\">{item.medicine_id ? item.medicine_id : item.vaccine_id ? item.vaccine_id : ''} </td> */}\r\n                                    <td className=\"text-charcoal fw-bold\">{item.item ? item.item : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.medicine_id ? 'medicine' : item.vaccine_id ? 'vaccine' : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">Sales</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.batch_no ? item.batch_no : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.invoice ? item.invoice : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.date ? reversefunction(item.date) : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.qty ? item.qty : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.taxable_amount ? Number(item.taxable_amount).toFixed(2) : ''}  </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.tax ? Number(item.tax).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.total ? item.total : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.total_profit ? Number(item.total_profit).toFixed(2) : ''} </td>\r\n                                </tr>\r\n                            ))}\r\n                            {doctorwisesalesreturn.length !== undefined ? doctorwisesalesreturn.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    {/* <td className=\"text-charcoal fw-bold\">{item.medicine_id ? item.medicine_id : item.vaccine_id ? item.vaccine_id : ''} </td> */}\r\n                                    <td className=\"text-charcoal fw-bold\">{item.item ? item.item : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.medicine_id ? 'medicine' : item.vaccine_id ? 'vaccine' : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">Sales Return</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.batch_no ? item.batch_no : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.invoice ? item.invoice : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.date ? reversefunction(item.date) : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.qty ? item.qty : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.taxable_amount ? Number(item.taxable_amount).toFixed(2) : ''}  </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.tax ? Number(item.tax).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.total ? item.total : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.total_profit ? Number(item.total_profit).toFixed(2) : ''} </td>\r\n                                </tr>\r\n                            )) : ''}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Doctor Wise Sales </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { DoctorWiseSales }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\stockconfirmation.jsx",["1836","1837","1838","1839","1840","1841","1842","1843","1844","1845"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst StockConfirmation = () => {\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const StockValueCertificationref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [stockvaluecertificationarr, setstockvaluecertificationarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        try {\r\n            axios\r\n                .get(\r\n                    `${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n                    }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n                )\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.total_count);\r\n                    setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETStockCertification(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        setstockvaluecertificationarr(response.data.data.sale_entry);\r\n                        setLoading(false);  \r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios\r\n                    .get(\r\n                        `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n                        }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n                        }`\r\n                    )\r\n                    .then((response) => {\r\n                        ;\r\n                        setstockvaluecertificationarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETStockCertification();\r\n    }, [pagecount]);\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Stock Confirmations\" : \"Stock Confirmation\"}{\" \"}  </h2>\r\n\r\n            <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                        <div className=\"col-auto p-0 m-0 text-center fw-bolder bg-seashell \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0 text-center fw-bolder bgseashell\">\r\n                            <input type=\"date\" className=\" form-control border-0 bg-seashell text-charcoal text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Stock Value Confirmation Certificate`}\r\n                        sheet=\"Stock_Value_Confirmation_Certification\"\r\n                        currentTableRef={StockValueCertificationref.current}\r\n                    >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={StockValueCertificationref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Employee ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Employee Name</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Designation </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Location </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Date </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Counted By </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Checked By </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Certificate </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : stockvaluecertificationarr && stockvaluecertificationarr.length != 0 ? (\r\n                        <tbody>\r\n                            {stockvaluecertificationarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Stock Value Confirmation </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETStockCertification}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { StockConfirmation }\r\n","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\vendordetails.jsx",["1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst VendorDetails = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const VendorDetailsref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    const [vendorsearch, setvendorsearch] = useState([])\r\n    const [loadvendors, setloadvendors] = useState(false)\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n    const GETVendorDetails = async (search) => {\r\n        setloadvendors(true);\r\n        try {\r\n            await axios\r\n                .get(`${url}/kyc/list?limit=100&offset=0`)\r\n                .then((response) => {\r\n                    setvendorsearch(response.data.data);\r\n                    setloadvendors(false);\r\n                })\r\n                .catch(function error(e) {\r\n                    Notiflix.Notify.warning(e.data.message);\r\n                    setloadvendors(false);\r\n                });\r\n        } catch (e) {\r\n            setloadvendors(false);\r\n            Notiflix.Notify.warning(e.data.message);\r\n        }\r\n    };\r\n\r\n    // function GetPages() {\r\n    //     try {\r\n    //         axios\r\n    //             .get(\r\n    //                 `${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n    //                 }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n    //             )\r\n    //             .then((response) => {\r\n    //                 setpagecount(response.data.data.total_count);\r\n    //                 setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n    //                 setLoading(false);\r\n    //             })\r\n    //             .catch((e) => {\r\n    //                 Notiflix.Notify.warning(e);\r\n    //                 setLoading(false);\r\n    //             });\r\n    //     } catch (e) {\r\n    //         Notiflix.Notify.warning(e.message);\r\n    //         setLoading(false);\r\n    //     }\r\n    // }\r\n    // function GETVendorDetails(Data) {\r\n    //     if (Data == undefined || Data.selected == undefined) {\r\n    //         setLoading(true);\r\n    //         try {\r\n    //             axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n    //                 .then((response) => {\r\n    //                     ;\r\n    //                     setvendordetailsarr(response.data.data.sale_entry);\r\n    //                     setLoading(false);\r\n    //                 })\r\n    //                 .catch((e) => {\r\n    //                     Notiflix.Notify.warning(e);\r\n    //                     setLoading(false);\r\n    //                 });\r\n    //         } catch (e) {\r\n    //             Notiflix.Notify.warning(e.message);\r\n    //             setLoading(false);\r\n    //         }\r\n    //     } else {\r\n    //         setLoading(true);\r\n    //         try {\r\n    //             axios\r\n    //                 .get(\r\n    //                     `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n    //                     }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n    //                     }`\r\n    //                 )\r\n    //                 .then((response) => {\r\n    //                     ;\r\n    //                     setvendordetailsarr(response.data.data.sale_entry);\r\n    //                     setLoading(false);\r\n    //                 })\r\n    //                 .catch((e) => {\r\n    //                     Notiflix.Notify.warning(e);\r\n    //                     setLoading(false);\r\n    //                 });\r\n    //         } catch (e) {\r\n    //             Notiflix.Notify.warning(e.message);\r\n    //             setLoading(false);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     GetPages();\r\n    // }, [fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETVendorDetails();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {vendorsearch.length} {vendorsearch.length > 1? \"Vendors Details\" : \"Vendor Details\"}{\" \"}  </h2>\r\n                <div className=\"row p-0 m-0 justify-content-start\">\r\n                <div className=\"col-auto p-0 m-0 export \">\r\n                    <DownloadTableExcel\r\n                        filename={`Vendor Details`}\r\n                        sheet=\"VendorDetails\"\r\n                        currentTableRef={VendorDetailsref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start px-2 fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n                </div>\r\n\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={VendorDetailsref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Vendor Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">GSTIN</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Pan </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">MSME Certificate </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Bank Account </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">IFSC </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Bank Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Contact Person Number </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">Email ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">State </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody className=\"text-center\" style={{ minHeight: \"55vh\", height: \"60vh\" }} >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : vendorsearch && vendorsearch.length != 0 ? (\r\n                        <tbody>\r\n                            {vendorsearch.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">{item.entity_name != undefined ? item.entity_name : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.GSTIN_no != undefined ? item.GSTIN_no : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.PAN_no != undefined ? item.PAN_no : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.MSME_no != undefined ? item.MSME_no : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.account_number != undefined ? item.account_number : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.ifsc_code != undefined ? item.ifsc_code : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.bank_name != undefined ? item.bank_name : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.mobile_no != undefined ? item.mobile_no : ''}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.email_for_communication != undefined ? item.email_for_communication : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.state != undefined ? item.state : ''} </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Vendor Details </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { VendorDetails }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\schedulewisesales.jsx",["1877","1878","1879","1880","1881","1882","1883","1884","1885","1886"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst ScheduleWiseSales = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const ScheduleWiseSalesref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [schedule, setschedule] = useState()\r\n    const [schedulewisesalesarr, setschedulewisesalesarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        try {\r\n            axios\r\n                .get(\r\n                    `${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n                    }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n                )\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.total_count);\r\n                    setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETScheduleWiseSales(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        setschedulewisesalesarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios\r\n                    .get(\r\n                        `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n                        }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n                        }`\r\n                    )\r\n                    .then((response) => {\r\n                        ;\r\n                        setschedulewisesalesarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [schedule, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETScheduleWiseSales();\r\n    }, [pagecount]);\r\n    return (\r\n        <>\r\n          <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 0 ? \"Sales\" : \"Sale\"}{\" \"} </h2>\r\n            <div className=\"row p-0 m-0 mt-2 ms-2  \">\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 fw-bolder align-items-center align-self-center \">\r\n                        <div className=\"col-auto p-0 m-0 text-center fw-bolder bg-seashell \">\r\n                            <input type=\"text\" placeholder=\"schedule\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder \" value={schedule ? schedule : \"\"} onChange={(e) => { setschedule(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0 text-center fw-bolder bg-seashell \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0  text-center fw-bolder bgseashell\">\r\n                            <input type=\"date\" className=\" form-control border-0 bg-seashell text-charcoal text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Schedule Wise Sales`}\r\n                        sheet=\"ScheduleWiseSales\"\r\n                        currentTableRef={ScheduleWiseSalesref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={ScheduleWiseSalesref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Schedule Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Invoice No</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Date </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Patient Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Doctor Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Amount </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Company </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : schedulewisesalesarr && schedulewisesalesarr.length != 0 ? (\r\n                        <tbody>\r\n                            {schedulewisesalesarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Scheudle Wise Sales </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETScheduleWiseSales}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { ScheduleWiseSales }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\taxwisedata.jsx",["1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst TaxWiseData = () => {\r\n    const permission = useContext(Permissions);\r\n    const d = new Date();\r\n    const date = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\r\n    const monthcount = d.getMonth() + 1 < 10 ? `0${d.getMonth() + 1}` : d.getMonth() + 1;\r\n    const yearcount = d.getFullYear();\r\n    var currentDate = `${yearcount}-${monthcount}`;\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const TaxWiseDataref = useRef();\r\n\r\n    // const [fromdate, setfromdate] = useState();\r\n    // const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [taxwisearr, settaxwisearr] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    const [fromdate, setfromdate] = useState()\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GETTaxWiseData() {\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`${url}/reports/summary/wise/data?from_date=${fromdate ? fromdate : ''}`)\r\n                .then((response) => {\r\n                    ;\r\n                    const parentArray = Object.keys(response.data.data).map(key => ({\r\n                        particular: key,\r\n                        ...response.data.data[key]\r\n                    }));\r\n                    settaxwisearr(parentArray);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e.message);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GETTaxWiseData();\r\n    }, [fromdate]);\r\n    let months = [[\"Jan\", '01'], [\"Feb\", \"02\"], [\"Mar\", \"03\"], [\"Apr\", \"04\"], [\"May\", \"05\"], [\"Jun\", \"06\"], [\"Jul\", \"07\"], [\"Aug\", \"08\"], [\"Sep\", \"09\"], [\"Oct\", \"10\"], [\"Nov\", \"11\"], [\"Dec\", \"12\"]]\r\n    function month_explorer(date) {\r\n        date = date.split(\" to \")\r\n        let fromdate = date[0];\r\n        let todate = date[1]\r\n        fromdate = fromdate.split('-')\r\n\r\n        for (let i = 0; i < months.length; i++) {\r\n            if (fromdate[1] == months[i][1]) {\r\n                fromdate[1] = months[i][0]\r\n            }\r\n        }\r\n        let newdate = fromdate[1] + \" \" + fromdate[0]\r\n        return newdate\r\n    }\r\n    return (\r\n        <>\r\n                        <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}>  {taxwisearr.length} Tax-Wise Data </h2>\r\n\r\n            <div className=\"row p-0 m-0 text-center mt-2 ms-2\">\r\n            <div className=\"col-auto text-charcoal text-center fw-bolder bg-seashell rounded-2\">\r\n                    <input type=\"month\" placeholder=\"month\" className=\"form-control rounded-0 border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n                <div className=\"col-auto export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`TaxWiseData`}\r\n                        sheet=\"StockReports\"\r\n                        currentTableRef={TaxWiseDataref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"70vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={TaxWiseDataref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th rowSpan='2' className=\"text-charcoal75 fw-bolder p-0 m-0 px-1 border-end\"> Particular </th>\r\n                            <th colSpan='3' scope=\"colgroup\" className=\"text-charcoal75 fw-bolder border-end\"> 0% </th>\r\n                            <th colSpan='3' scope=\"colgroup\" className=\"text-charcoal75 fw-bolder border-end\"> 5% </th>\r\n                            <th colSpan='3' scope=\"colgroup\" className=\"text-charcoal75 fw-bolder border-end\"> 12% </th>\r\n                            <th colSpan='3' scope=\"colgroup\" className=\"text-charcoal75 fw-bolder border-end\"> 18% </th>\r\n                            <th colSpan='3' scope=\"colgroup\" className=\"text-charcoal75 fw-bolder border-end\"> 28% </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Taxable </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Tax </th>        \r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder border-end\"> Total </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Taxable </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Tax </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder border-end\"> Total </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Taxable </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Tax </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder border-end\"> Total </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Taxable </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Tax </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder border-end\"> Total </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Taxable </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder\"> Tax </th>\r\n                            <th scope='col' className=\"text-charcoal75 fw-bolder border-end\"> Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : taxwisearr && taxwisearr.length != 0 ? (\r\n                        <tbody>\r\n                            {taxwisearr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} p-3 align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal p-3 fw-bold border-end\">{month_explorer(item.particular)} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['taxable 0%'] !== undefined ? Number(item['taxable 0%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['tax 0%'] !== undefined ? Number(item['tax 0%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold border-end\">₹{item['taxable 0%'] !== undefined && item['tax 0%'] !== undefined ? Number(Number(item['taxable 0%']) + Number(item['tax 0%'])).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['taxable 5%'] !== undefined ? Number(item['taxable 5%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['tax 5%'] !== undefined ? Number(item['tax 5%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold border-end\">₹{item['taxable 5%'] !== undefined && Number(item['tax 5%']).toFixed(2) !== undefined ? Number(Number(item['taxable 5%']) + Number(item['tax 5%'])).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['taxable 12%'] !== undefined ? Number(item['taxable 12%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['tax 12%'] !== undefined ? Number(item['tax 12%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold border-end\">₹{item['taxable 12%'] !== undefined && Number(item['tax 12%']).toFixed(2) !== undefined ? Number(Number(item['taxable 12%']) + Number(item['tax 12%'])).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['taxable 18%'] !== undefined ? Number(item['taxable 18%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['tax 18%'] !== undefined ? Number(item['tax 18%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold border-end\">₹{item['taxable 18%'] !== undefined && Number(item['tax 18%']).toFixed(2) !== undefined ? Number(Number(item['taxable 18%']) + Number(item['tax 18%'])).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['taxable 28%'] !== undefined ? Number(item['taxable 28%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold\">₹{item['tax 28%'] !== undefined ? Number(item['tax 28%']).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal p-3 fw-bold border-end\">₹{item['taxable 28%'] !== undefined && item['tax 28%'] !== undefined ? Number(Number(item['taxable 28%']) + Number(item['tax 28%'])).toFixed(2) : ''} </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Rate Lists </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { TaxWiseData }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\patientsaleshistory.jsx",["1903","1904","1905","1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916","1917","1918"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst PatientSalesHistory = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const PatientSalesHistoryref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [patientname, setpatientname] = useState()\r\n    const [patientsalehistoryarr, setpatientsalehistoryarr] = useState([]);\r\n    const [patientsalereturnhistoryarr, setpatientsalereturnhistoryarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    const [patientid, setpatientid] = useState()\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [searchload, setsearchload] = useState(false)\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n    // https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/reports/sales/patient?from_date=2023-01-01&to_date=2023-06-01&patient_id=3647\r\n\r\n    const searchpatient = (e) => {\r\n        setsearchload(true)\r\n        if (searchinput && searchinput.length >= 0) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n        setsearchinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n    }\r\n    const get_value = async (value, name) => {\r\n        setsearchinput(value);\r\n        setpatientid(name);\r\n        setdisplaysearchlist('none');\r\n\r\n    }\r\n    function GETPatientSalesHistory() {\r\n        if (patientid) {\r\n\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/sales/patient?&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}&patient_id=${patientid}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        const parentArray = Object.keys(response.data.data.sales).map(key => ({\r\n                            invoice_no: key,\r\n                            ...response.data.data.sales[key]\r\n                        }));\r\n                        setpatientsalehistoryarr(parentArray);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n\r\n        }\r\n    }\r\n    function GETPatientSalesReturnHistory() {\r\n        if (patientid) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/sales/return/patient?&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}&patient_id=${patientid}`)\r\n                    .then((response) => {\r\n                        \r\n                        const parentArray = Object.keys(response.data.data.sales_return).map(key => ({\r\n                            invoice_no: key,\r\n                            ...response.data.data.sales_return[key]\r\n                        }));\r\n                        setpatientsalereturnhistoryarr(parentArray);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GETPatientSalesHistory();\r\n        GETPatientSalesReturnHistory();\r\n    }, [patientid, fromdate, todate]);\r\n\r\n    return (\r\n        <>\r\n                        <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}>{pagecount} {pagecount > 0 ? \"Patient Sales History\" : \"Patient Sales History\"}{\" \"} </h2>\r\n\r\n            <div className=\"row p-0 m-0 text-center mt-2 ms-2\">\r\n            <div className=\"col-auto p-0 m-0 text-burntumber text-center fw-bolder bg-seashell position-relative align-self-center rounded-2 \">\r\n                            <input type=\"text\" placeholder=\"patient name\" className=\"button button-seashell selectpatient bg-seashell border-0 position-relative text-center text-charcoal fw-bold\" value={searchinput ? searchinput : ''} onChange={searchpatient} />\r\n                            <div className={`w-100 d-${displaysearchlist} position-absolute top-10 mt-2 border shadow-sm`} style={{ zIndex: '10' }}>\r\n                                {\r\n                                    searchload ? (\r\n                                        <p className=\"btn text-charcoal75 fw-bold bg-pearl rounded-2  p-0 m-0 ps-1\">Loading... </p>\r\n                                    ) : (\r\n                                        searchinput && searchlist.length == 0 ? (\r\n                                            <p className=\"text-danger btn bg-lightred p-0 m-0\">Patient not found add as new user to book appointements</p>\r\n                                        ) : (\r\n                                            <div className=\"p-2 bg-pearl\">\r\n                                                {\r\n                                                    searchlist.map((data) => (\r\n                                                        <div style={{ cursor: 'pointer' }} className='col-12 d-block p-0 m-0 ms-1 border-0 bg-pearl py-1 border-bottom text-charcoal text-start border border-1' onClick={(e) => get_value(data.full_name, data.id)}>{data.full_name}  {data.phone_number}</div>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n\r\n                                        )\r\n                                    )\r\n\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                <div className=\"col-auto p-0 m-0\">\r\n                    <div className=\"row align-items-center rounded-2 bg-seashell rounded-2 ms-2\">\r\n\r\n                        <div className=\"col-auto\">\r\n                        <div className=\"row p-0 m-0 align-items-center align-self-center bg-seashell\">\r\n                        <div className=\"col-auto text-burntumber text-center fw-bolder bg-seashell  rounded-1 \">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 border-0 text-charcoal text-center fw-bold\" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">\r\n                                -\r\n                        </div>\r\n                        <div className=\"col-auto text-charcoal text-center fw-bolder bg-seashell rounded-1\">\r\n                            <input type=\"date\" className=\"border-0 button button-seashell text-charcoal text-center fw-bold\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Patient Sales History`}\r\n                        sheet=\"PatientSalesHistory\"\r\n                        currentTableRef={PatientSalesHistoryref.current}\r\n                    >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={PatientSalesHistoryref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Date </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Invoice</th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Amount </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Tax </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Total </th>\r\n                            {/* <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> more info </th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody className=\"text-center\" style={{ minHeight: \"55vh\", height: \"55vh\" }} >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : patientsalehistoryarr && patientsalehistoryarr.length != 0 ? (\r\n                        <tbody>\r\n                            {patientsalehistoryarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">{reversefunction(item.date)}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.invoice}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.type} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{Number(item.amount).toFixed(2)}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.tax} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.total} </td>\r\n                                    {/* <td className=\"text-charcoal fw-bold\"> </td> */}\r\n                                </tr>\r\n                            ))}\r\n                            {patientsalereturnhistoryarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">{reversefunction(item.date)}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.invoice}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.type} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{Number(item.amount).toFixed(2)}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.tax} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">₹{item.total} </td>\r\n                                    {/* <td className=\"text-charcoal fw-bold\"> </td> */}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Patient Sales History </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { PatientSalesHistory }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\ratelist.jsx",["1919","1920","1921","1922","1923","1924","1925","1926","1927","1928"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst RateList = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const OpeningStockref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [ratelistarr, setratelistarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        try {\r\n            axios\r\n                .get(\r\n                    `${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n                    }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n                )\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.total_count);\r\n                    setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETRateList(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        setratelistarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios\r\n                    .get(\r\n                        `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n                        }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n                        }`\r\n                    )\r\n                    .then((response) => {\r\n                        ;\r\n                        setratelistarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETRateList();\r\n    }, [pagecount]);\r\n    return (\r\n        <>\r\n        <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 0 ? \"Rate Lists\" : \"Rate List\"}{\" \"} </h2>\r\n\r\n            <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n            <div className=\"col-auto bg-seashell rounded-2 \">\r\n              <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 border-0 text-charcoal text-center fw-bold \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0\">-</div>\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <input type=\"date\" className=\" border-0 button button-seashell text-charcoal text-center fw-bold\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />                </div>\r\n              </div>\r\n            </div>\r\n                <div className=\"col-auto p-0 m-0 export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockReports`}\r\n                        sheet=\"StockReports\"\r\n                        currentTableRef={OpeningStockref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={OpeningStockref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Party </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> GST Rate </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Sales Price </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Purchase Price </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> MRP </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : ratelistarr && ratelistarr.length != 0 ? (\r\n                        <tbody>\r\n                            {ratelistarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">  </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Rate Lists </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETRateList}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport { RateList }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Reports\\pharmacy\\grossprofitmargin.jsx",["1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940"],[],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst GrossProfitMargin = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const GrossProfitMarginref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [taxrate, settaxrate] = useState()\r\n    const [grossprofitmarginarr, setgrossprofitmarginarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        try {\r\n            axios\r\n                .get(\r\n                    `${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n                    }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n                )\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.total_count);\r\n                    setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETGrossProfitMargin(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        setgrossprofitmarginarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios\r\n                    .get(\r\n                        `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n                        }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n                        }`\r\n                    )\r\n                    .then((response) => {\r\n                        ;\r\n                        setgrossprofitmarginarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETGrossProfitMargin();\r\n    }, [pagecount]);\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-2\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 0 ? \"Profit Margins\" : \"Profit Margin\"}{\" \"} </h2>\r\n            <div className=\"row p-0 m-0 text-center mt-2 ms-2\">\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 fw-bolder align-items-center align-self-center\">\r\n                        <div className=\"col-auto p-0 m-0 text-center fw-bolder bg-seashell\">\r\n                            <input type=\"date\" placeholder=\"fromdate\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">-</div>\r\n                        <div className=\"col-auto p-0 m-0  text-burntumber text-center fw-bolder bg-seashell\">\r\n                            <input type=\"date\" className=\"form-control border-0 bg-seashell text-charcoal text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} Gross Profit Margin`}\r\n                        sheet=\"GrossProfitMargin\"\r\n                        currentTableRef={GrossProfitMarginref.current}\r\n                    >\r\n                        <button className='button button-seashell text-start fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={GrossProfitMarginref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Id </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> MRP </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Purchases </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Tax </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Sales </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Tax </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Gross Profit Margin </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Gross Profit Margin % </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Gross Profit (With Tax) </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : grossprofitmarginarr && grossprofitmarginarr.length != 0 ? (\r\n                        <tbody>\r\n                            {grossprofitmarginarr.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Gross Profit Margins </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETGrossProfitMargin}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { GrossProfitMargin }\r\n","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Dsr\\Doctors_Dsr.jsx",["1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962"],[],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { useContext, useRef } from 'react'\r\nimport { URL, DoctorsList } from '../../index'\r\nimport axios from 'axios'\r\n\r\nconst Doctors_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const AllDoctors = useContext(DoctorsList)\r\n  const [load, setload] = useState(false)\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [DocTimetyp1, setDocTimetyp1] = useState()\r\n  const [pageindex, setpageindex] = useState(\"Doctor's Login\")\r\n  const tableref = useRef()\r\n  const Doctorwisetable = useRef()\r\n\r\n  async function GetDoctors() {\r\n    setload(true)\r\n    await axios.get(`${url}/DSR/doctors?from_date=${props.fromdate}&to_date=${props.todate}`).then((response) => {\r\n      // \r\n      setAppointments(response.data.data.doctor_login_list)\r\n      setload(false)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    GetDoctors()\r\n  }, [props.fromdate, props.todate])\r\n\r\n  let DoctorWisetotalarr = []\r\n\r\n  async function DoctorwiseTable() {\r\n    let total, hr, min\r\n    let doctorstime = {\r\n      id: '',\r\n      roomtype: '',\r\n      totaltime: '',\r\n      totalhours: '',\r\n      totalminutes: ''\r\n    }\r\n    for (let k = 0; k < AllDoctors.length; k++) {\r\n      DoctorWisetotalarr.push([AllDoctors[k][0], AllDoctors[k][1], [], []])\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (Appointments[i].doctor && Appointments[i].doctor.id == DoctorWisetotalarr[k][0]) {\r\n          if (Appointments[i].room && Appointments[i].room.room_type == 1) {\r\n            total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            hr = total.toString().substring(0, 2)\r\n            min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][2].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: Number(hr),\r\n              totalminutes: Number(min)\r\n            })\r\n          }\r\n          if (Appointments[i].room && Appointments[i].room_type == 2) {\r\n            let total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            let hr = total.toString().substring(0, 2)\r\n            let min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][3].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: hr,\r\n              totalminutes: min\r\n            })\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n    let Doctorwisetotalhrarr = []\r\n    let Doctorwisetotalminarr = []\r\n    if (DoctorWisetotalarr && DoctorWisetotalarr.length != 0) {\r\n      for (let i = 0; i < DoctorWisetotalarr.length; i++) {\r\n        if (DoctorWisetotalarr[i][0] == AllDoctors[i][0]) {\r\n          Doctorwisetotalhrarr.push([DoctorWisetotalarr[i][0], []])\r\n          Doctorwisetotalminarr.push([DoctorWisetotalarr[i][0], []])\r\n          if (DoctorWisetotalarr[i][2].length != 0) {\r\n            for (let g = 0; g < DoctorWisetotalarr[i][2].length; g++) {\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalhours && DoctorWisetotalarr[i][2][g].totalhours != null && DoctorWisetotalarr[i][2][g].totalhours != undefined) {\r\n                Doctorwisetotalhrarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalhours))\r\n              } else {\r\n                Doctorwisetotalhrarr[i][1].push(0)\r\n              }\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalminutes && DoctorWisetotalarr[i][2][g].totalminutes != null && DoctorWisetotalarr[i][2][g].totalminutes != undefined) {\r\n                Doctorwisetotalminarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalminutes))\r\n              } else {\r\n                Doctorwisetotalminarr[i][1].push(0)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = 0; k < Doctorwisetotalhrarr.length; k++) {\r\n        if (Doctorwisetotalhrarr[k][1].length == 0) {\r\n          Doctorwisetotalhrarr[k].push(0)\r\n        } else {\r\n          let Doctorwisehrtotal = 0\r\n          let Doctorwisemintotal = 0\r\n          for (let h = 0; h < Doctorwisetotalhrarr[k][1].length; h++) {\r\n            Doctorwisehrtotal += Number(Doctorwisetotalhrarr[k][1][h])\r\n          }\r\n          for (let a = 0; a < Doctorwisetotalminarr[k][1].length; a++) {\r\n            Doctorwisemintotal += Number(Doctorwisetotalminarr[k][1][a])\r\n\r\n          }\r\n          DoctorWisetotalarr[k].push(Doctorwisehrtotal)\r\n          DoctorWisetotalarr[k].push(Doctorwisemintotal)\r\n        }\r\n        if (DoctorWisetotalarr[k][5] >= 60) {\r\n          let remainsmin = DoctorWisetotalarr[k][5] % 60\r\n          let minhours = Math.floor(DoctorWisetotalarr[k][5] / 60)\r\n          DoctorWisetotalarr[k][5] = remainsmin\r\n          DoctorWisetotalarr[k][4] += minhours\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n    setDocTimetyp1(DoctorWisetotalarr)\r\n  }\r\n  useEffect(() => {\r\n    async function load() {\r\n      DoctorwiseTable()\r\n    }\r\n    load()\r\n  }, [props.fromdate, props.todate, load])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function diff(start, end) {\r\n    if (start != null && end != null) {\r\n      start = start.split(\":\");\r\n      end = end.split(\":\");\r\n      var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n      var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n      var diff = endDate.getTime() - startDate.getTime();\r\n      var hours = Math.floor(diff / 1000 / 60 / 60);\r\n      diff -= hours * 1000 * 60 * 60;\r\n      var minutes = Math.floor(diff / 1000 / 60);\r\n      if (hours < 0)\r\n        hours = hours + 24;\r\n\r\n      return (hours <= 9 ? \"0\" : \"\") + hours + \"hrs\" + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins';\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n\r\n  function TotalTime() {\r\n    let hrarr = []\r\n    let minsarr = []\r\n    let totalhours, totalmins\r\n    let GetTotalHours = 0\r\n    let GetTotalMins = 0\r\n    let start, end;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      start = Appointments[i].login_time\r\n      end = Appointments[i].logout_time\r\n      if (start !== null && end !== null) {\r\n        start = start.split(\":\");\r\n        end = end.split(\":\");\r\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n        var diff = endDate.getTime() - startDate.getTime();\r\n        var hours = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hours * 1000 * 60 * 60;\r\n        var minutes = Math.floor(diff / 1000 / 60);\r\n        if (hours < 0)\r\n          hours = hours + 24;\r\n        totalhours = (hours <= 9 ? \"0\" : \"\") + hours\r\n        totalmins = (minutes <= 9 ? \"0\" : \"\") + minutes;\r\n        hrarr.push(totalhours)\r\n        minsarr.push(totalmins)\r\n      } else {\r\n        hrarr.push(0)\r\n        minsarr.push(0)\r\n      }\r\n    }\r\n\r\n    hrarr.forEach(item => {\r\n      GetTotalHours += Number(item)\r\n    })\r\n    minsarr.forEach(item => {\r\n      GetTotalMins += Number(item)\r\n    })\r\n\r\n    let a = Math.floor(GetTotalMins / 60)\r\n    let b = GetTotalMins % 60\r\n    return GetTotalHours + a + \" Hours \" + \" and \" + b + \" Minutes \"\r\n  }\r\n  console.log(DocTimetyp1)\r\n  return (\r\n    <div className=\"container-fluid Doctors_Dsrsection\">\r\n      <div className='row p-0 m-0 align-items-center align-self-center'>\r\n        <div className=\"col-auto p-0 m-0\">\r\n        <div className=\"dropdown \">\r\n            <button className=\" button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              {pageindex?pageindex:\"Doctor's Login\"} \r\n            </button>\r\n            <ul className=\"dropdown-menu p-2 bg-seashell border-0 shadow-sm\" >\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" onClick={() => { setpageindex(\"Doctor's Login\") }}>Doctor's Login </li>\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom\" onClick={() => { setpageindex(\"Login Summary\") }}>Login Summary </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-auto p-0 m-0 ms-1 export_dropdown \">\r\n          <div className=\"dropdown\">\r\n            <div className=\"button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Exports\r\n            </div>\r\n            <ul className=\"dropdown-menu bg-seashell border-0 shadow-sm\" >\r\n              <li className=\"text-center border-bottom\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} All Doctors Login/Logout Details`}\r\n                  sheet=\"Login/Logout Details\"\r\n                  currentTableRef={tableref.current}\r\n                >\r\n                  <div className='button-sm button-seashell text-start fw-bold py-2'>All Doctors Login/Logout Details Export </div>\r\n\r\n                </DownloadTableExcel></li>\r\n              <li className=\"text-center\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Doctors Summary`}\r\n                  sheet=\"Summary Report\"\r\n                  currentTableRef={Doctorwisetable.current}\r\n                >\r\n                  <div className='button-sm button-seashell fw-bold text-start py-2'>Doctors Summary Export</div>\r\n\r\n                </DownloadTableExcel></li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-auto p-0 m-0\">\r\n        <button className=\"button button-pearl text-burntumber fw-bold p-0 m-0 py-1 px-3 \"> {TotalTime()}</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className={` text-start d-${pageindex ==\"Doctor's Login\"?'block':'none'}`} >\r\n          <div className='container-fluid scroll scroll-y doctordsrtable' ref={tableref}>\r\n            <span className='d-none'>Total Time:{TotalTime()}</span>\r\n            <table className='table text-start fw-bold'>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Doctors Name</th>\r\n                  <th>Mobile</th>\r\n                  <th>Date</th>\r\n                  <th>Roomnumber</th>\r\n                  <th>RoomType</th>\r\n                  <th>Start Time</th>\r\n                  <th>End Time</th>\r\n                  <th>Total Hours</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                load ? (\r\n                  <tbody className='position-relative'>\r\n                    <tr className='position-absolute start-0 end-0 fw-bolder text-charcoal'>Loading Doctors Login History </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  Appointments.length == 0 || Appointments == undefined ? (\r\n                    <tbody className='position-relative'>\r\n                      <tr className='position-absolute start-0 end-0 text-center fw-bolder text-charcoal'>No Doctors Login History Found </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=''>\r\n                      {\r\n                        Appointments.map((data, i) => (\r\n                          <tr key={i}>\r\n                            <td>{data.id ? data.id : ''}</td>\r\n                            <td>{data.doctor ? data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A' : 'N/A'}</td>\r\n                            <td>{data.doctor ? data.doctor.phone_number ? data.doctor.phone_number : '' : \"\"}</td>\r\n                            <td>{data.date && data.date != null ? reversefunction(data.date) : ''}</td>\r\n                            <td>{data.room ? data.room.room_number && data.room.room_number != null ? data.room.room_number : 'N/A' : \"\"}</td>\r\n                            <td>{data.room ? data.room.room_type == 1 ? 'Consultation' : 'Procedure' : ''}</td>\r\n                            <td>{data.login_time ? tConvert(data.login_time) : '--'}</td>\r\n                            <td>{data.logout_time ? tConvert(data.logout_time) : '--'}</td>\r\n                            <td>{data.login_time && data.login_time != null && data.logout_time && data.logout_time != null ? diff(data.login_time, data.logout_time) : '--'}</td>\r\n                          </tr>\r\n\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  )\r\n                )\r\n\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className={`d-${pageindex == \"Login Summary\"?'block':'none'}`}>\r\n          <div className='container-fluid scroll scroll-y doctordsrtable' ref={Doctorwisetable}>\r\n            <table className='table text-start fw-bold'>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr>\r\n                  <th className='my-0 py-0' rowspan='2'>Doctor Id</th>\r\n                  <th className='my-0 py-0' rowspan='2'>Doctor Name</th>\r\n                  <th className='my-0 py-0 border-0 bg-seashell border-bottom' colspan='2' scope='colgroup'>Consultation</th>\r\n                  <th className='my-0 py-0 border-0 bg-seashell border-bottom' colspan='2' scope='colgroup'>Procedure</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              {\r\n                DocTimetyp1 == undefined || DocTimetyp1.length == 0 ? (\r\n                  <tbody>\r\n                    <tr>Lo ading...</tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>{\r\n                    DocTimetyp1.map((data) => (\r\n                      <tr className=''>\r\n                        <td className=''>{data[0]}</td>\r\n                        <td className=''>{data[1]}</td>\r\n                        <td className=''>{data[4]}</td>\r\n                        <td className=''>{data[5]}</td>\r\n                        <td className=''>0</td>\r\n                        <td className=''>0</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Doctors_Dsr }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Dsr\\Appointments_Dsr.jsx",["1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext, useRef } from 'react'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport axios from \"axios\"\r\nimport { TodayDate, URL } from '../../index'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst Appointments_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const Appointmentref = useRef()\r\n  const Pendingref = useRef()\r\n  const Advancedref = useRef()\r\n\r\n  //Use States\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [pendingpaid, setpendingpaid] = useState([])\r\n\r\n  const [advancepaid, setadvancepaid] = useState([])\r\n  const [visibles, setvisibles] = useState([])\r\n  const [pageindex, setpageindex] = useState(\"Appointments\")\r\n  const [loading, setloading] = useState()\r\n  const [appxl, setappxl] = useState('none')\r\n  const [pprxl, setpprxl] = useState('none')\r\n  const [advxl, setadvxl] = useState('none')\r\n  // props.doctorid, props.fromdate, props.todate\r\n  let listdata = []\r\n  async function DSR_All_Appointments() {\r\n    setloading(true)\r\n    if (props.doctorid || props.fromdate || props.todate) {\r\n      try {\r\n        await axios.get(`${url}/DSR/appointments?from_date=${props.fromdate}&to_date=${props.todate}&admin_id=${adminid}&clinic_id=${props.clinic}&doctor_id=${props.doctorid ? props.doctorid : ''}`).then((response) => {\r\n          response.data.data.appointments.map((data) => {\r\n            listdata.push(data.doctor.id)\r\n          })\r\n          setvisibles(listdata, [])\r\n          setAppointments(response.data.data.appointments)\r\n          setpendingpaid(response.data.data.pending_paid)\r\n          setadvancepaid(response.data.data.advance_payments)\r\n          setloading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setloading(false)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please select any one field to search\")\r\n      setloading(false)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    DSR_All_Appointments()\r\n  }, [])\r\n  useEffect(() => {\r\n    DSR_All_Appointments()\r\n  }, [props.doctorid, props.fromdate, props.todate, props.clinic])\r\n  \r\n\r\n\r\n  const reversefunction = (date) => {\r\n    if (date !== undefined) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n    }\r\n    return date\r\n  }\r\n  function tConvert(time) {\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function payment_method_detailsForCash() {\r\n    let casharr = []\r\n    let cash = 0\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(Appointments[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    return cash\r\n  }\r\n  function payment_method_detailsForCard() {\r\n    let cardarr = []\r\n    let card = 0\r\n\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n    }\r\n    return card\r\n  }\r\n  function payment_method_detailsForPaytm() {\r\n    let paytmarr = []\r\n    let paytm = 0\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n\r\n    return paytm\r\n  }\r\n  function payment_method_detailsForRazorPay() {\r\n    let razorpayarr = []\r\n    let razorpay = 0\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n    }\r\n    return razorpay\r\n  }\r\n  function payment_method_detailsForPoints() {\r\n    let pointsarr = []\r\n    let points = 0\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    return points\r\n  }\r\n  function payment_method_detailsForPhonepe() {\r\n    let phonepearr = []\r\n    let phonepe = 0\r\n\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(Appointments[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n    }\r\n    return phonepe\r\n  }\r\n  function payment_method_detailsForWireTransfer() {\r\n    let wiretransferarr = []\r\n    let wiretransfer = 0\r\n\r\n    if (pageindex == undefined || pageindex == \"Appointments\") {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(Appointments[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == \"Pendings Paid\") {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == \"Advance Payments\") {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(advancepaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n\r\n    return wiretransfer\r\n  }\r\n  function AdvancedAmountRecieved() {\r\n    let advancepayarr = []\r\n    let advancepay = 0\r\n    for (let i = 0; i < advancepaid.length; i++) {\r\n      advancepayarr.push(Number(advancepaid[i].credit_amount))\r\n    }\r\n    if (advancepayarr.length != 0) {\r\n      advancepayarr.forEach(item => {\r\n        advancepay += item\r\n      })\r\n      return advancepay\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function PendingAmountRecieved() {\r\n    let pendingpayarr = []\r\n    let pendingpay = 0\r\n    for (let i = 0; i < pendingpaid.length; i++) {\r\n      pendingpayarr.push(Number(pendingpaid[i].paid_amount))\r\n    }\r\n    if (pendingpayarr.length != 0) {\r\n      pendingpayarr.forEach(item => {\r\n        pendingpay += Number(item)\r\n      })\r\n      return pendingpay\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function TotalPendingPayment() {\r\n    let totalpendingarr = []\r\n    let totalpending = 0;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      for (let j = 0; j < Appointments[i].pending_payments.length; j++) {\r\n        if (Appointments[i].pending_payments[j].is_paid == 0) {\r\n          totalpendingarr.push(JSON.parse(Appointments[i].pending_payments[j].pending_amount))\r\n        }\r\n      }\r\n    }\r\n    if (totalpendingarr.length != 0) {\r\n      totalpendingarr.forEach(item => {\r\n        totalpending += item\r\n      })\r\n      return totalpending\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function GrandTotal() {\r\n    let grandtotalarr = []\r\n    let grandtotal = 0;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n\r\n      grandtotalarr.push(JSON.parse(Appointments[i].total_amount))\r\n\r\n    }\r\n    if (grandtotalarr.length != 0) {\r\n      grandtotalarr.forEach(item => {\r\n        grandtotal += item\r\n      })\r\n    }\r\n    return grandtotal\r\n  }\r\n  function SumExtraCharges(i) {\r\n    let ExtraChargeSumarr = []\r\n    let sum = 0\r\n    Appointments[i].other_charges.map((data) => (\r\n      ExtraChargeSumarr.push(data.amount)\r\n    ))\r\n\r\n    ExtraChargeSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  function SumPendingpayments(i) {\r\n    let PendingPaymentsSumarr = []\r\n    let sum = 0\r\n\r\n    Appointments[i].pending_payments.map((data) => {\r\n      if (data.is_paid == 0) {\r\n        PendingPaymentsSumarr.push(data.pending_amount)\r\n      }\r\n    })\r\n    PendingPaymentsSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  return (\r\n    <div className='Appointments_Dsrsection'>\r\n      <div className='row p-0 m-0 ms-2'>\r\n      <div className=\"col-auto p-0 m-0\">\r\n      <div className=\"dropdown \">\r\n            <button className=\" button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              {pageindex?pageindex:\"List type\"} <span className='ms-2 text-burntumber fw-bolder'>{pageindex ==\"Appointments\"?Appointments.length:pageindex =='Pendings Paid'?pendingpaid.length:pageindex=='Advance Payments'?advancepaid.length:''}</span>\r\n            </button>\r\n            <ul className=\"dropdown-menu bg-seashell border-0 shadow-sm py-2\" >\r\n              <li className={`text-start p-2 text-charcoal fw-bolder bg-${pageindex=='Appointments'?'charcoal':''} text-${pageindex=='Appointments'?'white':'charcoal'}`} onClick={() => { setpageindex(\"Appointments\") }}>Appointments<span class=\" p-0 m-0 ms-2 badge text-warning fw-bolder\">{Appointments.length}</span> </li>\r\n              <li className={`text-start p-2 text-charcoal fw-bolder bg-${pageindex=='Pendings Paid'?'charcoal':''} text-${pageindex=='Pendings Paid'?'white':'charcoal'}`} onClick={() => { setpageindex(\"Pendings Paid\") }}>Pendings Paid<span class=\" p-0 m-0 ms-2 badge text-warning fw-bolder\">{pendingpaid.length}</span> </li>\r\n              <li className={`text-start p-2 text-charcoal fw-bolder bg-${pageindex=='Advance Payments'?'charcoal':''} text-${pageindex =='Advance Payments'?'white':'charcoal'}`} onClick={() => { setpageindex(\"Advance Payments\") }} >Advance Payments<span class=\" p-0 m-0 ms-2 badge text-warning fw-bolder\">{advancepaid.length}</span> </li>\r\n            </ul>\r\n          </div>\r\n          </div>\r\n        <div className=\"col-auto p-0 m-0 ms-1 export_dropdown \">\r\n          <div className=\"dropdown\">\r\n            <button className=\" button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Exports\r\n            </button>\r\n            <ul className=\"dropdown-menu p-2 bg-seashell border-0 shadow-sm\" >\r\n              <li className=\"text-start fw-bold border-bottom py-2\" onClick={() => { setappxl('block') }}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Appointments`}\r\n                  sheet=\"Appointments\"\r\n                  currentTableRef={Appointmentref.current}\r\n                >\r\n                  <div className='button button-seashell text-start fw-bold p-0 m-0 py-2'>Appointments Export</div>\r\n\r\n                </DownloadTableExcel></li>\r\n              <li className=\"text-start fw-bold border-bottom\" onClick={() => { setpprxl('block') }}><DownloadTableExcel\r\n                filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pending Payments Reciecved`}\r\n                sheet=\" Pending Payments Reciecved\"\r\n                currentTableRef={Pendingref.current}\r\n              >\r\n                <div className='btn p-0 m-0 text-start py-2 fw-bold'>Pending Payments Reciecved Export</div>\r\n\r\n              </DownloadTableExcel></li>\r\n              <li className=\"text-start fw-bold\" onClick={() => { setadvxl('block') }}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Advance payment Recieved`}\r\n                  sheet=\" Advance payment Recieved\"\r\n                  currentTableRef={Advancedref.current}\r\n                >\r\n                  <div className=' btn p-0 m-0 text-start py-2 fw-bold'>Advance payment Recieved Export</div>\r\n\r\n                </DownloadTableExcel>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n        <div className={`d-${pageindex=='Appointments'?'block':'none'}  text-start`} >\r\n          {/* <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-3 ms-sm-1\">Payments</h6> */}\r\n          <div className=\"row m-0 g-2 mt-md-2 p-0 ms-md-1 text-start justify-content-start\">\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=' scroll scroll-y pb-5 mt-2' style={{ maxHeight: '58vh' }}>\r\n            <table className='table text-start bg-pearl '>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr className='bg-pearl'>\r\n                  <th className=' text-charcoal75 fw-bold'>Appoint. Id</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Bill no.</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Name</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Mobile</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Doctor</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Date</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Time</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Payment Mode</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Consult Amt.</th>\r\n                  {/* <th className=' text-charcoal75 fw-bold'>Procedure Amt.</th> */}\r\n                  <th className=' text-charcoal75 fw-bold'>Extra Charges</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Disc.</th>\r\n                  <th className=' text-charcoal75 fw-bold'>CGST</th>\r\n                  <th className=' text-charcoal75 fw-bold'>SGST</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Pending Amt.</th>\r\n                  <th className=' text-charcoal75 fw-bold'> Grand Total</th>\r\n                </tr>\r\n              </thead>\r\n\r\n\r\n              {\r\n                loading ? (\r\n                  <tbody className='text-start' style={{ minHeight: '55vh' }}>\r\n                    <tr className='position-absolute border-0 start-0 end-0 px-5 '>\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <strong className=''>Getting Details please be Patient ...</strong>\r\n                        <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                      </div>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  Appointments.length == 0 ? (\r\n                    <tbody className='position-relative text-burntumber mt-1 text-center ' >\r\n                      <tr >\r\n                        <td className=' position-absolute start-0 end-0 text-charcoal fw-bold mt-1'>No Appointments</td></tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className='align-items-center Appointment '>\r\n                      {\r\n                        Appointments.map((data, i) => (\r\n                          <tr className={`align-middle bg-${SumPendingpayments(i) > 0 ? 'lightred50' : ''}`}>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.id ? data.id : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2' key={i}>{data.bill_id && data.bill_id != null ? data.bill_id : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.full_name != null ? data.patient.full_name : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.phone_number != null ? data.patient.phone_number : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.doctor && data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.timeslot && data.timeslot.date && data.timeslot.date != null ? reversefunction(data.timeslot.date) : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.timeslot && data.timeslot.time_from && data.timeslot.time_from != null ? tConvert(data.timeslot.time_from) : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.doctor && data.doctor.consulationFee !== null ? data.doctor.consulationFee : ''}</td>\r\n                            {/* <td className='fw-bold text-charcoal px-0 px-2'>₹{data.procedure_cost && data.procedure_cost != null ? data.procedure_cost : ''}</td> */}\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{SumExtraCharges(i)}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.discount && data.discount != null ? data.discount : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.CGST}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.SGST}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{SumPendingpayments(i)}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.total_amount}</td>\r\n                          </tr>\r\n\r\n                        ))\r\n                      }\r\n                      {/* <tr>--</tr>\r\n                     <tr>--</tr>\r\n                     <tr>--</tr>\r\n                     <tr>--</tr>\r\n                     <tr>--</tr> */}\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n\r\n            </table>\r\n            <table className={`table text-center bg-pearl d-none d-${appxl} `} ref={Appointmentref}>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr className='bg-pearl'>\r\n                  <th className='py-0' rowspan='2'>Appointment Id</th>\r\n                  <th className='py-0' rowspan='2'>Bill no.</th>\r\n                  <th className='py-0' rowspan='2'>Name</th>\r\n                  <th className='py-0' rowspan='2'>Mobile</th>\r\n                  <th className='py-0' rowspan='2'>Doctor Name</th>\r\n                  <th className='py-0' rowspan='2'>Date</th>\r\n                  <th className='py-0' rowspan='2'>Time</th>\r\n                  <th className='py-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                  <th className='py-0' rowspan='2'>Consultation Amount</th>\r\n                  {/* <th className='py-0' rowspan='2'>Procedure Amount</th> */}\r\n                  <th className='py-0' rowspan='2'>Extra Charges</th>\r\n                  <th className='py-0' rowspan='2'>Discount</th>\r\n                  <th className='py-0' rowspan='2'>CGST</th>\r\n                  <th className='py-0' rowspan='2'>SGST</th>\r\n                  <th className='py-0' rowspan='2'>Pending Amt.</th>\r\n                  <th className='py-0' rowspan='2'> Grand Total</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='bg-pearl py-0' scope='col'>Cash</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Card</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Paytm</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Phonepe</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Razorpay</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Wire-Transfer</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Points</th>\r\n                </tr>\r\n              </thead>\r\n\r\n\r\n              {\r\n                loading ? (\r\n                  <tbody>\r\n                    <tr className='position-relative text-burntumber mt-1 m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-charcoal75 mt-1'>Please be Patient while we are fetching Appointments</td></tr>\r\n                  </tbody>\r\n                ) : (\r\n                  Appointments.length == 0 ? (\r\n                    <tbody >\r\n                      <tr className='position-relative text-burntumber mt-1 m-auto'>\r\n                        <td className=' position-absolute start-0 end-0 text-charcoal fw-bold mt-1'>No Appointments</td></tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className='align-items-center Appointment'>\r\n                      {\r\n                        Appointments.map((data, i) => (\r\n                          <tr className={`bg-${SumPendingpayments(i) > 0 ? 'lightred50' : ''}`}>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.id ? data.id : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data.bill_id && data.bill_id != null ? data.bill_id : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.patient && data.patient.phone_number != null ? data.patient.phone_number : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.doctor && data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.timeslot && data.timeslot.date && data.timeslot.date != null ? reversefunction(data.timeslot.date) : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.timeslot && data.timeslot.time_from && data.timeslot.time_from != null ? tConvert(data.timeslot.time_from) : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.doctor && data.doctor.consulationFee !== null ? data.doctor.consulationFee : 'N/A'}</td>\r\n                            {/* <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.procedure_cost && data.procedure_cost != null ? data.procedure_cost : 'N/A'}</td> */}\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{SumExtraCharges(i)}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.discount && data.discount != null ? data.discount : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.CGST}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.SGST}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{SumPendingpayments(i)}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.total_amount}</td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n\r\n            </table>\r\n          </div>\r\n          <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0 scroll'>\r\n            <div className=\"row p-0 m-0 \">\r\n              <div className=\"col-auto p-0 m-0\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                    <h5 className='fw-bold text-start'>₹ {GrandTotal()}</h5>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Total Pending Amounts</h6>\r\n                    <h5 className='fw-bold text-burntumber text-start'>₹ {TotalPendingPayment()}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className={`d-${pageindex=='Pendings Paid'?'block':'none'}`} >\r\n          {/* <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6> */}\r\n          <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1  bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=' scroll scroll-y pb-5' style={{ maxHeight: '58vh' }}>\r\n            <table className={`table text-start`}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='text-charcoal75 fw-bold'>Appoint. Id</th>\r\n                  <th className='text-charcoal75 fw-bold'>Bill no.</th>\r\n                  <th className='text-charcoal75 fw-bold'>Name</th>\r\n                  <th className='text-charcoal75 fw-bold'>Mobile</th>\r\n                  <th className='text-charcoal75 fw-bold'>Doctor</th>\r\n                  <th className='text-charcoal75 fw-bold'>Appoint. Date</th>\r\n                  <th className='text-charcoal75 fw-bold'>Payment Recieved Date</th>\r\n                  <th className='text-charcoal75 fw-bold'>Payment Mode</th>\r\n                  <th className='text-charcoal75 fw-bold'>Amt. Received</th>\r\n                  <th className='text-charcoal75 fw-bold'>Paid Amt.</th>\r\n                </tr>\r\n\r\n              </thead>\r\n              <tbody className='Pendingpay'>\r\n\r\n                {\r\n                  pendingpaid.map((data, i) => (\r\n                    <tr key={i}>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment.id != null ? data.appointment.id : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.id && data.id != null ? data.id : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient && data.appointment.patient.full_name != null ? data.appointment.patient.full_name : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient.phone_number && data.appointment.patient.phone_number != null ? data.appointment.patient.phone_number : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.doctor && data.appointment.doctor.doctor_name != null ? data.appointment.doctor.doctor_name : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.appointment_date != null ? reversefunction(data.appointment.appointment_date) : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_date && data.paid_date != null ? reversefunction(data.paid_date) : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n\r\n            <table className={`table text-center d-none  d-${pprxl}`} ref={Pendingref}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Appoint. Id</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Bill no.</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Name</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Mobile</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Doctor</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Appoint. Date</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Payment Recieved Date</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' colspan='7' scope='colgroup'>Payment Method</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Amount Received</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='bg-pearl py-0' scope='col'>Cash</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Card</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Paytm</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Phonepe</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Razorpay</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Wire-Transfer</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Points</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className='Pendingpay'>\r\n\r\n                {\r\n                  pendingpaid.map((data, i) => (\r\n                    <tr key={i}>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment.id != null ? data.appointment.id : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.id && data.id != null ? data.id : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient && data.appointment.patient.full_name != null ? data.appointment.patient.full_name : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient.phone_number && data.appointment.patient.phone_number != null ? data.appointment.patient.phone_number : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.doctor && data.appointment.doctor.doctor_name != null ? data.appointment.doctor.doctor_name : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.appointment_date != null ? reversefunction(data.appointment.appointment_date) : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_date && data.paid_date != null ? reversefunction(data.paid_date) : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0 scroll'>\r\n            <div className=\"d-flex p-0 m-0 \">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0 justify-content-start\">\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Recieved Pending Amount</h6>\r\n                    <h5 className='fw-bold'>₹ {PendingAmountRecieved()}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`d-${pageindex=='Advance Payments'?'block':'none'} `} >\r\n          {/* <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6> */}\r\n          <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=' scroll scroll-y pb-5' style={{ maxHeight: '58vh' }}>\r\n            <table className={`table text-start`}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='text-charcoal75 fw-bold'>Credit ID</th>\r\n                  <th className='text-charcoal75 fw-bold'>Patient Name</th>\r\n                  {/* <th className='text-charcoal75 fw-bold'>Doctor Name</th> */}\r\n                  <th className='text-charcoal75 fw-bold'>Mobile No.</th>\r\n                  <th className='text-charcoal75 fw-bold'>Description</th>\r\n                  <th className='text-charcoal75 fw-bold'>Date Recieved</th>\r\n                  <th className='text-charcoal75 fw-bold'>Payment Mode </th>\r\n                  <th className='text-charcoal75 fw-bold'>Amt.</th>\r\n                  <th className='text-charcoal75 fw-bold'>Total Amount</th>\r\n                </tr>\r\n\r\n              </thead>\r\n              <tbody className='Advancepay'>\r\n\r\n                {\r\n                  advancepaid.map((data, i) => (\r\n                    <tr key={i} className=''>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.id ? data.id : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                      {/* <td className='fw-bold text-charcoal px-0 px-2'>{data.doctor && data.doctor.full_name != null ? data.doctor.full_name : 'N/A'}</td> */}\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.phone_number !== null ? data.patient.phone_number : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.description && data.description != null ? data.description : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{reversefunction(data.date)}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.credit_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n            <table className={`table text-start d-none d-${advxl}`} ref={Advancedref}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='py-0 my-0' rowspan='2'>Credit ID</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Patient Name</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Doctor Name</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Mobile No.</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Description</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Date Recieved</th>\r\n                  <th className='py-0 my-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Amount Recieved</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Cash</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Card</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Paytm</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Phonepe</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Razorpay</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Wire-Transfer</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Points</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className='Advancepay'>\r\n\r\n                {\r\n                  advancepaid.map((data, i) => (\r\n                    <tr key={i} className=''>\r\n                      <td className='py-0 py-1'>{data.id ? data.id : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.doctor && data.doctor.full_name != null ? data.doctor.full_name : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.patient && data.patient.phone_number !== null ? data.patient.phone_number : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.description && data.description != null ? data.description : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{reversefunction(data.date)}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.credit_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0 scroll'>\r\n            <div className=\"d-flex p-0 m-0 \">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0 justify-content-start\">\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Recieved Advance Amount</h6>\r\n                    <h5 className='fw-bold'>₹ {AdvancedAmountRecieved()}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport { Appointments_Dsr }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Dsr\\Pharmacy_Dsr.jsx",["2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123"],[],"import React, { useContext, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\n\r\nconst Pharmacy_Dsr = (props) => {\r\n  const Pendingsonly = useRef()\r\n  const saleentry = useRef()\r\n  const salereturn = useRef()\r\n  const pendingsrecieved = useRef()\r\n  const url = useContext(URL)\r\n  const [pendingpaid, setpendingpaid] = useState([])\r\n  const [advancepaid, setadvancepaid] = useState([])\r\n  const [SaleEntryList, setSaleEntryList] = useState([])\r\n  const [SalePendings, setSalePendings] = useState([])\r\n  const [SaleReturnList, setSaleReturnList] = useState([])\r\n  const [PendingPaid, setPendingPaid] = useState([])\r\n  const [load, setload] = useState()\r\n  const [pd, setpd] = useState('none')\r\n  const [se, setse] = useState('block')\r\n  const [pr, setpr] = useState('block')\r\n  const [prxl, setprxl] = useState('none')\r\n  const [pageindex, setpageindex] = useState('Sale Entries')\r\n\r\n  const PharmacyList = async () => {\r\n    setload(true)\r\n    try {\r\n      await axios.get(`${url}/DSR/pharmacy?from=${props.fromdate}&to=${props.todate}`).then((response) => {\r\n        setSaleReturnList(response.data.data.pharmacy_sale_return)\r\n        setSaleEntryList(response.data.data.pharmacy)\r\n        setPendingPaid(response.data.data.pending_paid)\r\n        \r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    PharmacyList()\r\n  }, [props.fromdate, props.todate, props.clinic])\r\n\r\n\r\n\r\n\r\n  //  useEffect((>{\r\n\r\n  //  })\r\n\r\n  function payment_method_detailsForCash() {\r\n    let casharr = []\r\n    let cash = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForCard() {\r\n    let cardarr = []\r\n    let card = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForPaytm() {\r\n    let paytmarr = []\r\n    let paytm = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n  }\r\n  function payment_method_detailsForRazorPay() {\r\n    let razorpayarr = []\r\n    let razorpay = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForPoints() {\r\n    let pointsarr = []\r\n    let points = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n  }\r\n  function payment_method_detailsForPhonepe() {\r\n    let phonepearr = []\r\n    let phonepe = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n  }\r\n  function payment_method_detailsForWireTransfer() {\r\n    let wiretransferarr = []\r\n    let wiretransfer = 0\r\n    if (pageindex == undefined || pageindex == \"Sale Entries\") {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n  }\r\n  function TotalPendingPayment() {\r\n    let totalpendingarr = []\r\n    let totalpending = 0;\r\n    for (let i = 0; i < SaleEntryList.length; i++) {\r\n      for (let j = 0; j < SaleEntryList[i].pending_payments.length; j++) {\r\n        if (SaleEntryList[i].pending_payments[j].is_paid == 0) {\r\n          totalpendingarr.push(JSON.parse(SaleEntryList[i].pending_payments[j].pending_amount))\r\n        }\r\n      }\r\n    }\r\n    if (totalpendingarr.length != 0) {\r\n      totalpendingarr.forEach(item => {\r\n        totalpending += item\r\n      })\r\n      return totalpending\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function GrandTotal() {\r\n    let grandtotalarr = []\r\n    let grandtotal = 0;\r\n    if (pageindex == \"Sale Entries\" || pageindex == undefined) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(SaleEntryList[i].grand_total))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n    if (pageindex == \"Sale Returns\") {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(SaleReturnList[i].grand_total))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n    if (pageindex == \"Pendings Recieved\") {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(PendingPaid[i].paid_amount))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n\r\n\r\n  }\r\n  function SumExtraCharges(i) {\r\n    let ExtraChargeSumarr = []\r\n    let sum = 0\r\n    SaleEntryList[i].other_charges.map((data) => (\r\n      ExtraChargeSumarr.push(data.amount)\r\n    ))\r\n\r\n    ExtraChargeSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  function SumPendingpayments(i) {\r\n    let PendingPaymentsSumarr = []\r\n    let sum = 0\r\n\r\n    SaleEntryList[i].pending_payments.map((data) => {\r\n      if (data.is_paid == 0) {\r\n        PendingPaymentsSumarr.push(data.pending_amount)\r\n      }\r\n    })\r\n    PendingPaymentsSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date && date != null) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  function Conditionaldisplay(i) {\r\n    if (se == 'block') {\r\n      setse('none')\r\n      setpd('block')\r\n    }\r\n    if (pd == 'block') {\r\n      setse('block')\r\n      setpd('none')\r\n    }\r\n  }\r\n  // d-${Pendingsonly.current.checked = true ? Conditionaldisplay(i) : ''}\r\n  return (\r\n    <div className='Pharmacy_Dsrsection p-0 m-0'>\r\n      <div className='row m-0 p-0 mt-2 ms-2'>\r\n        <div className=\"col-auto p-0 m-0\">\r\n        <div className=\"dropdown \">\r\n            <button className=\" button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              {pageindex?pageindex:\"List type\"} <span className='ms-2 text-burntumber fw-bolder'>{pageindex ==\"Sale Entries\"?SaleEntryList.length:pageindex =='Sale Returns'?SaleReturnList.length:pageindex=='Pendings Recieved'?PendingPaid.length:''}</span>\r\n            </button>\r\n            <ul className=\"dropdown-menu p-2 bg-seashell border-0 shadow-sm\" >\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom py-2\" onClick={() => { setpageindex(\"Sale Entries\") }}>Sale Entries<span class=\" p-0 m-0 ms-2 badge text-burntumber fw-bolder\">{SaleEntryList.length}</span> </li>\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder border-bottom\" onClick={() => { setpageindex(\"Sale Returns\") }}>Sale Returns<span class=\" p-0 m-0 ms-2 badge text-burntumber fw-bolder\">{SaleReturnList.length}</span> </li>\r\n              <li className=\"text-start p-2 text-charcoal fw-bolder\"  onClick={() => { setpageindex(\"Pendings Recieved\") }} >Pendings Recieved<span class=\" p-0 m-0 ms-2 badge text-burntumber fw-bolder\">{PendingPaid.length}</span> </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-auto p-0 m-0 ms-1 export_dropdown \">\r\n          <div className=\"dropdown\">\r\n            <button className=\"button button-seashell text-charcoal fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> Exports </button>\r\n            <ul className=\"dropdown-menu bg-seashell border-0 shadow-sm\" >\r\n              <li className=\"text-justify border-bottom\">\r\n                <span className={`d-${se}`}>\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Entries`}\r\n                    sheet=\"Sale Entries\"\r\n                    currentTableRef={saleentry.current}\r\n                  >\r\n                    <div className='btn p-0 m-0 bg-seashell fw-bold px-2 text-start'>All Export</div>\r\n\r\n                  </DownloadTableExcel>\r\n                </span>\r\n                <span className={`d-${pd}`}>\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pending Sale Entries`}\r\n                    sheet=\"Pendings\"\r\n                    currentTableRef={Pendingsonly.current}\r\n                  >\r\n                    <div className='btn p-0 m-0 bg-seashell px-2 fw-bold text-start  '>Pending Export</div>\r\n\r\n                  </DownloadTableExcel>\r\n                </span></li>\r\n              <li className=\"text-justify  border-bottom\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Returns`}\r\n                  sheet=\"Sale Returns\"\r\n                  currentTableRef={salereturn.current}\r\n                >\r\n                  <div className='btn p-0 m-0 bg-seashell p-2 fw-bold text-start'>Sale Returns Export</div>\r\n                </DownloadTableExcel></li>\r\n              <li className=\"text-justify\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pendings Recieved`}\r\n                  sheet=\"Pendings Recieved\"\r\n                  currentTableRef={pendingsrecieved.current}\r\n                >\r\n                  <div className='btn p-0 m-0 bg-seashell px-2 text-start fw-bold text-start ' onClick={() => { prxl('block') }} >Pendings Recieved Export</div>\r\n                </DownloadTableExcel>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=''>\r\n          <div className={`d-${pageindex =='Sale Entries'?'block':'none'} text-start`} >\r\n            <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 mt-4 text-end'>\r\n              <div className='selector '>\r\n                <input ref={Pendingsonly} type=\"checkbox\" className='form-check-input ms-2 me-1' onChange={() => { Conditionaldisplay() }} /><label className='text-burntumber fw-bold'>Show Pendings Only</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y mt-2 saleentries d-${se}`} ref={saleentry} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill no.</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Date</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Name</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Doctor</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Total</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Pending</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Payment Mode</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold text-center'>Payment Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5 '>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center align-middle'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start' style={{ paddingBottom: '30px' }}>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n                            <tr className={`align-middle`}>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{SumPendingpayments(i)}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td className='fw-bold text-charcoal text-center'>{SumPendingpayments(i) !== 0 ?\r\n                                <button className='button p-0 m-0 px-4 fw-bold text-charcoal rounded-pill button-lightred'>Pending</button>\r\n                                :\r\n                                <button className='button p-0 m-0 px-3 fw-bold rounded-pill text-cahrcoal button-lightgreen'>Completed</button>}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y mt-2 saleentries d-${pd}`} ref={Pendingsonly} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill no.</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Date</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Name</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Doctor</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Total</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Pending</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Payment Mode</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold text-center'>Payment Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      // d-${SumPendingpayments(i) > 0 ? '':'none'}\r\n                      <tbody className='text-start align-middle'>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n\r\n                            SumPendingpayments(i) > 0 ? (\r\n\r\n                              <tr className={``}>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{SumPendingpayments(i)}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                                <td className='fw-bold text-charcoal text-center'><button className='button p-0 m-0 px-4 fw-bold text-charcoal rounded-pill button-lightred'>Pending</button></td>\r\n                              </tr>\r\n                            ) : (<></>)\r\n\r\n\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll d-none scroll-y mt-2 saleentries d-${se}`} ref={saleentry} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    {/* <th rowspan='2' className='py-0' >Mobile</th> */}\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0 p-0 m-0'>Payment Method</th>\r\n                    <th rowspan='2' className='py-0' >Pending Amt.</th>\r\n                    <th rowspan='2' className='py-0' > Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start' style={{ paddingBottom: '30px' }}>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n                            <tr className={``}>\r\n                              <td key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                              <td>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                              {/* <td>{data && data.patient && data.patient.phone_number !== null ? data.patient.phone_number : ''}</td> */}\r\n                              <td>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                              <td>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                              <td>{SumPendingpayments(i)}</td>\r\n                              <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y d-none saleentries d-${pd}`} ref={Pendingsonly} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th rowspan='2' >Bill no.</th>\r\n                    <th rowspan='2' >Name</th>\r\n                    {/* <th rowspan='2' >Mobile</th> */}\r\n                    <th rowspan='2' >Doctor Name</th>\r\n                    <th rowspan='2' >Bill Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0'>Payment Method</th>\r\n                    <th rowspan='2' >Pending Amt.</th>\r\n                    <th rowspan='2' > Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white' scope='col'>Cash</th>\r\n                    <th className='bg-white' scope='col'>Card</th>\r\n                    <th className='bg-white' scope='col'>Paytm</th>\r\n                    <th className='bg-white' scope='col'>Phonepe</th>\r\n                    <th className='bg-white' scope='col'>Razorpay</th>\r\n                    <th className='bg-white' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      // d-${SumPendingpayments(i) > 0 ? '':'none'}\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n\r\n                            SumPendingpayments(i) > 0 ? (\r\n                              <tr className={` bg-lightred50`}>\r\n                                <td key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                                <td>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                                {/* <td>{data && data.patient && data.patient.phone_number !== null ? data.patient.phone_number : ''}</td> */}\r\n                                <td>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                                <td>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                                <td>{SumPendingpayments(i)}</td>\r\n                                <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                              </tr>\r\n                            ) : (<></>)\r\n\r\n\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Total Pending Payments</h6>\r\n                  <h5 className='fw-bold'>₹ {TotalPendingPayment()}</h5>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                  <h5 className='fw-bold'>₹ {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`d-${pageindex=='Sale Returns'?'block':'none'}`}>\r\n\r\n            <div className=\"row m-0 g-2 p-0 text-start mt-2\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n            <div className=' saleoptions mt-lg-2 mt-md-2 position-absolute end-0 me-md-2 me-lg-5 me-1 text-end'>\r\n              <span>\r\n                {/* <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Returns`}\r\n                  sheet=\"Sale Returns\"\r\n                  currentTableRef={salereturn.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-lg-5 ms-md-5 ms-sm-3 ms-1 bg-pearl border-charcoal fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} /> Export</button>\r\n                </DownloadTableExcel> */}\r\n              </span>\r\n            </div>\r\n            <div className='container-fluid p-0 m-0 scroll scroll-y salereturns mt-2' ref={salereturn} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n\r\n              <table className='table fw-bold'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr className='text-charcoal75'>\r\n                    {/* <th rowspan='2' className='py-0' >SE ID</th> */}\r\n                    <th rowspan='2' className='py-0' >SR ID</th>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    {/* <th rowspan='2' className='py-0' >Mobile</th> */}\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    {/* <th colspan='7' scope='colgroup' className='border-0 py-0'>Payment Method</th> */}\r\n                    {/* <th rowspan='2' className='py-0' >Amount</th> */}\r\n                    <th rowspan='2' className='py-0' >Return Date</th>\r\n                    <th rowspan='2' className='py-0' >Returned Amount</th>\r\n                  </tr>\r\n                  {/* <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr> */}\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleReturnList && SaleReturnList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute   text-charcoal fw-bold start-0 end-0' >No Sale Returns</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleReturnList.map((data, i) => (\r\n                            <tr>\r\n                              {/* <td key={i}>{data.sale_entry_id && data.sale_entry_id !== null ? \"SE-\" + data.sale_entry_id : ''}</td> */}\r\n                              <td key={i}>{data.return_no && data.return_no !== null ? \"SR-\" + data.return_no : ''}</td>\r\n                              <td key={i}>{data.sale_entry && data.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              {/* <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.phone_number !== null ? data.sale_entry.patient.phone_number : ''}</td> */}\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              {/* <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Cash : data.sale_entry.pending_payments[0].payment_method_details && data.sale_entry.pending_payments[0].payment_method_details != null ? JSON.parse(data.sale_entry.pending_payments[0].payment_method_details).Cash:''}</td>\r\n                              <td>{data.sale_entry.pending_payments[0] !==undefined && data.sale_entry.pending_payments[0].payment_method_details !==undefined && data.sale_entry.pending_payments[0].payment_method_details != null ? JSON.parse(data.sale_entry.pending_payments[0].payment_method_details).Card :''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Points : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.grand_total !== null ? data.sale_entry.grand_total : ''}</td> */}\r\n                              <td>{data.return_date && data.return_date !== null ? reversefunction(data.return_date) : ''}</td>\r\n                              <td>₹{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                              {/* : data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Card */}\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                  <h5 className='fw-bold'>₹ {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`d-${pageindex=='Pendings Recieved'?'block':'none'}`}>\r\n\r\n            <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n            {/* <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 text-end'>\r\n              <span>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pendings Recieved`}\r\n                  sheet=\"Pendings Recieved\"\r\n                  currentTableRef={pendingsrecieved.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 bg-pearl border-charcoal px-2 py-1 fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} onClick={() => { prxl('block') }} /> Export</button>\r\n                </DownloadTableExcel>\r\n              </span>\r\n            </div> */}\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y pendingpayrecieve mt-2`} ref={pendingsrecieved} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr className='text-charcoal75 fw-bold'>\r\n                    <th className='py-0' >Bill no.</th>\r\n                    <th className='py-0' >Name</th>\r\n                    <th className='py-0' >Doctor Name</th>\r\n                    <th className='py-0' >Bill Date</th>\r\n                    <th className='py-0' >Pending Date</th>\r\n                    <th className='py-0' >Paid Date</th>\r\n                    <th className='py-0'>payment Mode</th>\r\n                    <th className='py-0'>Amt Recieved</th>\r\n                    <th className='py-0' >Total Received</th>\r\n                  </tr>\r\n\r\n                </thead>\r\n\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n\r\n                  ) : (\r\n                    PendingPaid && PendingPaid.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Pending Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          PendingPaid.map((data, i) => (\r\n                            <tr className='text-charcoal fw-bold'>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              <td>{data.pending_date && data.pending_date !== null ? reversefunction(data.pending_date) : ''}</td>\r\n                              <td>{data.paid_date && data.paid_date !== null ? reversefunction(data.paid_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td>₹{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td>₹{data.paid_amount && data.paid_amount !== null ? data.paid_amount : ''}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n\r\n\r\n              </table>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y d-none pendingpayrecieve d-${prxl}`} ref={pendingsrecieved} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    <th rowspan='2' className='py-0' >Pending Date</th>\r\n                    <th rowspan='2' className='py-0' >Paid Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0 py-0'>Payment Method</th>\r\n                    <th rowspan='2' className='py-0' >Amount Received</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n\r\n                  ) : (\r\n                    PendingPaid && PendingPaid.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Pending Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          PendingPaid.map((data, i) => (\r\n                            <tr>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              <td>{data.pending_date && data.pending_date !== null ? reversefunction(data.pending_date) : ''}</td>\r\n                              <td>{data.paid_date && data.paid_date !== null ? reversefunction(data.paid_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                              <td>{data.paid_amount && data.paid_amount !== null ? data.paid_amount : ''}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n\r\n\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Total Amount Recieved</h6>\r\n                  <h5 className='fw-bold'>₹ {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport { Pharmacy_Dsr }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Patients\\UpdateAddress.jsx",["2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport { AddAddress } from './AddAddress'\r\n// import {useJsApiLoader, Autocomplete } from '@react-google-maps/api'\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/patient.css';\r\n\r\nconst UpdateAddress = (props) => {\r\n    const url = useContext(URL)\r\n    const [address, setaddress] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [placeid, setplaceid] = useState()\r\n    const [data, setData] = useState(\"\")\r\n    const [state, setstate] = useState()\r\n    const [country, setcountry] = useState()\r\n    const [index, setindex] = useState()\r\n\r\n    // useEffect(() => {``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\n\r\n    //     if (data !== undefined && data.value != undefined && data.value.place_id !== undefined) {\r\n    //         setpincode()\r\n    //         setplaceid()\r\n    //         // initialize the map\r\n    //         const map = new window.google.maps.Map({\r\n    //             zoom: 14\r\n    //         });\r\n    //         // initialize the PlacesService object with your API key and map\r\n    //         const placesService = new window.google.maps.places.PlacesService(map);\r\n\r\n    //         // send a getDetails request for the place using its Place ID\r\n    //         placesService.getDetails({\r\n    //             placeId: data.value.place_id\r\n    //         }, (placeResult, status) => {\r\n    //             if (status === 'OK') {\r\n    //                 // find the address component with type \"postal_code\"\r\n    //                 const postalCodeComponent = placeResult.address_components.find(component => {\r\n    //                     return component.types.includes('postal_code');\r\n    //                 });\r\n\r\n    //                 if (postalCodeComponent) {\r\n    //                     const postalCode = postalCodeComponent.short_name;\r\n    //                     setpincode(postalCode);\r\n    //                 } else {\r\n    //                     Notiflix.Notify.warning('Postal code not found for this place.');\r\n    //                 }\r\n    //             } else {\r\n    //                 Notiflix.Notify.failure(`Failed to get place details: ${status}`);\r\n    //             }\r\n    //         });\r\n    //     }\r\n\r\n    //     data === \"\" ? setData(\"\") : setData(data);\r\n    //     setplace(data && data.label != undefined ? data.label : '')\r\n    // }, [data]);\r\n    \r\n    useEffect(()=>{\r\n        setplace(data && data.label != undefined ? data.label : '')\r\n        setplaceid(data && data.value !=undefined && data.value.place_id !=undefined ?data.value.place_id:'ChIJo2X9SlLiDDkRnZp6DO-GNP0')\r\n        GetPostal_code()\r\n    },[data])\r\n\r\n    const GetPostal_code = async()=>{\r\n        if(placeid != undefined || placeid !=null){ \r\n            console.log('UpdateAddress')\r\n        await axios.get(`https://maps.googleapis.com/maps/api/place/details/json?key=AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE&place_id=${placeid}`).then((response)=>{\r\n                if(response){\r\n                    let data = response.data.result !=undefined ? response.data.result.address_components:[]\r\n                for(let i=0;i<data.length;i++){\r\n                        if(data[i].types.includes('postal_code')){\r\n                            setpincode(data[i].short_name?data[i].short_name:'')\r\n                        }\r\n                }\r\n            }\r\n\r\n        })\r\n        }\r\n       }\r\n       useEffect(()=>{\r\n        GetPostal_code()\r\n       },[placeid])\r\n       \r\n    const Add_Address = async () => {\r\n        await axios.post(`${url}/add/patient/address`, {\r\n            patient_id: props.patientid,\r\n            full_name: props.searchinput,\r\n            address_line_1: address,\r\n            address_line_2: '',\r\n            zip_code: pincode,\r\n            country: country,\r\n            state: state,\r\n            city: place,\r\n        }).then((response) => {\r\n            if (response.data.status == true) {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setpatientdata(response.data.data)\r\n                clear()\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        customconfirm();\r\n        Notiflix.Confirm.show(\r\n            `Add New Address`,\r\n            `Do you surely want to add a new address of ${props.searchinput}`,\r\n            \"Yes\",\r\n            \"No\",\r\n            () => {\r\n                Add_Address()\r\n            },\r\n            () => {\r\n                return 0;\r\n            },\r\n            {}\r\n        );\r\n    }\r\n\r\n    const clear = () => {\r\n        setcountry(props.data.country)\r\n        setstate(props.data.state)\r\n        setData()\r\n        setplaceid()\r\n        setplace()\r\n        setpincode()\r\n        setaddress()\r\n    }\r\n    const [addresspage, setaddresspage] = useState('none')\r\n    const Toggle_Address = () => {\r\n        if (addresspage == 'block') {\r\n            setaddresspage('none')\r\n            setindex()\r\n        }\r\n        if (addresspage == 'none') {\r\n            setaddresspage('block')\r\n        }\r\n    }\r\n    console.log(placeid)\r\n    return (\r\n        <div className=''>\r\n            <h5 className='fw-bold text-charcoal py-2 ms-3'>Update Address of {props.data.full_name}</h5>\r\n            <div className=\"btn-close position-absolute top-0 end-0 mt-2 me-2\" onClick={props.CloseUpdateAddress}></div>\r\n            <div className=\"container text-start p-0 m-0\">\r\n                {\r\n                    props.data.address.length ==0  ?(<p className='text-burntumber ms-3 fw-bold'> Please add an address to make changes</p>):(\r\n                        props.data.address.map((data, i) => (\r\n                            <div className=\"container-fluid position-relative\">\r\n                                <div className=\"row align-items-center\">\r\n                                    <div className=\"col-auto\">\r\n                                        <div className={`button p-0 m-0 bg-${index == i ?'lightyellow':''}`} onClick={() => { setindex(i); Toggle_Address() }}><img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} className='img-fluid' style={{width:'1.5rem'}} alt=\"\" /></div>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        <button className='button button-pearl d-block my-2 text-wrap'>\r\n                                            <div className=\"text-charcoal text-start\">{data.address_line1 ? data.address_line1 + ',' : ''}{' '}{data.address_line2 ? data.address_line2 + ',' : ''}{' '}{data.city ? data.city + ',' : ''}{' '}{data.state ? data.state + ',' : ''}{' '}{data.country ? data.country : ''}</div>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-2 text-end\">\r\n                                        <div className=\"button p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className='img-fluid' style={{width:'1.5rem'}} alt=\"\" /></div>\r\n                                    </div>\r\n                                </div>\r\n                                <section className={`d-${index == i ? addresspage : 'none'} position-absolute top-0 mx-auto start-0 end-0 bg-pearl shadow rounded-2 border border-1 col-10`} style={{ zIndex: '4' }}>\r\n                                    {\r\n                                        index == i ? (\r\n                                            <AddAddress data={data} setindex={setindex} Toggle_Address={Toggle_Address}  getAllPatients={props.getAllPatients}/>\r\n                                        ) : (<></>)\r\n                                    }\r\n                                </section>\r\n                            </div>\r\n                        ))\r\n                    )\r\n                    \r\n                }\r\n            </div >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { UpdateAddress }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\notiflix\\customconfirm.jsx",[],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddAppointment.jsx",["2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs, TodayDate } from '../../index'\r\nimport Notiflix from 'notiflix';\r\n\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst AddAppointment = (props) => {\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [date, setdate] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n    let adminid = localStorage.getItem('id')\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function setfromsearch() {\r\n        setpatientid(props.patientidfromsearch)\r\n        setsearchinput(props.patientnamefromsearch)\r\n    }\r\n    useEffect(() => {\r\n        setfromsearch()\r\n    }, [props.patientidfromsearch])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const searchpatient = (e) => {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n        if (searchinput && searchinput.length > 0) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    const get_value = async (value, name) => {\r\n        setsearchinput(value)\r\n        setpatientid(name)\r\n        setdisplaysearchlist('none');\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(e.target.value)\r\n    }\r\n\r\n    function GetTimeslotsBypropId() {\r\n        if (props.doctorid) {\r\n            setdoctorid(props.doctorid)\r\n            setdate()\r\n            let Timeslots = [];\r\n            setApikeyDocTimeslots([])\r\n            for (let i = 0; i < DocApi.length; i++) {\r\n                if (DocApi[i].id === Number(doctorid)) {\r\n                    Timeslots.push(DocApi[i].month_timeslots)\r\n                }\r\n            }\r\n            setApikeyDocTimeslots(Timeslots)\r\n            return Timeslots\r\n        }\r\n    }\r\n\r\n    function getTimefromByPropId(data) {\r\n        let timefrom = []\r\n        if (data && data.length != 0) {\r\n            setdate(props.todaydate)\r\n            for (let j = 0; j < data[0].length; j++) {\r\n                if (data[0][j].date === props.todaydate) {\r\n                    timefrom.push([data[0][j].id, data[0][j].time_from, data[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetTimeslotsBypropId()\r\n        getTimefromByPropId(GetTimeslotsBypropId())\r\n    }, [props.doctorid, doctorid, date])\r\n\r\n\r\n\r\n    function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        setdate()\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n    function getTimefrom(e) {\r\n        setdate(e.target.value)\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots && ApikeyDocTimeslots.length != 0) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n        } else {\r\n            Notiflix.Notify.info('Choose Doctor First')\r\n        }\r\n    }\r\n\r\n    function resetform(e) {\r\n        setsearchinput()\r\n        setpatientid()\r\n        setdoctorid()\r\n        setclinicid()\r\n        setischecked()\r\n        setdate()\r\n    }\r\n\r\n    function BookAppointment(e) {\r\n        if (patientid && doctorid && clinicID && time && adminid) {\r\n            setload(true)\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicID,\r\n                timeslot_id: time,\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                Notiflix.Notify.success(response.data.message);\r\n                resetform()\r\n                props.toggleappointmentform()\r\n                props.fetchapi()\r\n                getTimeslots()\r\n                getTimefrom()\r\n                setdate()\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Appointment`,\r\n            `Do you surely want to Add Appointment for ${searchinput}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                BookAppointment()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='fw-bold text-start'>\r\n            <h5 className=\"text-center fw-bold mt-2\">New Appointment</h5>\r\n            {\r\n                props.closeAddAppointmentform ? (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n                ) : (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.toggleappointmentform(); }} ></button>\r\n                )\r\n            }\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"col-auto position-relative\">\r\n                <label className=\"m-0 mb-2\">Search Using Phone or Name</label>\r\n                <input type=\"text\" className=\"form-control bg-seashell selectpatient col-10 position-relative fw-bold\" placeholder='Search Patient here' value={searchinput ? searchinput : ''} onChange={searchpatient} />\r\n                <div className={`col-11 position-absolute shadow-sm d-${displaysearchlist} searchinput`} style={{zIndex:'10'}}>\r\n                    {\r\n                        searchload ? (\r\n                            <p className=\"bg-seashell text-charcoal75 fw-bold bg-pearl rounded-2 py-2 p-0 m-0 ps-1\">Loading... </p>\r\n                        ) : (\r\n                            searchinput && searchlist.length == 0 ? (\r\n                                <p className=\"text-danger btn bg-lightred p-0 m-0\">Patient not found add as new user to book appointements</p>\r\n                            ) : (\r\n                                <div className=\"p-2 bg-pearl rounded-2\">\r\n                                    {\r\n                                        searchlist.map((data) => (\r\n                                            <div style={{ cursor: 'pointer' }} className='col-12 d-block p-0 m-0 ms-1 border-0 bg-pearl py-1 border-bottom text-charcoal text-start border border-1' onClick={(e) => get_value(data.full_name, data.id)}>{data.full_name} <span className='fw-bold text-burntumber'>{data.phone_number}</span> </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            )\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n                </div>\r\n                <hr />\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className={`radio me-1 form-check-input `} key={i} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor\" value={doctorid ? doctorid : ''} onChange={getTimeslots}>\r\n                                <option value=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    Doclist.map((data, i) => (\r\n                                        <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"\">Select Date</label>\r\n                        <div className=\"col-12\">\r\n                            <input type=\"date\" value={date ? date : ''} className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom && doctorid && date ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, i) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button button-${props.timeindex == i ? 'pearl' : timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1`} value={data[0]} key={i} onClick={(e) => { gettime_value(e); settimeindex(i); }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className='btn button-charcoal75 m-1' key={i} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1 img-fluid\" /> Time Slot\r\n                            </button>\r\n\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn button button-charcoal px-5\" onClick={confirmmessage}> Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"button button-pearl px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { AddAppointment }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddDoctorSlot.jsx",["2160","2161","2162","2163","2164","2165","2166"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs, Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2 fw-bold'>\r\n      <h5 className=\"text-center mt-2 fw-bold\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <label className='ps-1'>Doctor</label>\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>Dr. {data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className=\"radio form-check-input me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label >Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"button button-pearl px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Doctors\\UpdateDoctor.jsx",[],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\Payments.jsx",["2167","2168","2169","2170","2171","2172","2173","2174","2175","2176"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                \r\n                props.fetchallAppointmentslist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            pendings.push(props.appointmentdata.pending_payments[j])\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            if (props.appointmentdata.pending_payments[j].is_paid == 0) {\r\n                pendingid = props.appointmentdata.pending_payments[j].id\r\n            }\r\n\r\n        }\r\n\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.fetchallAppointmentslist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n \r\n    return (\r\n        <div className=' text-start p-0 m-0'>\r\n            <h5 className='text-start fw-bold'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.toggle_payments}></button>\r\n            <div className=\"d-flex justify-content-start p-0 m-0 gx-2 mt-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} rounded-1 me-1 border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0  d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h6 className='text-charcoal75 fw-bolder mt-2 mb-1'>Advance Payments from {props.patientname}</h6>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n\r\n                            <table className='bg-pearl table rounded-1'>\r\n                                <thead className=''>\r\n                                    <th className='ps-2'>Description</th>\r\n                                    <th className='ps-2'>Amount</th>\r\n                                </thead>\r\n                                <tbody className='align-middle'>\r\n                                    <tr >\r\n                                        <td></td>\r\n                                        <td>{advancepaid.advnace_total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n\r\n                            // <div className='row align-items-center p-0 m-0'>\r\n                            //     <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                            //     <input className=' col-6 p-0 m-0 form-control w-50  bg-seashell ' value={advancepaid.advnace_total} />\r\n                            //     <hr />\r\n                            // </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow fw-bolder rounded-1 p-2 m-1 mt-2 text-center'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <hr />\r\n                <h6 className='text-charcoal75 fw-bolder mb-2 mt-3'>Add Advance Payment</h6>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-3 ps-0\">\r\n                        <p className='text-charcoal p-0 m-0 fw-bold'>Description</p>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <p className='text-charcoal fw-bold mt-3'>Add Payment Method</p>\r\n                    </div>\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2 justify-content-around\">\r\n                            <div className=\"col-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-4 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 \">\r\n                                <button className='btn p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container text-center\">\r\n                    <button className='button  button-charcoal rounded-1 mt-3 mb-2' disabled={Description ? false : true} onClick={AddadvancePaymentMethods}>Save</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} `}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h6 className='fw-bolder text-charcoal75 mt-2'>Previous paid payments</h6>\r\n                                <div className='p-0 m-0 scroll scroll-y rounded-1'>\r\n                                    <table className=' p-0 m-0 border-0 bg-pearl p-2 '>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='p-0 m-0 px-1 border-bottom' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Cash</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Card</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Paytm</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Phonepe</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Razorpay</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Wire-Transfer</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={`d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='p-0 m-0 px-1'>{data.paid_amount}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} `}>\r\n                                            <div className=\"row p-0 m-0 align-items-center mt-2 justify-content-center\">\r\n                                                <div className=\"col-auto\">\r\n                                                    <span className='text-burntumber fw-bolder'>Pending Amount: {Data.pending_amount}</span>\r\n                                                </div>\r\n                                                <div className=\"col-auto\">\r\n                                                    <button className='btn p-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={``}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-start\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 ms-2 \">\r\n\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n                                <div className=\"container text-center\">\r\n                                    <button className='button button-charcoal mt-lg-4 mt-md-3 mt-1 mb-2' onClick={UpdatePendingPayments}>Save</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    ) : (\r\n\r\n                        props.paymentsi !== undefined ? (\r\n                            <div className='rounded-1 bg-lightgreen fw-bolder p-2 my-4 text-center'>Please generate the bill first</div>\r\n                        ) : (\r\n                            <div className='rounded-1 bg-lightgreen fw-bolder p-2 my-4 text-center'>No Pending Payments Found</div>\r\n                        )\r\n\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\SelectedTimeAppointment.jsx",["2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate, Clinic, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix'\r\n\r\nimport '../../css/dashboard.css'\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const Doclist = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n\r\n    // Functions\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time]\r\n        if (time.length > 1) {\r\n            time = time.slice(1)\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM '\r\n            time[0] = +time[0] % 12 || 12\r\n        }\r\n        return time.join('')\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block')\r\n        } else {\r\n            setdisplaysearchlist('none')\r\n        }\r\n    }\r\n    const get_value = (data) => {\r\n        setsearchinput(data.full_name)\r\n        setpatientid(data.id)\r\n        setdisplaysearchlist('none')\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && doctorid && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n          \r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            }).catch((e)=>{\r\n                setload(false)\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n            setload(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment  at <span className=' text-charcoal fw-bold border-0 fs-6'>{tConvert(props.selectedtime)}</span></h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute top-0 mt-2\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <hr className='p-0 m-0 mb-1' />\r\n            <div className=\" text-start p-0 m-0 ms-3 clinics align-items-end mb-2 fw-bold text-burntumber \">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}>\r\n                            <img src={process.env.PUBLIC_URL + '/images/location.png'} className=' align-self-center '/> {data.title} {data.address}</label>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control bg-pearl border-0\" value={searchinput ? searchinput : ''} onChange={(e) => { searchpatient(e) }} />\r\n                    <div className={`col-6 position-absolute d-${displaysearchlist} bg-pearl rounded-2 shadow mt-1 pb-2 `} style={{ zIndex: 3 }}>\r\n                        {\r\n                            searchload ? (\r\n                                <div className=\" col-12 text-charcoal75 p-0 m-0 py-2 fw-bold text-start ps-2 mt-1\">Loading... </div>\r\n                            ) : (\r\n                                searchlist !== undefined && searchlist.length == 0 ? (\r\n                                    <div className=\"text-burntumber col-12 p-0 m-0 fw-bold mt-1 ps-2 pt-1\">Patient not found</div>\r\n                                ) : (\r\n                                    <div className='mt-1 searchresult bg-pearl  col-12  ' >\r\n                                        {\r\n                                            searchlist.map((data, i) => (\r\n                                                <div style={{ cursor: 'pointer' }} className={`col-12 d-block p-2 fw-bold text-charcoal text-start border-bottom align-self-center`} name={data.id} value={data.full_name} onClick={() => { get_value(data) }}>{data.full_name} <span className='fw-bold text-burntumber'>{data.phone_number}</span></div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"d-flex p-0 m-0 text-start justify-content-around\">\r\n                        <div className='button button-charcoal50-outline align-self-center '> Dr.{doctorname}</div>\r\n                        <div className=\"button button-charcoal50-outline ms-3\" >{reversefunction(APIDate)}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                load ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"col-6 donebutton py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"button button-charcoal\" onClick={BookAppointment}> Done </button>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AmountPaid.jsx",["2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198"],[],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/bootstrap.css'\r\nimport { UpadteStatus } from './fetch_apis'\r\nimport { Payments } from './Payments'\r\nconst AmountPaid = (props) => {\r\n  const adminid = localStorage.getItem('id')\r\n  const [openpayments, setopenpayments] = useState('none')\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n  const [paidpendingtotal, setpaidpending] = useState(0)\r\n  \r\n  const calculate = () => {\r\n    var data = props.appointmentData;\r\n    if (data.payment_method != null) {\r\n      var payment = Object.values(JSON.parse(data.payment_method_details))\r\n      var val = 0;\r\n      for (let i = 0; i < payment.length; i++) {\r\n        var element = parseFloat(payment[i]);\r\n        val += element\r\n        setTotalAmount(val)\r\n      }\r\n    }\r\n  }\r\n\r\n  const CalculatePaidPendings = () => {\r\n    let totalpaidpendings = []\r\n    let pendingtotal = 0\r\n    if (props.appointmentData.pending_payments && props.appointmentData.pending_payments != null) {\r\n      for (let i = 0; i < props.appointmentData.pending_payments.length; i++) {\r\n        if (props.appointmentData.pending_payments[i].is_paid == 1) {\r\n          totalpaidpendings.push(props.appointmentData.pending_payments[i].paid_amount !== null ? props.appointmentData.pending_payments[i].paid_amount : 0)\r\n        }\r\n      }\r\n    }\r\n\r\n    totalpaidpendings.forEach(item => {\r\n      pendingtotal += Number(item)\r\n    })\r\n    setpaidpending(pendingtotal)\r\n  }\r\n\r\n  const Change_status = async ()=>{\r\n    if(totalAmount != null && totalAmount !=undefined){\r\n      if(totalAmount + paidpendingtotal == props.appointmentData.total_amount && props.appointmentData.appointment_status < 7){\r\n         await UpadteStatus(props.appointmentData.id,8,adminid)\r\n        //  if (props.Appointmentlist && typeof props.Appointmentlist === 'function') {\r\n          props.Appointmentlist()\r\n        // }\r\n        \r\n      }\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    Change_status()\r\n  },[totalAmount + paidpendingtotal == props.appointmentData.total_amount])\r\n  useEffect(() => {\r\n    calculate()\r\n    CalculatePaidPendings()\r\n  }, [])\r\n  \r\n  return (\r\n    totalAmount != null ? (\r\n      totalAmount + paidpendingtotal == props.appointmentData.total_amount ? (\r\n        <div className='text-white bg-lightgreen d-inline-block px-2 fw-normal rounded-2' style={{ letterSpacing: '1px' }}>Paid ₹{Number(totalAmount) + Number(paidpendingtotal)}</div>\r\n        // <div className=\"ms-1 btn button-sm rounded-1 button-lightgreen fw-bold\" style={{ fontSize: '0.75rem', letterSpacing: '0.5px', padding: '0.12rem' }}>{Number(totalAmount) + Number(paidpendingtotal)} Done</div>\r\n      ) : (\r\n        <div className=\"text-burntumber bg-seashell fw-bold d-inline-block px-2 fw-normal rounded-2\" style={{ letterSpacing: '1px' }}>Pending ₹{(Number(props.appointmentData.total_amount) - (Number(totalAmount) + Number(paidpendingtotal))).toFixed(1)} </div>\r\n\r\n      )\r\n\r\n    ) : (\r\n      <button className=\"btn button-seashell p-0 m-0\" type=\"button\" disabled>\r\n        <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      </button>\r\n    )\r\n\r\n  )\r\n}\r\n\r\nexport default AmountPaid","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\UpdateAppointment.jsx",["2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209","2210","2211","2212","2213","2214","2215","2216","2217"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const confirmmessageforCancel = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Cancel Appointment`,\r\n            `Do you surely want to Cancel ${props.patientname}'s Appointment`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                CancelAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const CancelAppointment = async () => {\r\n        try {\r\n            await axios.post('http://aartas-qaapp-as.azurewebsites.net/aartas_redev/public/api/cancel/appointment', {\r\n                appointment_id: props.appointmentid\r\n            }).then((response) => {\r\n                \r\n                if (response.status == true) {\r\n                    props.fetchallAppointmentslist()\r\n                    props.fetchapi()\r\n                } else {\r\n                    Notiflix.Notify.failure(\"Cannot Cancel Appointment.Please try again.\")\r\n                }\r\n\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center p-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell border-0 p-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-end text-charcoal `}>\r\n                                <div className=\"row p-0 m-0 align-items-end\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img className='img-fluid' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold text-wrap mb-2\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal rounded-1 bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>Dr. {data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\" border-0 col-12 bg-seashell \"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell rounded-1 border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal50 fw-bold'>Selected Time</label>\r\n                        <div className=\"col-12 p-0 m-0 selectedtime\">\r\n                            <button className='button button-charcoal50-outline rounded-1 fw-bold shadow-none' style={{ letterSpacing: '1px' }} >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <p className=\"m-0 mt-2 fw-bold ps-2 pt-2\" style={{ letterSpacing: '1px' }}>Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ps-2\">\r\n                    {ApiDocTimefrom && ApiDocTimefrom.length !== 0 ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} px-3 py-2 rounded-1 fw-bold m-1`} style={{ letterSpacing: '1px' }} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline rounded-1 px-3 py-2 m-1 fw-bold\" style={{ letterSpacing: '1px' }} id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded fw-bold text-burntumber bg-lightred'>No Time Slots Available</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button className='btn button-charcoal' onClick={confirmmessage}>Update</button>\r\n                                </div>\r\n\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button type=\"button\" className=\"button button-pearl\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} >Cancel</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\SelectedDoctorSlot.jsx",["2218","2219","2220","2221","2222","2223","2224","2225","2226"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState()\r\n    const [docdate, setdocdate] = useState()\r\n    const [fromtime, setfromtime] = useState()\r\n    const [totime, settotime] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n        if (doctorid && APIDate && fromtime && totime && clinicid && admin_id) {\r\n            Notiflix.Loading.pulse({\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E'\r\n            })\r\n            await axios.post(`${url}/doctor/add/timeslots`, {\r\n                doctor_id: doctorid,\r\n                date: APIDate,\r\n                time_from: fromtime,\r\n                time_to: totime,\r\n                clinic_id: clinicid,\r\n                admin_id: admin_id\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                props.CloseAddQuickSlots()\r\n                props.fetchapi()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Doctor Slot`,\r\n            `Do you surely want to add more Time Slots of Dr. ${doctorname}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        )\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center pt-1\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 text-center clinics\">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'} img-fluid`}><img src={process.env.PUBLIC_URL + '/images/location.png'} />{data.title} {data.address}</label>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row mt-2 justify-content-center gx-2\">\r\n                <div className=\"col-auto\">\r\n                    <button className='button button-charcoal50-outline'>{doctorname}</button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div type=\"date\" disabled className=\"form-control col-10 button button-charcoal50-outline\" >{reversefunction(APIDate)}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 mt-2 justify-content-center\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                </div>\r\n                <div className='col-auto'>-</div>\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Vitals.jsx",["2227","2228","2229","2230","2231","2232","2233","2234","2235","2236","2237","2238","2239","2240","2241"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          UpadteStatus()\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  async function UpadteStatus() {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: props.appointmentid,\r\n          status: 6,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          props.Appointmentlist()\r\n          Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n\r\n  }\r\n  return (\r\n    <div className='container-fluid col-lg-10 col-md-11 px-0 col-sm-12 col-12 col-xl-10 bg-seashell rounded-2 position-relative pb-4 pt-0'>\r\n      <div className=\"shadow-sm pt-2 pb-2\">\r\n      <h5 className='text-center p-0 m-0 fw-bold'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2 pt-3' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 mt-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} className='img-fluid' style={{ width: '1.2rem' }} /></button>\r\n      </div>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '>\r\n                <h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid mt-2\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row justify-content-end align-items-center\">\r\n              <div className=\"col-3\">\r\n                <select className='form-control p-0 border-0 text-center bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0 \">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center p-0 m-0'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center p-0 m-0'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-auto me-5\">\r\n              <button className='btn p-0 m-0 ' style={{opacity:'0'}}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }}/></button>\r\n\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <div className=\"container text-center mt-3\">\r\n        <button className='button button-charcoal mx-auto' onClick={props.CloseVitals}>Done</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Payments.jsx",["2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255","2256"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(props.paymentsi == undefined ? 0 : 1)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.get(`${url}/get/balance/list?patient_id=${props.patientid?props.patientid:\"\"}`).then((response) => {\r\n            setadvancepaid(response.data.data['Advanve Balance'])\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                \r\n                props.Appointmentlist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                    pendings.push(props.appointmentdata[i].pending_payments[j])\r\n                }\r\n            }\r\n\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                if (props.appointmentid == props.appointmentdata[i].id) {\r\n                    if (props.appointmentdata[i].pending_payments[j].is_paid == 0) {\r\n                        pendingid = props.appointmentdata[i].pending_payments[j].id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n                props.ClosePaymentsForm()\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className='container-fluid p-0 m-0'>\r\n            <div className=\"shadow-sm pt-2 pb-1\">\r\n            <h5 className='text-center fw-bold'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.ClosePaymentsForm}></button>\r\n            </div>\r\n            <div className=\"d-flex justify-content-start p-0 m-0 gx-2 mt-3 ms-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} rounded-1 me-1 border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className={`container-fluid  p-0 m-0 ps-3 mt-4  d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h6 className='text-charcoal75 fw-bolder mt-2 mb-2'>Advance Payments from {props.patientname}</h6>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"scroll scroll-y\" style={{maxHeight:'25vh'}}>\r\n                            {\r\n                        advancepaid!==undefined && advancepaid ? (\r\n                            \r\n                            <table className='border table rounded-1'>\r\n                                <thead className='bg-seashell position-sticky top-0'>\r\n                                    <th className='ps-2 text-charcoal75'>Description</th>\r\n                                    <th className='ps-2 text-charcoal75'>date recieved</th>\r\n                                    <th className='ps-2 text-charcoal75'>Amount recieved</th>\r\n                                </thead>\r\n                                <tbody className='align-middle'>\r\n                                    {\r\n                                       advancepaid&& advancepaid.map((data)=>(\r\n                                            <tr>\r\n                                            <td className='text-charcoal fw-bold'>{data.description}</td>\r\n                                            <td className='text-charcoal fw-bold'>{reversefunction(data.date)}</td>\r\n                                            <td className='text-charcoal fw-bold'>₹{data.credit_amount}</td>\r\n                                        </tr>\r\n                                        ))\r\n                                    }\r\n                                    <tr className='bg-pearl position-sticky bottom-0'>\r\n                                        <td className='fw-bold'>Total amount</td>\r\n                                        <td></td>\r\n                                        <td className='fw-bold text-success'>₹{advancepaid !=undefined && advancepaid[0] !=undefined ?advancepaid[0].balance:''}</td>\r\n                                    \r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n\r\n                            // <div className='row align-items-center p-0 m-0'>\r\n                            //     <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                            //     <input className=' col-6 p-0 m-0 form-control w-50  bg-seashell ' value={advancepaid.advnace_total} />\r\n                            //     <hr />\r\n                            // </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow fw-bolder rounded-1 p-2 m-1 mt-2 text-center'>No Advance Payments Found</div>\r\n                        )\r\n}\r\n                        </div>\r\n                    )\r\n                }\r\n                <h6 className='text-charcoal75 fw-bolder mb-2 mt-3'>Add Advance Payment</h6>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-3 ps-0\">\r\n                        <p className='text-charcoal p-0 m-0 fw-bold'>Description</p>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <p className='text-charcoal fw-bold mt-3'>Add Payment Method</p>\r\n                    </div>\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' /></button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2 justify-content-around\">\r\n                            <div className=\"col-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire-Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-4 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 \">\r\n                                <button className='btn p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container text-center\">\r\n                    <button className='button  button-charcoal rounded-1 mt-3 mb-2' disabled={Description ? false : true} onClick={AddadvancePaymentMethods}>Save</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 ps-3 d-${blocksindex === 1 ? 'block' : 'none'} `}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h6 className='fw-bolder text-charcoal75 mt-2'>Previous paid payments</h6>\r\n                                <div className='container-fluid overflow-scroll p-0 m-0 rounded-1'>\r\n                                    <table className='table p-0 m-0 border-0 bg-pearl p-2'>\r\n                                        <thead className='p-0 m-0 border-0'>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1 border-0' rowspan='2'>Amount Paid</th>\r\n                                                <th className='p-0 m-0 px-1 border-0' rowspan='2'>Pending Date</th>\r\n                                                <th className='p-0 m-0 px-1 border-0' rowspan='2'>Paid Date</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 border-bottom' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Cash</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Card</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Paytm</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Phonepe</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Razorpay</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Wire-Transfer</th>\r\n                                                <th className='p-0 m-0 px-1 border-0 bg-pearl' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={`d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.paid_amount}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1 border-0'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} `}>\r\n                                            <div className=\"row p-0 m-0 align-items-center mt-2 justify-content-center\">\r\n                                                <div className=\"col-auto\">\r\n                                                    <span className='text-burntumber fw-bolder'>Pending Amount: {Data.pending_amount}</span>\r\n                                                </div>\r\n                                                <div className=\"col-auto\">\r\n                                                    <button className='btn p-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' /></button>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={``}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-start\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 ms-2 \">\r\n\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n                                <div className=\"container text-center\">\r\n                                    <button className='button button-charcoal mt-lg-4 mt-md-3 mt-1 mb-2' onClick={UpdatePendingPayments}>Save</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    ) : (\r\n\r\n                        props.paymentsi !== undefined ? (\r\n                            <div className='rounded-1 bg-lightgreen text-white fw-bolder p-2 my-4'>Please see or update the bill first</div>\r\n                        ) : (\r\n                            <div className='rounded-1 bg-lightgreen text-white fw-bolder p-2 my-4'>No Pending Payments Found</div>\r\n                        )\r\n\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\AddConsumables.jsx",["2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309"],[],"import { URL, TodayDate, DoctorsList, Clinic, Permissions } from '../../index';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport React, { useState, useRef, useContext, useEffect, useMemo, useDeferredValue } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport axios from 'axios'\r\n\r\n\r\nconst AddConsumables = (props) => {\r\n    const tableref = useRef(null)\r\n    const cliniclist = useContext(Clinic)\r\n    const url = useContext(URL)\r\n    const Doclist = useContext(DoctorsList)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const medicinesref = useRef(null)\r\n    const medbyidref = useRef(null);\r\n    const patientaddref = useRef(null)\r\n    const stockref = useRef(null)\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [doctorname, setdoctorname] = useState()\r\n    const [otherdoctor, setotherdoctor] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [ischecked, setischecked] = useState()\r\n    const [Dc, setDc] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [products, setproducts] = useState([])\r\n    const [itemsearch, setitemsearch] = useState([])\r\n    const [itembyid, setitembyid] = useState([])\r\n    const [loadbyId, setloadbyId] = useState()\r\n    const [itemname, setitemname] = useState()\r\n    const [itemid, setitemid] = useState()\r\n    const [SelectedProducts, setSelectedProducts] = useState([])\r\n    const [Grandtotal, setGrandtotal] = useState()\r\n    const [Grandtotal2, setGrandtotal2] = useState()\r\n    const [loadsearch, setloadsearch] = useState()\r\n    const [ce, setce] = useState('none')\r\n    const [nursenotes, setnursenotes] = useState(props.appointmentdata.nursing_notes ? props.appointmentdata.nursing_notes : '')\r\n    const [deleteload, setdeleteload] = useState(false)\r\n    const [loadnotes, setloadnotes] = useState(false)\r\n    const [i, seti] = useState()\r\n    const deferredsearch = useDeferredValue(itemname)\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n  \r\n    let obj={\r\n         display_name:'',\r\n         CGST:'',\r\n         CGST_rate:'',\r\n         IGST:'',\r\n         IGST_rate:'',\r\n         SGST:'',\r\n         SGST_rate:'',\r\n         batch_no:'',\r\n         channel:'',\r\n         cost:'',\r\n         current_stock:'',\r\n         discount:\"\",\r\n         expiry_date : \"\",\r\n         free_qty:'',\r\n         id:'',\r\n         is_consumable:'',\r\n         medicine_id:'',\r\n         mfd_date:'',\r\n         mrp:'',\r\n         qty:'',\r\n         rate:'',\r\n         total_amount:''\r\n\r\n    }\r\n\r\n\r\n    const searchmeds = async (search) => {\r\n    return new Promise(async(resolve,reject)=>{\r\n        try {\r\n            setitemid()\r\n            setproducts()\r\n            let medicines = []\r\n            setloadsearch(true)\r\n            await axios.get(`${url}/stock/list?search=${search}&location_id=${clinicID}`).then((response) => {\r\n                medicines = response.data.data.medicines ? response.data.data.medicines : []\r\n\r\n                if (itemname != undefined && itemname.length > 0) {\r\n                    medicinesref.current.style.display = 'block';\r\n                } else {\r\n                    medicinesref.current.style.display = 'none';\r\n                }\r\n            //  filter(medicines) \r\n            resolve(medicines)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message)\r\n            reject(e)\r\n        } finally{\r\n            setloadsearch(false)\r\n        }\r\n    })\r\n}\r\n    async function filter(medicines){\r\n        return new Promise((resolve, reject) => {\r\n            let arr = []\r\n            try{\r\n                for(let i=0;i<medicines.length;i++){\r\n                    for(let j=0;j<medicines[i].stock_info.length;j++){\r\n                        if(medicines[i].stock_info[j].is_consumable == 1){\r\n                            obj={\r\n                                display_name:medicines[i].display_name,\r\n                                CGST:medicines[i].stock_info[j].CGST,\r\n                                CGST_rate:medicines[i].stock_info[j].CGST_rate,\r\n                                IGST:medicines[i].stock_info[j].IGST,\r\n                                IGST_rate:medicines[i].stock_info[j].IGST_rate,\r\n                                SGST:medicines[i].stock_info[j].SGST,\r\n                                SGST_rate:medicines[i].stock_info[j].SGST_rate,\r\n                                batch_no:medicines[i].stock_info[j].batch_no,\r\n                                channel:medicines[i].stock_info[j].channel,\r\n                                cost:medicines[i].stock_info[j].cost,\r\n                                current_stock:medicines[i].stock_info[j].current_stock,\r\n                                discount:medicines[i].stock_info[j].discount,\r\n                                expiry_date : medicines[i].stock_info[j].expiry_date,\r\n                                free_qty:medicines[i].stock_info[j].free_qty,\r\n                                id:medicines[i].stock_info[j].id,\r\n                                is_consumable:medicines[i].stock_info[j].is_consumable,\r\n                                medicine_id:medicines[i].id,\r\n                                mfd_date:medicines[i].stock_info[j].mfd_date,\r\n                                mrp:medicines[i].stock_info[j].mrp,\r\n                                qty:medicines[i].stock_info[j].qty,\r\n                                rate:medicines[i].stock_info[j].rate,\r\n                                total_amount:medicines[i].stock_info[j].total_amount\r\n                           }\r\n                            arr.push(obj)\r\n                        }\r\n                    }\r\n                }\r\n                resolve(arr)\r\n            }catch(e){\r\n                Notiflix.Notify.failure(e.message)\r\n                reject(e)\r\n            }finally{\r\n                setitemsearch(arr)\r\n        \r\n            }\r\n        })\r\n    }\r\n    async function main() {\r\n        try {\r\n          const data = await searchmeds(deferredsearch);\r\n            filter(data).then((manipulatedData)=>{\r\n                setitemsearch(manipulatedData);\r\n            }) \r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n      }\r\n      useEffect(()=>{\r\n        main()\r\n      },[deferredsearch])\r\n      \r\n    const searchmedbyId = async (search) => {\r\n        if (search.length > 0) {\r\n            setloadbyId(true)\r\n            try {\r\n                await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n                    setloadbyId(false)\r\n                    setitembyid([response.data.data])\r\n                })\r\n            } catch (e) {\r\n                setloadbyId(false)\r\n                Notiflix.Notify.failure(e.message)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Doclist.map((data) => (\r\n            data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n        ))\r\n    }, [doctorid])\r\n\r\n    function CalSellingCost(mrp, disc) {\r\n        let cost = mrp\r\n        if (!disc) {\r\n            cost = Number(mrp)\r\n            return cost\r\n        } else {\r\n            cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n    }\r\n    function CalTotalAmount(qty, cst, realcst) {\r\n        let cost = cst\r\n        if (Number(realcst) > Number(cost)) {\r\n            Notiflix.Notify.failure('Selling Cost should not less than Cost')\r\n        }\r\n        if (!qty) {\r\n            return 0\r\n        } else if (qty == 1) {\r\n            cst = Number(cst)\r\n            return cst\r\n        } else {\r\n            cost = Number(cst) * Number(qty)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n\r\n    }\r\n    function CalGrandttl() {\r\n        let ttl = 0\r\n        SelectedProducts.map((data) => (\r\n            ttl += Number(data.totalamt)\r\n        ))\r\n        setGrandtotal(ttl.toFixed(2))\r\n    }\r\n    function CalGrandttl2() {\r\n        let ttl = 0\r\n        props.existedconsumables.map((data) => (\r\n            ttl += Number(data.total_amount)\r\n        ))\r\n        setGrandtotal2(ttl.toFixed(2))\r\n    }\r\n    function CaltotalDiscount(data) {\r\n        let total = 0\r\n        if (data) {\r\n            data.forEach(item => {\r\n                total += Number(item.discount)\r\n            })\r\n            return total\r\n        } else {\r\n            return total\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        CalGrandttl()\r\n    }, [SelectedProducts])\r\n    useEffect(() => {\r\n        CalGrandttl2()\r\n    }, [props.existedconsumables])\r\n\r\n\r\n    function AddProducts(data) {\r\n        let ProductDetails = {\r\n            productid: data.id,\r\n            type: 'm',\r\n            product: data.display_name ? data.display_name : '',\r\n            batch: data.batch_no,\r\n            expiry: data.expiry_date,\r\n            quantity: data.current_stock,\r\n            qtytoSale: 1,\r\n            discount: 0,\r\n            cost: data.cost,\r\n            mainmrp: data.mrp,\r\n            disccost: data.mrp,\r\n            gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n            totalamt: data.mrp\r\n\r\n        }\r\n\r\n        if (SelectedProducts && SelectedProducts.length == 0) {\r\n            setSelectedProducts([ProductDetails])\r\n        } else {\r\n            setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n        }\r\n\r\n    }\r\n    async function DeleteProduct(Batch) {\r\n        let obj = []\r\n        obj.push(SelectedProducts.filter(function (e) {\r\n            return e.batch !== Batch\r\n        }))\r\n        obj = obj.flat()\r\n        setSelectedProducts(obj)\r\n    }\r\n    async function SubmitConsumabaleEntry() {\r\n        let productids = [];\r\n        let proquantity = [];\r\n        let Discount = [];\r\n        let discountonmrp = [];\r\n        let mrp = [];\r\n        let GST = [];\r\n        let Totalamount = []\r\n\r\n        for (let i = 0; i < SelectedProducts.length; i++) {\r\n            productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n            proquantity.push(SelectedProducts[i].qtytoSale)\r\n            Discount.push(SelectedProducts[i].discount)\r\n            discountonmrp.push(SelectedProducts[i].disccost)\r\n            mrp.push(SelectedProducts[i].mainmrp)\r\n            GST.push(SelectedProducts[i].gst)\r\n            Totalamount.push(SelectedProducts[i].totalamt)\r\n        }\r\n        let Data = {\r\n            pro_id: productids,\r\n            qty: proquantity,\r\n            discount: Discount,\r\n            disc_mrp: discountonmrp,\r\n            main_mrp: mrp,\r\n            gst: GST,\r\n            total_amount: Totalamount,\r\n            appointment_id: props.appointmentid,\r\n        }\r\n        setload(true)\r\n        try {\r\n            await axios.post(`${url}/save/consumable`, Data).then((response) => {\r\n                setload(false)\r\n                if (response.data.status == true) {\r\n                    NurseNotes()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    props.Appointmentlist()\r\n                    setSelectedProducts([])\r\n                } else {\r\n                    Notiflix.Notify.warning(response.data.message)\r\n                }\r\n            }).catch(function error(e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            setload(false)\r\n        }\r\n    }\r\n    function confirmmessage() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                SubmitConsumabaleEntry()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    function confirmmessage2() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to save the following Note`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NurseNotes()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const toggle_consumables_existed = () => {\r\n        if (ce === 'none') {\r\n            setce('block')\r\n        }\r\n        if (ce === 'block') {\r\n        }\r\n    }\r\n    const NurseNotes = async () => {\r\n        try {\r\n            setloadnotes(true)\r\n            await axios.post(`${url}/save/nursing/notes`, {\r\n                appointment_id: props.appointmentid,\r\n                notes: nursenotes\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n                setloadnotes(false)\r\n            })\r\n        } catch (e) {\r\n            setloadnotes(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const RemoveConsumable = async (ID) => {\r\n        setdeleteload(true)\r\n        try {\r\n            await axios.post(`${url}/remove/consumable`, {\r\n                id: ID\r\n            }).then((response) => {\r\n                setdeleteload(false)\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } catch (e) {\r\n            setdeleteload(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid bg-seashell rounded-2 px-0 position-relative mx-auto col-lg-11 col-md-11 col-sm-11 col-11 col-xl-9\" style-={{ height: '70vh' }}>\r\n            <div className='position-relative mb-3 text-center shadow-sm'>\r\n                <h5 className='text-start text-charcoal text-center fw-bold py-2 '>{props.patientname} Consumables</h5>\r\n                <button className='btn btn-close position-absolute p-1 m-0 end-0 top-0 me-2 pt-4' disabled={load ? true : false} onClick={props.toggleConsumables}></button>\r\n            </div>\r\n\r\n            <div className={`container-fluid text-start p-0 m-0 mt-3`}>\r\n                <div className=\"col-12 justify-content-center\">\r\n                    <div className=\"row p-0 m-0 my-2 justify-content-start\">\r\n                        <div className=\"col-4 position-relative\">\r\n                            <input className='form-control bg-seashell fw-bold p-2 border-charcoal' placeholder='Search by Name'\r\n                                value={itemname ? itemname : ''}\r\n                                onChange={(e)=>{\r\n                                    setitemname(e.target.value)\r\n                                }}\r\n                                 />\r\n                            <div className=\"position-absolute mt-1 bg-raffia\">\r\n                                <div className=\"position-relative \" style={{ width: '30vh' }}>\r\n                                    <div ref={medicinesref} className='position-absolute scroll scroll-y rounded-1 ' style={{ Width: 'max-content', zIndex: '1', maxHeight: '40vh' }} >\r\n                                        {\r\n                                            itemsearch ? (\r\n                                                loadsearch ? (\r\n                                                    <div className='rounded-1 p-1 bg-pearl'>\r\n                                                        Searching Please wait....\r\n                                                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                            <span className=\"sr-only\"> </span> </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    loadsearch == false && itemsearch.length == 0 ? (\r\n                                                        <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                                    ) : (\r\n                                                        <div className={`rounded-1 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                                                            <p className={`text-start m-1 fw-bold text-charcoal75 ms-1`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                                                            {\r\n                                                                itemsearch.map((data, i) => (\r\n            <div style={{ cursor: 'pointer', Width: '10rem' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-1 py-3 fw-bold border-bottom text-charcoal `} \r\n            onClick={(e) => { setproducts(data); AddProducts(data); setitemname(); setitemid();medicinesref.current.style.display='none'}}>\r\n                    {data.display_name ? data.display_name : data.display_name} | <span className='text-burntumber mx-2'>{data.batch_no?data.batch_no:''}</span>|<span className='ms-2'>{data.current_stock?data.current_stock+' stocks avaliable':''}</span></div>\r\n                                                                ))\r\n                                                            }\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                            ) : (<div className='bg-seashell'></div>)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-auto text-burntumber text-center fw-bold align-self-center'> OR </div>\r\n                        <div className=\"col-4 \">\r\n                        <input className='form-control bg-seashell border border-1 rounded-2 text-charcoal p-2 fw-bold border-charcoal' value={itemid ? itemid : ''} placeholder='Search by ID' \r\n                        onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = 'block' }} />\r\n                            <div ref={medbyidref} className='position-absolute rounded-1 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                                {\r\n                                    itembyid ? (\r\n                                        loadbyId ? (\r\n                                            <div className='rounded-1 p-1 bg-pearl'>\r\n                                                Searching Please wait....\r\n                                                <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                    <span className=\"sr-only\"> </span> </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            loadbyId == false && itembyid.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                            ) : (\r\n                                                itembyid.map((data, i) => (\r\n                                                    <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 p-1 rounded-pill shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'}`}\r\n                                                        onClick={(e) => {\r\n                                                            setitemid(data.type + data.id);\r\n                                                            AddProducts(data)\r\n                                                            medbyidref.current.style.display = 'none';\r\n                                                        }}>{data.item_name ? data.item_name : ''}</div>\r\n                                                ))\r\n                                            )\r\n                                        )\r\n                                    ) : (<div className='bg-seashell'></div>)\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 m-0 p-0\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    </div>\r\n                    <div className='scroll scroll-y' style={{ height: '40vh' }}>\r\n                        <table className='table'>\r\n                            <thead className=' bg-seashell position-sticky top-0'>\r\n                                <tr className={``}>\r\n                                    <th className=''>Item ID</th>\r\n                                    <th className=''>Item Name</th>\r\n                                    <th className=''>BatchNo.</th>\r\n                                    <th className=''>Expiry Date</th>\r\n                                    <th className=''>Avl.Stock</th>\r\n                                    <th className=''>Qty To Sale</th>\r\n                                    <th className=''>Discount %</th>\r\n                                    <th className=''>MRP</th>\r\n                                    <th className=''>Cost</th>\r\n                                    <th className=''>GST Rate</th>\r\n                                    <th className=''>Selling Cost/Unit</th>\r\n                                    <th className=''>Total Amount</th>\r\n                                    <th className=''>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {\r\n                                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                                    <tbody className='p-0 m-0 bg-pearl'>\r\n                                        {\r\n                                            SelectedProducts.map((data) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>{data.type}{data.productid}</td>\r\n                                                    <td>{data.product}</td>\r\n                                                    <td>{data.batch}</td>\r\n                                                    <td>{reversefunction(data.expiry)}</td>\r\n                                                    <td>{data.quantity}</td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                                                            onChange={(e) => {\r\n                                                                e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost);\r\n                                                                setSelectedProducts(prevState => [...prevState])\r\n                                                            }} /> </td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.discount ? data.discount : ''}\r\n                                                            onChange={(e) => {\r\n                                                                data.discount = e.target.value;\r\n                                                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost))\r\n                                                                setSelectedProducts(prevState => [...prevState]);\r\n                                                            }} /> </td>\r\n                                                    <td>₹{data.mainmrp}</td>\r\n                                                    <td>₹{data.cost}</td>\r\n                                                    <td>{data.gst + '%'}</td>\r\n                                                    <td>₹{data.disccost}</td>\r\n                                                    <td>₹{data.totalamt}</td>\r\n                                                    <td><img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { DeleteProduct(data.batch) }} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                ) : (\r\n                                    props.existedconsumables && props.existedconsumables.length == 0?(\r\n                                        <tbody className='p-0 m-0 bg-seashell'>\r\n                                        <tr className='p-0 m-0 text-center'>\r\n                                            <td className='position-absolute text-charcoal75 fw-bold start-0 end-0'>No Consumabels Added</td>\r\n                                        </tr>\r\n\r\n\r\n                                    </tbody>\r\n                                    ):(<></>)\r\n\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                props.existedconsumables && props.existedconsumables.length == 0 ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <tbody className='position-relative bg-seashell'>\r\n                                        {\r\n                                            props.existedconsumables.map((data, key) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>m{data.medicies_stocks_id}</td>\r\n                                                    <td>{data.medicine.display_name}</td>\r\n                                                    <td>{data.medicine_stocks.batch_no}</td>\r\n                                                    <td>{reversefunction(data.medicine_stocks.expiry_date)}</td>\r\n                                                    <td></td>\r\n                                                    <td>{data.qty}</td>\r\n                                                    <td className='text-start p-0 m-0 ps-4'>{data.discount} </td>\r\n                                                    <td>₹{data.main_mrp}</td>\r\n                                                    <td>₹{data.medicine_stocks.cost}</td>\r\n                                                    <td>{Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate) + \"%\"}</td>\r\n                                                    <td>₹{data.disc_mrp}</td>\r\n                                                    <td>₹{data.total_amount}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            deleteload && i == key ? (\r\n                                                                <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                                            ) : (\r\n                                                                <img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { seti(key); RemoveConsumable(data.id) }} />\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{ height: '30vh', paddingBottom: '10vh' }}>\r\n                    <h6 className='fw-bold p-0 m-0 ps-0 ms-0 my-2'>Nurse notes</h6>\r\n                    {\r\n                        loadnotes ? (\r\n                            <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <textarea className='col-12 form-control w-100' value={nursenotes ? nursenotes : ''} onChange={(e) => setnursenotes(e.target.value)} style={{ width: '95vh', height: '10vh' }}></textarea>\r\n\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-start bg-pearl align-items-center rounded-bottom'>\r\n                <div className=\"row p-0 m-0 align-items-center justify-content-between\">\r\n                    <div className=\"col-6 col-md-4\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Order Total </p>\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>₹{Grandtotal2}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+₹{Grandtotal}</p>\r\n                                        </>\r\n\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1 ps-3' />\r\n                                <h6 className='text-charcoal fw-bolder card-header text-start ms-2'>₹{(Number(Grandtotal) + Number(Grandtotal2)).toFixed(2)}</h6>\r\n                            </div>\r\n                            {/* <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n                            </div> */}\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Total Items</p>\r\n\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length ? props.existedconsumables.length : 0}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+{SelectedProducts && SelectedProducts.length ? SelectedProducts.length : 0}</p>\r\n                                        </>\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1' />\r\n                                <h6 className='text-charcoal  fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length || SelectedProducts && SelectedProducts.length ? SelectedProducts.length + props.existedconsumables.length : 0}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-8\">\r\n                        <div className=\"row p-0 m-0 justify-content-end \">\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    loadnotes ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-seashell px-5 me-2' onClick={() => { confirmmessage2() }}>Save Notes</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    load ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-charcoal px-5 me-2' onClick={() => { confirmmessage() }}>Save All</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport { AddConsumables }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\Bill.jsx",["2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n\r\n\r\n        for (let j = 0; j < props.appointmentdata.other_charges.length; j++) {\r\n            extracharges.push({\r\n                description: props.appointmentdata.other_charges[j].description != null ? props.appointmentdata.other_charges[j].description : 'N/A',\r\n                amount: props.appointmentdata.other_charges[j].total_amount != null ? props.appointmentdata.other_charges[j].total_amount : 0,\r\n                discount: props.appointmentdata.other_charges[j].discount != null ? props.appointmentdata.other_charges[j].discount : 0,\r\n                cgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                sgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                gross_amount: props.appointmentdata.other_charges[j].final_amount && props.appointmentdata.other_charges[j].final_amount !== null ? props.appointmentdata.other_charges[j].final_amount : '',\r\n                id: props.appointmentdata.other_charges[j].id && props.appointmentdata.other_charges[j].id != null ? props.appointmentdata.other_charges[j].id : ''\r\n            })\r\n\r\n        }\r\n        setaartasdiscount(props.appointmentdata.aartas_discount)\r\n        setdocdiscount(props.appointmentdata.doc_discount)\r\n        setconstext(props.appointmentdata.cons_text)\r\n\r\n\r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n        Payments.push(Object.keys(JSON.parse(props.appointmentdata.payment_method_details)))\r\n        amounts.push(Object.values(JSON.parse(props.appointmentdata.payment_method_details)))\r\n\r\n\r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    const ConsumableAmount = () => {\r\n        try{\r\n            let consumables_amount = []\r\n            let Total = 0;\r\n            for (let i = 0; i < props.appointmentdata.length; i++) {\r\n                console.log('cpd')\r\n              if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].medicine_used.length; j++) {\r\n                  consumables_amount.push(props.appointmentdata[i].medicine_used[j].total_amount)\r\n                }\r\n              }\r\n            }\r\n        \r\n            consumables_amount.forEach((data) => (\r\n              Total += data\r\n            ))\r\n            Total = Total.toFixed(2)\r\n            return Total\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n        ConsumableAmount()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell p-0 m-0 position-relative' style={{minHeight:'100%'}}>\r\n            <div className=\"shadow-sm pt-2 pb-1\">\r\n            <h5 className='text-charcoal fw-bold text-center ps-3'>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2 mt-1 ' onClick={() => { props.toggle_bill() }}></button>\r\n            </div>\r\n\r\n            <div className='scroll' style={{minHeight:'60vh',maxHeight:'40vh'}}>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start px-3 py-2 position-relative\">\r\n                                <h6 className='fw-bold text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-2 me-4 text-cahrcoal fw-bolder'>\r\n                                    <input className='form-check-input me-1 ' type='checkbox' disabled={true} checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0 justify-content-between\">\r\n                                    <div className=\"col-8 ps-0 \">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell fw-bold border-0' disabled={true} value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-4 pe-0 \">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell fw-bold border-0' disabled={true} value={AddConsAmt} />\r\n                                    </div>\r\n                                    {/* <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell'>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2 ps-3\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-4 ps-0\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control border-0 fw-bold text-burntumber text-start' disabled={true} value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell fw-bold text-burntumber text-start border-0' disabled={true} value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell fw-bold text-burntumber text-start border-0' disabled={true} value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell position-relative'>\r\n                                    <div className=\"row p-0 m-0 align-items-center mb-2\">\r\n                                        <div className=\"col-auto p-0 m-0 ps-2 pe-1\">\r\n                                            <h6 className=' p-0 m-0 text-charcoal fw-bolder'>Extra Charges</h6>\r\n                                        </div>\r\n                                        <div className=\"col-auto p-0 m-0 d-none\">\r\n                                            <button className='btn p-0 m-0 py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount && extrachargecount.length>0 ? (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>Description</label>\r\n                                                            <input className='form-control bg-seashell m-0 text-start fw-bold border-0 ' disabled={true} value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>Amount</label>\r\n                                                            <input type='number' className='form-control text-start bg-seashell m-0 fw-bold border-0 ' disabled={true} value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 \">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>Discount</label>\r\n                                                            <input type='number' className='form-control text-start bg-seashell m-0 fw-bold border-0 ' disabled={true} value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        {/* <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start'>FinalAmount</label>\r\n                                                        </div> */}\r\n                                                        <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>GST %</label>\r\n                                                            <input type='number' className='form-control text-start bg-seashell m-0 fw-bold border-0 ' disabled={true} value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 align-self-end \">\r\n                                                            <div className=\"row p-0 m-0 \">\r\n                                                                <div className='col-6 p-0 m-0 fw-bold text-charcoal75 text-end' >Amount:</div>\r\n                                                                <input type='number' className='col-6 p-0 border-0 text-start bg-seashell m-0 ps-1 fw-bold text-burntumber border-0' disabled={true} style={{ letterSpacing: '1px' }} value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                            </div>\r\n                                                            <div className=\"row p-0 m-0\">\r\n                                                                <div className='col-6 p-0 m-0 fw-bold text-charcoal75 text-end'>incl. gst:</div>\r\n                                                                <input className='col-6 p-0 border-0 m-0 text-start bg-seashell ps-1 fw-bold text-burntumber' disabled={true} style={{ letterSpacing: '1px' }} value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-1 align-self-end d-none\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                            ):(\r\n                                                <p className='text-center text-charcoal75 fw-bold'>No extra charges added</p>\r\n                                            )\r\n                                        )\r\n\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start my-2  py-1 rounded-1 w-auto mx-3\">\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    {/* <div className=\"col-auto\">\r\n                                        <h6 className='fw-bolder text-charcoal p-0 m-0'>Tax</h6>\r\n                                    </div> */}\r\n                                    <div className=\"col-auto\">\r\n                                        <div className=\"row p-0 m-0\">\r\n                                            <div className=\"col-auto p-0 m-0\">\r\n                                                <div className=\"row p-0 m-0\">\r\n                                                    <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                                        <label className='text-burntumber fw-bold p-0 m-0'>SGST:- ₹</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-auto p-0 m-0\">\r\n                                                        <input className='form-control bg-seashell fw-bold border-0 p-0 m-0' disabled value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-auto p-0 m-0\">\r\n                                                <div className=\"row p-0 m-0\">\r\n                                                    <div className=\"col-auto p-0 m-0\">\r\n                                                        <label className='text-burntumber fw-bold p-0 m-0'>CGST:- ₹</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-auto p-0 m-0\">\r\n                                                        <input className='form-control bg-seashell fw-bold border-0 p-0 m-0' disabled value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n\r\n                                    <div className=\"col-4 align-self-end text-start\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap text-start'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-start border-0 rounded-1 fw-bolder p-0  bg-seashell' disabled={true} value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center text-wrap fw-bolder rounded-1 p-2'>No Advance Payments</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end text-start\">\r\n                                        <label className=' fw-bolder text-charcoal text-start text-wrap'>Consumables Amount</label>\r\n                                        <input disabled={true} className='form-control text-start rounded-1  border-0 fw-bolder p-0 text-charcoal50' value={ConsumableAmount()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 p-0 m-0 text-start\">\r\n                  <label className=\"fw-bolder text-charcoal text-start text-wrap\"> Reward Points </label>\r\n                    <div className=\"text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell\">\r\n                      {props.appointmentdata.patient.reward_points !=undefined  && props.appointmentdata.patient.reward_points.points_total!=undefined && props.appointmentdata.patient.reward_points.points_total !=null ? props.appointmentdata.patient.reward_points.points_total :0}\r\n                      </div>\r\n                  </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative mt-2\">\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    <div className=\"col-auto p-0 m-0 ps-1\">\r\n                                        <h6 className='text-charcoal p-0 m-0 fw-bolder'>Payments</h6>\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 d-none\">\r\n                                        <button className='btn p-0 ms-1' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"row justify-content-start p-0 m-0 mt-2\">\r\n                                    <div className=\"col-5 text-start p-0 m-0 me-3 \">\r\n                                        <span className=\" text-start p-0 m-0 text-charcoal fw-bold\"> Total Amount: </span>\r\n                                        <span className='text-lightgreen fw-bold'> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-start m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1 fw-bold border-0 text-end' disabled={true} value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1 fw-bold border-0' disabled={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n\r\n            </div>\r\n            <div className=\"container-fluid position-absolute bottom-0 p-0 m-0 bg-seashell\" style={{ marginTop: '2vh' }}>\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row bg-pearl  p-0 m-0 py-2 align-items-center text-center justify-content-between\">\r\n                                <div className='col-4 align-self-end text-start'>\r\n                                    <label className=' fw-bolder text-charcoal text-wrap text-start'>Grand Total</label>\r\n                                    <div className='form-control rounded-1 text-burntumber fs-6 text-start border-0 fw-bolder p-0 bg-pearl'  >{Get_Grand_Total()}</div>\r\n                                </div>\r\n                                <div className=\"col-auto justify-content-center\">\r\n                                    <button className='button button-charcoal' onClick={()=>props.toggle_bill()}>Close</button>\r\n                                </div>\r\n                                {/* <div className=\"col-4 justify-content-center\">\r\n                                    <button className='button button-pearl' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div> */}\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Appointments\\UpdateAppointment.jsx",["2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\n\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [load, setload] = useState()\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n            settrigger(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        props.fetchallAppointmentslist()\r\n                        props.closeappointmentform()\r\n                        setload(false)\r\n                        props.fetchapi()\r\n                        Notiflix.Notify.success(response.data.message);\r\n\r\n                    } else {\r\n                        setload(false)\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='fw-light text-start position-relative p-0 m-0'>\r\n            <h5 className=\"text-center pt-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute top-0 mb-3\" aria-label=\"Close\" disabled={load == true ? true : false} onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell align-self-center border-0 ps-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} `}>\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img src={process.env.PUBLIC_URL + '/images/location.png'}  />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold mt-1\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div></div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-4 \">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control button-charcoal-outline rounded-1\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading...</div>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-4 m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\"col-12\">\r\n                            <input type=\"date\" ref={dateref} className=\"form-control border-charcoal bg-seashell  rounded-1\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-lg-3 col-4\">\r\n                        <label className=\"fw-bold text-charcoal50\" style={{ letterSpacing: '1px' }}>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-charcoal50 shadow-none' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"m-0 p-0 mb-md-2 mt-2 ps-2 fw-bold\" style={{ letterSpacing: '1px' }}>Select new Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ps-2\">\r\n                    {ApiDocTimefrom && ApiDocTimefrom.length !== 0 ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button style={{ letterSpacing: '1px' }} className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} rounded-1 px-3 py-2 fw-bold  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button style={{ letterSpacing: '1px' }} disabled className=\"button-sm button-charcoa50 px-3 py-2 fw-bold m-1 rounded-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 w-100 m-0'>\r\n                            <button className=\"button rounded fw-bold text-burntumber button-lightred\">No timeslots Avaliable</button> \r\n                            </div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-auto py-2 pb-2 m-auto text-center\">\r\n                                <button className='btn button-charcoal' onClick={confirmmessage}>Done</button>\r\n                            </div>\r\n                            <div className=\"col-auto py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn button-pearl\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\qrcode.jsx",[],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Vaccines\\UpdateVaccine.jsx",["2348","2349","2350","2351","2352"],[],"import { useContext, useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport { customconfirm } from \"../../features/notiflix/customconfirm\";\r\nimport Notiflix from \"notiflix\";\r\nconst UpdateVaccine = (props)=>{\r\n    const url = useContext(URL)\r\n    const [vaccinename,setvaccinename]=useState('')\r\n    const [hsn,sethsn]=useState('')\r\n    const[manufacturer,setmanufacturer]=useState('')\r\n    const[saltname,setsaltname]=useState('')\r\n    const [load,setload] =useState(false)\r\n    const CurrentData = ()=>{\r\n        setvaccinename(props.data.name)\r\n        sethsn(props.data.hsn_code)\r\n        setmanufacturer(props.data.manufacturer)\r\n        setsaltname(props.data.salt_name)\r\n    }\r\n    useEffect(()=>{\r\n        CurrentData()\r\n    },[])\r\n    const confirmmessage = () => {\r\n        customconfirm();\r\n        Notiflix.Confirm.show(\r\n          `Add Charges and Payments`,\r\n          `Do you surely want to update ${props.data.name}`,\r\n          \"Yes\",\r\n          \"No\",\r\n          () => {\r\n            UpdateVaccine();\r\n          },\r\n          () => {\r\n            return 0;\r\n          },\r\n          {}\r\n        );\r\n      }\r\n      \r\n      const UpdateVaccine =async()=>{\r\n        try{\r\n            setload(true)\r\n            await axios.post(`${url}/update/vaccine/brand`,{\r\n                name:vaccinename,\r\n                hsn_code:hsn,\r\n                manufacturer:manufacturer,\r\n                salt_name:saltname,\r\n                vaccine_brand_id:props.data.id,\r\n            }).then((response)=>{\r\n                props.vaccinelist()\r\n                props.ToggleUpdateVaccine()\r\n                Notiflix.Notify.success(response.data.message)\r\n\r\n            })\r\n        }catch(e){\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n      }\r\n    return(\r\n        <section style={{minHeight:'100%'}}>\r\n            <h5 className=\"text-center text-charocal fw-bold pt-2 shadow-sm pb-2\">Update {vaccinename?vaccinename:''}</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn m-auto mt-2 position-absolute top-0 end-0 me-2 mt-2\" onClick={props.ToggleUpdateVaccine} aria-label=\"Close\" ></button>\r\n            <div className=\"row p-0 m-0 justify-content-center mt-4\">\r\n                <div className=\"col-5\">\r\n                    <div className=\"col-auto\">\r\n                        <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\" >Name</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input type=\"text\" className=\"form-control bg-seashell fw-bold\" value={vaccinename?vaccinename:''} onChange={(e)=>{setvaccinename(e.target.value)}} placeholder=\"Vaccine name\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-5\">\r\n                    <div className=\"col-auto\">\r\n                    <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\">HSN Code</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input type=\"text\" className=\"form-control bg-seashell fw-bold\" value={hsn?hsn:''} onChange={(e)=>{sethsn(e.target.value)}} placeholder=\"hsn code\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 justify-content-center mt-4\">\r\n                <div className=\"col-5\">\r\n                <div className=\"col-auto\">\r\n                <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\">Manufacturer</label>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <input type=\"text\" className=\"form-control bg-seashell fw-bold\"  value={manufacturer?manufacturer:''} onChange={(e)=>{setmanufacturer(e.target.value)}} placeholder=\"manufacturer\"/>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-5\">\r\n                <div className=\"col-auto\">\r\n                <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\">Salt Name</label>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <input type=\"text\" className=\"form-control bg-seashell fw-bold\" value={saltname?saltname:''} onChange={(e)=>{setsaltname(e.target.value)}} placeholder=\"salt name\"/>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid position-absolute bottom-0 bg-pearl py-3 px-2\">\r\n            <div className=\"row p-0 m-0 \">\r\n            <div className=\"col-9\">\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                {\r\n                    load ? (\r\n                        <div class=\"spinner-border\" role=\"status\" style={{ width: \"1.5rem\", height: \"1.5rem\" }}> \r\n                          <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    ):(\r\n                        <button className=\"button button-charcoal\" onClick={()=>{confirmmessage()}}>Update Vaccine</button>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n\r\n          </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport {UpdateVaccine}","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\pharmacy\\Vaccines\\NewVaccine.jsx",["2353","2354","2355","2356","2357"],[],"import { useContext, useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport { customconfirm } from \"../../features/notiflix/customconfirm\";\r\nimport Notiflix from \"notiflix\";\r\n\r\nconst NewVaccine = (props)=>{\r\n    const url = useContext(URL)\r\n    const [vaccinename,setvaccinename]=useState('')\r\n    const [hsn,sethsn]=useState('')\r\n    const[manufacturer,setmanufacturer]=useState('')\r\n    const[saltname,setsaltname]=useState('')\r\n    const [load,setload] =useState(false)\r\n\r\n    const confirmmessage = () => {\r\n        customconfirm();\r\n        Notiflix.Confirm.show(\r\n          `Add Charges and Payments`,\r\n          `Do you surely want to add new Vaccine as ${vaccinename}`,\r\n          \"Yes\",\r\n          \"No\",\r\n          () => {\r\n            newvaccine();\r\n          },\r\n          () => {\r\n            return 0;\r\n          },\r\n          {}\r\n        );\r\n      }\r\n      \r\n      const newvaccine =async()=>{\r\n        try{\r\n            setload(true)\r\n            await axios.post(`${url}/add/vaccine/brand`,{\r\n                name:vaccinename,\r\n                hsn_code:hsn,\r\n                manufacturer:manufacturer,\r\n                salt_name:saltname,\r\n            }).then((response)=>{\r\n                props.vaccinelist()\r\n                props.ToggleNewVaccine()\r\n                Notiflix.Notify.success(response.data.message)\r\n\r\n            })\r\n        }catch(e){\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n      }\r\n    return(\r\n        <section style={{minHeight:'100%'}}>    \r\n            <h5 className=\"text-center text-charocal fw-bold pt-2 shadow-sm pb-2\">Add New Vaccine</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn m-auto mt-2 position-absolute top-0 end-0 me-2 mt-2\" onClick={props.ToggleNewVaccine} aria-label=\"Close\" ></button>\r\n            <div className=\"row p-0 m-0 justify-content-center mt-4\">\r\n                <div className=\"col-5\">\r\n                    <div className=\"col-auto\">\r\n                        <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\" >Name</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input type=\"text\" className=\"form-control bg-seashell fw-bold\" value={vaccinename?vaccinename:''} onChange={(e)=>{setvaccinename(e.target.value)}} placeholder=\"Vaccine name\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-5\">\r\n                    <div className=\"col-auto\">\r\n                    <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\">HSN Code</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input type=\"text\" className=\"form-control bg-seashell fw-bold\" value={hsn?hsn:''} onChange={(e)=>{sethsn(e.target.value)}} placeholder=\"hsn code\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 justify-content-center mt-4\">\r\n                <div className=\"col-5\">\r\n                <div className=\"col-auto\">\r\n                <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\">Manufacturer</label>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <input type=\"text\" className=\"form-control bg-seashell fw-bold\"  value={manufacturer?manufacturer:''} onChange={(e)=>{setmanufacturer(e.target.value)}} placeholder=\"manufacturer\"/>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-5\">\r\n                <div className=\"col-auto\">\r\n                <label htmlFor=\"\" className=\"fw-bold text-charcoal75 ms-1\">Salt Name</label>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <input type=\"text\" className=\"form-control bg-seashell fw-bold\" value={saltname?saltname:''} onChange={(e)=>{setsaltname(e.target.value)}} placeholder=\"salt name\"/>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid position-absolute bottom-0 bg-pearl py-3 px-2\">\r\n            <div className=\"row p-0 m-0 \">\r\n            <div className=\"col-9\">\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                {\r\n                    load ? (\r\n                        <div class=\"spinner-border\" role=\"status\" style={{ width: \"1.5rem\", height: \"1.5rem\" }}> \r\n                          <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    ):(\r\n                        <button className=\"button button-charcoal\" onClick={()=>{confirmmessage()}}>Save Vaccine</button>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n\r\n          </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport {NewVaccine}","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\camera.jsx",["2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377"],[],"import React, {useRef,useCallback, useState,useEffect,useContext} from \"react\";\r\nimport {URL} from '../../index'\r\nimport Notiflix from \"notiflix\";\r\nimport {ReactCrop } from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport '../../css/bootstrap.css'\r\nimport Webcam from 'react-webcam'\r\nimport axios from \"axios\";\r\nimport { Get_Document } from \"../Today/fetch_apis\";\r\n  \r\n  const Camera = (props) => {\r\n    const url = useContext(URL);\r\n    const [imagestate,setimagestate]=useState('')\r\n    const[ImageData,setImageData]=useState()\r\n    const webcamRef = useRef(null);\r\n    const imgRef = useRef(null);\r\n    const[imgroll,setimgroll]=useState('none')\r\n    const [editor,seteditor] =useState('none')\r\n    const [imagearr,setimagearr] = useState([])\r\n    const [editindex, seteditindex] = useState(0)\r\n    const [image,setimage]=useState()\r\n    const [flip,setflip] =useState('user')\r\n    const [load,setload]=useState(false)\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    const videoConstraints = {\r\n      width:width,\r\n      height: height,\r\n      facingMode: flip\r\n    };\r\n    const capture = useCallback(  \r\n      () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        if(imagearr.length>0){\r\n            setimagearr(imageSrc)\r\n            Notiflix.Notify.info('Photo Captured')\r\n            toggleGallery()\r\n        }else{\r\n            setimagearr((prevState)=>[...prevState,imageSrc])\r\n            Notiflix.Notify.info('Photo Captured')\r\n            toggleGallery()\r\n        }\r\n      },\r\n      [webcamRef]\r\n    );\r\n    \r\n    const toggleGallery = ()=>{\r\n        if(imgroll=='block'){\r\n            setimgroll('none')\r\n          \r\n        }\r\n        if(imgroll == 'none'){\r\n    \r\n            setimgroll('block')\r\n        }\r\n    }\r\n    \r\n    const toggleedit=()=>{\r\n    if(editor=='none'){\r\n      seteditor('')\r\n    }\r\n    if(editor==''){\r\n      seteditor('none')\r\n    }\r\n    }\r\n    const [src, setSrc] = useState(null);\r\n    // const[croppedimg,setcroppedimg]=useState()\r\n    const [crop, setCrop] = useState({   unit: '%',\r\n    x: 25,\r\n    y: 25,\r\n    width: 100,\r\n    height:100 });\r\n    const [completedCrop, setCompletedCrop] = useState(null);\r\n    const imageRef = useRef(null);\r\n    \r\n    const onSelectFile = (e) => {\r\n      setSrc(imagearr[editindex])\r\n    };\r\n    const createImageRef = (src) => {\r\n      const img = new Image();\r\n      img.src = src;\r\n      img.onload = () => {\r\n        imageRef.current = img;\r\n      };\r\n    };\r\n    useEffect(() => {\r\n      if (src) {\r\n        createImageRef(src);\r\n      }\r\n    }, [src]);\r\n    const getCroppedImgAsJPEG = (image, crop) => {\r\n      const canvas = document.createElement('canvas');\r\n      const scaleX = image.naturalWidth / image.width;\r\n      const scaleY = image.naturalHeight / image.height;\r\n      canvas.width = crop.width;\r\n      canvas.height = crop.height;\r\n      const ctx = canvas.getContext('2d');\r\n    \r\n      ctx.drawImage(\r\n        image,\r\n        crop.x * scaleX,\r\n        crop.y * scaleY,\r\n        crop.width * scaleX,\r\n        crop.height * scaleY,\r\n        0,\r\n        0,\r\n        crop.width,\r\n        crop.height\r\n      );\r\n      const jpegImageDataUri = canvas.toDataURL('image/jpeg');\r\n      return jpegImageDataUri;\r\n    };\r\n\r\n    const makeClientCrop = async (crop) => {\r\n      if ( imageRef.current && crop.width && crop.height) {\r\n        toggleedit()\r\n        setCompletedCrop()\r\n        const croppedImage = await getCroppedImgAsJPEG(imageRef.current,crop)\r\n        setimage(croppedImage)\r\n        setimagestate('block')\r\n      }\r\n    }\r\n\r\n    const appointmentId=localStorage.getItem('appointmentid');\r\n\r\n\r\n  function Close_window() {\r\n    window.close()\r\n  }\r\n  \r\n\r\n  function dataURItoFile(dataURI) {\r\n    const splitDataURI = dataURI.split(',');\r\n    const mime = splitDataURI[0].match(/:(.*?);/)[1];\r\n    const byteString = atob(splitDataURI[1]);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const uint8Array = new Uint8Array(arrayBuffer);\r\n  \r\n    for (let i = 0; i < byteString.length; i++) {\r\n      uint8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n  \r\n    const blob = new Blob([uint8Array], { type: mime });\r\n    const file = new File([blob], 'like.jpeg', { type: mime });\r\n    return file;\r\n  }\r\n  const handleFileUpload = async () => {\r\n    const file =  dataURItoFile(image);\r\n    const formData = new FormData();\r\n    formData.append('image', file,'prescription.jpeg');\r\n    formData.append('appointment_id', appointmentId);\r\n    setload(true)\r\n    axios.post(`${url}/save/document`, formData, {headers: { 'Content-Type': 'multipart/form-data', }})\r\n      .then((response) => {\r\n        if(response.data.status==true){\r\n          Notiflix.Notify.success('Prescription Uploaded Successfully')\r\n          setTimeout(Close_window, 2000);\r\n          Get_Document(appointmentId)\r\n          setload(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors\r\n        Notiflix.Notify.failure('Error uploading file:');\r\n        setload(false)\r\n      });\r\n  }\r\n    return (\r\n      <>\r\n\r\n          <div className={`p-0 m-0 position-absolute top-0 start-0 ebd-0 mx-auto`} style={{zIndex:'10'}} >\r\n              <div className={`d-${editor ==''?'none':'block'} col-12 p-0 m-0`}>\r\n              <Webcam audio={false} ref={webcamRef} screenshotFormat=\"image/jpeg\" mirrored={false} videoConstraints={videoConstraints} />\r\n              </div>\r\n              <div className={`col-12 bg-charcoal d-${imagestate =='block'?'none':'block'}`}>\r\n                <div className=\"row p-0 m-0 justify-content-between align-items-center position-relative\">\r\n                  <div className=\"col-3\">\r\n                  <button className=\"border-0 justify-content-start cameraroll button button-pearl p-0 m-0 \"onClick={()=>{toggleGallery()}}>\r\n            {\r\n                imgroll=='none'?(   \r\n                    <img src={process.env.PUBLIC_URL+'/images/gallery.png'} className=\"img-fluid bg-charcoal75 px-2 py-1 rounded-top mb-1\" style={{width:'2rem'}}/>\r\n                ):(\r\n                    <img src={process.env.PUBLIC_URL+'/images/bottom.png'} className=\"img-fluid bg-seashell px-2 py-1 rounded-top mb-1\"/>\r\n                )\r\n            }\r\n          </button>\r\n            <div className={`container position-absolute cameraroll scroll bg-charcoal25 ms-2 d-${imgroll}`}style={{flexDirection:'horizontal',minHeight:'fit-content',zIndex:'10',top:'-10rem'}}> \r\n            {\r\n                imagearr? imagearr.map((data,i)=>(\r\n                    <img src={data} className=\"img-fluid\" onClick={()=>{toggleedit();seteditindex(i);onSelectFile()}} style={{width:'5rem'}}/>\r\n\r\n                )):''\r\n            }\r\n            </div>\r\n            </div>\r\n                  <div className=\"col-6 align-items-center d-flex justify-content-center\">\r\n                  <img className=\"img-fluid bg-lightyellow rounded-2\" onClick={()=>{capture()}} style={{width:'4rem'}} src={process.env.PUBLIC_URL + '/images/camera_click.png'}/>\r\n                  </div>\r\n                  <div className=\"col-3 d-flex justify-content-center\">\r\n                  <button className=\"button button-pearl border-0 cameraroll p-0 m-0\" onClick={()=>{flip=='user'?setflip('environment'):setflip('user')}}><img src={process.env.PUBLIC_URL+'/images/flip.png'} className=\"img-fluid bg-charcoal75 px-2 py-1 rounded-top mb-1\" style={{width:'1.8rem'}}/></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n      {/* cropper */}\r\n      {\r\n        webcamRef.current ? (\r\n          <div className={`d-${editor} position-absolute p-0 m-0 top-0 bg-pearl shadow-sm`} style={{zIndex:'15',height:height,width:width}}>\r\n          <button className=\"position-absolute end-0 bg-seashell50 p-2 mt-3 btn-close\" style={{zIndex:'18'}} onClick={()=>{toggleedit()}}></button>\r\n        <div className=\"p-0 m-0 position-absolute start-0 end-0 mx-auto\">\r\n          <ReactCrop crop={crop} onChange={(c) => setCrop(c)} onComplete={(c) => setCompletedCrop(c)} >\r\n            <img src={src} className=\"img-fluid\" style={{width:`${webcamRef.current.video.videoWidth}px`,height:`${webcamRef.current.video.videoHeight}px`}}/>\r\n          </ReactCrop>\r\n      </div>    \r\n      {/* height:`${webcamRef.current.video.videoHeight}px`, */}\r\n      </div>\r\n        ):(\r\n          <></>\r\n        )\r\n      }\r\n\r\n      {/* cropper */}\r\n  </div>\r\n        {completedCrop && (\r\n        <div className=\"position-absolute top-0 mt-4 ms-2\" style={{zIndex:'15'}}>\r\n          <button className=\"button button-charcoal text-light border border-light\" onClick={() => makeClientCrop(completedCrop)}>Save</button>\r\n        </div>\r\n      )}\r\n      {\r\n      image ?(\r\n        <div className={`position-absolute top-0 start-0 mx-auto end-0 bg-charcoal d-${imagestate}`} style={{height:height,width:width,zIndex:'20'}} >\r\n          <button className=\"btn-close position-absolute bg-seashell50 mt-3 me-3 p-2 top-0 end-0\"onClick={()=>{setimagestate('none')}}></button>\r\n          <div className=\"position-relative d-flex mt-5 justify-content-center\">\r\n          <img src={image} className=\"img-fluid\" style={{width:crop.width,height:crop.height}}/>  \r\n          </div>\r\n          {\r\n            load ?(\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            ):(\r\n              <button className=\" mx-auto d-flex justify-content-center button button-pearl\" onClick={(e)=>{handleFileUpload(e)}}>Save Prescription</button>\r\n            )\r\n          }\r\n\r\n          {/* <input type='file' onChange={handleChange}/> */}\r\n        </div>\r\n      ):(<></>)\r\n      } \r\n      </>\r\n    );\r\n  }\r\n  export default Camera","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\prescription.jsx",["2378"],[],"import React from 'react'\r\n\r\nconst Prescription = (props) => {\r\nconsole.log(props.prescriptions);\r\n  return (\r\n    <div className=\"container p-0 m-0 mb-3 bg-seashell\" style={{height:'80vh'}}>\r\n      <button className='btn-close position-absolute top-0 end-0 mt-2 me-2' onClick={()=>props.toggle_ScannedPres()}></button>\r\n      <h5 className='fw-bold text-center shadow-sm pt-2 pb-1'>Scanned Prescription</h5>\r\n      {\r\n          props.prescriptions &&  props.prescriptions.length >0 ?(\r\n      <div>\r\n       <iframe src={props.prescriptions} width=\"100%\" style={{height:'70vh'}}> </iframe> \r\n      </div>\r\n          ):(\r\n            <h4 className='text-center mt-5 pt-5 fw-bold text-charcoal50'>No Scanned Prescriptions</h4>\r\n          )\r\n      }\r\n\r\n</div>\r\n  )\r\n}\r\n\r\nexport {Prescription}","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\Prescription.jsx",["2379"],[],"E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\generated_bill.jsx",["2380"],[],"import React from 'react'\r\n\r\nconst Generated_bill = (props) => {\r\n    return (\r\n      <div className=\"container p-0 m-0 mb-3 bg-seashell\" style={{height:'70vh'}}>\r\n        <button className='btn-close position-absolute top-0 end-0 mt-2 me-2' onClick={()=>props.toggle_Scannedbill()}></button>\r\n        <h5 className='fw-bold text-center shadow-sm pt-2 pb-1'>Generated Bill</h5>\r\n        {\r\n            props.bill &&  props.bill.length >0 ?(\r\n        <div>\r\n         <iframe src={props.bill} width=\"100%\" style={{height:'60vh'}}> </iframe> \r\n        </div>\r\n            ):(\r\n              <h4 className='text-center mt-5 pt-5 fw-bold text-charcoal50'>No Generated bill found</h4>\r\n            )\r\n        }\r\n  \r\n  </div>\r\n    )\r\n}\r\n\r\nexport {Generated_bill}","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\timer_notify.jsx",["2381","2382","2383","2384","2385"],[],"import {useContext} from 'react'\r\nimport { Doctorapi,TodayDate } from '../../index.jsx';\r\n\r\nconst Doctor_data = ()=>{\r\n  const Doctors = useContext(Doctorapi)\r\n  const Todaydate = useContext(TodayDate)\r\n  const clinic_id = localStorage.getItem('ClinicId')\r\n  return [Doctors,Todaydate,clinic_id]\r\n}\r\n\r\nexport const timer_notify = (docid)=>{\r\n  let doclogouts = []\r\n  const [doctor_data,todayDate,clinic_id]  = Doctor_data()\r\n  let docobj = {\r\n    doc_id :  '',\r\n    doc_name:'',\r\n    todaylogs:[],\r\n    last_logout:''\r\n  }\r\n  let result = []\r\n if(docid !=undefined){\r\n  for(let i=0;i<doctor_data.length;i++){\r\n    if(docid == doctor_data[i].id){\r\n    let logins = []\r\n      for(let j=0;j<doctor_data[i].login_history.length;j++){\r\n          if(doctor_data[i].login_history[j].date == todayDate && clinic_id == doctor_data[i].login_history[j].clinic_id ){\r\n            logins.push(doctor_data[i].login_history[j])\r\n          }\r\n      }\r\n      if(logins.length>0){\r\n      doclogouts.push(\r\n        docobj = {\r\n          doc_id:doctor_data[i].id,\r\n          doc_name:doctor_data[i].doctor_name,\r\n          todaylogs:logins,\r\n          last_logout:logins[logins.length-1].logout_time !=null ?0:1\r\n        }\r\n      )\r\n    }\r\n  }\r\n  }\r\n}\r\nfor(let i=0;i<doclogouts.length;i++){\r\n    result.push(doclogouts[i].last_logout) \r\n}\r\nreturn result\r\n}\r\n","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\features\\timeout_notifications.jsx",["2386","2387","2388","2389","2390","2391","2392","2393","2394","2395","2396"],[],"import Notiflix from 'notiflix';\r\nimport axios from 'axios';\r\nlet doctor_data = ''\r\n\r\n function fetch_Doc_data() {\r\n    let ClinicId = localStorage.getItem(\"ClinicId\");\r\n    try {\r\n       axios.get(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/doctor/list?clinic_id=${ClinicId}&limit=100&offset=0`).then(function (response) {\r\n        if(doctor_data.length==0){\r\n            doctor_data = response.data.data.doctor_list\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Report.failure(\r\n        `${e.message}`,\r\n        \"Please Check your Internet Connection and retry\",\r\n        \"Retry\",\r\n        () => {\r\n          window.location.reload();\r\n        }\r\n      );\r\n    }\r\n    return doctor_data\r\n  }\r\n\r\n  const timeout_notification = () => {\r\n    let sent = 0\r\n    const d = new Date();\r\n    const date = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\r\n    const monthcount = d.getMonth() + 1 < 10 ? `0${d.getMonth() + 1}` : d.getMonth() + 1;\r\n    const yearcount = d.getFullYear();\r\n    var todayDate = `${yearcount}-${monthcount}-${date}`;\r\n    const clinicId = localStorage.getItem('ClinicId')\r\n    if(doctor_data.length==0){\r\n        doctor_data = fetch_Doc_data()\r\n    }\r\n    let DocTimeouts = []\r\n    let reminder = ''\r\n    let docobj = {\r\n      doc_id :  '',\r\n      doc_name:'',\r\n      end_time:'',\r\n    }\r\n      function getCurrentTime12HrFormat() {\r\n        const now = new Date();\r\n        let hours = now.getHours();\r\n        const minutes = now.getMinutes();\r\n        const ampm = hours >= 12 ? 'PM' : 'AM';\r\n      \r\n        // Convert hours to 12-hour format\r\n        hours = hours % 12 || 12;\r\n      \r\n        // Pad single-digit minutes with a leading zero\r\n        const formattedMinutes = String(minutes).padStart(2, '0');\r\n      \r\n        // Create the formatted time string\r\n        const formattedTime = `${hours}:${formattedMinutes} ${ampm}`;\r\n      \r\n        return formattedTime;\r\n      }\r\n      function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n        if (time.length > 1) {\r\n          time = time.slice(1);\r\n          time[3] = +time[0] < 12 ? ' AM' : ' PM';\r\n          time[0] = +time[0] % 12 || 12;\r\n        } \r\n        return time.join('');\r\n      }\r\n    const currentTime12Hr = getCurrentTime12HrFormat()\r\n    if(doctor_data !=undefined){\r\n    for(let i=0;i<doctor_data.length;i++){\r\n      let Endtime = ''\r\n      let clinic_id = ''\r\n        for(let j=0;j<doctor_data[i].month_timeslots.length;j++){\r\n            if(doctor_data[i].month_timeslots[j].date == todayDate && doctor_data[i].month_timeslots[j].clinic_id ==clinicId){\r\n              Endtime = doctor_data[i].month_timeslots[j].time_from \r\n              clinic_id = doctor_data[i].month_timeslots[j].clinic_id\r\n            }\r\n        }\r\n        DocTimeouts.push(\r\n          docobj = {\r\n            doc_id:doctor_data[i].id,\r\n            doc_name:doctor_data[i].doctor_name,\r\n            clinic_id:clinic_id,\r\n            end_time:Endtime,\r\n          }\r\n        )\r\n    }\r\n    }\r\n    if(DocTimeouts !=undefined){    \r\n    for(let i=0;i<DocTimeouts.length;i++){\r\n      if(DocTimeouts[i].end_time){\r\n        let endtime = tConvert(DocTimeouts[i].end_time)\r\n        if(String(currentTime12Hr) == String(endtime) && DocTimeouts[i].clinic_id == clinicId){\r\n          reminder = `Dr. ${DocTimeouts[i].doc_name} timeslots ends on ${endtime} `\r\n          if(sent == 0){\r\n            Notiflix.Report.info(\r\n                `Doctor Time Slots`,\r\n                `Dr. ${DocTimeouts[i].doc_name} timeslots ends after ${endtime}`,\r\n                \"Confirm\",\r\n                () => {\r\n                  return 0\r\n                }\r\n              )\r\n          }\r\n          sent =1\r\n       }\r\n      }\r\n    }     \r\n  }\r\n  return (<></>)\r\n  }\r\n  export{timeout_notification}\r\n\r\n","E:\\Aartas Tech\\Pranav Sharma\\Connect App\\ConnectApp_React\\src\\components\\Today\\fetch_apis.jsx",["2397"],[],"import axios from \"axios\"\r\nimport Notiflix from \"notiflix\"\r\n\r\nconst url = 'https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect'\r\nconst adminid = localStorage.getItem('id')\r\nconst ClinicId = localStorage.getItem(\"ClinicId\");\r\n\r\nexport const Get_Document=async(appointment_id)=>{  \r\n    let data\r\n    try{\r\n     await axios.get(`${url}/all/document?appointment_id=${appointment_id}`).then((response)=>{\r\n        data = response.data.data\r\n      }).catch((e)=>{\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    }catch(e){\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n    return data \r\n  }\r\n  export const UpadteStatus=async(appointmentId,status,adminId)=>{\r\n    let res;\r\n    try {\r\n      Notiflix.Loading.circle('Upadating Appointment Status', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      await axios.post(`${url}/appointment/change/status`, {\r\n        appointment_id: appointmentId,\r\n        status: status,\r\n        admin_id: adminId\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        res = response\r\n      }).catch((e)=>{\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n}\r\nexport const appointment_status = async()=>{\r\n  let data ;\r\n  try {\r\n      await axios.get(`${url}/DSR/appointments?admin_id=${adminid}&clinic_id=${ClinicId}`).then((response)=>{\r\n        data = response.data.data.all_appointments_status\r\n      }).catch((e)=>{\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n  } catch (error) {\r\n    Notiflix.Notify.failure(error.message)\r\n  }\r\n  return data\r\n}\r\n\r\nexport const AllAppointments=async(clinic_id,from_date,to_date)=>{\r\n  let res;\r\n  await axios.get(`${url}/appointment/list?clinic_id=${clinic_id}&from_date=${from_date}&to_date=${to_date}`).then((response) => {\r\n    res = response.data.data\r\n  })\r\n  return res\r\n}",{"ruleId":"2398","severity":1,"message":"2399","line":2,"column":27,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2402","line":9,"column":10,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2403","line":11,"column":43,"nodeType":"2400","messageId":"2401","endLine":11,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2405","line":106,"column":110,"nodeType":"2406","messageId":"2407","endLine":106,"endColumn":112},{"ruleId":"2408","severity":1,"message":"2409","line":166,"column":6,"nodeType":"2410","endLine":166,"endColumn":16,"suggestions":"2411"},{"ruleId":"2404","severity":1,"message":"2405","line":183,"column":27,"nodeType":"2406","messageId":"2407","endLine":183,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":187,"column":16,"nodeType":"2406","messageId":"2407","endLine":187,"endColumn":18},{"ruleId":"2412","severity":1,"message":"2413","line":190,"column":9,"nodeType":"2414","endLine":190,"endColumn":102},{"ruleId":"2404","severity":1,"message":"2405","line":210,"column":74,"nodeType":"2406","messageId":"2407","endLine":210,"endColumn":76},{"ruleId":"2415","severity":1,"message":"2416","line":211,"column":17,"nodeType":"2414","endLine":211,"endColumn":131},{"ruleId":"2417","severity":1,"message":"2418","line":221,"column":5,"nodeType":"2414","messageId":"2419","endLine":221,"endColumn":53},{"ruleId":"2417","severity":1,"message":"2420","line":242,"column":82,"nodeType":"2414","messageId":"2419","endLine":242,"endColumn":118},{"ruleId":"2398","severity":1,"message":"2421","line":270,"column":10,"nodeType":"2400","messageId":"2401","endLine":270,"endColumn":16},{"ruleId":"2408","severity":1,"message":"2422","line":352,"column":6,"nodeType":"2410","endLine":352,"endColumn":12,"suggestions":"2423"},{"ruleId":"2408","severity":1,"message":"2424","line":384,"column":6,"nodeType":"2410","endLine":384,"endColumn":28,"suggestions":"2425"},{"ruleId":"2408","severity":1,"message":"2426","line":384,"column":7,"nodeType":"2406","endLine":384,"endColumn":27},{"ruleId":"2404","severity":1,"message":"2405","line":384,"column":15,"nodeType":"2406","messageId":"2407","endLine":384,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2427","line":408,"column":224,"nodeType":"2406","messageId":"2407","endLine":408,"endColumn":226},{"ruleId":"2404","severity":1,"message":"2405","line":408,"column":272,"nodeType":"2406","messageId":"2407","endLine":408,"endColumn":274},{"ruleId":"2428","severity":1,"message":"2429","line":411,"column":23,"nodeType":"2414","endLine":411,"endColumn":146},{"ruleId":"2428","severity":1,"message":"2429","line":416,"column":23,"nodeType":"2414","endLine":416,"endColumn":121},{"ruleId":"2404","severity":1,"message":"2405","line":432,"column":118,"nodeType":"2406","messageId":"2407","endLine":432,"endColumn":120},{"ruleId":"2428","severity":1,"message":"2430","line":441,"column":23,"nodeType":"2414","endLine":441,"endColumn":68},{"ruleId":"2404","severity":1,"message":"2405","line":153,"column":15,"nodeType":"2406","messageId":"2407","endLine":153,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":169,"column":72,"nodeType":"2406","messageId":"2407","endLine":169,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2405","line":199,"column":15,"nodeType":"2406","messageId":"2407","endLine":199,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":215,"column":72,"nodeType":"2406","messageId":"2407","endLine":215,"endColumn":74},{"ruleId":"2398","severity":1,"message":"2431","line":244,"column":10,"nodeType":"2400","messageId":"2401","endLine":244,"endColumn":23},{"ruleId":"2408","severity":1,"message":"2432","line":271,"column":5,"nodeType":"2410","endLine":271,"endColumn":7,"suggestions":"2433"},{"ruleId":"2404","severity":1,"message":"2427","line":273,"column":26,"nodeType":"2406","messageId":"2407","endLine":273,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":273,"column":66,"nodeType":"2406","messageId":"2407","endLine":273,"endColumn":68},{"ruleId":"2408","severity":1,"message":"2434","line":280,"column":5,"nodeType":"2410","endLine":280,"endColumn":7,"suggestions":"2435"},{"ruleId":"2404","severity":1,"message":"2405","line":284,"column":26,"nodeType":"2406","messageId":"2407","endLine":284,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":294,"column":40,"nodeType":"2406","messageId":"2407","endLine":294,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":302,"column":82,"nodeType":"2406","messageId":"2407","endLine":302,"endColumn":84},{"ruleId":"2404","severity":1,"message":"2405","line":302,"column":118,"nodeType":"2406","messageId":"2407","endLine":302,"endColumn":120},{"ruleId":"2415","severity":1,"message":"2416","line":303,"column":19,"nodeType":"2414","endLine":303,"endColumn":170},{"ruleId":"2404","severity":1,"message":"2405","line":312,"column":87,"nodeType":"2406","messageId":"2407","endLine":312,"endColumn":89},{"ruleId":"2404","severity":1,"message":"2405","line":326,"column":165,"nodeType":"2406","messageId":"2407","endLine":326,"endColumn":167},{"ruleId":"2415","severity":1,"message":"2416","line":326,"column":171,"nodeType":"2414","endLine":326,"endColumn":282},{"ruleId":"2415","severity":1,"message":"2416","line":361,"column":161,"nodeType":"2414","endLine":361,"endColumn":243},{"ruleId":"2404","severity":1,"message":"2405","line":362,"column":52,"nodeType":"2406","messageId":"2407","endLine":362,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":364,"column":52,"nodeType":"2406","messageId":"2407","endLine":364,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":365,"column":52,"nodeType":"2406","messageId":"2407","endLine":365,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":367,"column":141,"nodeType":"2406","messageId":"2407","endLine":367,"endColumn":143},{"ruleId":"2415","severity":1,"message":"2416","line":367,"column":224,"nodeType":"2414","endLine":367,"endColumn":307},{"ruleId":"2404","severity":1,"message":"2405","line":373,"column":30,"nodeType":"2406","messageId":"2407","endLine":373,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":376,"column":53,"nodeType":"2406","messageId":"2407","endLine":376,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2405","line":389,"column":29,"nodeType":"2406","messageId":"2407","endLine":389,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":393,"column":56,"nodeType":"2406","messageId":"2407","endLine":393,"endColumn":58},{"ruleId":"2404","severity":1,"message":"2405","line":395,"column":37,"nodeType":"2406","messageId":"2407","endLine":395,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":32,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":429,"column":199,"nodeType":"2406","messageId":"2407","endLine":429,"endColumn":201},{"ruleId":"2404","severity":1,"message":"2405","line":441,"column":38,"nodeType":"2406","messageId":"2407","endLine":441,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":444,"column":205,"nodeType":"2406","messageId":"2407","endLine":444,"endColumn":207},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":38,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":454,"column":205,"nodeType":"2406","messageId":"2407","endLine":454,"endColumn":207},{"ruleId":"2417","severity":1,"message":"2436","line":455,"column":33,"nodeType":"2414","messageId":"2419","endLine":455,"endColumn":112},{"ruleId":"2404","severity":1,"message":"2405","line":172,"column":19,"nodeType":"2406","messageId":"2407","endLine":172,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":188,"column":82,"nodeType":"2406","messageId":"2407","endLine":188,"endColumn":84},{"ruleId":"2404","severity":1,"message":"2405","line":218,"column":19,"nodeType":"2406","messageId":"2407","endLine":218,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":234,"column":82,"nodeType":"2406","messageId":"2407","endLine":234,"endColumn":84},{"ruleId":"2398","severity":1,"message":"2431","line":264,"column":12,"nodeType":"2400","messageId":"2401","endLine":264,"endColumn":25},{"ruleId":"2408","severity":1,"message":"2432","line":285,"column":7,"nodeType":"2410","endLine":285,"endColumn":9,"suggestions":"2437"},{"ruleId":"2404","severity":1,"message":"2427","line":294,"column":34,"nodeType":"2406","messageId":"2407","endLine":294,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":294,"column":74,"nodeType":"2406","messageId":"2407","endLine":294,"endColumn":76},{"ruleId":"2408","severity":1,"message":"2434","line":301,"column":13,"nodeType":"2410","endLine":301,"endColumn":15,"suggestions":"2438"},{"ruleId":"2404","severity":1,"message":"2405","line":306,"column":34,"nodeType":"2406","messageId":"2407","endLine":306,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":314,"column":51,"nodeType":"2406","messageId":"2407","endLine":314,"endColumn":53},{"ruleId":"2404","severity":1,"message":"2405","line":324,"column":77,"nodeType":"2406","messageId":"2407","endLine":324,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2405","line":324,"column":113,"nodeType":"2406","messageId":"2407","endLine":324,"endColumn":115},{"ruleId":"2415","severity":1,"message":"2416","line":325,"column":33,"nodeType":"2414","endLine":325,"endColumn":194},{"ruleId":"2404","severity":1,"message":"2405","line":334,"column":87,"nodeType":"2406","messageId":"2407","endLine":334,"endColumn":89},{"ruleId":"2404","severity":1,"message":"2405","line":347,"column":181,"nodeType":"2406","messageId":"2407","endLine":347,"endColumn":183},{"ruleId":"2415","severity":1,"message":"2416","line":347,"column":187,"nodeType":"2414","endLine":347,"endColumn":288},{"ruleId":"2415","severity":1,"message":"2416","line":384,"column":165,"nodeType":"2414","endLine":384,"endColumn":247},{"ruleId":"2404","severity":1,"message":"2405","line":387,"column":68,"nodeType":"2406","messageId":"2407","endLine":387,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2405","line":397,"column":64,"nodeType":"2406","messageId":"2407","endLine":397,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":403,"column":156,"nodeType":"2406","messageId":"2407","endLine":403,"endColumn":158},{"ruleId":"2415","severity":1,"message":"2416","line":404,"column":37,"nodeType":"2414","endLine":404,"endColumn":120},{"ruleId":"2404","severity":1,"message":"2405","line":413,"column":44,"nodeType":"2406","messageId":"2407","endLine":413,"endColumn":46},{"ruleId":"2404","severity":1,"message":"2405","line":416,"column":78,"nodeType":"2406","messageId":"2407","endLine":416,"endColumn":80},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":43,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":428,"column":72,"nodeType":"2406","messageId":"2407","endLine":428,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2405","line":430,"column":43,"nodeType":"2406","messageId":"2407","endLine":430,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":459,"column":46,"nodeType":"2406","messageId":"2407","endLine":459,"endColumn":48},{"ruleId":"2404","severity":1,"message":"2405","line":462,"column":215,"nodeType":"2406","messageId":"2407","endLine":462,"endColumn":217},{"ruleId":"2404","severity":1,"message":"2405","line":474,"column":38,"nodeType":"2406","messageId":"2407","endLine":474,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":477,"column":205,"nodeType":"2406","messageId":"2407","endLine":477,"endColumn":207},{"ruleId":"2404","severity":1,"message":"2405","line":484,"column":38,"nodeType":"2406","messageId":"2407","endLine":484,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":487,"column":205,"nodeType":"2406","messageId":"2407","endLine":487,"endColumn":207},{"ruleId":"2417","severity":1,"message":"2436","line":488,"column":33,"nodeType":"2414","messageId":"2419","endLine":488,"endColumn":112},{"ruleId":"2398","severity":1,"message":"2439","line":102,"column":10,"nodeType":"2400","messageId":"2401","endLine":102,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2440","line":102,"column":19,"nodeType":"2400","messageId":"2401","endLine":102,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":158,"column":14,"nodeType":"2406","messageId":"2407","endLine":158,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":158,"column":44,"nodeType":"2406","messageId":"2407","endLine":158,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2441","line":215,"column":6,"nodeType":"2410","endLine":215,"endColumn":24,"suggestions":"2442"},{"ruleId":"2408","severity":1,"message":"2443","line":220,"column":6,"nodeType":"2410","endLine":220,"endColumn":17,"suggestions":"2444"},{"ruleId":"2404","severity":1,"message":"2405","line":237,"column":18,"nodeType":"2406","messageId":"2407","endLine":237,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":247,"column":18,"nodeType":"2406","messageId":"2407","endLine":247,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":281,"column":36,"nodeType":"2406","messageId":"2407","endLine":281,"endColumn":38},{"ruleId":"2404","severity":1,"message":"2405","line":301,"column":15,"nodeType":"2406","messageId":"2407","endLine":301,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":334,"column":127,"nodeType":"2406","messageId":"2407","endLine":334,"endColumn":129},{"ruleId":"2404","severity":1,"message":"2427","line":371,"column":51,"nodeType":"2406","messageId":"2407","endLine":371,"endColumn":53},{"ruleId":"2404","severity":1,"message":"2405","line":374,"column":45,"nodeType":"2406","messageId":"2407","endLine":374,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":384,"column":62,"nodeType":"2406","messageId":"2407","endLine":384,"endColumn":64},{"ruleId":"2404","severity":1,"message":"2405","line":384,"column":126,"nodeType":"2406","messageId":"2407","endLine":384,"endColumn":128},{"ruleId":"2404","severity":1,"message":"2405","line":393,"column":62,"nodeType":"2406","messageId":"2407","endLine":393,"endColumn":64},{"ruleId":"2404","severity":1,"message":"2405","line":407,"column":24,"nodeType":"2406","messageId":"2407","endLine":407,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":410,"column":68,"nodeType":"2406","messageId":"2407","endLine":410,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2405","line":422,"column":24,"nodeType":"2406","messageId":"2407","endLine":422,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":425,"column":166,"nodeType":"2406","messageId":"2407","endLine":425,"endColumn":168},{"ruleId":"2398","severity":1,"message":"2445","line":501,"column":26,"nodeType":"2400","messageId":"2401","endLine":501,"endColumn":27},{"ruleId":"2408","severity":1,"message":"2446","line":509,"column":6,"nodeType":"2410","endLine":509,"endColumn":8,"suggestions":"2447"},{"ruleId":"2408","severity":1,"message":"2448","line":565,"column":6,"nodeType":"2410","endLine":565,"endColumn":26,"suggestions":"2449"},{"ruleId":"2404","severity":1,"message":"2405","line":603,"column":44,"nodeType":"2406","messageId":"2407","endLine":603,"endColumn":46},{"ruleId":"2404","severity":1,"message":"2405","line":609,"column":50,"nodeType":"2406","messageId":"2407","endLine":609,"endColumn":52},{"ruleId":"2415","severity":1,"message":"2416","line":629,"column":23,"nodeType":"2414","endLine":629,"endColumn":103},{"ruleId":"2415","severity":1,"message":"2416","line":653,"column":23,"nodeType":"2414","endLine":653,"endColumn":104},{"ruleId":"2404","severity":1,"message":"2405","line":672,"column":47,"nodeType":"2406","messageId":"2407","endLine":672,"endColumn":49},{"ruleId":"2415","severity":1,"message":"2416","line":674,"column":15,"nodeType":"2414","endLine":674,"endColumn":119},{"ruleId":"2415","severity":1,"message":"2416","line":678,"column":15,"nodeType":"2414","endLine":678,"endColumn":119},{"ruleId":"2404","severity":1,"message":"2405","line":697,"column":100,"nodeType":"2406","messageId":"2407","endLine":697,"endColumn":102},{"ruleId":"2404","severity":1,"message":"2405","line":714,"column":13,"nodeType":"2406","messageId":"2407","endLine":714,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":715,"column":18,"nodeType":"2406","messageId":"2407","endLine":715,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":720,"column":13,"nodeType":"2406","messageId":"2407","endLine":720,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":721,"column":17,"nodeType":"2406","messageId":"2407","endLine":721,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":753,"column":78,"nodeType":"2406","messageId":"2407","endLine":753,"endColumn":80},{"ruleId":"2404","severity":1,"message":"2405","line":780,"column":21,"nodeType":"2406","messageId":"2407","endLine":780,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":799,"column":34,"nodeType":"2406","messageId":"2407","endLine":799,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":804,"column":73,"nodeType":"2406","messageId":"2407","endLine":804,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":805,"column":73,"nodeType":"2406","messageId":"2407","endLine":805,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":806,"column":73,"nodeType":"2406","messageId":"2407","endLine":806,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":807,"column":73,"nodeType":"2406","messageId":"2407","endLine":807,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":808,"column":73,"nodeType":"2406","messageId":"2407","endLine":808,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":809,"column":73,"nodeType":"2406","messageId":"2407","endLine":809,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":835,"column":71,"nodeType":"2406","messageId":"2407","endLine":835,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":841,"column":71,"nodeType":"2406","messageId":"2407","endLine":841,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":847,"column":71,"nodeType":"2406","messageId":"2407","endLine":847,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":853,"column":71,"nodeType":"2406","messageId":"2407","endLine":853,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":859,"column":71,"nodeType":"2406","messageId":"2407","endLine":859,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":865,"column":71,"nodeType":"2406","messageId":"2407","endLine":865,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":912,"column":34,"nodeType":"2406","messageId":"2407","endLine":912,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":917,"column":73,"nodeType":"2406","messageId":"2407","endLine":917,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":918,"column":73,"nodeType":"2406","messageId":"2407","endLine":918,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":919,"column":73,"nodeType":"2406","messageId":"2407","endLine":919,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":920,"column":73,"nodeType":"2406","messageId":"2407","endLine":920,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":921,"column":73,"nodeType":"2406","messageId":"2407","endLine":921,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":922,"column":73,"nodeType":"2406","messageId":"2407","endLine":922,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":937,"column":73,"nodeType":"2406","messageId":"2407","endLine":937,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":938,"column":73,"nodeType":"2406","messageId":"2407","endLine":938,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":939,"column":73,"nodeType":"2406","messageId":"2407","endLine":939,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":940,"column":73,"nodeType":"2406","messageId":"2407","endLine":940,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":941,"column":73,"nodeType":"2406","messageId":"2407","endLine":941,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":942,"column":73,"nodeType":"2406","messageId":"2407","endLine":942,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":1000,"column":14,"nodeType":"2406","messageId":"2407","endLine":1000,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":1000,"column":44,"nodeType":"2406","messageId":"2407","endLine":1000,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2441","line":1069,"column":6,"nodeType":"2410","endLine":1069,"endColumn":24,"suggestions":"2450"},{"ruleId":"2408","severity":1,"message":"2451","line":1074,"column":6,"nodeType":"2410","endLine":1074,"endColumn":17,"suggestions":"2452"},{"ruleId":"2404","severity":1,"message":"2427","line":1131,"column":55,"nodeType":"2406","messageId":"2407","endLine":1131,"endColumn":57},{"ruleId":"2404","severity":1,"message":"2405","line":1135,"column":56,"nodeType":"2406","messageId":"2407","endLine":1135,"endColumn":58},{"ruleId":"2404","severity":1,"message":"2405","line":1155,"column":64,"nodeType":"2406","messageId":"2407","endLine":1155,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":1157,"column":29,"nodeType":"2406","messageId":"2407","endLine":1157,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2453","line":1206,"column":9,"nodeType":"2400","messageId":"2401","endLine":1206,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2454","line":1207,"column":9,"nodeType":"2400","messageId":"2401","endLine":1207,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2455","line":1214,"column":9,"nodeType":"2400","messageId":"2401","endLine":1214,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2456","line":1224,"column":20,"nodeType":"2400","messageId":"2401","endLine":1224,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2457","line":1229,"column":10,"nodeType":"2400","messageId":"2401","endLine":1229,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2458","line":1241,"column":10,"nodeType":"2400","messageId":"2401","endLine":1241,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2459","line":1283,"column":9,"nodeType":"2400","messageId":"2401","endLine":1283,"endColumn":11},{"ruleId":"2404","severity":1,"message":"2405","line":1284,"column":12,"nodeType":"2406","messageId":"2407","endLine":1284,"endColumn":14},{"ruleId":"2404","severity":1,"message":"2405","line":1287,"column":12,"nodeType":"2406","messageId":"2407","endLine":1287,"endColumn":14},{"ruleId":"2404","severity":1,"message":"2405","line":1340,"column":36,"nodeType":"2406","messageId":"2407","endLine":1340,"endColumn":38},{"ruleId":"2408","severity":1,"message":"2460","line":1341,"column":6,"nodeType":"2410","endLine":1341,"endColumn":16,"suggestions":"2461"},{"ruleId":"2404","severity":1,"message":"2405","line":1361,"column":20,"nodeType":"2406","messageId":"2407","endLine":1361,"endColumn":22},{"ruleId":"2408","severity":1,"message":"2462","line":1388,"column":6,"nodeType":"2410","endLine":1388,"endColumn":24,"suggestions":"2463"},{"ruleId":"2404","severity":1,"message":"2405","line":1415,"column":53,"nodeType":"2406","messageId":"2407","endLine":1415,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2427","line":1439,"column":20,"nodeType":"2406","messageId":"2407","endLine":1439,"endColumn":22},{"ruleId":"2464","severity":1,"message":"2465","line":1439,"column":33,"nodeType":"2466","messageId":"2467","endLine":1439,"endColumn":35},{"ruleId":"2464","severity":1,"message":"2465","line":1439,"column":58,"nodeType":"2466","messageId":"2467","endLine":1439,"endColumn":60},{"ruleId":"2464","severity":1,"message":"2468","line":1439,"column":58,"nodeType":"2466","messageId":"2467","endLine":1439,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2427","line":1439,"column":73,"nodeType":"2406","messageId":"2407","endLine":1439,"endColumn":75},{"ruleId":"2464","severity":1,"message":"2468","line":1439,"column":86,"nodeType":"2466","messageId":"2467","endLine":1439,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":1475,"column":33,"nodeType":"2406","messageId":"2407","endLine":1475,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":1479,"column":38,"nodeType":"2406","messageId":"2407","endLine":1479,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":1537,"column":13,"nodeType":"2406","messageId":"2407","endLine":1537,"endColumn":15},{"ruleId":"2408","severity":1,"message":"2469","line":1540,"column":6,"nodeType":"2410","endLine":1540,"endColumn":11,"suggestions":"2470"},{"ruleId":"2404","severity":1,"message":"2405","line":1557,"column":16,"nodeType":"2406","messageId":"2407","endLine":1557,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1560,"column":16,"nodeType":"2406","messageId":"2407","endLine":1560,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1566,"column":16,"nodeType":"2406","messageId":"2407","endLine":1566,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1569,"column":16,"nodeType":"2406","messageId":"2407","endLine":1569,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1576,"column":16,"nodeType":"2406","messageId":"2407","endLine":1576,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1579,"column":16,"nodeType":"2406","messageId":"2407","endLine":1579,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1586,"column":16,"nodeType":"2406","messageId":"2407","endLine":1586,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":1589,"column":16,"nodeType":"2406","messageId":"2407","endLine":1589,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2471","line":1614,"column":10,"nodeType":"2400","messageId":"2401","endLine":1614,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2472","line":1615,"column":10,"nodeType":"2400","messageId":"2401","endLine":1615,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":1660,"column":21,"nodeType":"2406","messageId":"2407","endLine":1660,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2427","line":1668,"column":33,"nodeType":"2406","messageId":"2407","endLine":1668,"endColumn":35},{"ruleId":"2408","severity":1,"message":"2448","line":1705,"column":6,"nodeType":"2410","endLine":1705,"endColumn":26,"suggestions":"2473"},{"ruleId":"2404","severity":1,"message":"2405","line":1737,"column":21,"nodeType":"2406","messageId":"2407","endLine":1737,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":1740,"column":21,"nodeType":"2406","messageId":"2407","endLine":1740,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":1745,"column":9,"nodeType":"2406","messageId":"2407","endLine":1745,"endColumn":11},{"ruleId":"2404","severity":1,"message":"2405","line":1760,"column":92,"nodeType":"2406","messageId":"2407","endLine":1760,"endColumn":94},{"ruleId":"2404","severity":1,"message":"2405","line":1770,"column":31,"nodeType":"2406","messageId":"2407","endLine":1770,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":1770,"column":54,"nodeType":"2406","messageId":"2407","endLine":1770,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2405","line":1772,"column":41,"nodeType":"2406","messageId":"2407","endLine":1772,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":1859,"column":40,"nodeType":"2406","messageId":"2407","endLine":1859,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":1859,"column":70,"nodeType":"2406","messageId":"2407","endLine":1859,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":1866,"column":107,"nodeType":"2406","messageId":"2407","endLine":1866,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2427","line":1878,"column":51,"nodeType":"2406","messageId":"2407","endLine":1878,"endColumn":53},{"ruleId":"2404","severity":1,"message":"2405","line":1879,"column":52,"nodeType":"2406","messageId":"2407","endLine":1879,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":1883,"column":109,"nodeType":"2406","messageId":"2407","endLine":1883,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2405","line":1910,"column":36,"nodeType":"2406","messageId":"2407","endLine":1910,"endColumn":38},{"ruleId":"2404","severity":1,"message":"2405","line":1910,"column":64,"nodeType":"2406","messageId":"2407","endLine":1910,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":1914,"column":135,"nodeType":"2406","messageId":"2407","endLine":1914,"endColumn":137},{"ruleId":"2415","severity":1,"message":"2416","line":1975,"column":31,"nodeType":"2414","endLine":1975,"endColumn":89},{"ruleId":"2404","severity":1,"message":"2427","line":2037,"column":67,"nodeType":"2406","messageId":"2407","endLine":2037,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2405","line":2041,"column":80,"nodeType":"2406","messageId":"2407","endLine":2041,"endColumn":82},{"ruleId":"2404","severity":1,"message":"2427","line":2060,"column":26,"nodeType":"2406","messageId":"2407","endLine":2060,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2427","line":2060,"column":54,"nodeType":"2406","messageId":"2407","endLine":2060,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2405","line":2060,"column":89,"nodeType":"2406","messageId":"2407","endLine":2060,"endColumn":91},{"ruleId":"2404","severity":1,"message":"2427","line":2078,"column":50,"nodeType":"2406","messageId":"2407","endLine":2078,"endColumn":52},{"ruleId":"2404","severity":1,"message":"2427","line":2079,"column":29,"nodeType":"2406","messageId":"2407","endLine":2079,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":2079,"column":72,"nodeType":"2406","messageId":"2407","endLine":2079,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2427","line":2138,"column":72,"nodeType":"2406","messageId":"2407","endLine":2138,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2427","line":2141,"column":67,"nodeType":"2406","messageId":"2407","endLine":2141,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2427","line":2147,"column":62,"nodeType":"2406","messageId":"2407","endLine":2147,"endColumn":64},{"ruleId":"2404","severity":1,"message":"2405","line":2156,"column":54,"nodeType":"2406","messageId":"2407","endLine":2156,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2405","line":2165,"column":74,"nodeType":"2406","messageId":"2407","endLine":2165,"endColumn":76},{"ruleId":"2415","severity":1,"message":"2416","line":2166,"column":31,"nodeType":"2414","endLine":2166,"endColumn":138},{"ruleId":"2404","severity":1,"message":"2405","line":2173,"column":218,"nodeType":"2406","messageId":"2407","endLine":2173,"endColumn":220},{"ruleId":"2404","severity":1,"message":"2427","line":2173,"column":284,"nodeType":"2406","messageId":"2407","endLine":2173,"endColumn":286},{"ruleId":"2404","severity":1,"message":"2405","line":2174,"column":218,"nodeType":"2406","messageId":"2407","endLine":2174,"endColumn":220},{"ruleId":"2404","severity":1,"message":"2427","line":2174,"column":284,"nodeType":"2406","messageId":"2407","endLine":2174,"endColumn":286},{"ruleId":"2404","severity":1,"message":"2405","line":2175,"column":220,"nodeType":"2406","messageId":"2407","endLine":2175,"endColumn":222},{"ruleId":"2404","severity":1,"message":"2427","line":2175,"column":286,"nodeType":"2406","messageId":"2407","endLine":2175,"endColumn":288},{"ruleId":"2404","severity":1,"message":"2405","line":2176,"column":224,"nodeType":"2406","messageId":"2407","endLine":2176,"endColumn":226},{"ruleId":"2404","severity":1,"message":"2427","line":2176,"column":290,"nodeType":"2406","messageId":"2407","endLine":2176,"endColumn":292},{"ruleId":"2404","severity":1,"message":"2405","line":2177,"column":226,"nodeType":"2406","messageId":"2407","endLine":2177,"endColumn":228},{"ruleId":"2404","severity":1,"message":"2427","line":2177,"column":292,"nodeType":"2406","messageId":"2407","endLine":2177,"endColumn":294},{"ruleId":"2404","severity":1,"message":"2405","line":2178,"column":236,"nodeType":"2406","messageId":"2407","endLine":2178,"endColumn":238},{"ruleId":"2404","severity":1,"message":"2427","line":2178,"column":302,"nodeType":"2406","messageId":"2407","endLine":2178,"endColumn":304},{"ruleId":"2404","severity":1,"message":"2405","line":2179,"column":222,"nodeType":"2406","messageId":"2407","endLine":2179,"endColumn":224},{"ruleId":"2404","severity":1,"message":"2427","line":2179,"column":288,"nodeType":"2406","messageId":"2407","endLine":2179,"endColumn":290},{"ruleId":"2404","severity":1,"message":"2405","line":2180,"column":238,"nodeType":"2406","messageId":"2407","endLine":2180,"endColumn":240},{"ruleId":"2404","severity":1,"message":"2427","line":2180,"column":304,"nodeType":"2406","messageId":"2407","endLine":2180,"endColumn":306},{"ruleId":"2404","severity":1,"message":"2405","line":2194,"column":76,"nodeType":"2406","messageId":"2407","endLine":2194,"endColumn":78},{"ruleId":"2415","severity":1,"message":"2416","line":2195,"column":33,"nodeType":"2414","endLine":2195,"endColumn":141},{"ruleId":"2404","severity":1,"message":"2405","line":2202,"column":241,"nodeType":"2406","messageId":"2407","endLine":2202,"endColumn":243},{"ruleId":"2404","severity":1,"message":"2427","line":2202,"column":307,"nodeType":"2406","messageId":"2407","endLine":2202,"endColumn":309},{"ruleId":"2404","severity":1,"message":"2405","line":2203,"column":241,"nodeType":"2406","messageId":"2407","endLine":2203,"endColumn":243},{"ruleId":"2404","severity":1,"message":"2427","line":2203,"column":307,"nodeType":"2406","messageId":"2407","endLine":2203,"endColumn":309},{"ruleId":"2404","severity":1,"message":"2405","line":2204,"column":243,"nodeType":"2406","messageId":"2407","endLine":2204,"endColumn":245},{"ruleId":"2404","severity":1,"message":"2427","line":2204,"column":309,"nodeType":"2406","messageId":"2407","endLine":2204,"endColumn":311},{"ruleId":"2404","severity":1,"message":"2405","line":2205,"column":247,"nodeType":"2406","messageId":"2407","endLine":2205,"endColumn":249},{"ruleId":"2404","severity":1,"message":"2427","line":2205,"column":313,"nodeType":"2406","messageId":"2407","endLine":2205,"endColumn":315},{"ruleId":"2404","severity":1,"message":"2405","line":2206,"column":249,"nodeType":"2406","messageId":"2407","endLine":2206,"endColumn":251},{"ruleId":"2404","severity":1,"message":"2427","line":2206,"column":315,"nodeType":"2406","messageId":"2407","endLine":2206,"endColumn":317},{"ruleId":"2404","severity":1,"message":"2405","line":2207,"column":259,"nodeType":"2406","messageId":"2407","endLine":2207,"endColumn":261},{"ruleId":"2404","severity":1,"message":"2427","line":2207,"column":325,"nodeType":"2406","messageId":"2407","endLine":2207,"endColumn":327},{"ruleId":"2404","severity":1,"message":"2405","line":2208,"column":245,"nodeType":"2406","messageId":"2407","endLine":2208,"endColumn":247},{"ruleId":"2404","severity":1,"message":"2427","line":2208,"column":311,"nodeType":"2406","messageId":"2407","endLine":2208,"endColumn":313},{"ruleId":"2404","severity":1,"message":"2405","line":2209,"column":261,"nodeType":"2406","messageId":"2407","endLine":2209,"endColumn":263},{"ruleId":"2404","severity":1,"message":"2427","line":2209,"column":327,"nodeType":"2406","messageId":"2407","endLine":2209,"endColumn":329},{"ruleId":"2404","severity":1,"message":"2405","line":2221,"column":52,"nodeType":"2406","messageId":"2407","endLine":2221,"endColumn":54},{"ruleId":"2415","severity":1,"message":"2416","line":2223,"column":21,"nodeType":"2414","endLine":2223,"endColumn":127},{"ruleId":"2404","severity":1,"message":"2427","line":2236,"column":109,"nodeType":"2406","messageId":"2407","endLine":2236,"endColumn":111},{"ruleId":"2398","severity":1,"message":"2474","line":2271,"column":9,"nodeType":"2400","messageId":"2401","endLine":2271,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2475","line":2272,"column":10,"nodeType":"2400","messageId":"2401","endLine":2272,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2476","line":2276,"column":10,"nodeType":"2400","messageId":"2401","endLine":2276,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2477","line":2276,"column":22,"nodeType":"2400","messageId":"2401","endLine":2276,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":2310,"column":28,"nodeType":"2406","messageId":"2407","endLine":2310,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":2310,"column":70,"nodeType":"2406","messageId":"2407","endLine":2310,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":2464,"column":43,"nodeType":"2406","messageId":"2407","endLine":2464,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":2470,"column":99,"nodeType":"2406","messageId":"2407","endLine":2470,"endColumn":101},{"ruleId":"2415","severity":1,"message":"2416","line":2481,"column":72,"nodeType":"2414","endLine":2481,"endColumn":130},{"ruleId":"2404","severity":1,"message":"2405","line":2500,"column":64,"nodeType":"2406","messageId":"2407","endLine":2500,"endColumn":66},{"ruleId":"2415","severity":1,"message":"2416","line":2523,"column":110,"nodeType":"2414","endLine":2523,"endColumn":190},{"ruleId":"2404","severity":1,"message":"2405","line":2578,"column":13,"nodeType":"2406","messageId":"2407","endLine":2578,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":2579,"column":18,"nodeType":"2406","messageId":"2407","endLine":2579,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":2584,"column":13,"nodeType":"2406","messageId":"2407","endLine":2584,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":2585,"column":17,"nodeType":"2406","messageId":"2407","endLine":2585,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":2627,"column":84,"nodeType":"2406","messageId":"2407","endLine":2627,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":2633,"column":114,"nodeType":"2406","messageId":"2407","endLine":2633,"endColumn":116},{"ruleId":"2404","severity":1,"message":"2405","line":2649,"column":34,"nodeType":"2406","messageId":"2407","endLine":2649,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":2654,"column":73,"nodeType":"2406","messageId":"2407","endLine":2654,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2655,"column":73,"nodeType":"2406","messageId":"2407","endLine":2655,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2656,"column":73,"nodeType":"2406","messageId":"2407","endLine":2656,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2657,"column":73,"nodeType":"2406","messageId":"2407","endLine":2657,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2658,"column":73,"nodeType":"2406","messageId":"2407","endLine":2658,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2659,"column":73,"nodeType":"2406","messageId":"2407","endLine":2659,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2677,"column":73,"nodeType":"2406","messageId":"2407","endLine":2677,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2678,"column":73,"nodeType":"2406","messageId":"2407","endLine":2678,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2679,"column":73,"nodeType":"2406","messageId":"2407","endLine":2679,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2680,"column":73,"nodeType":"2406","messageId":"2407","endLine":2680,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2681,"column":73,"nodeType":"2406","messageId":"2407","endLine":2681,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2682,"column":73,"nodeType":"2406","messageId":"2407","endLine":2682,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2713,"column":34,"nodeType":"2406","messageId":"2407","endLine":2713,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":2720,"column":73,"nodeType":"2406","messageId":"2407","endLine":2720,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2721,"column":73,"nodeType":"2406","messageId":"2407","endLine":2721,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2722,"column":73,"nodeType":"2406","messageId":"2407","endLine":2722,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2723,"column":73,"nodeType":"2406","messageId":"2407","endLine":2723,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2724,"column":73,"nodeType":"2406","messageId":"2407","endLine":2724,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2725,"column":73,"nodeType":"2406","messageId":"2407","endLine":2725,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2743,"column":73,"nodeType":"2406","messageId":"2407","endLine":2743,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2744,"column":73,"nodeType":"2406","messageId":"2407","endLine":2744,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2745,"column":73,"nodeType":"2406","messageId":"2407","endLine":2745,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2746,"column":73,"nodeType":"2406","messageId":"2407","endLine":2746,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2747,"column":73,"nodeType":"2406","messageId":"2407","endLine":2747,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2748,"column":73,"nodeType":"2406","messageId":"2407","endLine":2748,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":2822,"column":71,"nodeType":"2406","messageId":"2407","endLine":2822,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":2822,"column":126,"nodeType":"2406","messageId":"2407","endLine":2822,"endColumn":128},{"ruleId":"2404","severity":1,"message":"2405","line":2920,"column":14,"nodeType":"2406","messageId":"2407","endLine":2920,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":2920,"column":44,"nodeType":"2406","messageId":"2407","endLine":2920,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2441","line":2985,"column":6,"nodeType":"2410","endLine":2985,"endColumn":33,"suggestions":"2478"},{"ruleId":"2408","severity":1,"message":"2479","line":2990,"column":6,"nodeType":"2410","endLine":2990,"endColumn":17,"suggestions":"2480"},{"ruleId":"2404","severity":1,"message":"2405","line":3078,"column":114,"nodeType":"2406","messageId":"2407","endLine":3078,"endColumn":116},{"ruleId":"2404","severity":1,"message":"2427","line":3112,"column":61,"nodeType":"2406","messageId":"2407","endLine":3112,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":3115,"column":54,"nodeType":"2406","messageId":"2407","endLine":3115,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2405","line":3118,"column":90,"nodeType":"2406","messageId":"2407","endLine":3118,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2405","line":3146,"column":27,"nodeType":"2406","messageId":"2407","endLine":3146,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":3149,"column":71,"nodeType":"2406","messageId":"2407","endLine":3149,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3155,"column":106,"nodeType":"2406","messageId":"2407","endLine":3155,"endColumn":108},{"ruleId":"2404","severity":1,"message":"2405","line":3156,"column":26,"nodeType":"2406","messageId":"2407","endLine":3156,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":3222,"column":13,"nodeType":"2406","messageId":"2407","endLine":3222,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":3223,"column":18,"nodeType":"2406","messageId":"2407","endLine":3223,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":3228,"column":13,"nodeType":"2406","messageId":"2407","endLine":3228,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":3229,"column":17,"nodeType":"2406","messageId":"2407","endLine":3229,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":3298,"column":78,"nodeType":"2406","messageId":"2407","endLine":3298,"endColumn":80},{"ruleId":"2404","severity":1,"message":"2405","line":3315,"column":19,"nodeType":"2406","messageId":"2407","endLine":3315,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":3355,"column":32,"nodeType":"2406","messageId":"2407","endLine":3355,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":3374,"column":59,"nodeType":"2406","messageId":"2407","endLine":3374,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":3381,"column":59,"nodeType":"2406","messageId":"2407","endLine":3381,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":3388,"column":59,"nodeType":"2406","messageId":"2407","endLine":3388,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":3395,"column":59,"nodeType":"2406","messageId":"2407","endLine":3395,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":3402,"column":59,"nodeType":"2406","messageId":"2407","endLine":3402,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":3409,"column":59,"nodeType":"2406","messageId":"2407","endLine":3409,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":3461,"column":71,"nodeType":"2406","messageId":"2407","endLine":3461,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3467,"column":71,"nodeType":"2406","messageId":"2407","endLine":3467,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3475,"column":71,"nodeType":"2406","messageId":"2407","endLine":3475,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3481,"column":71,"nodeType":"2406","messageId":"2407","endLine":3481,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3489,"column":71,"nodeType":"2406","messageId":"2407","endLine":3489,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3495,"column":71,"nodeType":"2406","messageId":"2407","endLine":3495,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":3533,"column":109,"nodeType":"2406","messageId":"2407","endLine":3533,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2405","line":3583,"column":34,"nodeType":"2406","messageId":"2407","endLine":3583,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":3589,"column":73,"nodeType":"2406","messageId":"2407","endLine":3589,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3590,"column":73,"nodeType":"2406","messageId":"2407","endLine":3590,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3591,"column":73,"nodeType":"2406","messageId":"2407","endLine":3591,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3592,"column":73,"nodeType":"2406","messageId":"2407","endLine":3592,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3593,"column":73,"nodeType":"2406","messageId":"2407","endLine":3593,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3594,"column":73,"nodeType":"2406","messageId":"2407","endLine":3594,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3613,"column":73,"nodeType":"2406","messageId":"2407","endLine":3613,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3614,"column":73,"nodeType":"2406","messageId":"2407","endLine":3614,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3615,"column":73,"nodeType":"2406","messageId":"2407","endLine":3615,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3616,"column":73,"nodeType":"2406","messageId":"2407","endLine":3616,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3617,"column":73,"nodeType":"2406","messageId":"2407","endLine":3617,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3618,"column":73,"nodeType":"2406","messageId":"2407","endLine":3618,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":3626,"column":112,"nodeType":"2406","messageId":"2407","endLine":3626,"endColumn":114},{"ruleId":"2404","severity":1,"message":"2405","line":3704,"column":28,"nodeType":"2406","messageId":"2407","endLine":3704,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":3757,"column":30,"nodeType":"2406","messageId":"2407","endLine":3757,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":3757,"column":72,"nodeType":"2406","messageId":"2407","endLine":3757,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2405","line":3908,"column":34,"nodeType":"2406","messageId":"2407","endLine":3908,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":3968,"column":20,"nodeType":"2406","messageId":"2407","endLine":3968,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":4021,"column":22,"nodeType":"2406","messageId":"2407","endLine":4021,"endColumn":24},{"ruleId":"2404","severity":1,"message":"2405","line":4149,"column":40,"nodeType":"2406","messageId":"2407","endLine":4149,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":4162,"column":18,"nodeType":"2406","messageId":"2407","endLine":4162,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2427","line":4163,"column":41,"nodeType":"2406","messageId":"2407","endLine":4163,"endColumn":43},{"ruleId":"2398","severity":1,"message":"2481","line":4180,"column":15,"nodeType":"2400","messageId":"2401","endLine":4180,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":4208,"column":18,"nodeType":"2406","messageId":"2407","endLine":4208,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":4208,"column":35,"nodeType":"2406","messageId":"2407","endLine":4208,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2427","line":4209,"column":41,"nodeType":"2406","messageId":"2407","endLine":4209,"endColumn":43},{"ruleId":"2482","severity":1,"message":"2483","line":4219,"column":21,"nodeType":"2406","messageId":"2484","endLine":4219,"endColumn":22},{"ruleId":"2482","severity":1,"message":"2483","line":4223,"column":40,"nodeType":"2406","messageId":"2484","endLine":4223,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":4258,"column":28,"nodeType":"2406","messageId":"2407","endLine":4258,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":4258,"column":70,"nodeType":"2406","messageId":"2407","endLine":4258,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":4265,"column":16,"nodeType":"2406","messageId":"2407","endLine":4265,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":4268,"column":16,"nodeType":"2406","messageId":"2407","endLine":4268,"endColumn":18},{"ruleId":"2408","severity":1,"message":"2485","line":4276,"column":6,"nodeType":"2410","endLine":4276,"endColumn":17,"suggestions":"2486"},{"ruleId":"2408","severity":1,"message":"2487","line":4281,"column":6,"nodeType":"2410","endLine":4281,"endColumn":17,"suggestions":"2488"},{"ruleId":"2408","severity":1,"message":"2489","line":4284,"column":6,"nodeType":"2410","endLine":4284,"endColumn":19,"suggestions":"2490"},{"ruleId":"2408","severity":1,"message":"2426","line":4284,"column":7,"nodeType":"2491","endLine":4284,"endColumn":18},{"ruleId":"2408","severity":1,"message":"2492","line":4288,"column":6,"nodeType":"2410","endLine":4288,"endColumn":35,"suggestions":"2493"},{"ruleId":"2408","severity":1,"message":"2426","line":4288,"column":7,"nodeType":"2491","endLine":4288,"endColumn":21},{"ruleId":"2408","severity":1,"message":"2426","line":4288,"column":23,"nodeType":"2491","endLine":4288,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":4306,"column":52,"nodeType":"2406","messageId":"2407","endLine":4306,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":4306,"column":117,"nodeType":"2406","messageId":"2407","endLine":4306,"endColumn":119},{"ruleId":"2404","severity":1,"message":"2405","line":4324,"column":40,"nodeType":"2406","messageId":"2407","endLine":4324,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":4339,"column":90,"nodeType":"2406","messageId":"2407","endLine":4339,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2405","line":4365,"column":47,"nodeType":"2406","messageId":"2407","endLine":4365,"endColumn":49},{"ruleId":"2404","severity":1,"message":"2405","line":4373,"column":101,"nodeType":"2406","messageId":"2407","endLine":4373,"endColumn":103},{"ruleId":"2404","severity":1,"message":"2405","line":4373,"column":169,"nodeType":"2406","messageId":"2407","endLine":4373,"endColumn":171},{"ruleId":"2404","severity":1,"message":"2405","line":4429,"column":64,"nodeType":"2406","messageId":"2407","endLine":4429,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":4430,"column":66,"nodeType":"2406","messageId":"2407","endLine":4430,"endColumn":68},{"ruleId":"2404","severity":1,"message":"2405","line":4446,"column":69,"nodeType":"2406","messageId":"2407","endLine":4446,"endColumn":71},{"ruleId":"2404","severity":1,"message":"2405","line":4466,"column":60,"nodeType":"2406","messageId":"2407","endLine":4466,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":4466,"column":141,"nodeType":"2406","messageId":"2407","endLine":4466,"endColumn":143},{"ruleId":"2404","severity":1,"message":"2405","line":4486,"column":47,"nodeType":"2406","messageId":"2407","endLine":4486,"endColumn":49},{"ruleId":"2404","severity":1,"message":"2405","line":4494,"column":109,"nodeType":"2406","messageId":"2407","endLine":4494,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2405","line":4543,"column":68,"nodeType":"2406","messageId":"2407","endLine":4543,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2405","line":4556,"column":68,"nodeType":"2406","messageId":"2407","endLine":4556,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2405","line":4569,"column":68,"nodeType":"2406","messageId":"2407","endLine":4569,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2405","line":4598,"column":29,"nodeType":"2406","messageId":"2407","endLine":4598,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":4598,"column":49,"nodeType":"2406","messageId":"2407","endLine":4598,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2405","line":4825,"column":14,"nodeType":"2406","messageId":"2407","endLine":4825,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":4825,"column":44,"nodeType":"2406","messageId":"2407","endLine":4825,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2441","line":4893,"column":6,"nodeType":"2410","endLine":4893,"endColumn":33,"suggestions":"2494"},{"ruleId":"2408","severity":1,"message":"2495","line":4898,"column":6,"nodeType":"2410","endLine":4898,"endColumn":17,"suggestions":"2496"},{"ruleId":"2404","severity":1,"message":"2427","line":4964,"column":61,"nodeType":"2406","messageId":"2407","endLine":4964,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":4967,"column":52,"nodeType":"2406","messageId":"2407","endLine":4967,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":4969,"column":88,"nodeType":"2406","messageId":"2407","endLine":4969,"endColumn":90},{"ruleId":"2404","severity":1,"message":"2405","line":4978,"column":23,"nodeType":"2406","messageId":"2407","endLine":4978,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":4981,"column":69,"nodeType":"2406","messageId":"2407","endLine":4981,"endColumn":71},{"ruleId":"2404","severity":1,"message":"2405","line":5036,"column":13,"nodeType":"2406","messageId":"2407","endLine":5036,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":5037,"column":18,"nodeType":"2406","messageId":"2407","endLine":5037,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":5042,"column":13,"nodeType":"2406","messageId":"2407","endLine":5042,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":5043,"column":17,"nodeType":"2406","messageId":"2407","endLine":5043,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":5108,"column":69,"nodeType":"2406","messageId":"2407","endLine":5108,"endColumn":71},{"ruleId":"2404","severity":1,"message":"2405","line":5125,"column":19,"nodeType":"2406","messageId":"2407","endLine":5125,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":5144,"column":34,"nodeType":"2406","messageId":"2407","endLine":5144,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":5149,"column":73,"nodeType":"2406","messageId":"2407","endLine":5149,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5150,"column":73,"nodeType":"2406","messageId":"2407","endLine":5150,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5151,"column":73,"nodeType":"2406","messageId":"2407","endLine":5151,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5152,"column":73,"nodeType":"2406","messageId":"2407","endLine":5152,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5153,"column":73,"nodeType":"2406","messageId":"2407","endLine":5153,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5154,"column":73,"nodeType":"2406","messageId":"2407","endLine":5154,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5198,"column":71,"nodeType":"2406","messageId":"2407","endLine":5198,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5204,"column":71,"nodeType":"2406","messageId":"2407","endLine":5204,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5210,"column":71,"nodeType":"2406","messageId":"2407","endLine":5210,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5216,"column":71,"nodeType":"2406","messageId":"2407","endLine":5216,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5222,"column":71,"nodeType":"2406","messageId":"2407","endLine":5222,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5228,"column":71,"nodeType":"2406","messageId":"2407","endLine":5228,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5295,"column":32,"nodeType":"2406","messageId":"2407","endLine":5295,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":5314,"column":59,"nodeType":"2406","messageId":"2407","endLine":5314,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":5319,"column":73,"nodeType":"2406","messageId":"2407","endLine":5319,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5320,"column":73,"nodeType":"2406","messageId":"2407","endLine":5320,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5321,"column":73,"nodeType":"2406","messageId":"2407","endLine":5321,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5322,"column":73,"nodeType":"2406","messageId":"2407","endLine":5322,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5323,"column":73,"nodeType":"2406","messageId":"2407","endLine":5323,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5367,"column":71,"nodeType":"2406","messageId":"2407","endLine":5367,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5373,"column":71,"nodeType":"2406","messageId":"2407","endLine":5373,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5379,"column":71,"nodeType":"2406","messageId":"2407","endLine":5379,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":5384,"column":73,"nodeType":"2406","messageId":"2407","endLine":5384,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5385,"column":73,"nodeType":"2406","messageId":"2407","endLine":5385,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":5386,"column":73,"nodeType":"2406","messageId":"2407","endLine":5386,"endColumn":75},{"ruleId":"2398","severity":1,"message":"2497","line":5408,"column":9,"nodeType":"2400","messageId":"2401","endLine":5408,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2498","line":5409,"column":9,"nodeType":"2400","messageId":"2401","endLine":5409,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":5452,"column":28,"nodeType":"2406","messageId":"2407","endLine":5452,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":5452,"column":70,"nodeType":"2406","messageId":"2407","endLine":5452,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":5554,"column":34,"nodeType":"2406","messageId":"2407","endLine":5554,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":5621,"column":43,"nodeType":"2406","messageId":"2407","endLine":5621,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":5629,"column":57,"nodeType":"2406","messageId":"2407","endLine":5629,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2405","line":5677,"column":43,"nodeType":"2406","messageId":"2407","endLine":5677,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":5685,"column":66,"nodeType":"2406","messageId":"2407","endLine":5685,"endColumn":68},{"ruleId":"2415","severity":1,"message":"2416","line":5707,"column":17,"nodeType":"2414","endLine":5709,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":5729,"column":63,"nodeType":"2406","messageId":"2407","endLine":5729,"endColumn":65},{"ruleId":"2398","severity":1,"message":"2499","line":5853,"column":9,"nodeType":"2400","messageId":"2401","endLine":5853,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":5884,"column":14,"nodeType":"2406","messageId":"2407","endLine":5884,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":5884,"column":44,"nodeType":"2406","messageId":"2407","endLine":5884,"endColumn":46},{"ruleId":"2404","severity":1,"message":"2405","line":5930,"column":45,"nodeType":"2406","messageId":"2407","endLine":5930,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":5939,"column":24,"nodeType":"2406","messageId":"2407","endLine":5939,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":5939,"column":58,"nodeType":"2406","messageId":"2407","endLine":5939,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":5981,"column":26,"nodeType":"2406","messageId":"2407","endLine":5981,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":5981,"column":60,"nodeType":"2406","messageId":"2407","endLine":5981,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":6014,"column":21,"nodeType":"2406","messageId":"2407","endLine":6014,"endColumn":23},{"ruleId":"2408","severity":1,"message":"2500","line":6050,"column":6,"nodeType":"2410","endLine":6050,"endColumn":29,"suggestions":"2501"},{"ruleId":"2408","severity":1,"message":"2502","line":6054,"column":6,"nodeType":"2410","endLine":6054,"endColumn":20,"suggestions":"2503"},{"ruleId":"2404","severity":1,"message":"2405","line":6099,"column":26,"nodeType":"2406","messageId":"2407","endLine":6099,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":6099,"column":60,"nodeType":"2406","messageId":"2407","endLine":6099,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":6119,"column":123,"nodeType":"2406","messageId":"2407","endLine":6119,"endColumn":125},{"ruleId":"2415","severity":1,"message":"2416","line":6119,"column":132,"nodeType":"2414","endLine":6119,"endColumn":195},{"ruleId":"2404","severity":1,"message":"2405","line":6121,"column":47,"nodeType":"2406","messageId":"2407","endLine":6121,"endColumn":49},{"ruleId":"2415","severity":1,"message":"2416","line":6122,"column":110,"nodeType":"2414","endLine":6122,"endColumn":166},{"ruleId":"2404","severity":1,"message":"2405","line":6125,"column":25,"nodeType":"2406","messageId":"2407","endLine":6125,"endColumn":27},{"ruleId":"2404","severity":1,"message":"2405","line":6126,"column":156,"nodeType":"2406","messageId":"2407","endLine":6126,"endColumn":158},{"ruleId":"2404","severity":1,"message":"2405","line":6199,"column":14,"nodeType":"2406","messageId":"2407","endLine":6199,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":6199,"column":44,"nodeType":"2406","messageId":"2407","endLine":6199,"endColumn":46},{"ruleId":"2404","severity":1,"message":"2405","line":6238,"column":46,"nodeType":"2406","messageId":"2407","endLine":6238,"endColumn":48},{"ruleId":"2404","severity":1,"message":"2405","line":6247,"column":25,"nodeType":"2406","messageId":"2407","endLine":6247,"endColumn":27},{"ruleId":"2404","severity":1,"message":"2405","line":6247,"column":60,"nodeType":"2406","messageId":"2407","endLine":6247,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":6295,"column":27,"nodeType":"2406","messageId":"2407","endLine":6295,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":6295,"column":62,"nodeType":"2406","messageId":"2407","endLine":6295,"endColumn":64},{"ruleId":"2408","severity":1,"message":"2504","line":6354,"column":6,"nodeType":"2410","endLine":6354,"endColumn":29,"suggestions":"2505"},{"ruleId":"2408","severity":1,"message":"2502","line":6358,"column":6,"nodeType":"2410","endLine":6358,"endColumn":21,"suggestions":"2506"},{"ruleId":"2404","severity":1,"message":"2405","line":6361,"column":21,"nodeType":"2406","messageId":"2407","endLine":6361,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":6412,"column":27,"nodeType":"2406","messageId":"2407","endLine":6412,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":6412,"column":62,"nodeType":"2406","messageId":"2407","endLine":6412,"endColumn":64},{"ruleId":"2404","severity":1,"message":"2405","line":6434,"column":123,"nodeType":"2406","messageId":"2407","endLine":6434,"endColumn":125},{"ruleId":"2415","severity":1,"message":"2416","line":6434,"column":132,"nodeType":"2414","endLine":6434,"endColumn":195},{"ruleId":"2404","severity":1,"message":"2405","line":6436,"column":47,"nodeType":"2406","messageId":"2407","endLine":6436,"endColumn":49},{"ruleId":"2415","severity":1,"message":"2416","line":6436,"column":210,"nodeType":"2414","endLine":6436,"endColumn":266},{"ruleId":"2404","severity":1,"message":"2405","line":6437,"column":26,"nodeType":"2406","messageId":"2407","endLine":6437,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":6438,"column":156,"nodeType":"2406","messageId":"2407","endLine":6438,"endColumn":158},{"ruleId":"2404","severity":1,"message":"2405","line":6523,"column":37,"nodeType":"2406","messageId":"2407","endLine":6523,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2405","line":6620,"column":37,"nodeType":"2406","messageId":"2407","endLine":6620,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2405","line":6773,"column":14,"nodeType":"2406","messageId":"2407","endLine":6773,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":6773,"column":44,"nodeType":"2406","messageId":"2407","endLine":6773,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2507","line":6804,"column":6,"nodeType":"2410","endLine":6804,"endColumn":17,"suggestions":"2508"},{"ruleId":"2404","severity":1,"message":"2405","line":6806,"column":17,"nodeType":"2406","messageId":"2407","endLine":6806,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":6809,"column":17,"nodeType":"2406","messageId":"2407","endLine":6809,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":6814,"column":17,"nodeType":"2406","messageId":"2407","endLine":6814,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":6817,"column":17,"nodeType":"2406","messageId":"2407","endLine":6817,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2509","line":6833,"column":9,"nodeType":"2400","messageId":"2401","endLine":6833,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":6856,"column":85,"nodeType":"2406","messageId":"2407","endLine":6856,"endColumn":87},{"ruleId":"2404","severity":1,"message":"2405","line":6869,"column":95,"nodeType":"2406","messageId":"2407","endLine":6869,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2405","line":6898,"column":24,"nodeType":"2406","messageId":"2407","endLine":6898,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":6898,"column":56,"nodeType":"2406","messageId":"2407","endLine":6898,"endColumn":58},{"ruleId":"2404","severity":1,"message":"2405","line":6909,"column":45,"nodeType":"2406","messageId":"2407","endLine":6909,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":6910,"column":107,"nodeType":"2406","messageId":"2407","endLine":6910,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2405","line":6924,"column":26,"nodeType":"2406","messageId":"2407","endLine":6924,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":6927,"column":60,"nodeType":"2406","messageId":"2407","endLine":6927,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":7001,"column":14,"nodeType":"2406","messageId":"2407","endLine":7001,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":7001,"column":44,"nodeType":"2406","messageId":"2407","endLine":7001,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2510","line":7032,"column":6,"nodeType":"2410","endLine":7032,"endColumn":17,"suggestions":"2511"},{"ruleId":"2404","severity":1,"message":"2405","line":7034,"column":16,"nodeType":"2406","messageId":"2407","endLine":7034,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":7037,"column":16,"nodeType":"2406","messageId":"2407","endLine":7037,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":7042,"column":16,"nodeType":"2406","messageId":"2407","endLine":7042,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":7045,"column":16,"nodeType":"2406","messageId":"2407","endLine":7045,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2509","line":7064,"column":9,"nodeType":"2400","messageId":"2401","endLine":7064,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":7083,"column":114,"nodeType":"2406","messageId":"2407","endLine":7083,"endColumn":116},{"ruleId":"2404","severity":1,"message":"2405","line":7093,"column":96,"nodeType":"2406","messageId":"2407","endLine":7093,"endColumn":98},{"ruleId":"2404","severity":1,"message":"2405","line":7122,"column":25,"nodeType":"2406","messageId":"2407","endLine":7122,"endColumn":27},{"ruleId":"2404","severity":1,"message":"2405","line":7122,"column":58,"nodeType":"2406","messageId":"2407","endLine":7122,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":7133,"column":45,"nodeType":"2406","messageId":"2407","endLine":7133,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":7134,"column":108,"nodeType":"2406","messageId":"2407","endLine":7134,"endColumn":110},{"ruleId":"2404","severity":1,"message":"2405","line":7149,"column":26,"nodeType":"2406","messageId":"2407","endLine":7149,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":7152,"column":59,"nodeType":"2406","messageId":"2407","endLine":7152,"endColumn":61},{"ruleId":"2398","severity":1,"message":"2512","line":7200,"column":9,"nodeType":"2400","messageId":"2401","endLine":7200,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":7219,"column":15,"nodeType":"2406","messageId":"2407","endLine":7219,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":7222,"column":14,"nodeType":"2406","messageId":"2407","endLine":7222,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":7252,"column":78,"nodeType":"2406","messageId":"2407","endLine":7252,"endColumn":80},{"ruleId":"2404","severity":1,"message":"2405","line":7252,"column":120,"nodeType":"2406","messageId":"2407","endLine":7252,"endColumn":122},{"ruleId":"2404","severity":1,"message":"2405","line":7253,"column":77,"nodeType":"2406","messageId":"2407","endLine":7253,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2405","line":7253,"column":126,"nodeType":"2406","messageId":"2407","endLine":7253,"endColumn":128},{"ruleId":"2404","severity":1,"message":"2405","line":7254,"column":77,"nodeType":"2406","messageId":"2407","endLine":7254,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2405","line":7254,"column":127,"nodeType":"2406","messageId":"2407","endLine":7254,"endColumn":129},{"ruleId":"2404","severity":1,"message":"2405","line":7255,"column":77,"nodeType":"2406","messageId":"2407","endLine":7255,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2405","line":7255,"column":127,"nodeType":"2406","messageId":"2407","endLine":7255,"endColumn":129},{"ruleId":"2398","severity":1,"message":"2513","line":7285,"column":9,"nodeType":"2400","messageId":"2401","endLine":7285,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2514","line":7310,"column":21,"nodeType":"2400","messageId":"2401","endLine":7310,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":7335,"column":14,"nodeType":"2406","messageId":"2407","endLine":7335,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":7335,"column":44,"nodeType":"2406","messageId":"2407","endLine":7335,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2441","line":7391,"column":6,"nodeType":"2410","endLine":7391,"endColumn":29,"suggestions":"2515"},{"ruleId":"2408","severity":1,"message":"2516","line":7396,"column":6,"nodeType":"2410","endLine":7396,"endColumn":29,"suggestions":"2517"},{"ruleId":"2398","severity":1,"message":"2518","line":7398,"column":9,"nodeType":"2400","messageId":"2401","endLine":7398,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":7410,"column":18,"nodeType":"2406","messageId":"2407","endLine":7410,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":7420,"column":18,"nodeType":"2406","messageId":"2407","endLine":7420,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2427","line":7458,"column":101,"nodeType":"2406","messageId":"2407","endLine":7458,"endColumn":103},{"ruleId":"2404","severity":1,"message":"2427","line":7458,"column":152,"nodeType":"2406","messageId":"2407","endLine":7458,"endColumn":154},{"ruleId":"2404","severity":1,"message":"2427","line":7493,"column":50,"nodeType":"2406","messageId":"2407","endLine":7493,"endColumn":52},{"ruleId":"2404","severity":1,"message":"2405","line":7497,"column":49,"nodeType":"2406","messageId":"2407","endLine":7497,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2405","line":7499,"column":85,"nodeType":"2406","messageId":"2407","endLine":7499,"endColumn":87},{"ruleId":"2404","severity":1,"message":"2405","line":7509,"column":28,"nodeType":"2406","messageId":"2407","endLine":7509,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":7509,"column":50,"nodeType":"2406","messageId":"2407","endLine":7509,"endColumn":52},{"ruleId":"2404","severity":1,"message":"2405","line":7529,"column":22,"nodeType":"2406","messageId":"2407","endLine":7529,"endColumn":24},{"ruleId":"2404","severity":1,"message":"2405","line":7532,"column":67,"nodeType":"2406","messageId":"2407","endLine":7532,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2405","line":7626,"column":14,"nodeType":"2406","messageId":"2407","endLine":7626,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":7626,"column":44,"nodeType":"2406","messageId":"2407","endLine":7626,"endColumn":46},{"ruleId":"2519","severity":1,"message":"2520","line":7665,"column":13,"nodeType":"2521","messageId":"2522","endLine":7665,"endColumn":140,"fix":"2523"},{"ruleId":"2408","severity":1,"message":"2441","line":7680,"column":6,"nodeType":"2410","endLine":7680,"endColumn":29,"suggestions":"2524"},{"ruleId":"2408","severity":1,"message":"2525","line":7685,"column":6,"nodeType":"2410","endLine":7685,"endColumn":29,"suggestions":"2526"},{"ruleId":"2404","severity":1,"message":"2405","line":7706,"column":18,"nodeType":"2406","messageId":"2407","endLine":7706,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":7716,"column":18,"nodeType":"2406","messageId":"2407","endLine":7716,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":7744,"column":114,"nodeType":"2406","messageId":"2407","endLine":7744,"endColumn":116},{"ruleId":"2404","severity":1,"message":"2427","line":7745,"column":102,"nodeType":"2406","messageId":"2407","endLine":7745,"endColumn":104},{"ruleId":"2404","severity":1,"message":"2427","line":7745,"column":155,"nodeType":"2406","messageId":"2407","endLine":7745,"endColumn":157},{"ruleId":"2404","severity":1,"message":"2427","line":7776,"column":52,"nodeType":"2406","messageId":"2407","endLine":7776,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":7780,"column":49,"nodeType":"2406","messageId":"2407","endLine":7780,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2405","line":7782,"column":85,"nodeType":"2406","messageId":"2407","endLine":7782,"endColumn":87},{"ruleId":"2404","severity":1,"message":"2405","line":7803,"column":22,"nodeType":"2406","messageId":"2407","endLine":7803,"endColumn":24},{"ruleId":"2404","severity":1,"message":"2405","line":7806,"column":66,"nodeType":"2406","messageId":"2407","endLine":7806,"endColumn":68},{"ruleId":"2398","severity":1,"message":"2527","line":7861,"column":10,"nodeType":"2400","messageId":"2401","endLine":7861,"endColumn":12},{"ruleId":"2398","severity":1,"message":"2528","line":7861,"column":14,"nodeType":"2400","messageId":"2401","endLine":7861,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":7869,"column":13,"nodeType":"2406","messageId":"2407","endLine":7869,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":7870,"column":18,"nodeType":"2406","messageId":"2407","endLine":7870,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":7875,"column":13,"nodeType":"2406","messageId":"2407","endLine":7875,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":7876,"column":17,"nodeType":"2406","messageId":"2407","endLine":7876,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":7915,"column":84,"nodeType":"2406","messageId":"2407","endLine":7915,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":7920,"column":112,"nodeType":"2406","messageId":"2407","endLine":7920,"endColumn":114},{"ruleId":"2404","severity":1,"message":"2405","line":7936,"column":34,"nodeType":"2406","messageId":"2407","endLine":7936,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":7941,"column":73,"nodeType":"2406","messageId":"2407","endLine":7941,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":7942,"column":73,"nodeType":"2406","messageId":"2407","endLine":7942,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":7943,"column":73,"nodeType":"2406","messageId":"2407","endLine":7943,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":7944,"column":73,"nodeType":"2406","messageId":"2407","endLine":7944,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":7945,"column":73,"nodeType":"2406","messageId":"2407","endLine":7945,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":7946,"column":73,"nodeType":"2406","messageId":"2407","endLine":7946,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":7964,"column":65,"nodeType":"2406","messageId":"2407","endLine":7964,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":7965,"column":65,"nodeType":"2406","messageId":"2407","endLine":7965,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":7966,"column":65,"nodeType":"2406","messageId":"2407","endLine":7966,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":7967,"column":65,"nodeType":"2406","messageId":"2407","endLine":7967,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":7968,"column":65,"nodeType":"2406","messageId":"2407","endLine":7968,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":7969,"column":65,"nodeType":"2406","messageId":"2407","endLine":7969,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":7999,"column":34,"nodeType":"2406","messageId":"2407","endLine":7999,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":8004,"column":73,"nodeType":"2406","messageId":"2407","endLine":8004,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8005,"column":73,"nodeType":"2406","messageId":"2407","endLine":8005,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8006,"column":73,"nodeType":"2406","messageId":"2407","endLine":8006,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8007,"column":73,"nodeType":"2406","messageId":"2407","endLine":8007,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8008,"column":73,"nodeType":"2406","messageId":"2407","endLine":8008,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8009,"column":73,"nodeType":"2406","messageId":"2407","endLine":8009,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8028,"column":65,"nodeType":"2406","messageId":"2407","endLine":8028,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8029,"column":65,"nodeType":"2406","messageId":"2407","endLine":8029,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8030,"column":65,"nodeType":"2406","messageId":"2407","endLine":8030,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8031,"column":65,"nodeType":"2406","messageId":"2407","endLine":8031,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8032,"column":65,"nodeType":"2406","messageId":"2407","endLine":8032,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8033,"column":65,"nodeType":"2406","messageId":"2407","endLine":8033,"endColumn":67},{"ruleId":"2398","severity":1,"message":"2527","line":8059,"column":10,"nodeType":"2400","messageId":"2401","endLine":8059,"endColumn":12},{"ruleId":"2398","severity":1,"message":"2528","line":8059,"column":14,"nodeType":"2400","messageId":"2401","endLine":8059,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":8067,"column":13,"nodeType":"2406","messageId":"2407","endLine":8067,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":8068,"column":18,"nodeType":"2406","messageId":"2407","endLine":8068,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":8073,"column":13,"nodeType":"2406","messageId":"2407","endLine":8073,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":8074,"column":17,"nodeType":"2406","messageId":"2407","endLine":8074,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2529","line":8093,"column":12,"nodeType":"2400","messageId":"2401","endLine":8093,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":8123,"column":84,"nodeType":"2406","messageId":"2407","endLine":8123,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":8128,"column":112,"nodeType":"2406","messageId":"2407","endLine":8128,"endColumn":114},{"ruleId":"2404","severity":1,"message":"2405","line":8144,"column":34,"nodeType":"2406","messageId":"2407","endLine":8144,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":8149,"column":73,"nodeType":"2406","messageId":"2407","endLine":8149,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8150,"column":73,"nodeType":"2406","messageId":"2407","endLine":8150,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8151,"column":73,"nodeType":"2406","messageId":"2407","endLine":8151,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8152,"column":73,"nodeType":"2406","messageId":"2407","endLine":8152,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8153,"column":73,"nodeType":"2406","messageId":"2407","endLine":8153,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8154,"column":73,"nodeType":"2406","messageId":"2407","endLine":8154,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8172,"column":65,"nodeType":"2406","messageId":"2407","endLine":8172,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8173,"column":65,"nodeType":"2406","messageId":"2407","endLine":8173,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8174,"column":65,"nodeType":"2406","messageId":"2407","endLine":8174,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8175,"column":65,"nodeType":"2406","messageId":"2407","endLine":8175,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8176,"column":65,"nodeType":"2406","messageId":"2407","endLine":8176,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8177,"column":65,"nodeType":"2406","messageId":"2407","endLine":8177,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8208,"column":34,"nodeType":"2406","messageId":"2407","endLine":8208,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":8213,"column":73,"nodeType":"2406","messageId":"2407","endLine":8213,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8214,"column":73,"nodeType":"2406","messageId":"2407","endLine":8214,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8215,"column":73,"nodeType":"2406","messageId":"2407","endLine":8215,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8216,"column":73,"nodeType":"2406","messageId":"2407","endLine":8216,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8217,"column":73,"nodeType":"2406","messageId":"2407","endLine":8217,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8218,"column":73,"nodeType":"2406","messageId":"2407","endLine":8218,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":8237,"column":65,"nodeType":"2406","messageId":"2407","endLine":8237,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8238,"column":65,"nodeType":"2406","messageId":"2407","endLine":8238,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8239,"column":65,"nodeType":"2406","messageId":"2407","endLine":8239,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8240,"column":65,"nodeType":"2406","messageId":"2407","endLine":8240,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8241,"column":65,"nodeType":"2406","messageId":"2407","endLine":8241,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":8242,"column":65,"nodeType":"2406","messageId":"2407","endLine":8242,"endColumn":67},{"ruleId":"2398","severity":1,"message":"2530","line":8284,"column":10,"nodeType":"2400","messageId":"2401","endLine":8284,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2531","line":8285,"column":10,"nodeType":"2400","messageId":"2401","endLine":8285,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2532","line":8285,"column":20,"nodeType":"2400","messageId":"2401","endLine":8285,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2533","line":8286,"column":10,"nodeType":"2400","messageId":"2401","endLine":8286,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2534","line":8286,"column":14,"nodeType":"2400","messageId":"2401","endLine":8286,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2535","line":8287,"column":10,"nodeType":"2400","messageId":"2401","endLine":8287,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2536","line":8287,"column":22,"nodeType":"2400","messageId":"2401","endLine":8287,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":8293,"column":16,"nodeType":"2406","messageId":"2407","endLine":8293,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":8296,"column":16,"nodeType":"2406","messageId":"2407","endLine":8296,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":8302,"column":16,"nodeType":"2406","messageId":"2407","endLine":8302,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":8305,"column":16,"nodeType":"2406","messageId":"2407","endLine":8305,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":8357,"column":34,"nodeType":"2406","messageId":"2407","endLine":8357,"endColumn":36},{"ruleId":"2408","severity":1,"message":"2462","line":8373,"column":6,"nodeType":"2410","endLine":8373,"endColumn":24,"suggestions":"2537"},{"ruleId":"2404","severity":1,"message":"2405","line":8390,"column":53,"nodeType":"2406","messageId":"2407","endLine":8390,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2405","line":8451,"column":19,"nodeType":"2406","messageId":"2407","endLine":8451,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":8460,"column":20,"nodeType":"2406","messageId":"2407","endLine":8460,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":8460,"column":32,"nodeType":"2406","messageId":"2407","endLine":8460,"endColumn":34},{"ruleId":"2408","severity":1,"message":"2538","line":8476,"column":5,"nodeType":"2410","endLine":8476,"endColumn":7,"suggestions":"2539"},{"ruleId":"2404","severity":1,"message":"2405","line":8480,"column":88,"nodeType":"2406","messageId":"2407","endLine":8480,"endColumn":90},{"ruleId":"2404","severity":1,"message":"2405","line":8510,"column":115,"nodeType":"2406","messageId":"2407","endLine":8510,"endColumn":117},{"ruleId":"2404","severity":1,"message":"2405","line":8558,"column":40,"nodeType":"2406","messageId":"2407","endLine":8558,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":8558,"column":70,"nodeType":"2406","messageId":"2407","endLine":8558,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":8565,"column":107,"nodeType":"2406","messageId":"2407","endLine":8565,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2427","line":8577,"column":51,"nodeType":"2406","messageId":"2407","endLine":8577,"endColumn":53},{"ruleId":"2404","severity":1,"message":"2405","line":8578,"column":52,"nodeType":"2406","messageId":"2407","endLine":8578,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":8582,"column":109,"nodeType":"2406","messageId":"2407","endLine":8582,"endColumn":111},{"ruleId":"2415","severity":1,"message":"2416","line":8629,"column":31,"nodeType":"2414","endLine":8629,"endColumn":88},{"ruleId":"2408","severity":1,"message":"2540","line":8705,"column":4,"nodeType":"2410","endLine":8705,"endColumn":6,"suggestions":"2541"},{"ruleId":"2404","severity":1,"message":"2405","line":8743,"column":14,"nodeType":"2406","messageId":"2407","endLine":8743,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":8743,"column":44,"nodeType":"2406","messageId":"2407","endLine":8743,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2441","line":8798,"column":6,"nodeType":"2410","endLine":8798,"endColumn":32,"suggestions":"2542"},{"ruleId":"2408","severity":1,"message":"2543","line":8803,"column":6,"nodeType":"2410","endLine":8803,"endColumn":32,"suggestions":"2544"},{"ruleId":"2404","severity":1,"message":"2405","line":8817,"column":18,"nodeType":"2406","messageId":"2407","endLine":8817,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":8827,"column":18,"nodeType":"2406","messageId":"2407","endLine":8827,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2427","line":8888,"column":95,"nodeType":"2406","messageId":"2407","endLine":8888,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2427","line":8888,"column":136,"nodeType":"2406","messageId":"2407","endLine":8888,"endColumn":138},{"ruleId":"2404","severity":1,"message":"2405","line":8891,"column":95,"nodeType":"2406","messageId":"2407","endLine":8891,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2427","line":8924,"column":40,"nodeType":"2406","messageId":"2407","endLine":8924,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":8928,"column":46,"nodeType":"2406","messageId":"2407","endLine":8928,"endColumn":48},{"ruleId":"2404","severity":1,"message":"2405","line":8930,"column":82,"nodeType":"2406","messageId":"2407","endLine":8930,"endColumn":84},{"ruleId":"2404","severity":1,"message":"2405","line":8934,"column":58,"nodeType":"2406","messageId":"2407","endLine":8934,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":8942,"column":31,"nodeType":"2406","messageId":"2407","endLine":8942,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":8942,"column":54,"nodeType":"2406","messageId":"2407","endLine":8942,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2405","line":8949,"column":50,"nodeType":"2406","messageId":"2407","endLine":8949,"endColumn":52},{"ruleId":"2404","severity":1,"message":"2405","line":8961,"column":19,"nodeType":"2406","messageId":"2407","endLine":8961,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":8964,"column":63,"nodeType":"2406","messageId":"2407","endLine":8964,"endColumn":65},{"ruleId":"2398","severity":1,"message":"2527","line":9021,"column":10,"nodeType":"2400","messageId":"2401","endLine":9021,"endColumn":12},{"ruleId":"2398","severity":1,"message":"2528","line":9021,"column":14,"nodeType":"2400","messageId":"2401","endLine":9021,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":9029,"column":13,"nodeType":"2406","messageId":"2407","endLine":9029,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":9030,"column":18,"nodeType":"2406","messageId":"2407","endLine":9030,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":9035,"column":13,"nodeType":"2406","messageId":"2407","endLine":9035,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":9036,"column":17,"nodeType":"2406","messageId":"2407","endLine":9036,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":9075,"column":84,"nodeType":"2406","messageId":"2407","endLine":9075,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":9080,"column":112,"nodeType":"2406","messageId":"2407","endLine":9080,"endColumn":114},{"ruleId":"2404","severity":1,"message":"2405","line":9096,"column":34,"nodeType":"2406","messageId":"2407","endLine":9096,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":9101,"column":73,"nodeType":"2406","messageId":"2407","endLine":9101,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9102,"column":73,"nodeType":"2406","messageId":"2407","endLine":9102,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9103,"column":73,"nodeType":"2406","messageId":"2407","endLine":9103,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9104,"column":73,"nodeType":"2406","messageId":"2407","endLine":9104,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9105,"column":73,"nodeType":"2406","messageId":"2407","endLine":9105,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9106,"column":73,"nodeType":"2406","messageId":"2407","endLine":9106,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9124,"column":65,"nodeType":"2406","messageId":"2407","endLine":9124,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9125,"column":65,"nodeType":"2406","messageId":"2407","endLine":9125,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9126,"column":65,"nodeType":"2406","messageId":"2407","endLine":9126,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9127,"column":65,"nodeType":"2406","messageId":"2407","endLine":9127,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9128,"column":65,"nodeType":"2406","messageId":"2407","endLine":9128,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9129,"column":65,"nodeType":"2406","messageId":"2407","endLine":9129,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9160,"column":34,"nodeType":"2406","messageId":"2407","endLine":9160,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":9165,"column":73,"nodeType":"2406","messageId":"2407","endLine":9165,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9166,"column":73,"nodeType":"2406","messageId":"2407","endLine":9166,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9167,"column":73,"nodeType":"2406","messageId":"2407","endLine":9167,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9168,"column":73,"nodeType":"2406","messageId":"2407","endLine":9168,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9169,"column":73,"nodeType":"2406","messageId":"2407","endLine":9169,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9170,"column":73,"nodeType":"2406","messageId":"2407","endLine":9170,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2405","line":9189,"column":65,"nodeType":"2406","messageId":"2407","endLine":9189,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9190,"column":65,"nodeType":"2406","messageId":"2407","endLine":9190,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9191,"column":65,"nodeType":"2406","messageId":"2407","endLine":9191,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9192,"column":65,"nodeType":"2406","messageId":"2407","endLine":9192,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9193,"column":65,"nodeType":"2406","messageId":"2407","endLine":9193,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":9194,"column":65,"nodeType":"2406","messageId":"2407","endLine":9194,"endColumn":67},{"ruleId":"2398","severity":1,"message":"2530","line":9232,"column":10,"nodeType":"2400","messageId":"2401","endLine":9232,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2531","line":9233,"column":10,"nodeType":"2400","messageId":"2401","endLine":9233,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2532","line":9233,"column":20,"nodeType":"2400","messageId":"2401","endLine":9233,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2533","line":9234,"column":10,"nodeType":"2400","messageId":"2401","endLine":9234,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2534","line":9234,"column":14,"nodeType":"2400","messageId":"2401","endLine":9234,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2535","line":9235,"column":10,"nodeType":"2400","messageId":"2401","endLine":9235,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2536","line":9235,"column":22,"nodeType":"2400","messageId":"2401","endLine":9235,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":9241,"column":16,"nodeType":"2406","messageId":"2407","endLine":9241,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":9244,"column":16,"nodeType":"2406","messageId":"2407","endLine":9244,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":9250,"column":16,"nodeType":"2406","messageId":"2407","endLine":9250,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":9253,"column":16,"nodeType":"2406","messageId":"2407","endLine":9253,"endColumn":18},{"ruleId":"2545","severity":1,"message":"2546","line":9292,"column":7,"nodeType":"2547","messageId":"2407","endLine":9292,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":9305,"column":34,"nodeType":"2406","messageId":"2407","endLine":9305,"endColumn":36},{"ruleId":"2408","severity":1,"message":"2462","line":9320,"column":6,"nodeType":"2410","endLine":9320,"endColumn":24,"suggestions":"2548"},{"ruleId":"2404","severity":1,"message":"2405","line":9337,"column":53,"nodeType":"2406","messageId":"2407","endLine":9337,"endColumn":55},{"ruleId":"2549","severity":1,"message":"2550","line":9394,"column":12,"nodeType":"2400","messageId":"2551","endLine":9394,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":9410,"column":53,"nodeType":"2406","messageId":"2407","endLine":9410,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2405","line":9420,"column":20,"nodeType":"2406","messageId":"2407","endLine":9420,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":9420,"column":32,"nodeType":"2406","messageId":"2407","endLine":9420,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":9439,"column":88,"nodeType":"2406","messageId":"2407","endLine":9439,"endColumn":90},{"ruleId":"2404","severity":1,"message":"2405","line":9446,"column":67,"nodeType":"2406","messageId":"2407","endLine":9446,"endColumn":69},{"ruleId":"2415","severity":1,"message":"2416","line":9449,"column":41,"nodeType":"2414","endLine":9449,"endColumn":103},{"ruleId":"2404","severity":1,"message":"2405","line":9497,"column":40,"nodeType":"2406","messageId":"2407","endLine":9497,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":9497,"column":70,"nodeType":"2406","messageId":"2407","endLine":9497,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":9504,"column":107,"nodeType":"2406","messageId":"2407","endLine":9504,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2427","line":9516,"column":51,"nodeType":"2406","messageId":"2407","endLine":9516,"endColumn":53},{"ruleId":"2404","severity":1,"message":"2405","line":9517,"column":52,"nodeType":"2406","messageId":"2407","endLine":9517,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":9521,"column":109,"nodeType":"2406","messageId":"2407","endLine":9521,"endColumn":111},{"ruleId":"2415","severity":1,"message":"2416","line":9568,"column":31,"nodeType":"2414","endLine":9568,"endColumn":88},{"ruleId":"2398","severity":1,"message":"2552","line":1,"column":50,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":56},{"ruleId":"2398","severity":1,"message":"2553","line":1,"column":57,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":68},{"ruleId":"2398","severity":1,"message":"2554","line":1,"column":69,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":86},{"ruleId":"2398","severity":1,"message":"2555","line":7,"column":9,"nodeType":"2400","messageId":"2401","endLine":7,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2556","line":10,"column":8,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":14},{"ruleId":"2404","severity":1,"message":"2405","line":64,"column":31,"nodeType":"2406","messageId":"2407","endLine":64,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":91,"column":31,"nodeType":"2406","messageId":"2407","endLine":91,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2557","line":96,"column":9,"nodeType":"2400","messageId":"2401","endLine":96,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2445","line":104,"column":12,"nodeType":"2400","messageId":"2401","endLine":104,"endColumn":13},{"ruleId":"2408","severity":1,"message":"2558","line":121,"column":6,"nodeType":"2410","endLine":121,"endColumn":22,"suggestions":"2559"},{"ruleId":"2408","severity":1,"message":"2560","line":125,"column":6,"nodeType":"2410","endLine":125,"endColumn":8,"suggestions":"2561"},{"ruleId":"2404","severity":1,"message":"2405","line":279,"column":33,"nodeType":"2406","messageId":"2407","endLine":279,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":292,"column":37,"nodeType":"2406","messageId":"2407","endLine":292,"endColumn":39},{"ruleId":"2398","severity":1,"message":"2562","line":329,"column":9,"nodeType":"2400","messageId":"2401","endLine":329,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":363,"column":31,"nodeType":"2406","messageId":"2407","endLine":363,"endColumn":33},{"ruleId":"2408","severity":1,"message":"2563","line":379,"column":6,"nodeType":"2410","endLine":379,"endColumn":8,"suggestions":"2564"},{"ruleId":"2404","severity":1,"message":"2405","line":382,"column":16,"nodeType":"2406","messageId":"2407","endLine":382,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":385,"column":16,"nodeType":"2406","messageId":"2407","endLine":385,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":391,"column":16,"nodeType":"2406","messageId":"2407","endLine":391,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":394,"column":16,"nodeType":"2406","messageId":"2407","endLine":394,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":401,"column":16,"nodeType":"2406","messageId":"2407","endLine":401,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":404,"column":16,"nodeType":"2406","messageId":"2407","endLine":404,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":411,"column":16,"nodeType":"2406","messageId":"2407","endLine":411,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":414,"column":16,"nodeType":"2406","messageId":"2407","endLine":414,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":461,"column":33,"nodeType":"2406","messageId":"2407","endLine":461,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":491,"column":33,"nodeType":"2406","messageId":"2407","endLine":491,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":510,"column":15,"nodeType":"2406","messageId":"2407","endLine":510,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":525,"column":35,"nodeType":"2406","messageId":"2407","endLine":525,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2405","line":527,"column":74,"nodeType":"2406","messageId":"2407","endLine":527,"endColumn":76},{"ruleId":"2404","severity":1,"message":"2405","line":546,"column":15,"nodeType":"2406","messageId":"2407","endLine":546,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":561,"column":35,"nodeType":"2406","messageId":"2407","endLine":561,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2405","line":563,"column":74,"nodeType":"2406","messageId":"2407","endLine":563,"endColumn":76},{"ruleId":"2408","severity":1,"message":"2565","line":608,"column":3,"nodeType":"2410","endLine":608,"endColumn":5,"suggestions":"2566"},{"ruleId":"2404","severity":1,"message":"2405","line":616,"column":88,"nodeType":"2406","messageId":"2407","endLine":616,"endColumn":90},{"ruleId":"2404","severity":1,"message":"2405","line":622,"column":117,"nodeType":"2406","messageId":"2407","endLine":622,"endColumn":119},{"ruleId":"2404","severity":1,"message":"2405","line":743,"column":73,"nodeType":"2406","messageId":"2407","endLine":743,"endColumn":75},{"ruleId":"2415","severity":1,"message":"2416","line":744,"column":31,"nodeType":"2414","endLine":744,"endColumn":144},{"ruleId":"2415","severity":1,"message":"2416","line":754,"column":25,"nodeType":"2414","endLine":754,"endColumn":128},{"ruleId":"2404","severity":1,"message":"2405","line":811,"column":74,"nodeType":"2406","messageId":"2407","endLine":811,"endColumn":76},{"ruleId":"2415","severity":1,"message":"2416","line":812,"column":31,"nodeType":"2414","endLine":812,"endColumn":138},{"ruleId":"2404","severity":1,"message":"2405","line":819,"column":202,"nodeType":"2406","messageId":"2407","endLine":819,"endColumn":204},{"ruleId":"2404","severity":1,"message":"2427","line":819,"column":268,"nodeType":"2406","messageId":"2407","endLine":819,"endColumn":270},{"ruleId":"2404","severity":1,"message":"2405","line":820,"column":206,"nodeType":"2406","messageId":"2407","endLine":820,"endColumn":208},{"ruleId":"2404","severity":1,"message":"2427","line":820,"column":272,"nodeType":"2406","messageId":"2407","endLine":820,"endColumn":274},{"ruleId":"2404","severity":1,"message":"2427","line":822,"column":165,"nodeType":"2406","messageId":"2407","endLine":822,"endColumn":167},{"ruleId":"2404","severity":1,"message":"2427","line":822,"column":226,"nodeType":"2406","messageId":"2407","endLine":822,"endColumn":228},{"ruleId":"2404","severity":1,"message":"2405","line":824,"column":222,"nodeType":"2406","messageId":"2407","endLine":824,"endColumn":224},{"ruleId":"2404","severity":1,"message":"2427","line":824,"column":288,"nodeType":"2406","messageId":"2407","endLine":824,"endColumn":290},{"ruleId":"2404","severity":1,"message":"2405","line":841,"column":202,"nodeType":"2406","messageId":"2407","endLine":841,"endColumn":204},{"ruleId":"2404","severity":1,"message":"2427","line":841,"column":268,"nodeType":"2406","messageId":"2407","endLine":841,"endColumn":270},{"ruleId":"2404","severity":1,"message":"2405","line":842,"column":204,"nodeType":"2406","messageId":"2407","endLine":842,"endColumn":206},{"ruleId":"2404","severity":1,"message":"2427","line":842,"column":270,"nodeType":"2406","messageId":"2407","endLine":842,"endColumn":272},{"ruleId":"2404","severity":1,"message":"2405","line":843,"column":208,"nodeType":"2406","messageId":"2407","endLine":843,"endColumn":210},{"ruleId":"2404","severity":1,"message":"2427","line":843,"column":274,"nodeType":"2406","messageId":"2407","endLine":843,"endColumn":276},{"ruleId":"2404","severity":1,"message":"2405","line":844,"column":210,"nodeType":"2406","messageId":"2407","endLine":844,"endColumn":212},{"ruleId":"2404","severity":1,"message":"2427","line":844,"column":276,"nodeType":"2406","messageId":"2407","endLine":844,"endColumn":278},{"ruleId":"2404","severity":1,"message":"2405","line":845,"column":220,"nodeType":"2406","messageId":"2407","endLine":845,"endColumn":222},{"ruleId":"2404","severity":1,"message":"2427","line":845,"column":286,"nodeType":"2406","messageId":"2407","endLine":845,"endColumn":288},{"ruleId":"2415","severity":1,"message":"2416","line":855,"column":21,"nodeType":"2414","endLine":855,"endColumn":127},{"ruleId":"2415","severity":1,"message":"2416","line":882,"column":21,"nodeType":"2414","endLine":882,"endColumn":141},{"ruleId":"2415","severity":1,"message":"2416","line":908,"column":96,"nodeType":"2414","endLine":908,"endColumn":175},{"ruleId":"2415","severity":1,"message":"2416","line":921,"column":52,"nodeType":"2414","endLine":921,"endColumn":209},{"ruleId":"2404","severity":1,"message":"2405","line":952,"column":138,"nodeType":"2406","messageId":"2407","endLine":952,"endColumn":140},{"ruleId":"2415","severity":1,"message":"2416","line":954,"column":158,"nodeType":"2414","endLine":954,"endColumn":263},{"ruleId":"2415","severity":1,"message":"2416","line":957,"column":158,"nodeType":"2414","endLine":957,"endColumn":263},{"ruleId":"2415","severity":1,"message":"2416","line":965,"column":153,"nodeType":"2414","endLine":965,"endColumn":257},{"ruleId":"2415","severity":1,"message":"2416","line":968,"column":154,"nodeType":"2414","endLine":968,"endColumn":258},{"ruleId":"2464","severity":1,"message":"2465","line":15,"column":26,"nodeType":"2466","messageId":"2467","endLine":15,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":15,"column":43,"nodeType":"2466","messageId":"2467","endLine":15,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":20,"column":26,"nodeType":"2466","messageId":"2467","endLine":20,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":20,"column":43,"nodeType":"2466","messageId":"2467","endLine":20,"endColumn":45},{"ruleId":"2549","severity":1,"message":"2567","line":58,"column":21,"nodeType":"2400","messageId":"2551","endLine":58,"endColumn":33},{"ruleId":"2408","severity":1,"message":"2568","line":100,"column":8,"nodeType":"2410","endLine":100,"endColumn":32,"suggestions":"2569"},{"ruleId":"2464","severity":1,"message":"2465","line":120,"column":26,"nodeType":"2466","messageId":"2467","endLine":120,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":120,"column":43,"nodeType":"2466","messageId":"2467","endLine":120,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":125,"column":26,"nodeType":"2466","messageId":"2467","endLine":125,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":125,"column":43,"nodeType":"2466","messageId":"2467","endLine":125,"endColumn":45},{"ruleId":"2549","severity":1,"message":"2567","line":165,"column":21,"nodeType":"2400","messageId":"2551","endLine":165,"endColumn":33},{"ruleId":"2408","severity":1,"message":"2570","line":205,"column":8,"nodeType":"2410","endLine":205,"endColumn":33,"suggestions":"2571"},{"ruleId":"2464","severity":1,"message":"2465","line":226,"column":26,"nodeType":"2466","messageId":"2467","endLine":226,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":226,"column":43,"nodeType":"2466","messageId":"2467","endLine":226,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":231,"column":26,"nodeType":"2466","messageId":"2467","endLine":231,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":231,"column":43,"nodeType":"2466","messageId":"2467","endLine":231,"endColumn":45},{"ruleId":"2549","severity":1,"message":"2567","line":286,"column":21,"nodeType":"2400","messageId":"2551","endLine":286,"endColumn":33},{"ruleId":"2408","severity":1,"message":"2572","line":327,"column":8,"nodeType":"2410","endLine":327,"endColumn":28,"suggestions":"2573"},{"ruleId":"2464","severity":1,"message":"2465","line":347,"column":26,"nodeType":"2466","messageId":"2467","endLine":347,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":347,"column":43,"nodeType":"2466","messageId":"2467","endLine":347,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":352,"column":26,"nodeType":"2466","messageId":"2467","endLine":352,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":352,"column":43,"nodeType":"2466","messageId":"2467","endLine":352,"endColumn":45},{"ruleId":"2549","severity":1,"message":"2567","line":396,"column":21,"nodeType":"2400","messageId":"2551","endLine":396,"endColumn":33},{"ruleId":"2408","severity":1,"message":"2574","line":436,"column":8,"nodeType":"2410","endLine":436,"endColumn":29,"suggestions":"2575"},{"ruleId":"2464","severity":1,"message":"2465","line":456,"column":26,"nodeType":"2466","messageId":"2467","endLine":456,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":456,"column":43,"nodeType":"2466","messageId":"2467","endLine":456,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":461,"column":26,"nodeType":"2466","messageId":"2467","endLine":461,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":461,"column":43,"nodeType":"2466","messageId":"2467","endLine":461,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2427","line":471,"column":56,"nodeType":"2406","messageId":"2407","endLine":471,"endColumn":58},{"ruleId":"2404","severity":1,"message":"2427","line":472,"column":75,"nodeType":"2406","messageId":"2407","endLine":472,"endColumn":77},{"ruleId":"2404","severity":1,"message":"2427","line":472,"column":134,"nodeType":"2406","messageId":"2407","endLine":472,"endColumn":136},{"ruleId":"2404","severity":1,"message":"2427","line":473,"column":63,"nodeType":"2406","messageId":"2407","endLine":473,"endColumn":65},{"ruleId":"2404","severity":1,"message":"2405","line":473,"column":107,"nodeType":"2406","messageId":"2407","endLine":473,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2427","line":474,"column":129,"nodeType":"2406","messageId":"2407","endLine":474,"endColumn":131},{"ruleId":"2404","severity":1,"message":"2427","line":475,"column":74,"nodeType":"2406","messageId":"2407","endLine":475,"endColumn":76},{"ruleId":"2549","severity":1,"message":"2567","line":499,"column":21,"nodeType":"2400","messageId":"2551","endLine":499,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2427","line":502,"column":63,"nodeType":"2406","messageId":"2407","endLine":502,"endColumn":65},{"ruleId":"2404","severity":1,"message":"2405","line":502,"column":107,"nodeType":"2406","messageId":"2407","endLine":502,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2427","line":503,"column":75,"nodeType":"2406","messageId":"2407","endLine":503,"endColumn":77},{"ruleId":"2404","severity":1,"message":"2427","line":503,"column":133,"nodeType":"2406","messageId":"2407","endLine":503,"endColumn":135},{"ruleId":"2404","severity":1,"message":"2427","line":504,"column":72,"nodeType":"2406","messageId":"2407","endLine":504,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2427","line":504,"column":128,"nodeType":"2406","messageId":"2407","endLine":504,"endColumn":130},{"ruleId":"2404","severity":1,"message":"2427","line":505,"column":74,"nodeType":"2406","messageId":"2407","endLine":505,"endColumn":76},{"ruleId":"2408","severity":1,"message":"2576","line":541,"column":8,"nodeType":"2410","endLine":541,"endColumn":29,"suggestions":"2577"},{"ruleId":"2464","severity":1,"message":"2465","line":562,"column":26,"nodeType":"2466","messageId":"2467","endLine":562,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":562,"column":43,"nodeType":"2466","messageId":"2467","endLine":562,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":567,"column":26,"nodeType":"2466","messageId":"2467","endLine":567,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":567,"column":43,"nodeType":"2466","messageId":"2467","endLine":567,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2427","line":577,"column":57,"nodeType":"2406","messageId":"2407","endLine":577,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2427","line":578,"column":76,"nodeType":"2406","messageId":"2407","endLine":578,"endColumn":78},{"ruleId":"2404","severity":1,"message":"2427","line":578,"column":136,"nodeType":"2406","messageId":"2407","endLine":578,"endColumn":138},{"ruleId":"2404","severity":1,"message":"2427","line":579,"column":64,"nodeType":"2406","messageId":"2407","endLine":579,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":579,"column":109,"nodeType":"2406","messageId":"2407","endLine":579,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2427","line":580,"column":131,"nodeType":"2406","messageId":"2407","endLine":580,"endColumn":133},{"ruleId":"2404","severity":1,"message":"2427","line":581,"column":75,"nodeType":"2406","messageId":"2407","endLine":581,"endColumn":77},{"ruleId":"2549","severity":1,"message":"2567","line":605,"column":21,"nodeType":"2400","messageId":"2551","endLine":605,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2427","line":608,"column":64,"nodeType":"2406","messageId":"2407","endLine":608,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":608,"column":109,"nodeType":"2406","messageId":"2407","endLine":608,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2427","line":609,"column":76,"nodeType":"2406","messageId":"2407","endLine":609,"endColumn":78},{"ruleId":"2404","severity":1,"message":"2427","line":609,"column":135,"nodeType":"2406","messageId":"2407","endLine":609,"endColumn":137},{"ruleId":"2404","severity":1,"message":"2427","line":610,"column":73,"nodeType":"2406","messageId":"2407","endLine":610,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2427","line":610,"column":130,"nodeType":"2406","messageId":"2407","endLine":610,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2427","line":611,"column":75,"nodeType":"2406","messageId":"2407","endLine":611,"endColumn":77},{"ruleId":"2408","severity":1,"message":"2578","line":646,"column":8,"nodeType":"2410","endLine":646,"endColumn":30,"suggestions":"2579"},{"ruleId":"2464","severity":1,"message":"2465","line":666,"column":26,"nodeType":"2466","messageId":"2467","endLine":666,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":666,"column":43,"nodeType":"2466","messageId":"2467","endLine":666,"endColumn":45},{"ruleId":"2464","severity":1,"message":"2465","line":671,"column":26,"nodeType":"2466","messageId":"2467","endLine":671,"endColumn":28},{"ruleId":"2464","severity":1,"message":"2465","line":671,"column":43,"nodeType":"2466","messageId":"2467","endLine":671,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2427","line":681,"column":53,"nodeType":"2406","messageId":"2407","endLine":681,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2427","line":682,"column":58,"nodeType":"2406","messageId":"2407","endLine":682,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":682,"column":97,"nodeType":"2406","messageId":"2407","endLine":682,"endColumn":99},{"ruleId":"2404","severity":1,"message":"2427","line":683,"column":61,"nodeType":"2406","messageId":"2407","endLine":683,"endColumn":63},{"ruleId":"2549","severity":1,"message":"2567","line":707,"column":21,"nodeType":"2400","messageId":"2551","endLine":707,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2427","line":710,"column":58,"nodeType":"2406","messageId":"2407","endLine":710,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":710,"column":97,"nodeType":"2406","messageId":"2407","endLine":710,"endColumn":99},{"ruleId":"2404","severity":1,"message":"2427","line":711,"column":61,"nodeType":"2406","messageId":"2407","endLine":711,"endColumn":63},{"ruleId":"2408","severity":1,"message":"2580","line":747,"column":8,"nodeType":"2410","endLine":747,"endColumn":24,"suggestions":"2581"},{"ruleId":"2398","severity":1,"message":"2582","line":1,"column":20,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2552","line":1,"column":43,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":49},{"ruleId":"2398","severity":1,"message":"2583","line":2,"column":8,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2584","line":3,"column":8,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2585","line":4,"column":10,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2586","line":4,"column":15,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":4,"column":26,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2588","line":4,"column":39,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":48},{"ruleId":"2398","severity":1,"message":"2589","line":4,"column":63,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":14,"column":43,"nodeType":"2406","messageId":"2407","endLine":14,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":14,"column":86,"nodeType":"2406","messageId":"2407","endLine":14,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":18,"column":47,"nodeType":"2406","messageId":"2407","endLine":18,"endColumn":49},{"ruleId":"2404","severity":1,"message":"2405","line":18,"column":95,"nodeType":"2406","messageId":"2407","endLine":18,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2405","line":18,"column":143,"nodeType":"2406","messageId":"2407","endLine":18,"endColumn":145},{"ruleId":"2404","severity":1,"message":"2405","line":22,"column":47,"nodeType":"2406","messageId":"2407","endLine":22,"endColumn":49},{"ruleId":"2404","severity":1,"message":"2405","line":22,"column":95,"nodeType":"2406","messageId":"2407","endLine":22,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2405","line":22,"column":143,"nodeType":"2406","messageId":"2407","endLine":22,"endColumn":145},{"ruleId":"2404","severity":1,"message":"2405","line":26,"column":40,"nodeType":"2406","messageId":"2407","endLine":26,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":26,"column":81,"nodeType":"2406","messageId":"2407","endLine":26,"endColumn":83},{"ruleId":"2404","severity":1,"message":"2405","line":71,"column":71,"nodeType":"2406","messageId":"2407","endLine":71,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":74,"column":90,"nodeType":"2406","messageId":"2407","endLine":74,"endColumn":92},{"ruleId":"2398","severity":1,"message":"2590","line":1,"column":17,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":30},{"ruleId":"2398","severity":1,"message":"2591","line":21,"column":10,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":30},{"ruleId":"2398","severity":1,"message":"2592","line":38,"column":10,"nodeType":"2400","messageId":"2401","endLine":38,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2593","line":53,"column":10,"nodeType":"2400","messageId":"2401","endLine":53,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2594","line":73,"column":12,"nodeType":"2400","messageId":"2401","endLine":73,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2427","line":92,"column":67,"nodeType":"2406","messageId":"2407","endLine":92,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2427","line":108,"column":75,"nodeType":"2406","messageId":"2407","endLine":108,"endColumn":77},{"ruleId":"2408","severity":1,"message":"2595","line":117,"column":5,"nodeType":"2410","endLine":117,"endColumn":7,"suggestions":"2596"},{"ruleId":"2408","severity":1,"message":"2597","line":122,"column":6,"nodeType":"2410","endLine":122,"endColumn":23,"suggestions":"2598"},{"ruleId":"2404","severity":1,"message":"2427","line":137,"column":26,"nodeType":"2406","messageId":"2407","endLine":137,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":139,"column":20,"nodeType":"2406","messageId":"2407","endLine":139,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":151,"column":18,"nodeType":"2406","messageId":"2407","endLine":151,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":276,"column":18,"nodeType":"2406","messageId":"2407","endLine":276,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":352,"column":15,"nodeType":"2406","messageId":"2407","endLine":352,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":368,"column":72,"nodeType":"2406","messageId":"2407","endLine":368,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2405","line":402,"column":15,"nodeType":"2406","messageId":"2407","endLine":402,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":418,"column":72,"nodeType":"2406","messageId":"2407","endLine":418,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2427","line":475,"column":28,"nodeType":"2406","messageId":"2407","endLine":475,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":475,"column":68,"nodeType":"2406","messageId":"2407","endLine":475,"endColumn":70},{"ruleId":"2408","severity":1,"message":"2434","line":482,"column":7,"nodeType":"2410","endLine":482,"endColumn":9,"suggestions":"2599"},{"ruleId":"2404","severity":1,"message":"2405","line":504,"column":32,"nodeType":"2406","messageId":"2407","endLine":504,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":531,"column":15,"nodeType":"2406","messageId":"2407","endLine":531,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":534,"column":15,"nodeType":"2406","messageId":"2407","endLine":534,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2405","line":566,"column":28,"nodeType":"2406","messageId":"2407","endLine":566,"endColumn":30},{"ruleId":"2415","severity":1,"message":"2416","line":567,"column":24,"nodeType":"2414","endLine":567,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":582,"column":27,"nodeType":"2406","messageId":"2407","endLine":582,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":585,"column":90,"nodeType":"2406","messageId":"2407","endLine":585,"endColumn":92},{"ruleId":"2415","severity":1,"message":"2416","line":589,"column":27,"nodeType":"2414","endLine":589,"endColumn":268},{"ruleId":"2415","severity":1,"message":"2416","line":591,"column":27,"nodeType":"2414","endLine":591,"endColumn":264},{"ruleId":"2404","severity":1,"message":"2405","line":597,"column":35,"nodeType":"2406","messageId":"2407","endLine":597,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2405","line":602,"column":60,"nodeType":"2406","messageId":"2407","endLine":602,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":613,"column":28,"nodeType":"2406","messageId":"2407","endLine":613,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":648,"column":28,"nodeType":"2406","messageId":"2407","endLine":648,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":658,"column":97,"nodeType":"2406","messageId":"2407","endLine":658,"endColumn":99},{"ruleId":"2404","severity":1,"message":"2405","line":673,"column":182,"nodeType":"2406","messageId":"2407","endLine":673,"endColumn":184},{"ruleId":"2415","severity":1,"message":"2416","line":673,"column":188,"nodeType":"2414","endLine":673,"endColumn":304},{"ruleId":"2404","severity":1,"message":"2405","line":687,"column":81,"nodeType":"2406","messageId":"2407","endLine":687,"endColumn":83},{"ruleId":"2404","severity":1,"message":"2405","line":709,"column":45,"nodeType":"2406","messageId":"2407","endLine":709,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":712,"column":230,"nodeType":"2406","messageId":"2407","endLine":712,"endColumn":232},{"ruleId":"2404","severity":1,"message":"2405","line":752,"column":195,"nodeType":"2406","messageId":"2407","endLine":752,"endColumn":197},{"ruleId":"2404","severity":1,"message":"2405","line":761,"column":100,"nodeType":"2406","messageId":"2407","endLine":761,"endColumn":102},{"ruleId":"2404","severity":1,"message":"2405","line":767,"column":41,"nodeType":"2406","messageId":"2407","endLine":767,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":771,"column":70,"nodeType":"2406","messageId":"2407","endLine":771,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":780,"column":204,"nodeType":"2406","messageId":"2407","endLine":780,"endColumn":206},{"ruleId":"2404","severity":1,"message":"2405","line":786,"column":48,"nodeType":"2406","messageId":"2407","endLine":786,"endColumn":50},{"ruleId":"2404","severity":1,"message":"2405","line":789,"column":133,"nodeType":"2406","messageId":"2407","endLine":789,"endColumn":135},{"ruleId":"2404","severity":1,"message":"2405","line":796,"column":41,"nodeType":"2406","messageId":"2407","endLine":796,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":799,"column":210,"nodeType":"2406","messageId":"2407","endLine":799,"endColumn":212},{"ruleId":"2404","severity":1,"message":"2405","line":807,"column":38,"nodeType":"2406","messageId":"2407","endLine":807,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":810,"column":206,"nodeType":"2406","messageId":"2407","endLine":810,"endColumn":208},{"ruleId":"2404","severity":1,"message":"2405","line":817,"column":38,"nodeType":"2406","messageId":"2407","endLine":817,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2405","line":820,"column":205,"nodeType":"2406","messageId":"2407","endLine":820,"endColumn":207},{"ruleId":"2417","severity":1,"message":"2436","line":821,"column":33,"nodeType":"2414","messageId":"2419","endLine":821,"endColumn":112},{"ruleId":"2404","severity":1,"message":"2427","line":860,"column":19,"nodeType":"2406","messageId":"2407","endLine":860,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":884,"column":37,"nodeType":"2406","messageId":"2407","endLine":884,"endColumn":39},{"ruleId":"2408","severity":1,"message":"2409","line":950,"column":6,"nodeType":"2410","endLine":950,"endColumn":23,"suggestions":"2600"},{"ruleId":"2404","severity":1,"message":"2405","line":954,"column":25,"nodeType":"2406","messageId":"2407","endLine":954,"endColumn":27},{"ruleId":"2408","severity":1,"message":"2601","line":959,"column":6,"nodeType":"2410","endLine":959,"endColumn":16,"suggestions":"2602"},{"ruleId":"2415","severity":1,"message":"2416","line":979,"column":91,"nodeType":"2414","endLine":979,"endColumn":170},{"ruleId":"2404","severity":1,"message":"2427","line":1005,"column":33,"nodeType":"2406","messageId":"2407","endLine":1005,"endColumn":35},{"ruleId":"2415","severity":1,"message":"2416","line":1025,"column":149,"nodeType":"2414","endLine":1025,"endColumn":272},{"ruleId":"2404","severity":1,"message":"2405","line":51,"column":36,"nodeType":"2406","messageId":"2407","endLine":51,"endColumn":38},{"ruleId":"2408","severity":1,"message":"2603","line":48,"column":6,"nodeType":"2410","endLine":48,"endColumn":8,"suggestions":"2604"},{"ruleId":"2398","severity":1,"message":"2605","line":49,"column":9,"nodeType":"2400","messageId":"2401","endLine":49,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2552","line":1,"column":43,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":49},{"ruleId":"2398","severity":1,"message":"2586","line":4,"column":15,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":4,"column":26,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2588","line":4,"column":39,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":48},{"ruleId":"2398","severity":1,"message":"2589","line":4,"column":63,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":39,"column":14,"nodeType":"2406","messageId":"2407","endLine":39,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":39,"column":44,"nodeType":"2406","messageId":"2407","endLine":39,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2606","line":60,"column":6,"nodeType":"2410","endLine":60,"endColumn":32,"suggestions":"2607"},{"ruleId":"2404","severity":1,"message":"2405","line":123,"column":23,"nodeType":"2406","messageId":"2407","endLine":123,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":129,"column":23,"nodeType":"2406","messageId":"2407","endLine":129,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":135,"column":20,"nodeType":"2406","messageId":"2407","endLine":135,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":139,"column":20,"nodeType":"2406","messageId":"2407","endLine":139,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":153,"column":59,"nodeType":"2406","messageId":"2407","endLine":153,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":161,"column":61,"nodeType":"2406","messageId":"2407","endLine":161,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2427","line":177,"column":28,"nodeType":"2406","messageId":"2407","endLine":177,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":177,"column":63,"nodeType":"2406","messageId":"2407","endLine":177,"endColumn":65},{"ruleId":"2404","severity":1,"message":"2427","line":187,"column":34,"nodeType":"2406","messageId":"2407","endLine":187,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":189,"column":69,"nodeType":"2406","messageId":"2407","endLine":189,"endColumn":71},{"ruleId":"2404","severity":1,"message":"2405","line":199,"column":34,"nodeType":"2406","messageId":"2407","endLine":199,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":202,"column":119,"nodeType":"2406","messageId":"2407","endLine":202,"endColumn":121},{"ruleId":"2404","severity":1,"message":"2405","line":209,"column":35,"nodeType":"2406","messageId":"2407","endLine":209,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2405","line":212,"column":116,"nodeType":"2406","messageId":"2407","endLine":212,"endColumn":118},{"ruleId":"2404","severity":1,"message":"2405","line":219,"column":35,"nodeType":"2406","messageId":"2407","endLine":219,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2405","line":222,"column":99,"nodeType":"2406","messageId":"2407","endLine":222,"endColumn":101},{"ruleId":"2404","severity":1,"message":"2405","line":230,"column":97,"nodeType":"2406","messageId":"2407","endLine":230,"endColumn":99},{"ruleId":"2415","severity":1,"message":"2416","line":230,"column":103,"nodeType":"2414","endLine":230,"endColumn":184},{"ruleId":"2404","severity":1,"message":"2405","line":237,"column":71,"nodeType":"2406","messageId":"2407","endLine":237,"endColumn":73},{"ruleId":"2398","severity":1,"message":"2608","line":1,"column":29,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":36},{"ruleId":"2398","severity":1,"message":"2609","line":13,"column":11,"nodeType":"2400","messageId":"2401","endLine":13,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2427","line":61,"column":37,"nodeType":"2406","messageId":"2407","endLine":61,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2427","line":62,"column":39,"nodeType":"2406","messageId":"2407","endLine":62,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2427","line":62,"column":74,"nodeType":"2406","messageId":"2407","endLine":62,"endColumn":76},{"ruleId":"2404","severity":1,"message":"2427","line":72,"column":20,"nodeType":"2406","messageId":"2407","endLine":72,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2427","line":77,"column":57,"nodeType":"2406","messageId":"2407","endLine":77,"endColumn":59},{"ruleId":"2408","severity":1,"message":"2610","line":105,"column":10,"nodeType":"2410","endLine":105,"endColumn":19,"suggestions":"2611"},{"ruleId":"2404","severity":1,"message":"2405","line":118,"column":38,"nodeType":"2406","messageId":"2407","endLine":118,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2427","line":175,"column":24,"nodeType":"2406","messageId":"2407","endLine":175,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2427","line":176,"column":49,"nodeType":"2406","messageId":"2407","endLine":176,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2427","line":177,"column":44,"nodeType":"2406","messageId":"2407","endLine":177,"endColumn":46},{"ruleId":"2404","severity":1,"message":"2427","line":178,"column":41,"nodeType":"2406","messageId":"2407","endLine":178,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2427","line":179,"column":39,"nodeType":"2406","messageId":"2407","endLine":179,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2427","line":180,"column":43,"nodeType":"2406","messageId":"2407","endLine":180,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":196,"column":38,"nodeType":"2406","messageId":"2407","endLine":196,"endColumn":40},{"ruleId":"2408","severity":1,"message":"2612","line":208,"column":8,"nodeType":"2410","endLine":208,"endColumn":10,"suggestions":"2613"},{"ruleId":"2404","severity":1,"message":"2427","line":212,"column":77,"nodeType":"2406","messageId":"2407","endLine":212,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2427","line":219,"column":60,"nodeType":"2406","messageId":"2407","endLine":219,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2427","line":223,"column":104,"nodeType":"2406","messageId":"2407","endLine":223,"endColumn":106},{"ruleId":"2398","severity":1,"message":"2582","line":2,"column":27,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":36},{"ruleId":"2398","severity":1,"message":"2552","line":2,"column":50,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":56},{"ruleId":"2398","severity":1,"message":"2585","line":3,"column":10,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2586","line":3,"column":15,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2583","line":4,"column":8,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2615","line":5,"column":10,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2616","line":19,"column":10,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2617","line":20,"column":10,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2618","line":21,"column":10,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2619","line":22,"column":10,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":49,"column":16,"nodeType":"2406","messageId":"2407","endLine":49,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":59,"column":16,"nodeType":"2406","messageId":"2407","endLine":59,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":64,"column":16,"nodeType":"2406","messageId":"2407","endLine":64,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":70,"column":16,"nodeType":"2406","messageId":"2407","endLine":70,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":75,"column":16,"nodeType":"2406","messageId":"2407","endLine":75,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":78,"column":16,"nodeType":"2406","messageId":"2407","endLine":78,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":81,"column":16,"nodeType":"2406","messageId":"2407","endLine":81,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":84,"column":16,"nodeType":"2406","messageId":"2407","endLine":84,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":87,"column":16,"nodeType":"2406","messageId":"2407","endLine":87,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":90,"column":16,"nodeType":"2406","messageId":"2407","endLine":90,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":16,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":96,"column":16,"nodeType":"2406","messageId":"2407","endLine":96,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":16,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":102,"column":16,"nodeType":"2406","messageId":"2407","endLine":102,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":105,"column":16,"nodeType":"2406","messageId":"2407","endLine":105,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":108,"column":16,"nodeType":"2406","messageId":"2407","endLine":108,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":111,"column":16,"nodeType":"2406","messageId":"2407","endLine":111,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":114,"column":16,"nodeType":"2406","messageId":"2407","endLine":114,"endColumn":18},{"ruleId":"2415","severity":1,"message":"2416","line":129,"column":144,"nodeType":"2414","endLine":129,"endColumn":225},{"ruleId":"2415","severity":1,"message":"2416","line":130,"column":165,"nodeType":"2414","endLine":130,"endColumn":246},{"ruleId":"2415","severity":1,"message":"2416","line":131,"column":148,"nodeType":"2414","endLine":131,"endColumn":229},{"ruleId":"2415","severity":1,"message":"2416","line":132,"column":147,"nodeType":"2414","endLine":132,"endColumn":228},{"ruleId":"2398","severity":1,"message":"2620","line":29,"column":12,"nodeType":"2400","messageId":"2401","endLine":29,"endColumn":15},{"ruleId":"2408","severity":1,"message":"2621","line":78,"column":8,"nodeType":"2410","endLine":78,"endColumn":26,"suggestions":"2622"},{"ruleId":"2404","severity":1,"message":"2405","line":82,"column":28,"nodeType":"2406","messageId":"2407","endLine":82,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":85,"column":28,"nodeType":"2406","messageId":"2407","endLine":85,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":129,"column":36,"nodeType":"2406","messageId":"2407","endLine":129,"endColumn":38},{"ruleId":"2404","severity":1,"message":"2405","line":130,"column":35,"nodeType":"2406","messageId":"2407","endLine":130,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2427","line":168,"column":37,"nodeType":"2406","messageId":"2407","endLine":168,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2427","line":169,"column":39,"nodeType":"2406","messageId":"2407","endLine":169,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2427","line":169,"column":74,"nodeType":"2406","messageId":"2407","endLine":169,"endColumn":76},{"ruleId":"2408","severity":1,"message":"2610","line":171,"column":7,"nodeType":"2410","endLine":171,"endColumn":13,"suggestions":"2623"},{"ruleId":"2404","severity":1,"message":"2427","line":174,"column":20,"nodeType":"2406","messageId":"2407","endLine":174,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2427","line":177,"column":53,"nodeType":"2406","messageId":"2407","endLine":177,"endColumn":55},{"ruleId":"2408","severity":1,"message":"2610","line":190,"column":10,"nodeType":"2410","endLine":190,"endColumn":19,"suggestions":"2624"},{"ruleId":"2404","severity":1,"message":"2427","line":196,"column":25,"nodeType":"2406","messageId":"2407","endLine":196,"endColumn":27},{"ruleId":"2408","severity":1,"message":"2625","line":203,"column":7,"nodeType":"2410","endLine":203,"endColumn":20,"suggestions":"2626"},{"ruleId":"2404","severity":1,"message":"2405","line":211,"column":60,"nodeType":"2406","messageId":"2407","endLine":211,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":211,"column":132,"nodeType":"2406","messageId":"2407","endLine":211,"endColumn":134},{"ruleId":"2404","severity":1,"message":"2405","line":445,"column":130,"nodeType":"2406","messageId":"2407","endLine":445,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":445,"column":150,"nodeType":"2406","messageId":"2407","endLine":445,"endColumn":152},{"ruleId":"2404","severity":1,"message":"2405","line":445,"column":193,"nodeType":"2406","messageId":"2407","endLine":445,"endColumn":195},{"ruleId":"2404","severity":1,"message":"2405","line":445,"column":213,"nodeType":"2406","messageId":"2407","endLine":445,"endColumn":215},{"ruleId":"2404","severity":1,"message":"2405","line":445,"column":266,"nodeType":"2406","messageId":"2407","endLine":445,"endColumn":268},{"ruleId":"2404","severity":1,"message":"2405","line":445,"column":286,"nodeType":"2406","messageId":"2407","endLine":445,"endColumn":288},{"ruleId":"2404","severity":1,"message":"2405","line":446,"column":86,"nodeType":"2406","messageId":"2407","endLine":446,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":446,"column":106,"nodeType":"2406","messageId":"2407","endLine":446,"endColumn":108},{"ruleId":"2404","severity":1,"message":"2405","line":446,"column":149,"nodeType":"2406","messageId":"2407","endLine":446,"endColumn":151},{"ruleId":"2404","severity":1,"message":"2405","line":446,"column":169,"nodeType":"2406","messageId":"2407","endLine":446,"endColumn":171},{"ruleId":"2404","severity":1,"message":"2405","line":446,"column":222,"nodeType":"2406","messageId":"2407","endLine":446,"endColumn":224},{"ruleId":"2404","severity":1,"message":"2405","line":446,"column":242,"nodeType":"2406","messageId":"2407","endLine":446,"endColumn":244},{"ruleId":"2404","severity":1,"message":"2405","line":448,"column":130,"nodeType":"2406","messageId":"2407","endLine":448,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":448,"column":152,"nodeType":"2406","messageId":"2407","endLine":448,"endColumn":154},{"ruleId":"2404","severity":1,"message":"2405","line":448,"column":197,"nodeType":"2406","messageId":"2407","endLine":448,"endColumn":199},{"ruleId":"2404","severity":1,"message":"2405","line":448,"column":219,"nodeType":"2406","messageId":"2407","endLine":448,"endColumn":221},{"ruleId":"2404","severity":1,"message":"2405","line":448,"column":274,"nodeType":"2406","messageId":"2407","endLine":448,"endColumn":276},{"ruleId":"2404","severity":1,"message":"2405","line":448,"column":296,"nodeType":"2406","messageId":"2407","endLine":448,"endColumn":298},{"ruleId":"2404","severity":1,"message":"2405","line":449,"column":86,"nodeType":"2406","messageId":"2407","endLine":449,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":449,"column":108,"nodeType":"2406","messageId":"2407","endLine":449,"endColumn":110},{"ruleId":"2404","severity":1,"message":"2405","line":449,"column":153,"nodeType":"2406","messageId":"2407","endLine":449,"endColumn":155},{"ruleId":"2404","severity":1,"message":"2405","line":449,"column":175,"nodeType":"2406","messageId":"2407","endLine":449,"endColumn":177},{"ruleId":"2404","severity":1,"message":"2405","line":449,"column":230,"nodeType":"2406","messageId":"2407","endLine":449,"endColumn":232},{"ruleId":"2404","severity":1,"message":"2405","line":449,"column":252,"nodeType":"2406","messageId":"2407","endLine":449,"endColumn":254},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":130,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":152,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":154},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":197,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":199},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":219,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":221},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":266,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":268},{"ruleId":"2404","severity":1,"message":"2405","line":451,"column":288,"nodeType":"2406","messageId":"2407","endLine":451,"endColumn":290},{"ruleId":"2404","severity":1,"message":"2405","line":452,"column":86,"nodeType":"2406","messageId":"2407","endLine":452,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":452,"column":108,"nodeType":"2406","messageId":"2407","endLine":452,"endColumn":110},{"ruleId":"2404","severity":1,"message":"2405","line":452,"column":153,"nodeType":"2406","messageId":"2407","endLine":452,"endColumn":155},{"ruleId":"2404","severity":1,"message":"2405","line":452,"column":175,"nodeType":"2406","messageId":"2407","endLine":452,"endColumn":177},{"ruleId":"2404","severity":1,"message":"2405","line":452,"column":230,"nodeType":"2406","messageId":"2407","endLine":452,"endColumn":232},{"ruleId":"2404","severity":1,"message":"2405","line":452,"column":252,"nodeType":"2406","messageId":"2407","endLine":452,"endColumn":254},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":9,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":9,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":49,"column":14,"nodeType":"2406","messageId":"2407","endLine":49,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":49,"column":44,"nodeType":"2406","messageId":"2407","endLine":49,"endColumn":46},{"ruleId":"2404","severity":1,"message":"2405","line":91,"column":48,"nodeType":"2406","messageId":"2407","endLine":91,"endColumn":50},{"ruleId":"2404","severity":1,"message":"2405","line":100,"column":29,"nodeType":"2406","messageId":"2407","endLine":100,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":100,"column":68,"nodeType":"2406","messageId":"2407","endLine":100,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2405","line":140,"column":31,"nodeType":"2406","messageId":"2407","endLine":140,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":140,"column":70,"nodeType":"2406","messageId":"2407","endLine":140,"endColumn":72},{"ruleId":"2408","severity":1,"message":"2628","line":153,"column":6,"nodeType":"2410","endLine":153,"endColumn":34,"suggestions":"2629"},{"ruleId":"2408","severity":1,"message":"2630","line":157,"column":6,"nodeType":"2410","endLine":157,"endColumn":17,"suggestions":"2631"},{"ruleId":"2404","severity":1,"message":"2427","line":219,"column":43,"nodeType":"2406","messageId":"2407","endLine":219,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":222,"column":45,"nodeType":"2406","messageId":"2407","endLine":222,"endColumn":47},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2632","line":7,"column":10,"nodeType":"2400","messageId":"2401","endLine":7,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2513","line":15,"column":11,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2512","line":17,"column":11,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":18,"column":11,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2633","line":26,"column":19,"nodeType":"2400","messageId":"2401","endLine":26,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2634","line":27,"column":23,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":64,"column":18,"nodeType":"2406","messageId":"2407","endLine":64,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":64,"column":48,"nodeType":"2406","messageId":"2407","endLine":64,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2635","line":168,"column":8,"nodeType":"2410","endLine":168,"endColumn":34,"suggestions":"2636"},{"ruleId":"2404","severity":1,"message":"2405","line":191,"column":67,"nodeType":"2406","messageId":"2407","endLine":191,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2405","line":197,"column":165,"nodeType":"2406","messageId":"2407","endLine":197,"endColumn":167},{"ruleId":"2404","severity":1,"message":"2427","line":262,"column":65,"nodeType":"2406","messageId":"2407","endLine":262,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":265,"column":61,"nodeType":"2406","messageId":"2407","endLine":265,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2586","line":3,"column":15,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2584","line":5,"column":8,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2637","line":11,"column":11,"nodeType":"2400","messageId":"2401","endLine":11,"endColumn":15},{"ruleId":"2398","severity":1,"message":"2512","line":15,"column":11,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":16,"column":11,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2638","line":24,"column":12,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2633","line":24,"column":19,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2634","line":25,"column":23,"nodeType":"2400","messageId":"2401","endLine":25,"endColumn":35},{"ruleId":"2398","severity":1,"message":"2639","line":28,"column":11,"nodeType":"2400","messageId":"2401","endLine":28,"endColumn":26},{"ruleId":"2408","severity":1,"message":"2640","line":61,"column":8,"nodeType":"2410","endLine":61,"endColumn":18,"suggestions":"2641"},{"ruleId":"2398","severity":1,"message":"2642","line":66,"column":13,"nodeType":"2400","messageId":"2401","endLine":66,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":70,"column":29,"nodeType":"2406","messageId":"2407","endLine":70,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2427","line":124,"column":65,"nodeType":"2406","messageId":"2407","endLine":124,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":127,"column":61,"nodeType":"2406","messageId":"2407","endLine":127,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2552","line":1,"column":38,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":44},{"ruleId":"2398","severity":1,"message":"2643","line":8,"column":28,"nodeType":"2400","messageId":"2401","endLine":8,"endColumn":44},{"ruleId":"2404","severity":1,"message":"2405","line":41,"column":18,"nodeType":"2406","messageId":"2407","endLine":41,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":44,"column":18,"nodeType":"2406","messageId":"2407","endLine":44,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":88,"column":58,"nodeType":"2406","messageId":"2407","endLine":88,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":113,"column":32,"nodeType":"2406","messageId":"2407","endLine":113,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":114,"column":31,"nodeType":"2406","messageId":"2407","endLine":114,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2427","line":133,"column":37,"nodeType":"2406","messageId":"2407","endLine":133,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2427","line":134,"column":39,"nodeType":"2406","messageId":"2407","endLine":134,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2427","line":134,"column":74,"nodeType":"2406","messageId":"2407","endLine":134,"endColumn":76},{"ruleId":"2404","severity":1,"message":"2427","line":138,"column":20,"nodeType":"2406","messageId":"2407","endLine":138,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2427","line":141,"column":53,"nodeType":"2406","messageId":"2407","endLine":141,"endColumn":55},{"ruleId":"2408","severity":1,"message":"2610","line":154,"column":10,"nodeType":"2410","endLine":154,"endColumn":19,"suggestions":"2644"},{"ruleId":"2404","severity":1,"message":"2405","line":186,"column":100,"nodeType":"2406","messageId":"2407","endLine":186,"endColumn":102},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":130,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":150,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":152},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":193,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":195},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":213,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":215},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":266,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":268},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":286,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":288},{"ruleId":"2404","severity":1,"message":"2405","line":420,"column":376,"nodeType":"2406","messageId":"2407","endLine":420,"endColumn":378},{"ruleId":"2404","severity":1,"message":"2405","line":421,"column":86,"nodeType":"2406","messageId":"2407","endLine":421,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":421,"column":106,"nodeType":"2406","messageId":"2407","endLine":421,"endColumn":108},{"ruleId":"2404","severity":1,"message":"2405","line":421,"column":149,"nodeType":"2406","messageId":"2407","endLine":421,"endColumn":151},{"ruleId":"2404","severity":1,"message":"2405","line":421,"column":169,"nodeType":"2406","messageId":"2407","endLine":421,"endColumn":171},{"ruleId":"2404","severity":1,"message":"2405","line":421,"column":222,"nodeType":"2406","messageId":"2407","endLine":421,"endColumn":224},{"ruleId":"2404","severity":1,"message":"2405","line":421,"column":242,"nodeType":"2406","messageId":"2407","endLine":421,"endColumn":244},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":130,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":152,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":154},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":197,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":199},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":219,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":221},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":274,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":276},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":296,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":298},{"ruleId":"2404","severity":1,"message":"2405","line":423,"column":390,"nodeType":"2406","messageId":"2407","endLine":423,"endColumn":392},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":86,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":108,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":110},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":153,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":155},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":175,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":177},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":230,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":232},{"ruleId":"2404","severity":1,"message":"2405","line":424,"column":252,"nodeType":"2406","messageId":"2407","endLine":424,"endColumn":254},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":130,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":132},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":152,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":154},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":197,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":199},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":219,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":221},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":266,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":268},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":288,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":290},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":382,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":384},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":86,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":108,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":110},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":153,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":155},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":175,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":177},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":230,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":232},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":252,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":254},{"ruleId":"2398","severity":1,"message":"2583","line":1,"column":8,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2582","line":2,"column":20,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2552","line":2,"column":43,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":49},{"ruleId":"2398","severity":1,"message":"2585","line":6,"column":10,"nodeType":"2400","messageId":"2401","endLine":6,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2645","line":31,"column":10,"nodeType":"2400","messageId":"2401","endLine":31,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2646","line":31,"column":16,"nodeType":"2400","messageId":"2401","endLine":31,"endColumn":23},{"ruleId":"2404","severity":1,"message":"2405","line":41,"column":37,"nodeType":"2406","messageId":"2407","endLine":41,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2405","line":41,"column":51,"nodeType":"2406","messageId":"2407","endLine":41,"endColumn":53},{"ruleId":"2417","severity":1,"message":"2647","line":42,"column":14,"nodeType":"2414","messageId":"2419","endLine":42,"endColumn":151},{"ruleId":"2404","severity":1,"message":"2405","line":44,"column":39,"nodeType":"2406","messageId":"2407","endLine":44,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":44,"column":53,"nodeType":"2406","messageId":"2407","endLine":44,"endColumn":55},{"ruleId":"2417","severity":1,"message":"2648","line":45,"column":14,"nodeType":"2414","messageId":"2419","endLine":45,"endColumn":150},{"ruleId":"2404","severity":1,"message":"2405","line":47,"column":33,"nodeType":"2406","messageId":"2407","endLine":47,"endColumn":35},{"ruleId":"2404","severity":1,"message":"2405","line":47,"column":46,"nodeType":"2406","messageId":"2407","endLine":47,"endColumn":48},{"ruleId":"2417","severity":1,"message":"2649","line":48,"column":14,"nodeType":"2414","messageId":"2419","endLine":48,"endColumn":151},{"ruleId":"2404","severity":1,"message":"2405","line":62,"column":70,"nodeType":"2406","messageId":"2407","endLine":62,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":63,"column":91,"nodeType":"2406","messageId":"2407","endLine":63,"endColumn":93},{"ruleId":"2404","severity":1,"message":"2405","line":65,"column":89,"nodeType":"2406","messageId":"2407","endLine":65,"endColumn":91},{"ruleId":"2404","severity":1,"message":"2405","line":81,"column":116,"nodeType":"2406","messageId":"2407","endLine":81,"endColumn":118},{"ruleId":"2404","severity":1,"message":"2405","line":81,"column":159,"nodeType":"2406","messageId":"2407","endLine":81,"endColumn":161},{"ruleId":"2404","severity":1,"message":"2405","line":98,"column":102,"nodeType":"2406","messageId":"2407","endLine":98,"endColumn":104},{"ruleId":"2404","severity":1,"message":"2405","line":98,"column":142,"nodeType":"2406","messageId":"2407","endLine":98,"endColumn":144},{"ruleId":"2404","severity":1,"message":"2405","line":102,"column":118,"nodeType":"2406","messageId":"2407","endLine":102,"endColumn":120},{"ruleId":"2404","severity":1,"message":"2405","line":102,"column":163,"nodeType":"2406","messageId":"2407","endLine":102,"endColumn":165},{"ruleId":"2398","severity":1,"message":"2608","line":1,"column":17,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2582","line":3,"column":20,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2399","line":3,"column":31,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":41},{"ruleId":"2398","severity":1,"message":"2650","line":6,"column":10,"nodeType":"2400","messageId":"2401","endLine":6,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2651","line":15,"column":11,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2627","line":16,"column":11,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2652","line":23,"column":12,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":87,"column":53,"nodeType":"2406","messageId":"2407","endLine":87,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2405","line":87,"column":103,"nodeType":"2406","messageId":"2407","endLine":87,"endColumn":105},{"ruleId":"2404","severity":1,"message":"2405","line":87,"column":156,"nodeType":"2406","messageId":"2407","endLine":87,"endColumn":158},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":60,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":115,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":117},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":170,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":172},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":220,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":222},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":271,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":273},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":60,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":115,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":117},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":170,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":172},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":220,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":222},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":271,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":273},{"ruleId":"2404","severity":1,"message":"2405","line":236,"column":107,"nodeType":"2406","messageId":"2407","endLine":236,"endColumn":109},{"ruleId":"2404","severity":1,"message":"2405","line":259,"column":149,"nodeType":"2406","messageId":"2407","endLine":259,"endColumn":151},{"ruleId":"2404","severity":1,"message":"2405","line":259,"column":194,"nodeType":"2406","messageId":"2407","endLine":259,"endColumn":196},{"ruleId":"2404","severity":1,"message":"2405","line":259,"column":244,"nodeType":"2406","messageId":"2407","endLine":259,"endColumn":246},{"ruleId":"2404","severity":1,"message":"2405","line":264,"column":133,"nodeType":"2406","messageId":"2407","endLine":264,"endColumn":135},{"ruleId":"2404","severity":1,"message":"2405","line":265,"column":95,"nodeType":"2406","messageId":"2407","endLine":265,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2405","line":283,"column":24,"nodeType":"2406","messageId":"2407","endLine":283,"endColumn":26},{"ruleId":"2398","severity":1,"message":"2552","line":4,"column":43,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":49},{"ruleId":"2398","severity":1,"message":"2653","line":5,"column":10,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2654","line":18,"column":10,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2655","line":18,"column":20,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2656","line":19,"column":10,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":14},{"ruleId":"2404","severity":1,"message":"2405","line":40,"column":14,"nodeType":"2406","messageId":"2407","endLine":40,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":40,"column":44,"nodeType":"2406","messageId":"2407","endLine":40,"endColumn":46},{"ruleId":"2408","severity":1,"message":"2657","line":62,"column":6,"nodeType":"2410","endLine":62,"endColumn":32,"suggestions":"2658"},{"ruleId":"2398","severity":1,"message":"2659","line":64,"column":12,"nodeType":"2400","messageId":"2401","endLine":64,"endColumn":28},{"ruleId":"2398","severity":1,"message":"2660","line":70,"column":12,"nodeType":"2400","messageId":"2401","endLine":70,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":108,"column":49,"nodeType":"2406","messageId":"2407","endLine":108,"endColumn":51},{"ruleId":"2415","severity":1,"message":"2416","line":129,"column":60,"nodeType":"2414","endLine":129,"endColumn":154},{"ruleId":"2398","severity":1,"message":"2661","line":20,"column":19,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":28},{"ruleId":"2398","severity":1,"message":"2662","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2663","line":22,"column":31,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":51},{"ruleId":"2664","severity":1,"message":"2665","line":53,"column":51,"nodeType":"2666","messageId":"2667","endLine":53,"endColumn":53},{"ruleId":"2408","severity":1,"message":"2668","line":73,"column":8,"nodeType":"2410","endLine":73,"endColumn":10,"suggestions":"2669"},{"ruleId":"2408","severity":1,"message":"2668","line":77,"column":8,"nodeType":"2410","endLine":77,"endColumn":49,"suggestions":"2670"},{"ruleId":"2404","severity":1,"message":"2405","line":98,"column":24,"nodeType":"2406","messageId":"2407","endLine":98,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":109,"column":24,"nodeType":"2406","messageId":"2407","endLine":109,"endColumn":26},{"ruleId":"2398","severity":1,"message":"2671","line":117,"column":11,"nodeType":"2400","messageId":"2401","endLine":117,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2672","line":118,"column":12,"nodeType":"2400","messageId":"2401","endLine":118,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2673","line":118,"column":26,"nodeType":"2400","messageId":"2401","endLine":118,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2427","line":134,"column":24,"nodeType":"2406","messageId":"2407","endLine":134,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":156,"column":104,"nodeType":"2406","messageId":"2407","endLine":156,"endColumn":106},{"ruleId":"2404","severity":1,"message":"2405","line":156,"column":148,"nodeType":"2406","messageId":"2407","endLine":156,"endColumn":150},{"ruleId":"2404","severity":1,"message":"2405","line":157,"column":104,"nodeType":"2406","messageId":"2407","endLine":157,"endColumn":106},{"ruleId":"2404","severity":1,"message":"2405","line":157,"column":154,"nodeType":"2406","messageId":"2407","endLine":157,"endColumn":156},{"ruleId":"2404","severity":1,"message":"2405","line":158,"column":104,"nodeType":"2406","messageId":"2407","endLine":158,"endColumn":106},{"ruleId":"2404","severity":1,"message":"2405","line":158,"column":154,"nodeType":"2406","messageId":"2407","endLine":158,"endColumn":156},{"ruleId":"2404","severity":1,"message":"2405","line":159,"column":104,"nodeType":"2406","messageId":"2407","endLine":159,"endColumn":106},{"ruleId":"2404","severity":1,"message":"2405","line":159,"column":155,"nodeType":"2406","messageId":"2407","endLine":159,"endColumn":157},{"ruleId":"2404","severity":1,"message":"2405","line":173,"column":109,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2405","line":173,"column":158,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":160},{"ruleId":"2404","severity":1,"message":"2405","line":211,"column":93,"nodeType":"2406","messageId":"2407","endLine":211,"endColumn":95},{"ruleId":"2398","severity":1,"message":"2674","line":2,"column":10,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2582","line":3,"column":20,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2675","line":18,"column":9,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":12},{"ruleId":"2398","severity":1,"message":"2497","line":19,"column":9,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2676","line":26,"column":23,"nodeType":"2400","messageId":"2401","endLine":26,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2427","line":53,"column":31,"nodeType":"2406","messageId":"2407","endLine":53,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":55,"column":18,"nodeType":"2406","messageId":"2407","endLine":55,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":82,"column":263,"nodeType":"2406","messageId":"2407","endLine":82,"endColumn":265},{"ruleId":"2415","severity":1,"message":"2416","line":82,"column":298,"nodeType":"2414","endLine":82,"endColumn":410},{"ruleId":"2404","severity":1,"message":"2427","line":107,"column":53,"nodeType":"2406","messageId":"2407","endLine":107,"endColumn":55},{"ruleId":"2404","severity":1,"message":"2405","line":109,"column":22,"nodeType":"2406","messageId":"2407","endLine":109,"endColumn":24},{"ruleId":"2404","severity":1,"message":"2405","line":111,"column":80,"nodeType":"2406","messageId":"2407","endLine":111,"endColumn":82},{"ruleId":"2404","severity":1,"message":"2405","line":139,"column":16,"nodeType":"2406","messageId":"2407","endLine":139,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2632","line":7,"column":10,"nodeType":"2400","messageId":"2401","endLine":7,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2513","line":14,"column":11,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2627","line":17,"column":11,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2677","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2678","line":22,"column":22,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2679","line":28,"column":12,"nodeType":"2400","messageId":"2401","endLine":28,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2680","line":28,"column":19,"nodeType":"2400","messageId":"2401","endLine":28,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2654","line":32,"column":12,"nodeType":"2400","messageId":"2401","endLine":32,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2655","line":32,"column":22,"nodeType":"2400","messageId":"2401","endLine":32,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":61,"column":18,"nodeType":"2406","messageId":"2407","endLine":61,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":61,"column":48,"nodeType":"2406","messageId":"2407","endLine":61,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":99,"column":8,"nodeType":"2410","endLine":99,"endColumn":39,"suggestions":"2681"},{"ruleId":"2408","severity":1,"message":"2682","line":103,"column":8,"nodeType":"2410","endLine":103,"endColumn":19,"suggestions":"2683"},{"ruleId":"2404","severity":1,"message":"2427","line":176,"column":71,"nodeType":"2406","messageId":"2407","endLine":176,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2405","line":180,"column":65,"nodeType":"2406","messageId":"2407","endLine":180,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2427","line":181,"column":88,"nodeType":"2406","messageId":"2407","endLine":181,"endColumn":90},{"ruleId":"2404","severity":1,"message":"2427","line":182,"column":95,"nodeType":"2406","messageId":"2407","endLine":182,"endColumn":97},{"ruleId":"2404","severity":1,"message":"2427","line":184,"column":91,"nodeType":"2406","messageId":"2407","endLine":184,"endColumn":93},{"ruleId":"2404","severity":1,"message":"2427","line":185,"column":97,"nodeType":"2406","messageId":"2407","endLine":185,"endColumn":99},{"ruleId":"2404","severity":1,"message":"2427","line":186,"column":90,"nodeType":"2406","messageId":"2407","endLine":186,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2427","line":187,"column":90,"nodeType":"2406","messageId":"2407","endLine":187,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2427","line":187,"column":123,"nodeType":"2406","messageId":"2407","endLine":187,"endColumn":125},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2632","line":7,"column":10,"nodeType":"2400","messageId":"2401","endLine":7,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2513","line":15,"column":11,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2627","line":17,"column":11,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2679","line":27,"column":12,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2680","line":27,"column":19,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2654","line":31,"column":12,"nodeType":"2400","messageId":"2401","endLine":31,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2655","line":31,"column":22,"nodeType":"2400","messageId":"2401","endLine":31,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":60,"column":18,"nodeType":"2406","messageId":"2407","endLine":60,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":60,"column":48,"nodeType":"2406","messageId":"2407","endLine":60,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":114,"column":8,"nodeType":"2410","endLine":114,"endColumn":39,"suggestions":"2684"},{"ruleId":"2408","severity":1,"message":"2635","line":118,"column":8,"nodeType":"2410","endLine":118,"endColumn":19,"suggestions":"2685"},{"ruleId":"2404","severity":1,"message":"2427","line":197,"column":65,"nodeType":"2406","messageId":"2407","endLine":197,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":201,"column":65,"nodeType":"2406","messageId":"2407","endLine":201,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2427","line":202,"column":87,"nodeType":"2406","messageId":"2407","endLine":202,"endColumn":89},{"ruleId":"2404","severity":1,"message":"2427","line":203,"column":94,"nodeType":"2406","messageId":"2407","endLine":203,"endColumn":96},{"ruleId":"2404","severity":1,"message":"2427","line":204,"column":96,"nodeType":"2406","messageId":"2407","endLine":204,"endColumn":98},{"ruleId":"2404","severity":1,"message":"2427","line":205,"column":99,"nodeType":"2406","messageId":"2407","endLine":205,"endColumn":101},{"ruleId":"2404","severity":1,"message":"2427","line":206,"column":97,"nodeType":"2406","messageId":"2407","endLine":206,"endColumn":99},{"ruleId":"2404","severity":1,"message":"2427","line":207,"column":100,"nodeType":"2406","messageId":"2407","endLine":207,"endColumn":102},{"ruleId":"2404","severity":1,"message":"2427","line":208,"column":93,"nodeType":"2406","messageId":"2407","endLine":208,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2427","line":209,"column":96,"nodeType":"2406","messageId":"2407","endLine":209,"endColumn":98},{"ruleId":"2404","severity":1,"message":"2427","line":210,"column":96,"nodeType":"2406","messageId":"2407","endLine":210,"endColumn":98},{"ruleId":"2404","severity":1,"message":"2427","line":211,"column":99,"nodeType":"2406","messageId":"2407","endLine":211,"endColumn":101},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":49,"column":18,"nodeType":"2406","messageId":"2407","endLine":49,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":49,"column":48,"nodeType":"2406","messageId":"2407","endLine":49,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":103,"column":8,"nodeType":"2410","endLine":103,"endColumn":39,"suggestions":"2686"},{"ruleId":"2408","severity":1,"message":"2687","line":107,"column":8,"nodeType":"2410","endLine":107,"endColumn":19,"suggestions":"2688"},{"ruleId":"2404","severity":1,"message":"2427","line":183,"column":67,"nodeType":"2406","messageId":"2407","endLine":183,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2405","line":186,"column":61,"nodeType":"2406","messageId":"2407","endLine":186,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2427","line":187,"column":84,"nodeType":"2406","messageId":"2407","endLine":187,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2427","line":188,"column":91,"nodeType":"2406","messageId":"2407","endLine":188,"endColumn":93},{"ruleId":"2404","severity":1,"message":"2427","line":190,"column":93,"nodeType":"2406","messageId":"2407","endLine":190,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2427","line":191,"column":87,"nodeType":"2406","messageId":"2407","endLine":191,"endColumn":89},{"ruleId":"2404","severity":1,"message":"2427","line":192,"column":93,"nodeType":"2406","messageId":"2407","endLine":192,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2427","line":193,"column":86,"nodeType":"2406","messageId":"2407","endLine":193,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2427","line":194,"column":87,"nodeType":"2406","messageId":"2407","endLine":194,"endColumn":89},{"ruleId":"2404","severity":1,"message":"2427","line":194,"column":120,"nodeType":"2406","messageId":"2407","endLine":194,"endColumn":122},{"ruleId":"2398","severity":1,"message":"2582","line":1,"column":27,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":36},{"ruleId":"2398","severity":1,"message":"2583","line":2,"column":8,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":13},{"ruleId":"2398","severity":1,"message":"2689","line":7,"column":8,"nodeType":"2400","messageId":"2401","endLine":7,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2675","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2690","line":13,"column":24,"nodeType":"2400","messageId":"2401","endLine":13,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2691","line":14,"column":24,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2692","line":15,"column":31,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2427","line":58,"column":28,"nodeType":"2406","messageId":"2407","endLine":58,"endColumn":30},{"ruleId":"2664","severity":1,"message":"2665","line":61,"column":30,"nodeType":"2666","messageId":"2667","endLine":61,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":62,"column":39,"nodeType":"2406","messageId":"2407","endLine":62,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":81,"column":57,"nodeType":"2406","messageId":"2407","endLine":81,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2405","line":95,"column":171,"nodeType":"2406","messageId":"2407","endLine":95,"endColumn":173},{"ruleId":"2404","severity":1,"message":"2405","line":101,"column":161,"nodeType":"2406","messageId":"2407","endLine":101,"endColumn":163},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2513","line":10,"column":11,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2512","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":13,"column":11,"nodeType":"2400","messageId":"2401","endLine":13,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2675","line":14,"column":11,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2693","line":16,"column":12,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2694","line":16,"column":24,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2633","line":21,"column":19,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2634","line":22,"column":23,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":35},{"ruleId":"2408","severity":1,"message":"2695","line":60,"column":8,"nodeType":"2410","endLine":60,"endColumn":21,"suggestions":"2696"},{"ruleId":"2404","severity":1,"message":"2427","line":122,"column":63,"nodeType":"2406","messageId":"2407","endLine":122,"endColumn":65},{"ruleId":"2404","severity":1,"message":"2405","line":125,"column":61,"nodeType":"2406","messageId":"2407","endLine":125,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2513","line":10,"column":9,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2512","line":12,"column":9,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2627","line":13,"column":9,"nodeType":"2400","messageId":"2401","endLine":13,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2675","line":14,"column":9,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":12},{"ruleId":"2398","severity":1,"message":"2633","line":21,"column":17,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":25},{"ruleId":"2398","severity":1,"message":"2634","line":22,"column":21,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2427","line":87,"column":57,"nodeType":"2406","messageId":"2407","endLine":87,"endColumn":59},{"ruleId":"2408","severity":1,"message":"2697","line":104,"column":6,"nodeType":"2410","endLine":104,"endColumn":22,"suggestions":"2698"},{"ruleId":"2408","severity":1,"message":"2699","line":109,"column":6,"nodeType":"2410","endLine":109,"endColumn":19,"suggestions":"2700"},{"ruleId":"2404","severity":1,"message":"2427","line":166,"column":55,"nodeType":"2406","messageId":"2407","endLine":166,"endColumn":57},{"ruleId":"2404","severity":1,"message":"2405","line":169,"column":45,"nodeType":"2406","messageId":"2407","endLine":169,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":170,"column":74,"nodeType":"2406","messageId":"2407","endLine":170,"endColumn":76},{"ruleId":"2404","severity":1,"message":"2427","line":171,"column":68,"nodeType":"2406","messageId":"2407","endLine":171,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2427","line":172,"column":72,"nodeType":"2406","messageId":"2407","endLine":172,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2427","line":173,"column":73,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":75},{"ruleId":"2404","severity":1,"message":"2427","line":174,"column":67,"nodeType":"2406","messageId":"2407","endLine":174,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2427","line":175,"column":69,"nodeType":"2406","messageId":"2407","endLine":175,"endColumn":71},{"ruleId":"2404","severity":1,"message":"2427","line":176,"column":70,"nodeType":"2406","messageId":"2407","endLine":176,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2427","line":177,"column":71,"nodeType":"2406","messageId":"2407","endLine":177,"endColumn":73},{"ruleId":"2404","severity":1,"message":"2427","line":178,"column":72,"nodeType":"2406","messageId":"2407","endLine":178,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2427","line":179,"column":69,"nodeType":"2406","messageId":"2407","endLine":179,"endColumn":71},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2584","line":5,"column":8,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2513","line":10,"column":11,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2512","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":13,"column":11,"nodeType":"2400","messageId":"2401","endLine":13,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2638","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2633","line":22,"column":19,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2701","line":23,"column":12,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2634","line":23,"column":23,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":35},{"ruleId":"2408","severity":1,"message":"2702","line":111,"column":8,"nodeType":"2410","endLine":111,"endColumn":36,"suggestions":"2703"},{"ruleId":"2404","severity":1,"message":"2427","line":181,"column":67,"nodeType":"2406","messageId":"2407","endLine":181,"endColumn":69},{"ruleId":"2404","severity":1,"message":"2405","line":184,"column":61,"nodeType":"2406","messageId":"2407","endLine":184,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":200,"column":61,"nodeType":"2406","messageId":"2407","endLine":200,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2650","line":3,"column":47,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":58},{"ruleId":"2398","severity":1,"message":"2627","line":11,"column":11,"nodeType":"2400","messageId":"2401","endLine":11,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":51,"column":18,"nodeType":"2406","messageId":"2407","endLine":51,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":51,"column":48,"nodeType":"2406","messageId":"2407","endLine":51,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":96,"column":8,"nodeType":"2410","endLine":96,"endColumn":26,"suggestions":"2704"},{"ruleId":"2408","severity":1,"message":"2705","line":100,"column":8,"nodeType":"2410","endLine":100,"endColumn":19,"suggestions":"2706"},{"ruleId":"2404","severity":1,"message":"2427","line":160,"column":89,"nodeType":"2406","messageId":"2407","endLine":160,"endColumn":91},{"ruleId":"2404","severity":1,"message":"2405","line":163,"column":61,"nodeType":"2406","messageId":"2407","endLine":163,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2584","line":5,"column":8,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2707","line":10,"column":11,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2512","line":11,"column":11,"nodeType":"2400","messageId":"2401","endLine":11,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2708","line":16,"column":12,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2709","line":16,"column":22,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2642","line":17,"column":12,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2710","line":17,"column":20,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2711","line":18,"column":21,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2638","line":19,"column":12,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2633","line":19,"column":19,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2701","line":20,"column":12,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2634","line":20,"column":23,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":35},{"ruleId":"2398","severity":1,"message":"2712","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2639","line":24,"column":11,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":26},{"ruleId":"2408","severity":1,"message":"2713","line":120,"column":8,"nodeType":"2410","endLine":120,"endColumn":10,"suggestions":"2714"},{"ruleId":"2404","severity":1,"message":"2427","line":168,"column":61,"nodeType":"2406","messageId":"2407","endLine":168,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":171,"column":61,"nodeType":"2406","messageId":"2407","endLine":171,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2427","line":172,"column":93,"nodeType":"2406","messageId":"2407","endLine":172,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2427","line":173,"column":90,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2427","line":174,"column":88,"nodeType":"2406","messageId":"2407","endLine":174,"endColumn":90},{"ruleId":"2404","severity":1,"message":"2427","line":175,"column":89,"nodeType":"2406","messageId":"2407","endLine":175,"endColumn":91},{"ruleId":"2404","severity":1,"message":"2427","line":176,"column":96,"nodeType":"2406","messageId":"2407","endLine":176,"endColumn":98},{"ruleId":"2404","severity":1,"message":"2427","line":177,"column":91,"nodeType":"2406","messageId":"2407","endLine":177,"endColumn":93},{"ruleId":"2404","severity":1,"message":"2427","line":178,"column":91,"nodeType":"2406","messageId":"2407","endLine":178,"endColumn":93},{"ruleId":"2404","severity":1,"message":"2427","line":179,"column":91,"nodeType":"2406","messageId":"2407","endLine":179,"endColumn":93},{"ruleId":"2404","severity":1,"message":"2427","line":180,"column":105,"nodeType":"2406","messageId":"2407","endLine":180,"endColumn":107},{"ruleId":"2404","severity":1,"message":"2427","line":181,"column":87,"nodeType":"2406","messageId":"2407","endLine":181,"endColumn":89},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":53,"column":18,"nodeType":"2406","messageId":"2407","endLine":53,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":53,"column":48,"nodeType":"2406","messageId":"2407","endLine":53,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":98,"column":8,"nodeType":"2410","endLine":98,"endColumn":36,"suggestions":"2715"},{"ruleId":"2408","severity":1,"message":"2716","line":102,"column":8,"nodeType":"2410","endLine":102,"endColumn":19,"suggestions":"2717"},{"ruleId":"2404","severity":1,"message":"2427","line":165,"column":77,"nodeType":"2406","messageId":"2407","endLine":165,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2405","line":168,"column":61,"nodeType":"2406","messageId":"2407","endLine":168,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2586","line":3,"column":15,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2584","line":5,"column":8,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2637","line":11,"column":11,"nodeType":"2400","messageId":"2401","endLine":11,"endColumn":15},{"ruleId":"2398","severity":1,"message":"2512","line":15,"column":11,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":16,"column":11,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2701","line":24,"column":12,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2634","line":24,"column":23,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":35},{"ruleId":"2398","severity":1,"message":"2639","line":27,"column":11,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":26},{"ruleId":"2408","severity":1,"message":"2718","line":61,"column":8,"nodeType":"2410","endLine":61,"endColumn":18,"suggestions":"2719"},{"ruleId":"2398","severity":1,"message":"2642","line":66,"column":13,"nodeType":"2400","messageId":"2401","endLine":66,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":70,"column":29,"nodeType":"2406","messageId":"2407","endLine":70,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2427","line":143,"column":57,"nodeType":"2406","messageId":"2407","endLine":143,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2405","line":146,"column":61,"nodeType":"2406","messageId":"2407","endLine":146,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2584","line":5,"column":8,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2512","line":11,"column":11,"nodeType":"2400","messageId":"2401","endLine":11,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2720","line":19,"column":12,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2721","line":19,"column":25,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":39},{"ruleId":"2398","severity":1,"message":"2638","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":17},{"ruleId":"2398","severity":1,"message":"2633","line":22,"column":19,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":27},{"ruleId":"2398","severity":1,"message":"2634","line":23,"column":23,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":35},{"ruleId":"2408","severity":1,"message":"2722","line":112,"column":8,"nodeType":"2410","endLine":112,"endColumn":37,"suggestions":"2723"},{"ruleId":"2404","severity":1,"message":"2405","line":126,"column":74,"nodeType":"2406","messageId":"2407","endLine":126,"endColumn":76},{"ruleId":"2404","severity":1,"message":"2427","line":196,"column":79,"nodeType":"2406","messageId":"2407","endLine":196,"endColumn":81},{"ruleId":"2404","severity":1,"message":"2405","line":199,"column":61,"nodeType":"2406","messageId":"2407","endLine":199,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":210,"column":61,"nodeType":"2406","messageId":"2407","endLine":210,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":18},{"ruleId":"2404","severity":1,"message":"2405","line":52,"column":18,"nodeType":"2406","messageId":"2407","endLine":52,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":52,"column":48,"nodeType":"2406","messageId":"2407","endLine":52,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":97,"column":8,"nodeType":"2410","endLine":97,"endColumn":26,"suggestions":"2724"},{"ruleId":"2408","severity":1,"message":"2725","line":101,"column":8,"nodeType":"2410","endLine":101,"endColumn":19,"suggestions":"2726"},{"ruleId":"2404","severity":1,"message":"2427","line":159,"column":59,"nodeType":"2406","messageId":"2407","endLine":159,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":162,"column":61,"nodeType":"2406","messageId":"2407","endLine":162,"endColumn":63},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2513","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2627","line":12,"column":11,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2727","line":19,"column":12,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2728","line":19,"column":21,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":53,"column":18,"nodeType":"2406","messageId":"2407","endLine":53,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2405","line":53,"column":48,"nodeType":"2406","messageId":"2407","endLine":53,"endColumn":50},{"ruleId":"2408","severity":1,"message":"2441","line":98,"column":8,"nodeType":"2410","endLine":98,"endColumn":26,"suggestions":"2729"},{"ruleId":"2408","severity":1,"message":"2730","line":102,"column":8,"nodeType":"2410","endLine":102,"endColumn":19,"suggestions":"2731"},{"ruleId":"2404","severity":1,"message":"2427","line":164,"column":77,"nodeType":"2406","messageId":"2407","endLine":164,"endColumn":79},{"ruleId":"2404","severity":1,"message":"2405","line":167,"column":61,"nodeType":"2406","messageId":"2407","endLine":167,"endColumn":63},{"ruleId":"2408","severity":1,"message":"2732","line":30,"column":6,"nodeType":"2410","endLine":30,"endColumn":36,"suggestions":"2733"},{"ruleId":"2404","severity":1,"message":"2405","line":46,"column":65,"nodeType":"2406","messageId":"2407","endLine":46,"endColumn":67},{"ruleId":"2404","severity":1,"message":"2405","line":47,"column":70,"nodeType":"2406","messageId":"2407","endLine":47,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2405","line":59,"column":65,"nodeType":"2406","messageId":"2407","endLine":59,"endColumn":67},{"ruleId":"2398","severity":1,"message":"2734","line":63,"column":43,"nodeType":"2400","messageId":"2401","endLine":63,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2427","line":77,"column":57,"nodeType":"2406","messageId":"2407","endLine":77,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2405","line":79,"column":38,"nodeType":"2406","messageId":"2407","endLine":79,"endColumn":40},{"ruleId":"2404","severity":1,"message":"2427","line":82,"column":47,"nodeType":"2406","messageId":"2407","endLine":82,"endColumn":49},{"ruleId":"2404","severity":1,"message":"2427","line":84,"column":54,"nodeType":"2406","messageId":"2407","endLine":84,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2427","line":84,"column":193,"nodeType":"2406","messageId":"2407","endLine":84,"endColumn":195},{"ruleId":"2404","severity":1,"message":"2427","line":89,"column":54,"nodeType":"2406","messageId":"2407","endLine":89,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2427","line":89,"column":199,"nodeType":"2406","messageId":"2407","endLine":89,"endColumn":201},{"ruleId":"2404","severity":1,"message":"2405","line":100,"column":47,"nodeType":"2406","messageId":"2407","endLine":100,"endColumn":49},{"ruleId":"2408","severity":1,"message":"2735","line":132,"column":6,"nodeType":"2410","endLine":132,"endColumn":42,"suggestions":"2736"},{"ruleId":"2482","severity":1,"message":"2483","line":213,"column":42,"nodeType":"2406","messageId":"2484","endLine":213,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":264,"column":52,"nodeType":"2406","messageId":"2407","endLine":264,"endColumn":54},{"ruleId":"2404","severity":1,"message":"2405","line":287,"column":39,"nodeType":"2406","messageId":"2407","endLine":287,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":287,"column":60,"nodeType":"2406","messageId":"2407","endLine":287,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":301,"column":66,"nodeType":"2406","messageId":"2407","endLine":301,"endColumn":68},{"ruleId":"2404","severity":1,"message":"2405","line":317,"column":40,"nodeType":"2406","messageId":"2407","endLine":317,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":336,"column":29,"nodeType":"2406","messageId":"2407","endLine":336,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":336,"column":64,"nodeType":"2406","messageId":"2407","endLine":336,"endColumn":66},{"ruleId":"2398","severity":1,"message":"2586","line":5,"column":10,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2737","line":23,"column":10,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":18},{"ruleId":"2664","severity":1,"message":"2665","line":36,"column":54,"nodeType":"2666","messageId":"2667","endLine":36,"endColumn":56},{"ruleId":"2408","severity":1,"message":"2738","line":57,"column":6,"nodeType":"2410","endLine":57,"endColumn":8,"suggestions":"2739"},{"ruleId":"2408","severity":1,"message":"2738","line":60,"column":6,"nodeType":"2410","endLine":60,"endColumn":66,"suggestions":"2740"},{"ruleId":"2404","severity":1,"message":"2405","line":83,"column":19,"nodeType":"2406","messageId":"2407","endLine":83,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":83,"column":45,"nodeType":"2406","messageId":"2407","endLine":83,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":89,"column":26,"nodeType":"2406","messageId":"2407","endLine":89,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":95,"column":19,"nodeType":"2406","messageId":"2407","endLine":95,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":101,"column":26,"nodeType":"2406","messageId":"2407","endLine":101,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":107,"column":19,"nodeType":"2406","messageId":"2407","endLine":107,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":113,"column":26,"nodeType":"2406","messageId":"2407","endLine":113,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":127,"column":19,"nodeType":"2406","messageId":"2407","endLine":127,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":127,"column":45,"nodeType":"2406","messageId":"2407","endLine":127,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":133,"column":26,"nodeType":"2406","messageId":"2407","endLine":133,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":141,"column":19,"nodeType":"2406","messageId":"2407","endLine":141,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":147,"column":26,"nodeType":"2406","messageId":"2407","endLine":147,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":155,"column":19,"nodeType":"2406","messageId":"2407","endLine":155,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":161,"column":26,"nodeType":"2406","messageId":"2407","endLine":161,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":173,"column":19,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":173,"column":45,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":179,"column":27,"nodeType":"2406","messageId":"2407","endLine":179,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":186,"column":19,"nodeType":"2406","messageId":"2407","endLine":186,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":192,"column":27,"nodeType":"2406","messageId":"2407","endLine":192,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":199,"column":19,"nodeType":"2406","messageId":"2407","endLine":199,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":205,"column":27,"nodeType":"2406","messageId":"2407","endLine":205,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":219,"column":19,"nodeType":"2406","messageId":"2407","endLine":219,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":219,"column":45,"nodeType":"2406","messageId":"2407","endLine":219,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":225,"column":30,"nodeType":"2406","messageId":"2407","endLine":225,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":231,"column":19,"nodeType":"2406","messageId":"2407","endLine":231,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":237,"column":30,"nodeType":"2406","messageId":"2407","endLine":237,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":243,"column":19,"nodeType":"2406","messageId":"2407","endLine":243,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":249,"column":30,"nodeType":"2406","messageId":"2407","endLine":249,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":260,"column":19,"nodeType":"2406","messageId":"2407","endLine":260,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":260,"column":45,"nodeType":"2406","messageId":"2407","endLine":260,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":266,"column":28,"nodeType":"2406","messageId":"2407","endLine":266,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":272,"column":19,"nodeType":"2406","messageId":"2407","endLine":272,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":278,"column":28,"nodeType":"2406","messageId":"2407","endLine":278,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":284,"column":19,"nodeType":"2406","messageId":"2407","endLine":284,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":290,"column":28,"nodeType":"2406","messageId":"2407","endLine":290,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":304,"column":19,"nodeType":"2406","messageId":"2407","endLine":304,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":304,"column":45,"nodeType":"2406","messageId":"2407","endLine":304,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":310,"column":29,"nodeType":"2406","messageId":"2407","endLine":310,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":317,"column":19,"nodeType":"2406","messageId":"2407","endLine":317,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":323,"column":29,"nodeType":"2406","messageId":"2407","endLine":323,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":330,"column":19,"nodeType":"2406","messageId":"2407","endLine":330,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":336,"column":29,"nodeType":"2406","messageId":"2407","endLine":336,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":349,"column":19,"nodeType":"2406","messageId":"2407","endLine":349,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":349,"column":45,"nodeType":"2406","messageId":"2407","endLine":349,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":355,"column":34,"nodeType":"2406","messageId":"2407","endLine":355,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":362,"column":19,"nodeType":"2406","messageId":"2407","endLine":362,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":368,"column":34,"nodeType":"2406","messageId":"2407","endLine":368,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":375,"column":19,"nodeType":"2406","messageId":"2407","endLine":375,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":381,"column":34,"nodeType":"2406","messageId":"2407","endLine":381,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2427","line":398,"column":30,"nodeType":"2406","messageId":"2407","endLine":398,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2427","line":413,"column":30,"nodeType":"2406","messageId":"2407","endLine":413,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":427,"column":57,"nodeType":"2406","messageId":"2407","endLine":427,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2427","line":432,"column":32,"nodeType":"2406","messageId":"2407","endLine":432,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2427","line":450,"column":30,"nodeType":"2406","messageId":"2407","endLine":450,"endColumn":32},{"ruleId":"2664","severity":1,"message":"2665","line":473,"column":49,"nodeType":"2666","messageId":"2667","endLine":473,"endColumn":51},{"ruleId":"2404","severity":1,"message":"2405","line":474,"column":24,"nodeType":"2406","messageId":"2407","endLine":474,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":489,"column":109,"nodeType":"2406","messageId":"2407","endLine":489,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2405","line":489,"column":156,"nodeType":"2406","messageId":"2407","endLine":489,"endColumn":158},{"ruleId":"2404","severity":1,"message":"2405","line":489,"column":202,"nodeType":"2406","messageId":"2407","endLine":489,"endColumn":204},{"ruleId":"2404","severity":1,"message":"2405","line":492,"column":84,"nodeType":"2406","messageId":"2407","endLine":492,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":492,"column":132,"nodeType":"2406","messageId":"2407","endLine":492,"endColumn":134},{"ruleId":"2404","severity":1,"message":"2405","line":493,"column":84,"nodeType":"2406","messageId":"2407","endLine":493,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":493,"column":133,"nodeType":"2406","messageId":"2407","endLine":493,"endColumn":135},{"ruleId":"2404","severity":1,"message":"2405","line":494,"column":84,"nodeType":"2406","messageId":"2407","endLine":494,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":494,"column":137,"nodeType":"2406","messageId":"2407","endLine":494,"endColumn":139},{"ruleId":"2404","severity":1,"message":"2405","line":537,"column":39,"nodeType":"2406","messageId":"2407","endLine":537,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":606,"column":39,"nodeType":"2406","messageId":"2407","endLine":606,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":688,"column":39,"nodeType":"2406","messageId":"2407","endLine":688,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":752,"column":39,"nodeType":"2406","messageId":"2407","endLine":752,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2405","line":886,"column":39,"nodeType":"2406","messageId":"2407","endLine":886,"endColumn":41},{"ruleId":"2398","severity":1,"message":"2741","line":17,"column":10,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2742","line":17,"column":23,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2743","line":18,"column":10,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2744","line":18,"column":23,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2745","line":20,"column":10,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2746","line":20,"column":24,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":39},{"ruleId":"2398","severity":1,"message":"2747","line":26,"column":10,"nodeType":"2400","messageId":"2401","endLine":26,"endColumn":12},{"ruleId":"2398","severity":1,"message":"2748","line":26,"column":14,"nodeType":"2400","messageId":"2401","endLine":26,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2749","line":27,"column":16,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":23},{"ruleId":"2408","severity":1,"message":"2750","line":47,"column":6,"nodeType":"2410","endLine":47,"endColumn":50,"suggestions":"2751"},{"ruleId":"2404","severity":1,"message":"2405","line":59,"column":19,"nodeType":"2406","messageId":"2407","endLine":59,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":59,"column":45,"nodeType":"2406","messageId":"2407","endLine":59,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":65,"column":26,"nodeType":"2406","messageId":"2407","endLine":65,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":73,"column":19,"nodeType":"2406","messageId":"2407","endLine":73,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":79,"column":26,"nodeType":"2406","messageId":"2407","endLine":79,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":88,"column":19,"nodeType":"2406","messageId":"2407","endLine":88,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":94,"column":26,"nodeType":"2406","messageId":"2407","endLine":94,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":107,"column":19,"nodeType":"2406","messageId":"2407","endLine":107,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":107,"column":45,"nodeType":"2406","messageId":"2407","endLine":107,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":113,"column":26,"nodeType":"2406","messageId":"2407","endLine":113,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":121,"column":19,"nodeType":"2406","messageId":"2407","endLine":121,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":127,"column":26,"nodeType":"2406","messageId":"2407","endLine":127,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":136,"column":19,"nodeType":"2406","messageId":"2407","endLine":136,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":142,"column":26,"nodeType":"2406","messageId":"2407","endLine":142,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2405","line":155,"column":19,"nodeType":"2406","messageId":"2407","endLine":155,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":155,"column":45,"nodeType":"2406","messageId":"2407","endLine":155,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":161,"column":27,"nodeType":"2406","messageId":"2407","endLine":161,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":168,"column":19,"nodeType":"2406","messageId":"2407","endLine":168,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":174,"column":27,"nodeType":"2406","messageId":"2407","endLine":174,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":181,"column":19,"nodeType":"2406","messageId":"2407","endLine":181,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":187,"column":27,"nodeType":"2406","messageId":"2407","endLine":187,"endColumn":29},{"ruleId":"2404","severity":1,"message":"2405","line":198,"column":19,"nodeType":"2406","messageId":"2407","endLine":198,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":198,"column":45,"nodeType":"2406","messageId":"2407","endLine":198,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":204,"column":30,"nodeType":"2406","messageId":"2407","endLine":204,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":211,"column":19,"nodeType":"2406","messageId":"2407","endLine":211,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":217,"column":30,"nodeType":"2406","messageId":"2407","endLine":217,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":224,"column":19,"nodeType":"2406","messageId":"2407","endLine":224,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":230,"column":30,"nodeType":"2406","messageId":"2407","endLine":230,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":242,"column":19,"nodeType":"2406","messageId":"2407","endLine":242,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":242,"column":45,"nodeType":"2406","messageId":"2407","endLine":242,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":248,"column":28,"nodeType":"2406","messageId":"2407","endLine":248,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":256,"column":19,"nodeType":"2406","messageId":"2407","endLine":256,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":262,"column":28,"nodeType":"2406","messageId":"2407","endLine":262,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":270,"column":19,"nodeType":"2406","messageId":"2407","endLine":270,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":276,"column":28,"nodeType":"2406","messageId":"2407","endLine":276,"endColumn":30},{"ruleId":"2404","severity":1,"message":"2405","line":288,"column":19,"nodeType":"2406","messageId":"2407","endLine":288,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":288,"column":45,"nodeType":"2406","messageId":"2407","endLine":288,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":294,"column":29,"nodeType":"2406","messageId":"2407","endLine":294,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":302,"column":19,"nodeType":"2406","messageId":"2407","endLine":302,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":308,"column":29,"nodeType":"2406","messageId":"2407","endLine":308,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":316,"column":19,"nodeType":"2406","messageId":"2407","endLine":316,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":322,"column":29,"nodeType":"2406","messageId":"2407","endLine":322,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":334,"column":19,"nodeType":"2406","messageId":"2407","endLine":334,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":334,"column":45,"nodeType":"2406","messageId":"2407","endLine":334,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2427","line":340,"column":34,"nodeType":"2406","messageId":"2407","endLine":340,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":348,"column":19,"nodeType":"2406","messageId":"2407","endLine":348,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":354,"column":34,"nodeType":"2406","messageId":"2407","endLine":354,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":362,"column":19,"nodeType":"2406","messageId":"2407","endLine":362,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":368,"column":34,"nodeType":"2406","messageId":"2407","endLine":368,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":382,"column":58,"nodeType":"2406","messageId":"2407","endLine":382,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2427","line":387,"column":32,"nodeType":"2406","messageId":"2407","endLine":387,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":400,"column":19,"nodeType":"2406","messageId":"2407","endLine":400,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":400,"column":50,"nodeType":"2406","messageId":"2407","endLine":400,"endColumn":52},{"ruleId":"2404","severity":1,"message":"2427","line":406,"column":32,"nodeType":"2406","messageId":"2407","endLine":406,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":413,"column":19,"nodeType":"2406","messageId":"2407","endLine":413,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":419,"column":32,"nodeType":"2406","messageId":"2407","endLine":419,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":426,"column":19,"nodeType":"2406","messageId":"2407","endLine":426,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2427","line":432,"column":32,"nodeType":"2406","messageId":"2407","endLine":432,"endColumn":34},{"ruleId":"2398","severity":1,"message":"2752","line":442,"column":12,"nodeType":"2400","messageId":"2401","endLine":442,"endColumn":27},{"ruleId":"2664","severity":1,"message":"2665","line":458,"column":50,"nodeType":"2666","messageId":"2667","endLine":458,"endColumn":52},{"ruleId":"2404","severity":1,"message":"2405","line":459,"column":24,"nodeType":"2406","messageId":"2407","endLine":459,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":475,"column":12,"nodeType":"2406","messageId":"2407","endLine":475,"endColumn":14},{"ruleId":"2404","severity":1,"message":"2405","line":479,"column":12,"nodeType":"2406","messageId":"2407","endLine":479,"endColumn":14},{"ruleId":"2404","severity":1,"message":"2405","line":491,"column":109,"nodeType":"2406","messageId":"2407","endLine":491,"endColumn":111},{"ruleId":"2404","severity":1,"message":"2405","line":491,"column":157,"nodeType":"2406","messageId":"2407","endLine":491,"endColumn":159},{"ruleId":"2404","severity":1,"message":"2405","line":491,"column":205,"nodeType":"2406","messageId":"2407","endLine":491,"endColumn":207},{"ruleId":"2404","severity":1,"message":"2405","line":547,"column":42,"nodeType":"2406","messageId":"2407","endLine":547,"endColumn":44},{"ruleId":"2404","severity":1,"message":"2405","line":612,"column":59,"nodeType":"2406","messageId":"2407","endLine":612,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":679,"column":59,"nodeType":"2406","messageId":"2407","endLine":679,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":757,"column":59,"nodeType":"2406","messageId":"2407","endLine":757,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":835,"column":59,"nodeType":"2406","messageId":"2407","endLine":835,"endColumn":61},{"ruleId":"2404","severity":1,"message":"2405","line":896,"column":41,"nodeType":"2406","messageId":"2407","endLine":896,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":978,"column":61,"nodeType":"2406","messageId":"2407","endLine":978,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":1032,"column":41,"nodeType":"2406","messageId":"2407","endLine":1032,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":1105,"column":55,"nodeType":"2406","messageId":"2407","endLine":1105,"endColumn":57},{"ruleId":"2404","severity":1,"message":"2405","line":1174,"column":55,"nodeType":"2406","messageId":"2407","endLine":1174,"endColumn":57},{"ruleId":"2398","severity":1,"message":"2552","line":1,"column":38,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":44},{"ruleId":"2398","severity":1,"message":"2753","line":8,"column":10,"nodeType":"2400","messageId":"2401","endLine":8,"endColumn":26},{"ruleId":"2398","severity":1,"message":"2754","line":8,"column":28,"nodeType":"2400","messageId":"2401","endLine":8,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2755","line":9,"column":8,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2427","line":63,"column":37,"nodeType":"2406","messageId":"2407","endLine":63,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2427","line":64,"column":39,"nodeType":"2406","messageId":"2407","endLine":64,"endColumn":41},{"ruleId":"2404","severity":1,"message":"2427","line":64,"column":74,"nodeType":"2406","messageId":"2407","endLine":64,"endColumn":76},{"ruleId":"2408","severity":1,"message":"2610","line":66,"column":7,"nodeType":"2410","endLine":66,"endColumn":13,"suggestions":"2756"},{"ruleId":"2404","severity":1,"message":"2427","line":69,"column":20,"nodeType":"2406","messageId":"2407","endLine":69,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2427","line":73,"column":53,"nodeType":"2406","messageId":"2407","endLine":73,"endColumn":55},{"ruleId":"2408","severity":1,"message":"2610","line":86,"column":10,"nodeType":"2410","endLine":86,"endColumn":19,"suggestions":"2757"},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":38,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":40},{"ruleId":"2398","severity":1,"message":"2509","line":108,"column":11,"nodeType":"2400","messageId":"2401","endLine":108,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":136,"column":25,"nodeType":"2406","messageId":"2407","endLine":136,"endColumn":27},{"ruleId":"2404","severity":1,"message":"2405","line":140,"column":25,"nodeType":"2406","messageId":"2407","endLine":140,"endColumn":27},{"ruleId":"2404","severity":1,"message":"2405","line":151,"column":47,"nodeType":"2406","messageId":"2407","endLine":151,"endColumn":49},{"ruleId":"2404","severity":1,"message":"2405","line":156,"column":84,"nodeType":"2406","messageId":"2407","endLine":156,"endColumn":86},{"ruleId":"2404","severity":1,"message":"2405","line":167,"column":64,"nodeType":"2406","messageId":"2407","endLine":167,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":169,"column":47,"nodeType":"2406","messageId":"2407","endLine":169,"endColumn":49},{"ruleId":"2398","severity":1,"message":"2586","line":4,"column":50,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":59},{"ruleId":"2398","severity":1,"message":"2758","line":21,"column":12,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2759","line":24,"column":12,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":21},{"ruleId":"2408","severity":1,"message":"2540","line":40,"column":8,"nodeType":"2410","endLine":40,"endColumn":10,"suggestions":"2760"},{"ruleId":"2408","severity":1,"message":"2761","line":48,"column":8,"nodeType":"2410","endLine":48,"endColumn":35,"suggestions":"2762"},{"ruleId":"2404","severity":1,"message":"2427","line":102,"column":33,"nodeType":"2406","messageId":"2407","endLine":102,"endColumn":35},{"ruleId":"2408","severity":1,"message":"2763","line":117,"column":8,"nodeType":"2410","endLine":117,"endColumn":40,"suggestions":"2764"},{"ruleId":"2404","severity":1,"message":"2427","line":136,"column":61,"nodeType":"2406","messageId":"2407","endLine":136,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":206,"column":40,"nodeType":"2406","messageId":"2407","endLine":206,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":219,"column":58,"nodeType":"2406","messageId":"2407","endLine":219,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":221,"column":58,"nodeType":"2406","messageId":"2407","endLine":221,"endColumn":60},{"ruleId":"2404","severity":1,"message":"2405","line":234,"column":62,"nodeType":"2406","messageId":"2407","endLine":234,"endColumn":64},{"ruleId":"2404","severity":1,"message":"2405","line":256,"column":61,"nodeType":"2406","messageId":"2407","endLine":256,"endColumn":63},{"ruleId":"2404","severity":1,"message":"2405","line":256,"column":202,"nodeType":"2406","messageId":"2407","endLine":256,"endColumn":204},{"ruleId":"2404","severity":1,"message":"2405","line":292,"column":45,"nodeType":"2406","messageId":"2407","endLine":292,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":293,"column":93,"nodeType":"2406","messageId":"2407","endLine":293,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2405","line":293,"column":120,"nodeType":"2406","messageId":"2407","endLine":293,"endColumn":122},{"ruleId":"2398","severity":1,"message":"2582","line":2,"column":20,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2765","line":12,"column":9,"nodeType":"2400","messageId":"2401","endLine":12,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2766","line":51,"column":9,"nodeType":"2400","messageId":"2401","endLine":51,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":88,"column":32,"nodeType":"2406","messageId":"2407","endLine":88,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":99,"column":93,"nodeType":"2406","messageId":"2407","endLine":99,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2405","line":118,"column":45,"nodeType":"2406","messageId":"2407","endLine":118,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":118,"column":175,"nodeType":"2406","messageId":"2407","endLine":118,"endColumn":177},{"ruleId":"2408","severity":1,"message":"2767","line":42,"column":8,"nodeType":"2410","endLine":42,"endColumn":10,"suggestions":"2768"},{"ruleId":"2408","severity":1,"message":"2769","line":90,"column":8,"nodeType":"2410","endLine":90,"endColumn":10,"suggestions":"2770"},{"ruleId":"2404","severity":1,"message":"2405","line":98,"column":67,"nodeType":"2406","messageId":"2407","endLine":98,"endColumn":69},{"ruleId":"2415","severity":1,"message":"2416","line":201,"column":153,"nodeType":"2414","endLine":201,"endColumn":257},{"ruleId":"2415","severity":1,"message":"2416","line":225,"column":171,"nodeType":"2414","endLine":225,"endColumn":280},{"ruleId":"2404","severity":1,"message":"2427","line":238,"column":90,"nodeType":"2406","messageId":"2407","endLine":238,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2405","line":270,"column":86,"nodeType":"2406","messageId":"2407","endLine":270,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":290,"column":75,"nodeType":"2406","messageId":"2407","endLine":290,"endColumn":77},{"ruleId":"2415","severity":1,"message":"2416","line":296,"column":180,"nodeType":"2414","endLine":296,"endColumn":284},{"ruleId":"2415","severity":1,"message":"2416","line":323,"column":210,"nodeType":"2414","endLine":323,"endColumn":319},{"ruleId":"2398","severity":1,"message":"2582","line":1,"column":27,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":36},{"ruleId":"2398","severity":1,"message":"2588","line":5,"column":28,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2771","line":14,"column":11,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2772","line":15,"column":11,"nodeType":"2400","messageId":"2401","endLine":15,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2456","line":25,"column":22,"nodeType":"2400","messageId":"2401","endLine":25,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2773","line":26,"column":12,"nodeType":"2400","messageId":"2401","endLine":26,"endColumn":16},{"ruleId":"2398","severity":1,"message":"2774","line":65,"column":11,"nodeType":"2400","messageId":"2401","endLine":65,"endColumn":24},{"ruleId":"2404","severity":1,"message":"2405","line":93,"column":110,"nodeType":"2406","messageId":"2407","endLine":93,"endColumn":112},{"ruleId":"2404","severity":1,"message":"2405","line":98,"column":57,"nodeType":"2406","messageId":"2407","endLine":98,"endColumn":59},{"ruleId":"2415","severity":1,"message":"2416","line":99,"column":29,"nodeType":"2414","endLine":99,"endColumn":121},{"ruleId":"2404","severity":1,"message":"2405","line":111,"column":79,"nodeType":"2406","messageId":"2407","endLine":111,"endColumn":81},{"ruleId":"2398","severity":1,"message":"2775","line":5,"column":10,"nodeType":"2400","messageId":"2401","endLine":5,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2776","line":8,"column":10,"nodeType":"2400","messageId":"2401","endLine":8,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2777","line":8,"column":24,"nodeType":"2400","messageId":"2401","endLine":8,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2405","line":30,"column":63,"nodeType":"2406","messageId":"2407","endLine":30,"endColumn":65},{"ruleId":"2404","severity":1,"message":"2427","line":43,"column":43,"nodeType":"2406","messageId":"2407","endLine":43,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":44,"column":41,"nodeType":"2406","messageId":"2407","endLine":44,"endColumn":43},{"ruleId":"2408","severity":1,"message":"2778","line":55,"column":5,"nodeType":"2410","endLine":55,"endColumn":75,"suggestions":"2779"},{"ruleId":"2408","severity":1,"message":"2426","line":55,"column":6,"nodeType":"2406","endLine":55,"endColumn":74},{"ruleId":"2404","severity":1,"message":"2405","line":55,"column":37,"nodeType":"2406","messageId":"2407","endLine":55,"endColumn":39},{"ruleId":"2408","severity":1,"message":"2780","line":59,"column":6,"nodeType":"2410","endLine":59,"endColumn":8,"suggestions":"2781"},{"ruleId":"2404","severity":1,"message":"2405","line":63,"column":38,"nodeType":"2406","messageId":"2407","endLine":63,"endColumn":40},{"ruleId":"2398","severity":1,"message":"2782","line":10,"column":11,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2456","line":19,"column":22,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2759","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2783","line":22,"column":23,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":35},{"ruleId":"2408","severity":1,"message":"2540","line":37,"column":8,"nodeType":"2410","endLine":37,"endColumn":10,"suggestions":"2784"},{"ruleId":"2408","severity":1,"message":"2785","line":85,"column":8,"nodeType":"2410","endLine":85,"endColumn":11,"suggestions":"2786"},{"ruleId":"2408","severity":1,"message":"2787","line":85,"column":9,"nodeType":"2788","endLine":85,"endColumn":10},{"ruleId":"2408","severity":1,"message":"2789","line":89,"column":8,"nodeType":"2410","endLine":89,"endColumn":17,"suggestions":"2790"},{"ruleId":"2404","severity":1,"message":"2427","line":124,"column":122,"nodeType":"2406","messageId":"2407","endLine":124,"endColumn":124},{"ruleId":"2404","severity":1,"message":"2405","line":183,"column":40,"nodeType":"2406","messageId":"2407","endLine":183,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":194,"column":40,"nodeType":"2406","messageId":"2407","endLine":194,"endColumn":42},{"ruleId":"2398","severity":1,"message":"2791","line":203,"column":11,"nodeType":"2400","messageId":"2401","endLine":203,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":227,"column":37,"nodeType":"2406","messageId":"2407","endLine":227,"endColumn":39},{"ruleId":"2404","severity":1,"message":"2405","line":243,"column":99,"nodeType":"2406","messageId":"2407","endLine":243,"endColumn":101},{"ruleId":"2404","severity":1,"message":"2405","line":249,"column":67,"nodeType":"2406","messageId":"2407","endLine":249,"endColumn":69},{"ruleId":"2415","severity":1,"message":"2416","line":252,"column":41,"nodeType":"2414","endLine":252,"endColumn":152},{"ruleId":"2404","severity":1,"message":"2405","line":303,"column":45,"nodeType":"2406","messageId":"2407","endLine":303,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":304,"column":90,"nodeType":"2406","messageId":"2407","endLine":304,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2405","line":335,"column":106,"nodeType":"2406","messageId":"2407","endLine":335,"endColumn":108},{"ruleId":"2398","severity":1,"message":"2582","line":2,"column":20,"nodeType":"2400","messageId":"2401","endLine":2,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2792","line":16,"column":11,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2793","line":20,"column":12,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2794","line":20,"column":31,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":51},{"ruleId":"2398","severity":1,"message":"2795","line":21,"column":12,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2796","line":21,"column":21,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2456","line":24,"column":22,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":33},{"ruleId":"2404","severity":1,"message":"2405","line":84,"column":57,"nodeType":"2406","messageId":"2407","endLine":84,"endColumn":59},{"ruleId":"2415","severity":1,"message":"2416","line":84,"column":100,"nodeType":"2414","endLine":84,"endColumn":161},{"ruleId":"2398","severity":1,"message":"2582","line":1,"column":27,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":36},{"ruleId":"2404","severity":1,"message":"2405","line":29,"column":24,"nodeType":"2406","messageId":"2407","endLine":29,"endColumn":26},{"ruleId":"2404","severity":1,"message":"2405","line":87,"column":29,"nodeType":"2406","messageId":"2407","endLine":87,"endColumn":31},{"ruleId":"2404","severity":1,"message":"2405","line":105,"column":19,"nodeType":"2406","messageId":"2407","endLine":105,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":112,"column":21,"nodeType":"2406","messageId":"2407","endLine":112,"endColumn":23},{"ruleId":"2415","severity":1,"message":"2416","line":144,"column":99,"nodeType":"2414","endLine":144,"endColumn":209},{"ruleId":"2404","severity":1,"message":"2405","line":154,"column":46,"nodeType":"2406","messageId":"2407","endLine":154,"endColumn":48},{"ruleId":"2404","severity":1,"message":"2405","line":169,"column":60,"nodeType":"2406","messageId":"2407","endLine":169,"endColumn":62},{"ruleId":"2404","severity":1,"message":"2405","line":173,"column":23,"nodeType":"2406","messageId":"2407","endLine":173,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":174,"column":64,"nodeType":"2406","messageId":"2407","endLine":174,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":190,"column":48,"nodeType":"2406","messageId":"2407","endLine":190,"endColumn":50},{"ruleId":"2404","severity":1,"message":"2405","line":194,"column":23,"nodeType":"2406","messageId":"2407","endLine":194,"endColumn":25},{"ruleId":"2404","severity":1,"message":"2405","line":195,"column":52,"nodeType":"2406","messageId":"2407","endLine":195,"endColumn":54},{"ruleId":"2415","severity":1,"message":"2416","line":201,"column":53,"nodeType":"2414","endLine":201,"endColumn":199},{"ruleId":"2415","severity":1,"message":"2416","line":258,"column":70,"nodeType":"2414","endLine":258,"endColumn":178},{"ruleId":"2404","severity":1,"message":"2405","line":12,"column":68,"nodeType":"2406","messageId":"2407","endLine":12,"endColumn":70},{"ruleId":"2408","severity":1,"message":"2767","line":41,"column":8,"nodeType":"2410","endLine":41,"endColumn":10,"suggestions":"2797"},{"ruleId":"2404","severity":1,"message":"2405","line":83,"column":37,"nodeType":"2406","messageId":"2407","endLine":83,"endColumn":39},{"ruleId":"2408","severity":1,"message":"2769","line":94,"column":8,"nodeType":"2410","endLine":94,"endColumn":10,"suggestions":"2798"},{"ruleId":"2404","severity":1,"message":"2405","line":102,"column":41,"nodeType":"2406","messageId":"2407","endLine":102,"endColumn":43},{"ruleId":"2404","severity":1,"message":"2405","line":103,"column":78,"nodeType":"2406","messageId":"2407","endLine":103,"endColumn":80},{"ruleId":"2404","severity":1,"message":"2427","line":188,"column":92,"nodeType":"2406","messageId":"2407","endLine":188,"endColumn":94},{"ruleId":"2404","severity":1,"message":"2427","line":188,"column":122,"nodeType":"2406","messageId":"2407","endLine":188,"endColumn":124},{"ruleId":"2415","severity":1,"message":"2416","line":222,"column":153,"nodeType":"2414","endLine":222,"endColumn":231},{"ruleId":"2415","severity":1,"message":"2416","line":246,"column":171,"nodeType":"2414","endLine":246,"endColumn":280},{"ruleId":"2404","severity":1,"message":"2427","line":259,"column":90,"nodeType":"2406","messageId":"2407","endLine":259,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2405","line":291,"column":86,"nodeType":"2406","messageId":"2407","endLine":291,"endColumn":88},{"ruleId":"2404","severity":1,"message":"2405","line":311,"column":75,"nodeType":"2406","messageId":"2407","endLine":311,"endColumn":77},{"ruleId":"2415","severity":1,"message":"2416","line":317,"column":180,"nodeType":"2414","endLine":317,"endColumn":258},{"ruleId":"2415","severity":1,"message":"2416","line":344,"column":210,"nodeType":"2414","endLine":344,"endColumn":319},{"ruleId":"2398","severity":1,"message":"2586","line":1,"column":15,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2650","line":1,"column":47,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":58},{"ruleId":"2398","severity":1,"message":"2608","line":3,"column":58,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":65},{"ruleId":"2398","severity":1,"message":"2453","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2454","line":10,"column":11,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2455","line":16,"column":11,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2799","line":17,"column":11,"nodeType":"2400","messageId":"2401","endLine":17,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2800","line":18,"column":12,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2801","line":18,"column":25,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":39},{"ruleId":"2398","severity":1,"message":"2802","line":19,"column":22,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2803","line":20,"column":12,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2804","line":21,"column":12,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2805","line":21,"column":25,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":39},{"ruleId":"2398","severity":1,"message":"2758","line":22,"column":12,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2456","line":22,"column":22,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2759","line":23,"column":12,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2783","line":23,"column":23,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":35},{"ruleId":"2398","severity":1,"message":"2806","line":24,"column":12,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":14},{"ruleId":"2398","severity":1,"message":"2807","line":24,"column":16,"nodeType":"2400","messageId":"2401","endLine":24,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2808","line":25,"column":12,"nodeType":"2400","messageId":"2401","endLine":25,"endColumn":15},{"ruleId":"2398","severity":1,"message":"2809","line":25,"column":17,"nodeType":"2400","messageId":"2401","endLine":25,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2810","line":27,"column":12,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2690","line":27,"column":24,"nodeType":"2400","messageId":"2401","endLine":27,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2811","line":28,"column":12,"nodeType":"2400","messageId":"2401","endLine":28,"endColumn":20},{"ruleId":"2404","severity":1,"message":"2427","line":89,"column":30,"nodeType":"2406","messageId":"2407","endLine":89,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":111,"column":69,"nodeType":"2406","messageId":"2407","endLine":111,"endColumn":71},{"ruleId":"2408","severity":1,"message":"2812","line":162,"column":9,"nodeType":"2410","endLine":162,"endColumn":25,"suggestions":"2813"},{"ruleId":"2404","severity":1,"message":"2405","line":180,"column":21,"nodeType":"2406","messageId":"2407","endLine":180,"endColumn":23},{"ruleId":"2408","severity":1,"message":"2460","line":182,"column":8,"nodeType":"2410","endLine":182,"endColumn":18,"suggestions":"2814"},{"ruleId":"2404","severity":1,"message":"2405","line":202,"column":24,"nodeType":"2406","messageId":"2407","endLine":202,"endColumn":26},{"ruleId":"2398","severity":1,"message":"2815","line":226,"column":14,"nodeType":"2400","messageId":"2401","endLine":226,"endColumn":30},{"ruleId":"2408","severity":1,"message":"2462","line":240,"column":8,"nodeType":"2410","endLine":240,"endColumn":26,"suggestions":"2816"},{"ruleId":"2408","severity":1,"message":"2817","line":243,"column":8,"nodeType":"2410","endLine":243,"endColumn":34,"suggestions":"2818"},{"ruleId":"2404","severity":1,"message":"2405","line":264,"column":57,"nodeType":"2406","messageId":"2407","endLine":264,"endColumn":59},{"ruleId":"2404","severity":1,"message":"2405","line":311,"column":42,"nodeType":"2406","messageId":"2407","endLine":311,"endColumn":44},{"ruleId":"2398","severity":1,"message":"2819","line":362,"column":11,"nodeType":"2400","messageId":"2401","endLine":362,"endColumn":37},{"ruleId":"2404","severity":1,"message":"2405","line":429,"column":64,"nodeType":"2406","messageId":"2407","endLine":429,"endColumn":66},{"ruleId":"2404","severity":1,"message":"2405","line":429,"column":94,"nodeType":"2406","messageId":"2407","endLine":429,"endColumn":96},{"ruleId":"2404","severity":1,"message":"2405","line":436,"column":90,"nodeType":"2406","messageId":"2407","endLine":436,"endColumn":92},{"ruleId":"2404","severity":1,"message":"2405","line":465,"column":54,"nodeType":"2406","messageId":"2407","endLine":465,"endColumn":56},{"ruleId":"2404","severity":1,"message":"2405","line":465,"column":82,"nodeType":"2406","messageId":"2407","endLine":465,"endColumn":84},{"ruleId":"2404","severity":1,"message":"2405","line":469,"column":164,"nodeType":"2406","messageId":"2407","endLine":469,"endColumn":166},{"ruleId":"2415","severity":1,"message":"2416","line":542,"column":57,"nodeType":"2414","endLine":542,"endColumn":183},{"ruleId":"2404","severity":1,"message":"2405","line":548,"column":97,"nodeType":"2406","messageId":"2407","endLine":548,"endColumn":99},{"ruleId":"2404","severity":1,"message":"2405","line":562,"column":93,"nodeType":"2406","messageId":"2407","endLine":562,"endColumn":95},{"ruleId":"2404","severity":1,"message":"2405","line":583,"column":77,"nodeType":"2406","messageId":"2407","endLine":583,"endColumn":79},{"ruleId":"2415","severity":1,"message":"2416","line":586,"column":65,"nodeType":"2414","endLine":586,"endColumn":202},{"ruleId":"2404","severity":1,"message":"2427","line":623,"column":81,"nodeType":"2406","messageId":"2407","endLine":623,"endColumn":83},{"ruleId":"2404","severity":1,"message":"2427","line":642,"column":81,"nodeType":"2406","messageId":"2407","endLine":642,"endColumn":83},{"ruleId":"2464","severity":1,"message":"2465","line":650,"column":128,"nodeType":"2466","messageId":"2467","endLine":650,"endColumn":130},{"ruleId":"2464","severity":1,"message":"2465","line":650,"column":163,"nodeType":"2466","messageId":"2467","endLine":650,"endColumn":165},{"ruleId":"2464","severity":1,"message":"2468","line":650,"column":163,"nodeType":"2466","messageId":"2467","endLine":650,"endColumn":165},{"ruleId":"2464","severity":1,"message":"2468","line":650,"column":183,"nodeType":"2466","messageId":"2467","endLine":650,"endColumn":185},{"ruleId":"2398","severity":1,"message":"2632","line":4,"column":10,"nodeType":"2400","messageId":"2401","endLine":4,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2627","line":9,"column":11,"nodeType":"2400","messageId":"2401","endLine":9,"endColumn":18},{"ruleId":"2398","severity":1,"message":"2808","line":35,"column":12,"nodeType":"2400","messageId":"2401","endLine":35,"endColumn":15},{"ruleId":"2398","severity":1,"message":"2809","line":35,"column":17,"nodeType":"2400","messageId":"2401","endLine":35,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2820","line":40,"column":18,"nodeType":"2400","messageId":"2401","endLine":40,"endColumn":25},{"ruleId":"2398","severity":1,"message":"2445","line":80,"column":33,"nodeType":"2400","messageId":"2401","endLine":80,"endColumn":34},{"ruleId":"2408","severity":1,"message":"2558","line":91,"column":8,"nodeType":"2410","endLine":91,"endColumn":10,"suggestions":"2821"},{"ruleId":"2398","severity":1,"message":"2822","line":112,"column":14,"nodeType":"2400","messageId":"2401","endLine":112,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":182,"column":39,"nodeType":"2406","messageId":"2407","endLine":182,"endColumn":41},{"ruleId":"2408","severity":1,"message":"2563","line":203,"column":8,"nodeType":"2410","endLine":203,"endColumn":10,"suggestions":"2823"},{"ruleId":"2404","severity":1,"message":"2405","line":224,"column":152,"nodeType":"2406","messageId":"2407","endLine":224,"endColumn":154},{"ruleId":"2415","severity":1,"message":"2416","line":268,"column":156,"nodeType":"2414","endLine":268,"endColumn":260},{"ruleId":"2415","severity":1,"message":"2416","line":313,"column":190,"nodeType":"2414","endLine":313,"endColumn":299},{"ruleId":"2404","severity":1,"message":"2427","line":391,"column":68,"nodeType":"2406","messageId":"2407","endLine":391,"endColumn":70},{"ruleId":"2404","severity":1,"message":"2427","line":391,"column":140,"nodeType":"2406","messageId":"2407","endLine":391,"endColumn":142},{"ruleId":"2415","severity":1,"message":"2416","line":402,"column":159,"nodeType":"2414","endLine":402,"endColumn":263},{"ruleId":"2398","severity":1,"message":"2782","line":10,"column":11,"nodeType":"2400","messageId":"2401","endLine":10,"endColumn":19},{"ruleId":"2398","severity":1,"message":"2800","line":18,"column":12,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":23},{"ruleId":"2398","severity":1,"message":"2801","line":18,"column":25,"nodeType":"2400","messageId":"2401","endLine":18,"endColumn":39},{"ruleId":"2398","severity":1,"message":"2824","line":19,"column":12,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":22},{"ruleId":"2398","severity":1,"message":"2691","line":19,"column":24,"nodeType":"2400","messageId":"2401","endLine":19,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2825","line":20,"column":12,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":29},{"ruleId":"2398","severity":1,"message":"2692","line":20,"column":31,"nodeType":"2400","messageId":"2401","endLine":20,"endColumn":51},{"ruleId":"2398","severity":1,"message":"2826","line":21,"column":12,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2827","line":21,"column":23,"nodeType":"2400","messageId":"2401","endLine":21,"endColumn":35},{"ruleId":"2398","severity":1,"message":"2456","line":23,"column":22,"nodeType":"2400","messageId":"2401","endLine":23,"endColumn":33},{"ruleId":"2408","severity":1,"message":"2540","line":37,"column":8,"nodeType":"2410","endLine":37,"endColumn":10,"suggestions":"2828"},{"ruleId":"2408","severity":1,"message":"2785","line":87,"column":8,"nodeType":"2410","endLine":87,"endColumn":11,"suggestions":"2829"},{"ruleId":"2408","severity":1,"message":"2787","line":87,"column":9,"nodeType":"2788","endLine":87,"endColumn":10},{"ruleId":"2408","severity":1,"message":"2789","line":91,"column":8,"nodeType":"2410","endLine":91,"endColumn":17,"suggestions":"2830"},{"ruleId":"2404","severity":1,"message":"2427","line":122,"column":122,"nodeType":"2406","messageId":"2407","endLine":122,"endColumn":124},{"ruleId":"2404","severity":1,"message":"2405","line":179,"column":40,"nodeType":"2406","messageId":"2407","endLine":179,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":190,"column":40,"nodeType":"2406","messageId":"2407","endLine":190,"endColumn":42},{"ruleId":"2404","severity":1,"message":"2405","line":200,"column":129,"nodeType":"2406","messageId":"2407","endLine":200,"endColumn":131},{"ruleId":"2404","severity":1,"message":"2405","line":206,"column":67,"nodeType":"2406","messageId":"2407","endLine":206,"endColumn":69},{"ruleId":"2415","severity":1,"message":"2416","line":209,"column":41,"nodeType":"2414","endLine":209,"endColumn":103},{"ruleId":"2404","severity":1,"message":"2405","line":257,"column":45,"nodeType":"2406","messageId":"2407","endLine":257,"endColumn":47},{"ruleId":"2404","severity":1,"message":"2405","line":258,"column":123,"nodeType":"2406","messageId":"2407","endLine":258,"endColumn":125},{"ruleId":"2398","severity":1,"message":"2586","line":3,"column":15,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2650","line":3,"column":47,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":58},{"ruleId":"2408","severity":1,"message":"2831","line":21,"column":7,"nodeType":"2410","endLine":21,"endColumn":9,"suggestions":"2832"},{"ruleId":"2398","severity":1,"message":"2582","line":1,"column":22,"nodeType":"2400","messageId":"2401","endLine":1,"endColumn":31},{"ruleId":"2398","severity":1,"message":"2586","line":3,"column":15,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":24},{"ruleId":"2398","severity":1,"message":"2587","line":3,"column":26,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":37},{"ruleId":"2398","severity":1,"message":"2614","line":3,"column":39,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":45},{"ruleId":"2398","severity":1,"message":"2650","line":3,"column":47,"nodeType":"2400","messageId":"2401","endLine":3,"endColumn":58},{"ruleId":"2398","severity":1,"message":"2833","line":14,"column":11,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":20},{"ruleId":"2398","severity":1,"message":"2834","line":14,"column":21,"nodeType":"2400","messageId":"2401","endLine":14,"endColumn":33},{"ruleId":"2398","severity":1,"message":"2835","line":16,"column":11,"nodeType":"2400","messageId":"2401","endLine":16,"endColumn":17},{"ruleId":"2408","severity":1,"message":"2836","line":44,"column":7,"nodeType":"2410","endLine":44,"endColumn":18,"suggestions":"2837"},{"ruleId":"2404","severity":1,"message":"2405","line":48,"column":19,"nodeType":"2406","messageId":"2407","endLine":48,"endColumn":21},{"ruleId":"2404","severity":1,"message":"2405","line":52,"column":20,"nodeType":"2406","messageId":"2407","endLine":52,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":59,"column":14,"nodeType":"2406","messageId":"2407","endLine":59,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":62,"column":14,"nodeType":"2406","messageId":"2407","endLine":62,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":155,"column":32,"nodeType":"2406","messageId":"2407","endLine":155,"endColumn":34},{"ruleId":"2404","severity":1,"message":"2405","line":172,"column":43,"nodeType":"2406","messageId":"2407","endLine":172,"endColumn":45},{"ruleId":"2404","severity":1,"message":"2405","line":175,"column":66,"nodeType":"2406","messageId":"2407","endLine":175,"endColumn":68},{"ruleId":"2404","severity":1,"message":"2405","line":180,"column":24,"nodeType":"2406","messageId":"2407","endLine":180,"endColumn":26},{"ruleId":"2415","severity":1,"message":"2416","line":181,"column":21,"nodeType":"2414","endLine":181,"endColumn":164},{"ruleId":"2415","severity":1,"message":"2416","line":183,"column":21,"nodeType":"2414","endLine":183,"endColumn":138},{"ruleId":"2415","severity":1,"message":"2416","line":190,"column":21,"nodeType":"2414","endLine":190,"endColumn":143},{"ruleId":"2415","severity":1,"message":"2416","line":197,"column":19,"nodeType":"2414","endLine":197,"endColumn":179},{"ruleId":"2404","severity":1,"message":"2405","line":200,"column":105,"nodeType":"2406","messageId":"2407","endLine":200,"endColumn":107},{"ruleId":"2415","severity":1,"message":"2416","line":200,"column":155,"nodeType":"2414","endLine":200,"endColumn":297},{"ruleId":"2415","severity":1,"message":"2416","line":211,"column":13,"nodeType":"2414","endLine":211,"endColumn":159},{"ruleId":"2415","severity":1,"message":"2416","line":233,"column":11,"nodeType":"2414","endLine":233,"endColumn":97},{"ruleId":"2838","severity":1,"message":"2839","line":12,"column":8,"nodeType":"2414","endLine":12,"endColumn":79},{"ruleId":"2415","severity":1,"message":"2416","line":9,"column":51,"nodeType":"2414","endLine":9,"endColumn":208},{"ruleId":"2838","severity":1,"message":"2839","line":11,"column":10,"nodeType":"2414","endLine":11,"endColumn":72},{"ruleId":"2404","severity":1,"message":"2427","line":21,"column":11,"nodeType":"2406","messageId":"2407","endLine":21,"endColumn":13},{"ruleId":"2404","severity":1,"message":"2405","line":23,"column":14,"nodeType":"2406","messageId":"2407","endLine":23,"endColumn":16},{"ruleId":"2404","severity":1,"message":"2405","line":26,"column":51,"nodeType":"2406","messageId":"2407","endLine":26,"endColumn":53},{"ruleId":"2404","severity":1,"message":"2405","line":26,"column":77,"nodeType":"2406","messageId":"2407","endLine":26,"endColumn":79},{"ruleId":"2398","severity":1,"message":"2840","line":32,"column":9,"nodeType":"2400","messageId":"2401","endLine":32,"endColumn":15},{"ruleId":"2404","severity":1,"message":"2405","line":9,"column":30,"nodeType":"2406","messageId":"2407","endLine":9,"endColumn":32},{"ruleId":"2404","severity":1,"message":"2405","line":34,"column":26,"nodeType":"2406","messageId":"2407","endLine":34,"endColumn":28},{"ruleId":"2404","severity":1,"message":"2427","line":71,"column":20,"nodeType":"2406","messageId":"2407","endLine":71,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":76,"column":55,"nodeType":"2406","messageId":"2407","endLine":76,"endColumn":57},{"ruleId":"2404","severity":1,"message":"2405","line":76,"column":115,"nodeType":"2406","messageId":"2407","endLine":76,"endColumn":117},{"ruleId":"2398","severity":1,"message":"2840","line":82,"column":11,"nodeType":"2400","messageId":"2401","endLine":82,"endColumn":17},{"ruleId":"2404","severity":1,"message":"2427","line":91,"column":20,"nodeType":"2406","messageId":"2407","endLine":91,"endColumn":22},{"ruleId":"2404","severity":1,"message":"2405","line":95,"column":36,"nodeType":"2406","messageId":"2407","endLine":95,"endColumn":38},{"ruleId":"2404","severity":1,"message":"2405","line":95,"column":83,"nodeType":"2406","messageId":"2407","endLine":95,"endColumn":85},{"ruleId":"2398","severity":1,"message":"2841","line":96,"column":11,"nodeType":"2400","messageId":"2401","endLine":96,"endColumn":19},{"ruleId":"2404","severity":1,"message":"2405","line":97,"column":19,"nodeType":"2406","messageId":"2407","endLine":97,"endColumn":21},{"ruleId":"2398","severity":1,"message":"2842","line":22,"column":9,"nodeType":"2400","messageId":"2401","endLine":22,"endColumn":12},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'timer_notify' is defined but never used.","'useQuery' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchapi'. Either include it or remove the dependency array.","ArrayExpression",["2843"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-pascal-case","Imported JSX component Fetch_function must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component StockReport_By_Name must be in PascalCase or SCREAMING_SNAKE_CASE","'roleId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Permissions'. Either include it or remove the dependency array.",["2844"],"React Hook useEffect has a missing dependency: 'Changepage'. Either include it or remove the dependency array.",["2845"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'prescriptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Get_Document'. Either include it or remove the dependency array.",["2846"],"React Hook useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.",["2847"],"Imported JSX component Generated_bill must be in PascalCase or SCREAMING_SNAKE_CASE",["2848"],["2849"],"'channel' is assigned a value but never used.","'setchannel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetPages'. Either include it or remove the dependency array.",["2850"],"React Hook useEffect has missing dependencies: 'GETSalesList' and 'GETSalesListForExcel'. Either include them or remove the dependency array.",["2851"],"'p' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AddPaymentMethods'. Either include it or remove the dependency array.",["2852"],"React Hook useEffect has a missing dependency: 'CalPrevTotal'. Either include it or remove the dependency array.",["2853"],["2854"],"React Hook useEffect has missing dependencies: 'GETSaleReturns' and 'GETSaleReturnsForExcel'. Either include them or remove the dependency array.",["2855"],"'tableref' is assigned a value but never used.","'cliniclist' is assigned a value but never used.","'patientaddref' is assigned a value but never used.","'setclinicid' is assigned a value but never used.","'load' is assigned a value but never used.","'addressform' is assigned a value but never used.","'DC' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Doclist'. Either include it or remove the dependency array.",["2856"],"React Hook useEffect has a missing dependency: 'CalGrandttl'. Either include it or remove the dependency array.",["2857"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","React Hook useEffect has a missing dependency: 'SubmitSaleEntry'. Either include it or remove the dependency array.",["2858"],"'previoustotal' is assigned a value but never used.","'loading' is assigned a value but never used.",["2859"],"'vendorsref' is assigned a value but never used.","'billname' is assigned a value but never used.","'itemsearch' is assigned a value but never used.","'setitemsearch' is assigned a value but never used.",["2860"],"React Hook useEffect has missing dependencies: 'GETPurchaseList' and 'GETPurchaseListForExcel'. Either include them or remove the dependency array.",["2861"],"'ITEMID' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'CalculateGst'. Either include it or remove the dependency array.",["2862"],"React Hook useEffect has a missing dependency: 'CalculateIGst'. Either include it or remove the dependency array.",["2863"],"React Hook useEffect has a missing dependency: 'Calculate'. Either include it or remove the dependency array.",["2864"],"CallExpression","React Hook useEffect has a missing dependency: 'CalculateCPU'. Either include it or remove the dependency array.",["2865"],["2866"],"React Hook useEffect has missing dependencies: 'GETPurchaseReturns' and 'GETPurchaseReturnsForExcel'. Either include them or remove the dependency array.",["2867"],"'ClinicId' is assigned a value but never used.","'ClinicList' is assigned a value but never used.","'Todaydate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPages', 'GetVaccines', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["2868"],"React Hook useEffect has a missing dependency: 'Get_Detailed_Data'. Either include it or remove the dependency array.",["2869"],"React Hook useEffect has missing dependencies: 'GetMedicines', 'GetPages', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["2870"],["2871"],"React Hook useEffect has missing dependencies: 'GetPages' and 'vaccinelist'. Either include them or remove the dependency array.",["2872"],"'confirmmessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPages' and 'medcinelist'. Either include them or remove the dependency array.",["2873"],"'ClinicID' is assigned a value but never used.","'permission' is assigned a value but never used.","'setupdateindex' is assigned a value but never used.",["2874"],"React Hook useEffect has missing dependencies: 'GETTransferInList' and 'GETTransferInListForExcel'. Either include them or remove the dependency array.",["2875"],"'toggle_npef' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"2876","text":"2877"},["2878"],"React Hook useEffect has missing dependencies: 'GETTransferOutList' and 'GETTransferOutListForExcel'. Either include them or remove the dependency array.",["2879"],"'qr' is assigned a value but never used.","'setqr' is assigned a value but never used.","'GenerateQR' is defined but never used.","'itemid' is assigned a value but never used.","'itemtype' is assigned a value but never used.","'setitemtype' is assigned a value but never used.","'qty' is assigned a value but never used.","'setqty' is assigned a value but never used.","'tableindex' is assigned a value but never used.","'settableindex' is assigned a value but never used.",["2880"],"React Hook useEffect has a missing dependency: 'ClinicName'. Either include it or remove the dependency array.",["2881"],"React Hook useEffect has a missing dependency: 'ClinicList'. Either include it or remove the dependency array.",["2882"],["2883"],"React Hook useEffect has missing dependencies: 'GETDumpList' and 'GETDumpListForExcel'. Either include them or remove the dependency array.",["2884"],"no-dupe-keys","Duplicate key 'dump_date'.","ObjectExpression",["2885"],"no-redeclare","'AddProducts' is already defined.","redeclared","'useRef' is defined but never used.","'useCallback' is defined but never used.","'useDebounceEffect' is defined but never used.","'ReactCrop' is defined but never used.","'Webcam' is defined but never used.","'paymentobj' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AddExtraCharges' and 'AddPaymentMethods'. Either include them or remove the dependency array.",["2886"],"React Hook useEffect has a missing dependency: 'AddExtraCharges'. Either include it or remove the dependency array.",["2887"],"'AddtoCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AdvancePayments' and 'ConsumableAmount'. Either include them or remove the dependency array.",["2888"],"React Hook useEffect has a missing dependency: 'get_docs'. Either include it or remove the dependency array.",["2889"],"'vendorsitems' is already defined.","React Hook useEffect has a missing dependency: 'MakePurchaseEntryExport'. Either include it or remove the dependency array.",["2890"],"React Hook useEffect has a missing dependency: 'MakePurchaseReturnExport'. Either include it or remove the dependency array.",["2891"],"React Hook useEffect has a missing dependency: 'MakeSaleEntryExport'. Either include it or remove the dependency array.",["2892"],"React Hook useEffect has a missing dependency: 'MakeSaleReturnExport'. Either include it or remove the dependency array.",["2893"],"React Hook useEffect has a missing dependency: 'MakeTransferInExport'. Either include it or remove the dependency array.",["2894"],"React Hook useEffect has a missing dependency: 'MakeTransferOutExport'. Either include it or remove the dependency array.",["2895"],"React Hook useEffect has a missing dependency: 'MakeDumpExport'. Either include it or remove the dependency array.",["2896"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'ReactPaginate' is defined but never used.","'URL' is defined but never used.","'TodayDate' is defined but never used.","'DoctorsList' is defined but never used.","'Doctorapi' is defined but never used.","'Secretkey' is defined but never used.","'createContext' is defined but never used.","'timeout_notification' is defined but never used.","'appointmentid' is assigned a value but never used.","'d_form' is assigned a value but never used.","'ArraySum' is defined but never used.","React Hook useEffect has a missing dependency: 'AllAppointments'. Either include it or remove the dependency array.",["2897"],"React Hook useEffect has a missing dependency: 'Appointmentlist'. Either include it or remove the dependency array.",["2898"],["2899"],["2900"],"React Hook useEffect has a missing dependency: 'clinics'. Either include it or remove the dependency array.",["2901"],"React Hook useEffect has a missing dependency: 'FillDetails'. Either include it or remove the dependency array.",["2902"],"'handleimage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPages' and 'getAllPatients'. Either include them or remove the dependency array.",["2903"],"'useMemo' is defined but never used.","'stateref' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetPostal_code'. Either include it or remove the dependency array.",["2904"],"React Hook useEffect has a missing dependency: 'fill_data'. Either include it or remove the dependency array.",["2905"],"'Clinic' is defined but never used.","'lazy' is defined but never used.","'StockReport' is defined but never used.","'OpeningStock' is defined but never used.","'StockValuation' is defined but never used.","'StockReport_By_Name' is defined but never used.","'lng' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentvalue'. Either include it or remove the dependency array.",["2906"],["2907"],["2908"],"React Hook useEffect has a missing dependency: 'ValidatePhone_Number'. Either include it or remove the dependency array.",["2909"],"'adminid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GETBatchDetails', 'GetPages', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["2910"],"React Hook useEffect has a missing dependency: 'GETBatchDetails'. Either include it or remove the dependency array.",["2911"],"'customconfirm' is defined but never used.","'setpages' is assigned a value but never used.","'setpagecount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETStockReport'. Either include it or remove the dependency array.",["2912"],"'date' is assigned a value but never used.","'pages' is assigned a value but never used.","'reversefunction' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETSummaryData'. Either include it or remove the dependency array.",["2913"],"'todate' is assigned a value but never used.","'geocodeByPlaceId' is defined but never used.",["2914"],"'type' is assigned a value but never used.","'settype' is assigned a value but never used.","Imported JSX component Appointments_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Doctors_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pharmacy_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","'Permissions' is defined but never used.","'message_Box' is assigned a value but never used.","'highlighticon' is assigned a value but never used.","'UpdateDoctor' is defined but never used.","'tabindex' is assigned a value but never used.","'settabindex' is assigned a value but never used.","'form' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPages' and 'getAllDoctors'. Either include them or remove the dependency array.",["2915"],"'OpenUpdateDoctor' is defined but never used.","'CloseUpdateDoctor' is defined but never used.","'setsearch' is assigned a value but never used.","'isselectedLoading' is assigned a value but never used.","'setisselectedLoading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'fetchdata'. Either include it or remove the dependency array.",["2916"],["2917"],"'options' is assigned a value but never used.","'optionsindex' is assigned a value but never used.","'setoptionsindex' is assigned a value but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","'setdoctorindex' is assigned a value but never used.","'itemname' is assigned a value but never used.","'setitemname' is assigned a value but never used.","'index' is assigned a value but never used.","'setindex' is assigned a value but never used.",["2918"],"React Hook useEffect has a missing dependency: 'GETStockValuation'. Either include it or remove the dependency array.",["2919"],["2920"],["2921"],["2922"],"React Hook useEffect has a missing dependency: 'GETOpeningStock'. Either include it or remove the dependency array.",["2923"],"'Notiflix' is defined but never used.","'setsearchload' is assigned a value but never used.","'setsearchlist' is assigned a value but never used.","'setdisplaysearchlist' is assigned a value but never used.","'searchname' is assigned a value but never used.","'setsearchname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETTransferIn'. Either include it or remove the dependency array.",["2924"],"React Hook useEffect has a missing dependency: 'Detailed_Data'. Either include it or remove the dependency array.",["2925"],"React Hook useEffect has missing dependencies: 'Detailed_Data' and 'GETTransferOut'. Either include them or remove the dependency array.",["2926"],"'pagecount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GETDoctorWiseSales' and 'GETDoctorWiseSalesReturn'. Either include them or remove the dependency array.",["2927"],["2928"],"React Hook useEffect has a missing dependency: 'GETStockCertification'. Either include it or remove the dependency array.",["2929"],"'currentDate' is assigned a value but never used.","'fromdate' is assigned a value but never used.","'setfromdate' is assigned a value but never used.","'settodate' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'loadvendors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETVendorDetails'. Either include it or remove the dependency array.",["2930"],["2931"],"React Hook useEffect has a missing dependency: 'GETScheduleWiseSales'. Either include it or remove the dependency array.",["2932"],"React Hook useEffect has a missing dependency: 'GETTaxWiseData'. Either include it or remove the dependency array.",["2933"],"'patientname' is assigned a value but never used.","'setpatientname' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GETPatientSalesHistory' and 'GETPatientSalesReturnHistory'. Either include them or remove the dependency array.",["2934"],["2935"],"React Hook useEffect has a missing dependency: 'GETRateList'. Either include it or remove the dependency array.",["2936"],"'taxrate' is assigned a value but never used.","'settaxrate' is assigned a value but never used.",["2937"],"React Hook useEffect has a missing dependency: 'GETGrossProfitMargin'. Either include it or remove the dependency array.",["2938"],"React Hook useEffect has a missing dependency: 'GetDoctors'. Either include it or remove the dependency array.",["2939"],"'doctorstime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DoctorwiseTable'. Either include it or remove the dependency array.",["2940"],"'visibles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DSR_All_Appointments'. Either include it or remove the dependency array.",["2941"],["2942"],"'pendingpaid' is assigned a value but never used.","'setpendingpaid' is assigned a value but never used.","'advancepaid' is assigned a value but never used.","'setadvancepaid' is assigned a value but never used.","'SalePendings' is assigned a value but never used.","'setSalePendings' is assigned a value but never used.","'pr' is assigned a value but never used.","'setpr' is assigned a value but never used.","'setprxl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PharmacyList'. Either include it or remove the dependency array.",["2943"],"'SumExtraCharges' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.",["2944"],["2945"],"'clinicid' is assigned a value but never used.","'ischecked' is assigned a value but never used.",["2946"],"React Hook useEffect has a missing dependency: 'setfromsearch'. Either include it or remove the dependency array.",["2947"],"React Hook useEffect has missing dependencies: 'GetTimeslotsBypropId' and 'getTimefromByPropId'. Either include them or remove the dependency array.",["2948"],"'APIDate' is assigned a value but never used.","'toggledoctorform' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AdvancePayments'. Either include it or remove the dependency array.",["2949"],"React Hook useEffect has a missing dependency: 'ExistedPendingPayments'. Either include it or remove the dependency array.",["2950"],"'TodayDoctors' is assigned a value but never used.","'Doclist' is assigned a value but never used.","'time' is assigned a value but never used.","'gettime_value' is assigned a value but never used.","'Payments' is defined but never used.","'openpayments' is assigned a value but never used.","'setopenpayments' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Change_status'. Either include it or remove the dependency array.",["2951"],"React Hook useEffect has missing dependencies: 'CalculatePaidPendings' and 'calculate'. Either include them or remove the dependency array.",["2952"],"'colorref' is assigned a value but never used.","'setischecked' is assigned a value but never used.",["2953"],"React Hook useEffect has missing dependencies: 'getCurrentTimeslots' and 'props.appointmentdate'. Either include them or remove the dependency array.",["2954"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'getCurrentTimefrom'. Either include it or remove the dependency array.",["2955"],"'confirmmessageforCancel' is assigned a value but never used.","'Doctors' is assigned a value but never used.","'adddoctorfortoday' is assigned a value but never used.","'setadddoctorfortoday' is assigned a value but never used.","'docdate' is assigned a value but never used.","'setdocdate' is assigned a value but never used.",["2956"],["2957"],"'stockref' is assigned a value but never used.","'searchinput' is assigned a value but never used.","'setsearchinput' is assigned a value but never used.","'setdoctorid' is assigned a value but never used.","'doctorname' is assigned a value but never used.","'otherdoctor' is assigned a value but never used.","'setotherdoctor' is assigned a value but never used.","'Dc' is assigned a value but never used.","'setDc' is assigned a value but never used.","'AtC' is assigned a value but never used.","'setAtC' is assigned a value but never used.","'searchload' is assigned a value but never used.","'products' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'main'. Either include it or remove the dependency array.",["2958"],["2959"],"'CaltotalDiscount' is defined but never used.",["2960"],"React Hook useEffect has a missing dependency: 'CalGrandttl2'. Either include it or remove the dependency array.",["2961"],"'toggle_consumables_existed' is assigned a value but never used.","'setload' is assigned a value but never used.",["2962"],"'DeletePaymentMethods' is defined but never used.",["2963"],"'searchlist' is assigned a value but never used.","'displaysearchlist' is assigned a value but never used.","'patientid' is assigned a value but never used.","'setpatientid' is assigned a value but never used.",["2964"],["2965"],["2966"],"React Hook useEffect has a missing dependency: 'CurrentData'. Either include it or remove the dependency array.",["2967"],"'ImageData' is assigned a value but never used.","'setImageData' is assigned a value but never used.","'imgRef' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'imagearr.length' and 'toggleGallery'. Either include them or remove the dependency array.",["2968"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'docobj' is assigned a value but never used.","'reminder' is assigned a value but never used.","'res' is assigned a value but never used.",{"desc":"2969","fix":"2970"},{"desc":"2971","fix":"2972"},{"desc":"2973","fix":"2974"},{"desc":"2975","fix":"2976"},{"desc":"2977","fix":"2978"},{"desc":"2975","fix":"2979"},{"desc":"2977","fix":"2980"},{"desc":"2981","fix":"2982"},{"desc":"2983","fix":"2984"},{"desc":"2985","fix":"2986"},{"desc":"2987","fix":"2988"},{"desc":"2981","fix":"2989"},{"desc":"2990","fix":"2991"},{"desc":"2992","fix":"2993"},{"desc":"2994","fix":"2995"},{"desc":"2996","fix":"2997"},{"desc":"2987","fix":"2998"},{"desc":"2999","fix":"3000"},{"desc":"3001","fix":"3002"},{"desc":"3003","fix":"3004"},{"desc":"3005","fix":"3006"},{"desc":"3007","fix":"3008"},{"desc":"3009","fix":"3010"},{"desc":"2999","fix":"3011"},{"desc":"3012","fix":"3013"},{"desc":"3014","fix":"3015"},{"desc":"3016","fix":"3017"},{"desc":"3018","fix":"3019"},{"desc":"3020","fix":"3021"},{"desc":"3022","fix":"3023"},{"desc":"3024","fix":"3025"},{"desc":"3026","fix":"3027"},{"desc":"3028","fix":"3029"},[348501,348503],".",{"desc":"3026","fix":"3030"},{"desc":"3031","fix":"3032"},{"desc":"2994","fix":"3033"},{"desc":"3034","fix":"3035"},{"desc":"3036","fix":"3037"},{"desc":"3038","fix":"3039"},{"desc":"3040","fix":"3041"},{"desc":"2994","fix":"3042"},{"desc":"3043","fix":"3044"},{"desc":"3045","fix":"3046"},{"desc":"3047","fix":"3048"},{"desc":"3049","fix":"3050"},{"desc":"3051","fix":"3052"},{"desc":"3053","fix":"3054"},{"desc":"3055","fix":"3056"},{"desc":"3057","fix":"3058"},{"desc":"3059","fix":"3060"},{"desc":"3061","fix":"3062"},{"desc":"3063","fix":"3064"},{"desc":"3065","fix":"3066"},{"desc":"3067","fix":"3068"},{"desc":"2977","fix":"3069"},{"desc":"3070","fix":"3071"},{"desc":"3072","fix":"3073"},{"desc":"3074","fix":"3075"},{"desc":"3076","fix":"3077"},{"desc":"3078","fix":"3079"},{"desc":"3080","fix":"3081"},{"desc":"3082","fix":"3083"},{"desc":"3084","fix":"3085"},{"desc":"3078","fix":"3086"},{"desc":"3087","fix":"3088"},{"desc":"3089","fix":"3090"},{"desc":"3091","fix":"3092"},{"desc":"3093","fix":"3094"},{"desc":"3095","fix":"3096"},{"desc":"3078","fix":"3097"},{"desc":"3098","fix":"3099"},{"desc":"3100","fix":"3101"},{"desc":"3102","fix":"3103"},{"desc":"3104","fix":"3105"},{"desc":"3106","fix":"3107"},{"desc":"3104","fix":"3108"},{"desc":"3109","fix":"3110"},{"desc":"3104","fix":"3111"},{"desc":"3112","fix":"3113"},{"desc":"3114","fix":"3115"},{"desc":"3116","fix":"3117"},{"desc":"3118","fix":"3119"},{"desc":"3120","fix":"3121"},{"desc":"2981","fix":"3122"},{"desc":"3123","fix":"3124"},{"desc":"3125","fix":"3126"},{"desc":"3127","fix":"3128"},{"desc":"3129","fix":"3130"},{"desc":"3131","fix":"3132"},{"desc":"3133","fix":"3134"},{"desc":"2981","fix":"3135"},{"desc":"3136","fix":"3137"},{"desc":"2981","fix":"3138"},{"desc":"3139","fix":"3140"},{"desc":"3141","fix":"3142"},{"desc":"3143","fix":"3144"},{"desc":"3145","fix":"3146"},{"desc":"3147","fix":"3148"},{"desc":"3149","fix":"3150"},{"desc":"3084","fix":"3151"},{"desc":"3078","fix":"3152"},{"desc":"3036","fix":"3153"},{"desc":"3154","fix":"3155"},{"desc":"3156","fix":"3157"},{"desc":"3158","fix":"3159"},{"desc":"3160","fix":"3161"},{"desc":"3162","fix":"3163"},{"desc":"3164","fix":"3165"},{"desc":"3036","fix":"3166"},{"desc":"3167","fix":"3168"},{"desc":"3169","fix":"3170"},{"desc":"3158","fix":"3171"},{"desc":"3160","fix":"3172"},{"desc":"3173","fix":"3174"},{"desc":"2992","fix":"3175"},{"desc":"2994","fix":"3176"},{"desc":"3177","fix":"3178"},{"desc":"3179","fix":"3180"},{"desc":"3047","fix":"3181"},{"desc":"3036","fix":"3182"},{"desc":"3167","fix":"3183"},{"desc":"3169","fix":"3184"},{"desc":"3185","fix":"3186"},{"desc":"3187","fix":"3188"},"Update the dependencies array to be: [ClinicId, fetchapi]",{"range":"3189","text":"3190"},"Update the dependencies array to be: [Permissions, role]",{"range":"3191","text":"3192"},"Update the dependencies array to be: [Changepage]",{"range":"3193","text":"3194"},"Update the dependencies array to be: [Get_Document]",{"range":"3195","text":"3196"},"Update the dependencies array to be: [getdata]",{"range":"3197","text":"3198"},{"range":"3199","text":"3196"},{"range":"3200","text":"3198"},"Update the dependencies array to be: [GetPages, fromdate, todate]",{"range":"3201","text":"3202"},"Update the dependencies array to be: [GETSalesList, GETSalesListForExcel, pagecount]",{"range":"3203","text":"3204"},"Update the dependencies array to be: [AddPaymentMethods]",{"range":"3205","text":"3206"},"Update the dependencies array to be: [CalPrevTotal, props.saleentryarr]",{"range":"3207","text":"3208"},{"range":"3209","text":"3202"},"Update the dependencies array to be: [GETSaleReturns, GETSaleReturnsForExcel, pagecount]",{"range":"3210","text":"3211"},"Update the dependencies array to be: [Doclist, doctorid]",{"range":"3212","text":"3213"},"Update the dependencies array to be: [CalGrandttl, SelectedProducts]",{"range":"3214","text":"3215"},"Update the dependencies array to be: [AtC, SubmitSaleEntry]",{"range":"3216","text":"3217"},{"range":"3218","text":"3208"},"Update the dependencies array to be: [GetPages, channel, fromdate, todate]",{"range":"3219","text":"3220"},"Update the dependencies array to be: [GETPurchaseList, GETPurchaseListForExcel, pagecount]",{"range":"3221","text":"3222"},"Update the dependencies array to be: [CalculateGst, sgstprcnt]",{"range":"3223","text":"3224"},"Update the dependencies array to be: [CalculateIGst, igstprcnt]",{"range":"3225","text":"3226"},"Update the dependencies array to be: [Calculate]",{"range":"3227","text":"3228"},"Update the dependencies array to be: [CalculateCPU]",{"range":"3229","text":"3230"},{"range":"3231","text":"3220"},"Update the dependencies array to be: [GETPurchaseReturns, GETPurchaseReturnsForExcel, pagecount]",{"range":"3232","text":"3233"},"Update the dependencies array to be: [GetPages, GetVaccines, Get_Detailed_Data, pagecount, searchname]",{"range":"3234","text":"3235"},"Update the dependencies array to be: [Get_Detailed_Data, vaccineslist]",{"range":"3236","text":"3237"},"Update the dependencies array to be: [GetMedicines, GetPages, Get_Detailed_Data, pagecount, searchname]",{"range":"3238","text":"3239"},"Update the dependencies array to be: [Get_Detailed_Data, medicineslist]",{"range":"3240","text":"3241"},"Update the dependencies array to be: [GetPages, pagecount, vaccinelist]",{"range":"3242","text":"3243"},"Update the dependencies array to be: [GetPages, medcinelist, pagecount]",{"range":"3244","text":"3245"},"Update the dependencies array to be: [fromdate, todate, stat, GetPages]",{"range":"3246","text":"3247"},"Update the dependencies array to be: [fromdate, todate, stat, GETTransferInList, GETTransferInListForExcel]",{"range":"3248","text":"3249"},{"range":"3250","text":"3247"},"Update the dependencies array to be: [fromdate, todate, stat, GETTransferOutList, GETTransferOutListForExcel]",{"range":"3251","text":"3252"},{"range":"3253","text":"3215"},"Update the dependencies array to be: [ClinicName]",{"range":"3254","text":"3255"},"Update the dependencies array to be: [ClinicList]",{"range":"3256","text":"3257"},"Update the dependencies array to be: [fromdate, todate, channel, GetPages]",{"range":"3258","text":"3259"},"Update the dependencies array to be: [fromdate, todate, channel, GETDumpList, GETDumpListForExcel]",{"range":"3260","text":"3261"},{"range":"3262","text":"3215"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods, props.billform]",{"range":"3263","text":"3264"},"Update the dependencies array to be: [AddExtraCharges]",{"range":"3265","text":"3266"},"Update the dependencies array to be: [AdvancePayments, ConsumableAmount]",{"range":"3267","text":"3268"},"Update the dependencies array to be: [get_docs]",{"range":"3269","text":"3270"},"Update the dependencies array to be: [MakePurchaseEntryExport, props.purchaseentryarr]",{"range":"3271","text":"3272"},"Update the dependencies array to be: [MakePurchaseReturnExport, props.purchasereturnarr]",{"range":"3273","text":"3274"},"Update the dependencies array to be: [MakeSaleEntryExport, props.saleentryarr]",{"range":"3275","text":"3276"},"Update the dependencies array to be: [MakeSaleReturnExport, props.salereturnarr]",{"range":"3277","text":"3278"},"Update the dependencies array to be: [MakeTransferInExport, props.transferinarr]",{"range":"3279","text":"3280"},"Update the dependencies array to be: [MakeTransferOutExport, props.transferoutarr]",{"range":"3281","text":"3282"},"Update the dependencies array to be: [MakeDumpExport, props.dumpsarr]",{"range":"3283","text":"3284"},"Update the dependencies array to be: [AllAppointments]",{"range":"3285","text":"3286"},"Update the dependencies array to be: [Appointmentlist, props._selected]",{"range":"3287","text":"3288"},{"range":"3289","text":"3198"},"Update the dependencies array to be: [fetchapi, props._selected]",{"range":"3290","text":"3291"},"Update the dependencies array to be: [clinicid, clinics]",{"range":"3292","text":"3293"},"Update the dependencies array to be: [FillDetails]",{"range":"3294","text":"3295"},"Update the dependencies array to be: [GetPages, getAllPatients, pagecount, patientsearch]",{"range":"3296","text":"3297"},"Update the dependencies array to be: [GetPostal_code, placeid]",{"range":"3298","text":"3299"},"Update the dependencies array to be: [fill_data]",{"range":"3300","text":"3301"},"Update the dependencies array to be: [currentvalue, props.patient_id]",{"range":"3302","text":"3303"},"Update the dependencies array to be: [GetPostal_code, data]",{"range":"3304","text":"3305"},{"range":"3306","text":"3299"},"Update the dependencies array to be: [ValidatePhone_Number, phonenumber]",{"range":"3307","text":"3308"},"Update the dependencies array to be: [searchname, fromdate, todate, GetPages, GETBatchDetails, Get_Detailed_Data]",{"range":"3309","text":"3310"},"Update the dependencies array to be: [GETBatchDetails, pagecount]",{"range":"3311","text":"3312"},"Update the dependencies array to be: [itemid, fromdate, todate, GETStockReport]",{"range":"3313","text":"3314"},"Update the dependencies array to be: [GETSummaryData, fromdate]",{"range":"3315","text":"3316"},{"range":"3317","text":"3299"},"Update the dependencies array to be: [pagecount, Doctorssearch, GetPages, getAllDoctors]",{"range":"3318","text":"3319"},"Update the dependencies array to be: [fetchdata]",{"range":"3320","text":"3321"},"Update the dependencies array to be: [doctorid, fromdate, todate, type, search, fetchdata]",{"range":"3322","text":"3323"},"Update the dependencies array to be: [GetPages, Location_Id, fromdate, todate]",{"range":"3324","text":"3325"},"Update the dependencies array to be: [GETStockValuation, pagecount]",{"range":"3326","text":"3327"},{"range":"3328","text":"3325"},"Update the dependencies array to be: [GETStockReport, pagecount]",{"range":"3329","text":"3330"},{"range":"3331","text":"3325"},"Update the dependencies array to be: [GETOpeningStock, pagecount]",{"range":"3332","text":"3333"},"Update the dependencies array to be: [GETTransferIn, Location_Id]",{"range":"3334","text":"3335"},"Update the dependencies array to be: [Detailed_Data, transferoutarr]",{"range":"3336","text":"3337"},"Update the dependencies array to be: [Detailed_Data, GETTransferOut, Location_Id]",{"range":"3338","text":"3339"},"Update the dependencies array to be: [GETDoctorWiseSales, GETDoctorWiseSalesReturn, doctorid, fromdate, todate]",{"range":"3340","text":"3341"},{"range":"3342","text":"3202"},"Update the dependencies array to be: [GETStockCertification, pagecount]",{"range":"3343","text":"3344"},"Update the dependencies array to be: [GETVendorDetails]",{"range":"3345","text":"3346"},"Update the dependencies array to be: [schedule, fromdate, todate, GetPages]",{"range":"3347","text":"3348"},"Update the dependencies array to be: [GETScheduleWiseSales, pagecount]",{"range":"3349","text":"3350"},"Update the dependencies array to be: [GETTaxWiseData, fromdate]",{"range":"3351","text":"3352"},"Update the dependencies array to be: [patientid, fromdate, todate, GETPatientSalesHistory, GETPatientSalesReturnHistory]",{"range":"3353","text":"3354"},{"range":"3355","text":"3202"},"Update the dependencies array to be: [GETRateList, pagecount]",{"range":"3356","text":"3357"},{"range":"3358","text":"3202"},"Update the dependencies array to be: [GETGrossProfitMargin, pagecount]",{"range":"3359","text":"3360"},"Update the dependencies array to be: [GetDoctors, props.fromdate, props.todate]",{"range":"3361","text":"3362"},"Update the dependencies array to be: [props.fromdate, props.todate, load, DoctorwiseTable]",{"range":"3363","text":"3364"},"Update the dependencies array to be: [DSR_All_Appointments]",{"range":"3365","text":"3366"},"Update the dependencies array to be: [props.doctorid, props.fromdate, props.todate, props.clinic, DSR_All_Appointments]",{"range":"3367","text":"3368"},"Update the dependencies array to be: [props.fromdate, props.todate, props.clinic, PharmacyList]",{"range":"3369","text":"3370"},{"range":"3371","text":"3305"},{"range":"3372","text":"3299"},{"range":"3373","text":"3257"},"Update the dependencies array to be: [props.patientidfromsearch, setfromsearch]",{"range":"3374","text":"3375"},"Update the dependencies array to be: [props.doctorid, doctorid, date, GetTimeslotsBypropId, getTimefromByPropId]",{"range":"3376","text":"3377"},"Update the dependencies array to be: [AdvancePayments]",{"range":"3378","text":"3379"},"Update the dependencies array to be: [ExistedPendingPayments]",{"range":"3380","text":"3381"},"Update the dependencies array to be: [Change_status]",{"range":"3382","text":"3383"},"Update the dependencies array to be: [CalculatePaidPendings, calculate]",{"range":"3384","text":"3385"},{"range":"3386","text":"3257"},"Update the dependencies array to be: [getCurrentTimeslots, props.appointmentdate]",{"range":"3387","text":"3388"},"Update the dependencies array to be: [getCurrentTimefrom, trigger]",{"range":"3389","text":"3390"},{"range":"3391","text":"3379"},{"range":"3392","text":"3381"},"Update the dependencies array to be: [deferredsearch, main]",{"range":"3393","text":"3394"},{"range":"3395","text":"3213"},{"range":"3396","text":"3215"},"Update the dependencies array to be: [CalGrandttl2, props.existedconsumables]",{"range":"3397","text":"3398"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods]",{"range":"3399","text":"3400"},{"range":"3401","text":"3268"},{"range":"3402","text":"3257"},{"range":"3403","text":"3388"},{"range":"3404","text":"3390"},"Update the dependencies array to be: [CurrentData]",{"range":"3405","text":"3406"},"Update the dependencies array to be: [imagearr.length, toggleGallery]",{"range":"3407","text":"3408"},[6179,6189],"[ClinicId, fetchapi]",[14588,14594],"[Permissions, role]",[15387,15409],"[Changepage]",[8275,8277],"[Get_Document]",[8515,8517],"[getdata]",[9938,9940],[10481,10483],[8435,8453],"[GetPages, fromdate, todate]",[8535,8546],"[GETSalesList, GETSalesListForExcel, pagecount]",[22904,22906],"[AddPaymentMethods]",[24535,24555],"[CalPrevTotal, props.saleentryarr]",[48896,48914],[49000,49011],"[GETSaleReturns, GETSaleReturnsForExcel, pagecount]",[60988,60998],"[Doclist, doctorid]",[62106,62124],"[CalGrandttl, SelectedProducts]",[66495,66500],"[AtC, SubmitSaleEntry]",[70750,70770],[146649,146676],"[GetPages, channel, fromdate, todate]",[146764,146775],"[GETPurchaseList, GETPurchaseListForExcel, pagecount]",[198245,198256],"[CalculateGst, sgstprcnt]",[198341,198352],"[CalculateIGst, igstprcnt]",[198413,198426],"[Calculate]",[198487,198516],"[CalculateCPU]",[229344,229371],[229465,229476],"[GETPurchaseReturns, GETPurchaseReturnsForExcel, pagecount]",[277150,277173],"[GetPages, GetVaccines, Get_Detailed_Data, pagecount, searchname]",[277251,277265],"[Get_Detailed_Data, vaccineslist]",[292644,292667],"[GetMedicines, GetPages, Get_Detailed_Data, pagecount, searchname]",[292725,292740],"[Get_Detailed_Data, medicineslist]",[310664,310675],"[GetPages, pagecount, vaccinelist]",[320315,320326],"[GetPages, medcinelist, pagecount]",[336571,336594],"[fromdate, todate, stat, GetPages]",[336686,336709],"[fromdate, todate, stat, GETTransferInList, GETTransferInListForExcel]",[348905,348928],[349022,349045],"[fromdate, todate, stat, GETTransferOutList, GETTransferOutListForExcel]",[392832,392850],[395577,395579],"[ClinicName]",[409760,409762],"[ClinicList]",[412824,412850],"[fromdate, todate, channel, GetPages]",[412927,412953],"[fromdate, todate, channel, GETDumpList, GETDumpListForExcel]",[441244,441262],[4842,4858],"[AddExtraCharges, AddPaymentMethods, props.billform]",[4914,4916],"[AddExtraCharges]",[12668,12670],"[AdvancePayments, ConsumableAmount]",[19260,19262],"[get_docs]",[5697,5721],"[MakePurchaseEntryExport, props.purchaseentryarr]",[11496,11521],"[MakePurchaseReturnExport, props.purchasereturnarr]",[18121,18141],"[MakeSaleEntryExport, props.saleentryarr]",[24436,24457],"[MakeSaleReturnExport, props.salereturnarr]",[32568,32589],"[MakeTransferInExport, props.transferinarr]",[40733,40755],"[MakeTransferOutExport, props.transferoutarr]",[47561,47577],"[MakeDumpExport, props.dumpsarr]",[4759,4761],"[AllAppointments]",[4843,4860],"[Appointmentlist, props._selected]",[14776,14778],[50838,50855],"[fetchapi, props._selected]",[51037,51047],"[clinicid, clinics]",[1626,1628],"[FillDetails]",[2264,2290],"[GetPages, getAllPatients, pagecount, patientsearch]",[4405,4414],"[GetPostal_code, placeid]",[7512,7514],"[fill_data]",[3501,3519],"[currentvalue, props.patient_id]",[6772,6778],"[GetPostal_code, data]",[7518,7527],[7933,7946],"[ValidatePhone_Number, phonenumber]",[6271,6299],"[searchname, fromdate, todate, GetPages, GETBatchDetails, Get_Detailed_Data]",[6355,6366],"[GETBatchDetails, pagecount]",[7437,7463],"[itemid, fromdate, todate, GETStockReport]",[2400,2410],"[GETSummaryData, fromdate]",[5516,5525],[2278,2304],"[pagecount, Doctorssearch, GetPages, getAllDoctors]",[2969,2971],"[fetchdata]",[3027,3068],"[doctorid, fromdate, todate, type, search, fetchdata]",[4179,4210],"[GetPages, Location_Id, fromdate, todate]",[4276,4287],"[GETStockValuation, pagecount]",[4872,4903],[4966,4977],"[GETStockReport, pagecount]",[4467,4498],[4562,4573],"[GETOpeningStock, pagecount]",[2206,2219],"[GETTransferIn, Location_Id]",[3932,3948],"[Detailed_Data, transferoutarr]",[4024,4037],"[Detailed_Data, GETTransferOut, Location_Id]",[4952,4980],"[GETDoctorWiseSales, GETDoctorWiseSalesReturn, doctorid, fromdate, todate]",[3786,3804],[3874,3885],"[GETStockCertification, pagecount]",[4750,4752],"[GETVendorDetails]",[3850,3878],"[schedule, fromdate, todate, GetPages]",[3947,3958],"[GETScheduleWiseSales, pagecount]",[2231,2241],"[GETTaxWiseData, fromdate]",[4644,4673],"[patientid, fromdate, todate, GETPatientSalesHistory, GETPatientSalesReturnHistory]",[3743,3761],[3821,3832],"[GETRateList, pagecount]",[3848,3866],[3935,3946],"[GETGrossProfitMargin, pagecount]",[1050,1080],"[GetDoctors, props.fromdate, props.todate]",[5267,5303],"[props.fromdate, props.todate, load, DoctorwiseTable]",[2143,2145],"[DSR_All_Appointments]",[2202,2262],"[props.doctorid, props.fromdate, props.todate, props.clinic, DSR_All_Appointments]",[1701,1745],"[props.fromdate, props.todate, props.clinic, PharmacyList]",[3492,3498],[4300,4309],[1616,1618],[1819,1846],"[props.patientidfromsearch, setfromsearch]",[4008,4040],"[props.doctorid, doctorid, date, GetTimeslotsBypropId, getTimefromByPropId]",[1536,1538],"[AdvancePayments]",[3201,3203],"[ExistedPendingPayments]",[2001,2071],"[Change_status]",[2146,2148],"[CalculatePaidPendings, calculate]",[1341,1343],[2936,2939],"[getCurrentTimeslots, props.appointmentdate]",[3004,3013],"[getCurrentTimefrom, trigger]",[1586,1588],[3437,3439],[6506,6522],"[deferredsearch, main]",[7167,7177],[8707,8725],[8782,8808],"[CalGrandttl2, props.existedconsumables]",[3867,3869],"[AddExtraCharges, AddPaymentMethods]",[7591,7593],[1515,1517],[3184,3187],[3252,3261],[834,836],"[CurrentData]",[1579,1590],"[imagearr.length, toggleGallery]"]