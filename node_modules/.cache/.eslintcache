[{"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\Exports.jsx":"1","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\pharmacy.jsx":"2","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Pharmacy_Dsr.jsx":"3","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Appointments_Dsr.jsx":"4","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Doctors_Dsr.jsx":"5","C:\\Users\\prath\\Desktop\\Connect_App\\src\\index.jsx":"6","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\WelcomeLoader.jsx":"7","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\livetime.jsx":"8","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Timer.jsx":"9","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\SearchField.jsx":"10","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Doctor.jsx":"11","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddPatient.jsx":"12","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddAppointment.jsx":"13","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddDoctorSlot.jsx":"14","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\apiarrays.jsx":"15","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\AllAppointmentslist.jsx":"16","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedAppointments.jsx":"17","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Patients\\UpdatePatient.jsx":"18","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Doctors\\UpdateDoctor.jsx":"19","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customconfirm.jsx":"20","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Payments.jsx":"21","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AmountPaid.jsx":"22","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedTimeAppointment.jsx":"23","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\SelectedDoctorSlot.jsx":"24","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\UpdateAppointment.jsx":"25","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Bill.jsx":"26","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Bill.jsx":"27","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\UpdateAppointment.jsx":"28","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Payments.jsx":"29","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Vitals.jsx":"30","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customloading.jsx":"31","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\UpdateMedicine.jsx":"32","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\NewMedicine.jsx":"33","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customnotify.jsx":"34","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\ExportExcel.jsx":"35","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Bootstrap_Confirm.jsx":"36","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\qrcode.jsx":"37","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddConsumables.jsx":"38","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Navbar.jsx":"39","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Clinic.jsx":"40","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\InactiveLogout.jsx":"41","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Appointments.jsx":"42","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Patients.jsx":"43","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Doctors.jsx":"44","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Dsr.jsx":"45","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\DSR.jsx":"46","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Pharmacy.jsx":"47"},{"size":35303,"mtime":1681971128645,"results":"48","hashOfConfig":"49"},{"size":341969,"mtime":1684314989113,"results":"50","hashOfConfig":"49"},{"size":70885,"mtime":1684316648647,"results":"51","hashOfConfig":"49"},{"size":59164,"mtime":1684315006244,"results":"52","hashOfConfig":"49"},{"size":18287,"mtime":1684316548269,"results":"53","hashOfConfig":"49"},{"size":18499,"mtime":1684388773305,"results":"54","hashOfConfig":"49"},{"size":432,"mtime":1683550684327,"results":"55","hashOfConfig":"49"},{"size":696,"mtime":1681972441625,"results":"56","hashOfConfig":"49"},{"size":878,"mtime":1681970785435,"results":"57","hashOfConfig":"49"},{"size":4562,"mtime":1683976429651,"results":"58","hashOfConfig":"49"},{"size":41632,"mtime":1684576465262,"results":"59","hashOfConfig":"49"},{"size":38853,"mtime":1684564722614,"results":"60","hashOfConfig":"49"},{"size":12337,"mtime":1684394672653,"results":"61","hashOfConfig":"49"},{"size":5259,"mtime":1682501127306,"results":"62","hashOfConfig":"49"},{"size":10117,"mtime":1681970785435,"results":"63","hashOfConfig":"49"},{"size":20794,"mtime":1683546807758,"results":"64","hashOfConfig":"49"},{"size":17776,"mtime":1683546839630,"results":"65","hashOfConfig":"49"},{"size":39914,"mtime":1682312904355,"results":"66","hashOfConfig":"49"},{"size":132,"mtime":1677302514312,"results":"67","hashOfConfig":"49"},{"size":1018,"mtime":1682771774115,"results":"68","hashOfConfig":"49"},{"size":21537,"mtime":1682500928735,"results":"69","hashOfConfig":"49"},{"size":2510,"mtime":1684150397632,"results":"70","hashOfConfig":"49"},{"size":7238,"mtime":1684145955287,"results":"71","hashOfConfig":"49"},{"size":4623,"mtime":1684147521339,"results":"72","hashOfConfig":"49"},{"size":13333,"mtime":1683889089488,"results":"73","hashOfConfig":"49"},{"size":29754,"mtime":1684577224837,"results":"74","hashOfConfig":"49"},{"size":33182,"mtime":1684316830813,"results":"75","hashOfConfig":"49"},{"size":13249,"mtime":1683888839529,"results":"76","hashOfConfig":"49"},{"size":21847,"mtime":1682512282831,"results":"77","hashOfConfig":"49"},{"size":9736,"mtime":1682501182131,"results":"78","hashOfConfig":"49"},{"size":695,"mtime":1681970785436,"results":"79","hashOfConfig":"49"},{"size":11993,"mtime":1683614653816,"results":"80","hashOfConfig":"49"},{"size":11427,"mtime":1683614869277,"results":"81","hashOfConfig":"49"},{"size":2135,"mtime":1677302514789,"results":"82","hashOfConfig":"49"},{"size":896,"mtime":1684314375792,"results":"83","hashOfConfig":"49"},{"size":761,"mtime":1681970726540,"results":"84","hashOfConfig":"49"},{"size":383,"mtime":1681970785435,"results":"85","hashOfConfig":"49"},{"size":32691,"mtime":1684577411894,"results":"86","hashOfConfig":"49"},{"size":11416,"mtime":1684394982360,"results":"87","hashOfConfig":"49"},{"size":6697,"mtime":1684305956262,"results":"88","hashOfConfig":"49"},{"size":2117,"mtime":1684389684953,"results":"89","hashOfConfig":"49"},{"size":11223,"mtime":1683358417364,"results":"90","hashOfConfig":"49"},{"size":9661,"mtime":1683358205114,"results":"91","hashOfConfig":"49"},{"size":8295,"mtime":1683358246743,"results":"92","hashOfConfig":"49"},{"size":6744,"mtime":1683357780603,"results":"93","hashOfConfig":"49"},{"size":6533,"mtime":1684315313525,"results":"94","hashOfConfig":"49"},{"size":3262,"mtime":1683358392167,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},"14qdzjp",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":346,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":80,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":63,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":2,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"100"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"100"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"100"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"100"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"100"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"100"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"100"},"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\Exports.jsx",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301"],[],"import React, { useState, useEffect } from 'react'\r\nimport { ExportExcel } from '../features/ExportExcel'\r\n\r\nconst ExportPurchaseEntry = (props) => {\r\n    const [ExportPurchaseEntry, setExportPurchaseEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Purchase Entry'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakePurchaseEntryExport() {\r\n        if (props.purchaseentryarr.length !== 0) {\r\n            for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n                var vendorsitems = props.purchaseentryarr[i].medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost in Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.purchaseentryarr[i].vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccines && Data.vaccines.name && Data.vaccines.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.vaccines && Data.vaccines.hsn_code !== null ? Data.vaccines.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n\r\n            }\r\n\r\n            // for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n            //     var vendorsitems = props.purchaseentryarr[i].vaccines.map(Data => ({\r\n            //         'Type': 'Vaccine',\r\n            //         'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n            //         'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n            //         'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n            //         'Distributor': Data.purchase_entry.distributor.entity_name,\r\n            //         'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n            //         'Item ID': Data.id != null ? Data.id : '',\r\n            //         'Item Name': Data.vaccines && Data.vaccines.name && Data.vaccines.name != null ? Data.medicine.name : '',\r\n            //         'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n            //         'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n            //         'MRP': Data.mrp != null ? Data.mrp : '',\r\n            //         'Rate': Data.rate != null ? Data.rate : '',\r\n            //         'Discount': Data.discount != null ? Data.discount : '',\r\n            //         'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'IGST %': Data.IGST_rate,\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n            //         'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Cost Rs': Data.cost,\r\n            //         'Qty': Data.qty,\r\n            //         'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n            //         'HSN Code': Data.vaccines && Data.vaccines.hsn_code !== null ? Data.vaccines.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n\r\n            var obj2 = obj.flat()\r\n            setExportPurchaseEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseEntryExport()\r\n        }\r\n        func()\r\n    }, [props.purchaseentryarr])\r\n    // console.log(props.purchaseentryarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ExportPurchaseEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportPurchaseEntry }\r\n\r\nconst ExportPurchaseReturn = (props) => {\r\n    const [ReturnEntry, setReturnEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Purchase Return'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakePurchaseReturnExport() {\r\n        if (props.purchasereturnarr.length !== 0) {\r\n            for (let i = 0; i < props.purchasereturnarr.length; i++) {\r\n                let distributor = props.purchasereturnarr[i].distributor.entity_name\r\n                let GST = props.purchasereturnarr[i].distributor.GSTIN_no\r\n                console.log()\r\n                var vendorsitems = props.purchasereturnarr[i].purchase_medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': distributor,\r\n                    'GSTIN': GST,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.purchasereturnarr[i].purchase_vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': distributor,\r\n                    'GSTIN': GST,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Qty': Data.qty,\r\n                    'Discount %': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc. %5': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n\r\n            // for (let i = 0; i < props.purchasereturnarr.length; i++) {\r\n            //     let distributor = props.purchasereturnarr[i].distributor.entity_name\r\n            //     let GST = props.purchasereturnarr[i].distributor.GSTIN_no\r\n            //     var vendorsitems = props.purchasereturnarr[i].purchase_vaccines.map(Data => ({\r\n            //         'Type': 'Vaccine',\r\n            //         'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n            //         'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n            //         'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n            //         'Distributor': distributor,\r\n            //         'GSTIN': GST,\r\n            //         'Item ID': Data.id != null ? Data.id : '',\r\n            //         'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n            //         'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n            //         'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n            //         'MRP': Data.mrp != null ? Data.mrp : '',\r\n            //         'Rate': Data.rate != null ? Data.rate : '',\r\n            //         'Discount %': Data.discount != null ? Data.discount : '',\r\n            //         'Trade Disc. %5': Data.trade_discount != null ? Data.trade_discount : '',\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'IGST %': Data.IGST_rate,\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n            //         'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Cost Rs': Data.cost,\r\n            //         'Qty': Data.qty,\r\n            //         'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n            //         'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n            var obj2 = obj.flat()\r\n            setReturnEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseReturnExport()\r\n        }\r\n        func()\r\n    }, [props.purchasereturnarr])\r\n    console.log(props.purchasereturnarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ReturnEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportPurchaseReturn }\r\n\r\nconst ExportSaleEntry = (props) => {\r\n    const [SaleEntry, setSaleEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Sale Entry'\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTaxPercent(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function TotalTax(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function taxableAmount(amt, cgst, sgst, igst) {\r\n        if (amt) {\r\n            amt = amt - (cgst + sgst + igst)\r\n            return amt\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    async function MakeSaleEntryExport() {\r\n        if (props.saleentryarr.length !== 0) {\r\n\r\n            var obj = []\r\n            for (let i = 0; i < props.saleentryarr.length; i++) {\r\n                let billid = props.saleentryarr[i].bill_id ? props.saleentryarr[i].bill_id : ''\r\n                let billdate = props.saleentryarr[i].bill_date ? reversefunction(props.saleentryarr[i].bill_date) : ''\r\n                let name = props.saleentryarr[i].patient.full_name !== null ? props.saleentryarr[i].patient.full_name : ''\r\n                let doctor = props.saleentryarr[i].doctor_name !== null ? props.saleentryarr[i].doctor_name : ''\r\n\r\n                var vendorsitems = props.saleentryarr[i].sale_medicines.map(Data => ({\r\n                    'Type': 'Medicine',\r\n                    'Bill ID': billid,\r\n                    'Name': name,\r\n                    'Doctor': doctor,\r\n                    // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': billdate,\r\n                    'Item ID': Data.medicine_stocks.id != null ? Data.medicine_stocks.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stocks.batch_no != null ? Data.medicine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.medicine_stocks.expiry_date) : '',\r\n                    'Rate': Data.medicine_stocks.rate != null ? Data.medicine_stocks.rate : '',\r\n                    'Cost': Data.medicine_stocks.cost != null ? Data.medicine_stocks.cost : '',\r\n                    'MRP': Data.medicine_stocks.mrp != null ? Data.medicine_stocks.mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'Disc. %': Data.discount != null ? Data.discount : '',\r\n                    'Taxable Amt': taxableAmount(Number(Data.total_amount), Number(Data.CGST), Number(Data.SGST), Number(Data.IGST)),\r\n                    'Total CGST': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'Total SGST': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'Total IGST': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total Tax ': TotalTax(Data.CGST, Data.SGST, Data.IGST) * Number(Data.qty),\r\n                    'Amount': Data.total_amount !== null ? Data.total_amount : '',\r\n                    'Grand Total': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.saleentryarr[i].sale_vaccines.map(Data => ({\r\n                    'Type': 'Vaccine',\r\n                    'Bill ID': billid,\r\n                    'Name': name,\r\n                    'Doctor': doctor,\r\n                    // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': billdate,\r\n                    'Item ID': Data.vaccine_stocks.id != null ? Data.vaccine_stocks.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.vaccine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n                    'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n                    'Cost': Data.vaccine_stocks.cost != null ? Data.vaccine_stocks.cost : '',\r\n                    'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'Disc. %': Data.discount != null ? Data.discount : '',\r\n                    'Taxable Amt': taxableAmount(Number(Data.total_amount), Number(Data.CGST), Number(Data.SGST), Number(Data.IGST)),\r\n                    'Total CGST': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'Total SGST': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'Total IGST': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total Tax ': TotalTax(Data.CGST, Data.SGST, Data.IGST) * Number(Data.qty),\r\n                    'Amount': Data.total_amount !== null ? Data.total_amount : '',\r\n                    'Grand Total': Data.total_amount ? Data.total_amount : '',\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n\r\n            // for (let i = 0; i < props.saleentryarr.length; i++) {\r\n            //     let billid = props.saleentryarr[i].bill_id ? props.saleentryarr[i].bill_id : ''\r\n            //     let billdate = props.saleentryarr[i].bill_date ? reversefunction(props.saleentryarr[i].bill_date) : ''\r\n            //     let name = props.saleentryarr[i].patient.full_name !== null ? props.saleentryarr[i].patient.full_name : ''\r\n            //     let doctor = props.saleentryarr[i].doctor_name !== null ? props.saleentryarr[i].doctor_name : ''\r\n            //     var vendorsitems = props.saleentryarr[i].sale_vaccines.map(Data => ({\r\n            //         'Type': 'Vaccine',\r\n            //         'Bill ID': billid,\r\n            //         'Name': name,\r\n            //         'Doctor Name': doctor,\r\n            //         // 'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n            //         'Bill Date': billdate,\r\n            //         'Item ID': Data.vaccine_stocks.id != null ? Data.vaccine_stocks.id : '',\r\n            //         'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n            //         'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n            //         'Qty': Data.qty,\r\n            //         'ExpiryDate': Data.vaccine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n            //         'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n            //         'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n            //         'Discount': Data.discount != null ? Data.discount : '',\r\n            //         'Taxable Amount in Rs': Data.total_amount !== null ? Data.total_amount : '',\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'IGST %': Data.IGST_rate,\r\n            //         'Total Tax in %': TotalTaxPercent(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.CGST, Data.CGST, Data.qty),\r\n            //         'Grand Total Rs': Data.vaccine_stocks.total_amount ? Data.vaccine_stocks.total_amount : '',\r\n            //         'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n            var obj2 = obj.flat()\r\n            setSaleEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeSaleEntryExport()\r\n        }\r\n        func()\r\n    }, [props.saleentryarr])\r\n    console.log(props.saleentryarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={SaleEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportSaleEntry }\r\nconst ExportSaleReturn = (props) => {\r\n    const [ReturnEntry, setReturnEntry] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate + 'Sale Returns'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTax(cgst, sgst, igst, qty) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return (Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    var obj = []\r\n    async function MakeSaleReturnExport() {\r\n        if (props.salereturnarr.length !== 0) {\r\n            for (let i = 0; i < props.salereturnarr.length; i++) {\r\n                let returndate = props.salereturnarr[i].return_date !== null ? reversefunction(props.salereturnarr[i].return_date) : ''\r\n                let seid = props.salereturnarr[i].sale_entry_id !== null ? 'P-' + props.salereturnarr[i].sale_entry_id : ''\r\n                let srid = props.salereturnarr[i].return_no !== null ? 'SR-' + props.salereturnarr[i].return_no : ''\r\n                let name = props.salereturnarr[i].sale_entry.patient.full_name !== null ? props.salereturnarr[i].sale_entry.patient.full_name : ''\r\n                let returnedamt = props.salereturnarr[i].grand_total !== null ? props.salereturnarr[i].grand_total : ''\r\n                console.log()\r\n                var vendorsitems = props.salereturnarr[i].sale_medicines.map(Data => ({\r\n                    'Return No.': srid,\r\n                    'Name': name,\r\n                    'Type': 'Medicine',\r\n                    'SE ID': seid,\r\n                    // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n                    'Return Date': returndate,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : '',\r\n                    'Batch No.': Data.medicine_stocks.batch_no != null ? Data.medicine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.medicine_stocks.expiry_date) : '',\r\n                    'MRP': Data.medicine_stocks.mrp != null ? Data.medicine_stocks.mrp : '',\r\n                    'Rate': Data.medicine_stocks.rate != null ? Data.medicine_stocks.rate : '',\r\n                    'Cost': Data.medicine_stocks.cost != null ? Data.medicine_stocks.cost : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'IGST %': Data.IGST_rate,\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST, Data.qty),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'Returned Amount': returnedamt,\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n                var vendorsitems = props.salereturnarr[i].sale_vaccines.map(Data => ({\r\n                    'Return No.': srid,\r\n                    'Name': name,\r\n                    'Type': 'Vaccine',\r\n                    'SE ID': seid,\r\n                    // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n                    'Return Date': returndate,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n                    'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : '',\r\n                    'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n                    'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n                    'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n                    'Rate': Data.vaccine_stocks.rate != null ? Data.vaccine_stocks.rate : '',\r\n                    'Cost': Data.vaccine_stocks.cost != null ? Data.vaccine_stocks.cost : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n                    'Qty': Data.qty,\r\n                    'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n                    'CGST %': Data.CGST_rate,\r\n                    'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n                    'SGST %': Data.SGST_rate,\r\n                    'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n                    'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST),\r\n                    'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'Returned Amount': returnedamt,\r\n\r\n                }))\r\n                obj.push(vendorsitems)\r\n            }\r\n\r\n            // for (let i = 0; i < props.salereturnarr.length; i++) {\r\n            //     let returndate = props.salereturnarr[i].return_date !== null ? reversefunction(props.salereturnarr[i].return_date) : ''\r\n            //     let seid = props.salereturnarr[i].sale_entry_id !== null ? 'P-' + props.salereturnarr[i].sale_entry_id : ''\r\n            //     let srid = props.salereturnarr[i].return_no !== null ? 'SR-' + props.salereturnarr[i].return_no : ''\r\n            //     let name = props.salereturnarr[i].sale_entry.patient.full_name !== null ? props.salereturnarr[i].sale_entry.patient.full_name : ''\r\n            //     let returnedamt = props.salereturnarr[i].grand_total !== null ? props.salereturnarr[i].grand_total : ''\r\n            //     console.log()\r\n            //     var vendorsitems = props.salereturnarr[i].sale_vaccines.map(Data => ({\r\n            //         'Return No.': srid,\r\n            //         'Name': name,\r\n            //         'Type': 'Vaccine',\r\n            //         'SE ID': seid,\r\n            //         // 'Invoice No.': Data.sale_entry.invoice_no && Data.sale_entry.invoice_no != null ? Data.sale_entry.invoice_no : '',\r\n            //         'Return Date': returndate,\r\n            //         'Item ID': Data.id != null ? Data.id : '',\r\n            //         'Item Name': Data.vaccine && Data.vaccine.name && Data.vaccine.name != null ? Data.vaccine.name : '',\r\n            //         'Batch No.': Data.vaccine_stocks.batch_no != null ? Data.vaccine_stocks.batch_no : '',\r\n            //         'ExpiryDate': Data.medicine_stocks.expiry_date !== null ? reversefunction(Data.vaccine_stocks.expiry_date) : '',\r\n            //         'MRP': Data.vaccine_stocks.mrp != null ? Data.vaccine_stocks.mrp : '',\r\n            //         'Discount': Data.discount != null ? Data.discount : '',\r\n            //         'Selling Cost in Rs': Data.disc_mrp !== null ? Data.disc_mrp : '',\r\n            //         'Qty': Data.qty,\r\n            //         'CGST in Rs': Number(Data.CGST) * Number(Data.qty),\r\n            //         'CGST %': Data.CGST_rate,\r\n            //         'SGST in Rs': Number(Data.SGST) * Number(Data.qty),\r\n            //         'SGST %': Data.SGST_rate,\r\n            //         'IGST in Rs': Number(Data.IGST) * Number(Data.qty),\r\n            //         'Total Tax in Rs': TotalTax(Data.CGST, Data.SGST, Data.IGST),\r\n            //         'Total Tax %': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n            //         'Total in Rs': Data.total_amount ? Data.total_amount : '',\r\n            //         'Returned Amount': returnedamt,\r\n            //         'HSN Code': Data.vaccine && Data.vaccine.hsn_code !== null ? Data.vaccine.hsn_code : ''\r\n            //     }))\r\n            //     obj.push(vendorsitems)\r\n\r\n            // }\r\n            var obj2 = obj.flat()\r\n            setReturnEntry(obj2)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakeSaleReturnExport()\r\n        }\r\n        func()\r\n    }, [props.salereturnarr])\r\n    console.log(props.salereturnarr)\r\n    return (\r\n        <>\r\n            <ExportExcel apiData={ReturnEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\nexport { ExportSaleReturn }",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\pharmacy.jsx",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../index\";\r\nimport {\r\n  ExportPurchaseEntry,\r\n  ExportPurchaseReturn,\r\n  ExportSaleEntry,\r\n  ExportSaleReturn,\r\n} from \"../pharmacy/Exports\";\r\nimport { QRcode } from \"../features/qrcode\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport \"../../css/bootstrap.css\";\r\nimport \"../../css/dashboard.css\";\r\nimport \"../../css/pharmacy.css\";\r\nimport {\r\n  Purchaseorderarray,\r\n  Pharmacystocktable,\r\n  POitemdetailsarray,\r\n} from \"./apiarrays\";\r\nimport { NewMedicine } from \"./NewMedicine\";\r\nimport { UpdateMedicine } from \"./UpdateMedicine\";\r\n\r\n//-------------------------------------------------Sales------------------------------------------------------------------------------------------\r\nfunction Salesection(props) {\r\n  const permission = useContext(Permissions);\r\n  const first = [\r\n    {\r\n      option: \"Sale Entry\",\r\n      display: permission.sale_entry_view ? 1 : 0,\r\n    },\r\n    {\r\n      option: \"Sale Returns\",\r\n      display: permission.sale_return_view ? 1 : 0,\r\n    },\r\n  ];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return (\r\n        <Saleentrysection function={props.func} function2={props.function} />\r\n      );\r\n    }\r\n    if (_selected === 1) {\r\n      return <SaleReturns />;\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"salesection pt-1\">\r\n        <div className=\"container-fluid p-0 m-0\">\r\n          <div className=\"row gx-3 p-0 m-0\">\r\n            <div className=\"col-10\">\r\n              <div className=\"row\">\r\n                {first.map((e, i) => {\r\n                  return (\r\n                    <div\r\n                      className={`col-auto salebuttons d-${e.display == 1 ? \"\" : \"none\"\r\n                        }`}\r\n                    >\r\n                      <button\r\n                        className={`btn btn-sm rounded-pill text-${i === second ? \"light\" : \"dark\"\r\n                          } bg-${i === second ? \"charcoal\" : \"seashell\"}`}\r\n                        onClick={(a) => setSecond(i)}\r\n                      >\r\n                        {e.option}\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid p-0 m-0 pt-3\">\r\n          <div className=\"\">{_selectedScreen(second)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction Saleentrysection(props) {\r\n  const permission = useContext(Permissions);\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const url = useContext(URL);\r\n  const [seidw, setseidw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1);\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [saleentryarr, setsaleentryarr] = useState([]);\r\n  const [saleentryarrforExcel, setsaleentryarrforExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const [pages, setpages] = useState([]);\r\n  const [paymentsapage, setpaymentsapage] = useState(\"none\");\r\n  const [tabindex, settabindex] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n\r\n  const toggle_nsef = () => {\r\n    if (nsef === \"none\") {\r\n      setnsef(\"block\");\r\n    }\r\n    if (nsef === \"block\") {\r\n      setnsef(\"none\");\r\n    }\r\n  };\r\n  const toggle_seidw = () => {\r\n    if (seidw === \"none\") {\r\n      setseidw(\"block\");\r\n    }\r\n    if (seidw === \"block\") {\r\n      setseidw(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const toggle_payments = () => {\r\n    if (paymentsapage === \"none\") {\r\n      setpaymentsapage(\"block\");\r\n    }\r\n    if (paymentsapage === \"block\") {\r\n      setpaymentsapage(\"none\");\r\n      settabindex();\r\n    }\r\n  };\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/entry?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETSalesList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n            }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            setsaleentryarr(response.data.data.sale_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            setsaleentryarr(response.data.data.sale_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETSalesListForExcel() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/entry?clinic_id=${ClinicID}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setsaleentryarrforExcel(response.data.data.sale_entry);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [channel, fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETSalesList();\r\n    GETSalesListForExcel();\r\n  }, [pagecount]);\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  let array = [\r\n    [1, \"Confirmed\", \"lightgreen\"],\r\n    [2, \"Payment done\", \"success\"],\r\n    [3, \"Completed\", \"lightyellow\"],\r\n    [4, \"Cancelled\", \"lightred\"],\r\n  ];\r\n  function status(number) {\r\n    let status;\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1];\r\n        break;\r\n      }\r\n    }\r\n    return status;\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2];\r\n        break;\r\n      }\r\n    }\r\n    return status_color;\r\n  }\r\n  //Status\r\n  const UpdateStatus = async (e, id) => {\r\n    console.log(e.target.value, id);\r\n    try {\r\n      await axios\r\n        .post(`${url}/sale/entry/change/status`, {\r\n          sale_entry_id: id,\r\n          status: e.target.value,\r\n          admin_id: adminid,\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          Notiflix.Notify.success(response.data.message);\r\n          GETSalesList();\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  };\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle(\"Generating Bill\", {\r\n      backgroundColor: \"rgb(242, 242, 242,0.5)\",\r\n      svgColor: \"#96351E\",\r\n      messageColor: \"#96351E\",\r\n      messageFontSize: \"1.5rem\",\r\n    });\r\n    try {\r\n      axios\r\n        .post(`${url}/sale/entry/bill`, {\r\n          sale_entry_id: id,\r\n          admin_id: adminid,\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          Notiflix.Notify.success(response.data.message);\r\n          window.open(response.data.data.bill_url, \"_blank\", \"noreferrer\");\r\n          Notiflix.Loading.remove();\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n      Notiflix.Loading.remove();\r\n    }\r\n  };\r\n  const Send_On_WhatsApp = async (id, phone) => {\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure(\r\n        \"Please Add a Phone Number to send the message on WhatsApp\"\r\n      );\r\n    } else {\r\n      Notiflix.Loading.circle(\"Sending Bill on Whats App\", {\r\n        backgroundColor: \"rgb(242, 242, 242,0.5)\",\r\n        svgColor: \"#96351E\",\r\n        messageColor: \"#96351E\",\r\n        messageFontSize: \"1.5rem\",\r\n      });\r\n      try {\r\n        axios\r\n          .post(`${url}/sale/entry/send/bill/whatsapp`, {\r\n            sale_entry_id: id,\r\n            admin_id: adminid,\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            Notiflix.Notify.success(response.data.message);\r\n            Notiflix.Loading.remove();\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        Notiflix.Loading.remove();\r\n      }\r\n    }\r\n  };\r\n  console.log(saleentryarr, pages);\r\n  return (\r\n    <>\r\n      <button className={`button addentrypurchase button-charcoal position-absolute d-${permission.sale_entry_add == 1 ? \"\" : \"none\"}`} onClick={toggle_nsef} >\r\n        <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" style={{ width: `1.5rem` }} />\r\n        Entry Sale\r\n      </button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between justify-content-md-evenly justify-content-center text-center mt-2\">\r\n        <div className=\"col-lg-2 col-md-2 col-3 text-center p-0 m-0 \">\r\n          <button type=\"button\" className=\"btn p-0 m-0 heading text-charcoal fw-bolder  \" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Sale Entries\" : \"Sale Entry\"}{\" \"} </button>\r\n        </div>\r\n        <div className=\"col-lg-8 col-md-8 col-7  p-0 m-0  border-0\">\r\n          <div className=\"row p-0 m-0 border-burntumber fw-bolder rounded-1\">\r\n            {/* <div className=\"col-4 bg-pearl rounded-1\">\r\n              <select className='p-0 m-0 bg-pearl border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div> */}\r\n            <div className=\"col-6 p-0 m-0 text-burntumber text-center fw-bolder bg-pearl  rounded-1 \">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"p-0 m-0 border-0 bg-pearl text-burntumber text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-6 p-0 m-0  text-burntumber text-center fw-bolder bg-pearl rounded-1\">\r\n              <input type=\"date\" className=\" p-0 m-0 border-0 bg-pearl text-burntumber text-center fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 p-0 m-0 export col-md-2 col-lg-2 align-self-center text-center \">\r\n          <ExportSaleEntry saleentryarr={saleentryarrforExcel} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n        <table className=\"table text-start table-responsive\">\r\n          <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n            <tr className=\" \">\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Bill ID </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Patient Name </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Bill Date </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Bill Total </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Appointment Date </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Doctor Name </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Invoice No. </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1 text-center\"> Status </th>\r\n              <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1 text-center\"> Actions </th>\r\n              {/* <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>more</th> */}\r\n            </tr>\r\n          </thead>\r\n          {Loading ? (\r\n            <tbody\r\n              className=\"text-center\"\r\n              style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n            >\r\n              <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                <div class=\"d-flex align-items-center spinner\">\r\n                  <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                    Getting Details please be Patient ...\r\n                  </strong>\r\n                  <div\r\n                    className=\"spinner-border ms-auto\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></div>\r\n                </div>\r\n              </tr>\r\n            </tbody>\r\n          ) : saleentryarr && saleentryarr.length != 0 ? (\r\n            <tbody>\r\n              {saleentryarr.map((item, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                  <td className=\"text-charcoal fw-bold\"> {item.bill_id && item.bill_id !== null ? \"P-\" + item.bill_id : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.patient && item.patient && item.patient.full_name != null ? item.patient.full_name : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.bill_date && item.bill_date ? reversefunction(item.bill_date) : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.grand_total && item.grand_total ? \"Rs. \" + item.grand_total : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.appointment && item.appointment != null && item.appointment.appointment_date && item.appointment.appointment_date != null ? reversefunction(item.appointment.appointment_date) : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item && item.doctor_name != null ? item.doctor_name : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold\"> {item.appointment && item.appointment != null && item.appointment.bill_id && item.appointment.bill_id != null ? item.appointment.bill_id : \"\"} </td>\r\n                  <td className=\"text-charcoal fw-bold text-center\">\r\n                    <select disabled={item.sale_entry_status == 4 ? true : false} className={` fw-bolder border-0 bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} text-center rounded-pill  bg-${status_color(item.sale_entry_status)}`} name={item.id} onChange={(e) => { UpdateStatus(e, item.id); }} style={{ appearance: \"none\" }} >\r\n                      <option className=\"button\" selected disabled> {status(item.sale_entry_status)} </option>\r\n                      <option key={0} className=\"text-lightred bg-pearl\" value=\"1\" > Confirmed </option>\r\n                      <option key={1} className=\"text-lightblue  bg-pearl\" value=\"2\" > Payment Done </option>\r\n                      <option key={2} className=\"text-lightred  bg-pearl\" value=\"3\" > Completed </option>\r\n                      <option key={3} className=\"text-charcoal  bg-pearl\" value=\"4\" > Cancelled </option>\r\n                    </select>\r\n                  </td>\r\n                  <td className={`text-charcoal text-center bg-transparent fw-bold p-0 m-0 px-1 `} >\r\n                    <div className={`dropdown  bg-${tabindex == i ? \"lightyellow\" : \"\"} d-inline-block text-center text-decoration-none`} >\r\n                      <button className=\"button border-0 p-0 m-0 text-decoration-none dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" >\r\n                        <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                      </button>\r\n                      <ul className=\"dropdown-menu text-start\">\r\n                        <li className={`text-start dropdown-item border-bottom `} onClick={() => { settabindex(i); toggle_payments(); }}> <img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /> Payments </li>\r\n                        <li className=\" text-start dropdown-item border-bottom\" onClick={() => { setindex(i); toggle_seidw(); }}> <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} />{\" \"} Inventory </li>\r\n                        <li className=\"text-start dropdown-item border-bottom\" onClick={() => { Generate_Bill(item.id); }}> <img src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} />{\" \"} Generate Bill </li>\r\n                        <li className=\"text-start dropdown-item\" onClick={() => { Send_On_WhatsApp(item.id, item.patient.phone_number); }}> <img src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} />{\" \"} Send Bill On WhatsApp{\" \"} </li>\r\n                      </ul>\r\n                    </div>\r\n                  </td>\r\n\r\n                  <td className={`position-absolute mt-1 d-${i == index ? seidw : \"none\"} start-0 end-0 border border-1 bg-seashell p-0 m-0`} style={{ zIndex: \"2\", top: \"-7.5rem\", height: \"90vh\" }} >\r\n                    {i == index ? (\r\n                      <SEitemdetailssection saleentryarr={saleentryarr[i]} itembillid={\"P-\" + item.bill_id} toggle_seidw={toggle_seidw} />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n\r\n                  <td className={`col-lg-8 col-xl-6 col-md-8 col-sm-10 start-0 end-0 top-0 mx-auto shadow rounded-4 position-absolute bg-pearl d-${tabindex == i ? paymentsapage : \"none\"}`} style={{ marginTop: \"10rem\" }} >\r\n                    {i == tabindex ? (\r\n                      <SaleEntrypayments GETSalesList={GETSalesList} saleentryarr={saleentryarr[i]} toggle_payments={toggle_payments} itembillid={\"P-\" + item.bill_id} />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <strong className=\"text-charcoal fw-bolder text-center\"> No Sale Entries </strong>\r\n              </div>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETSalesList}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n      <section\r\n        className={`newsaleentryform p-0 m-0 position-absolute d-${nsef} border border-1 mx-auto start-0 end-0 bg-seashell`}\r\n        style={{ height: \"90vh\" }}\r\n      >\r\n        <SaleEntryForm toggle_nsef={toggle_nsef} GETSalesList={GETSalesList} />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction SaleEntrypayments(props) {\r\n  const url = useContext(URL);\r\n  const permission = useContext(Permissions);\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const [paymentmethods, setpaymentmethods] = useState();\r\n  const [previouspayments, setpreviouspayments] = useState([]);\r\n  const [previoustotal, setprevioustotal] = useState(0);\r\n  const [loading, setloading] = useState();\r\n  const paymentmethoddetails = {\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  };\r\n  async function AddPaymentMethods() {\r\n    let Payments = [];\r\n    let amounts = [];\r\n    let allamounts = [];\r\n    Payments.push(\r\n      Object.keys(JSON.parse(props.saleentryarr.payment_method_details))\r\n    );\r\n    amounts.push(\r\n      Object.values(JSON.parse(props.saleentryarr.payment_method_details))\r\n    );\r\n    let paymentobj = [];\r\n    let p = {\r\n      paymentmethod: \"\",\r\n      amount: 0,\r\n    };\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(\r\n          (p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n        );\r\n      }\r\n      setpaymentmethods(allamounts);\r\n    }\r\n\r\n    paymentmethods.push(paymentobj);\r\n  }\r\n  useEffect(() => {\r\n    AddPaymentMethods();\r\n  }, []);\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i);\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments of  ${props.itembillid}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveSaleEntryCharges();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  async function SaveSaleEntryCharges() {\r\n    let PaymentMethod = [];\r\n    let PaymentMethodDetails = [];\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      PaymentMethod.push(paymentmethods[i].amount);\r\n      PaymentMethodDetails.push(paymentmethods[i].paymentmethod);\r\n    }\r\n    let Data = {\r\n      sale_entry_id: props.saleentryarr.id,\r\n      g_total_main: props.saleentryarr.grand_total,\r\n      payment_method: PaymentMethodDetails,\r\n      payment_method_main: PaymentMethodDetails,\r\n      payment_method_details: PaymentMethod,\r\n      admin_id: adminid,\r\n    };\r\n    try {\r\n      setloading(true);\r\n      await axios\r\n        .post(`${url}/sale/entry/save/charges`, Data)\r\n        .then((response) => {\r\n          props.GETSalesList();\r\n          setloading(false);\r\n          Notiflix.Notify.success(response.data.message);\r\n        });\r\n    } catch (e) {\r\n      setloading(false);\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  }\r\n  const CalPrevTotal = async () => {\r\n    let total = 0;\r\n    paymentmethods && paymentmethods.map((data) => (total += Number(data.amount)));\r\n    console.log(total);\r\n    setprevioustotal(total);\r\n  };\r\n  useEffect(() => {\r\n    CalPrevTotal();\r\n  }, [props.saleentryarr]);\r\n  console.log(props.saleentryarr, paymentmethods, previoustotal);\r\n\r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods((prevState) => [...prevState, paymentmethoddetails]);\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails]);\r\n    }\r\n  }\r\n  function Return_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    let Advance = 0;\r\n    if (paymentmethods && paymentmethods !== undefined) {\r\n      for (let i = 0; i < paymentmethods.length; i++) {\r\n        totalarr.push(Number(paymentmethods[i].amount));\r\n      }\r\n      console.log(totalarr);\r\n      totalarr.forEach((item) => {\r\n        total += item;\r\n      });\r\n      if (total > props.saleentryarr.grand_total) {\r\n        Advance = total - props.saleentryarr.grand_total;\r\n        return Advance;\r\n      } else {\r\n        return Advance;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  console.log(paymentmethods);\r\n  return (\r\n    <div className=\"p-0 m-0 text-center\">\r\n      <h6 className=\"text-center mt-2 fw-bold\">{props.itembillid} Payments</h6>\r\n      <hr className=\"p-0 m-0 mt-1\" />\r\n      <button\r\n        className=\"btn-close position-absolute top-0 end-0 p-2 m-2 \"\r\n        onClick={() => props.toggle_payments()}\r\n      ></button>\r\n\r\n      <p className=\"text-charcoal p-0 m-auto fw-bolder\">\r\n        Grand Total :{\" \"}\r\n        <span className=\"text-burntumber\">\r\n          Rs {props.saleentryarr.grand_total}\r\n        </span>\r\n      </p>\r\n      <hr className=\"p-0 m-0 mb-1\" />\r\n      <div className=\"container-fluid text-start position-relative\">\r\n        <div\r\n          className={`d-${previoustotal == props.saleentryarr.grand_total ? \"\" : \"none\"\r\n            } bg-lightgreen fw-bold text-center p-2 my-2`}\r\n        >\r\n          Payment Done\r\n        </div>\r\n        <h6 className=\"text-charcoal fw-bolder text-center\">Payments</h6>\r\n        <h6 className=\"text-burntumber fw-bolder text-center\">{Return_Amount() > 0 ? `Amount Exceeded by ${Return_Amount()}` : \"\"}</h6>\r\n        {/* d-${previoustotal < props.saleentryarr.grand_total ? '  ' : 'none'} */}\r\n        {paymentmethods ? (\r\n          paymentmethods.map((data, i) =>\r\n            // permission.sale_entry_charges_edit == 1\r\n\r\n            permission.sale_entry_charges_edit == 1 ? (\r\n              <div className={`row p-0 m-0 justify-content-end g-2`}>\r\n                <div className=\"col-4 \">\r\n                  <select className=\"form-control border-success py-1 text-center\" value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} >\r\n                    <option className=\"text-charcoal75 fw-bolder\"> Payment Method </option>\r\n                    <option value=\"Cash\">Cash</option>\r\n                    <option value=\"Card\">Card</option>\r\n                    <option value=\"Paytm\">Paytm</option>\r\n                    <option value=\"Phonepe\">Phone Pe</option>\r\n                    <option value=\"Wire-Transfer\">Wire Transfer</option>\r\n                    <option value=\"Razorpay\">Razorpay</option>\r\n                    <option value=\"Points\">Points</option>\r\n                    <option value=\"Adjust-Advance\">Adjust-Advance</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className=\"form-control border-success py-1 text-center\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <button className=\"btn btn-sm p-0 m-0\" onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                    <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" style={{ width: \"1.5rem\" }} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : props.saleentryarr.payment_method_details == null ? (\r\n              <div className={`row p-0 m-0 justify-content-end g-2`}>\r\n                <div className=\"col-4 \">\r\n                  <select className=\"form-control border-success py-1 text-center\" value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} >\r\n                    <option className=\"text-charcoal75 fw-bolder\"> Payment Method </option>\r\n                    <option value=\"Cash\">Cash</option>\r\n                    <option value=\"Card\">Card</option>\r\n                    <option value=\"Paytm\">Paytm</option>\r\n                    <option value=\"Phonepe\">Phone Pe</option>\r\n                    <option value=\"Wire-Transfer\">Wire Transfer</option>\r\n                    <option value=\"Razorpay\">Razorpay</option>\r\n                    <option value=\"Points\">Points</option>\r\n                    <option value=\"Adjust-Advance\">Adjust-Advance</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className=\"form-control border-success py-1 text-center\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <button className=\"btn btn-sm p-0 m-0\" onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                    <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" style={{ width: \"1.5rem\" }} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className={`row p-0 m-0 justify-content-center g-2`}>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className=\"form-control py-1\" disabled={true} value={data.paymentmethod} />\r\n                </div>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className=\"form-control py-1 text-center\" disabled={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                </div>\r\n              </div>\r\n            )\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className={`container-fluid text-center mt-2 `}>\r\n          {permission.sale_entry_charges_edit == 1 ? (\r\n            <button className=\"btn py-0\" onClick={AddMethods}>\r\n              <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"2rem\" }} />\r\n            </button>\r\n          ) : props.saleentryarr.payment_method_details == null ? (\r\n            <button className=\"btn py-0\" onClick={AddMethods}>\r\n              <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"2rem\" }} />\r\n            </button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-2\">\r\n        {loading ? (\r\n          <div className=\"container-fliud pt-2\">\r\n            <div className=\"d-flex fs-6 align-items-center justify-content-around\">\r\n              <h6 className=\"text-burntumber\">Updating...</h6>\r\n              <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button className=\"button button-burntumber m-0 p-0 py-1 px-5\" disabled={previoustotal == props.saleentryarr.grand_total ? true : false} onClick={confirmmessage} > Save </button>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <button className=\"button button-pearl border-charcoal p-0 m-0 py-1 px-5\" onClick={() => { setpaymentmethods(); props.toggle_payments(); }} > Cancel </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let e = Number(cgst) + Number(sgst) + Number(igst);\r\n      return e;\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      return e;\r\n    }\r\n  }\r\n  console.log(props.saleentryarr);\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <h5 className=\"text-center text-charcoal pt-3\">\r\n        {props.itembillid} Sale Entry Item Details\r\n      </h5>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close closebtn position-absolute end-0 me-4\"\r\n        onClick={props.toggle_seidw}\r\n        aria-label=\"Close\"\r\n      ></button>\r\n\r\n      <div className=\"col-2 d-none\">\r\n        <div\r\n          className=\" position-relative searchbutton\"\r\n          style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\" form-control d-inline PEsearch bg-seashell\"\r\n            placeholder=\"Search PE\"\r\n          />\r\n          <button\r\n            className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\"\r\n            style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }}\r\n          >\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n              alt=\"displaying_image\"\r\n              className=\"img-fluid p-0 m-0\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex p-0 m-0 mt-3 mb-1 justify-content-center\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button shadow-0 rounded-0 border-charcoal button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"row p-0 m-0 justify-content-between\">\r\n        <div className=\"col-auto ms-2 mb-2 text-burntumber rounded-1 fw-bolder bg-pearl\">\r\n          <p className=\"text-charcoal p-0 m-0 ms-1 text-start\">Grand Total</p>\r\n          <hr className=\"p-0 m-0\" />\r\n          <h5 className=\"text-charcoal p-0 m-0 fw-bold text-start ms-1\">\r\n            {props.saleentryarr.grand_total\r\n              ? props.saleentryarr.grand_total\r\n              : 0}\r\n          </h5>\r\n        </div>\r\n        <div className=\"col-auto align-self-end justify-content-end me-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            value={Taxon ? Taxon : \"\"}\r\n            onChange={() => {\r\n              Taxon == true ? setTaxon(false) : setTaxon(true);\r\n            }}\r\n          />\r\n          <label>Show Tax Details</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${medicine}`}\r\n        style={{ minHeight: \"65vh\", Height: \"65vh\", maxHeight: \"70vh\" }}\r\n      >\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Stock ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Medicine\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc. %\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className=\"border p-0 m-0 px-1\"\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                {\" \"}\r\n                Amt\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Grand Total\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                Total CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%{\" \"}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                Total SGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                Total IGST\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total Tax\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.saleentryarr.sale_medicines &&\r\n            props.saleentryarr.sale_medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.saleentryarr.sale_medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine_stocks && item.medicine_stocks.id !== null\r\n                      ? \"m\" + item.medicine_stocks.id\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.main_mrp ? item.main_mrp : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty && item.qty != null ? item.qty : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount != null ? item.discount : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? Number(item.SGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? Number(item.CGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? Number(item.IGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.disc_mrp ? item.disc_mrp : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.total_amount ? item.total_amount : \"\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <p className=\" text-center text-charcoal fw-bold\">\r\n                  No Medicines Found\r\n                </p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{ minHeight: \"65vh\", Height: \"65vh\", maxHeight: \"65vh\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Stock ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Vaccine\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc. %\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className=\"border p-0 m-0 px-1\"\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Amt\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Grand Total\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                Total CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                Total SGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                Total IGST\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total Tax\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.saleentryarr.sale_vaccines !== undefined &&\r\n            props.saleentryarr.sale_vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.saleentryarr.sale_vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.vaccine_stocks && item.vaccine_stocks.id !== null\r\n                      ? \"v\" + item.vaccine_stocks.id\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.vaccine && item.vaccine.name !== null\r\n                      ? item.vaccine.name\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.main_mrp ? item.main_mrp : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty && item.qty != null ? item.qty : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount != null ? item.discount : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? Number(item.SGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? Number(item.CGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? Number(item.IGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.disc_mrp ? item.disc_mrp : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold text-charcoal\">\r\n                  No Vaccines Found\r\n                </p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SaleReturns() {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const url = useContext(URL);\r\n  const [sridw, setsridw] = useState(\"none\");\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [salereturnarr, setsalereturnarr] = useState([]);\r\n  const [salereturnarrExcel, setsalereturnarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [nref, setnref] = useState(\"none\");\r\n\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n\r\n  console.log(salereturnarr, pagecount);\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/return?clinic_id=${ClinicID}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETSaleReturns(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/sale/return?clinic_id=${ClinicID}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n            }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            setsalereturnarr(response.data.data.sale_return);\r\n\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/sale/return?clinic_id=${ClinicID}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            setsalereturnarr(response.data.data.sale_return);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETSaleReturnsForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/sale/return?clinic_id=${ClinicID}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setpagecount(response.data.data.total_count);\r\n          setsalereturnarrExcel(response.data.data.sale_return);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETSaleReturns();\r\n    GETSaleReturnsForExcel();\r\n  }, [pagecount]);\r\n\r\n  const toggle_sridw = () => {\r\n    if (sridw === \"none\") {\r\n      setsridw(\"block\");\r\n    }\r\n    if (sridw === \"block\") {\r\n      setsridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  console.log(salereturnarr);\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref} >\r\n        <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" style={{ width: `1.5rem` }} />\r\n        Entry Return\r\n      </button>\r\n      <div classsName=\"p-0 m-0\">\r\n        <div className=\"row p-0 m-0 justify-content-lg-between justify-content-md-evenly justify-content-center text-center mt-2\">\r\n          <div className=\"col-lg-2 col-md-2 col-3 text-center p-0 m-0 \">\r\n            <button type=\"button\" className=\"btn p-0 m-0 heading text-charcoal fw-bolder  \" style={{ width: \"fit-content\" }} >\r\n              {pagecount} {pagecount > 0 ? \"Sale Returns\" : \"Sale Return\"}{\" \"}\r\n            </button>\r\n          </div>\r\n          <div className=\"col-lg-8 col-md-8 col-7  p-0 m-0  border-0 \">\r\n            <div className=\"row p-0 m-0 border-burntumber fw-bolder rounded-1 text-center justify-content-center \">\r\n              <div className=\"col-6 p-0 m-0 text-burntumber text-center fw-bolder bg-pearl  rounded-1 \">\r\n                <input type=\"date\" placeholder=\"fromdate\" className=\"p-0 m-0 border-0 bg-pearl text-burntumber text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n              </div>\r\n              <div className=\"col-6 p-0 m-0 text-burntumber bg-pearl fw-bolder rounded-1\">\r\n                <input type=\"date\" className=\"p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl\" placeholder=\"todate\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 col-lg-2 col-2 p-0 m-0 export align-self-center text-center \">\r\n            <ExportSaleReturn\r\n              salereturnarr={salereturnarrExcel}\r\n              fromdate={reversefunction(fromdate)}\r\n              todate={reversefunction(todate)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"scroll scroll-y overflow-scroll p-0 m-0\"\r\n          style={{ minHeight: \"40vh\", height: \"59vh\", maxHeight: \"70vh\" }}\r\n        >\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className=\"p-0 m-0 align-middle\">\r\n              <tr>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  Return No.\r\n                </th>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  Name\r\n                </th>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  Sale Entry ID\r\n                </th>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  Return Date\r\n                </th>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  Return Amount\r\n                </th>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  Actions\r\n                </th>\r\n                <th className=\"fw-bolder text-charcoal75\" scope=\"col\">\r\n                  more\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {Loading ? (\r\n              <body className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n                <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className=\"fs-5\">\r\n                      Getting Details please be Patient ...\r\n                    </strong>\r\n                    <div\r\n                      class=\"spinner-border ms-auto\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    ></div>\r\n                  </div>\r\n                </tr>\r\n              </body>\r\n            ) : salereturnarr && salereturnarr.length != 0 ? (\r\n              <tbody>\r\n                {salereturnarr.map((item, i) => (\r\n                  <tr\r\n                    key={i}\r\n                    className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"\r\n                      } align-middle`}\r\n                  >\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      SR-{item.return_no}\r\n                    </td>\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      {item.sale_entry &&\r\n                        item.sale_entry.patient &&\r\n                        item.sale_entry.patient.full_name != null\r\n                        ? item.sale_entry.patient.full_name\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      {item.sale_entry &&\r\n                        item.sale_entry &&\r\n                        item.sale_entry.id != null\r\n                        ? \"P-\" + item.sale_entry.id\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      {item.return_date\r\n                        ? reversefunction(item.return_date)\r\n                        : \"\"}\r\n                    </td>\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      {item.grand_total ? item.grand_total : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                          setindex(i);\r\n                          toggle_sridw();\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL + \"/images/archivebox.png\"\r\n                          }\r\n                          alt=\"displaying_image\"\r\n                          className=\"ms-1\"\r\n                          style={{ width: \"1.5rem\" }}\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                      <button className=\"btn position-relative cursor-pointer more p-0 m-0\">\r\n                        <img\r\n                          src={process.env.PUBLIC_URL + \"/images/more.png\"}\r\n                          alt=\"displaying_image\"\r\n                          style={{ width: \"1.5rem\" }}\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                    <td\r\n                      className={` position-absolute d-${i == index ? sridw : \"none\"\r\n                        } bg-seashell border border-1 start-0 end-0 p-0 m-0`}\r\n                      style={{ top: \"-7.5rem\", zIndex: \"2\" }}\r\n                    >\r\n                      {i == index ? (\r\n                        <SRitemdetailssection\r\n                          salereturnarr={salereturnarr[i]}\r\n                          toggle_sridw={toggle_sridw}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody\r\n                className=\"text-center position-relative p-0 m-0 \"\r\n                style={{ minHeight: \"55vh\" }}\r\n              >\r\n                <tr className=\"\">\r\n                  <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\">\r\n                    No Sale Returns\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            breakLabel={\". . .\"}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={GETSaleReturns}\r\n            containerClassName={\"pagination\"}\r\n            pageClassName={\"page-item text-charcoal\"}\r\n            pageLinkClassName={\r\n              \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n            }\r\n            previousClassName={\"btn button-charcoal-outline me-2\"}\r\n            previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n            nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n            breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <section\r\n        className={`newsalereturnform position-absolute start-0 end-0 border border-1 bg-seashell d-${nref}`}\r\n      >\r\n        {\r\n          <NewSaleReturnentryform\r\n            toggle_nref={toggle_nref}\r\n            GETSaleReturns={GETSaleReturns}\r\n          />\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction SaleEntryForm(props) {\r\n  const tableref = useRef(null);\r\n  const cliniclist = useContext(Clinic);\r\n  const url = useContext(URL);\r\n  const Doclist = useContext(DoctorsList);\r\n  const clinicID = localStorage.getItem(\"ClinicId\");\r\n  const medicinesref = useRef(null);\r\n  const medbyidref = useRef(null);\r\n  const patientaddref = useRef(null);\r\n  const stockref = useRef(null);\r\n  const [searchinput, setsearchinput] = useState(\r\n    props.patientname ? props.patientname : \"\"\r\n  );\r\n  const [searchlist, setsearchlist] = useState([]);\r\n  const [displaysearchlist, setdisplaysearchlist] = useState(\"none\");\r\n  const [patientid, setpatientid] = useState(\r\n    props.patientid ? props.patientid : \"\"\r\n  );\r\n  const [patientdata, setpatientdata] = useState([]);\r\n  const [doctorid, setdoctorid] = useState(\r\n    props.DoctorID ? props.DoctorID : \"\"\r\n  );\r\n  const [doctorname, setdoctorname] = useState(\r\n    props.DoctorName ? props.DoctorName : \"\"\r\n  );\r\n  const [otherdoctor, setotherdoctor] = useState();\r\n  const [clinicid, setclinicid] = useState(clinicID);\r\n  const [ischecked, setischecked] = useState();\r\n  const [Dc, setDc] = useState(0);\r\n  const [AtC, setAtC] = useState(0);\r\n  const [load, setload] = useState();\r\n  const [searchload, setsearchload] = useState(false);\r\n  const [products, setproducts] = useState([]);\r\n  const [itemsearch, setitemsearch] = useState([]);\r\n  const [itembyid, setitembyid] = useState([]);\r\n  const [loadbyId, setloadbyId] = useState();\r\n  const [itemname, setitemname] = useState();\r\n  const [itemid, setitemid] = useState();\r\n  const [SelectedProducts, setSelectedProducts] = useState([]);\r\n  const [Grandtotal, setGrandtotal] = useState();\r\n  const [loadsearch, setloadsearch] = useState();\r\n  const [addressid, setaddressid] = useState();\r\n  const [addressform, setaddressform] = useState(\"none\");\r\n\r\n  const searchpatient = (e) => {\r\n    setsearchload(true);\r\n    setsearchinput(e.target.value);\r\n    axios\r\n      .get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`)\r\n      .then((response) => {\r\n        setsearchlist(response.data.data.patients_list);\r\n        setsearchload(false);\r\n      });\r\n    if (searchinput && searchinput.length > 1) {\r\n      setdisplaysearchlist(\"block\");\r\n    } else {\r\n      setdisplaysearchlist(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const get_value = (id, name, data) => {\r\n    setsearchinput(name);\r\n    setpatientid(id);\r\n    setpatientdata(data);\r\n    setdisplaysearchlist(\"none\");\r\n  };\r\n  const selectaddress = (data) => {\r\n    if (data) {\r\n      setaddressid(data.id);\r\n      setDc(1);\r\n    } else {\r\n      setaddressid();\r\n      setDc(0);\r\n    }\r\n  };\r\n  const DC = () => {\r\n    if (Dc == 0) {\r\n      setaddressform(\"block\");\r\n    }\r\n    if (Dc == 1) {\r\n      if (addressid) {\r\n        setDc(0);\r\n        setaddressform(\"none\");\r\n      } else {\r\n        setaddressform(\"block\");\r\n      }\r\n    }\r\n  };\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios.get(`${url}/stock/list?search=${search}`).then((response) => {\r\n        let medicines = [];\r\n        let vaccines = [];\r\n        let items = [];\r\n        medicines.push(\r\n          response.data.data.medicines ? response.data.data.medicines : []\r\n        );\r\n        vaccines.push(\r\n          response.data.data.vaccines ? response.data.data.vaccines : []\r\n        );\r\n        items = medicines.concat(vaccines);\r\n        items = items.flat();\r\n        console.log(items);\r\n        setitemsearch(items);\r\n        setloadsearch(false);\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = \"block\";\r\n        } else {\r\n          medicinesref.current.style.display = \"none\";\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const searchmedbyId = async (search) => {\r\n    if (search.length > 0) {\r\n      setloadbyId(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/sale/item/search/by/id?item=${search}`)\r\n          .then((response) => {\r\n            setloadbyId(false);\r\n            setitembyid([response.data.data]);\r\n          });\r\n      } catch (e) {\r\n        setloadbyId(false);\r\n        Notiflix.Notify.failure(e.message);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Doclist.map((data) => (data[0] == doctorid ? setdoctorname(data[1]) : \"\"));\r\n  }, [doctorid]);\r\n  function CalSellingCost(mrp, disc) {\r\n    let cost = mrp;\r\n    if (!disc) {\r\n      cost = Number(mrp);\r\n      return cost;\r\n    } else {\r\n      cost = Number(mrp) - (Number(mrp) * Number(disc)) / 100;\r\n      cost = cost.toFixed(2);\r\n      return cost;\r\n    }\r\n  }\r\n  function CalTotalAmount(qty, cst, realcst) {\r\n    let cost = cst;\r\n    if (Number(realcst) > Number(cost)) {\r\n      Notiflix.Notify.failure(\"Selling Cost should not less than Cost\");\r\n    }\r\n    console.log(typeof realcst, typeof cost);\r\n    if (!qty) {\r\n      return 0;\r\n    } else if (qty == 1) {\r\n      cst = Number(cst);\r\n      return cst;\r\n    } else {\r\n      cost = Number(cst) * Number(qty);\r\n      cost = cost.toFixed(2);\r\n      return cost;\r\n    }\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0;\r\n    SelectedProducts.map((data) => (ttl += Number(data.totalamt)));\r\n    setGrandtotal(ttl);\r\n  }\r\n  function CaltotalDiscount(data) {\r\n    let total = 0;\r\n    if (data) {\r\n      data.forEach((item) => {\r\n        total += Number(item.discount);\r\n      });\r\n      return total;\r\n    } else {\r\n      return total;\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    CalGrandttl();\r\n  }, [SelectedProducts]);\r\n  function AddProducts(data) {\r\n    let T = \"\";\r\n    if (data.vaccine_brand_id) {\r\n      T = \"v\";\r\n    } else {\r\n      T = \"m\";\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      type: data.type ? data.type : T,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      batch: data.batch_no,\r\n      expiry: data.expiry_date,\r\n      quantity: data.current_stock,\r\n      qtytoSale: 1,\r\n      discount: 0,\r\n      cost: data.cost,\r\n      mainmrp: data.mrp,\r\n      disccost: data.mrp,\r\n      gst:\r\n        Number(data.CGST_rate) +\r\n        Number(data.SGST_rate) +\r\n        Number(data.IGST_rate),\r\n      totalamt: data.mrp,\r\n    };\r\n\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails]);\r\n    } else {\r\n      setSelectedProducts((prevState) => [...prevState, ProductDetails]);\r\n    }\r\n  }\r\n  async function DeleteProduct(Batch) {\r\n    let obj = [];\r\n    obj.push(\r\n      SelectedProducts.filter(function (e) {\r\n        return e.batch !== Batch;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setSelectedProducts(obj);\r\n  }\r\n  async function SubmitSaleEntry() {\r\n    let productids = [];\r\n    let proquantity = [];\r\n    let Discount = [];\r\n    let discountonmrp = [];\r\n    let mrp = [];\r\n    let GST = [];\r\n    let Totalamount = [];\r\n    if (doctorname !== undefined || otherdoctor !== undefined) {\r\n      for (let i = 0; i < SelectedProducts.length; i++) {\r\n        productids.push(\r\n          SelectedProducts[i].type + SelectedProducts[i].productid\r\n        );\r\n        proquantity.push(SelectedProducts[i].qtytoSale);\r\n        Discount.push(SelectedProducts[i].discount);\r\n        discountonmrp.push(SelectedProducts[i].disccost);\r\n        mrp.push(SelectedProducts[i].mainmrp);\r\n        GST.push(SelectedProducts[i].gst);\r\n        Totalamount.push(SelectedProducts[i].totalamt);\r\n      }\r\n      let Data = {\r\n        clinic_id: clinicid,\r\n        doctor_id: doctorid,\r\n        doctor_name: doctorid ? doctorname : otherdoctor,\r\n        patient_id: patientid,\r\n        pro_id: productids,\r\n        qty: proquantity,\r\n        discount: Discount,\r\n        disc_mrp: discountonmrp,\r\n        main_mrp: mrp,\r\n        gst: GST,\r\n        total_amount: Totalamount,\r\n        grand_total: Grandtotal,\r\n        appointment_id: \"\",\r\n        add_to_cart: AtC,\r\n        deliver: Dc,\r\n        address_id: addressid,\r\n      };\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .post(`${url}/sale/entry/save`, Data)\r\n          .then((response) => {\r\n            setload(false);\r\n            if (props.saleindex == undefined) {\r\n              props.GETSalesList();\r\n              props.toggle_nsef();\r\n            }\r\n            if (response.data.status == true) {\r\n              Notiflix.Notify.success(response.data.message);\r\n            } else {\r\n              Notiflix.Notify.warning(response.data.message);\r\n            }\r\n            ClearForm();\r\n          })\r\n          .catch(function error(e) {\r\n            console.log(e);\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      Notiflix.Notify.failure(\r\n        \"Please Choose A Doctor to further proceed the sale entry\"\r\n      );\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Sale Entry`,\r\n      `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? \"entry\" : \"entries\"\r\n      }  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SubmitSaleEntry();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  function confirmmessage2() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add to Cart`,\r\n      `Do you surely want to add the following Sale entries to the Cart  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(1);\r\n      },\r\n      () => {\r\n        setAtC(0);\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    if (AtC == 1) {\r\n      SubmitSaleEntry();\r\n    }\r\n  }, [AtC]);\r\n  const ClearForm = async () => {\r\n    setSelectedProducts([]);\r\n    setaddressid();\r\n    setitemname();\r\n    setdoctorname();\r\n    setdoctorid();\r\n    setpatientid();\r\n    setGrandtotal();\r\n    setAtC();\r\n    setDc(0);\r\n    setsearchinput();\r\n    setpatientdata();\r\n  };\r\n\r\n  console.log(patientid, doctorid, doctorname, Dc, itemname, itemid);\r\n  // console.log(SelectedProducts, Grandtotal)\r\n  // console.log(patientdata)\r\n  let c = 0;\r\n  // console.log(products, addressid, Dc, SelectedProducts)\r\n  // console.log(itembyid)\r\n  // console.log(itemsearch)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0\">\r\n      <div className=\"position-relative mb-3\">\r\n        <h5 className=\"text-center text-charcoal pt-2 \">New Sale Entry</h5>\r\n        <button className=\"btn btn-close position-absolute end-0 top-0 me-2\" disabled={load ? true : false} onClick={props.toggle_nsef} ></button>\r\n      </div>\r\n      <hr className=\"p-0 m-0\" />\r\n      <div className=\"p-0 m-0 text-center bg-seashell\">\r\n        {cliniclist.map((data, i) => (\r\n          <label className={` text-burntumber fw-bolder d-${clinicID == data.id ? \"block\" : \"none\"}`} >\r\n            <input type=\"checkbox\" className={`radio form me-1  text-burntumber fw-bolder`} key={i} checked={clinicID == data.id ? true : false} name={data.id} />\r\n            {data.title} {data.address}\r\n          </label>\r\n        ))}\r\n      </div>\r\n      <hr className=\"p-0 m-0\" />\r\n      <div className=\"my-2 text-center align-self-center\">\r\n        <div className=\" form-switch justify-content-center position-relative\">\r\n          <label className=\"form-check-label text-charcoal fw-bolder\" for=\"flexSwitchCheckDefault\" > Deliver to Customer </label>\r\n          <input className=\"form-check-input ms-2 outline-none text-center\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" checked={Dc == 1 ? true : false} onChange={() => { DC(); }} />\r\n          <div className={`d-${addressform} position-absolute start-0 end-0 m-5 mt-0 top-0 bg-pearl shadow rounded-1 `} style={{ zIndex: 2 }} ref={patientaddref} >\r\n            <div className=\"p-0 m-0 position-relative text-wrap\">\r\n              <button className=\"btn btn-close position-absolute end-0 p-1 m-1\" onClick={() => { addressid ? setaddressform(\"none\") : setaddressform(\"none\"); }} ></button>\r\n              {\r\n                patientdata && patientdata.address && patientdata.address.length !== 0 ? (\r\n                  <div className=\"row p-0 m-0 gx-2  \">\r\n                    <h6 className=\"ms-1 text-burntumber fw-bold text-start\"> Choose Address for Delivery </h6>\r\n                    {\r\n                      patientdata.address.map((data) => (\r\n                        <div className={`col-12 px-1 m-2 text-start card bg-${addressid == data.id ? \"lightgreen\" : \"lightyellow\"} text-charcoal fw-bold`} onClick={() => { addressid ? selectaddress() : selectaddress(data); }} >\r\n                          <div>Patient Name:- {data.full_name}</div>\r\n                          <div> Address:- {data.address_line1 && data.address_line1 !== null ? data.address_line1 : \"\"} </div>\r\n                          <div> {data.address_line2 && data.address_line2 !== null ? data.address_line2 : \"\"} </div>\r\n                          <div> PinCode:- {data.zip_code && data.zip_code !== null ? data.zip_code : \"\"} </div>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-danger fw-bold p-2\">\r\n                    Addresses not found.Update Patient Details to get Address{\" \"}\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row p-0 m-0\">\r\n        <div className=\"col-4\">\r\n          <label className=\"m-0\">Search Using Phone or Name</label>\r\n          <input type=\"text\" className=\"form-control bg-seashell selectpatient col-10 position-relative\" placeholder=\"Search for Patients\" value={searchinput ? searchinput : \"\"} onFocus={() => setsearchload(true)} onChange={searchpatient} />\r\n          <div className={`col-auto d-${displaysearchlist} text-decoration-none searchinput position-absolute rounded-1 shadow bg-pearl px-2`} style={{ width: \"max-content\", zIndex: \"2\" }} >\r\n            {searchload == true || searchinput == undefined ? (\r\n              <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\"> Loading...{\" \"} </p>\r\n            ) : searchlist.length == 0 ? (\r\n              <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found</p>\r\n            ) : (\r\n              searchlist.map((data) => (\r\n                <div className=\"col-auto p-0 m-0 ms-1 bg-pearl text-decoration-none list-style-none text-charcoal text-start px-1 border-bottom\" style={{ width: \"max-content\" }} onClick={() => { get_value(data.id, data.full_name, data); }} >\r\n                  {data.full_name} {data.phone_number}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Select Doctor</label>\r\n          <div className=\"col-12\">\r\n            <select className=\"col-10 form-control selectdoctor bg-seashell\" placeholder=\"Select Doctor\" value={doctorid ? doctorid : \"\"} onChange={(e) => { setdoctorid(e.target.value); }} >\r\n              <option className=\"text-charcoal50\">Select Doctor</option>\r\n              {Doclist.map((data, i) => (\r\n                <option className={`text-charcoal`} key={i} value={data[0]}> {\"Dr.\"} {data[1]} </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Other Doctor</label>\r\n          <div className=\"col-12\">\r\n            <input\r\n              className=\"col-10 form-control bg-seashell\"\r\n              placeholder=\"Other Doctors\"\r\n              value={otherdoctor ? otherdoctor : \"\"}\r\n              onChange={(e) => {\r\n                setotherdoctor(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid mt-4 text-center p-0 m-0\">\r\n        <div className=\"col-12 p-0 m-0 justify-content-center\">\r\n          <h6 className=\"text-charcoal p-0 m-0 fw-bolder text-start ms-1\">\r\n            Add Products\r\n          </h6>\r\n          <hr className=\"p-0 m-0\" />\r\n          {/* <div className=\"col-12\">\r\n              <button className='button button-seashell text-burntumber border-burntumber '>Scan to Add Product</button>\r\n            </div>\r\n            <h4 className='my-2'>OR</h4> */}\r\n          <div className=\"row p-0 m-0 my-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n              <input\r\n                className=\"form-control bg-seashell\"\r\n                placeholder=\"Search Product by Name\"\r\n                value={itemname ? itemname : \"\"}\r\n                onChange={(e) => {\r\n                  searchmeds(e.target.value);\r\n                  setitemname(e.target.value);\r\n                  setitemid();\r\n                  setproducts();\r\n                  stockref.current.style.display = \"none\";\r\n                }}\r\n              />\r\n              <div ref={medicinesref} className=\"position-absolute rounded-1 mt-1\" style={{ Width: \"max-content\", zIndex: \"1\" }} >\r\n                {\r\n                  itemsearch ? (\r\n                    loadsearch ? (\r\n                      <div className=\"rounded-1 p-1 bg-pearl\">\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span>\r\n                        </div>\r\n                      </div>\r\n                    ) : loadsearch == false && itemsearch.length == 0 ? (\r\n                      <div className=\"bg-burntumber text-light rounded-1 p-1\"> Oops! Not Avaliable </div>\r\n                    ) : (\r\n                      <div className={`rounded-4 scroll border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? \"block\" : \"none\"}`} style={{ height: '30vh' }} >\r\n                        <p className={`text-start p-2 position-sticky top-0 bg-pearl fw-bold text-charcoal75 ms-2`} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                        {\r\n                          itemsearch.map((data, i) => (\r\n                            <div style={{ cursor: \"pointer\", Width: \"10rem\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} text-start fw-bold p-2 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = \"block\"; }} > {data.display_name ? data.display_name : data.name} <span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span> </div>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                    )\r\n                  ) : (\r\n                    <div className=\"bg-seashell\"></div>\r\n                  )}\r\n              </div>\r\n              <div ref={stockref} className={`position-absolute start-50 mt-1 bg-pearl scroll scroll-y align-self-center rounded-2 border border-1 p-2 d-${products && products.stock_info && products.stock_info !== undefined ? \"block\" : \"none\"}`} style={{ zIndex: \"2\", width: \"10rem\", 'min-height': \"30vh\", }} >\r\n                <p className={`text-start fw-bold text-charcoal75`} style={{ fontSize: \"0.8rem\" }} > {products && products.stock_info !== undefined ? products.stock_info.length : \"\"}{\" \"} Batch Stocks </p>\r\n                {\r\n                  products && products.length != 0 ? (\r\n                    products.stock_info.length == 0 ? (\r\n                      <div className=\"bg-burntumber text-white fw-bold p-2\">Oops! Not Available</div>\r\n                    ) : (\r\n                      products.stock_info.map((data, i) => (\r\n                        <div style={{ cursor: \"pointer\", Width: \"max-content\" }} className={`bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"} border-bottom text-wrap`} onClick={() => { AddProducts(data); setitemname(); setitemid(); setproducts(); setitemsearch(); }} >\r\n                          <p className=\"text-start m-0 p-0 fw-bold\">{itemname}</p>\r\n                          <p className=\"text-start p-0 m-0 \"> BatchNo. -{\" \"} {data.batch_no && data.batch_no !== null ? data.batch_no : \"\"} </p>\r\n                          <p className=\"text-start p-0 m-0 \"> Stock -{\" \"} {data.current_stock && data.current_stock ? data.current_stock : \"\"} </p>\r\n                          <p className=\"text-start p-0 m-0 \"> Expiry Date -{\" \"} {data.expiry_date ? reversefunction(data.expiry_date) : \"\"} </p>\r\n                        </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                  )\r\n                }\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n            <div className=\"col-1 text-burntumber fw-bold align-self-center\">\r\n              OR\r\n            </div>\r\n            <div className=\"col-4 \">\r\n              <input className=\"form-control bg-seashell border border-1 rounded-1\" value={itemid ? itemid : \"\"} placeholder=\"Search Product by ID\" onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = \"block\"; }} />\r\n              <div ref={medbyidref} className=\"position-absolute rounded-1 mt-1\" style={{ Width: \"max-content\", zIndex: \"2\" }} >\r\n                {itembyid ? (\r\n                  loadbyId ? (\r\n                    <div className=\"rounded-1 p-1 bg-pearl\">\r\n                      Searching Please wait....\r\n                      <div\r\n                        className=\"spinner-border my-auto\"\r\n                        style={{ width: \"1rem\", height: \"1rem\" }}\r\n                        role=\"status\"\r\n                      >\r\n                        <span className=\"sr-only\"> </span>{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  ) : loadbyId == false && itembyid.length == 0 ? (\r\n                    <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                      Oops! Not Avaliable\r\n                    </div>\r\n                  ) : (\r\n                    itembyid.map((data, i) => (\r\n                      <div\r\n                        style={{ cursor: \"pointer\", Width: \"max-content\" }}\r\n                        className={`p-0 p-1 rounded-pill shadow bg-${i % 2 == 0 ? \"pearl\" : \"seashell\"\r\n                          } fs-6 `}\r\n                        onClick={(e) => {\r\n                          setitemid(data.type + data.id);\r\n                          AddProducts(data);\r\n                          medbyidref.current.style.display = \"none\";\r\n                        }}\r\n                      >\r\n                        {data.item_name ? data.item_name : \"\"}\r\n                      </div>\r\n                    ))\r\n                  )\r\n                ) : (\r\n                  <div className=\"bg-seashell\"></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 m-0 p-0\">\r\n          <div className=\"d-flex p-0 m-0 justify-content-between\">\r\n            <h6 className=\"text-charcoal p-0 m-0 fw-bolder text-start ms-1\">\r\n              Product Added\r\n            </h6>\r\n          </div>\r\n\r\n          <hr className=\"p-0 m-0\" />\r\n          <div className=\"p-0 m-0 scroll scroll-y\" style={{ height: \"35vh\" }}>\r\n            <table className=\"table p-0 m-0\">\r\n              <thead className=\"p-0 m-0\">\r\n                <tr className={`p-0 m-0 `}>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Item ID </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Item Name </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> BatchNo. </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Expiry Date </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Avl.Stock </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Qty To Sale </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Discount % </th>\r\n                  <th className=\"p-0 m-0 px-2\" colSpan=\"4\" scope=\"col-group\"> Costing </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Total Amount </th>\r\n                  <th className=\"p-0 m-0 px-2\" rowSpan=\"2\"> Delete </th>\r\n                </tr>\r\n                <tr className=\"p-0 m-0\">\r\n                  <th className=\"p-0 m-0 px-2\" scope=\"col\"> MRP </th>\r\n                  <th className=\"p-0 m-0 px-2\" scope=\"col\"> Cost </th>\r\n                  <th className=\"p-0 m-0 px-2\" scope=\"col\"> GST Rate </th>\r\n                  <th className=\"p-0 m-0 px-2\" scope=\"col\"> Selling Cost/Unit </th>\r\n                </tr>\r\n              </thead>\r\n              {SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                <tbody className=\"p-0 m-0\">\r\n                  {SelectedProducts.map((data) => (\r\n                    <tr className={`p-0 m-0 align-middle bg-${Number(data.disccost) < Number(data.cost) ? \"lightred50\" : \"\"}`} >\r\n                      <td>{data.type} {data.productid} </td>\r\n                      <td>{data.product}</td>\r\n                      <td>{data.batch}</td>\r\n                      <td>{reversefunction(data.expiry)}</td>\r\n                      <td>{data.quantity}</td>\r\n                      <td>\r\n                        <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell\" value={data.qtytoSale ? data.qtytoSale : \"\"} onChange={(e) => { e.target.value <= data.quantity ? (data.qtytoSale = e.target.value) : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\"); data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost); setSelectedProducts((prevState) => [...prevState]); }} />{\" \"}\r\n                      </td>\r\n                      <td className=\"text-center p-0 m-0\" style={{ Width: \"0rem\" }} >\r\n                        <input className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell\" value={data.discount ? data.discount : \"\"} onChange={(e) => { data.discount = e.target.value; data.disccost = CalSellingCost(data.mainmrp, e.target.value); data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost)); setSelectedProducts((prevState) => [...prevState]); }} />{\" \"}\r\n                      </td>\r\n                      <td>{data.mainmrp}</td>\r\n                      <td>{data.cost}</td>\r\n                      <td>{data.gst + \"%\"}</td>\r\n                      <td>{data.disccost}</td>\r\n                      <td>{data.totalamt}</td>\r\n                      <td>\r\n                        <button className=\"btn p-0 m-0\" onClick={() => { DeleteProduct(data.batch); }} >\r\n                          <img src={process.env.PUBLIC_URL + \"images/delete.png\"} style={{ width: \"1.5rem\" }} />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=\"p-0 m-0 position-relative\">\r\n                  <tr className=\"p-0 m-0\">\r\n                    <td className=\"p-0 m-0 position-absolute text-charcoal fw-bold start-0 end-0\"> No Product Added </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-center bg-pearl align-items-center rounded-bottom\">\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\"> {\" \"} Order Total{\" \"} </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {Grandtotal}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Discount %\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {CaltotalDiscount(SelectedProducts)}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Total Items\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {SelectedProducts.length}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                className=\"button button-charcoal px-5\"\r\n                onClick={() => {\r\n                  confirmmessage();\r\n                }}\r\n              >\r\n                Save Entry\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button\r\n              className=\"button button-pearl border-charcoal text-charcoal px-4\"\r\n              disabled={load ? true : false}\r\n              onClick={() => {\r\n                confirmmessage2();\r\n              }}\r\n            >\r\n              Add To Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction NewSaleReturnentryform(props) {\r\n  const url = useContext(URL);\r\n  const medicinesref = useRef(null);\r\n  const vendorsref = useRef(null);\r\n  const [billname, setbillname] = useState();\r\n  const [billid, setbillid] = useState();\r\n  const [loadbills, setloadbills] = useState();\r\n  const [billsearch, setbillsearch] = useState([\"\"]);\r\n  const [itemsearch, setitemsearch] = useState([\"\"]);\r\n  const [itemname, setitemname] = useState(\"\");\r\n  const [load, setload] = useState();\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([]);\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0;\r\n      costing = Number(cost) * Number(qtytotreturn);\r\n      return costing.toFixed(2);\r\n    } else {\r\n      return cost;\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.sale_disc_mrp,\r\n      totalcost: data.sale_disc_mrp,\r\n      saleqty: data.sale_qty,\r\n      qtytoReturn: data.sale_qty,\r\n    };\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj]);\r\n      setitemname();\r\n    } else {\r\n      setMedicineentriesArr((prevState) => [...prevState, MedicineentriesObj]);\r\n      setitemname();\r\n    }\r\n  }\r\n\r\n  const searchProduct = async () => {\r\n    medicinesref.current.style.display = \"block\";\r\n    setloadbills(true);\r\n    try {\r\n      await axios\r\n        .get(\r\n          `${url}/sale/return/item/search/by/id?item=${itemname}&bill_id=${billid}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setbillsearch([response.data.data]);\r\n\r\n          setloadbills(false);\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            Notiflix.Notify.failure(error.response.data);\r\n            Notiflix.Notify.failure(error.response.status);\r\n            Notiflix.Notify.failure(error.response.headers);\r\n          }\r\n          setloadbills(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n      setloadbills(false);\r\n    }\r\n  };\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = [];\r\n    let Totalamount = [];\r\n    let quantity = [];\r\n\r\n    let grosstotal = 0;\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(\r\n        MedicineentriesArr[i].Itemid\r\n          ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}`\r\n          : \"\"\r\n      );\r\n      Totalamount.push(\r\n        MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : \"\"\r\n      );\r\n      quantity.push(\r\n        MedicineentriesArr[i].qtytoReturn\r\n          ? MedicineentriesArr[i].qtytoReturn\r\n          : \"\"\r\n      );\r\n    }\r\n\r\n    Totalamount.forEach((item) => {\r\n      grosstotal += Number(item);\r\n    });\r\n\r\n    var Data = {\r\n      bill_id: billid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal,\r\n    };\r\n    console.log(Data);\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/sale/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message);\r\n        props.GETSaleReturns();\r\n        setMedicineentriesArr();\r\n        setbillid();\r\n        setbillname();\r\n        setload(false);\r\n        props.toggle_nref();\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      console.log(e.message);\r\n      setload(false);\r\n    }\r\n  };\r\n\r\n  function confirmmessage() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Sale ${MedicineentriesArr.length <= 1 ? \"Return \" : \"Returns\"\r\n      } of Bill P-${billid} `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveReturnEntry();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = [];\r\n    obj.push(\r\n      MedicineentriesArr.filter(function (e) {\r\n        return e.Itemid !== id;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setMedicineentriesArr(obj);\r\n  }\r\n  function Grand() {\r\n    let c = 0;\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (c += Number(data.totalcost)));\r\n    }\r\n    return c;\r\n  }\r\n  console.log(billid, itemname, billsearch);\r\n  return (\r\n    <div className=\"p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0 border border-1 \">\r\n        <h5 className=\"text-center pt-3\" style={{ color: \"var(--charcoal)\" }}>\r\n          New Sale Return Entry\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute end-0 p-2 me-2\"\r\n          onClick={props.toggle_nref}\r\n          disabled={load ? true : false}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n        <hr />\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Bill</h6>\r\n              <input\r\n                className=\"form-control ms-2 rounded-1 bg-seashell\"\r\n                placeholder=\"Bill Id (Does not require initials)\"\r\n                value={billid ? billid : \"\"}\r\n                onChange={(e) => {\r\n                  setbillid(e.target.value);\r\n                  setMedicineentriesArr([]);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className=\"position-relative\">\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input\r\n                  className=\"form-control bg-seashell\"\r\n                  placeholder=\"Product Id (Require initials)\"\r\n                  value={itemname ? itemname : \"\"}\r\n                  onChange={(e) => {\r\n                    billid\r\n                      ? setitemname(e.target.value)\r\n                      : Notiflix.Notify.failure(\"Please Add Bill id First\");\r\n                    medicinesref.current.style.display = \"block\";\r\n                  }}\r\n                />\r\n                <div\r\n                  ref={medicinesref}\r\n                  className=\"position-absolute rounded-1 bg-pearl col-12\"\r\n                  style={{ zIndex: \"1\" }}\r\n                >\r\n                  {billsearch ? (\r\n                    loadbills ? (\r\n                      <div className=\"rounded-1 p-1\">\r\n                        Searching Please wait....\r\n                        <div\r\n                          className=\"spinner-border my-auto\"\r\n                          style={{ width: \"1rem\", height: \"1rem\" }}\r\n                          role=\"status\"\r\n                        >\r\n                          <span className=\"sr-only\"> </span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    ) : billsearch.length == 0 ? (\r\n                      <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                        Oops! Not Avaliable\r\n                      </div>\r\n                    ) : (\r\n                      billsearch.map((data, i) => (\r\n                        <div\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={`p-0 ps-1 shadow bg-${i % 2 == 0 ? \"pearl\" : \"lightyellow\"\r\n                            } fs-6 `}\r\n                          name={data.id}\r\n                          onClick={(e) => {\r\n                            setitemname(data.item_name);\r\n                            InsertMedicines(data);\r\n                            medicinesref.current.style.display = \"none\";\r\n                          }}\r\n                        >\r\n                          {data.item_name}\r\n                        </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <div className=\"bg-seashell\"></div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className=\"p-0 m-0 btn\" onClick={searchProduct}>\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"images/search.png\"}\r\n                  style={{ width: \"1.8rem\" }}\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\" p-0 m-0 mt-2 scroll scroll-y\"\r\n            style={{ Height: \"65vh\", zIndex: \"2\" }}\r\n          >\r\n            <p className=\"text-center fw-bold text-burntumber p-0 m-0  mt-2 mb-1\">\r\n              Items Selected\r\n            </p>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead className=\"text-charcoal75 fw-bold\">\r\n                <tr>\r\n                  <th className=\"p-0 m-0 px-1\">Item ID</th>\r\n                  <th className=\"p-0 m-0 px-1\">Item Name</th>\r\n                  <th className=\"p-0 m-0 px-1\">batch No.</th>\r\n                  <th className=\"p-0 m-0 px-1\">Expiry Date</th>\r\n                  <th className=\"p-0 m-0 px-1\">Sale Qty</th>\r\n                  <th className=\"p-0 m-0 px-1\">Qty to Return</th>\r\n                  <th className=\"p-0 m-0 px-1\">Sale Rate/Unit</th>\r\n                  <th className=\"p-0 m-0 px-1\">Sale Rate</th>\r\n                  <th className=\"p-0 m-0 px-1\">Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {MedicineentriesArr ? (\r\n                <tbody\r\n                  style={{\r\n                    maxHeight: \"65vh\",\r\n                    minHeight: \"65vh\",\r\n                    color: \"var(--charcoal)\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {MedicineentriesArr.map((item, _key) => (\r\n                    <tr key={_key} className=\"\">\r\n                      <td>\r\n                        {item.Type}\r\n                        {item.Itemid}\r\n                      </td>\r\n                      <td>{item.Item}</td>\r\n                      <td>{item.batchno}</td>\r\n                      <td>{reversefunction(item.expirydate)}</td>\r\n                      <td>{item.saleqty}</td>\r\n                      <td\r\n                        className=\"p-0 m-0\"\r\n                        style={{ width: \"0px\", height: \"0px\" }}\r\n                      >\r\n                        <input\r\n                          className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2\"\r\n                          value={item.qtytoReturn ? item.qtytoReturn : \"\"}\r\n                          onChange={(e) => {\r\n                            e.target.value <= item.saleqty\r\n                              ? (item.qtytoReturn = e.target.value)\r\n                              : Notiflix.Notify.failure(\r\n                                \"Quantity Cannot be Greater then Current Stock Available\"\r\n                              );\r\n                            item.totalcost = CalculateCost(\r\n                              item.cost,\r\n                              item.saleqty,\r\n                              e.target.value\r\n                            );\r\n                            setMedicineentriesArr((prevState) => [\r\n                              ...prevState,\r\n                            ]);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>{item.cost}</td>\r\n                      <td>{item.totalcost}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => {\r\n                            DeleteMedicine(item.Itemid);\r\n                          }}\r\n                          className=\"btn btn-sm button-burntumber\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                <tbody\r\n                  className=\"position-relative\"\r\n                  style={{\r\n                    height: \"65vh\",\r\n                    maxHeight: \"65vh\",\r\n                    color: \"var(--charcoal)\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <td className=\"position-absolute start-0 end-0 top-0\">\r\n                      No items Added\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody\r\n                  className=\"position-relative\"\r\n                  style={{\r\n                    height: \"65vh\",\r\n                    maxHeight: \"65vh\",\r\n                    color: \"var(--charcoal)\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  <tr className=\"\">\r\n                    <td className=\"position-absolute start-0 end-0 top-0\">\r\n                      No items Added\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 position-absolute start-0 end-0 bottom-0 text-center bg-pearl  border border-1 py-3\">\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Order Total{\" \"}\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {Grand()}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Total Items\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {MedicineentriesArr ? MedicineentriesArr.length : 0}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 align-self-center\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                className=\"button button-charcoal px-5\"\r\n                onClick={confirmmessage}\r\n              >\r\n                Save Entry\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let c = Number(cgst) + Number(sgst) + Number(igst);\r\n      return c * Number(qty);\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <div className=\"row p-0 m-0 position-relative\">\r\n          <h5 className=\"text-center text-charcoal pt-3\">\r\n            {props.itembillid} Sale Return Item Details\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close closebtn m-auto position-absolute end-0 me-4\"\r\n            onClick={props.toggle_sridw}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n          <div className=\"col-2 d-none\">\r\n            <div\r\n              className=\" position-relative searchbutton\"\r\n              style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                className=\" form-control d-inline PEsearch bg-seashell\"\r\n                placeholder=\"Search PE\"\r\n              />\r\n              <button\r\n                className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\"\r\n                style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }}\r\n              >\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n                  alt=\"displaying_image\"\r\n                  className=\"img-fluid p-0 m-0\"\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"row justify-content-end me-5\">\r\n        <div className=\"col-3\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"\"\r\n            value={Taxon ? Taxon : \"\"}\r\n            onChange={() => {\r\n              Taxon == true ? setTaxon(false) : setTaxon(true);\r\n            }}\r\n          />\r\n          <label>Show Tax Details</label>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${medicine}`}\r\n        style={{ minHeight: \"70vh\", Height: \"70vh\", maxHeight: \"82vh\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP in Rs.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Selling Cost\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Discount%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className=\"border p-0 m-0 px-1\"\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total in Rs.\r\n              </th>\r\n              {/* <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th> */}\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST in Rs.\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST in Rs.\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST in Rs.\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total in Rs.\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.salereturnarr.sale_medicines &&\r\n            props.salereturnarr.sale_medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.salereturnarr.sale_medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine_stocks.batch_no &&\r\n                      item.medicine_stocks.batch_no != null\r\n                      ? item.medicine_stocks.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine_stocks.expiry_date &&\r\n                      item.medicine_stocks.expiry_date != null\r\n                      ? reversefunction(item.medicine_stocks.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.main_mrp ? item.main_mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.disc_mrp ? item.disc_mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? item.SGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? Number(item.SGST) * Number(item.qty) : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? item.CGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? Number(item.CGST) * Number(item.qty) : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? item.IGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? Number(item.IGST) * Number(item.qty) : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                  {/* <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 bg-lightred\">\r\n                <strong className=\"fs-5 text-center bg-lightred\">\r\n                  No Medicines Found\r\n                </strong>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{ minHeight: \"70vh\", Height: \"70vh\", maxHeight: \"70vh\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP in Rs.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate in Rs.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className={`border p-0 m-0 px-1`}\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost in Rs.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total in Rs.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Print QR\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST Rs.\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST in Rs.\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST in Rs.\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total in Rs.\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.salereturnarr.purchase_vaccines &&\r\n            props.salereturnarr.purchase_vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.salereturnarr.purchase_vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.vaccine && item.vaccine.name !== null\r\n                      ? item.vaccine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? item.SGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? item.SGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? item.CGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? item.CGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? item.IGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? item.IGST : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    <button className=\"btn\">\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"/images/qrcode.png\"}\r\n                        alt=\"displaying_image\"\r\n                        style={{ width: \"1.5rem\" }}\r\n                        className=\"me-1\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <strong className=\"fs-6 text-center\">No Vaccines Found</strong>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport { Salesection };\r\nexport { SaleEntryForm };\r\n\r\n//  ---------------------------------------------------------------purchase-----------------------------------------------------------------------------------------\r\nfunction Purchasesection(props) {\r\n  const permission = useContext(Permissions);\r\n  const first = [\r\n    {\r\n      option: \"Purchase Entry\",\r\n      display: permission.purchase_entry_view,\r\n    },\r\n    {\r\n      option: \"Purchase Returns\",\r\n      display: permission.purchase_return_view,\r\n    },\r\n    {\r\n      option: \"Purchase Orders\",\r\n      display: permission.purchase_orders_view,\r\n    },\r\n  ];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return (\r\n        <Purchaseentrysection\r\n          function={props.func}\r\n          function2={props.function}\r\n        />\r\n      );\r\n    }\r\n    if (_selected === 1) {\r\n      return <PurchaseReturns />;\r\n    }\r\n    if (_selected === 2) {\r\n      return <Purchaseordersection />;\r\n    }\r\n    return <div className=\"\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"purchasesection\">\r\n        <div className=\"row p-0 m-0 mt-1 gx-lg-3 gx-md-2\">\r\n          {first.map((e, i) => {\r\n            return (\r\n              <div className={`col-auto d-${e.display == 1 ? \"\" : \"none\"}`}>\r\n                <button\r\n                  className={`btn btn-sm rounded-pill text-${i === second ? \"light\" : \"dark\"\r\n                    } bg-${i === second ? \"charcoal\" : \"seashell\"}`}\r\n                  onClick={(a) => setSecond(i)}\r\n                >\r\n                  {e.option}\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid mt-lg-4 mt-md-3 mt-2 p-0 m-0\">\r\n          <div className=\"\">{_selectedScreen(second)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction Purchaseentrysection(props) {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const permission = useContext(Permissions);\r\n  const url = useContext(URL);\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n    }\r\n  };\r\n  const [channel, setchannel] = useState(1);\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [purchaseentryarr, setpurchaseentryarr] = useState([]);\r\n  const [purchaseentryarrExcel, setpurchaseentryarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n  const [qr, setqr] = useState(\"none\");\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function GETPurchaseList(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n            }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n          )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            setpurchaseentryarr(response.data.data.purchase_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            setpagecount(response.data.data.total_count);\r\n            setpurchaseentryarr(response.data.data.purchase_entry);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETPurchaseListForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpurchaseentryarrExcel(response.data.data.purchase_entry);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [channel, fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETPurchaseList();\r\n    GETPurchaseListForExcel();\r\n  }, [pagecount]);\r\n\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  function GenerateQR(props) {\r\n    console.log(props.purchaseentry);\r\n    let medicines = props.purchaseentry.medicines\r\n      ? props.purchaseentry.medicines\r\n      : 0;\r\n    let vaccines = props.purchaseentry.vaccines\r\n      ? props.purchaseentry.vaccines\r\n      : 0;\r\n    let medicineobj = {};\r\n    let vaccineobj = {};\r\n    let medcount = [];\r\n    let vaccount = [];\r\n    if (\r\n      props.purchaseentry.medicines !== undefined &&\r\n      props.purchaseentry.medicines.length !== 0\r\n    ) {\r\n      for (let i = 0; i < medicines.length; i++) {\r\n        for (let j = 0; j < props.purchaseentry.medicines[i].qty; j++) {\r\n          medicineobj[j] = {\r\n            id: \"m\" + props.purchaseentry.medicines[i].id,\r\n            name: props.purchaseentry.medicines[i].medicine.name,\r\n            qrcode: <QRcode id={\"m\" + props.purchaseentry.medicines[i].id} />,\r\n          };\r\n          medcount.push(medicineobj[j]);\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      props.purchaseentry.vaccines !== undefined &&\r\n      props.purchaseentry.vaccines.length !== 0\r\n    ) {\r\n      for (let i = 0; i < vaccines.length; i++) {\r\n        for (let j = 0; j < props.purchaseentry.vaccines[i].qty; j++) {\r\n          vaccineobj[j] = {\r\n            id: \"v\" + props.purchaseentry.vaccines[i].id,\r\n            name: props.purchaseentry.vaccines[i].vaccine.name,\r\n            qrcode: <QRcode id={\"v\" + props.purchaseentry.vaccines[i].id} />,\r\n          };\r\n          vaccount.push(vaccineobj[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(medcount, vaccount);\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h5 className=\"text-charcoal75 fw-bold\">Medicines</h5>\r\n        <div className=\"row\">\r\n          {medcount.map((Data) => (\r\n            <div className=\"col-auto m-2\" key={Data}>\r\n              <p className=\"text-charcoal75\">\r\n                {Data.name} | {Data.id}\r\n              </p>\r\n              <div className=\"container\">{Data.qrcode}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h5 className=\"text-charcoal75 fw-bold mt-2\">Vaccines</h5>\r\n        <div className=\"row\">\r\n          {vaccount.map((Data) => (\r\n            <div className=\"col-auto m-2\" key={Data}>\r\n              <p className=\"text-charcoal75\">\r\n                {Data.name} | {Data.id}\r\n              </p>\r\n              <div className=\"container\">{Data.qrcode}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <button\r\n        className={`button addpurchase button-charcoal position-absolute d-${permission.purchase_entry_add == 1 ? \"\" : \"none\"\r\n          }`}\r\n        onClick={toggle_npef}\r\n      >\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"}\r\n          alt=\"displaying_image\"\r\n          className=\"img-fluid p-0 m-0\"\r\n          style={{ width: `1.5rem` }}\r\n        />\r\n        Entry Purchase\r\n      </button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between justify-content-md-evenly justify-content-center text-center\">\r\n        <div className=\"col-lg-2 col-md-2 col-12 text-center p-0 m-0 ms-lg-0 ms-md-0 ms-sm-0 ms-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn p-0 m-0 heading text-charcoal fw-bolder  \"\r\n            style={{ width: \"fit-content\" }}\r\n          >\r\n            {pagecount} {pagecount > 1 ? \"Purchase Entries\" : \"Purchase Entry\"}{\" \"}\r\n          </button>\r\n        </div>\r\n        <div className=\"col-lg-8 col-md-7 col-12 ms-lg-0 px-5 align-self-center p-0 m-0 mt-lg-0 mt-md-0 mt-1  \">\r\n          <div className=\"row p-0 m-0 border-burntumber fw-bolder rounded-1 text-center justify-content-center \">\r\n            <div className=\"col-4 p-0 m-0  bg-pearl rounded-1\">\r\n              <select\r\n                className=\"p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl\"\r\n                value={channel ? channel : \"\"}\r\n                onChange={(e) => {\r\n                  setchannel(e.target.value);\r\n                }}\r\n              >\r\n                <option\r\n                  className=\"border-0 text-burntumber fw-bolder\"\r\n                  value=\"1\"\r\n                >\r\n                  Pharmacy\r\n                </option>\r\n                <option\r\n                  className=\"border-0 text-burntumber fw-bolder\"\r\n                  value=\"2\"\r\n                >\r\n                  Consumables\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 p-0 m-0 text-burntumber fw-bolder bg-pearl\">\r\n              <input\r\n                type=\"date\"\r\n                className=\" p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl \"\r\n                value={fromdate ? fromdate : currentDate ? currentDate : \"\"}\r\n                onChange={(e) => {\r\n                  setfromdate(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-4 p-0 m-0  text-burntumber fw-bolder bg-pearl rounded-1\">\r\n              <input\r\n                type=\"date\"\r\n                className=\" p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl rounded-1 \"\r\n                value={\r\n                  todate\r\n                    ? todate\r\n                    : fromdate\r\n                      ? fromdate\r\n                      : currentDate\r\n                        ? currentDate\r\n                        : \"\"\r\n                }\r\n                onChange={(e) => {\r\n                  settodate(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 export col-md-2 mt-sm-2 col-lg-2 align-self-center order-1 \">\r\n          <ExportPurchaseEntry\r\n            purchaseentryarr={purchaseentryarrExcel}\r\n            fromdate={reversefunction(fromdate)}\r\n            todate={reversefunction(todate)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          className=\"scroll scroll-y overflow-scroll p-0 m-0 mt-2\"\r\n          style={{ minHeight: \"56vh\", height: \"56vh\" }}\r\n        >\r\n          <table className=\"table p-0 m-0\">\r\n            <thead className=\"p-0 m-0 align-middle position-sticky top-0 bg-pearl\">\r\n              <tr>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > PE ID </th>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > PO ID </th>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > Channel </th>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > Invoice No. </th>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > Bill Date </th>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > Bill Total </th>\r\n                <th className=\"fw-bolder py-0 my-0  text-charcoal75\" scope=\"col\" > Vendor </th>\r\n                <th className=\"fw-bolder py-0 my-0 text-center  text-charcoal75\" scope=\"col\" > Actions </th>\r\n                {/* <th className='fw-bolder p-0 m-0  text-charcoal75 text-center' scope='col' style={{ zIndex: '3' }}>more</th> */}\r\n              </tr>\r\n            </thead>\r\n            {Loading ? (\r\n              <body className=\" text-center\" style={{ minHeight: \"55vh\" }}>\r\n                <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className=\"\">\r\n                      Getting Details please be Patient ...\r\n                    </strong>\r\n                    <div\r\n                      class=\"spinner-border ms-auto\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    ></div>\r\n                  </div>\r\n                </tr>\r\n              </body>\r\n            ) : purchaseentryarr && purchaseentryarr.length != 0 ? (\r\n              <tbody>\r\n                {purchaseentryarr.map((item, i) => (\r\n                  <tr\r\n                    key={i}\r\n                    className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"\r\n                      } align-middle`}\r\n                  >\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold ps-2\">\r\n                      PE-{item.bill_id}\r\n                    </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold\"> {item.purchase_order_id && item.purchase_order_id !== null ? item.purchase_order_id : \"N/A\"} </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold\"> {item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"} </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold\"> {item.invoice_no ? item.invoice_no : \"N/A\"} </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold\">\r\n                      {item.bill_date && item.bill_date\r\n                        ? reversefunction(item.bill_date)\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold\">\r\n                      {item.bill_total && item.bill_total\r\n                        ? \"Rs. \" + item.bill_total\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold\">\r\n                      {item.distributor &&\r\n                        item.distributor != null &&\r\n                        item.distributor.entity_name &&\r\n                        item.distributor.entity_name != null\r\n                        ? item.distributor.entity_name\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"py-0 my-0 text-charcoal fw-bold text-center\">\r\n                      {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                          setindex(i);\r\n                          toggle_peidw();\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL + \"/images/archivebox.png\"\r\n                          }\r\n                          alt=\"displaying_image\"\r\n                          className=\"ms-1\"\r\n                          style={{ width: \"1.5rem\" }}\r\n                        />\r\n                      </button>\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                          setqr(i);\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={process.env.PUBLIC_URL + \"/images/qrcode.png\"}\r\n                          alt=\"displaying_image\"\r\n                          style={{ width: \"1.5rem\" }}\r\n                          className=\"me-1\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                    {/* <td className='p-0 m-0 text-charcoal fw-bold text-center'>\r\n                            <button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button>\r\n                          </td> */}\r\n                    <td\r\n                      className={` position-absolute d-${i == index ? peidw : \"none\"\r\n                        } border border-1 start-0 end-0 bg-seashell p-0 m-0`}\r\n                      style={{ top: \"-8.5rem\", zIndex: \"5\" }}\r\n                    >\r\n                      {i == index ? (\r\n                        <PEitemdetailssection\r\n                          purchaseentryarr={purchaseentryarr[i]}\r\n                          itembillid={\"PE-\" + item.bill_id}\r\n                          toggle_peidw={toggle_peidw}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </td>\r\n                    <td\r\n                      className={`position-absolute start-0 text-start bg-pearl container-fluid d-${qr == i ? \"block\" : \"none\"\r\n                        }`}\r\n                      style={{ top: \"-8.5rem\", zIndex: \"5\", height: \"89vh\" }}\r\n                    >\r\n                      {i == qr ? (\r\n                        <div className=\"container-fluid position-relative\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn-close closebtn position-absolute end-0 me-2\"\r\n                            onClick={() => setqr()}\r\n                            aria-label=\"Close\"\r\n                          ></button>\r\n                          <div className=\"row\">\r\n                            <GenerateQR purchaseentry={purchaseentryarr[i]} />\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody\r\n                className=\"text-center position-relative p-0 m-0 \"\r\n                style={{ minHeight: \"55vh\" }}\r\n              >\r\n                <tr className=\"\">\r\n                  <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\">\r\n                    No Purchase Entries\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            breakLabel={\". . .\"}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={GETPurchaseList}\r\n            containerClassName={\"pagination\"}\r\n            pageClassName={\"page-item text-charcoal\"}\r\n            pageLinkClassName={\r\n              \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n            }\r\n            previousClassName={\"btn button-charcoal-outline me-2\"}\r\n            previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n            nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n            breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <section\r\n        className={`newpurchaseentrysection position-absolute start-0 end-0 bg-seashell border border-1 d-${npef}`}\r\n      >\r\n        {\r\n          <Newpurchaseentryform\r\n            toggle_npef={toggle_npef}\r\n            GETPurchaseList={GETPurchaseList}\r\n          />\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction PEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  const [qr, setqr] = useState(\"none\");\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst) || igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n  function GenerateQR(props) {\r\n    let count = [];\r\n    for (let i = 0; i < props.qty; i++) {\r\n      count.push(props.qty);\r\n    }\r\n    // console.log(count)\r\n    return count.map((data) => (\r\n      <div className=\"col-auto m-2\" key={data}>\r\n        <QRcode id={props.id} />\r\n      </div>\r\n    ));\r\n  }\r\n  console.log(props.purchaseentryarr);\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <h5 className=\"text-center pt-3 text-charcoal\">\r\n          {props.itembillid} Purchase Entry Item Details\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute end-0 me-2\"\r\n          onClick={props.toggle_peidw}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div\r\n            className=\" position-relative searchbutton\"\r\n            style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className=\" form-control d-inline PEsearch bg-seashell\"\r\n              placeholder=\"Search PE\"\r\n            />\r\n            <button\r\n              className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\"\r\n              style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }}\r\n            >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n                alt=\"displaying_image\"\r\n                className=\"img-fluid p-0 m-0\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          value={Taxon ? Taxon : \"\"}\r\n          onChange={() => {\r\n            Taxon == true ? setTaxon(false) : setTaxon(true);\r\n          }}\r\n        />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${medicine}`}\r\n        style={{ minHeight: \"70vh\", Height: \"70vh\", maxHeight: \"70vh\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className=\"border p-0 m-0 px-1\"\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Print QR\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchaseentryarr.medicines &&\r\n            props.purchaseentryarr.medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchaseentryarr.medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? \"m\" + item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST\r\n                      ? (Number(item.SGST) * Number(item.qty)).toFixed(2)\r\n                      : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST\r\n                      ? (Number(item.CGST) * Number(item.qty)).toFixed(2)\r\n                      : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST\r\n                      ? (Number(item.IGST) * Number(item.qty)).toFixed(2)\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => {\r\n                        setqr(_key);\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"/images/qrcode.png\"}\r\n                        alt=\"displaying_image\"\r\n                        style={{ width: \"1.5rem\" }}\r\n                        className=\"me-1\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  <div\r\n                    className={`position-absolute top-0 start-0  text-start bg-pearl container-fluid d-${qr == _key ? \"block\" : \"none\"\r\n                      }`}\r\n                    style={{ top: \"-4.2rem\", zIndex: \"5\", height: \"89vh\" }}\r\n                  >\r\n                    <div className=\"container-fluid position-relative\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn-close closebtn position-absolute end-0 me-2\"\r\n                        onClick={() => setqr()}\r\n                        aria-label=\"Close\"\r\n                      ></button>\r\n                      <p className=\"mt-2 text-burntumber border-1 \">\r\n                        {item.medicine && item.medicine.name !== null\r\n                          ? item.medicine.name\r\n                          : \"N/A\"}{\" \"}\r\n                        | {item && item.id !== null ? \"m\" + item.id : \"N/A\"}\r\n                      </p>\r\n                      <div className=\"row\">\r\n                        <GenerateQR qty={item.qty} id={\"m\" + item.id} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\" text-center fw-bold\">No Medicines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{ minHeight: \"70vh\", Height: \"70vh\", maxHeight: \"70vh\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP{\" \"}\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate{\" \"}\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className={`border p-0 m-0 px-1`}\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost{\" \"}\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total{\" \"}\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Print QR\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST{\" \"}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST{\" \"}\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total{\" \"}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchaseentryarr.vaccines &&\r\n            props.purchaseentryarr.vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchaseentryarr.vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? \"v\" + item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.vaccine && item.vaccine.name !== null\r\n                      ? item.vaccine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? item.SGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? item.SGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? item.CGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? item.CGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? item.IGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? item.IGST : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => {\r\n                        setqr(_key);\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"/images/qrcode.png\"}\r\n                        alt=\"displaying_image\"\r\n                        style={{ width: \"1.5rem\" }}\r\n                        className=\"me-1\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  <div\r\n                    className={`position-absolute top-0 start-0  text-start bg-pearl container-fluid d-${qr == _key ? \"block\" : \"none\"\r\n                      }`}\r\n                    style={{ top: \"-8.2rem\", zIndex: \"5\", height: \"89vh\" }}\r\n                  >\r\n                    <div className=\"container-fluid position-relative\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn-close closebtn position-absolute end-0 me-2\"\r\n                        onClick={() => setqr()}\r\n                        aria-label=\"Close\"\r\n                      ></button>\r\n                      <p className=\"mt-2 text-burntumber border-1 \">\r\n                        {item.vaccine && item.vaccine.name !== null\r\n                          ? item.vaccine.name\r\n                          : \"N/A\"}{\" \"}\r\n                        | {item && item.id !== null ? \"v\" + item.id : \"N/A\"}\r\n                      </p>\r\n                      <div className=\"row\">\r\n                        <GenerateQR qty={item.qty} id={\"v\" + item.id} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2 \">\r\n                <p className=\"fw-bold text-center\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Newpurchaseentryform(props) {\r\n  const url = useContext(URL);\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  const ClinicList = useContext(Clinic);\r\n  const medicinesref = useRef(null);\r\n  const vendorsref = useRef(null);\r\n  const Tableref = useRef(null);\r\n  const [channel, setchannel] = useState();\r\n  const [po, setpo] = useState();\r\n  const [invoice, setinvoice] = useState();\r\n  const [invoicedate, setinvoicedate] = useState();\r\n  const [vendorname, setvendorname] = useState();\r\n  const [vendorid, setvendorid] = useState();\r\n  const [loadvendors, setloadvendors] = useState();\r\n  const [vendorcode, setvendorcode] = useState();\r\n  const [vendorsearch, setvendorsearch] = useState();\r\n  const [itemsearch, setitemsearch] = useState([\"\"]);\r\n  const [itemname, setitemname] = useState();\r\n  const [itemid, setitemid] = useState();\r\n  const [IsConsumable, setIsConsumable] = useState(0);\r\n  const [itemtype, setitemtype] = useState();\r\n  const [batchno, setbatchno] = useState();\r\n  const [expdate, setexpdate] = useState();\r\n  const [manufdate, setmanufdate] = useState();\r\n  const [mrp, setmrp] = useState();\r\n  const [rate, setrate] = useState();\r\n  const [qty, setqty] = useState();\r\n  const [freeqty, setfreeqty] = useState(0);\r\n  const [disc, setdisc] = useState(0);\r\n  const [trddisc, settrddisc] = useState(0);\r\n  const [cgst, setcgst] = useState(0);\r\n  const [cgstprcnt, setcgstprcnt] = useState(0);\r\n  const [sgst, setsgst] = useState(0);\r\n  const [sgstprcnt, setsgstprcnt] = useState(0);\r\n  const [igst, setigst] = useState(0);\r\n  const [igstprcnt, setigstprcnt] = useState(0);\r\n  const [cpu, setcpu] = useState(0);\r\n  const [totalamt, settotalamt] = useState();\r\n  const [loadsearch, setloadsearch] = useState();\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState();\r\n  const [tableindex, settableindex] = useState();\r\n  const [clinicstatecode, setclinicstatecode] = useState();\r\n  const [load, setload] = useState();\r\n  const [Exceldata, setExceldata] = useState([]);\r\n  const [NewMed, setNewMed] = useState(\"none\");\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  async function filterclinic() {\r\n    for (let i = 0; i < ClinicList.length; i++) {\r\n      if (ClinicList[i].id == ClinicId) {\r\n        setclinicstatecode(ClinicList[i].state_code);\r\n      }\r\n    }\r\n  }\r\n  let MedicineentriesObj = {\r\n    type: \"\",\r\n    isconsumable: 0,\r\n    Itemid: \"\",\r\n    Itemname: \"\",\r\n    batchno: \"\",\r\n    expirydate: \"\",\r\n    manufacturingDate: \"\",\r\n    quantity: \"\",\r\n    freeQty: \"\",\r\n    MRP: \"\",\r\n    Rate: \"\",\r\n    Discount: \"\",\r\n    tradeDiscount: \"\",\r\n    sgst: \"\",\r\n    sgstpercent: \"\",\r\n    cgst: \"\",\r\n    cgstper: \"\",\r\n    igst: \"\",\r\n    igstper: \"\",\r\n    costperunit: \"\",\r\n    totalamount: \"\",\r\n  };\r\n  async function InsertMedicines() {\r\n    MedicineentriesObj = {\r\n      type: itemtype,\r\n      isconsumable: IsConsumable,\r\n      Itemid: itemid,\r\n      Itemname: itemname,\r\n      batchno: batchno,\r\n      expirydate: expdate,\r\n      manufacturingDate: manufdate,\r\n      MRP: mrp,\r\n      Rate: rate,\r\n      Qty: qty,\r\n      freeQty: freeqty,\r\n      Discount: disc,\r\n      tradeDiscount: trddisc,\r\n      sgstper: sgstprcnt,\r\n      sgst: sgst,\r\n      cgstper: cgstprcnt,\r\n      cgst: cgst,\r\n      igstper: igstprcnt,\r\n      igst: igst,\r\n      costperunit: cpu,\r\n      totalamount: totalamt,\r\n    };\r\n    if (qty) {\r\n      if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n        setMedicineentriesArr([MedicineentriesObj]);\r\n      } else {\r\n        setMedicineentriesArr((prevState) => [\r\n          ...prevState,\r\n          MedicineentriesObj,\r\n        ]);\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please choose quantity\");\r\n    }\r\n\r\n    resetfields();\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios\r\n        .get(`${url}/item/search?search=${search}`)\r\n        .then((response) => {\r\n          let medicines = [];\r\n          let vaccines = [];\r\n          let items = [];\r\n          medicines.push(\r\n            response.data.data.medicines ? response.data.data.medicines : []\r\n          );\r\n          vaccines.push(\r\n            response.data.data.vaccines ? response.data.data.vaccines : []\r\n          );\r\n          items = medicines.concat(vaccines);\r\n          items = items.flat();\r\n          console.log(items);\r\n          setitemsearch(items);\r\n          setloadsearch(false);\r\n          if (search.length > 1) {\r\n            medicinesref.current.style.display = \"block\";\r\n          } else {\r\n            medicinesref.current.style.display = \"none\";\r\n          }\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true);\r\n    try {\r\n      await axios\r\n        .get(`${url}/kyc/list?limit=10&offset=0&search=${search}`)\r\n        .then((response) => {\r\n          setvendorsearch(response.data.data);\r\n          setloadvendors(false);\r\n          if (search.length > 1) {\r\n            vendorsref.current.style.display = \"block\";\r\n          } else {\r\n            vendorsref.current.style.display = \"none\";\r\n          }\r\n        })\r\n        .catch(function error(e) {\r\n          Notiflix.Notify.warning(e.data.message);\r\n          setloadvendors(false);\r\n        });\r\n    } catch (e) {\r\n      setloadvendors(false);\r\n      Notiflix.Notify.warning(e.data.message);\r\n    }\r\n  };\r\n  const SavePurchase = async () => {\r\n    let Is_consumable = [];\r\n    let MedId = [];\r\n    let medname = [];\r\n    let Type = [];\r\n    let batches = [];\r\n    let expirydate = [];\r\n    let manufacturingDate = [];\r\n    let MRP = [];\r\n    let Rate = [];\r\n    let Discount = [];\r\n    let tradeDiscount = [];\r\n    let sgst = [];\r\n    let sgstpercent = [];\r\n    let cgst = [];\r\n    let cgstpercent = [];\r\n    let igst = [];\r\n    let igstpercent = [];\r\n    let costperunit = [];\r\n    let totalamount = [];\r\n    let quantity = [];\r\n    let freequantity = [];\r\n    let grosstotal = 0;\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      Type.push(MedicineentriesArr[i].type ? MedicineentriesArr[i].type : \"\");\r\n      Is_consumable.push(\r\n        MedicineentriesArr[i].isconsumable\r\n          ? MedicineentriesArr[i].isconsumable\r\n          : 0\r\n      );\r\n      MedId.push(\r\n        MedicineentriesArr[i].Itemid ? MedicineentriesArr[i].Itemid : \"\"\r\n      );\r\n      medname.push(\r\n        MedicineentriesArr[i].Itemname ? MedicineentriesArr[i].Itemname : \"\"\r\n      );\r\n      batches.push(\r\n        MedicineentriesArr[i].batchno ? MedicineentriesArr[i].batchno : \"\"\r\n      );\r\n      expirydate.push(\r\n        MedicineentriesArr[i].expirydate ? MedicineentriesArr[i].expirydate : \"\"\r\n      );\r\n      manufacturingDate.push(\r\n        MedicineentriesArr[i].manufacturingDate\r\n          ? MedicineentriesArr[i].manufacturingDate\r\n          : \"\"\r\n      );\r\n      MRP.push(\r\n        MedicineentriesArr[i].MRP ? Number(MedicineentriesArr[i].MRP) : \"\"\r\n      );\r\n      Rate.push(\r\n        MedicineentriesArr[i].Rate ? Number(MedicineentriesArr[i].Rate) : \"\"\r\n      );\r\n      Discount.push(\r\n        MedicineentriesArr[i].Discount\r\n          ? Number(MedicineentriesArr[i].Discount)\r\n          : 0\r\n      );\r\n      tradeDiscount.push(\r\n        MedicineentriesArr[i].tradeDiscount\r\n          ? Number(MedicineentriesArr[i].tradeDiscount)\r\n          : 0\r\n      );\r\n      sgst.push(\r\n        MedicineentriesArr[i].sgst ? Number(MedicineentriesArr[i].sgst) : \"\"\r\n      );\r\n      sgstpercent.push(\r\n        MedicineentriesArr[i].sgstper\r\n          ? Number(MedicineentriesArr[i].sgstper)\r\n          : 0\r\n      );\r\n      cgst.push(\r\n        MedicineentriesArr[i].cgst ? Number(MedicineentriesArr[i].cgst) : \"\"\r\n      );\r\n      cgstpercent.push(\r\n        MedicineentriesArr[i].cgstper\r\n          ? Number(MedicineentriesArr[i].cgstper)\r\n          : 0\r\n      );\r\n      igst.push(\r\n        MedicineentriesArr[i].igst ? Number(MedicineentriesArr[i].igst) : \"\"\r\n      );\r\n      igstpercent.push(\r\n        MedicineentriesArr[i].igstper\r\n          ? Number(MedicineentriesArr[i].igstper)\r\n          : 0\r\n      );\r\n      costperunit.push(\r\n        MedicineentriesArr[i].costperunit\r\n          ? Number(MedicineentriesArr[i].costperunit)\r\n          : \"\"\r\n      );\r\n      totalamount.push(\r\n        MedicineentriesArr[i].totalamount\r\n          ? Number(MedicineentriesArr[i].totalamount)\r\n          : \"\"\r\n      );\r\n      quantity.push(\r\n        MedicineentriesArr[i].Qty ? Number(MedicineentriesArr[i].Qty) : \"\"\r\n      );\r\n      freequantity.push(\r\n        MedicineentriesArr[i].freeQty\r\n          ? Number(MedicineentriesArr[i].freeQty)\r\n          : 0\r\n      );\r\n    }\r\n\r\n    totalamount.forEach((item) => {\r\n      grosstotal += Number(item);\r\n    });\r\n    console.log(\r\n      Is_consumable,\r\n      grosstotal,\r\n      Type,\r\n      MedId,\r\n      medname,\r\n      batches,\r\n      expirydate,\r\n      manufacturingDate,\r\n      MRP,\r\n      Rate,\r\n      Discount,\r\n      tradeDiscount,\r\n      sgst,\r\n      sgstpercent,\r\n      cgst,\r\n      cgstpercent,\r\n      igst,\r\n      igstpercent,\r\n      costperunit,\r\n      totalamount,\r\n      quantity,\r\n      freequantity\r\n    );\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      purchase_order_id: po,\r\n      invoice_no: invoice,\r\n      bill_date: invoicedate,\r\n      clinic_id: ClinicId,\r\n      channel: channel,\r\n      is_consumable: Is_consumable,\r\n      bill_total: grosstotal,\r\n      id: MedId,\r\n      type: Type,\r\n      qty: quantity,\r\n      free_qty: freequantity,\r\n      mrp: MRP,\r\n      rate: Rate,\r\n      trade_discount: tradeDiscount,\r\n      discount: Discount,\r\n      SGST_rate: sgstpercent,\r\n      SGST: sgst,\r\n      CGST_rate: cgstpercent,\r\n      CGST: cgst,\r\n      IGST_rate: igstpercent,\r\n      IGST: igst,\r\n      cost: costperunit,\r\n      total_amount: totalamount,\r\n      expiry_date: expirydate,\r\n      mfd_date: manufacturingDate,\r\n      batch_no: batches,\r\n    };\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/purchase/entry/save`, Data).then((response) => {\r\n        setload(false);\r\n        props.GETPurchaseList();\r\n        setload(false);\r\n        props.toggle_npef();\r\n        if (response.data.status == true) {\r\n          Notiflix.Notify.success(response.data.message);\r\n        } else {\r\n          Notiflix.Notify.warning(response.data.message);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      setload(false);\r\n      Notiflix.Notify.warning(e.message);\r\n    }\r\n  };\r\n  const ClearFields = () => {\r\n    setMedicineentriesArr();\r\n    setchannel();\r\n    setpo();\r\n    setinvoice();\r\n    setinvoicedate();\r\n    setvendorname();\r\n    setvendorid();\r\n  };\r\n  const resetfields = async () => {\r\n    setitemname();\r\n    setitemid();\r\n    setbatchno();\r\n    setexpdate();\r\n    setmanufdate();\r\n    setmrp();\r\n    setrate();\r\n    setqty();\r\n    setfreeqty();\r\n    setdisc();\r\n    settrddisc();\r\n    setcgst();\r\n    setsgst();\r\n    setigst();\r\n    setcgstprcnt();\r\n    setsgstprcnt();\r\n    setigstprcnt();\r\n    setcpu();\r\n    settotalamt();\r\n    setloadsearch();\r\n  };\r\n  function confirmmessage(entries, vendor) {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add total ${entries.length} purchase ${entries.length <= 1 ? \"entry\" : \"entries\"\r\n      } of Distributor ${vendor}  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SavePurchase();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  function indexing(i) {\r\n    console.log(i);\r\n    if (tableindex == i) {\r\n      settableindex(-1);\r\n      Emptytableindex();\r\n    } else {\r\n      settableindex(i);\r\n      EditTableEntry(i);\r\n    }\r\n  }\r\n  function EditTableEntry(index) {\r\n    setitemid(MedicineentriesArr[index].Itemid);\r\n    setitemname(MedicineentriesArr[index].Itemname);\r\n    setbatchno(MedicineentriesArr[index].batchno);\r\n    setexpdate(MedicineentriesArr[index].expirydate);\r\n    setmanufdate(MedicineentriesArr[index].manufacturingDate);\r\n    setmrp(MedicineentriesArr[index].MRP);\r\n    setrate(MedicineentriesArr[index].Rate);\r\n    setqty(MedicineentriesArr[index].Qty);\r\n    setfreeqty(MedicineentriesArr[index].freeQty);\r\n    setdisc(MedicineentriesArr[index].Discount);\r\n    settrddisc(MedicineentriesArr[index].tradeDiscount);\r\n    setcgst(MedicineentriesArr[index].cgst);\r\n    setcgstprcnt(MedicineentriesArr[index].cgstper);\r\n    setsgst(MedicineentriesArr[index].sgst);\r\n    setsgstprcnt(MedicineentriesArr[index].sgstper);\r\n    setigst(MedicineentriesArr[index].igst);\r\n    setigstprcnt(MedicineentriesArr[index].igstper);\r\n    setcpu(MedicineentriesArr[index].costperunit);\r\n    settotalamt(MedicineentriesArr[index].totalamount);\r\n  }\r\n  function Emptytableindex() {\r\n    setIsConsumable(0);\r\n    setitemid();\r\n    setitemname();\r\n    setbatchno();\r\n    setexpdate();\r\n    setmanufdate();\r\n    setmrp();\r\n    setrate();\r\n    setqty();\r\n    setfreeqty();\r\n    setdisc();\r\n    settrddisc();\r\n    setcgst();\r\n    setcgstprcnt();\r\n    setsgst();\r\n    setsgstprcnt();\r\n    setigst();\r\n    setigstprcnt();\r\n    setcpu();\r\n    settotalamt();\r\n  }\r\n  async function UpdateMedicines() {\r\n    for (let j = 0; j < MedicineentriesArr.length; j++) {\r\n      if (tableindex == j) {\r\n        MedicineentriesArr[j] = {\r\n          type: itemtype,\r\n          isconsumable: IsConsumable,\r\n          Itemid: itemid,\r\n          Itemname: itemname,\r\n          batchno: batchno,\r\n          expirydate: expdate,\r\n          manufacturingDate: manufdate,\r\n          MRP: mrp,\r\n          Rate: rate,\r\n          Qty: qty,\r\n          freeQty: freeqty,\r\n          Discount: disc,\r\n          tradeDiscount: trddisc,\r\n          sgstper: sgstprcnt,\r\n          sgst: sgst,\r\n          cgstper: cgstprcnt,\r\n          cgst: cgst,\r\n          igstper: igstprcnt,\r\n          igst: igst,\r\n          costperunit: cpu,\r\n          totalamount: totalamt,\r\n        };\r\n        Notiflix.Notify.success(\r\n          `Item Number ${tableindex + 1} Updated Successfully`\r\n        );\r\n        Emptytableindex();\r\n        settableindex(-1);\r\n      }\r\n    }\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = [];\r\n    obj.push(\r\n      MedicineentriesArr.filter(function (e) {\r\n        return e.Itemid !== id;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setMedicineentriesArr(obj);\r\n  }\r\n  let total = 0;\r\n  function Calculate() {\r\n    total = qty ? rate * qty : rate;\r\n    // total = freeqty ? total - (rate * freeqty) : total\r\n    total = disc ? total - (total * disc) / 100 : total;\r\n    total = trddisc ? total - (total * trddisc) / 100 : total;\r\n    total = sgstprcnt\r\n      ? Number(total) +\r\n      Number((total * sgstprcnt) / 100 + (total * sgstprcnt) / 100)\r\n      : total;\r\n    total = igstprcnt\r\n      ? Number(total) + Number((total * Number(igstprcnt)) / 100)\r\n      : total;\r\n    total = total ? parseFloat(total).toFixed(2) : total;\r\n    return total;\r\n  }\r\n  let CostPerUnit = 0;\r\n  function CalculateCPU() {\r\n    let newqty = Number(qty) + Number(freeqty);\r\n    CostPerUnit = Number(parseFloat(Calculate() / newqty));\r\n    // console.log(Calculate(), CostPerUnit, qty, freeqty)\r\n    CostPerUnit = parseFloat(CostPerUnit).toFixed(2);\r\n    return CostPerUnit;\r\n  }\r\n  let GsT = 0;\r\n  function CalculateGst() {\r\n    total = qty ? rate * qty : rate;\r\n    total = disc ? total - (total * disc) / 100 : total;\r\n    total = trddisc ? total - (total * trddisc) / 100 : total;\r\n    GsT = sgstprcnt\r\n      ? Number(((rate * sgstprcnt) / 100 + (rate * sgstprcnt) / 100) / 2)\r\n      : GsT;\r\n    GsT = parseFloat(GsT).toFixed(2);\r\n    return GsT;\r\n  }\r\n  let IgsT = 0;\r\n  function CalculateIGst() {\r\n    total = qty ? rate * qty : rate;\r\n    total = disc ? total - (total * disc) / 100 : total;\r\n    total = trddisc ? total - (total * trddisc) / 100 : total;\r\n    IgsT = igstprcnt ? Number((rate * igstprcnt) / 100) : IgsT;\r\n    IgsT = parseFloat(IgsT).toFixed(2);\r\n    return IgsT;\r\n  }\r\n\r\n  useEffect(() => {\r\n    CalculateGst();\r\n    setsgst(CalculateGst());\r\n    setcgst(CalculateGst());\r\n  }, [sgstprcnt]);\r\n\r\n  useEffect(() => {\r\n    CalculateIGst();\r\n    setigst(CalculateIGst());\r\n  }, [igstprcnt]);\r\n  useEffect(() => {\r\n    settotalamt(Calculate());\r\n  }, [Calculate()]);\r\n\r\n  useEffect(() => {\r\n    setcpu(CalculateCPU());\r\n  }, [CalculateCPU(), Calculate()]);\r\n\r\n  const searchmedAuto = async (search) => {\r\n    await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n      let medicines = [];\r\n      let vaccines = [];\r\n      let items = [];\r\n      medicines.push(\r\n        response.data.data.medicines ? response.data.data.medicines : []\r\n      );\r\n      vaccines.push(\r\n        response.data.data.vaccines ? response.data.data.vaccines : []\r\n      );\r\n      items = medicines.concat(vaccines);\r\n      items = items.flat();\r\n      console.log(items);\r\n      if (items[0] && items[0].id !== undefined) {\r\n        let ID = items[0].id;\r\n        return ID;\r\n      } else {\r\n        return \"Please Select ID\";\r\n      }\r\n\r\n      // for(let i=0;i<items.length;i++){\r\n      //     if(items[i].itemname){\r\n\r\n      //     }\r\n      // }\r\n    });\r\n  };\r\n  const CalGST = (rate, cgst) => {\r\n    let gst = 0;\r\n    if (cgst && rate) {\r\n      gst = (cgst * rate) / 100;\r\n      gst = Number(gst);\r\n      gst = gst.toFixed(2);\r\n      return gst;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n  const Disc = (rate, dis) => {\r\n    let disrate = 0;\r\n    if (rate && dis) {\r\n      disrate = (rate * dis) / 100;\r\n      return disrate;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n  const SubmitExcel = () => {\r\n    if (Tableref.current.files[0].type == \"application/vnd.ms-excel\") {\r\n      let SelectedFile = Tableref.current.files[0];\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(SelectedFile);\r\n      reader.onload = (e) => {\r\n        setExceldata(e.target.result);\r\n      };\r\n    } else {\r\n      Notiflix.Notify.failure(\"Choose Only Excel File to Upload\");\r\n    }\r\n  };\r\n  const ConvertExcel = async () => {\r\n    let e = [];\r\n    if (vendorid == 2) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { type: \"buffer\" });\r\n        const ExcelSheet = Excelfile.SheetNames[0];\r\n        const Sheet = Excelfile.Sheets[ExcelSheet];\r\n        const data = XLSX.utils.sheet_to_json(Sheet);\r\n        console.log(data);\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = data[i].EXPIRY.replace(\"/\", \"-20\");\r\n          expiry = \"01-\" + expiry;\r\n          expiry = reversefunction(expiry);\r\n          let CpU = Number(data[i].SRATE);\r\n          CpU = data[i][\"CGST\"]\r\n            ? CpU +\r\n            Number(CalGST(CpU, data[i][\"CGST\"])) +\r\n            Number(CalGST(CpU, data[i][\"SGST\"]))\r\n            : CpU;\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS));\r\n          CpU = Number(CpU).toFixed(2);\r\n          let ITEMID = await searchmedAuto(data[i][\"ITEM NAME\"]);\r\n          console.log(ITEMID);\r\n\r\n          MedicineentriesObj = {\r\n            type: \"\",\r\n            Itemid: \"\",\r\n            Itemname: data[i][\"ITEM NAME\"],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: manufdate,\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i][\"F.QTY\"],\r\n            Discount: \"\",\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i][\"SGST\"],\r\n            sgst: CalGST(data[i].SRATE, data[i][\"SGST\"]),\r\n            cgstper: data[i][\"CGST\"],\r\n            cgst: CalGST(data[i].SRATE, data[i][\"CGST\"]),\r\n            igstper: CalGST(data[i].SRATE, data[i][\"IGST\"]),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: CpU * data[i].QTY.toFixed(2),\r\n          };\r\n          e.push(MedicineentriesObj);\r\n          console.log(e);\r\n        }\r\n      }\r\n    }\r\n    if (vendorid == 4 || vendorid == 3) {\r\n      if (Exceldata && Exceldata.length != 0) {\r\n        const Excelfile = XLSX.read(Exceldata, { type: \"buffer\" });\r\n        const ExcelSheet = Excelfile.SheetNames[0];\r\n        const Sheet = Excelfile.Sheets[ExcelSheet];\r\n        const data = XLSX.utils.sheet_to_json(Sheet);\r\n        console.log(data);\r\n        for (let i = 0; i < data.length; i++) {\r\n          let expiry = \"20\" + data[i].EXPYEAR;\r\n          expiry =\r\n            expiry +\r\n            (data[i].EXPMONTH < 10\r\n              ? \"-\" + \"0\" + data[i].EXPMONTH\r\n              : \"-\" + data[i].EXPMONTH);\r\n          expiry =\r\n            expiry +\r\n            (data[i].EXPDAY < 10 ? \"-\" + \"0\" + data[i].EXPDAY : data[i].EXPDAY);\r\n          let CpU = Number(data[i].SRATE);\r\n          CpU = data[i][\"CGST\"]\r\n            ? CpU +\r\n            Number(CalGST(CpU, data[i][\"CGST\"])) +\r\n            Number(CalGST(CpU, data[i][\"SGST\"]))\r\n            : CpU;\r\n          CpU = CpU - Number(Disc(CpU, data[i].DIS));\r\n          CpU = Number(CpU).toFixed(2);\r\n          // let mfddate = data[i].INVYEAR\r\n          // mfddate = mfddate + (data[i].INVMONTH < 10 ? '-' + '0' + data[i].INVMONTH : '-' + data[i].INVMONTH)\r\n          // mfddate = mfddate + (data[i].INVDAY < 10 ?  ('-' + '0' + data[i].INVDAY) :'-'+ data[i].INVDAY)\r\n          // console.log(mfddate)\r\n          MedicineentriesObj = {\r\n            type: \"\",\r\n            Itemid: \"\",\r\n            Itemname: data[i][\"ITEM NAME\"],\r\n            batchno: data[i].BATCH,\r\n            expirydate: expiry,\r\n            manufacturingDate: \"\",\r\n            MRP: data[i].MRP,\r\n            Rate: data[i].SRATE,\r\n            Qty: data[i].QTY,\r\n            freeQty: data[i][\"F.QTY\"],\r\n            Discount: \"\",\r\n            tradeDiscount: data[i].DIS,\r\n            sgstper: data[i][\"SGST\"],\r\n            sgst: CalGST(data[i].SRATE, data[i][\"SGST\"]),\r\n            cgstper: data[i][\"CGST\"],\r\n            cgst: CalGST(data[i].SRATE, data[i][\"CGST\"]),\r\n            igstper: CalGST(data[i].SRATE, data[i][\"IGST\"]),\r\n            igst: data[i].IGST,\r\n            costperunit: CpU,\r\n            totalamount: (CpU * data[i].QTY).toFixed(2),\r\n          };\r\n          e.push(MedicineentriesObj);\r\n        }\r\n      }\r\n    }\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr(e);\r\n    } else {\r\n      setMedicineentriesArr((prevState) => [...prevState, e]);\r\n    }\r\n  };\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == \"block\") {\r\n      setNewMed(\"none\");\r\n    }\r\n    if (NewMed == \"none\") {\r\n      setNewMed(\"block\");\r\n    }\r\n  };\r\n  // console.log(vendorid, vendorsearch, vendorcode, IsConsumable)\r\n  console.log(MedicineentriesArr);\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0\" style={{ zIndex: \"2\" }}>\r\n      <div className=\"container-fluid bg-seashell border border-2 border-top-0 border-start-0 border-end-0 \">\r\n        <div className=\"row p-0 m-0 p-2\">\r\n          <div className=\"col-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close closebtn m-auto mt-2\"\r\n              onClick={props.toggle_npef}\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"col-8 col-md-7 col-lg-8 col-xl-8\">\r\n            <h5 className=\"text-center mt-2\"> New Purchase Entry </h5>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                disabled={\r\n                  MedicineentriesArr == undefined ||\r\n                    (MedicineentriesArr && MedicineentriesArr.length == 0)\r\n                    ? true\r\n                    : false\r\n                }\r\n                className=\"button button-charcoal\"\r\n                onClick={() => {\r\n                  confirmmessage(MedicineentriesArr, vendorname);\r\n                }}\r\n              >\r\n                Save All\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <button className=\"button button-burntumber\" onClick={ClearFields}>\r\n              Clear All\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container-fluid p-0 m-0 entrydetails bg-pearl\"\r\n        style={{ Height: \"90vh\" }}\r\n      >\r\n        <div className=\"row p-0 m-0\">\r\n          <div className={`col-${vendorid ? \"8\" : \"12\"} p-0 m-0`}>\r\n            <div className=\"row p-0 m-0 align-items-center\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      checked={channel == 1 ? true : false}\r\n                      value=\"1\"\r\n                      onClick={(e) => {\r\n                        setchannel(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Pharmacy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      checked={channel == 2 ? true : false}\r\n                      value=\"2\"\r\n                      onClick={(e) => {\r\n                        setchannel(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Clinic</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8 p-0 m-0\">\r\n              <div className=\"row p-0 m-0 gx-2 gy-1\">\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select PO</h6>\r\n                  <input\r\n                    className=\"form-control ms-2 rounded-1\"\r\n                    placeholder=\"Enter PO\"\r\n                    value={po ? po : \"\"}\r\n                    onChange={(e) => {\r\n                      setpo(e.target.value);\r\n                    }}\r\n                    style={{ zIndex: \"5\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Vendor</h6>\r\n                  <input\r\n                    className=\"form-control ms-2 rounded-1\"\r\n                    placeholder=\"Search Vendors\"\r\n                    value={vendorname ? vendorname : \"\"}\r\n                    onChange={(e) => {\r\n                      searchvendors(e.target.value);\r\n                      setvendorname(e.target.value);\r\n                      setvendorid();\r\n                      setvendorcode();\r\n                    }}\r\n                  />\r\n                  <div\r\n                    ref={vendorsref}\r\n                    className=\"position-absolute ms-2 rounded-1 bg-pearl col-2\"\r\n                    style={{ zIndex: \"5\" }}\r\n                  >\r\n                    {vendorsearch ? (\r\n                      loadvendors ? (\r\n                        <div\r\n                          className=\"rounded-1 p-1 bg-pearl mt-1 border shadow\"\r\n                          style={{ width: \"fit-content\" }}\r\n                        >\r\n                          Searching Please wait....\r\n                          <div\r\n                            className=\"spinner-border my-auto\"\r\n                            style={{ width: \"1rem\", height: \"1rem\" }}\r\n                            role=\"status\"\r\n                          >\r\n                            <span className=\"sr-only\"></span>\r\n                          </div>\r\n                        </div>\r\n                      ) : vendorsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-1 p-2\">\r\n                          Oops! Not Avaliable\r\n                        </div>\r\n                      ) : (\r\n                        <div\r\n                          className=\"bg-pearl border shadow rounded-1 p-1\"\r\n                          style={{ zIndex: \"40\", width: \"fit-content\" }}\r\n                        >\r\n                          {vendorsearch.map((data, i) => (\r\n                            <div\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className={`p-0 p-1 d-${vendorsearch == undefined ||\r\n                                vendorsearch.length > 0\r\n                                ? \"\"\r\n                                : \"none\"\r\n                                }  bg-${i % 2 == 0 ? \"pearl\" : \"lightblue\"\r\n                                } fs-6 `}\r\n                              name={data.id}\r\n                              onClick={(e) => {\r\n                                setvendorname(data.entity_name);\r\n                                setvendorid(data.id);\r\n                                setvendorcode(data.state_code);\r\n                                filterclinic();\r\n                                vendorsref.current.style.display = \"none\";\r\n                              }}\r\n                            >\r\n                              {data.entity_name}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Number</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter No.\"\r\n                    className=\"form-control ms-2 rounded-1\"\r\n                    value={invoice ? invoice : \"\"}\r\n                    onChange={(e) => {\r\n                      setinvoice(e.target.value);\r\n                    }}\r\n                    style={{ color: \"gray\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control ms-2 rounded-1\"\r\n                    value={invoicedate ? invoicedate : \"\"}\r\n                    onChange={(e) => {\r\n                      setinvoicedate(e.target.value);\r\n                    }}\r\n                    style={{ color: \"gray\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row p-0 m-0 align-items-center mt-2\">\r\n                <div className=\"col-6 col-lg-5 col-md-5 p-0 m-0 align-self-center ms-1\">\r\n                  <button\r\n                    className=\"button button-charcoal m-0 p-0 py-1 px-4\"\r\n                    onClick={ToggleNewMedicine}\r\n                  >\r\n                    {\" \"}\r\n                    <img\r\n                      src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"}\r\n                      alt=\"displaying_image\"\r\n                      style={{ width: \"1.5rem\" }}\r\n                    />{\" \"}\r\n                    Medicine{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                      <input\r\n                        ref={Tableref}\r\n                        className=\"form-control w-100 p-0 m-0 px-2 py-1 rounded-1 bg-pearl\"\r\n                        onChange={SubmitExcel}\r\n                        type=\"file\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-5 text-end\">\r\n                      <button\r\n                        className=\"button button-lightyellow p-0 m-0 px-3 py-1\"\r\n                        onClick={ConvertExcel}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\" p-0 m-0 scroll scroll-y\"\r\n              style={{ maxHeight: \"50vh\", Height: \"50vh\" }}\r\n            >\r\n              <table className=\"table m-0 datatable bg-pearl text-start position-relative\">\r\n                <thead\r\n                  className=\" bg-pearl position-sticky top-0\"\r\n                  style={{ color: \"gray\", fontWeight: \"600\" }}\r\n                >\r\n                  <tr>\r\n                    <th>Edit</th>\r\n                    <th>Item ID</th>\r\n                    <th>Item Name</th>\r\n                    {/* <th>Manuf. Date</th> */}\r\n                    <th>batch No.</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>MRP</th>\r\n                    <th>Rate</th>\r\n                    <th>Total Disc</th>\r\n                    <th>Qty.</th>\r\n                    <th>Cost</th>\r\n                    <th>Amount</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                {MedicineentriesArr ? (\r\n                  <tbody\r\n                    style={{\r\n                      Height: \"48vh\",\r\n                      maxHeight: \"48vh\",\r\n                      color: \"var(--charcoal)\",\r\n                      fontWeight: \"600\",\r\n                    }}\r\n                  >\r\n                    {MedicineentriesArr.map((item, _key) => (\r\n                      <tr\r\n                        key={_key}\r\n                        className={`bg-${_key % 2 == 0 ? \"lightred50\" : \"pearl\"\r\n                          }`}\r\n                      >\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={_key == tableindex ? true : false}\r\n                            onClick={() => {\r\n                              indexing(_key);\r\n                            }}\r\n                            className=\"bg-seashell form-check-input\"\r\n                          />\r\n                        </td>\r\n                        <td>{item.Itemid}</td>\r\n                        <td>{item.Itemname}</td>\r\n                        {/* <td>{reversefunction(item.manufacturingDate)}</td> */}\r\n                        <td>{item.batchno}</td>\r\n                        <td>{reversefunction(item.expirydate)}</td>\r\n                        <td>{item.MRP}</td>\r\n                        <td>{item.Rate}</td>\r\n                        <td>\r\n                          {Number(item.Discount) + Number(item.tradeDiscount)}\r\n                        </td>\r\n                        <td>{item.Qty}</td>\r\n                        <td>{item.costperunit}</td>\r\n                        <td>{item.totalamount}</td>\r\n                        <td>\r\n                          <button\r\n                            onClick={() => {\r\n                              DeleteMedicine(item.Itemid);\r\n                            }}\r\n                            className=\"btn btn-sm button-burntumber\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                ) : MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                  <tbody\r\n                    className=\"position-relative bg-pearl text-center\"\r\n                    style={{\r\n                      height: \"48vh\",\r\n                      maxHeight: \"48vh\",\r\n                      color: \"var(--charcoal)\",\r\n                      fontWeight: \"600\",\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <td className=\"position-absolute start-0 end-0 top-0\">\r\n                        No items Added\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody\r\n                    className=\"position-relative bg-pearl text-center\"\r\n                    style={{\r\n                      height: \"48vh\",\r\n                      maxHeight: \"48vh\",\r\n                      color: \"var(--charcoal)\",\r\n                      fontWeight: \"600\",\r\n                    }}\r\n                  >\r\n                    <tr className=\"\">\r\n                      <td className=\"position-absolute start-0 end-0 top-0\">\r\n                        No items Added\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                )}\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`col-4 m-0 p-0 scroll scroll-y border border-1 medicineinfosection d-${vendorid ? \"block\" : \"none\"\r\n              } bg-seashell ps-2`}\r\n            id=\"medicineinfosection\"\r\n            style={{ maxHeight: \"81vh\", Height: \"81vh\" }}\r\n          >\r\n            <h5 className=\"mt-2\">Add Items</h5>\r\n            <div className=\"col-12\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={IsConsumable == 0 ? false : true}\r\n                className=\"form-check-input\"\r\n                onChange={() => {\r\n                  IsConsumable == 0 ? setIsConsumable(1) : setIsConsumable(0);\r\n                }}\r\n              />{\" \"}\r\n              <label>Is Consumable</label>\r\n              <div className=\" col-10 col-md-11\">\r\n                <div className=\"position-relative\">\r\n                  <label>Search Items </label>\r\n                  <input\r\n                    className=\"form-control bg-seashell\"\r\n                    placeholder=\"Items\"\r\n                    value={itemname ? itemname : \"\"}\r\n                    onChange={(e) => {\r\n                      searchmeds(e.target.value);\r\n                      setitemname(e.target.value);\r\n                      setitemtype();\r\n                    }}\r\n                  />\r\n                  <div\r\n                    ref={medicinesref}\r\n                    className=\"position-absolute rounded-4 col-12\"\r\n                    style={{ zIndex: \"2\" }}\r\n                  >\r\n                    {itemsearch ? (\r\n                      loadsearch ? (\r\n                        <div className=\"rounded-1 p-1 bg-pearl\">\r\n                          Searching Please wait....\r\n                          <div\r\n                            className=\"spinner-border my-auto\"\r\n                            style={{ width: \"1rem\", height: \"1rem\" }}\r\n                            role=\"status\"\r\n                          >\r\n                            <span className=\"sr-only\"> </span>{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      ) : itemsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-1 p-1 text-wrap\">\r\n                          Oops! Not Avaliable\r\n                        </div>\r\n                      ) : (\r\n                        <div\r\n                          className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1\r\n                            ? \"block\"\r\n                            : \"none\"\r\n                            }`}\r\n                        >\r\n                          <p\r\n                            className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 rounded-4 ps-2 `}\r\n                            style={{ fontSize: \"0.8rem\" }}\r\n                          >\r\n                            {itemsearch.length} Search Results\r\n                          </p>\r\n                          {itemsearch.map((data, i) => (\r\n                            <div\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className={`p-0 ps-1 text-wrap  bg-${i % 2 == 0 ? \"\" : \"lightyellow\"\r\n                                }`}\r\n                              name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(\r\n                                  data.display_name\r\n                                    ? data.display_name\r\n                                    : data.name\r\n                                );\r\n                                setitemid(data.id);\r\n                                setitemtype(data.vaccines_id ? \"v\" : \"m\");\r\n                                medicinesref.current.style.display = \"none\";\r\n                              }}\r\n                            >\r\n                              {data.display_name\r\n                                ? data.display_name\r\n                                : data.name}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <label className=\"mb-2 pt-2\">Batch Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  max=\"10\"\r\n                  className=\"form-control bg-seashell batchnumber rounded-1\"\r\n                  id=\"inputEmail4\"\r\n                  placeholder=\"Batch Number\"\r\n                  value={batchno ? batchno : \"\"}\r\n                  onChange={(e) => setbatchno(e.target.value)}\r\n                  required\r\n                />\r\n                <label className=\"pt-3 mb-2\">Expiry Date</label>\r\n                <input\r\n                  type=\"Date\"\r\n                  className=\"form-control bg-seashell reounded-1 expirydate\"\r\n                  value={expdate ? expdate : \"\"}\r\n                  onChange={(e) => {\r\n                    setexpdate(e.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n                <label className=\"pt-3 mb-2\">Manufacturing Date</label>\r\n                <input\r\n                  type=\"Date\"\r\n                  className=\"form-control bg-seashell reounded-1 manufacturingdate\"\r\n                  value={manufdate ? manufdate : \"\"}\r\n                  onChange={(e) => {\r\n                    setmanufdate(e.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-12 form-group col-md-11 col-lg-11\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">MRP</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                      placeholder=\"00\"\r\n                      value={mrp ? mrp : \"\"}\r\n                      onChange={(e) => {\r\n                        setmrp(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\"> Rate</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell rate rounded-1  m-auto\"\r\n                      placeholder=\"00\"\r\n                      value={rate ? rate : \"\"}\r\n                      onChange={(e) => {\r\n                        setrate(e.target.value);\r\n                        Calculate(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Qty</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                      placeholder=\"00\"\r\n                      value={qty ? qty : \"\"}\r\n                      onChange={(e) => {\r\n                        setqty(e.target.value);\r\n                        Calculate(rate, e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Free Qty</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell rate rounded-1  m-auto\"\r\n                      placeholder=\"00\"\r\n                      value={freeqty ? freeqty : \"\"}\r\n                      onChange={(e) => {\r\n                        setfreeqty(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Discount &#40;%&#41;</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                      placeholder=\"00\"\r\n                      value={disc ? disc : \"\"}\r\n                      onChange={(e) => {\r\n                        setdisc(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-5 pb-3\">\r\n                    <label className=\"mb-2\">Trade Disc. &#40;%&#41;</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell rate rounded-1  m-auto\"\r\n                      placeholder=\"00\"\r\n                      value={trddisc ? trddisc : \"\"}\r\n                      onChange={(e) => {\r\n                        settrddisc(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <hr />\r\n                  <div\r\n                    className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? \"block\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    <div className=\"row align-items-center p-0 m-0\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>SGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input\r\n                          type=\"number\"\r\n                          max=\"10\"\r\n                          className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                          placeholder=\"00\"\r\n                          disabled={true}\r\n                          value={sgst ? sgst : \"\"}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input\r\n                          type=\"number\"\r\n                          max=\"10\"\r\n                          className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                          placeholder=\"Rate\"\r\n                          value={sgstprcnt ? sgstprcnt : \"\"}\r\n                          onChange={(e) => {\r\n                            setsgstprcnt(e.target.value);\r\n                            setcgstprcnt(e.target.value);\r\n                            CalculateGst();\r\n                          }}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? \"block\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2\">\r\n                        <h6>CGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input\r\n                          type=\"number\"\r\n                          max=\"10\"\r\n                          className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                          disabled={true}\r\n                          placeholder=\"00\"\r\n                          value={cgst ? cgst : sgst ? sgst : \"\"}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input\r\n                          type=\"number\"\r\n                          max=\"10\"\r\n                          className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                          disabled={true}\r\n                          placeholder=\"Rate\"\r\n                          value={\r\n                            cgstprcnt ? cgstprcnt : sgstprcnt ? sgstprcnt : \"\"\r\n                          }\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? \"none\" : \"block\"\r\n                      }`}\r\n                  >\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>IGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input\r\n                          type=\"number\"\r\n                          max=\"10\"\r\n                          className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                          placeholder=\"00\"\r\n                          disabled={true}\r\n                          value={CalculateIGst() ? CalculateIGst() : \"\"}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input\r\n                          type=\"number\"\r\n                          max=\"10\"\r\n                          className=\"form-control bg-seashell mrp rounded-1  m-auto\"\r\n                          placeholder=\"Rate\"\r\n                          value={igstprcnt ? igstprcnt : \"\"}\r\n                          onChange={(e) => {\r\n                            setigstprcnt(e.target.value);\r\n                          }}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"col-12 form-group\">\r\n                <div className=\"row p-0 m-0 g-3\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Cost/Unit</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell costunit rounded-1\"\r\n                      placeholder=\"00\"\r\n                      disabled\r\n                      value={CalculateCPU() ? CalculateCPU() : \"\"}\r\n                      onChange={(e) => {\r\n                        setcpu(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Total Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      max=\"10\"\r\n                      className=\"form-control bg-seashell totalamount rounded-1\"\r\n                      placeholder=\"00\"\r\n                      disabled\r\n                      value={Calculate() ? Calculate() : \"\"}\r\n                      onChange={(e) => {\r\n                        settotalamt(e.target.value);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6 py-3 m-auto text-center\">\r\n                {tableindex == -1 || tableindex == undefined ? (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn  button-charcoal done px-5\"\r\n                    onClick={InsertMedicines}\r\n                  >\r\n                    {\" \"}\r\n                    Add{\" \"}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn  button-charcoal done px-5\"\r\n                    onClick={UpdateMedicines}\r\n                  >\r\n                    {\" \"}\r\n                    Update{\" \"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`position-absolute top-0 start-0 end-0 d-${NewMed}`}>\r\n        <NewMedicine ToggleNewMedicine={ToggleNewMedicine} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nfunction Purchaseordersection() {\r\n  let cartselect = [\"Pharmacy\", \"Clinic\"];\r\n  const [cartselectindex, setcartselectindex] = useState(0);\r\n  const [displayviewcart, setdisplayviewcart] = useState(\"none\");\r\n  const [displayitemdetails, setdisplayitemdetails] = useState(\"none\");\r\n  const _displayviewcart = () => {\r\n    if (displayviewcart === \"none\") {\r\n      setdisplayviewcart(\"block\");\r\n    }\r\n    if (displayviewcart === \"block\") {\r\n      setdisplayviewcart(\"none\");\r\n    }\r\n  };\r\n  const _displayitemdetails = () => {\r\n    if (displayitemdetails === \"none\") {\r\n      setdisplayitemdetails(\"block\");\r\n    }\r\n    if (displayitemdetails === \"block\") {\r\n      setdisplayitemdetails(\"none\");\r\n    }\r\n  };\r\n  const _selectedcart = (cardindex) => {\r\n    if (cardindex === 0) {\r\n      return (\r\n        <table className=\"table datatable text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Item Name</th>\r\n              <th>Total Qty</th>\r\n              <th>Amount</th>\r\n              <th>Last Vendor</th>\r\n              <th>Add</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{<Pharmacystocktable />}</tbody>\r\n        </table>\r\n      );\r\n    }\r\n    if (cardindex === 1) {\r\n      return <div className=\"\">{cardindex}</div>;\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"button viewcart button-charcoal position-absolute\"\r\n        onClick={_displayviewcart}\r\n      >\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/cartwhite.png\"}\r\n          alt=\"displaying_image\"\r\n          className=\"img-fluid\"\r\n          style={{ width: `1.5rem` }}\r\n        />\r\n        View Cart\r\n      </button>\r\n      <div\r\n        className={`container-fluid pt-2  p-0 m-0 cartform d-${displayviewcart} w-50 border1 rounded bg-seashell position-absolute text-center`}\r\n      >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">Items in Cart</h5>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute\"\r\n          aria-label=\"Close\"\r\n          onClick={_displayviewcart}\r\n        ></button>\r\n        <div className=\"pt-1\">\r\n          <div className=\"row g-0 justify-content-center\">\r\n            {cartselect.map((e, i) => {\r\n              return (\r\n                <button\r\n                  className={`col-2 p-0 m-0 button text-${i === cartselectindex ? \"light\" : \"dark\"\r\n                    } bg-${i === cartselectindex ? \"charcoal\" : \"seashell\"\r\n                    } rounded-0`}\r\n                  onClick={(a) => setcartselectindex(i)}\r\n                >\r\n                  {e}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"scroll scroll-y\">{_selectedcart(cartselectindex)}</div>\r\n        <div className=\"bg-pearl rounded\">\r\n          <div className=\"row p-3 justify-content-between\">\r\n            <div className=\"col-3\">\r\n              <select\r\n                className=\"form-control bg-pearl\"\r\n                style={{ color: \"gray\" }}\r\n              >\r\n                <option\r\n                  selected\r\n                  disabled\r\n                  defaultValue=\"Select Vendor\"\r\n                  className=\"Selectvendor\"\r\n                  style={{ color: \"gray\" }}\r\n                >\r\n                  Select Vendor\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button className=\"button button-charcoal\">Create New PO</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`container-fluid pt-2  p-0 m-0 itemdetailsform d-${displayitemdetails} w-50 border1 rounded bg-seashell position-absolute text-center`}\r\n      >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">PO-14 Item Details</h5>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute\"\r\n          aria-label=\"Close\"\r\n          onClick={_displayitemdetails}\r\n        ></button>\r\n        <div className=\"scroll scroll-y\">{<POitemdetailsarray />}</div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-lg text-center button-charcoal m-2\"\r\n          onClick={_displayitemdetails}\r\n        >\r\n          Done\r\n        </button>\r\n      </div>\r\n      <h3 className=\"ps-3\">Purchase Order List</h3>\r\n      <table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>PO ID</th>\r\n            <th>Channel</th>\r\n            <th>Vendor</th>\r\n            <th>PO Date</th>\r\n            <th>Created By</th>\r\n            <th>Total Items</th>\r\n            <th>Amount</th>\r\n            <th>Approval Status</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {<Purchaseorderarray itemdetails={_displayitemdetails} />}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\nfunction POitemdetailssection() {\r\n  return (\r\n    <table className=\"table datatable text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>Item Name</th>\r\n          <th>Total Qty</th>\r\n          <th>Amount</th>\r\n          <th>Last Vendor</th>\r\n          <th>Add</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{<POitemdetailsarray />}</tbody>\r\n    </table>\r\n  );\r\n}\r\nfunction PurchaseReturns() {\r\n  const currentDate = useContext(TodayDate);\r\n  const ClinicID = localStorage.getItem(\"ClinicId\");\r\n  const url = useContext(URL);\r\n  const [pridw, setpridw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1);\r\n  const [fromdate, setfromdate] = useState();\r\n  const [todate, settodate] = useState();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [purchasereturnarr, setpurchasereturnarr] = useState([]);\r\n  const [purchasereturnarrExcel, setpurchasereturnarrExcel] = useState([]);\r\n  const [index, setindex] = useState();\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [pages, setpages] = useState();\r\n  const [pagecount, setpagecount] = useState();\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 25) + 1);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  function GETPurchaseReturns(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n            }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n          )\r\n          .then((response) => {\r\n            setpurchasereturnarr(response.data.data.purchase_return);\r\n            setpagecount(response.data.data.total_count);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${Data.selected * 25\r\n            }&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            setpurchasereturnarr(response.data.data.purchase_return);\r\n            setpagecount(response.data.data.total_count);\r\n            setLoading(false);\r\n          })\r\n          .catch((e) => {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.data.message);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n  function GETPurchaseReturnsForExcel() {\r\n    setLoading(true);\r\n    try {\r\n      axios\r\n        .get(\r\n          `${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=${pagecount}&offset=0&from_date=${fromdate ? fromdate : currentDate\r\n          }&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`\r\n        )\r\n        .then((response) => {\r\n          setpurchasereturnarrExcel(response.data.data.purchase_return);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e.message);\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetPages();\r\n  }, [channel, fromdate, todate]);\r\n\r\n  useEffect(() => {\r\n    GETPurchaseReturns();\r\n    GETPurchaseReturnsForExcel();\r\n  }, [pagecount]);\r\n\r\n  const toggle_pridw = () => {\r\n    if (pridw === \"none\") {\r\n      setpridw(\"block\");\r\n    }\r\n    if (pridw === \"block\") {\r\n      setpridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <button className=\"button addpurchase button-charcoal position-absolute\" onClick={toggle_nref} >\r\n        <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" style={{ width: `1.5rem` }} />\r\n        Entry Return\r\n      </button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between justify-content-md-evenly justify-content-between text-center\">\r\n        <div className=\"col-lg-2 col-md-2 col-12 text-center p-0 m-0 ms-lg-0 ms-md-0 ms-sm-0 ms-1 \">\r\n          <button type=\"button\" className=\"btn p-0 m-0 heading text-charcoal fw-bolder  \" style={{ width: \"fit-content\" }} > {pagecount} {pagecount > 0 ? \"Purchase Returns\" : \"Purchase Return\"}{\" \"} </button>\r\n        </div>\r\n        <div className=\"col-lg-8 col-md-7 col-sm-12 col-12 px-sm-5  align-self-center p-0 m-0 mt-lg-0 mt-md-0 mt-1  \">\r\n          <div className=\"row p-0 m-0 border-burntumber fw-bolder rounded-1 text-center justify-content-center \">\r\n            <div className=\"col-4\">\r\n              <select className=\"p-0 m-0 border-0 text-burntumber bg-pearl fw-bolder\" value={channel ? channel : \"\"} onChange={(e) => { setchannel(e.target.value); }} >\r\n                <option className=\"border-0 text-burntumber fw-bolder\" value=\"1\" > Pharmacy </option>\r\n                <option className=\"border-0 text-burntumber fw-bolder\" value=\"2\" > Consumables </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl \">\r\n              <input\r\n                type=\"date\"\r\n                className=\"p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder \"\r\n                value={fromdate ? fromdate : currentDate ? currentDate : \"\"}\r\n                onChange={(e) => {\r\n                  setfromdate(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl rounded-1 \">\r\n              <input\r\n                type=\"date\"\r\n                className=\"p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder \"\r\n                value={\r\n                  todate\r\n                    ? todate\r\n                    : fromdate\r\n                      ? fromdate\r\n                      : currentDate\r\n                        ? currentDate\r\n                        : \"\"\r\n                }\r\n                onChange={(e) => {\r\n                  settodate(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 export col-md-2 col-lg-2 align-self-center mt-sm-2  \">\r\n          <ExportPurchaseReturn\r\n            purchasereturnarr={purchasereturnarrExcel}\r\n            fromdate={reversefunction(fromdate)}\r\n            todate={reversefunction(todate)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll scroll-y overflow-scroll p-0 m-0\" style={{ minHeight: \"57vh\", height: \"57vh\" }} >\r\n        <table className=\"table text-center p-0 m-0\">\r\n          <thead className=\"p-0 m-0 align-middle\">\r\n            <tr>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> PR ID </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Distributor </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Return Date </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Return Amount </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> Inventory </th>\r\n              <th className=\"fw-bolder text-charcoal75\" scope=\"col\"> more </th>\r\n            </tr>\r\n          </thead>\r\n          {Loading ? (\r\n            <body className=\" text-center\" style={{ minHeight: \"57vh\" }}>\r\n              <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <strong className=\"fs-5\">\r\n                    Getting Details please be Patient ...\r\n                  </strong>\r\n                  <div\r\n                    className=\"spinner-border ms-auto\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></div>\r\n                </div>\r\n              </tr>\r\n            </body>\r\n          ) : purchasereturnarr && purchasereturnarr.length != 0 ? (\r\n            <tbody>\r\n              {purchasereturnarr.map((item, i) => (\r\n                <tr\r\n                  key={i}\r\n                  className={`bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"\r\n                    } align-middle`}\r\n                >\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                    PR-{item.return_no}\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                    {item.distributor &&\r\n                      item.distributor != null &&\r\n                      item.distributor.entity_name &&\r\n                      item.distributor.entity_name != null\r\n                      ? item.distributor.entity_name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                    {item.return_date ? reversefunction(item.return_date) : \"\"}\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                    {item.grand_total ? item.grand_total : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                    {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => {\r\n                        setindex(i);\r\n                        toggle_pridw();\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"/images/archivebox.png\"}\r\n                        alt=\"displaying_image\"\r\n                        className=\"ms-1\"\r\n                        style={{ width: \"1.5rem\" }}\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold\">\r\n                    <button className=\"btn position-relative cursor-pointer more p-0 m-0\">\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"/images/more.png\"}\r\n                        alt=\"displaying_image\"\r\n                        style={{ width: \"1.5rem\" }}\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  <td\r\n                    className={` position-absolute d-${i == index ? pridw : \"none\"\r\n                      } border border-1 start-0 end-0 bg-seashell p-0 m-0`}\r\n                    style={{ Height: \"90vh\", top: \"-7.15rem\", zIndex: \"2\" }}\r\n                  >\r\n                    {i == index ? (\r\n                      <PRitemdetailssection\r\n                        purchasereturnarr={purchasereturnarr[i]}\r\n                        itembillid={\"PR-\" + item.return_no}\r\n                        toggle_pridw={toggle_pridw}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <tbody\r\n              className=\"text-center position-relative p-0 m-0 \"\r\n              style={{ minHeight: \"55vh\" }}\r\n            >\r\n              <tr className=\"\">\r\n                <td className=\"fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0\">\r\n                  No Purchase Returns\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\". . .\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GETPurchaseReturns}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n\r\n      <section\r\n        className={`newreturnentrysection position-absolute bg-seashell border border-1 start-0 end-0 d-${nref}`}\r\n      >\r\n        {\r\n          <NewPurchaseReturnentryform\r\n            toggle_nref={toggle_nref}\r\n            GETPurchaseReturns={GETPurchaseReturns}\r\n          />\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction PRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState(\"block\");\r\n  const [vaccine, setvaccine] = useState(\"none\");\r\n  const [index, setindex] = useState(0);\r\n  const Items = [\"Medicine\", \"Vaccine\"];\r\n  if (index == 0) {\r\n    if (medicine == \"none\") {\r\n      setmedicine(\"block\");\r\n      setvaccine(\"none\");\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == \"none\") {\r\n      setvaccine(\"block\");\r\n      setmedicine(\"none\");\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false);\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst);\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if ((cgst && sgst && igst !== null) || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty);\r\n      e = e.toFixed(2);\r\n      return e;\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  console.log(props.purchasereturnarr);\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0 position-relative\">\r\n        <h5 className=\"text-center text-charcoal mt-3\">\r\n          {props.itembillid} Purchase Return Item Details\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close closebtn position-absolute end-0 me-2 \"\r\n          onClick={props.toggle_pridw}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n        <div className=\"col-2 d-none\">\r\n          <div\r\n            className=\" position-relative searchbutton\"\r\n            style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className=\" form-control d-inline PEsearch bg-seashell\"\r\n              placeholder=\"Search PE\"\r\n            />\r\n            <button\r\n              className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\"\r\n              style={{ width: \"2rem\", right: \"0\", left: \"0\", top: \"0.25rem\" }}\r\n            >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n                alt=\"displaying_image\"\r\n                className=\"img-fluid p-0 m-0\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center p-0 m-0 mt-3 mb-1\">\r\n        {Items.map((data, i) => (\r\n          <button\r\n            className={`button border-charcoal rounded-0 button-${i == index ? \"charcoal\" : \"seashell\"\r\n              }`}\r\n            onClick={() => {\r\n              setindex(i);\r\n            }}\r\n          >\r\n            {data}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-end me-5 \">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"\"\r\n          value={Taxon ? Taxon : \"\"}\r\n          onChange={() => {\r\n            Taxon == true ? setTaxon(false) : setTaxon(true);\r\n          }}\r\n        />\r\n        <label>Show Tax Details</label>\r\n      </div>\r\n\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${medicine}`}\r\n        style={{ minHeight: \"70vh\", maxHeight: \"70vh\" }}\r\n      >\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className=\"border p-0 m-0 px-1\"\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchasereturnarr.purchase_medicines &&\r\n            props.purchasereturnarr.purchase_medicines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchasereturnarr.purchase_medicines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.medicine && item.medicine.name !== null\r\n                      ? item.medicine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? Number(item.SGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? Number(item.SGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? Number(item.CGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? Number(item.CGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? Number(item.IGST_rate) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? Number(item.IGST) * Number(item.qty) : \"\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <p className=\" text-charcoal fw-bold text-center\">\r\n                  No Medicines Found\r\n                </p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        className={`scroll bg-seashell scroll-y d-${vaccine}`}\r\n        style={{ minHeight: \"70vh\", maxHeight: \"70vh\" }}\r\n      >\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item ID\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Item Name\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Batch No.\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Expiry Date\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                MRP\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Rate\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Disc%\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Trade Disc%\r\n              </th>\r\n              <th\r\n                colspan={Taxon == true ? \"8\" : \"2\"}\r\n                scope=\"col-group\"\r\n                className={`border p-0 m-0 px-1`}\r\n              >\r\n                Total Tax\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Cost\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Qty\r\n              </th>\r\n              <th rowspan=\"2\" className=\"border p-0 m-0 px-1\">\r\n                Total\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                CGST\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                SGST{\" \"}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST%\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className={`border p-0 m-0 px-1 d-${Taxon == true ? \"\" : \"none\"\r\n                  }`}\r\n              >\r\n                IGST{\" \"}\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total%\r\n              </th>\r\n              <th scope=\"col\" className={`border p-0 m-0 px-1`}>\r\n                Total\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {props.purchasereturnarr.purchase_vaccines &&\r\n            props.purchasereturnarr.purchase_vaccines.length !== 0 ? (\r\n            <tbody className=\"border align-items-center p-0 m-0\">\r\n              {props.purchasereturnarr.purchase_vaccines.map((item, _key) => (\r\n                <tr className=\"border p-0 m-0 align-middle\" key={_key}>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item && item.id !== null ? item.id : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.vaccine && item.vaccine.name !== null\r\n                      ? item.vaccine.name\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.batch_no && item.batch_no != null\r\n                      ? item.batch_no\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.expiry_date && item.expiry_date != null\r\n                      ? reversefunction(item.expiry_date)\r\n                      : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.mrp ? item.mrp : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.rate ? item.rate : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.qty ? item.qty : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.discount ? item.discount : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.trade_discount ? item.trade_discount : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST_rate ? item.SGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.SGST ? item.SGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST_rate ? item.CGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.CGST ? item.CGST : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST_rate ? item.IGST_rate : \"N/A\"}\r\n                  </td>\r\n                  <td\r\n                    className={`border p-0 m-0 align-middle d-${Taxon == true ? \"\" : \"none\"\r\n                      }`}\r\n                  >\r\n                    {item.IGST ? item.IGST : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxPercent(\r\n                      item.CGST_rate,\r\n                      item.SGST_rate,\r\n                      item.IGST_rate\r\n                    )}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {TotalTaxRate(item.CGST, item.SGST, item.IGST)}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.cost ? item.cost : \"N/A\"}\r\n                  </td>\r\n                  <td className=\"border p-0 m-0 align-middle\">\r\n                    {item.total_amount ? item.total_amount : \"N/A\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : (\r\n            <body className=\"text-center p-0 m-0 border border-1 \">\r\n              <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                <p className=\" text-center fw-bold\">No Vaccines Found</p>\r\n              </div>\r\n            </body>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction NewPurchaseReturnentryform(props) {\r\n  const url = useContext(URL);\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  const ClinicList = useContext(Clinic);\r\n  const medicinesref = useRef(null);\r\n  const vendorsref = useRef(null);\r\n\r\n  const [vendorname, setvendorname] = useState();\r\n  const [vendorid, setvendorid] = useState();\r\n  const [loadvendors, setloadvendors] = useState();\r\n  const [vendorsearch, setvendorsearch] = useState([\"\"]);\r\n  const [itemsearch, setitemsearch] = useState([\"\"]);\r\n  const [itemname, setitemname] = useState();\r\n  const [loadsearch, setloadsearch] = useState();\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([]);\r\n  const [load, setload] = useState();\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0;\r\n      costing = Number(cost) * Number(qtytotreturn);\r\n      return costing.toFixed(2);\r\n    } else {\r\n      return costing;\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.cost,\r\n      totalcost: 0,\r\n      currentstock: data.current_stock,\r\n      qtytoReturn: 0,\r\n    };\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj]);\r\n    } else {\r\n      setMedicineentriesArr((prevState) => [...prevState, MedicineentriesObj]);\r\n    }\r\n  }\r\n  const searchmeds = async () => {\r\n    setloadsearch(true);\r\n    try {\r\n      await axios\r\n        .get(\r\n          `${url}/purchase/item/search/by/id?item=${itemname}&distributor_id=${vendorid}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data.data);\r\n          setitemsearch([response.data.data]);\r\n          setloadsearch(false);\r\n          if (itemname.length >= 1) {\r\n            medicinesref.current.style.display = \"block\";\r\n          } else {\r\n            medicinesref.current.style.display = \"none\";\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            Notiflix.Notify.failure(error.response.data);\r\n            Notiflix.Notify.failure(error.response.status);\r\n            Notiflix.Notify.failure(error.response.headers);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  };\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true);\r\n    try {\r\n      await axios\r\n        .get(`${url}/kyc/list?limit=10&offset=0&search=${search}`)\r\n        .then((response) => {\r\n          setvendorsearch(response.data.data);\r\n          setloadvendors(false);\r\n          if (search.length > 1) {\r\n            vendorsref.current.style.display = \"block\";\r\n          } else {\r\n            vendorsref.current.style.display = \"none\";\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            Notiflix.Notify.failure(error.response.data);\r\n            Notiflix.Notify.failure(error.response.status);\r\n            Notiflix.Notify.failure(error.response.headers);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  };\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = [];\r\n    let Totalamount = [];\r\n    let quantity = [];\r\n\r\n    let grosstotal = 0;\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(\r\n        MedicineentriesArr[i].Itemid\r\n          ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}`\r\n          : \"\"\r\n      );\r\n      Totalamount.push(\r\n        MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : \"\"\r\n      );\r\n      quantity.push(\r\n        MedicineentriesArr[i].qtytoReturn\r\n          ? MedicineentriesArr[i].qtytoReturn\r\n          : \"\"\r\n      );\r\n    }\r\n\r\n    Totalamount.forEach((item) => {\r\n      grosstotal += Number(item);\r\n    });\r\n\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal,\r\n    };\r\n    console.log(Data);\r\n    setload(true);\r\n    try {\r\n      await axios.post(`${url}/purchase/return/save`, Data).then((response) => {\r\n        props.GETPurchaseReturns();\r\n        setMedicineentriesArr();\r\n        setvendorname();\r\n        setvendorid();\r\n        setitemname();\r\n        setload(false);\r\n        props.toggle_nref();\r\n        if (response.data.status == true) {\r\n          Notiflix.Notify.success(response.data.message);\r\n        } else {\r\n          Notiflix.Notify.warning(response.data.message);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n      console.log(e);\r\n    }\r\n  };\r\n  function confirmmessage() {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Purchase ${MedicineentriesArr.length <= 1 ? \"Return \" : \"Returns\"\r\n      } of Distributor ${vendorname}  `,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        SaveReturnEntry();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = [];\r\n    obj.push(\r\n      MedicineentriesArr.filter(function (e) {\r\n        return e.Itemid !== id;\r\n      })\r\n    );\r\n    obj = obj.flat();\r\n    setMedicineentriesArr(obj);\r\n  }\r\n  function Grand() {\r\n    let c = 0;\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (c += Number(data.totalcost)));\r\n    }\r\n    return c;\r\n  }\r\n  return (\r\n    <div className=\"newpurchaseentryform p-0 m-0\">\r\n      <div className=\" p-0 m-0\">\r\n        <div className=\"container-fluid p-0 m-0 bg-seashell position-relative  \">\r\n          <h5 className=\"text-center mt-3\" style={{ color: \"var(--charcoal)\" }}>\r\n            New Purchase Return Entry\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close position-absolute end-0 closebtn me-2\"\r\n            onClick={props.toggle_nref}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-center\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Distributor</h6>\r\n              <input\r\n                className=\"form-control ms-2 rounded-1 bg-seashell\"\r\n                placeholder=\"Search Vendors\"\r\n                value={vendorname ? vendorname : \"\"}\r\n                onChange={(e) => {\r\n                  searchvendors(e.target.value);\r\n                  setvendorname(e.target.value);\r\n                  setvendorid();\r\n                  setMedicineentriesArr([]);\r\n                }}\r\n              />\r\n              <div\r\n                ref={vendorsref}\r\n                className=\"position-absolute ms-2 rounded-1 bg-pearl col-2\"\r\n                style={{ display: \"none\", zIndex: \"1\" }}\r\n              >\r\n                {vendorsearch ? (\r\n                  loadvendors ? (\r\n                    <div className=\"rounded-1 p-1\">\r\n                      Searching Please wait....\r\n                      <div\r\n                        className=\"spinner-border my-auto\"\r\n                        style={{ width: \"1rem\", height: \"1rem\" }}\r\n                        role=\"status\"\r\n                      >\r\n                        <span className=\"sr-only\"> </span>{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  ) : vendorsearch.length == 0 ? (\r\n                    <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                      Oops! Not Avaliable\r\n                    </div>\r\n                  ) : (\r\n                    vendorsearch.map((data, i) => (\r\n                      <div\r\n                        style={{ cursor: \"pointer\" }}\r\n                        className={`p-0 p-1  bg-${i % 2 == 0 ? \"pearl\" : \"lightblue\"\r\n                          } fs-6 `}\r\n                        name={data.id}\r\n                        onClick={(e) => {\r\n                          setvendorname(data.entity_name);\r\n                          setvendorid(data.id);\r\n                          vendorsref.current.style.display = \"none\";\r\n                        }}\r\n                      >\r\n                        {data.entity_name}\r\n                      </div>\r\n                    ))\r\n                  )\r\n                ) : (\r\n                  <div className=\"bg-seashell\"></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className=\"position-relative\">\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input\r\n                  className=\"form-control bg-seashell\"\r\n                  placeholder=\"Product Id\"\r\n                  value={itemname ? itemname : \"\"}\r\n                  onChange={(e) => {\r\n                    vendorid\r\n                      ? setitemname(e.target.value)\r\n                      : Notiflix.Notify.failure(\"Please Add Vendor First\");\r\n                  }}\r\n                />\r\n                <div\r\n                  ref={medicinesref}\r\n                  className=\"position-absolute rounded-1 bg-pearl col-12\"\r\n                  style={{ zIndex: \"1\" }}\r\n                >\r\n                  {itemsearch ? (\r\n                    loadsearch ? (\r\n                      <div className=\"rounded-1 p-1\">\r\n                        Searching Please wait....\r\n                        <div\r\n                          className=\"spinner-border my-auto\"\r\n                          style={{ width: \"1rem\", height: \"1rem\" }}\r\n                          role=\"status\"\r\n                        >\r\n                          <span className=\"sr-only\"> </span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    ) : itemsearch.length == 0 ? (\r\n                      <div className=\"bg-burntumber text-light rounded-1 p-1\">\r\n                        Oops! Not Avaliable\r\n                      </div>\r\n                    ) : (\r\n                      itemsearch.map((data, i) => (\r\n                        <div\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={`p-0 ps-1 shadow bg-${i % 2 == 0 ? \"pearl\" : \"lightyellow\"\r\n                            } fs-6 `}\r\n                          name={data.id}\r\n                          onClick={(e) => {\r\n                            setitemname(data.item_name);\r\n                            InsertMedicines(data);\r\n                            medicinesref.current.style.display = \"none\";\r\n                          }}\r\n                        >\r\n                          {data.item_name}\r\n                        </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <div className=\"bg-seashell\"></div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className=\"p-0 m-0 btn\" onClick={searchmeds}>\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"images/search.png\"}\r\n                  style={{ width: \"1.8rem\" }}\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\" p-0 m-0 mt-2 scroll scroll-y\"\r\n            style={{ Height: \"65vh\" }}\r\n          >\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead style={{ color: \"gray\", fontWeight: \"600\" }}>\r\n                <tr>\r\n                  <th className=\"p-0 m-0 px-1\">Item ID</th>\r\n                  <th className=\"p-0 m-0 px-1\">Item Name</th>\r\n                  <th className=\"p-0 m-0 px-1\">batch No.</th>\r\n                  <th className=\"p-0 m-0 px-1\">Expiry Date</th>\r\n                  <th className=\"p-0 m-0 px-1\">Avl. Stock</th>\r\n                  <th className=\"p-0 m-0 px-1\">Qty to Return</th>\r\n                  <th className=\"p-0 m-0 px-1\">Purchase Rate/Unit</th>\r\n                  <th className=\"p-0 m-0 px-1\">Purchase Rate</th>\r\n                  <th className=\"p-0 m-0 px-1\">Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {MedicineentriesArr ? (\r\n                <tbody\r\n                  style={{\r\n                    maxHeight: \"65vh\",\r\n                    minHeight: \"65vh\",\r\n                    color: \"var(--charcoal)\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {MedicineentriesArr.map((item, _key) => (\r\n                    <tr key={_key} className=\"\">\r\n                      <td>{item.Itemid}</td>\r\n                      <td>{item.Item}</td>\r\n                      <td>{item.batchno}</td>\r\n                      <td>{reversefunction(item.expirydate)}</td>\r\n                      <td>{item.currentstock}</td>\r\n                      <td\r\n                        className=\"p-0 m-0\"\r\n                        style={{ width: \"0px\", height: \"0px\" }}\r\n                      >\r\n                        <input\r\n                          className=\"border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2\"\r\n                          value={item.qtytoReturn ? item.qtytoReturn : \"\"}\r\n                          onChange={(e) => {\r\n                            e.target.value <= item.currentstock\r\n                              ? (item.qtytoReturn = e.target.value)\r\n                              : Notiflix.Notify.failure(\r\n                                \"Quantity Cannot be Greater then Current Stock Available\"\r\n                              );\r\n                            item.totalcost = CalculateCost(\r\n                              item.cost,\r\n                              item.currentstock,\r\n                              e.target.value\r\n                            );\r\n                            setMedicineentriesArr((prevState) => [\r\n                              ...prevState,\r\n                            ]);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>{item.cost}</td>\r\n                      <td>{item.totalcost}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => {\r\n                            DeleteMedicine(item.Itemid);\r\n                          }}\r\n                          className=\"btn btn-sm button-burntumber\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                <tbody\r\n                  className=\"position-relative\"\r\n                  style={{\r\n                    height: \"65vh\",\r\n                    maxHeight: \"65vh\",\r\n                    color: \"var(--charcoal)\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <td className=\"position-absolute start-0 end-0 top-0\">\r\n                      No items Added\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody\r\n                  className=\"position-relative\"\r\n                  style={{\r\n                    height: \"65vh\",\r\n                    maxHeight: \"65vh\",\r\n                    color: \"var(--charcoal)\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  <tr className=\"\">\r\n                    <td className=\"position-absolute start-0 end-0 top-0\">\r\n                      No items Added\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 position-absolute start-0 end-0 bottom-0 rounded-bottom text-center bg-pearl align-items-center border border-1 py-3\">\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row\">\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Order Total{\" \"}\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {Grand()}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <p className=\"text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3\">\r\n                  {\" \"}\r\n                  Total Items\r\n                </p>\r\n                <h4 className=\"text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3\">\r\n                  {MedicineentriesArr ? MedicineentriesArr.length : 0}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4 mx-auto align-self-center text-end\">\r\n            {load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                className=\"button button-charcoal px-5\"\r\n                onClick={confirmmessage}\r\n              >\r\n                Save Entry\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Purchasesection };\r\nexport { Purchaseordersection };\r\nexport { Purchaseentrysection };\r\nexport { POitemdetailssection };\r\nexport { PEitemdetailssection };\r\n\r\n//-------------------------------------------------------------------------Stock Info---------------------------------------------------------\r\n\r\nfunction Stocksection() {\r\n  let menu = [\"Vaccines\", \"Medicines\"];\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return (\r\n        <div className=\"\">\r\n          <Stockvaccinesection />\r\n        </div>\r\n      );\r\n    }\r\n    if (_menu === 1) {\r\n      return (\r\n        <div className=\"\">\r\n          <Stockmedicinesection />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"stocksection pt-1\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row gx-3\">\r\n            <div className=\"row m-0 p-0\">\r\n              {menu.map((e, i) => {\r\n                return (\r\n                  <div className=\"col-auto\">\r\n                    <button\r\n                      className={`btn btn-sm rounded-pill text-${i === menuindex ? \"light\" : \"dark\"\r\n                        } bg-${i === menuindex ? \"charcoal\" : \"seashell\"}`}\r\n                      onClick={(a) => setmenuindex(i)}\r\n                    >\r\n                      {e}\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid pt-3\">\r\n          <div className=\"\">{_selectedmenu(menuindex)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction Stockvaccinesection() {\r\n  const url = useContext(URL);\r\n  const Todaydate = useContext(TodayDate);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [vaccineslist, setvaccineslist] = useState([]);\r\n  const [vaccinearr, setvaccinearr] = useState([]);\r\n  const [load, setload] = useState();\r\n  const [searchname, setsearchname] = useState(\"\");\r\n  const [index, setindex] = useState();\r\n  const [detailsform, setdetailsform] = useState(\"none\");\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count_vaccines);\r\n          setpages(\r\n            Math.round(response.data.data.total_count_vaccines / 10) + 1\r\n          );\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const GetVaccines = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        axios\r\n          .get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`)\r\n          .then((response) => {\r\n            console.log(response.data.data);\r\n            setvaccineslist(response.data.data.vaccines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/stock/list?search=${searchname}&limit=10&offset=${Data.selected * 10\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            console.log(response.data.data);\r\n            setvaccineslist(response.data.data.vaccines);\r\n\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n  // const GetVaccines = async () => {\r\n  //   setload(true)\r\n  //   try {\r\n  //     axios.get(`${url}/stock/list?search=${searchname}&limit=${pagecount}&offset=0`).then((response) => {\r\n  //       console.log(response.data.data)\r\n  //       setvaccineslist(response.data.data.vaccines)\r\n\r\n  //       setload(false)\r\n  //     }).catch(function error(e) {\r\n  //       Notiflix.Notify.failure(e.message)\r\n  //       setload(false)\r\n  //     })\r\n  //   } catch (e) {\r\n  //     Notiflix.Notify.failure(e.message)\r\n  //     setload(false)\r\n  //   }\r\n\r\n  // }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const Get_Detailed_Data = async () => {\r\n    setvaccinearr([]);\r\n    for (let i = 0; i < vaccineslist.length; i++) {\r\n      let totalcurrentstockarr = [];\r\n      if (vaccineslist[i].stock_info.length == 0) {\r\n        let vaccineobj = {\r\n          id: vaccineslist[i].id,\r\n          name: vaccineslist[i].name,\r\n          manufacturer: vaccineslist[i].manufacturer,\r\n          max_stock_count: vaccineslist[i].max_stock_count,\r\n          alert_stock_count: vaccineslist[i].alert_stock_count,\r\n          min_stock_count: vaccineslist[i].min_stock_count,\r\n        };\r\n        console.log(vaccineobj);\r\n        if (vaccinearr == undefined && vaccinearr.length == 0) {\r\n          setvaccinearr(vaccineobj);\r\n        } else {\r\n          setvaccinearr((prevState) => [...prevState, vaccineobj]);\r\n        }\r\n      } else {\r\n        for (let j = 0; j < vaccineslist[i].stock_info.length; j++) {\r\n          totalcurrentstockarr.push(\r\n            vaccineslist[i].stock_info[j].current_stock\r\n          );\r\n          let ExpireDays = Get_Diff(vaccineslist[i].stock_info[j].expiry_date);\r\n          let vaccineobj = {\r\n            id: vaccineslist[i].id,\r\n            name: vaccineslist[i].name,\r\n            manufacturer: vaccineslist[i].manufacturer,\r\n            max_stock_count: vaccineslist[i].max_stock_count,\r\n            alert_stock_count: vaccineslist[i].alert_stock_count,\r\n            min_stock_count: vaccineslist[i].min_stock_count,\r\n            CGST: vaccineslist[i].stock_info[j].CGST,\r\n            CGST_rate: vaccineslist[i].stock_info[j].CGST_rate,\r\n            IGST: vaccineslist[i].stock_info[j].IGST,\r\n            IGST_rate: vaccineslist[i].stock_info[j].IGST_rate,\r\n            SGST: vaccineslist[i].stock_info[j].SGST,\r\n            SGST_rate: vaccineslist[i].stock_info[j].SGST_rate,\r\n            batch_no: vaccineslist[i].stock_info[j].batch_no,\r\n            channel: vaccineslist[i].stock_info[j].channel,\r\n            cost: vaccineslist[i].stock_info[j].cost,\r\n            current_stock: vaccineslist[i].stock_info[j].current_stock,\r\n            discount: vaccineslist[i].stock_info[j].discount,\r\n            expiry_date: vaccineslist[i].stock_info[j].expiry_date,\r\n            free_qty: vaccineslist[i].stock_info[j].free_qty,\r\n            Batch_stock_id: vaccineslist[i].stock_info[j].id,\r\n            mfd_date: vaccineslist[i].stock_info[j].mfd_date,\r\n            mrp: vaccineslist[i].stock_info[j].mrp,\r\n            purchase_entry_id: vaccineslist[i].stock_info[j].purchase_entry_id,\r\n            qty: vaccineslist[i].stock_info[j].qty,\r\n            rate: vaccineslist[i].stock_info[j].rate,\r\n            trade_discount: vaccineslist[i].stock_info[j].trade_discount,\r\n            total_amount: vaccineslist[i].stock_info[j].total_amount,\r\n            totalstock: totalcurrentstockarr,\r\n            Days_to_expire: ExpireDays,\r\n          };\r\n          if (vaccinearr == undefined && vaccinearr.length == 0) {\r\n            setvaccinearr(vaccineobj);\r\n          } else {\r\n            setvaccinearr((prevState) => [...prevState, vaccineobj]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // const Do_Pagination = (Data) => {\r\n  //   let limit = 10;\r\n  //   let arr = []\r\n  //   let previous = 0\r\n  //   let next = limit\r\n  //   if (Data == undefined || Data.selected == undefined) {\r\n  //     for (var i = 0; i < limit; i++) {\r\n  //       arr.push(vaccinearr[i]);\r\n  //     }\r\n  //   } else {\r\n  //     console.log(Data.selected)\r\n  //     Data.selected = Number(Data.selected)\r\n  //     previous = ((Data.selected + 1) * limit)\r\n  //     next = (Data.selected + 2 * limit)\r\n  //     for (var i = previous; i < next; i++) {\r\n  //       arr.push(vaccinearr[i]);\r\n  //     }\r\n  //     console.log(arr)\r\n  //   }\r\n\r\n  // }\r\n\r\n  const CalculateTStock = (totalarr) => {\r\n    if (totalarr !== undefined) {\r\n      let total = 0;\r\n      totalarr.map((item) => (total += Number(item)));\r\n      return total;\r\n    }\r\n  };\r\n\r\n  const GetStatus = (totalstockarr, alertstockcount) => {\r\n    if (totalstockarr !== undefined) {\r\n      let total = 0;\r\n      totalstockarr.map((item) => (total += Number(item)));\r\n\r\n      if (total <= alertstockcount) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == \"none\") {\r\n      setdetailsform(\"block\");\r\n    }\r\n    if (detailsform === \"block\") {\r\n      setdetailsform(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const reversefunction2 = (date) => {\r\n    if (date) {\r\n      let newdate = [];\r\n      let DATE = \"\";\r\n      date = date.split(\"-\").reverse();\r\n      newdate.push(date[1]);\r\n      newdate.push(date[0]);\r\n      newdate.push(date[2]);\r\n      DATE = newdate[0] + \"/\" + newdate[1] + \"/\" + newdate[2];\r\n      return DATE;\r\n    }\r\n  };\r\n  const Get_Diff = (expiry) => {\r\n    // let currentdate = reversefunction(Todaydate).replaceAll('-', '/')\r\n    let expirydate = reversefunction2(expiry);\r\n    var date1 = new Date();\r\n    var date2 = new Date(expirydate);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    let diffDays = Math.ceil(Number(diffTime) / (1000 * 60 * 60 * 24));\r\n    diffDays = (Number(diffDays) / 30).toFixed(1);\r\n    return diffDays;\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetPages();\r\n    GetVaccines();\r\n    Get_Detailed_Data();\r\n  }, [pagecount, searchname]);\r\n  // Do_Pagination()\r\n  useEffect(() => {\r\n    Get_Detailed_Data();\r\n  }, [vaccineslist]);\r\n  // vaccinearr.sort(function (a, b) { return a.Days_to_expire - b.Days_to_expire })\r\n  console.log(vaccinearr);\r\n  return (\r\n    <div className=\"p-0 m-0 vaccinestockinfo\">\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className=\"position-absolute searchbutton\">\r\n        <input\r\n          type=\"text\"\r\n          className=\" form-control d-inline vaccinesearch bg-pearl\"\r\n          placeholder=\"Vaccine Name\"\r\n          onChange={(e) => {\r\n            setsearchname(e.target.value);\r\n          }}\r\n        />\r\n        <button className=\"btn searchbtn p-0 m-0 bg-transparent border-0 position-absolute\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n            alt=\"displaying_image\"\r\n            className=\"img-fluid p-0 m-0\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div className=\"heading text-start text-charcoal p-lg-2 p-md-2 p-2 ms-lg-5 ms-md-3 ms-1 fw-bold\">\r\n        Vaccine Stock Info\r\n      </div>\r\n      <div className=\"scroll scroll-y\">\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr className=\"text-start\">\r\n              <th className=\"text-charcoal75 fw-bold\">No.</th>\r\n              <th className=\"text-charcoal75 fw-bold\">ID</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Vaccine Name</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Batch No.</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Expiry Date</th>\r\n              <th className=\"text-charcoal75 fw-bold\">MRP</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Cost/Unit</th>\r\n              <th className=\"text-charcoal75 fw-bold\">B.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold\">T.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">\r\n                Expired in\r\n              </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">\r\n                Stock Status\r\n              </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"></th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">more info</th>\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n            <tr className=\"p-0 m-0\">\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ) : vaccinearr == undefined || vaccinearr.length == 0 ? (\r\n            <tbody className=\"text-center\">\r\n              <tr>\r\n                <td className=\"position-absolute text-charcoal fw-bolder start-0 end-0\">\r\n                  No Vaccines Found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {/*  */}\r\n              {vaccinearr.map((data, i) => (\r\n                <tr className={`text-start align-middle`}>\r\n                  <td className=\" text-charcoal fw-bold\">{i + 1}</td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    v{data.Batch_stock_id}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {data.name && data.name !== null ? data.name : \"\"}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.batch_no}</td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {reversefunction(data.expiry_date)}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.mrp}</td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.cost}</td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {data.current_stock}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {CalculateTStock(data.totalstock)}\r\n                  </td>\r\n                  <td\r\n                    className={`text-${data.Days_to_expire <= 2 ? \"burntumber\" : \"charcoal\"\r\n                      } fw-bold text-center`}\r\n                  >\r\n                    {data.Days_to_expire} Months\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold text-center\">\r\n                    {GetStatus(data.totalstock, data.alert_stock_count) == 1 ? (\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"images/exclamation.png\"}\r\n                        style={{ width: \"1.5rem\" }}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold align-items-center text-center \">\r\n                    <div\r\n                      className=\"vr rounded-1 align-self-center\"\r\n                      style={{ padding: \"0.8px\" }}\r\n                    ></div>\r\n                  </td>\r\n                  <td\r\n                    className={` bg-${index == i ? \"lightyellow\" : \"\"\r\n                      } p-0 m-0 text-charcoal fw-bold text-center`}\r\n                  >\r\n                    <button\r\n                      className=\"btn p-0 m-0\"\r\n                      onClick={() => {\r\n                        setindex(i);\r\n                        toggle_detailsform();\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"images/info.png\"}\r\n                        style={{ width: \"1.5rem\" }}\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  {index == i ? (\r\n                    <td\r\n                      className={`stockdetailsfrom bg-white border border-1 col-lg-11 rounded-4 shadow p-0 col-md-12 col-sm-11 col-10 col-xl-6 d-${index == i ? detailsform : \"none\"\r\n                        } position-absolute start-0 end-0 top-0`}\r\n                    >\r\n                      <VaccinesectionItemDetails\r\n                        toggle_detailsform={toggle_detailsform}\r\n                        data={vaccinearr[i]}\r\n                      />\r\n                    </td>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\". . .\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GetVaccines}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Stockmedicinesection() {\r\n  const url = useContext(URL);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [medicineslist, setmedicineslist] = useState([]);\r\n  const [medicinearr, setmedicinearr] = useState([]);\r\n  const [load, setload] = useState();\r\n  const [searchname, setsearchname] = useState(\"\");\r\n  const [index, setindex] = useState();\r\n  const [detailsform, setdetailsform] = useState(\"none\");\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count_medicines);\r\n          setpages(\r\n            Math.round(response.data.data.total_count_medicines / 10) + 1\r\n          );\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const GetMedicines = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        axios\r\n          .get(`${url}/stock/list?search=${searchname}&limit=10&offset=0`)\r\n          .then((response) => {\r\n            setmedicineslist(response.data.data.medicines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        axios\r\n          .get(\r\n            `${url}/stock/list?search=${searchname}&limit=10&offset=${Data.selected * 10\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            setmedicineslist(response.data.data.medicines);\r\n            setload(false);\r\n          })\r\n          .catch(function error(e) {\r\n            Notiflix.Notify.failure(e.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n  const Get_Detailed_Data = async () => {\r\n    setmedicinearr([]);\r\n    for (let i = 0; i < medicineslist.length; i++) {\r\n      let totalcurrentstockarr = [];\r\n      if (medicineslist[i].stock_info.length == 0) {\r\n        let medicineobj = {\r\n          id: medicineslist[i].id ? medicineslist[i].id : \"\",\r\n          name: medicineslist[i].name ? medicineslist[i].name : \"\",\r\n          manufacturer: medicineslist[i].manufacturer\r\n            ? medicineslist[i].manufacturer\r\n            : \"\",\r\n          max_stock_count: medicineslist[i].max_stock_count\r\n            ? medicineslist[i].max_stock_count\r\n            : \"\",\r\n          alert_stock_count: medicineslist[i].alert_stock_count\r\n            ? medicineslist[i].alert_stock_count\r\n            : \"\",\r\n          min_stock_count: medicineslist[i].min_stock_count\r\n            ? medicineslist[i].min_stock_count\r\n            : \"\",\r\n        };\r\n        console.log(medicineobj);\r\n        if (medicinearr == undefined && medicinearr.length == 0) {\r\n          setmedicinearr(medicineobj);\r\n        } else {\r\n          setmedicinearr((prevState) => [...prevState, medicineobj]);\r\n        }\r\n      } else {\r\n        for (let j = 0; j < medicineslist[i].stock_info.length; j++) {\r\n          let ExpireDays = \"\";\r\n          if (medicineslist[i].stock_info[j].current_stock) {\r\n            totalcurrentstockarr.push(\r\n              medicineslist[i].stock_info[j].current_stock\r\n            );\r\n          } else {\r\n            totalcurrentstockarr = [];\r\n          }\r\n          ExpireDays = Get_Diff(medicineslist[i].stock_info[j].expiry_date);\r\n\r\n          let medicineobj = {\r\n            id: medicineslist[i].id ? medicineslist[i].id : \"\",\r\n            name: medicineslist[i].name ? medicineslist[i].name : \"\",\r\n            manufacturer: medicineslist[i].manufacturer\r\n              ? medicineslist[i].manufacturer\r\n              : \"\",\r\n            max_stock_count: medicineslist[i].max_stock_count\r\n              ? medicineslist[i].max_stock_count\r\n              : \"\",\r\n            alert_stock_count: medicineslist[i].alert_stock_count\r\n              ? medicineslist[i].alert_stock_count\r\n              : \"\",\r\n            min_stock_count: medicineslist[i].min_stock_count\r\n              ? medicineslist[i].min_stock_count\r\n              : \"\",\r\n            CGST: medicineslist[i].stock_info[j].CGST\r\n              ? medicineslist[i].stock_info[j].CGST\r\n              : \"\",\r\n            CGST_rate: medicineslist[i].stock_info[j].CGST_rate\r\n              ? medicineslist[i].stock_info[j].CGST_rate\r\n              : \"\",\r\n            IGST: medicineslist[i].stock_info[j].IGST\r\n              ? medicineslist[i].stock_info[j].IGST\r\n              : \"\",\r\n            IGST_rate: medicineslist[i].stock_info[j].IGST_rate\r\n              ? medicineslist[i].stock_info[j].IGST_rate\r\n              : \"\",\r\n            SGST: medicineslist[i].stock_info[j].SGST\r\n              ? medicineslist[i].stock_info[j].SGST\r\n              : \"\",\r\n            SGST_rate: medicineslist[i].stock_info[j].SGST_rate\r\n              ? medicineslist[i].stock_info[j].SGST_rate\r\n              : \"\",\r\n            batch_no: medicineslist[i].stock_info[j].batch_no\r\n              ? medicineslist[i].stock_info[j].batch_no\r\n              : \"\",\r\n            channel: medicineslist[i].stock_info[j].channel\r\n              ? medicineslist[i].stock_info[j].channel\r\n              : \"\",\r\n            cost: medicineslist[i].stock_info[j].cost\r\n              ? medicineslist[i].stock_info[j].cost\r\n              : \"\",\r\n            current_stock: medicineslist[i].stock_info[j].current_stock\r\n              ? medicineslist[i].stock_info[j].current_stock\r\n              : \"\",\r\n            discount: medicineslist[i].stock_info[j].discount\r\n              ? medicineslist[i].stock_info[j].discount\r\n              : \"\",\r\n            expiry_date: medicineslist[i].stock_info[j].expiry_date\r\n              ? medicineslist[i].stock_info[j].expiry_date\r\n              : \"\",\r\n            free_qty: medicineslist[i].stock_info[j].free_qty\r\n              ? medicineslist[i].stock_info[j].free_qty\r\n              : \"\",\r\n            Batch_stock_id: medicineslist[i].stock_info[j].id\r\n              ? medicineslist[i].stock_info[j].id\r\n              : \"\",\r\n            mfd_date: medicineslist[i].stock_info[j].mfd_date\r\n              ? medicineslist[i].stock_info[j].mfd_date\r\n              : \"\",\r\n            mrp: medicineslist[i].stock_info[j].mrp\r\n              ? medicineslist[i].stock_info[j].mrp\r\n              : \"\",\r\n            purchase_entry_id: medicineslist[i].stock_info[j].purchase_entry_id\r\n              ? medicineslist[i].stock_info[j].purchase_entry_id\r\n              : \"\",\r\n            qty: medicineslist[i].stock_info[j].qty\r\n              ? medicineslist[i].stock_info[j].qty\r\n              : \"\",\r\n            rate: medicineslist[i].stock_info[j].rate\r\n              ? medicineslist[i].stock_info[j].rate\r\n              : \"\",\r\n            trade_discount: medicineslist[i].stock_info[j].trade_discount\r\n              ? medicineslist[i].stock_info[j].trade_discount\r\n              : \"\",\r\n            total_amount: medicineslist[i].stock_info[j].total_amount\r\n              ? medicineslist[i].stock_info[j].total_amount\r\n              : \"\",\r\n            totalstock: totalcurrentstockarr ? totalcurrentstockarr : \"\",\r\n            Days_to_expire: ExpireDays ? ExpireDays : \"\",\r\n          };\r\n          console.log(medicineobj);\r\n          if (medicinearr == undefined && medicinearr.length == 0) {\r\n            setmedicinearr(medicineobj);\r\n          } else {\r\n            setmedicinearr((prevState) => [...prevState, medicineobj]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  const reversefunction2 = (date) => {\r\n    if (date) {\r\n      let newdate = [];\r\n      let DATE = \"\";\r\n      date = date.split(\"-\").reverse();\r\n      newdate.push(date[1]);\r\n      newdate.push(date[0]);\r\n      newdate.push(date[2]);\r\n      DATE = newdate[0] + \"/\" + newdate[1] + \"/\" + newdate[2];\r\n      return DATE;\r\n    }\r\n  };\r\n  const Get_Diff = (expiry) => {\r\n    // let currentdate = reversefunction(Todaydate).replaceAll('-', '/')\r\n    let expirydate = reversefunction2(expiry);\r\n    var date1 = new Date();\r\n    var date2 = new Date(expirydate);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    let diffDays = Math.ceil(Number(diffTime) / (1000 * 60 * 60 * 24));\r\n    diffDays = (Number(diffDays) / 30).toFixed(1);\r\n    return diffDays;\r\n  };\r\n  const GetStatus = (totalstockarr, alertstockcount) => {\r\n    if (totalstockarr && alertstockcount) {\r\n      let total = 0;\r\n      totalstockarr.map((item) => (total += Number(item)));\r\n\r\n      if (total <= alertstockcount) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n  const CalculateTStock = (totalarr) => {\r\n    let total = 0;\r\n    totalarr.map((item) => (total += Number(item)));\r\n    return total;\r\n  };\r\n  useEffect(() => {\r\n    GetPages();\r\n    GetMedicines();\r\n    Get_Detailed_Data();\r\n  }, [pagecount, searchname]);\r\n\r\n  useEffect(() => {\r\n    Get_Detailed_Data();\r\n  }, [medicineslist]);\r\n\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == \"none\") {\r\n      setdetailsform(\"block\");\r\n    }\r\n    if (detailsform === \"block\") {\r\n      setdetailsform(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  console.log(medicineslist, medicinearr);\r\n  return (\r\n    <div className=\"p-0 m-0 vaccinestockinfo\">\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div\r\n        className=\"position-absolute searchbutton\"\r\n        style={{ top: \"0.25rem\", right: \"1rem\" }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\" form-control d-inline vaccinesearch bg-pearl\"\r\n          placeholder=\"Medicine Name\"\r\n          onChange={(e) => {\r\n            setsearchname(e.target.value);\r\n          }}\r\n        />\r\n        <button className=\"btn searchbtn p-0 m-0 bg-transparent border-0 position-absolute\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/search.png\"}\r\n            alt=\"displaying_image\"\r\n            className=\"img-fluid p-0 m-0\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div className=\"heading text-start ms-lg-5 ms-md-3 ms-1 text-charcoal fw-bold p-2\">\r\n        Medicine Stock Info\r\n      </div>\r\n      <div\r\n        className=\"scroll scroll-y p-0 m-0\"\r\n        style={{ height: \"57vh\", minHeight: \"57vh\", maxHeight: \"57vh\" }}\r\n      >\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr>\r\n              <th className=\"text-charcoal75 fw-bold\">No.</th>\r\n              <th className=\"text-charcoal75 fw-bold\">ID</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Medicine Name</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Batch No.</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Expiry Date</th>\r\n              <th className=\"text-charcoal75 fw-bold\">MRP</th>\r\n              <th className=\"text-charcoal75 fw-bold\">Cost/Unit</th>\r\n              <th className=\"text-charcoal75 fw-bold\">B.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold\">T.Stock</th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">\r\n                Expired in\r\n              </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">\r\n                Stock Status\r\n              </th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\"></th>\r\n              <th className=\"text-charcoal75 fw-bold text-center\">more info</th>\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n            <tr className=\"p-0 m-0\">\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n              {/* <td className='placeholder-glow text-center'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td> */}\r\n              <td className=\"placeholder-glow text-center\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\">\r\n                  Loading..\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ) : medicinearr == undefined || medicinearr.length == 0 ? (\r\n            <tbody className=\"\">\r\n              <tr>\r\n                <td className=\"position-absolute text-charcoal fw-bolder start-0 end-0\">\r\n                  No Medicines Found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {medicinearr.map((data, i) => (\r\n                <tr className={`text-start align-middle`}>\r\n                  <td className=\" text-charcoal fw-bold\">{i + 1}</td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    m{data.Batch_stock_id}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {data.name && data.name !== null ? data.name : \"\"}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.batch_no}</td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {reversefunction(data.expiry_date)}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.mrp}</td>\r\n                  <td className=\" text-charcoal fw-bold\">{data.cost}</td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {data.current_stock}\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\">\r\n                    {data.totalstock ? CalculateTStock(data.totalstock) : \"\"}\r\n                  </td>\r\n                  <td\r\n                    className={`text-${data.Days_to_expire\r\n                      ? data.Days_to_expire\r\n                      : \"\" <= 2\r\n                        ? \"burntumber\"\r\n                        : \"charcoal\"\r\n                      } fw-bold text-center`}\r\n                  >\r\n                    {data.Days_to_expire ? data.Days_to_expire : \"\"} Months\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold text-center\">\r\n                    {GetStatus(data.totalstock, data.alert_stock_count) == 1 ? (\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"images/exclamation.png\"}\r\n                        style={{ width: \"1.5rem\" }}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"p-0 m-0 text-charcoal fw-bold align-items-center text-center \">\r\n                    <div\r\n                      className=\"vr rounded-1 align-self-center\"\r\n                      style={{ padding: \"0.8px\" }}\r\n                    ></div>\r\n                  </td>\r\n                  <td\r\n                    className={` bg-${index == i ? \"lightyellow\" : \"\"\r\n                      } p-0 m-0 text-charcoal fw-bold text-center`}\r\n                  >\r\n                    <button\r\n                      className=\"btn p-0 m-0\"\r\n                      onClick={() => {\r\n                        setindex(i);\r\n                        toggle_detailsform();\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + \"images/info.png\"}\r\n                        style={{ width: \"1.5rem\" }}\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  {index == i ? (\r\n                    <td\r\n                      className={`stockdetailsfrom bg-white border border-1 col-lg-11 rounded-4 shadow p-0 col-md-11 col-sm-11 col-10 col-xl-6 d-${index == i ? detailsform : \"none\"\r\n                        } position-absolute start-0 end-0 top-0`}\r\n                    >\r\n                      <MedicinesectionItemDetails\r\n                        toggle_detailsform={toggle_detailsform}\r\n                        data={medicinearr[i]}\r\n                      />\r\n                    </td>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={GetMedicines}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction VaccinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\" p-0 m-0 position-relative bg-seashell rounded-4\">\r\n      <h6 className=\"text-center text-charcoal fw-bold pt-2\">\r\n        {props.data.name}\r\n      </h6>\r\n      <hr className=\"p-0 m-0\" />\r\n      <button\r\n        className=\"btn-close position-absolute end-0 top-0 p-1 m-1\"\r\n        onClick={props.toggle_detailsform}\r\n      ></button>\r\n\r\n      <div className=\"p-0 m-0 scroll py-4\">\r\n        <table className=\"table text-center scroll\">\r\n          <thead>\r\n            <tr>\r\n              <th>Channel</th>\r\n              <th>Expiry</th>\r\n              <th>Qty</th>\r\n              <th>MRP</th>\r\n              <th>Disc%</th>\r\n              <th>Rate</th>\r\n              <th className=\"bg-seashell\">CGST</th>\r\n              <th className=\"bg-seashell\">CGST%</th>\r\n              <th className=\"bg-seashell\">SGST</th>\r\n              <th className=\"bg-seashell\">SGST%</th>\r\n              <th className=\"bg-seashell\">IGST</th>\r\n              <th className=\"bg-seashell\">IGST%</th>\r\n              <th>Cost</th>\r\n\r\n              <th>Total Amt.</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"p-0 m-0 px-1\">\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.channel == 1 ? \"Pharmacy\" : \"Clinic\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.expiry_date\r\n                  ? reversefunction(props.data.expiry_date)\r\n                  : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.qty ? props.data.qty : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.mrp ? props.data.mrp : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.discount && props.data.trade_discount\r\n                  ? Number(props.data.discount) +\r\n                  Number(props.data.trade_discount)\r\n                  : props.data.discount\r\n                    ? props.data.discount\r\n                    : props.data.trade_discount}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.rate ? props.data.rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.CGST ? props.data.CGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.CGST ? props.data.CGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.SGST ? props.data.SGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.SGST_rate ? props.data.SGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.IGST ? props.data.IGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1 bg-seashell\">\r\n                {props.data.IGST_rate ? props.data.IGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.cost ? props.data.cost : \"\"}\r\n              </td>\r\n\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.total_amount ? props.data.total_amount : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction MedicinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\");\r\n      return date;\r\n    }\r\n  };\r\n  console.log(props.data);\r\n  return (\r\n    <div className=\" p-0 m-0 position-relative bg-seashell rounded-4\">\r\n      <h6 className=\"text-center text-charcoal fw-bold pt-2\">\r\n        {props.data.name}\r\n      </h6>\r\n      <hr className=\"p-0 m-0\" />\r\n      <button\r\n        className=\"btn-close position-absolute end-0 top-0 p-1 m-1\"\r\n        onClick={props.toggle_detailsform}\r\n      ></button>\r\n      <p\r\n        className=\"bg-pearl m-0 p-0 border rounded-1 p-2 ms-3 mt-2 align-middle\"\r\n        style={{ width: \"fit-content\" }}\r\n      >\r\n        <span className=\"text-charocal fw-bold p-0 m-0\">Total</span>\r\n        <span className=\"vr mx-2\"></span>\r\n        <span className=\"text-charocal fw-bold p-0 m-0\">\r\n          {\" \"}\r\n          {props.data.total_amount ? props.data.total_amount : \"\"}\r\n        </span>\r\n      </p>\r\n      <div className=\"p-0 m-0 scroll\">\r\n        <table className=\"table text-center scroll\">\r\n          <thead>\r\n            <tr>\r\n              <th>Channel</th>\r\n              <th>Manuf.</th>\r\n              <th>Expiry</th>\r\n              <th>MRP</th>\r\n              <th>Disc%</th>\r\n              <th>Rate</th>\r\n              <th>CGST%</th>\r\n              <th>CGST</th>\r\n              <th>SGST%</th>\r\n              <th>SGST</th>\r\n              <th>IGST%</th>\r\n              <th>IGST</th>\r\n              <th>Cost</th>\r\n              <th>Qty</th>\r\n              <th>Total Amt.</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"p-0 m-0 px-1\">\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.channel == 1 ? \"Pharmacy\" : \"Clinic\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.mfd_date\r\n                  ? reversefunction(props.data.mfd_date)\r\n                  : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.expiry_date\r\n                  ? reversefunction(props.data.expiry_date)\r\n                  : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.mrp ? props.data.mrp : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.discount && props.data.trade_discount\r\n                  ? Number(props.data.discount) +\r\n                  Number(props.data.trade_discount)\r\n                  : props.data.discount\r\n                    ? props.data.discount\r\n                    : props.data.trade_discount}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.rate ? props.data.rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.CGST ? props.data.CGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.CGST ? props.data.CGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.SGST ? props.data.SGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.SGST_rate ? props.data.SGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.IGST ? props.data.IGST : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.IGST_rate ? props.data.IGST_rate : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.cost ? props.data.cost : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.qty ? props.data.qty : \"\"}\r\n              </td>\r\n              <td className=\"p-0 m-0 px-1\">\r\n                {props.data.total_amount ? props.data.total_amount : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//-------------------------------------------------------------------------Lists--------------------------------------------------------------\r\nfunction Listsection() {\r\n  const permission = useContext(Permissions);\r\n  let menu = [\r\n    {\r\n      option: \"Vaccines\",\r\n      display: permission.vaccine_view,\r\n    },\r\n    {\r\n      option: \"Medicines\",\r\n      display: permission.medicine_view,\r\n    },\r\n  ];\r\n\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return (\r\n        <div className=\"\">\r\n          <VaccineList />\r\n        </div>\r\n      );\r\n    }\r\n    if (_menu === 1) {\r\n      return (\r\n        <div className=\"\">\r\n          <MedicineList />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"fs-2\">Nothing Selected</div>;\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"stocksection pt-1\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row gx-3\">\r\n            <div className=\"row m-0 p-0\">\r\n              {menu.map((e, i) => {\r\n                return (\r\n                  <div className=\"col-auto\">\r\n                    <button\r\n                      className={`btn btn-sm rounded-pill text-${i === menuindex ? \"light\" : \"dark\"\r\n                        } bg-${i === menuindex ? \"charcoal\" : \"seashell\"}`}\r\n                      onClick={(a) => setmenuindex(i)}\r\n                    >\r\n                      {e.option}\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className=\"container-fluid mt-lg-3 mt-md-3 mt-sm-2 mt-1\">\r\n          <div className=\"\">{_selectedmenu(menuindex)}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nfunction VaccineList() { }\r\nfunction MedicineList() {\r\n  const url = useContext(URL);\r\n  const permission = useContext(Permissions);\r\n  const [pagecount, setpagecount] = useState();\r\n  const [pages, setpages] = useState();\r\n  const [medicines, setmedicines] = useState([]);\r\n  const [load, setload] = useState(false);\r\n  const [index, setindex] = useState();\r\n  const [NewMed, setNewMed] = useState(\"none\");\r\n  const [UptMed, setUptMed] = useState(\"none\");\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios\r\n        .get(`${url}/medicine/list?limit=20&offset=0`)\r\n        .then((response) => {\r\n          setpagecount(response.data.data.total_count);\r\n          setpages(Math.round(response.data.data.total_count / 20) + 1);\r\n          setload(false);\r\n        })\r\n        .catch((e) => {\r\n          Notiflix.Notify.warning(e);\r\n          setload(false);\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message);\r\n      setload(false);\r\n    }\r\n  }\r\n  const medcinelist = async (Data) => {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/medicine/list?limit=20&offset=0`)\r\n          .then((response) => {\r\n            console.log(response.data.data);\r\n            setmedicines(response.data.data.medicine);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    } else {\r\n      setload(true);\r\n      try {\r\n        await axios\r\n          .get(`${url}/medicine/list?limit=20&offset=${Data.selected * 20}`)\r\n          .then((response) => {\r\n            console.log(response.data.data);\r\n            setmedicines(response.data.data.medicine);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetPages();\r\n    medcinelist();\r\n  }, [pagecount]);\r\n  const ToggleNewMedicine = () => {\r\n    if (NewMed == \"block\") {\r\n      setNewMed(\"none\");\r\n    }\r\n    if (NewMed == \"none\") {\r\n      setNewMed(\"block\");\r\n    }\r\n  };\r\n  const ToggleUpdateMedicine = () => {\r\n    if (UptMed == \"none\") {\r\n      setUptMed(\"block\");\r\n    }\r\n    if (UptMed == \"block\") {\r\n      setUptMed(\"none\");\r\n      setindex();\r\n    }\r\n  };\r\n  const DeleteMedicine = async (medid) => {\r\n    try {\r\n      await axios\r\n        .post(`${url}/medicine/delete`, {\r\n          id: medid,\r\n        })\r\n        .then((response) => {\r\n          Notiflix.Notify.success(response.data.message);\r\n          console.log(response.data);\r\n          medcinelist();\r\n        });\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message);\r\n    }\r\n  };\r\n  const confirmmessage = (name, medid) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to delete Medicine ${name}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        DeleteMedicine(medid);\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"position-relative\">\r\n      <div className=\"heading text-start ms-lg-5 ms-md-3 ms-sm-3 ms-1 text-charcoal fw-bold p-2\"> Medicines List </div>\r\n      <div className={` p-0 m-0 align-self-center ms-1 position-absolute top-0 end-0 d-${permission.medicine_add == 1 ? \"\" : \"none\"} `} >\r\n        <button className=\"button button-charcoal m-0 p-0 py-1 px-4\" onClick={ToggleNewMedicine} >\r\n          <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} className=\"p-0 m-0\" alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />{\" \"}\r\n          Medicine\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"scroll scroll-y p-0 m-0 overflow-scroll\"\r\n        style={{ height: \"57vh\", minHeight: \"57vh\", maxHeight: \"57vh\" }}\r\n      >\r\n        <table className=\"table datatable text-start\">\r\n          <thead className=\"position-sticky top-0 bg-pearl\">\r\n            <tr>\r\n              <th rowSpan=\"2\" className={`p-0 m-0 px-1 text-charcoal75 fw-bold d-${permission.medicine_edit == 1 ? \"\" : \"none\"}`} > Update </th>\r\n              <th rowSpan=\"2\" className=\"p-0 m-0 px-1 text-charcoal75 fw-bold\"> Display Name </th>\r\n              <th rowSpan=\"2\" className=\"p-0 m-0 px-1 text-charcoal75 fw-bold\"> Name </th>\r\n              <th rowSpan=\"2\" className=\"p-0 m-0 px-1 text-charcoal75 fw-bold\"> Salt Name </th>\r\n              <th rowSpan=\"2\" className=\"p-0 m-0 px-1 text-charcoal75 fw-bold\"> HSN Code </th>\r\n              <th rowSpan=\"2\" className=\"p-0 m-0 px-1 text-charcoal75 fw-bold\"> Manufacturer </th>\r\n              <th rowSpan=\"2\" className={`p-0 m-0 px-1 text-charcoal75 fw-bold d-${permission.medicine_delete == 1 ? \"\" : \"none\"}`} > Delete </th>\r\n            </tr>\r\n          </thead>\r\n          {load ? (\r\n            <tr className=\"p-0 m-0\">\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n              <td className=\"placeholder-glow\">\r\n                <div className=\"placeholder col-12 p-0 m-0 w-100 px-1\"> Loading.. </div>\r\n              </td>\r\n            </tr>\r\n          ) : medicines == undefined || medicines.length == 0 ? (\r\n            <tbody className=\"\">\r\n              <tr>\r\n                <td className=\"position-absolute text-charcoal fw-bolder start-0 end-0\">\r\n                  No Medicines Found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody className=\"\">\r\n              {medicines.map((data, i) => (\r\n                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle text-start`} >\r\n                  <td className={`py-0 bg-${index === i ? \"lightyellow\" : \"\"} d-${permission.medicine_edit == 1 ? \"\" : \"none\"}`} >\r\n                    <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { ToggleUpdateMedicine(); setindex(i); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" style={{ width: \"1.5rem\" }} key={i} />\r\n                    </button>\r\n                  </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.display_name && data.display_name !== null ? data.display_name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.name && data.name !== null ? data.name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.salt_name && data.salt_name !== null ? data.salt_name : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.hsn_code && data.hsn_code !== null ? data.hsn_code : \"\"} </td>\r\n                  <td className=\" text-charcoal fw-bold\"> {data.manufacturer && data.manufacturer !== null ? data.manufacturer : \"\"} </td>\r\n                  <td className={`d-${permission.medicine_delete == 1 ? \"\" : \"none\"}`} >\r\n                    <button className=\"btn p-0 m-0\" onClick={() => { confirmmessage(data.name, data.id); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} style={{ width: \"1.5rem\" }} />\r\n                    </button>\r\n                  </td>\r\n                  {index == i ? (\r\n                    <td className={` text-start  d-${index == i ? UptMed : \"none\"} border position-absolute start-0 end-0 top-0 bg-seashell`} style={{ padding: 0, marginTop: \"-8.15rem\", zIndex: \"2\" }} >\r\n                      <UpdateMedicine medcinelist={medcinelist} ToggleUpdateMedicine={ToggleUpdateMedicine} data={medicines[i]} />\r\n                    </td>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <section className={`position-absolute border-1 shadow start-0 bg-seashell rounded-1 end-0 d-${NewMed}`} style={{ top: \"-8.15rem\", zIndex: \"2\" }} >\r\n        <NewMedicine ToggleNewMedicine={ToggleNewMedicine} />\r\n      </section>\r\n      <div className=\"container-fluid d-flex justify-content-center mt-2\">\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\".\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={medcinelist}\r\n          containerClassName={\r\n            \"pagination scroll align-self-center align-items-center\"\r\n          }\r\n          pageClassName={\"page-item text-charcoal\"}\r\n          pageLinkClassName={\r\n            \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n          }\r\n          previousClassName={\"btn button-charcoal-outline me-2\"}\r\n          previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n          nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n          breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n          activeClassName={\"active \"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport { Stocksection };\r\nexport { Listsection };\r\n",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Pharmacy_Dsr.jsx",["648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727"],[],"import React, { useContext, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\n\r\nconst Pharmacy_Dsr = (props) => {\r\n  const Pendingsonly = useRef()\r\n  const saleentry = useRef()\r\n  const salereturn = useRef()\r\n  const pendingsrecieved = useRef()\r\n  const url = useContext(URL)\r\n  const [pendingpaid, setpendingpaid] = useState([])\r\n  const [advancepaid, setadvancepaid] = useState([])\r\n  const [SaleEntryList, setSaleEntryList] = useState([])\r\n  const [SalePendings, setSalePendings] = useState([])\r\n  const [SaleReturnList, setSaleReturnList] = useState([])\r\n  const [PendingPaid, setPendingPaid] = useState([])\r\n  const [load, setload] = useState()\r\n  const [pd, setpd] = useState('none')\r\n  const [se, setse] = useState('block')\r\n  const [pr, setpr] = useState('block')\r\n  const [prxl, setprxl] = useState('none')\r\n  const [pageindex, setpageindex] = useState()\r\n\r\n  const PharmacyList = async () => {\r\n    setload(true)\r\n    try {\r\n      await axios.get(`${url}/DSR/pharmacy?from=${props.fromdate}&to=${props.todate}`).then((response) => {\r\n        setSaleReturnList(response.data.data.pharmacy_sale_return)\r\n        setSaleEntryList(response.data.data.pharmacy)\r\n        setPendingPaid(response.data.data.pending_paid)\r\n        console.log(response)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    PharmacyList()\r\n  }, [props.fromdate, props.todate, props.clinic])\r\n\r\n\r\n\r\n\r\n  //  useEffect((>{\r\n\r\n  //  })\r\n\r\n  function payment_method_detailsForCash() {\r\n    let casharr = []\r\n    let cash = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n\r\n      }\r\n      return cash\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForCard() {\r\n    let cardarr = []\r\n    let card = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n      return card\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForPaytm() {\r\n    let paytmarr = []\r\n    let paytm = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n      }\r\n      return paytm\r\n    }\r\n  }\r\n  function payment_method_detailsForRazorPay() {\r\n    let razorpayarr = []\r\n    let razorpay = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n      return razorpay\r\n    }\r\n\r\n  }\r\n  function payment_method_detailsForPoints() {\r\n    let pointsarr = []\r\n    let points = 0\r\n    if (pageindex == undefined || pageindex == 1) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n\r\n      }\r\n      return points\r\n    }\r\n  }\r\n  function payment_method_detailsForPhonepe() {\r\n    let phonepearr = []\r\n    let phonepe = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(PendingPaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n      return phonepe\r\n    }\r\n  }\r\n  function payment_method_detailsForWireTransfer() {\r\n    let wiretransferarr = []\r\n    let wiretransfer = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n        if (JSON.parse(SaleEntryList[i].payment_method_details) != null && JSON.parse(SaleEntryList[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(SaleEntryList[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n        if (JSON.parse(SaleReturnList[i].sale_entry.payment_method_details) != null && JSON.parse(SaleReturnList[i].sale_entry.payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(SaleReturnList[i].sale_entry.payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n        if (JSON.parse(PendingPaid[i].payment_method_details) != null && JSON.parse(PendingPaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(PendingPaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n      return wiretransfer\r\n    }\r\n  }\r\n  function TotalPendingPayment() {\r\n    let totalpendingarr = []\r\n    let totalpending = 0;\r\n    for (let i = 0; i < SaleEntryList.length; i++) {\r\n      for (let j = 0; j < SaleEntryList[i].pending_payments.length; j++) {\r\n        if (SaleEntryList[i].pending_payments[j].is_paid == 0) {\r\n          totalpendingarr.push(JSON.parse(SaleEntryList[i].pending_payments[j].pending_amount))\r\n        }\r\n      }\r\n    }\r\n    if (totalpendingarr.length != 0) {\r\n      totalpendingarr.forEach(item => {\r\n        totalpending += item\r\n      })\r\n      return totalpending\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function GrandTotal() {\r\n    let grandtotalarr = []\r\n    let grandtotal = 0;\r\n    if (pageindex == 0 || pageindex == undefined) {\r\n      for (let i = 0; i < SaleEntryList.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(SaleEntryList[i].grand_total))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < SaleReturnList.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(SaleReturnList[i].grand_total))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < PendingPaid.length; i++) {\r\n\r\n        grandtotalarr.push(JSON.parse(PendingPaid[i].paid_amount))\r\n\r\n      }\r\n      if (grandtotalarr.length != 0) {\r\n        grandtotalarr.forEach(item => {\r\n          grandtotal += item\r\n        })\r\n      }\r\n      return grandtotal\r\n    }\r\n\r\n\r\n  }\r\n  function SumExtraCharges(i) {\r\n    let ExtraChargeSumarr = []\r\n    let sum = 0\r\n    SaleEntryList[i].other_charges.map((data) => (\r\n      ExtraChargeSumarr.push(data.amount)\r\n    ))\r\n\r\n    ExtraChargeSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  function SumPendingpayments(i) {\r\n    let PendingPaymentsSumarr = []\r\n    let sum = 0\r\n\r\n    SaleEntryList[i].pending_payments.map((data) => {\r\n      if (data.is_paid == 0) {\r\n        PendingPaymentsSumarr.push(data.pending_amount)\r\n      }\r\n    })\r\n    PendingPaymentsSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date && date != null) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  function Conditionaldisplay(i) {\r\n    if (se == 'block') {\r\n      setse('none')\r\n      setpd('block')\r\n    }\r\n    if (pd == 'block') {\r\n      setse('block')\r\n      setpd('none')\r\n    }\r\n  }\r\n  // d-${Pendingsonly.current.checked = true ? Conditionaldisplay(i) : ''}\r\n  return (\r\n    <div className='Pharmacy_Dsrsection p-0 m-0'>\r\n      <div className='position-relative'>\r\n        <div className=\"col export_dropdown position-absolute top-0 \">\r\n          <div className=\"dropdown\">\r\n            <button className=\"button button p-0 m-0 px-1 py-1 button-pearl text-burntumber  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> Exports </button>\r\n            <ul className=\"dropdown-menu\" >\r\n              <li className=\"text-justify border-bottom\">\r\n                <span className={`d-${se}`}>\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Entries`}\r\n                    sheet=\"Sale Entries\"\r\n                    currentTableRef={saleentry.current}\r\n                  >\r\n                    <button className='btn p-0 m-0 bg-pearl px-2'>All Export</button>\r\n\r\n                  </DownloadTableExcel>\r\n                </span>\r\n                <span className={`d-${pd}`}>\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pending Sale Entries`}\r\n                    sheet=\"Pendings\"\r\n                    currentTableRef={Pendingsonly.current}\r\n                  >\r\n                    <button className='btn p-0 m-0 bg-pearl px-2  '>Pending Export</button>\r\n\r\n                  </DownloadTableExcel>\r\n                </span></li>\r\n              <li className=\"text-justify  border-bottom\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Returns`}\r\n                  sheet=\"Sale Returns\"\r\n                  currentTableRef={salereturn.current}\r\n                >\r\n                  <button className='btn p-0 m-0 bg-pearl p-2'>Sale Returns Export</button>\r\n                </DownloadTableExcel></li>\r\n              <li className=\"text-justify\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pendings Recieved`}\r\n                  sheet=\"Pendings Recieved\"\r\n                  currentTableRef={pendingsrecieved.current}\r\n                >\r\n                  <button className='btn p-0 m-0 bg-pearl px-2 text-start ' onClick={() => { prxl('block') }} >Pendings Recieved Export</button>\r\n                </DownloadTableExcel>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=''>\r\n        <ul className=\"nav nav-pills mb-3 ms-2 ms-lg-3 ms-md-1 ms-sm-1\" id=\"pills-tab\" role=\"tablist\">\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button className=\"nav-link active p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\" onClick={() => { setpageindex(0) }}>Sale Entries<span class=\" p-0 m-0 ms-2 badge text-lightyellow  fw-normal\">{SaleEntryList.length}</span></button>\r\n          </li>\r\n          <li className=\"nav-item ms-lg-3 ms-md-2 ms-sm-1 ms-1\" role=\"presentation\">\r\n            <button className=\"nav-link p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\" onClick={() => { setpageindex(1) }}>Sale Returns<span class=\" p-0 m-0 ms-2 badge text-lightyellow  fw-normal\">{SaleReturnList.length}</span></button>\r\n          </li>\r\n          <li className=\"nav-item ms-lg-3 ms-md-2 ms-sm-1 ms-1\" role=\"presentation\">\r\n            <button className=\"nav-link p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-contact-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-contact\" type=\"button\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\" onClick={() => { setpageindex(2) }}>Pendings Recieved<span class=\" p-0 m-0 ms-2 badge text-lightyellow  fw-normal\">{PendingPaid.length}</span></button>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className=\"tab-content\" id=\"pills-tabContent\">\r\n\r\n          <div className=\"tab-pane fade show active text-start\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">\r\n            <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n            <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n\r\n            {/* onClick={()=>{setse('block')}} */}\r\n            <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 text-end'>\r\n              {/* <span className={`d-${se}`}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Entries`}\r\n                  sheet=\"Sale Entries\"\r\n                  currentTableRef={saleentry.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-lg-5 ms-md-5 ms-sm-3 ms-1 bg-pearl border-charcoal px-2 py-1 fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} />All Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </span>\r\n              <span className={`d-${pd}`}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pending Sale Entries`}\r\n                  sheet=\"Pendings\"\r\n                  currentTableRef={Pendingsonly.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 fw-bold bg-pearl border-charcoal px-2 py-1 '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} />Pending Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </span> */}\r\n              <div className='selector '>\r\n                <input ref={Pendingsonly} type=\"checkbox\" className='form-check-input ms-2 me-1' onChange={() => { Conditionaldisplay() }} /><label className='text-burntumber fw-bold'>Show Pendings Only</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y mt-2 saleentries d-${se}`} ref={saleentry} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill no.</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Date</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Name</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Doctor</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Total</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Pending</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Payment Mode</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold text-center'>Payment Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5 '>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center align-middle'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start' style={{ paddingBottom: '30px' }}>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n                            <tr className={`align-middle`}>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{SumPendingpayments(i)}</td>\r\n                              <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td className='fw-bold text-charcoal text-center'>{SumPendingpayments(i) !== 0 ?\r\n                                <button className='button p-0 m-0 px-4 fw-bold text-charcoal rounded-pill button-lightred'>Pending</button>\r\n                                :\r\n                                <button className='button p-0 m-0 px-3 fw-bold rounded-pill text-cahrcoal button-lightgreen'>Completed</button>}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y mt-2 saleentries d-${pd}`} ref={Pendingsonly} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill no.</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Date</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Name</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Doctor</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Bill Total</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Amt. Pending</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold'>Payment Mode</th>\r\n                    <th className='py-0 text-charcoal75 fw-bold text-center'>Payment Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      // d-${SumPendingpayments(i) > 0 ? '':'none'}\r\n                      <tbody className='text-start align-middle'>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n\r\n                            SumPendingpayments(i) > 0 ? (\r\n\r\n                              <tr className={``}>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>₹{SumPendingpayments(i)}</td>\r\n                                <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                                <td className='fw-bold text-charcoal text-center'><button className='button p-0 m-0 px-4 fw-bold text-charcoal rounded-pill button-lightred'>Pending</button></td>\r\n                              </tr>\r\n                            ) : (<></>)\r\n\r\n\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll d-none scroll-y mt-2 saleentries d-${se}`} ref={saleentry} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    {/* <th rowspan='2' className='py-0' >Mobile</th> */}\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0 p-0 m-0'>Payment Method</th>\r\n                    <th rowspan='2' className='py-0' >Pending Amt.</th>\r\n                    <th rowspan='2' className='py-0' > Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start' style={{ paddingBottom: '30px' }}>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n                            <tr className={``}>\r\n                              <td key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                              <td>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                              {/* <td>{data && data.patient && data.patient.phone_number !== null ? data.patient.phone_number : ''}</td> */}\r\n                              <td>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                              <td>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                              <td>{SumPendingpayments(i)}</td>\r\n                              <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y d-none saleentries d-${pd}`} ref={Pendingsonly} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl'>\r\n                  <tr>\r\n                    <th rowspan='2' >Bill no.</th>\r\n                    <th rowspan='2' >Name</th>\r\n                    {/* <th rowspan='2' >Mobile</th> */}\r\n                    <th rowspan='2' >Doctor Name</th>\r\n                    <th rowspan='2' >Bill Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0'>Payment Method</th>\r\n                    <th rowspan='2' >Pending Amt.</th>\r\n                    <th rowspan='2' > Grand Total</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white' scope='col'>Cash</th>\r\n                    <th className='bg-white' scope='col'>Card</th>\r\n                    <th className='bg-white' scope='col'>Paytm</th>\r\n                    <th className='bg-white' scope='col'>Phonepe</th>\r\n                    <th className='bg-white' scope='col'>Razorpay</th>\r\n                    <th className='bg-white' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleEntryList && SaleEntryList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Sale Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      // d-${SumPendingpayments(i) > 0 ? '':'none'}\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleEntryList.map((data, i) => (\r\n\r\n                            SumPendingpayments(i) > 0 ? (\r\n                              <tr className={` bg-lightred50`}>\r\n                                <td key={i}>{data && data.bill_id !== null ? \"P-\" + data.bill_id : ''}</td>\r\n                                <td>{data && data.patient && data.patient.full_name !== null ? data.patient.full_name : ''}</td>\r\n                                {/* <td>{data && data.patient && data.patient.phone_number !== null ? data.patient.phone_number : ''}</td> */}\r\n                                <td>{data && data.doctor_name !== null ? 'Dr. ' + data.doctor_name : ''}</td>\r\n                                <td>{data && data.bill_date !== null ? reversefunction(data.bill_date) : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                                <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                                <td>{SumPendingpayments(i)}</td>\r\n                                <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                              </tr>\r\n                            ) : (<></>)\r\n\r\n\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Total Pending Payments</h6>\r\n                  <h5 className='fw-bold'>₹ {TotalPendingPayment()}</h5>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                  <h5 className='fw-bold'>₹ {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\" tabindex=\"0\">\r\n            <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n            <div className=\"row m-0 g-2 p-0 text-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n            <div className=' saleoptions mt-lg-2 mt-md-2 position-absolute end-0 me-md-2 me-lg-5 me-1 text-end'>\r\n              <span>\r\n                {/* <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Sale Returns`}\r\n                  sheet=\"Sale Returns\"\r\n                  currentTableRef={salereturn.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-lg-5 ms-md-5 ms-sm-3 ms-1 bg-pearl border-charcoal fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} /> Export</button>\r\n                </DownloadTableExcel> */}\r\n              </span>\r\n            </div>\r\n            <div className='container-fluid p-0 m-0 scroll scroll-y salereturns mt-2' ref={salereturn} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n\r\n              <table className='table fw-bold'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr className='text-charcoal75'>\r\n                    {/* <th rowspan='2' className='py-0' >SE ID</th> */}\r\n                    <th rowspan='2' className='py-0' >SR ID</th>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    {/* <th rowspan='2' className='py-0' >Mobile</th> */}\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    {/* <th colspan='7' scope='colgroup' className='border-0 py-0'>Payment Method</th> */}\r\n                    {/* <th rowspan='2' className='py-0' >Amount</th> */}\r\n                    <th rowspan='2' className='py-0' >Return Date</th>\r\n                    <th rowspan='2' className='py-0' >Returned Amount</th>\r\n                  </tr>\r\n                  {/* <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr> */}\r\n                </thead>\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n                  ) : (\r\n                    SaleReturnList && SaleReturnList.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute   text-charcoal fw-bold start-0 end-0' >No Sale Returns</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          SaleReturnList.map((data, i) => (\r\n                            <tr>\r\n                              {/* <td key={i}>{data.sale_entry_id && data.sale_entry_id !== null ? \"SE-\" + data.sale_entry_id : ''}</td> */}\r\n                              <td key={i}>{data.return_no && data.return_no !== null ? \"SR-\" + data.return_no : ''}</td>\r\n                              <td key={i}>{data.sale_entry && data.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              {/* <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.phone_number !== null ? data.sale_entry.patient.phone_number : ''}</td> */}\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              {/* <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Cash : data.sale_entry.pending_payments[0].payment_method_details && data.sale_entry.pending_payments[0].payment_method_details != null ? JSON.parse(data.sale_entry.pending_payments[0].payment_method_details).Cash:''}</td>\r\n                              <td>{data.sale_entry.pending_payments[0] !==undefined && data.sale_entry.pending_payments[0].payment_method_details !==undefined && data.sale_entry.pending_payments[0].payment_method_details != null ? JSON.parse(data.sale_entry.pending_payments[0].payment_method_details).Card :''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Points : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.grand_total !== null ? data.sale_entry.grand_total : ''}</td> */}\r\n                              <td>{data.return_date && data.return_date !== null ? reversefunction(data.return_date) : ''}</td>\r\n                              <td>₹{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n                              {/* : data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Card */}\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                        <tr className='bg-pearl text-light'>__</tr>\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                  <h5 className='fw-bold'>₹ {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\" tabindex=\"0\">\r\n            <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n            <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n              </div>\r\n              <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 px-md-3 px-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n                <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n                <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n              </div>\r\n            </div>\r\n            {/* <div className=' saleoptions mt-2 position-absolute end-0 me-md-2 me-5 text-end'>\r\n              <span>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pendings Recieved`}\r\n                  sheet=\"Pendings Recieved\"\r\n                  currentTableRef={pendingsrecieved.current}\r\n                >\r\n                  <button className='btn p-0 m-0 ms-5 bg-pearl border-charcoal px-2 py-1 fw-bold '> <img src={process.env.PUBLIC_URL + '/images/download.png'} style={{ 'width': '1.5rem' }} onClick={() => { prxl('block') }} /> Export</button>\r\n                </DownloadTableExcel>\r\n              </span>\r\n            </div> */}\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y pendingpayrecieve mt-2`} ref={pendingsrecieved} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr className='text-charcoal75 fw-bold'>\r\n                    <th className='py-0' >Bill no.</th>\r\n                    <th className='py-0' >Name</th>\r\n                    <th className='py-0' >Doctor Name</th>\r\n                    <th className='py-0' >Bill Date</th>\r\n                    <th className='py-0' >Pending Date</th>\r\n                    <th className='py-0' >Paid Date</th>\r\n                    <th className='py-0'>payment Mode</th>\r\n                    <th className='py-0'>Amt Recieved</th>\r\n                    <th className='py-0' >Total Received</th>\r\n                  </tr>\r\n\r\n                </thead>\r\n\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n\r\n                  ) : (\r\n                    PendingPaid && PendingPaid.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Pending Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          PendingPaid.map((data, i) => (\r\n                            <tr className='text-charcoal fw-bold'>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              <td>{data.pending_date && data.pending_date !== null ? reversefunction(data.pending_date) : ''}</td>\r\n                              <td>{data.paid_date && data.paid_date !== null ? reversefunction(data.paid_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td>₹{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                              <td>₹{data.paid_amount && data.paid_amount !== null ? data.paid_amount : ''}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n\r\n\r\n              </table>\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 scroll scroll-y d-none pendingpayrecieve d-${prxl}`} ref={pendingsrecieved} style={{ minHeight: '60vh', maxHeight: '60vh' }}>\r\n              <table className='table'>\r\n                <thead className='text-start position-sticky top-0 bg-pearl '>\r\n                  <tr>\r\n                    <th rowspan='2' className='py-0' >Bill no.</th>\r\n                    <th rowspan='2' className='py-0' >Name</th>\r\n                    <th rowspan='2' className='py-0' >Doctor Name</th>\r\n                    <th rowspan='2' className='py-0' >Bill Date</th>\r\n                    <th rowspan='2' className='py-0' >Pending Date</th>\r\n                    <th rowspan='2' className='py-0' >Paid Date</th>\r\n                    <th colspan='7' scope='colgroup' className='border-0 py-0'>Payment Method</th>\r\n                    <th rowspan='2' className='py-0' >Amount Received</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className='bg-white py-0' scope='col'>Cash</th>\r\n                    <th className='bg-white py-0' scope='col'>Card</th>\r\n                    <th className='bg-white py-0' scope='col'>Paytm</th>\r\n                    <th className='bg-white py-0' scope='col'>Phonepe</th>\r\n                    <th className='bg-white py-0' scope='col'>Razorpay</th>\r\n                    <th className='bg-white py-0' scope='col'>Wire-Transfer</th>\r\n                    <th className='bg-white py-0' scope='col'>Points</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {\r\n                  load ? (\r\n                    <body className=' text-start' style={{ minHeight: '55vh' }}>\r\n                      <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <strong className=''>Getting Details please be Patient ...</strong>\r\n                          <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                      </tr>\r\n\r\n                    </body>\r\n\r\n                  ) : (\r\n                    PendingPaid && PendingPaid.length == 0 ? (\r\n                      <tbody>\r\n                        <tr className='position-relative text-center  m-auto'  >\r\n                          <td className='position-absolute  text-charcoal fw-bold start-0 end-0' >No Pending Entries</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className='text-start'>\r\n                        {\r\n                          PendingPaid.map((data, i) => (\r\n                            <tr>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? 'Dr. ' + data.sale_entry.doctor_name : ''}</td>\r\n                              <td>{data.sale_entry && data.sale_entry.bill_date !== null ? reversefunction(data.sale_entry.bill_date) : ''}</td>\r\n                              <td>{data.pending_date && data.pending_date !== null ? reversefunction(data.pending_date) : ''}</td>\r\n                              <td>{data.paid_date && data.paid_date !== null ? reversefunction(data.paid_date) : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                              <td>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : ''}</td>\r\n                              <td>{data.paid_amount && data.paid_amount !== null ? data.paid_amount : ''}</td>\r\n                            </tr>\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n\r\n                    )\r\n                  )\r\n                }\r\n\r\n\r\n              </table>\r\n            </div>\r\n            <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0'>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-auto\">\r\n                  <h6 className='fw-bold text-charcoal75 '>Total Amount Recieved</h6>\r\n                  <h5 className='fw-bold'>₹ {GrandTotal()}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport { Pharmacy_Dsr }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Appointments_Dsr.jsx",["728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext, useRef } from 'react'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport axios from \"axios\"\r\nimport { TodayDate, URL } from '../../index'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst Appointments_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const Appointmentref = useRef()\r\n  const Pendingref = useRef()\r\n  const Advancedref = useRef()\r\n\r\n  //Use States\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [pendingpaid, setpendingpaid] = useState([])\r\n\r\n  const [advancepaid, setadvancepaid] = useState([])\r\n  const [visibles, setvisibles] = useState([])\r\n  const [pageindex, setpageindex] = useState()\r\n  const [loading, setloading] = useState()\r\n  const [appxl, setappxl] = useState('none')\r\n  const [pprxl, setpprxl] = useState('none')\r\n  const [advxl, setadvxl] = useState('none')\r\n  // props.doctorid, props.fromdate, props.todate\r\n  let listdata = []\r\n  async function DSR_All_Appointments() {\r\n    setloading(true)\r\n    if (props.doctorid || props.fromdate || props.todate) {\r\n      try {\r\n        await axios.get(`${url}/DSR/appointments?from_date=${props.fromdate}&to_date=${props.todate}&admin_id=${adminid}&clinic_id=${props.clinic}&doctor_id=${props.doctorid ? props.doctorid : ''}`).then((response) => {\r\n          response.data.data.appointments.map((data) => {\r\n            listdata.push(data.doctor.id)\r\n          })\r\n          setvisibles(listdata, [])\r\n          setAppointments(response.data.data.appointments)\r\n          setpendingpaid(response.data.data.pending_paid)\r\n          setadvancepaid(response.data.data.advance_payments)\r\n          setloading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        setloading(false)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please select any one field to search\")\r\n      setloading(false)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    DSR_All_Appointments()\r\n  }, [])\r\n  useEffect(() => {\r\n    DSR_All_Appointments()\r\n  }, [props.doctorid, props.fromdate, props.todate, props.clinic])\r\n  // console.log(visibles)\r\n  // console.log(Appointments,props.clinic)\r\n\r\n  const reversefunction = (date) => {\r\n    if (date !== undefined) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n    }\r\n    return date\r\n  }\r\n  function tConvert(time) {\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function payment_method_detailsForCash() {\r\n    let casharr = []\r\n    let cash = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(Appointments[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Cash != null) {\r\n          casharr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Cash))\r\n        }\r\n      }\r\n      if (casharr.length != 0) {\r\n        casharr.forEach(item => {\r\n          cash += item\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    return cash\r\n  }\r\n  function payment_method_detailsForCard() {\r\n    let cardarr = []\r\n    let card = 0\r\n\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Card != null) {\r\n          cardarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Card))\r\n        }\r\n      }\r\n      if (cardarr.length != 0) {\r\n        cardarr.forEach(item => {\r\n          card += item\r\n        })\r\n\r\n      }\r\n    }\r\n    return card\r\n  }\r\n  function payment_method_detailsForPaytm() {\r\n    let paytmarr = []\r\n    let paytm = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Paytm != null) {\r\n          paytmarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Paytm))\r\n        }\r\n      }\r\n      if (paytmarr.length != 0) {\r\n        paytmarr.forEach(item => {\r\n          paytm += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n\r\n    return paytm\r\n  }\r\n  function payment_method_detailsForRazorPay() {\r\n    let razorpayarr = []\r\n    let razorpay = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Razorpay != null) {\r\n          razorpayarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Razorpay))\r\n        }\r\n      }\r\n      if (razorpayarr.length != 0) {\r\n        razorpayarr.forEach(item => {\r\n          razorpay += item\r\n        })\r\n      }\r\n    }\r\n    return razorpay\r\n  }\r\n  function payment_method_detailsForPoints() {\r\n    let pointsarr = []\r\n    let points = 0\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(Appointments[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n      }\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Points != null) {\r\n          pointsarr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Points))\r\n        }\r\n      }\r\n      if (pointsarr.length != 0) {\r\n        pointsarr.forEach(item => {\r\n          points += item\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    return points\r\n  }\r\n  function payment_method_detailsForPhonepe() {\r\n    let phonepearr = []\r\n    let phonepe = 0\r\n\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(Appointments[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(pendingpaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details).Phonepe != null) {\r\n          phonepearr.push(Number(JSON.parse(advancepaid[i].payment_method_details).Phonepe))\r\n        }\r\n      }\r\n      if (phonepearr.length != 0) {\r\n        phonepearr.forEach(item => {\r\n          phonepe += item\r\n        })\r\n\r\n      }\r\n    }\r\n    return phonepe\r\n  }\r\n  function payment_method_detailsForWireTransfer() {\r\n    let wiretransferarr = []\r\n    let wiretransfer = 0\r\n\r\n    if (pageindex == undefined || pageindex == 0) {\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (JSON.parse(Appointments[i].payment_method_details) != null && JSON.parse(Appointments[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(Appointments[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == 1) {\r\n      for (let i = 0; i < pendingpaid.length; i++) {\r\n        if (JSON.parse(pendingpaid[i].payment_method_details) != null && JSON.parse(pendingpaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(pendingpaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n    }\r\n    if (pageindex == 2) {\r\n      for (let i = 0; i < advancepaid.length; i++) {\r\n        if (JSON.parse(advancepaid[i].payment_method_details) != null && JSON.parse(advancepaid[i].payment_method_details)['Wire-Transfer'] != null) {\r\n          wiretransferarr.push(Number(JSON.parse(advancepaid[i].payment_method_details)['Wire-Transfer']))\r\n        }\r\n      }\r\n      if (wiretransferarr.length != 0) {\r\n        wiretransferarr.forEach(item => {\r\n          wiretransfer += item\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n\r\n    return wiretransfer\r\n  }\r\n  function AdvancedAmountRecieved() {\r\n    let advancepayarr = []\r\n    let advancepay = 0\r\n    for (let i = 0; i < advancepaid.length; i++) {\r\n      advancepayarr.push(Number(advancepaid[i].credit_amount))\r\n    }\r\n    if (advancepayarr.length != 0) {\r\n      advancepayarr.forEach(item => {\r\n        advancepay += item\r\n      })\r\n      return advancepay\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function PendingAmountRecieved() {\r\n    let pendingpayarr = []\r\n    let pendingpay = 0\r\n    for (let i = 0; i < pendingpaid.length; i++) {\r\n      pendingpayarr.push(Number(pendingpaid[i].paid_amount))\r\n    }\r\n    if (pendingpayarr.length != 0) {\r\n      pendingpayarr.forEach(item => {\r\n        pendingpay += Number(item)\r\n      })\r\n      return pendingpay\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function TotalPendingPayment() {\r\n    let totalpendingarr = []\r\n    let totalpending = 0;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      for (let j = 0; j < Appointments[i].pending_payments.length; j++) {\r\n        if (Appointments[i].pending_payments[j].is_paid == 0) {\r\n          totalpendingarr.push(JSON.parse(Appointments[i].pending_payments[j].pending_amount))\r\n        }\r\n      }\r\n    }\r\n    if (totalpendingarr.length != 0) {\r\n      totalpendingarr.forEach(item => {\r\n        totalpending += item\r\n      })\r\n      return totalpending\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n  function GrandTotal() {\r\n    let grandtotalarr = []\r\n    let grandtotal = 0;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n\r\n      grandtotalarr.push(JSON.parse(Appointments[i].total_amount))\r\n\r\n    }\r\n    if (grandtotalarr.length != 0) {\r\n      grandtotalarr.forEach(item => {\r\n        grandtotal += item\r\n      })\r\n    }\r\n    return grandtotal\r\n  }\r\n  function SumExtraCharges(i) {\r\n    let ExtraChargeSumarr = []\r\n    let sum = 0\r\n    Appointments[i].other_charges.map((data) => (\r\n      ExtraChargeSumarr.push(data.amount)\r\n    ))\r\n\r\n    ExtraChargeSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  function SumPendingpayments(i) {\r\n    let PendingPaymentsSumarr = []\r\n    let sum = 0\r\n\r\n    Appointments[i].pending_payments.map((data) => {\r\n      if (data.is_paid == 0) {\r\n        PendingPaymentsSumarr.push(data.pending_amount)\r\n      }\r\n    })\r\n    PendingPaymentsSumarr.forEach(item => {\r\n      sum += Number(item)\r\n    })\r\n    return sum\r\n  }\r\n  console.log(Appointments)\r\n  return (\r\n    <div className='Appointments_Dsrsection'>\r\n      <div className='position-relative'>\r\n\r\n        <div className=\"col export_dropdown position-absolute top-0\">\r\n          <div className=\"dropdown\">\r\n            <button className=\" button p-0 m-0 px-1 py-1 button-pearl text-burntumber  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Exports\r\n            </button>\r\n            <ul className=\"dropdown-menu p-2\" >\r\n              <li className=\"text-start fw-bold border-bottom py-2\" onClick={() => { setappxl('block') }}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Appointments`}\r\n                  sheet=\"Appointments\"\r\n                  currentTableRef={Appointmentref.current}\r\n                >\r\n                  <button className='btn text-start p-0 m-0 py-2'>Appointments Export</button>\r\n\r\n                </DownloadTableExcel></li>\r\n              <li className=\"text-start fw-bold  border-bottom\" onClick={() => { setpprxl('block') }}><DownloadTableExcel\r\n                filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Pending Payments Reciecved`}\r\n                sheet=\" Pending Payments Reciecved\"\r\n                currentTableRef={Pendingref.current}\r\n              >\r\n                <button className='btn p-0 m-0 text-start py-2'>Pending Payments Reciecved Export</button>\r\n\r\n              </DownloadTableExcel></li>\r\n              <li className=\"text-start fw-bold\" onClick={() => { setadvxl('block') }}>\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Advance payment Recieved`}\r\n                  sheet=\" Advance payment Recieved\"\r\n                  currentTableRef={Advancedref.current}\r\n                >\r\n                  <button className=' btn p-0 m-0 text-start py-2'>Advance payment Recieved Export</button>\r\n\r\n                </DownloadTableExcel>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <ul className=\"nav nav-pills mb-3 ms-2 ms-lg-2 ms-md-2 ms-sm-2\" id=\"pills-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button onClick={() => { setpageindex(0) }} className=\"nav-link active p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\" >Appointments<span class=\" p-0 m-0 ms-2 badge text-lightyellow fw-normal\">{Appointments.length}</span></button>\r\n        </li>\r\n        <li className=\"nav-item ms-lg-3 ms-md-2 ms-sm-1 ms-1\" role=\"presentation\">\r\n          <button onClick={() => { setpageindex(1) }} className=\"nav-link p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Pendings Paid<span class=\" p-0 m-0 ms-2 badge text-lightyellow fw-normal\">{pendingpaid.length}</span></button>\r\n        </li>\r\n        <li className=\"nav-item ms-lg-3 ms-md-2 ms-sm-1 ms-1\" role=\"presentation\">\r\n          <button onClick={() => { setpageindex(2) }} className=\"nav-link p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-contact-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-contact\" type=\"button\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\">Advance Payments<span class=\" p-0 m-0 ms-2 badge text-lightyellow fw-normal\">{advancepaid.length}</span></button>\r\n        </li>\r\n      </ul>\r\n\r\n\r\n      <div className=\"tab-content\" id=\"pills-tabContent \">\r\n        <div className=\"tab-pane fade show active text-start\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">\r\n          {/* <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-3 ms-sm-1\">Payments</h6> */}\r\n          <div className=\"row m-0 g-2 mt-md-2 p-0 ms-md-1 text-start justify-content-start\">\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=' scroll scroll-y pb-5 mt-2' style={{ maxHeight: '58vh' }}>\r\n            <table className='table text-start bg-pearl '>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr className='bg-pearl'>\r\n                  <th className=' text-charcoal75 fw-bold'>Appoint. Id</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Bill no.</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Name</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Mobile</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Doctor</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Date</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Time</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Payment Mode</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Amt. Recieved</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Consult Amt.</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Procedure Amt.</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Extra Charges</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Disc.</th>\r\n                  <th className=' text-charcoal75 fw-bold'>CGST</th>\r\n                  <th className=' text-charcoal75 fw-bold'>SGST</th>\r\n                  <th className=' text-charcoal75 fw-bold'>Pending Amt.</th>\r\n                  <th className=' text-charcoal75 fw-bold'> Grand Total</th>\r\n                </tr>\r\n              </thead>\r\n\r\n\r\n              {\r\n                loading ? (\r\n                  <tbody className='text-start' style={{ minHeight: '55vh' }}>\r\n                    <tr className='position-absolute border-0 start-0 end-0 px-5 '>\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <strong className=''>Getting Details please be Patient ...</strong>\r\n                        <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                      </div>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  Appointments.length == 0 ? (\r\n                    <tbody className='position-relative text-burntumber mt-1 text-center ' >\r\n                      <tr >\r\n                        <td className=' position-absolute start-0 end-0 text-charcoal fw-bold mt-1'>No Appointments</td></tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className='align-items-center Appointment '>\r\n                      {\r\n                        Appointments.map((data, i) => (\r\n                          <tr className={`align-middle bg-${SumPendingpayments(i) > 0 ? 'lightred50' : ''}`}>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.id ? data.id : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2' key={i}>{data.bill_id && data.bill_id != null ? data.bill_id : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.full_name != null ? data.patient.full_name : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.phone_number != null ? data.patient.phone_number : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.doctor && data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.timeslot && data.timeslot.date && data.timeslot.date != null ? reversefunction(data.timeslot.date) : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.timeslot && data.timeslot.time_from && data.timeslot.time_from != null ? tConvert(data.timeslot.time_from) : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.doctor && data.doctor.consulationFee !== null ? data.doctor.consulationFee : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.procedure_cost && data.procedure_cost != null ? data.procedure_cost : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{SumExtraCharges(i)}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>{data.discount && data.discount != null ? data.discount : ''}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.CGST}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.SGST}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{SumPendingpayments(i)}</td>\r\n                            <td className='fw-bold text-charcoal px-0 px-2'>₹{data.total_amount}</td>\r\n                          </tr>\r\n\r\n                        ))\r\n                      }\r\n                      {/* <tr>--</tr>\r\n                     <tr>--</tr>\r\n                     <tr>--</tr>\r\n                     <tr>--</tr>\r\n                     <tr>--</tr> */}\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n\r\n            </table>\r\n            <table className={`table text-center bg-pearl d-none d-${appxl} `} ref={Appointmentref}>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr className='bg-pearl'>\r\n                  <th className='py-0' rowspan='2'>Appointment Id</th>\r\n                  <th className='py-0' rowspan='2'>Bill no.</th>\r\n                  <th className='py-0' rowspan='2'>Name</th>\r\n                  <th className='py-0' rowspan='2'>Mobile</th>\r\n                  <th className='py-0' rowspan='2'>Doctor Name</th>\r\n                  <th className='py-0' rowspan='2'>Date</th>\r\n                  <th className='py-0' rowspan='2'>Time</th>\r\n                  <th className='py-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                  <th className='py-0' rowspan='2'>Consultation Amount</th>\r\n                  <th className='py-0' rowspan='2'>Procedure Amount</th>\r\n                  <th className='py-0' rowspan='2'>Extra Charges</th>\r\n                  <th className='py-0' rowspan='2'>Discount</th>\r\n                  <th className='py-0' rowspan='2'>CGST</th>\r\n                  <th className='py-0' rowspan='2'>SGST</th>\r\n                  <th className='py-0' rowspan='2'>Pending Amt.</th>\r\n                  <th className='py-0' rowspan='2'> Grand Total</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='bg-pearl py-0' scope='col'>Cash</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Card</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Paytm</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Phonepe</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Razorpay</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Wire-Transfer</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Points</th>\r\n                </tr>\r\n              </thead>\r\n\r\n\r\n              {\r\n                loading ? (\r\n                  <tbody>\r\n                    <tr className='position-relative text-burntumber mt-1 m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-charcoal75 mt-1'>Please be Patient while we are fetching Appointments</td></tr>\r\n                  </tbody>\r\n                ) : (\r\n                  Appointments.length == 0 ? (\r\n                    <tbody >\r\n                      <tr className='position-relative text-burntumber mt-1 m-auto'>\r\n                        <td className=' position-absolute start-0 end-0 text-charcoal fw-bold mt-1'>No Appointments</td></tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className='align-items-center Appointment'>\r\n                      {\r\n                        Appointments.map((data, i) => (\r\n                          <tr className={`bg-${SumPendingpayments(i) > 0 ? 'lightred50' : ''}`}>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.id ? data.id : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2' key={i}>{data.bill_id && data.bill_id != null ? data.bill_id : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.patient && data.patient.phone_number != null ? data.patient.phone_number : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.doctor && data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.timeslot && data.timeslot.date && data.timeslot.date != null ? reversefunction(data.timeslot.date) : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.timeslot && data.timeslot.time_from && data.timeslot.time_from != null ? tConvert(data.timeslot.time_from) : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.doctor && data.doctor.consulationFee !== null ? data.doctor.consulationFee : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.procedure_cost && data.procedure_cost != null ? data.procedure_cost : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{SumExtraCharges(i)}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.discount && data.discount != null ? data.discount : 'N/A'}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.CGST}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.SGST}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{SumPendingpayments(i)}</td>\r\n                            <td className='fw-bold text-charcoal py-0 px-0 px-2'>{data.total_amount}</td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n\r\n            </table>\r\n          </div>\r\n          <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0 scroll'>\r\n            <div className=\"row p-0 m-0 \">\r\n              <div className=\"col-auto p-0 m-0\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Grand Total</h6>\r\n                    <h5 className='fw-bold text-start'>₹ {GrandTotal()}</h5>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Total Pending Amounts</h6>\r\n                    <h5 className='fw-bold text-burntumber text-start'>₹ {TotalPendingPayment()}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\" tabindex=\"0\">\r\n          <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n          <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1  bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=' scroll scroll-y pb-5' style={{ maxHeight: '58vh' }}>\r\n            <table className={`table text-start`}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='text-charcoal75 fw-bold'>Appoint. Id</th>\r\n                  <th className='text-charcoal75 fw-bold'>Bill no.</th>\r\n                  <th className='text-charcoal75 fw-bold'>Name</th>\r\n                  <th className='text-charcoal75 fw-bold'>Mobile</th>\r\n                  <th className='text-charcoal75 fw-bold'>Doctor</th>\r\n                  <th className='text-charcoal75 fw-bold'>Appoint. Date</th>\r\n                  <th className='text-charcoal75 fw-bold'>Payment Recieved Date</th>\r\n                  <th className='text-charcoal75 fw-bold'>Payment Mode</th>\r\n                  <th className='text-charcoal75 fw-bold'>Amt. Received</th>\r\n                  <th className='text-charcoal75 fw-bold'>Paid Amt.</th>\r\n                </tr>\r\n\r\n              </thead>\r\n              <tbody className='Pendingpay'>\r\n\r\n                {\r\n                  pendingpaid.map((data, i) => (\r\n                    <tr key={i}>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment.id != null ? data.appointment.id : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.id && data.id != null ? data.id : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient && data.appointment.patient.full_name != null ? data.appointment.patient.full_name : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient.phone_number && data.appointment.patient.phone_number != null ? data.appointment.patient.phone_number : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.doctor && data.appointment.doctor.doctor_name != null ? data.appointment.doctor.doctor_name : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.appointment_date != null ? reversefunction(data.appointment.appointment_date) : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_date && data.paid_date != null ? reversefunction(data.paid_date) : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n\r\n            <table className={`table text-center d-none  d-${pprxl}`} ref={Pendingref}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Appoint. Id</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Bill no.</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Name</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Mobile</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Doctor</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Appoint. Date</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Payment Recieved Date</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' colspan='7' scope='colgroup'>Payment Method</th>\r\n                  <th className='py-0 text-charcoal75 fw-bold' rowspan='2'>Amount Received</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='bg-pearl py-0' scope='col'>Cash</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Card</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Paytm</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Phonepe</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Razorpay</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Wire-Transfer</th>\r\n                  <th className='bg-pearl py-0' scope='col'>Points</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className='Pendingpay'>\r\n\r\n                {\r\n                  pendingpaid.map((data, i) => (\r\n                    <tr key={i}>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment.id != null ? data.appointment.id : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.id && data.id != null ? data.id : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient && data.appointment.patient.full_name != null ? data.appointment.patient.full_name : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.patient.phone_number && data.appointment.patient.phone_number != null ? data.appointment.patient.phone_number : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.doctor && data.appointment.doctor.doctor_name != null ? data.appointment.doctor.doctor_name : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.appointment && data.appointment != null && data.appointment.appointment_date != null ? reversefunction(data.appointment.appointment_date) : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_date && data.paid_date != null ? reversefunction(data.paid_date) : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.paid_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0 scroll'>\r\n            <div className=\"d-flex p-0 m-0 \">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0 justify-content-start\">\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Recieved Pending Amount</h6>\r\n                    <h5 className='fw-bold'>₹ {PendingAmountRecieved()}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\" tabindex=\"0\">\r\n          <h6 className=\"text-charcoal fw-bold p-0 m-0 ms-2 ms-lg-3 ms-md-1 ms-sm-1\">Payments</h6>\r\n          <div className=\"row m-0 g-2 mt-md-2 p-0 text-start justify-content-start\">\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 justify-content-start'>CASH</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCash()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>CARD</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForCard()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PAYTM</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPaytm()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>PHONEPE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPhonepe()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>WIRE</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForWireTransfer()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>RAZORPAY</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForRazorPay()}</h6>\r\n            </div>\r\n            <div className=\"col-auto col-md-auto col-lg-auto text-start  py-lg-1 py-md-1 px-lg-3 ps-md-2 ps-1 pe-md-3 pe-md-2 ms-lg-2 ms-md-2 ms-lg-3 ms-1 bg-seashell\" style={{ borderLeft: '3.5px solid var(--burntumber)' }}>\r\n              <p className='fw-bold text-charcoal75 text-start p-0 m-0 '>POINTS</p>\r\n              <h6 className='fw-bold p-0 m-0 text-start'>₹ {payment_method_detailsForPoints()}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=' scroll scroll-y pb-5' style={{ maxHeight: '58vh' }}>\r\n            <table className={`table text-start`}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='text-charcoal75 fw-bold'>Credit ID</th>\r\n                  <th className='text-charcoal75 fw-bold'>Patient Name</th>\r\n                  <th className='text-charcoal75 fw-bold'>Doctor Name</th>\r\n                  <th className='text-charcoal75 fw-bold'>Mobile No.</th>\r\n                  <th className='text-charcoal75 fw-bold'>Description</th>\r\n                  <th className='text-charcoal75 fw-bold'>Date Recieved</th>\r\n                  <th className='text-charcoal75 fw-bold'>Payment Mode </th>\r\n                  <th className='text-charcoal75 fw-bold'>Amt.</th>\r\n                  <th className='text-charcoal75 fw-bold'>Total Amount</th>\r\n                </tr>\r\n\r\n              </thead>\r\n              <tbody className='Advancepay'>\r\n\r\n                {\r\n                  advancepaid.map((data, i) => (\r\n                    <tr key={i} className=''>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.id ? data.id : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.doctor && data.doctor.full_name != null ? data.doctor.full_name : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.patient && data.patient.phone_number !== null ? data.patient.phone_number : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.description && data.description != null ? data.description : 'N/A'}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{reversefunction(data.date)}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.keys(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.payment_method_details && data.payment_method_details != null ? Object.values(JSON.parse(data.payment_method_details)) + '' : ''}</td>\r\n                      <td className='fw-bold text-charcoal px-0 px-2'>{data.credit_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n            <table className={`table text-start d-none d-${advxl}`} ref={Advancedref}>\r\n              <thead className='bg-pearl position-sticky top-0'>\r\n                <tr>\r\n                  <th className='py-0 my-0' rowspan='2'>Credit ID</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Patient Name</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Doctor Name</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Mobile No.</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Description</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Date Recieved</th>\r\n                  <th className='py-0 my-0' colspan='7' scope='colgroup'>Payment Method</th>\r\n                  <th className='py-0 my-0' rowspan='2'>Amount Recieved</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Cash</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Card</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Paytm</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Phonepe</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Razorpay</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Wire-Transfer</th>\r\n                  <th className='bg-white py-0 my-0' scope='col'>Points</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className='Advancepay'>\r\n\r\n                {\r\n                  advancepaid.map((data, i) => (\r\n                    <tr key={i} className=''>\r\n                      <td className='py-0 py-1'>{data.id ? data.id : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.patient && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.doctor && data.doctor.full_name != null ? data.doctor.full_name : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.patient && data.patient.phone_number !== null ? data.patient.phone_number : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.description && data.description != null ? data.description : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{reversefunction(data.date)}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                      <td className='py-0 py-1'>{data.credit_amount}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className='p-0 m-0 py-1 ps-2 bg-seashell border position-absolute w-100 bottom-0 scroll'>\r\n            <div className=\"d-flex p-0 m-0 \">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0 justify-content-start\">\r\n                  <div className=\"col-auto\">\r\n                    <h6 className='fw-bold text-charcoal75 '>Recieved Advance Amount</h6>\r\n                    <h5 className='fw-bold'>₹ {AdvancedAmountRecieved()}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport { Appointments_Dsr }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Dsr\\Doctors_Dsr.jsx",["791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811"],[],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { useContext, useRef } from 'react'\r\nimport { URL, DoctorsList } from '../../index'\r\nimport axios from 'axios'\r\n\r\nconst Doctors_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const AllDoctors = useContext(DoctorsList)\r\n  const [load, setload] = useState(false)\r\n  const [Appointments, setAppointments] = useState([])\r\n  const [DocTimetyp1, setDocTimetyp1] = useState()\r\n  const [pageindex, setpageindex] = useState()\r\n  const tableref = useRef()\r\n  const Doctorwisetable = useRef()\r\n\r\n  async function GetDoctors() {\r\n    setload(true)\r\n    await axios.get(`${url}/DSR/doctors?from_date=${props.fromdate}&to_date=${props.todate}`).then((response) => {\r\n      // console.log(response)\r\n      setAppointments(response.data.data.doctor_login_list)\r\n      setload(false)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    GetDoctors()\r\n  }, [props.fromdate, props.todate])\r\n\r\n  let DoctorWisetotalarr = []\r\n\r\n  async function DoctorwiseTable() {\r\n    let total, hr, min\r\n    let doctorstime = {\r\n      id: '',\r\n      roomtype: '',\r\n      totaltime: '',\r\n      totalhours: '',\r\n      totalminutes: ''\r\n    }\r\n    for (let k = 0; k < AllDoctors.length; k++) {\r\n      DoctorWisetotalarr.push([AllDoctors[k][0], AllDoctors[k][1], [], []])\r\n      for (let i = 0; i < Appointments.length; i++) {\r\n        if (Appointments[i].doctor && Appointments[i].doctor.id == DoctorWisetotalarr[k][0]) {\r\n          if (Appointments[i].room && Appointments[i].room.room_type == 1) {\r\n            total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            hr = total.toString().substring(0, 2)\r\n            min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][2].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: Number(hr),\r\n              totalminutes: Number(min)\r\n            })\r\n          }\r\n          if (Appointments[i].room && Appointments[i].room_type == 2) {\r\n            let total = diff(Appointments[i].login_time, Appointments[i].logout_time)\r\n            let hr = total.toString().substring(0, 2)\r\n            let min = total.toString().substring(5, 7)\r\n            DoctorWisetotalarr[k][3].push(doctorstime = {\r\n              id: Appointments[i].id,\r\n              roomtype: Appointments[i].room.room_type,\r\n              totaltime: total,\r\n              totalhours: hr,\r\n              totalminutes: min\r\n            })\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n    let Doctorwisetotalhrarr = []\r\n    let Doctorwisetotalminarr = []\r\n    if (DoctorWisetotalarr && DoctorWisetotalarr.length != 0) {\r\n      for (let i = 0; i < DoctorWisetotalarr.length; i++) {\r\n        if (DoctorWisetotalarr[i][0] == AllDoctors[i][0]) {\r\n          Doctorwisetotalhrarr.push([DoctorWisetotalarr[i][0], []])\r\n          Doctorwisetotalminarr.push([DoctorWisetotalarr[i][0], []])\r\n          if (DoctorWisetotalarr[i][2].length != 0) {\r\n            for (let g = 0; g < DoctorWisetotalarr[i][2].length; g++) {\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalhours && DoctorWisetotalarr[i][2][g].totalhours != null && DoctorWisetotalarr[i][2][g].totalhours != undefined) {\r\n                Doctorwisetotalhrarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalhours))\r\n              } else {\r\n                Doctorwisetotalhrarr[i][1].push(0)\r\n              }\r\n              if (DoctorWisetotalarr[i][2][g].length != 0 && DoctorWisetotalarr[i][2][g].totalminutes && DoctorWisetotalarr[i][2][g].totalminutes != null && DoctorWisetotalarr[i][2][g].totalminutes != undefined) {\r\n                Doctorwisetotalminarr[i][1].push(Number(DoctorWisetotalarr[i][2][g].totalminutes))\r\n              } else {\r\n                Doctorwisetotalminarr[i][1].push(0)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = 0; k < Doctorwisetotalhrarr.length; k++) {\r\n        if (Doctorwisetotalhrarr[k][1].length == 0) {\r\n          Doctorwisetotalhrarr[k].push(0)\r\n        } else {\r\n          let Doctorwisehrtotal = 0\r\n          let Doctorwisemintotal = 0\r\n          for (let h = 0; h < Doctorwisetotalhrarr[k][1].length; h++) {\r\n            Doctorwisehrtotal += Number(Doctorwisetotalhrarr[k][1][h])\r\n          }\r\n          for (let a = 0; a < Doctorwisetotalminarr[k][1].length; a++) {\r\n            Doctorwisemintotal += Number(Doctorwisetotalminarr[k][1][a])\r\n\r\n          }\r\n          DoctorWisetotalarr[k].push(Doctorwisehrtotal)\r\n          DoctorWisetotalarr[k].push(Doctorwisemintotal)\r\n        }\r\n        if (DoctorWisetotalarr[k][5] >= 60) {\r\n          let remainsmin = DoctorWisetotalarr[k][5] % 60\r\n          let minhours = Math.floor(DoctorWisetotalarr[k][5] / 60)\r\n          DoctorWisetotalarr[k][5] = remainsmin\r\n          DoctorWisetotalarr[k][4] += minhours\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n    console.log(DoctorWisetotalarr)\r\n    setDocTimetyp1(DoctorWisetotalarr)\r\n  }\r\n  useEffect(() => {\r\n    async function load() {\r\n      DoctorwiseTable()\r\n    }\r\n    load()\r\n  }, [props.fromdate, props.todate, load])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  function diff(start, end) {\r\n    if (start != null && end != null) {\r\n      start = start.split(\":\");\r\n      end = end.split(\":\");\r\n      var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n      var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n      var diff = endDate.getTime() - startDate.getTime();\r\n      var hours = Math.floor(diff / 1000 / 60 / 60);\r\n      diff -= hours * 1000 * 60 * 60;\r\n      var minutes = Math.floor(diff / 1000 / 60);\r\n      if (hours < 0)\r\n        hours = hours + 24;\r\n\r\n      return (hours <= 9 ? \"0\" : \"\") + hours + \"hrs\" + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins';\r\n    } else {\r\n      return 0\r\n    }\r\n\r\n  }\r\n\r\n  function TotalTime() {\r\n    let hrarr = []\r\n    let minsarr = []\r\n    let totalhours, totalmins\r\n    let GetTotalHours = 0\r\n    let GetTotalMins = 0\r\n    let start, end;\r\n    for (let i = 0; i < Appointments.length; i++) {\r\n      start = Appointments[i].login_time\r\n      end = Appointments[i].logout_time\r\n      if (start !== null && end !== null) {\r\n        start = start.split(\":\");\r\n        end = end.split(\":\");\r\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n        var diff = endDate.getTime() - startDate.getTime();\r\n        var hours = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hours * 1000 * 60 * 60;\r\n        var minutes = Math.floor(diff / 1000 / 60);\r\n        if (hours < 0)\r\n          hours = hours + 24;\r\n        totalhours = (hours <= 9 ? \"0\" : \"\") + hours\r\n        totalmins = (minutes <= 9 ? \"0\" : \"\") + minutes;\r\n        hrarr.push(totalhours)\r\n        minsarr.push(totalmins)\r\n      } else {\r\n        hrarr.push(0)\r\n        minsarr.push(0)\r\n      }\r\n    }\r\n    // console.log(hrarr)\r\n    // console.log(minsarr)\r\n    hrarr.forEach(item => {\r\n      GetTotalHours += Number(item)\r\n    })\r\n    minsarr.forEach(item => {\r\n      GetTotalMins += Number(item)\r\n    })\r\n\r\n    let a = Math.floor(GetTotalMins / 60)\r\n    let b = GetTotalMins % 60\r\n    // console.log(GetTotalHours,GetTotalMins,a,b)\r\n    return GetTotalHours + a + \" Hours \" + \" and \" + b + \" Minutes \"\r\n  }\r\n  return (\r\n    <div className=\"container-fluid Doctors_Dsrsection\">\r\n      <div className='position-relative'>\r\n        <div className=\"col export_dropdown position-absolute top-0 \">\r\n          <div className=\"dropdown\">\r\n            <button className=\"button button p-0 m-0 px-1 py-1 button-pearl text-burntumber  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Exports\r\n            </button>\r\n            <ul className=\"dropdown-menu\" >\r\n              <li className=\"text-center border-bottom\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} All Doctors Login/Logout Details`}\r\n                  sheet=\"Login/Logout Details\"\r\n                  currentTableRef={tableref.current}\r\n                >\r\n                  <button className='button-sm button-pearl text-start py-2'>All Doctors Login/Logout Details Export </button>\r\n\r\n                </DownloadTableExcel></li>\r\n              <li className=\"text-center  border-bottom\">\r\n                <DownloadTableExcel\r\n                  filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Doctors Summary`}\r\n                  sheet=\"Summary Report\"\r\n                  currentTableRef={Doctorwisetable.current}\r\n                >\r\n                  <button className='button-sm button-pearl text-start py-2'>Doctors Summary Export</button>\r\n\r\n                </DownloadTableExcel></li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='py-2'>\r\n        <div className=\"container-fluid m-0 p-0\">\r\n          <div className=\"row p-0 m-0 justify-content-around\">\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 py-2 border border-1 rounded-1 shadow-sm\">\r\n              <h6 className='text-charcoa50 fw-bold'>Total Report</h6>\r\n              <div className=\"row gx-1\">\r\n                <div className=\"col-6 col-lg-6 col-md-6 p-0 m-0\">\r\n                  <button className='button-sm button-brandy'>Export CSV </button>\r\n                </div>\r\n                <div className=\"col-6 col-lg-6 col-md-6  p-0 m-0\">\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} All Doctors Login/Logout Details`}\r\n                    sheet=\"Login/Logout Details\"\r\n                    currentTableRef={tableref.current}\r\n                  >\r\n                    <button className='button-sm button-lightgreen'>Export Excel </button>\r\n\r\n                  </DownloadTableExcel>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 py-2 border border-1 rounded-1 shadow-sm\">\r\n              <h6 className='text-charcoa50 fw-bold'>Doctor Wise Report</h6>\r\n              <div className=\"row gx-1\">\r\n                <div className=\"col-6 col-lg-6 col-md-6 p-0 m-0\">\r\n                  <button className='button-sm button-brandy'>Export CSV </button>\r\n                </div>\r\n                <div className=\"col-6 col-lg-6 col-md-6 col-sm-4  p-0 m-0\">\r\n                  <DownloadTableExcel\r\n                    filename={`${reversefunction(props.fromdate) + ' to ' + reversefunction(props.todate)} Doctors Summary`}\r\n                    sheet=\"Summary Report\"\r\n                    currentTableRef={Doctorwisetable.current}\r\n                  >\r\n                    <button className='button-sm button-lightgreen'>Export Excel </button>\r\n\r\n                  </DownloadTableExcel>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4 col-lg-3 col-md-4 col-sm-4 border border-1 rounded-1 shadow-sm text-center align-items-center\">\r\n              <h6 className='text-charcoa50 fw-bold'>Summary</h6>\r\n              <div className=\"col-12 col-lg-12 p-0 m-0 bg-lightyellow rounded-1 align-self-center mt-2 fw-bold\">Total Time :- {TotalTime()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      <ul className=\"nav nav-pills mb-3 ms-2 ms-lg-2 ms-md-2 ms-sm-2\" id=\"pills-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button onClick={() => { setpageindex(0) }} className=\"nav-link active p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\" >Doctor's Login</button>\r\n        </li>\r\n        <li className=\"nav-item ms-lg-3 ms-md-2 ms-sm-1 ms-1\" role=\"presentation\">\r\n          <button onClick={() => { setpageindex(1) }} className=\"nav-link p-0 m-0 py-1 px-3 rounded-pill\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Login's Summary</button>\r\n        </li>\r\n        <li className=\"nav-item ms-lg-3 ms-md-2 ms-sm-1 ms-1\" role=\"presentation\">\r\n          <button className=\"button button-pearl text-burntumber fw-bold p-0 m-0 py-1 px-3 \" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\"> {TotalTime()}</button>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"pills-tabContent \">\r\n        <div className=\"tab-pane fade show active text-start\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">\r\n          <div className='container-fluid scroll scroll-y doctordsrtable' ref={tableref}>\r\n            <span className='d-none'>Total Time:{TotalTime()}</span>\r\n            <table className='table text-start fw-bold'>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Doctors Name</th>\r\n                  <th>Mobile</th>\r\n                  <th>Date</th>\r\n                  <th>Roomnumber</th>\r\n                  <th>RoomType</th>\r\n                  <th>Start Time</th>\r\n                  <th>End Time</th>\r\n                  <th>Total Hours</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                load ? (\r\n                  <tbody className='position-relative'>\r\n                    <tr className='position-absolute start-0 end-0 fw-bolder text-charcoal'>Loading Doctors Login History </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  Appointments.length == 0 || Appointments == undefined ? (\r\n                    <tbody className='position-relative'>\r\n                      <tr className='position-absolute start-0 end-0 mx-auto fw-bolder text-charcoal'>No Doctors Login History Found </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className='border'>\r\n                      {\r\n                        Appointments.map((data, i) => (\r\n                          <tr key={i}>\r\n                            <td>{data.id ? data.id : ''}</td>\r\n                            <td>{data.doctor ? data.doctor.doctor_name && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A' : 'N/A'}</td>\r\n                            <td>{data.doctor ? data.doctor.phone_number ? data.doctor.phone_number : '' : \"\"}</td>\r\n                            <td>{data.date && data.date != null ? reversefunction(data.date) : ''}</td>\r\n                            <td>{data.room ? data.room.room_number && data.room.room_number != null ? data.room.room_number : 'N/A' : \"\"}</td>\r\n                            <td>{data.room ? data.room.room_type == 1 ? 'Consultation' : 'Procedure' : ''}</td>\r\n                            <td>{data.login_time ? tConvert(data.login_time) : '--'}</td>\r\n                            <td>{data.logout_time ? tConvert(data.logout_time) : '--'}</td>\r\n                            <td>{data.login_time && data.login_time != null && data.logout_time && data.logout_time != null ? diff(data.login_time, data.logout_time) : '--'}</td>\r\n                          </tr>\r\n\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  )\r\n                )\r\n\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\" tabindex=\"0\">\r\n          <div className='container-fluid scroll scroll-y doctordsrtable' ref={Doctorwisetable}>\r\n            <table className='table text-start fw-bold'>\r\n              <thead className='position-sticky top-0 bg-pearl'>\r\n                <tr>\r\n                  <th className='my-0 py-0' rowspan='2'>Doctor Id</th>\r\n                  <th className='my-0 py-0' rowspan='2'>Doctor Name</th>\r\n                  <th className='my-0 py-0 border-0 bg-seashell border-bottom' colspan='2' scope='colgroup'>Consultation</th>\r\n                  <th className='my-0 py-0 border-0 bg-seashell border-bottom' colspan='2' scope='colgroup'>Procedure</th>\r\n                </tr>\r\n                <tr>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Hours</th>\r\n                  <th className='py-0 my-0 bg-pearl' scope='col'>Total Minutes</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              {\r\n                DocTimetyp1 == undefined || DocTimetyp1.length == 0 ? (\r\n                  <tbody>\r\n                    <tr>Loading...</tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>{\r\n                    DocTimetyp1.map((data) => (\r\n                      <tr className=''>\r\n                        <td className=''>{data[0]}</td>\r\n                        <td className=''>{data[1]}</td>\r\n                        <td className=''>{data[4]}</td>\r\n                        <td className=''>{data[5]}</td>\r\n                        <td className=''>0</td>\r\n                        <td className=''>0</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Doctors_Dsr }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\index.jsx",["812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831"],[],"//React\r\nimport React, { Suspense, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport { lazy } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n//css\r\nimport \"./css/dashboard.css\";\r\nimport \"./css/appointment.css\";\r\nimport \"./css/pharmacy.css\";\r\nimport \"./css/login.css\";\r\nimport { WelcomeLoader } from \"./components/features/WelcomeLoader\";\r\n//Notiflix\r\nimport Notiflix from \"notiflix\";\r\nimport IdleTimer from \"./components/features/InactiveLogout\";\r\n// import Navbar from './components/App/Navbar'\r\nconst Doctorsection = lazy(() => import(\"./components/App/Clinic\"));\r\nconst Navbar = lazy(() => import(\"./components/App/Navbar\"));\r\nconst Appointments = lazy(() => import(\"./components/App/Appointments\"));\r\nconst Patients = lazy(() => import(\"./components/App/Patients\"));\r\nconst Doctors = lazy(() => import(\"./components/App/Doctors\"));\r\nconst DailySaleReport = lazy(() => import(\"./components/App/DSR\"));\r\nconst Pharmacy = lazy(() => import(\"./components/App/Pharmacy\"));\r\n// import Appointments from './components/App/Clinic'\r\n\r\n//Context Apis\r\nconst TodayDate = createContext();\r\nconst URL = createContext();\r\nconst DoctorsList = createContext();\r\nconst Doctorapi = createContext();\r\nconst TodayDocs = createContext();\r\nconst Vitals = createContext();\r\nconst Clinic = createContext();\r\nconst Permissions = createContext();\r\n\r\nfunction Connectapp(props) {\r\n  const d = new Date();\r\n  const date = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\r\n  const monthcount = d.getMonth() + 1 < 10 ? `0${d.getMonth() + 1}` : d.getMonth() + 1;\r\n  const yearcount = d.getFullYear();\r\n  var APIDate = `${yearcount}-${monthcount}-${date}`;\r\n  const url = \"https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect\";\r\n  const [isWelcomeLoading, setisWelcomeLoading] = useState(0);\r\n  const [ConnectDoctorapi, setConnectDoctorapi] = useState([]);\r\n  let Doctorarray = [];\r\n  let TodayDoctors = [];\r\n  const [Loading, setLoading] = useState(false);\r\n  const [docapi, setdocapi] = useState([]);\r\n  const [todayDoc, settodaydoc] = useState([]);\r\n  let ClinicId = localStorage.getItem(\"ClinicId\");\r\n  const [clinicid, setclinicid] = useState();\r\n  const [ischecked, setischecked] = useState();\r\n  const [cliniclist, setcliniclist] = useState([]);\r\n  const [vitalslist, setvitalslist] = useState();\r\n  const [path, setpath] = useState();\r\n\r\n  async function Clinics() {\r\n    await axios.get(`${url}/clinic/list`).then((response) => {\r\n      setcliniclist(response.data.data);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    Clinics();\r\n  }, []);\r\n\r\n  async function VitalsList() {\r\n    await axios.get(`${url}/vitals/list`).then((response) => {\r\n      setvitalslist(response.data.data.vitals);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    VitalsList();\r\n  }, []);\r\n\r\n  async function fetchapi() {\r\n    try {\r\n      setLoading(true);\r\n      await axios .get(`${url}/doctor/list?clinic_id=${ClinicId}&limit=30&offset=0`) .then(function (response) {\r\n          let tempArray = response.data.data.doctor_list;\r\n          setConnectDoctorapi(tempArray);\r\n          for (let i = 0; i < tempArray.length; i++) {\r\n            Doctorarray.push([\r\n              tempArray[i].id,\r\n              tempArray[i].doctor_name,\r\n              tempArray[i].clinic_id,\r\n              [],\r\n            ]);\r\n            for (var j = 0; j < tempArray[i].month_timeslots.length; j++) {\r\n              if (tempArray[i].month_timeslots[j].date === APIDate) {\r\n                Doctorarray[i][3].push([\r\n                  [tempArray[i].month_timeslots[j].time_from],\r\n                  [tempArray[i].month_timeslots[j].booking_status],\r\n                  [tempArray[i].month_timeslots[j].id],\r\n                ]);\r\n              }\r\n            }\r\n          }\r\n          for (var q = 0; q < Doctorarray.length; q++) {\r\n            if (Doctorarray[q][3].length !== 0) {\r\n              TodayDoctors.push(Doctorarray[q]);\r\n              settodaydoc(TodayDoctors);\r\n            }\r\n          }\r\n          if (TodayDoctors.length === 0) {\r\n            TodayDoctors.push([\r\n              \"0\",\r\n              \"No Doctors Found\",\r\n              [\"No Time Slots Found\"],\r\n              [\"null\"],\r\n            ]);\r\n            settodaydoc(TodayDoctors);\r\n          }\r\n          setdocapi(Doctorarray);\r\n        });\r\n      setLoading(false);\r\n      setisWelcomeLoading(1);\r\n    } catch (e) {\r\n      setisWelcomeLoading(1);\r\n      Notiflix.Report.failure(\r\n        `${e.message}`,\r\n        \"Please Check your Internet Connection and retry\",\r\n        \"Retry\",\r\n        () => {\r\n          window.location.reload();\r\n        }\r\n      );\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [ClinicId]);\r\n  async function Gomain() {\r\n    localStorage.setItem(\"ClinicId\", clinicid);\r\n    setisWelcomeLoading(0);\r\n  }\r\n  return isWelcomeLoading == 0 ? (\r\n    <>\r\n      <WelcomeLoader />\r\n    </>\r\n  ) : ClinicId == \"null\" ? (\r\n    <div className=\"position-relative\">\r\n      <div className=\"bg_a\">\r\n        <img src={process.env.PUBLIC_URL + \"/images/a.png\"} alt=\"image\" className=\"img-fluid bg-a\" />\r\n      </div>\r\n      <div className=\" Clinicslist position-absolute top-0 start-0 end-0 text-charcoal\">\r\n        {/* <img src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt='image' className='img-fluid logo p-0 m-0 start-0 top-0' /> */}\r\n        <h1 className=\"fs-2 ms-3 p-2\">aartas | Connect App</h1>\r\n        <h4 className=\"\">Select Clinic</h4>\r\n        <div className=\"container-fluid clinics\">\r\n          <div className=\"row p-0 m-0 \">\r\n            <div className=\"col-lg-10 col-12\">\r\n              {cliniclist.map((data, i) => (\r\n                <div div className=\"text-start mx-auto\">\r\n                  <label className=\"\">\r\n                    <input type=\"checkbox\" className=\"radio form-check-input me-1\" checked={ischecked === i ? true : false} name={data.id} onClick={(e) => { setclinicid(e.target.name); setischecked(i); }} />{\" \"} {data.title} {data.address} </label>\r\n                  <br />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"col-lg-2 col-12 mt-lg-0 mt-md-3 mt-sm-0 mt-2 \">\r\n              <button className=\"btn button-seashell\" disabled={clinicid == undefined ? true : false} onClick={Gomain} >\r\n                <img className=\"img-fluid\" style={{ width: \"1.5rem\" }} src={process.env.PUBLIC_URL + \"/images/right-arrow.png\"} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <Permissions.Provider value={props.permissions}>\r\n        <Doctorapi.Provider value={ConnectDoctorapi}>\r\n          <DoctorsList.Provider value={docapi}>\r\n            <URL.Provider value={url}>\r\n              <Clinic.Provider value={cliniclist}>\r\n                <TodayDate.Provider value={APIDate}>\r\n                  <TodayDocs.Provider value={todayDoc}>\r\n                    <Vitals.Provider value={vitalslist}>\r\n                      <Router>\r\n                        <Navbar path={path} logout={props.logout} permissions={props.permissions} username={props.username} designation={props.designation} id={props.id} fetchapi={fetchapi} />\r\n                        <Suspense fallback={ <div className=\"text-charcoal75 fs-6 fw-bold text-center\"> {\" \"} loading..{\" \"} </div> } >\r\n                          <Routes>\r\n                            <Route path=\"/\" onChange={() => setpath(\"/\")} element={ <Doctorsection id={props.id} fetchapi={fetchapi} todayDoc={todayDoc} Loading={Loading} docapi={docapi} /> } />\r\n                            <Route path=\"/Appointments\" onChange={() => setpath(\"/Appointments\")} element={ <Appointments id={props.id} fetchapi={fetchapi} /> } />\r\n                            <Route path=\"/Patients\" onChange={() => setpath(\"/Patients\")} element={<Patients id={props.id} />} />\r\n                            <Route path=\"/Doctors\" onChange={() => setpath(\"/Doctors\")} element={ <Doctors id={props.id} docapi={docapi} /> } />\r\n                            <Route path=\"/DailySaleReport\" onChange={() => setpath(\"/DailySaleReport\")} element={ <DailySaleReport id={props.id} cliniclist={cliniclist} docapi={docapi} /> } />\r\n                            <Route path=\"/Pharmacy\" onChange={() => setpath(\"/Pharmacy\")} element={<Pharmacy id={props.id} />} />\r\n                            {/* <Route path='/Files' element={<Exports id={props.id} />} /> */}\r\n                          </Routes>\r\n                        </Suspense>\r\n                      </Router>\r\n                    </Vitals.Provider>\r\n                  </TodayDocs.Provider>\r\n                </TodayDate.Provider>\r\n              </Clinic.Provider>\r\n            </URL.Provider>\r\n          </DoctorsList.Provider>\r\n        </Doctorapi.Provider>\r\n      </Permissions.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Switchpage() {\r\n  const [email, setemail] = useState(\"flex\");\r\n  const [next, setnext] = useState(\"none\");\r\n  const [password, setpassword] = useState(\"none\");\r\n  const [passvisibility, setpassvisibility] = useState(\"password\");\r\n  const [load, setload] = useState();\r\n  const [permissions, setpermissions] = useState([]);\r\n  const [roleId, setroleId] = useState();\r\n\r\n  const topassword = () => {\r\n    setpassword(\"flex\");\r\n    setemail(\"none\");\r\n  };\r\n  const toemail = () => {\r\n    setpassword(\"none\");\r\n    setemail(\"flex\");\r\n  };\r\n  const passwordvisibility = () => {\r\n    if (passvisibility === \"password\") {\r\n      setpassvisibility(\"text\");\r\n    }\r\n    if (passvisibility === \"text\") {\r\n      setpassvisibility(\"password\");\r\n    }\r\n  };\r\n  const [logininput, setlogininput] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  function handleinput(e) {\r\n    const logindata = { ...logininput };\r\n    logindata[e.target.id] = e.target.value;\r\n    setlogininput(logindata);\r\n  }\r\n  const localemail = localStorage.getItem(\"email\");\r\n\r\n  async function Submit() {\r\n    setroleId();\r\n    setload(true);\r\n    await axios\r\n      .post(\r\n        `https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/login`,\r\n        {\r\n          email: localemail || logininput.email,\r\n          password: logininput.password,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setload(false);\r\n        if (response.data.status === true) {\r\n          localStorage.setItem(\"email\", logininput.email);\r\n          localStorage.setItem(\"name\", response.data.data.name);\r\n          localStorage.setItem(\"designation\", response.data.data.roles.title);\r\n          localStorage.setItem(\"id\", response.data.data.id);\r\n          localStorage.setItem(\"ClinicId\", response.data.data.clinic_id);\r\n          localStorage.setItem(\"roleId\", response.data.data.roles.id);\r\n          setroleId();\r\n          Changepage();\r\n        } else {\r\n          Notiflix.Report.failure(\r\n            \"Invalid Credentials\",\r\n            \"Check your username password and try again\",\r\n            \"Retry\"\r\n          );\r\n          setload(false);\r\n        }\r\n      });\r\n  }\r\n  let role = localStorage.getItem(\"roleId\");\r\n  async function Permissions() {\r\n    await axios\r\n      .post(\r\n        `https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/role/permissions/list`,\r\n        {\r\n          role_id: role ? role : 1,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.status === true) {\r\n          setpermissions(response.data.data.permissions);\r\n          Changepage();\r\n          // window.location.reload(true);\r\n        } else {\r\n          Notiflix.Report.failure(\r\n            \"Invalid Credentials\",\r\n            \"Check your username password and try again\",\r\n            \"Retry\"\r\n          );\r\n        }\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    Permissions();\r\n  }, [role]);\r\n  function logout() {\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"id\");\r\n    localStorage.removeItem(\"designation\");\r\n    localStorage.removeItem(\"ClinicId\");\r\n    localStorage.removeItem(\"roleId\");\r\n  }\r\n\r\n  const [isTimeout, setIsTimeout] = useState(false);\r\n  useEffect(() => {\r\n    const timer = new IdleTimer({\r\n      timeout: 1800, //expire after 30 mins\r\n      onTimeout: () => {\r\n        setIsTimeout(true);\r\n      },\r\n      onExpired: () => {\r\n        logout();\r\n        setIsTimeout(true);\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      timer.cleanUp();\r\n    };\r\n  }, [isTimeout]);\r\n\r\n  let expired = localStorage.getItem(\"_expiredTime\");\r\n  useEffect(() => {\r\n    Changepage();\r\n  }, [expired == undefined]);\r\n\r\n  function Changepage() {\r\n    if (localemail !== null && localemail !== \"\") {\r\n      const Username = localStorage.getItem(\"name\");\r\n      const Designation = localStorage.getItem(\"designation\");\r\n      const Id = localStorage.getItem(\"id\");\r\n      return (\r\n        <Connectapp logout={logout} username={Username} designation={Designation} id={Id} permissions={permissions} />\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"loginform p-0 m-0\">\r\n          <section className=\"signinsection\">\r\n            <div className=\" p-0 m-0 formsection \">\r\n              <h4 className=\"text-center text-charcoal fw-semibold mb-4\">\r\n                Login to Aartas\r\n              </h4>\r\n              <form autoComplete=\"off\" onSubmit={(e) => Submit(e)}>\r\n                <div className=\"\">\r\n                  <div\r\n                    className={`row d-${email} justify-content-center p-0 m-0`}\r\n                    id=\"userinput\"\r\n                  >\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 align-items-center d-flex userinput\">\r\n                      <p className=\"m-0 ms-1\" id=\"inputheading\">\r\n                        Enter your Aartas Email ID\r\n                      </p>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control bg-seashell\"\r\n                        id=\"email\"\r\n                        placeholder=\"example@aartas.com\"\r\n                        value={logininput.email}\r\n                        autoComplete=\"false\"\r\n                        onChange={(e) => {\r\n                          handleinput(e);\r\n                          if (e.target.value != \"\") {\r\n                            setnext(\"block\");\r\n                          }\r\n                          if (e.target.value == \"\") {\r\n                            setnext(\"none\");\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className={`col-lg-1 d-flex  col-2 align-items-center`}\r\n                    >\r\n                      <a className={`next d-${next} text-decoration-none text-center text-charcoal p-2 rounded`} id=\"next\" onClick={topassword} > Next </a>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`row d-${password} justify-content-center`}\r\n                    id=\"passinput\"\r\n                  >\r\n                    <div className=\"col-lg-1 col-2 col-md-1 align-items-center d-flex\">\r\n                      <a className=\"back text-decoration-none text-center p-lg-2 p-md-2 p-1 rounded\" onClick={toemail} > Back </a>\r\n                    </div>\r\n                    {load ? (\r\n                      <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 py-1 pb-1 userinput text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                          <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"col-lg-6 col-md-8 col-sm-10 col-10 align-items-center d-flex userinput\">\r\n                        <p className=\"m-0\" id=\"inputheading\">\r\n                          Enter your Password\r\n                        </p>\r\n                        <input\r\n                          type={passvisibility}\r\n                          className=\"form-control bg-seashell\"\r\n                          id=\"password\"\r\n                          placeholder=\"examplepassword123\"\r\n                          autoComplete=\"new-password\"\r\n                          onChange={(e) => handleinput(e)}\r\n                          value={logininput.password}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-1 align-items-center justify-content-center d-flex\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\" p-lg-2 p-md-2 p-1 rounded submit text-center\"\r\n                        disabled={load == true ? true : false}\r\n                        onClick={Submit}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-12 p-0 m-0\">\r\n                      <div className=\"col text-center\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          onClick={passwordvisibility}\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckDefault\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label ms-2 text-charcoal\"\r\n                          htmlFor=\"flexCheckDefault\"\r\n                        >\r\n                          Check Password\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-5 text-center d-none\">\r\n                      <a href=\"#\" className=\"text-decoration-none\">\r\n                        forgot password\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  console.log(isTimeout);\r\n  return Changepage();\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Switchpage />);\r\n// ReactDOM.render(<Switchpage />, document.getElementById(\"root\"));\r\n\r\nexport {\r\n  TodayDate,\r\n  URL,\r\n  DoctorsList,\r\n  Doctorapi,\r\n  TodayDocs,\r\n  Vitals,\r\n  Clinic,\r\n  Permissions,\r\n};\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\WelcomeLoader.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\livetime.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Timer.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\SearchField.jsx",["832","833","834"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport '../../css/dashboard.css'\r\nimport { AddAppointment } from '../Today/AddAppointment'\r\nimport { URL } from '../../index'\r\nimport { Permissions } from '../../index'\r\n\r\nconst SearchField = (props) => {\r\n    const permission = useContext(Permissions)\r\n    const url = useContext(URL)\r\n    const [searchload, setsearchload] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [patientname, setpatientname] = useState()\r\n    const [appointmentform, setappointmentform] = useState(\"none\")\r\n    async function searchpatient() {\r\n        setsearchload(true)\r\n        setpatientid()\r\n        setpatientname()\r\n        await axios.get(`${url}/patient/list?search=${props.searchtext}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (props.searchtext && props.searchtext.length > 1) {\r\n            setdisplaysearchlist('block')\r\n        } else {\r\n            setdisplaysearchlist('none')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        searchpatient()\r\n    }, [props.searchtext])\r\n\r\n    const get_value = (e) => {\r\n        setpatientid(e.target.name)\r\n        setpatientname(e.target.value)\r\n        toggleappointmentform()\r\n    }\r\n    const toggleappointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\")\r\n        } else if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\")\r\n        }\r\n    }\r\n    console.log(searchlist)\r\n    return (\r\n        <>\r\n            <div className={`col-12 d-${displaysearchlist} searchlist bg-pearl rounded-2 p-0 m-0`} style={{ minHeight: 'fit-content' }}>\r\n                {\r\n                    searchload ? (\r\n                        <h6 className=\"row p-0 m-0 mainsearch text-charcoal75 rounded-1 p-2\" >Loading... </h6>\r\n                    ) : (\r\n                        searchlist && searchlist.length == 0 ? (\r\n                            <h6 className=\"text-danger fw-bold mainsearch bg-lightred50 p-0 m-0 p-2\" >Patient not found. Add as new to book appointments</h6>\r\n                        ) : (\r\n                            <div className='rounded-2 mainsearch'>\r\n                                {/* <p className='text-secondary p-0 m-0 text-start fw-bold ps-2' style={{ fontSize: '0.8rem' }}>{searchlist.length} searches found</p> */}\r\n                                {\r\n                                    searchlist && searchlist.map((data) => (\r\n                                        <div className='row p-0 m-0 bg-pearl p-1 border-top rounded-bottom align-items-center justify-content-between px-lg-3'>\r\n\r\n                                            <div className=\"col-9 col-xl-6 col-lg-9 col-md-12 p-0 m-0 text-start ps-lg-2\">\r\n                                                <p className=' p-0 m-0 border-0 text-charcoal bg-pearl text-start text-wrap fw-bold ' >{data.full_name}</p>\r\n                                                <small className='p-0 m-0 border-0 text-charcoal75 bg-pearl text-start text-wrap fw-bold ' > {data.phone_number}</small>\r\n                                            </div>\r\n                                            <div className=\"col-auto p-0 m-0 align-self-center justify-content-center\">\r\n                                                <button className={`button-sm button-pearl text-burntumber border fw-bold border-0 p-0 m-0 d-${permission.appointment_add == 1 ? '' : 'none'}`} name={data.id} value={data.full_name} onClick={(e) => get_value(e)} style={{ fontSize: '0.8rem' }}>+Appointment</button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        )\r\n\r\n\r\n                    )\r\n\r\n                }\r\n            </div>\r\n            <div className={`rounded-4 bg-seashell end-0 appointmentinfosection d-${appointmentform} border-start border-top border-2 position-absolute`} style={{ width: '30rem', top: '-2rem' }} >\r\n                <AddAppointment fetchapi={props.fetchapi} toggleappointmentform={toggleappointmentform} patientidfromsearch={patientid} patientnamefromsearch={patientname} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { SearchField }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Doctor.jsx",["835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873"],[],"import React, { createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport AmountPaid from './AmountPaid';\r\nimport { URL, TodayDate, Clinic, Permissions } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport '../../css/dashboard.css'\r\nimport { SelectedTimeAppointment } from '../Appointments/SelectedTimeAppointment'\r\nimport { AddSelectedDoctorSlot } from './SelectedDoctorSlot'\r\nimport { Vitalsoperation } from \"./Vitals\";\r\nimport { Payments } from \"./Payments\";\r\nimport { Bill } from \"./Bill\";\r\nimport { AddConsumables } from \"./AddConsumables\";\r\nimport { SaleEntryForm } from '../pharmacy/pharmacy';\r\n\r\n\r\nfunction DoctorSchedule(props) {\r\n  //Global Variables\r\n  const url = useContext(URL)\r\n  const Date = useContext(TodayDate)\r\n  const permission = useContext(Permissions)\r\n  const adminid = localStorage.getItem('id')\r\n  //Use States\r\n  const [appointmentdata, setappointmentdata] = useState([]);\r\n  const [singleload, setsingleload] = useState(0)\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [tableindex, settableindex] = useState()\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [addappointmentform, setaddappointmentform] = useState('none')\r\n  const [appointmentid, setappointmentid] = useState()\r\n  const [timeindex, settimeindex] = useState()\r\n  const [saleindex, setsaleindex] = useState()\r\n  const [consumablesindex, setconsumablesindex] = useState()\r\n  const [addquickslots, setaddquickslots] = useState('none')\r\n  const [vitalsform, setvitalsform] = useState('none')\r\n  const [consumables, setconsumables] = useState('none')\r\n  const [vitalindex, setvitalindex] = useState()\r\n  const [appointmentvitalslist, setappointmentvitalslist] = useState([])\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [paymentsindex, setpaymentsindex] = useState()\r\n  const [paymentsi, setpaymentsi] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [d_form, setd_form] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  // for UpdateAppointment\r\n  const closeappointmentform = () => {\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  };\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n\r\n  function ArraySum(arr) {\r\n    if (arr.length > 0) {\r\n      let sum = arr.reduce((accumulator, value) => {\r\n        return accumulator + value;\r\n      }, 0);\r\n      return sum;\r\n    } else {\r\n      return 0;\r\n    }\r\n\r\n  }\r\n  async function Appointmentlist() {\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?doctor_id=${props.todayDoc[props._selected][0]}&from_date=${Date}&to_date=${Date}`).then((response) => {\r\n      setappointmentdata(response.data.data);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  useEffect(() => {\r\n    Appointmentlist();\r\n  }, [props._selected]);\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let array = [[1, 'Pending', 'lightred'], [2, 'Booked', 'lightblue'], [3, 'Cancelled', 'lightred'], [4, 'QR Generated', 'light'], [5, 'Checked_in', 'brandy'], [6, 'Vitals Done', 'lightred'], [7, 'In_apppointment', 'lightyellow'], [8, 'Payment done', 'lightgreen'], [9, 'Unattained', 'lightyellow'], [10, 'Completed', 'lightgreen']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Appointmentlist()\r\n          Loading.remove()\r\n          props.fetchapi()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  const openAddApppointmentform = () => {\r\n    setaddappointmentform('block')\r\n  }\r\n  const closeAddAppointmentform = () => {\r\n    setaddappointmentform('none')\r\n    settimeindex()\r\n  }\r\n  function OpenAddQuickSlots() {\r\n    if (addquickslots === 'none') {\r\n      setaddquickslots('block')\r\n    }\r\n  }\r\n  function CloseAddQuickSlots() {\r\n    if (addquickslots === 'block') {\r\n      setaddquickslots('none')\r\n    }\r\n  }\r\n\r\n  //Vitals Section\r\n  function OpenVitals() {\r\n    if (vitalsform === 'none') {\r\n      setvitalsform('block')\r\n    }\r\n  }\r\n  function CloseVitals() {\r\n    if (vitalsform === 'block') {\r\n      setvitalsform('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n\r\n  async function GetAppointmentVitals(id) {\r\n    setloadvitals(true)\r\n    await axios.get(`${url}/appointment/vitals/list?appointment_id=${id}`).then((response) => {\r\n      setappointmentvitalslist(response.data.data.vitals)\r\n      setloadvitals(false)\r\n    })\r\n  }\r\n  //Vitals Section \r\n\r\n  //Send Notification\r\n  async function SendNotifcation(name, id) {\r\n    Notiflix.Loading.dots('Sending', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.3rem'\r\n    })\r\n    try {\r\n      await axios.post(`${url}/appointment/call/in`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message.slice(0, -1) + ' to ' + name)\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n\r\n  }\r\n  const confirmmessage = (name, id) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Call Patient `,\r\n      `Do you surely want to call ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SendNotifcation(name, id)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  //Send Notification\r\n\r\n  //Bill\r\n  function OpenBillForm() {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n  }\r\n  function CloseBillForm() {\r\n    if (billform == 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function OpenPaymentsForm() {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n  }\r\n  function ClosePaymentsForm() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsindex()\r\n    }\r\n  }\r\n\r\n  function ClosePaymentsForm2() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsi()\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      // 'Cancel',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      // () => {\r\n      //   return 0\r\n      // },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const toggleConsumables = () => {\r\n    if (consumables === 'none') {\r\n      setconsumables('block')\r\n    }\r\n    if (consumables === 'block') {\r\n      setconsumables('none')\r\n      setconsumablesindex()\r\n    }\r\n\r\n  }\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n      setsaleindex()\r\n    }\r\n  }\r\n  // const Modal = () => {\r\n  //   modalindex\r\n  // }\r\n  https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/swift/pdf\r\n  console.log(appointmentdata)\r\n  return (\r\n    <>\r\n      <section id=\"doctorscheduledata\">\r\n        <section className=\"timeslotsection\">\r\n          <div className=\"container-fluid p-0 m-0 ps-1 \">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\" col-12 p-0 m-0 align-items-center\">\r\n                <div className=\"row align-items-center p-0 m-0 mt-3 mb-2 ms-0\">\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <h6 className=\"p-0 m-0 text-charcoal fw-bolder text-start\">Time Slots Avaliable</h6>\r\n                  </div>\r\n                  <div className=\"col-2 ps-1\">\r\n                    <button className=\"btn m-0 p-0\">\r\n                      <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} style={{ width: \"1.5rem\" }} alt=\"displaying_image\" onClick={OpenAddQuickSlots} />\r\n                    </button>\r\n                    <div className={`d-${addquickslots} rounded-1 quickdocslots bg-seashell shadow col-lg-6 col-md-8 col-sm-12 col-12 col-xl-4 position-absolute end-0 start-0 top-0 m-auto mt-3`} style={{ zIndex: '3010', minWidth: '10rem', maxWidth: '30rem' }}>\r\n                      <AddSelectedDoctorSlot CloseAddQuickSlots={CloseAddQuickSlots} fetchapi={props.fetchapi} DocClinic={props.DocClinic} DoctorID={props.DoctorID} DoctorName={props.DoctorName} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"scroll timeslots col-12 justify-content-around\">\r\n              {\r\n                props.todayDoc[props._selected][3].map((data, i) => (\r\n                  data[1] == 0 ? (\r\n                    <>\r\n                      <button className={`button-sm button-${timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1 px-3 py-2 fw-bold rounded-1`} style={{ letterSpacing: '1px' }} onClick={(e) => { openAddApppointmentform(); settimeindex(i) }} key={i}>{tConvert(data[0])}</button>\r\n                      {\r\n                        timeindex == i ? (\r\n                          <div className={`d-${timeindex == i ? addappointmentform : 'none'} col-lg-8 col-md-10 col-sm-12 col-12 col-xl-6 shadow quickappointment position-absolute m-auto start-0 end-0 bg-seashell rounded-4 border border-1`} style={{ zIndex: 4, top: '-3rem' }}>\r\n                            <SelectedTimeAppointment fetchapi={props.fetchapi} closeAddAppointmentform={closeAddAppointmentform} DocClinic={props.DocClinic} timeindex={timeindex} selectedtime={data[0]} selectedtimeID={data[2]} />\r\n\r\n                          </div>\r\n                        ) : (\r\n                          <></>\r\n                        )\r\n                      }\r\n\r\n                    </>\r\n                  ) : (\r\n                    <button disabled className=\" button-sm button-charcoal50-outline m-1 px-3 py-2 rounded-1 fw-bold\" key={i} style={{ letterSpacing: '1px' }}>{tConvert(data[0])}</button>\r\n                  )\r\n\r\n                ))\r\n\r\n              }\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"allappointmentsection p-0 m-0 ms-1\">\r\n          <div className=\"col-auto m-0 p-0 align-items-center\">\r\n            <h6 className=\"p-0 ms-1 text-charcoal fw-bolder mt-3 mb-2\">Appointments</h6>\r\n          </div>\r\n          <div className=\" scroll scroll-y align-content-center align-items-center\" style={{ minHeight: '55vh', maxHeight: '55vh', Height: '55h' }}>\r\n            <table className=\"table text-start\">\r\n              <thead className=\"p-0 m-0 px-2 bg-pearl\" style={{ 'zIndex': '4' }}>\r\n                <tr className=\"p-0 m-0 position-sticky text-charcoal75 top-0\" style={{ fontSize: '0.75rem' }}>\r\n                  <th className=\"border-0 bg-pearl text-center\" key={0}>Update</th>\r\n                  <th className=\"border-0 bg-pearl text-start\" key={3}>Time</th>\r\n                  <th className=\"border-0 bg-pearl\" key={2}>Patient</th>\r\n                  <th className=\"border-0 bg-pearl text-start\" key={1}>Status</th>\r\n                  <th className=\"border-0 bg-pearl\" key={4}> Amount</th>\r\n                  {/* <th className=\"border-0 bg-pearl\" key={5}>Amount Status</th> */}\r\n                  <th className=\"text-center border-0 bg-pearl\" key={6}>Vitals</th>\r\n                  <th className={`text-center border-0 bg-pearl d-${permission.appointment_charges_edit ? '' : 'none'}`} key={7}>Bill</th>\r\n                  <th className=\"border-0 bg-pearl text-center\" key={9}>Consumables</th>\r\n                  <th className=\"border-0 bg-pearl text-center\" key={9}>more</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                singleload == 0 ? (\r\n                  <tbody className=\"scroll scroll-y\"  >\r\n                    <tr className=' position-relative text-burntumber fs-3 mt-1 text-center m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-burntumber fs-3 mt-1 text-center'>\r\n\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>\r\n                    {\r\n                      appointmentdata.length == 0 ? (\r\n                        <tr><button className=\"text-center position-absolute border-0 text-charcoal fw-bold px-5 start-0 end-0 mx-auto\">No Appointments Found</button></tr>\r\n                      ) : (\r\n                        appointmentdata.map((data, i) => (\r\n                          <tr className='align-middle'>\r\n                            <td className={`py-0 bg-${tableindex === i ? 'lightyellow' : ''}  text-center`}>\r\n                              <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { openapppointmentform(); settableindex(i); setappointmentid(data.id) }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" style={{ width: \"1rem\" }} key={i} />\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"py-0 text-start fw-bold\" style={{ letterSpacing: '1px' }}>{tConvert(data.timeslot.time_from)}</td>\r\n                            <td className=\"py-0 \">\r\n                              <div className=\"row p-0 m-0\" style={{ width: 'fit-content' }}>\r\n                                <div className=\"col-12 p-0 m-0 fw-bold\">\r\n                                  {data.patient ? data.patient.full_name !== null ? data.patient.full_name : 'N/A' : 'N/A'}\r\n                                </div>\r\n                                <small className=\"col-auto p-0 m-0 text-burntumber fw-bold\" style={{ letterSpacing: '1px' }}>\r\n                                  {data.patient ? data.patient.phone_number != null ? data.patient.phone_number : 'N/A' : 'N/A'}\r\n                                </small>\r\n                              </div>\r\n                            </td>\r\n\r\n                            <td className=\" text-start\">\r\n                              <div className=\"row p-0 m-0 align-items-center\">\r\n                                <div className=\"col-1 p-0 m-0 me-2\">\r\n                                  <div className={`rounded-circle border-1 button-${status_color(data.appointment_status)} fontmain`} style={{ height: '12px', width: '12px' }}></div>\r\n                                </div>\r\n                                <div className=\"col-5 p-0 m-0\">\r\n                                  <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent border-0 text-start fw-bold `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                    <option className=\"fw-bold\" selected disabled>{status(data.appointment_status)}</option>\r\n                                    <option key={0} className=\"button-lightred\" value='1'>Pending</option>\r\n                                    <option key={1} className=\"button-lightblue\" value='2'>Booked</option>\r\n                                    <option key={2} className=\"button-lightred\" value='3'>Cancelled</option>\r\n                                    <option key={3} className=\"button-pearl\" value='4'>QR Generated</option>\r\n                                    <option key={4} className=\"button-brandy\" value='5'>Checked_in</option>\r\n                                    <option key={5} className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                                    <option key={6} className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                                    <option key={7} className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                                    <option key={8} className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                                    <option key={9} className=\"button-lightgreen\" value='10'>Completed</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n\r\n                            {/* <td className=\"py-0\" style={{ fontSize: '0.75rem' }}>{data.total_amount}</td> */}\r\n                            <td className=\"py-0 text-start\">\r\n                              <div className=\"col p-0 m-0 fw-bold fontmain\" style={{ fontSize: '0.75rem', letterSpacing: '1px' }}>\r\n                                ₹{data.total_amount}\r\n                              </div>\r\n                              <div className=\"col p-0 m-0 text-start\">\r\n                                <button className=\"button-sm p-0 m-0 bg-transparent border-0\" onClick={() => { setpaymentsi(i); OpenPaymentsForm(); }}>\r\n                                  <AmountPaid appointmentData={data} index={i} Appointmentlist={Appointmentlist} />\r\n                                </button>\r\n                                {\r\n                                  paymentsi == i ? (\r\n                                    <td className={`payments start-0 bg-seashell end-0 shadow-sm top-0 border border-1 rounded-1 col-lg-6 col-md-8 col-sm-12 col-12 mt-2 col-xl-8 position-absolute px-5 py-2 d-${paymentsi == i ? paymentsform : 'none'}`} >\r\n                                      <Payments ClosePaymentsForm={ClosePaymentsForm2} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} paymentsi={paymentsi} /></td>\r\n                                  ) : (<></>)\r\n                                }\r\n                              </div>\r\n                            </td>\r\n                            <td className={` text-center py-0 bg-${vitalindex === i ? 'lightyellow' : ''}`}><button className=\"btn p-0 m-0\" onClick={() => { setvitalindex(i); OpenVitals(); GetAppointmentVitals(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ height: \"1.5rem\" }} /></button></td>\r\n                            <td className={` text-center py-0 d-${permission.appointment_charges_edit ? '' : 'none'} bg-${billindex === i ? 'lightyellow' : ''}`}> <img src={process.env.PUBLIC_URL + \"/images/bill.png\"} onClick={() => { setbillindex(i); OpenBillForm(); }} alt=\"displaying_image\" className=\"me-1\" />  </td>\r\n                            <td className={` text-center py-0  bg-${consumablesindex === i ? 'lightyellow' : ''}`}>\r\n                              <button className={`button-sm border-0 p-0 m-0 position-relative bg-${consumablesindex === i ? 'lightyellow' : 'transparent'}`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/bill.png\"} onClick={() => { setconsumablesindex(i); toggleConsumables(); }} alt=\"displaying_image\" className=\"me-1\" />\r\n                                <span class={` position-absolute text-charcoal fw-bold start-75 translate-middle badge p-0 m-0 p-1 px-2 fw-normal rounded-2 bg-lightyellow`} style={{ zIndex: '2', top: \"10%\" }}>\r\n                                  {appointmentdata[i].medicine_used.length}\r\n                                </span>\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              <div className=\"dropdown d-inline-block \">\r\n                                <button className=\"button p-0 m-0 bg-transparent border-0 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                  <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1rem\" }} />\r\n                                </button>\r\n                                <ul className=\"dropdown-menu shadow-sm p-2\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content' }}>\r\n                                  <li className=\"dropdown-item d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => confirmmessage(data.patient.full_name, data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/speaker.png\"} alt=\"displaying_image\" style={{ width: \"1.8rem\" }} /> Call Patient</li>\r\n                                  <li className=\"dropdown-item d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Bill</li>\r\n                                  <li className=\"dropdown-item d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Prescription</li>\r\n                                  <li className=\"dropdown-item d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Send on Whats App</li>\r\n                                  <li className=\"dropdown-item d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\" style={{ width: \"1.8rem\" }} />Send on SMS</li>\r\n                                  <li className=\"dropdown-item d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { toggle_nsef(); setsaleindex(i) }}><img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" style={{ width: \"1.8rem\" }} />Buy Medicines</li>\r\n                                  <li className={`dropdown-item p-0 m-0 align-items-center p-2  d-${permission.appointment_charges_edit ? 'flex' : 'none'}`} onClick={() => { setpaymentsindex(i); OpenPaymentsForm(); }}><img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" style={{ width: \"0.8rem\" }} />Payments</li>\r\n                                </ul>\r\n                              </div></td>\r\n                            {\r\n                              tableindex === i ? (\r\n                                <td className={`updateappointment shadow-sm border border-1 rounded-1 bg-seashell mt-2 start-0 end-0 top-0 col-lg-8 col-md-8 col-sm-11 col-11 col-xl-5 d-${tableindex == i ? appointmentform : 'none'} position-absolute`}>\r\n                                  <UpdateAppointment fetchapi={props.fetchapi} fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} addappointmentform={addappointmentform} closeappointmentform={closeappointmentform} doctorid={props.doctorid} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              vitalindex === i ? (\r\n                                <td className={`vitals bg-${vitalindex === i ? 'lightred' : ''} col-lg-7 col-md-8 col-sm-12 col-12 col-xl-5 position-absolute border border-1 shadow-sm rounded-1 d-${vitalindex == i ? vitalsform : 'none'}`} style={{ zIndex: '3' }}>\r\n                                  <Vitalsoperation GetAppointmentVitals={GetAppointmentVitals} CloseVitals={CloseVitals} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} appointmentvitalslist={appointmentvitalslist} loadvitals={loadvitals} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              billindex == i ? (\r\n                                <td className={`bill d-${billindex == i ? billform : 'none'} col-lg-8 p-0 m-0 col-md-10 start-0 mx-auto mt-2 end-0 top-0 col-sm-12 col-12 col-xl-6 border border-1 rounded-1 shadow-sm position-absolute`}>\r\n                                  <Bill fetchapi={props.fetchapi} CloseBillForm={CloseBillForm} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} appointmentid={data.id} doctorfee={data.doctor.consulationFee} billform={billform} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              paymentsindex === i ? (\r\n                                <td className={`payments start-0 bg-seashell end-0 shadow-sm top-0 border border-1 rounded-1 col-lg-6 col-md-8 col-sm-12 col-12 mt-2 col-xl-8 ps-3 px-5 py-2 position-absolute d-${paymentsindex == i ? paymentsform : 'none'}`}>\r\n                                  <Payments ClosePaymentsForm={ClosePaymentsForm} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} /></td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              consumablesindex == i ? (\r\n                                <td className={`consumables mx-auto position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0 col-lg-10 col-md-11 col-sm-12 col-12 mt-2 col-xl-8  d-${consumablesindex == i ? consumables : 'none'}`} style={{ zIndex: '4' }} >\r\n                                  <AddConsumables appointmentdata={appointmentdata[i]} Appointmentlist={Appointmentlist} existedconsumables={appointmentdata[i].medicine_used} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} toggleConsumables={toggleConsumables} />\r\n                                </td>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              saleindex == i ? (\r\n                                <td className={`saleentryform mx-auto position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0 col-lg-10 col-md-11 col-sm-12 col-12 mt-2 col-xl-8  d-${saleindex == i ? saleindex : 'none'}`} style={{ zIndex: '4' }} >\r\n                                  <SaleEntryForm DoctorID={props.DoctorID} DoctorName={props.DoctorName} saleindex={saleindex} toggle_nsef={toggle_nsef} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                </td>\r\n                              ) : (<></>)\r\n\r\n                            }\r\n                          </tr>\r\n\r\n                        )))}\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}\r\nexport { DoctorSchedule };\r\n\r\nfunction Timecard(props) {\r\n  const url = useContext(URL);\r\n  const clinics = useContext(Clinic)\r\n  const [cardindex, setcardindex] = useState()\r\n  const [rooms, setrooms] = useState([])\r\n  function diff(start, end) {\r\n    start = start.split(\":\");\r\n    end = end.split(\":\");\r\n    var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    var diff = endDate.getTime() - startDate.getTime();\r\n    var hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    var minutes = Math.floor(diff / 1000 / 60);\r\n    if (hours < 0)\r\n      hours = hours + 24;\r\n\r\n    return (hours != 0 ? ((hours <= 9 ? \"0\" : \"\") + hours + \"hrs \") : \"\") + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins'\r\n  }\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let [doctime, setdoctime] = useState([]);\r\n  let [isLoading, setisLoading] = useState();\r\n  let [startload, setstartload] = useState(false)\r\n\r\n  let clinicid = localStorage.getItem('ClinicId');\r\n\r\n  async function fetchapi() {\r\n    setisLoading(true);\r\n    await axios.get(`${url}/todays/doctor/time/list?doctor_id=${props.docid}&clinic_id=${clinicid}`).then((response) => {\r\n      console.log(response)\r\n      console.log(response.data.data)\r\n      if (response.data.data.length == 0) {\r\n        setisLoading(false);\r\n      }\r\n      else {\r\n        setdoctime(response.data.data.reverse());\r\n        setisLoading(false);\r\n      }\r\n    })\r\n  }\r\n  const [refreshtimeslots, setrefreshtimeslot] = useState(false);\r\n  const [roomnumber, setroomnumber] = useState('1');\r\n\r\n  async function starttimeslot() {\r\n    setstartload(true)\r\n    let adminid = localStorage.getItem('id');\r\n    if (clinicid && roomnumber && props.docid && adminid) {\r\n      try {\r\n        await axios.post(`${url}/doctor/start/time`, {\r\n          clinic_id: clinicid,\r\n          room_id: roomnumber,\r\n          doctor_id: props.docid,\r\n          admin_id: adminid,\r\n        }).then((response) => {\r\n          setstartload(false)\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n        await fetchapi();\r\n\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n\r\n        setstartload(false)\r\n\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please fill all details')\r\n      setstartload(false)\r\n    }\r\n  }\r\n\r\n  async function endtimeslot(data) {\r\n    let adminid = localStorage.getItem('id');\r\n    setrefreshtimeslot(true);\r\n    let log_id = data.id;\r\n    try {\r\n      await axios.post(`${url}/doctor/end/time`, {\r\n        admin_id: adminid,\r\n        log_id: log_id\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n      await fetchapi();\r\n      setrefreshtimeslot(false)\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setrefreshtimeslot(false);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [props._selected]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < clinics.length; i++) {\r\n      if (clinics[i].id == Number(clinicid)) {\r\n        setrooms(clinics[i].rooms)\r\n      }\r\n    }\r\n\r\n  }, [clinicid])\r\n  // console.log(doctime, clinics, rooms, clinicid)\r\n  return (\r\n    <div className=\"scroll room_timecards align-items-center align-content-center my-auto mb-2 ms-2\">\r\n      <div id=\"cardslot\" className={`d-${isLoading ? 'none' : 'inline-flex'}`}>\r\n        <div className=\"card card1 p-0 m-0 text-start border-0\" id=\"card1\" >\r\n          <div className=\"card-body p-0 m-0\">\r\n            <div className=\"d-flex align-items-center ms-3\">\r\n              <p className=\" m-0 p-0 text-charcoal fw-bold me-2\">Room</p>\r\n              <select onChange={(e) => { setroomnumber(e.target.value) }} className=\"form-control bg-charcoal25 text-charcoal my-1 mx-2 p-0 py-2 px-3 w-auto text-center border-0\" id=\"clinicroom1\">\r\n                {\r\n\r\n                  rooms.map((data) => (\r\n                    <option value={data.id}>{data.room_number}</option>\r\n                  ))\r\n\r\n\r\n                }\r\n              </select>\r\n              {\r\n                startload ? (\r\n                  <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                ) : (\r\n                  <button className=\"btn playbutton p-0 m-0 mx-2\" onClick={starttimeslot}><img src={process.env.PUBLIC_URL + 'images/play.png'} style={{ width: '1.8rem' }} /></button>\r\n                )\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ? (\r\n\r\n          <div className=\"card bg-pearl text-center ms-3 bg-seashell\" aria-hidden=\"true\" style={{ width: '18rem', paddingTop: '0.76rem', paddingBottom: '0.76rem' }}>\r\n            <div className=\" text-start placeholder-glow gx-2\">\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-2 ms-2 text-start\"></span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          doctime.map((data, i) => (\r\n            <div id=\"cardslot text-start\" key={i} className=\"d-inline-flex m-1\">\r\n              <div className=\"card p-0 m-0 py-1 text-start border-0\" id=\"card1\">\r\n                <div className=\"card-body p-0 m-0\">\r\n                  <div className=\"d-flex text-start align-items-center p-0 m-0 \">\r\n                    <p className=\" p-0 m-0  ms-2 text-charcoal75 fw-bold me-1 ps-2 \" style={{ fontSize: '0.75rem' }}>Room</p>\r\n                    <h5 className=\"text-burntumber fw-semibold my-1 me-2 border-0\" id=\"clinicroom\">\r\n                      {data.room_id}\r\n                    </h5>\r\n                    {\r\n                      refreshtimeslots && i === cardindex ? (\r\n                        <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"d-flex p-0 m-0 justify-content-center\">\r\n\r\n                            <button type=\"text\" className=\"btn fromtime p-0 m-0 float-end text-charcoal text-center\" style={{ fontSize: '0.75rem' }}>{(data.login_time) ? tConvert(data.login_time) : ''}</button>\r\n                            <div className='mx-1 align-self-center' style={{ padding: '0.9px' }}>-</div>\r\n                            <button type=\"text\" className=\"btn totime p-0 m-0 text-charcoal float-end text-center\" style={{ fontSize: '0.75rem' }}>{(data.logout_time) ? tConvert(data.logout_time) : '__'}</button>\r\n\r\n                          </div>\r\n\r\n                          <div className=\"d-flex mx-2 \">\r\n                            {\r\n                              data.logout_time ? (\r\n                                <div id=\"totalhrs\" className=\" p-0 m-0 timediff text-burntumber fw-bold text-center pe-2\" defaultValue=\"\" style={{ fontSize: '0.75rem' }}>{data.logout_time ? diff(data.login_time, data.logout_time) : ''}</div>\r\n                              ) : (\r\n                                <button className=\"btn p-0 m-0 pausebutton\" value={data.id} onClick={(e) => { endtimeslot(data); setcardindex(i) }}><img className=\"\" src={process.env.PUBLIC_URL + 'images/pause.png'} onClick={(e) => { endtimeslot(e); setcardindex(i) }} style={{ width: '1.8rem' }} /></button>\r\n\r\n                              )\r\n                            }\r\n\r\n\r\n                          </div>\r\n\r\n                        </>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n          ))\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\nexport { Timecard }\r\n\r\n\r\n\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddPatient.jsx",["874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\n//Context APis\r\nimport { URL } from '../../index'\r\n//Google maps\r\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Css\r\n\r\n\r\nconst AddPatient = (props) => {\r\n    const url = useContext(URL);\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState('1')\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n    const [placeid, setplaceid] = useState()\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const [load, setload] = useState()\r\n    const [warning, setwarning] = useState('none')\r\n\r\n    const d = () => {\r\n        if (main == 1) {\r\n            console.log(main)\r\n            setdisplay('flex')\r\n        }\r\n        if (main == 2) {\r\n            console.log(main)\r\n            setdisplay('none')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data.patients_list)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    const resetform = async () => {\r\n        setfullname()\r\n        setphonenumber()\r\n        setDOB()\r\n        setemail()\r\n        setaddress()\r\n        setplace()\r\n        setpincode()\r\n        setcountrycode()\r\n    }\r\n\r\n    const CheckAvailability = async (e) => {\r\n        setphonenumber(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${e.target.value ? e.target.value : ''}&limit=10&offset=0`).then((response) => {\r\n            // console.log(response.data.data.patients_list)\r\n            for (let i = 0; i < response.data.data.patients_list.length; i++) {\r\n                console.log((countrycode + e.target.value), response.data.data.patients_list[i].phone_number)\r\n                if (('+' + countrycode + e.target.value) == response.data.data.patients_list[i].phone_number) {\r\n                    setwarning('block')\r\n                } else {\r\n                    setwarning('none')\r\n                }\r\n            }\r\n        })\r\n    }\r\n    let adminid = localStorage.getItem('id')\r\n    async function NewPatient(e) {\r\n        if (fullname && countrycode && phonenumber && DOB && gender && email && address && pincode && place && main && adminid) {\r\n            setload(true)\r\n            await axios.post(`${url}/add/patient`, {\r\n                full_name: fullname,\r\n                phone_country_code: countrycode,\r\n                phone_number: phonenumber,\r\n                dob: DOB,\r\n                gender: gender,\r\n                email: email,\r\n                address: address,\r\n                pin_code: pincode,\r\n                location: place,\r\n                is_main: main,\r\n                latitude: lat,\r\n                longitude: lng,\r\n                relation: main == 2 ? relation : '',\r\n                link_id: main == 2 ? linkid : '',\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                console.log(response)\r\n                Notiflix.Notify.success(response.data.message);\r\n                props.togglepatientform()\r\n                resetform(e)\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n\r\n        }\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(() => {\r\n\r\n        if (data.value !== undefined && data.value.place_id !== undefined) {\r\n            setpincode()\r\n            console.log(data.value.place_id)\r\n            setplaceid()\r\n            // initialize the map\r\n            const map = new window.google.maps.Map({\r\n                center: { lat: lat, lng: lng },\r\n                zoom: 14\r\n            });\r\n            // initialize the PlacesService object with your API key and map\r\n            const placesService = new window.google.maps.places.PlacesService(map);\r\n\r\n            // send a getDetails request for the place using its Place ID\r\n            placesService.getDetails({\r\n                placeId: data.value.place_id\r\n            }, (placeResult, status) => {\r\n                if (status === 'OK') {\r\n                    console.log(placeResult)\r\n                    // find the address component with type \"postal_code\"\r\n                    const postalCodeComponent = placeResult.address_components.find(component => {\r\n                        return component.types.includes('postal_code');\r\n                    });\r\n\r\n                    if (postalCodeComponent) {\r\n                        const postalCode = postalCodeComponent.short_name;\r\n                        setpincode(postalCode);\r\n                    } else {\r\n                        Notiflix.Notify.warning('Postal code not found for this place.');\r\n                    }\r\n                } else {\r\n                    Notiflix.Notify.failure(`Failed to get place details: ${status}`);\r\n                }\r\n            });\r\n        } else {\r\n            console.log(data)\r\n        }\r\n\r\n        data === \"\" ? setData(\"\") : setData(data);\r\n        setplace(data.label)\r\n    }, [data]);\r\n\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to add ${fullname} as a New Patient`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NewPatient()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    console.log(phonenumber);\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center position-relative fw-bold position-stic\"> Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute pt-2\" aria-label=\"Close\" onClick={props.togglepatientform} ></button>\r\n            <hr />\r\n            <div className=\"col-12 fw-bold\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4 ps-0\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countrycode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countrycode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countrycode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countrycode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countrycode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countrycode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countrycode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countrycode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countrycode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countrycode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countrycode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countrycode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countrycode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countrycode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countrycode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countrycode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countrycode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countrycode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countrycode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countrycode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countrycode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countrycode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countrycode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countrycode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countrycode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countrycode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countrycode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countrycode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countrycode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countrycode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countrycode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countrycode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countrycode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countrycode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countrycode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countrycode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countrycode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countrycode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countrycode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countrycode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countrycode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countrycode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countrycode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countrycode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countrycode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countrycode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countrycode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countrycode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countrycode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countrycode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countrycode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countrycode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countrycode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countrycode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countrycode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countrycode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countrycode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countrycode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countrycode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countrycode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countrycode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countrycode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countrycode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countrycode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countrycode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countrycode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countrycode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countrycode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countrycode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countrycode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countrycode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countrycode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countrycode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countrycode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countrycode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countrycode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countrycode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countrycode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countrycode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countrycode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countrycode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countrycode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countrycode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countrycode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countrycode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countrycode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countrycode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countrycode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countrycode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countrycode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countrycode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countrycode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countrycode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countrycode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countrycode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countrycode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countrycode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countrycode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countrycode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countrycode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countrycode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countrycode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countrycode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countrycode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countrycode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countrycode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countrycode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countrycode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countrycode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countrycode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countrycode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countrycode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countrycode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countrycode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countrycode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countrycode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countrycode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countrycode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countrycode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countrycode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countrycode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countrycode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countrycode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countrycode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countrycode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countrycode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countrycode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countrycode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countrycode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countrycode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countrycode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countrycode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countrycode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countrycode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countrycode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countrycode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countrycode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countrycode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countrycode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countrycode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countrycode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countrycode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countrycode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countrycode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countrycode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countrycode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countrycode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countrycode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countrycode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countrycode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countrycode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countrycode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countrycode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countrycode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countrycode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countrycode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countrycode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countrycode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countrycode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countrycode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countrycode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countrycode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countrycode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countrycode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countrycode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countrycode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countrycode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countrycode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countrycode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countrycode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countrycode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countrycode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countrycode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countrycode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countrycode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countrycode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countrycode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countrycode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countrycode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countrycode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countrycode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countrycode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countrycode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countrycode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countrycode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countrycode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countrycode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countrycode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countrycode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countrycode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countrycode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countrycode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countrycode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countrycode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countrycode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countrycode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countrycode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countrycode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countrycode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countrycode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countrycode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countrycode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countrycode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countrycode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countrycode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countrycode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countrycode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countrycode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countrycode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countrycode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countrycode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countrycode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countrycode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countrycode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8 pe-0\">\r\n                            <input type=\"number\" disabled={countrycode ? false : true} className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { CheckAvailability(e); }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n                    <p className={`text-burntumber fw-bold p-0 m-0 d-${warning}`}>Number already exists</p>\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Address\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className=\"col-6 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                console.log(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' onChange={(e) => { setmain(e.target.value); d(); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`conatiner m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option disabled >Select Relation</option>\r\n                                <option>Son</option>\r\n                                <option>Daughter</option>\r\n                                <option>Father</option>\r\n                                <option>Mother</option>\r\n                                <option>Husband</option>\r\n                                <option>Wife</option>\r\n                                <option>Brother</option>\r\n                                <option>Sister</option>\r\n                                <option>Grand Father</option>\r\n                                <option>Grand Mother</option>\r\n                                <option>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button type=\"button\" className=\"btn done button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { AddPatient }",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddAppointment.jsx",["919","920","921","922","923","924","925","926","927","928","929","930","931"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\n\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst AddAppointment = (props) => {\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [date, setdate] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    let adminid = localStorage.getItem('id')\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function setfromsearch() {\r\n        setpatientid(props.patientidfromsearch)\r\n        setsearchinput(props.patientnamefromsearch)\r\n    }\r\n    useEffect(() => {\r\n        setfromsearch()\r\n    }, [props.patientidfromsearch])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const searchpatient = (e) => {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n        if (searchinput && searchinput.length > 0) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    const get_value = async (value, name) => {\r\n        console.log(value, name)\r\n        setsearchinput(value)\r\n        setpatientid(name)\r\n        setdisplaysearchlist('none');\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(e.target.value)\r\n    }\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n    function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        setdate()\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n    function getTimefrom(e) {\r\n        setdate(e.target.value)\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots && ApikeyDocTimeslots.length != 0) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n        } else {\r\n            Notiflix.Notify.info('Choose Doctor First')\r\n        }\r\n    }\r\n\r\n    function resetform(e) {\r\n        setsearchinput()\r\n        setpatientid()\r\n        setdoctorid()\r\n        setclinicid()\r\n        setischecked()\r\n        setdate()\r\n    }\r\n\r\n    function BookAppointment(e) {\r\n        if (patientid && doctorid && clinicid && time && adminid) {\r\n            setload(true)\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: time,\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                Notiflix.Notify.success(response.data.message);\r\n                resetform()\r\n                props.toggleappointmentform()\r\n                props.fetchapi()\r\n                getTimeslots()\r\n                getTimefrom()\r\n                setdate()\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n        }\r\n\r\n    }\r\n    const [timeindex, settimeindex] = useState()\r\n\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Appointment`,\r\n            `Do you surely want to Add Appointment for ${searchinput}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                BookAppointment()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    // console.log(searchinput, patientid, displaysearchlist);\r\n    return (\r\n        <div className='fw-bold'>\r\n            <h5 className=\"text-center fw-bold mt-2\">New Appointment</h5>\r\n            {\r\n                props.closeAddAppointmentform ? (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n                ) : (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.toggleappointmentform(); }} ></button>\r\n                )\r\n            }\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <label className=\"m-0 mb-2\">Search Using Phone or Name</label>\r\n                <input type=\"text\" className=\"form-control selectpatient col-10 position-relative\" value={searchinput ? searchinput : ''} onChange={searchpatient} />\r\n                <div className={`col-8 d-${displaysearchlist} searchinput`}>\r\n                    {\r\n                        searchload ? (\r\n                            <p className=\"btn text-charcoal75 fw-bold bg-pearl rounded-2  p-0 m-0 ps-1\">Loading... </p>\r\n                        ) : (\r\n                            searchinput && searchlist.length == 0 ? (\r\n                                <p className=\"text-danger btn bg-lightred p-0 m-0\">Patient not found add as new user to book appointements</p>\r\n                            ) : (\r\n                                <div className=\"p-2 bg-pearl\">\r\n                                    {\r\n                                        searchlist.map((data) => (\r\n                                            <div style={{ cursor: 'pointer' }} className='col-12 d-block p-0 m-0 ms-1 border-0 bg-pearl py-1 border-bottom text-charcoal text-start border border-1' onClick={(e) => get_value(data.full_name, data.id)}>{data.full_name}  {data.phone_number}</div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            )\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className={`radio me-1 form-check-input `} key={i} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor\" value={doctorid ? doctorid : ''} onChange={getTimeslots}>\r\n                                <option value=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    Doclist.map((data, i) => (\r\n                                        <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"\">Select Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" value={date ? date : ''} className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom && doctorid && date ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, i) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button button-${props.timeindex == i ? 'pearl' : timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1`} value={data[0]} key={i} onClick={(e) => { gettime_value(e); settimeindex(i); }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className='btn button-charcoal75 m-1' key={i} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn button button-charcoal px-5\" onClick={confirmmessage}> Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { AddAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddDoctorSlot.jsx",["932","933","934","935","936","937","938"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs, Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2 fw-bold'>\r\n      <h5 className=\"text-center mt-2 fw-bold\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <label className='ps-1'>Doctor</label>\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>Dr. {data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className=\"radio form-check-input me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label >Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\apiarrays.jsx",["939","940","941","942","943","944"],[],"import axios from 'axios'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\n\r\nimport '../../css/pharmacy.css'\r\nimport Notiflix from 'notiflix'\r\n\r\nfunction Purchaseorderarray(props) {\r\n    let purchaseorderarr = [{\r\n        c1: 'PO-14',\r\n        c2: <button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3: 'Lucky Distributor',\r\n        c4: '10/10/2022',\r\n        c5: 'Kabir S',\r\n        c6: '30',\r\n        c7: '10,000',\r\n        c8: <button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n\r\n    },\r\n    {\r\n        c1: 'PO-14',\r\n        c2: <button className=\"button button-lightyellow rounded-5\">Consumables</button>,\r\n        c3: 'Lucky Distributor',\r\n        c4: '10/10/2022',\r\n        c5: 'Kabir S',\r\n        c6: '30',\r\n        c7: '10,000',\r\n        c8: <button className=\"button button-lightyellow rounded-5\">Pending</button>\r\n    },\r\n    {\r\n        c1: 'PO-14',\r\n        c2: <button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3: 'Lucky Distributor',\r\n        c4: '10/10/2022',\r\n        c5: 'Kabir S',\r\n        c6: '30',\r\n        c7: '10,000',\r\n        c8: <button className=\"button button-lightred rounded-5\">Cancelled</button>\r\n    },\r\n    {\r\n        c1: 'PO-14',\r\n        c2: <button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3: 'Lucky Distributor',\r\n        c4: '10/10/2022',\r\n        c5: 'Kabir S',\r\n        c6: '30',\r\n        c7: '10,000',\r\n        c8: <button className=\"button button-burntumber rounded-5\">Rejected</button>\r\n    },\r\n    {\r\n        c1: 'PO-14',\r\n        c2: <button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3: 'Lucky Distributor',\r\n        c4: '10/10/2022',\r\n        c5: 'Kabir S',\r\n        c6: '30',\r\n        c7: '10,000',\r\n        c8: <button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n    }\r\n    ]\r\n    return (\r\n        <>{\r\n            purchaseorderarr.map((item, _key) => {\r\n                return <tr key={_key}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td>{item.c6}</td>\r\n                    <td>{item.c7}</td>\r\n                    <td>{item.c8}</td>\r\n                    <td><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/enter.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button>\r\n                        <button className='btn' onClick={props.itemdetails}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                    <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/delete.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                </tr>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Pharmacystocktable() {\r\n    let pharmacystockarr = [{\r\n        c1: '01',\r\n        c2: 'Dolo 650',\r\n        c3: '04',\r\n        c4: '600',\r\n        c5: 'Lucky Distributors'\r\n    }]\r\n    return (\r\n        <>{\r\n            pharmacystockarr.map((item, _key) => {\r\n                return <tr key={_key}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></td>\r\n                    <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                </tr>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction POitemdetailsarray() {\r\n    let POitemdetailsarr = [\r\n        {\r\n            c1: '01',\r\n            c2: 'Dolo 650',\r\n            c3: '10',\r\n            c4: '600'\r\n        },\r\n    ]\r\n    return (\r\n        <>\r\n\r\n            <table className=\"table datatable text-center\">\r\n                <thead>\r\n                    <tr>\r\n\r\n                        <th>No.</th>\r\n                        <th>Item Name</th>\r\n                        <th>Total Qty</th>\r\n                        <th>Amount</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        POitemdetailsarr.map((item, _key) => {\r\n                            return <tr key={item.id}>\r\n                                <td>{item.c1}</td>\r\n                                <td>{item.c2}</td>\r\n                                <td>{item.c3}</td>\r\n                                <td>{item.c4}</td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Purchaseorderarray }\r\nexport { Pharmacystocktable }\r\nexport { POitemdetailsarray }\r\n\r\n\r\n\r\n\r\nfunction Stockvaccinearray() {\r\n    let Stockvaccinearr = [{\r\n        id: 1,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 2,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 3,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 4,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 5,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 6,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    ]\r\n    return (\r\n        <>{\r\n            Stockvaccinearr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td>{item.c6}</td>\r\n                    <td>{item.c7}</td>\r\n                    <td>{item.c8}</td>\r\n                    <td></td>\r\n                    <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n\r\n                </tr>\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Stockmedicinearray() {\r\n    let Stockvaccinearr = [{\r\n        id: 1,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 2,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 3,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 4,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 5,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    {\r\n        id: 6,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8: '20',\r\n        c9: <img src='' alt='...' />\r\n    },\r\n    ]\r\n    return (\r\n        <>{\r\n            Stockvaccinearr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td>{item.c6}</td>\r\n                    <td>{item.c7}</td>\r\n                    <td>{item.c8}</td>\r\n                    <td></td>\r\n                    <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n\r\n                </tr>\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport { Stockvaccinearray }\r\nexport { Stockmedicinearray }\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\AllAppointmentslist.jsx",["945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963"],[],"import React from 'react'\r\nimport { useState, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Bill } from './Bill'\r\nimport '../../css/appointment.css'\r\nimport { Payments } from './Payments.jsx'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//COntext APIs\r\nimport { URL, Permissions } from '../../index'\r\n\r\nconst AllAppointmentslist = (props) => {\r\n    const url = useContext(URL);\r\n    const permission = useContext(Permissions);\r\n    let adminid = localStorage.getItem('id')\r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    const [paymentsform, setpaymentsform] = useState('none')\r\n    const [paymentindex, setpaymentindex] = useState()\r\n    const [tableindex, settableindex] = useState()\r\n    const [billindex, setbillindex] = useState()\r\n    const [billform, setbillform] = useState('none')\r\n\r\n    const closeappointmentform = () => {\r\n        if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\");\r\n            settableindex()\r\n        }\r\n    };\r\n    const openapppointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\");\r\n        }\r\n    }\r\n    const toggle_payments = () => {\r\n        if (paymentsform === 'none') {\r\n            setpaymentsform('block')\r\n        }\r\n        if (paymentsform === 'block') {\r\n            setpaymentsform('none')\r\n            setpaymentindex()\r\n        }\r\n    }\r\n    const toggle_bill = () => {\r\n        if (billform === 'none') {\r\n            setbillform('block')\r\n        }\r\n        if (billform === 'block') {\r\n            setbillform('none')\r\n            setbillindex()\r\n        }\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    async function UpadteStatus(e) {\r\n        if (e.target.value && adminid && e.target.name) {\r\n            try {\r\n                Notiflix.Loading.circle('Updating Appointment Status', {\r\n                    backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                    svgColor: '#96351E',\r\n                    messageColor: '#96351E',\r\n                    messageFontSize: '1.5rem'\r\n                }\r\n                )\r\n                await axios.post(`${url}/appointment/change/status`, {\r\n                    appointment_id: e.target.name,\r\n                    status: e.target.value,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    props.fetchallAppointmentslist()\r\n                    Notiflix.Loading.remove()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                Notiflix.Loading.remove()\r\n            }\r\n        } else {\r\n            Notiflix.Notify.alert('Please try Again')\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n    const Generate_Bill = async (id) => {\r\n        Notiflix.Loading.circle('Generating Bill', {\r\n            backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n            svgColor: '#96351E',\r\n            messageColor: '#96351E',\r\n            messageFontSize: '1.5rem'\r\n        })\r\n        try {\r\n            axios.post(`${url}/appointment/bill`, {\r\n                appointment_id: id,\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                console.log(response)\r\n                Notiflix.Notify.success(response.data.message)\r\n                window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n                Notiflix.Loading.remove()\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            Notiflix.Loading.remove()\r\n        }\r\n    }\r\n    const Generate_Prescription = async (id) => {\r\n        Notiflix.Loading.circle('Generating Prescription', {\r\n            backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n            svgColor: '#96351E',\r\n            messageColor: '#96351E',\r\n            messageFontSize: '1.5rem'\r\n        })\r\n        try {\r\n            axios.post(`${url}/swift/pdf`, {\r\n                appointment_id: id,\r\n            }).then((response) => {\r\n                console.log(response)\r\n                Notiflix.Notify.success(response.data.message)\r\n                Notiflix.Loading.remove()\r\n                window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            Notiflix.Loading.remove()\r\n        }\r\n    }\r\n    const Send_On_WhatsApp = async (id, phone, check) => {\r\n        let checkpres = check\r\n        if (phone == undefined || phone == null) {\r\n            Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n        } else {\r\n            Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E',\r\n                messageColor: '#96351E',\r\n                messageFontSize: '1.5rem'\r\n            })\r\n            try {\r\n                axios.post(`${url}/send/bill/whatsapp`, {\r\n                    appointment_id: id,\r\n                    check_pres: checkpres,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    console.log(response)\r\n                    Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n                    Notiflix.Loading.remove()\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                Notiflix.Loading.remove()\r\n            }\r\n        }\r\n\r\n    }\r\n    const Confirm_For_Prescription = (id, phone) => {\r\n\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Choose Option to Send `,\r\n            `Do you want to send the Bill`,\r\n            'With the Prescription ?',\r\n            'Without the Prescription ?',\r\n            () => {\r\n                Send_On_WhatsApp(id, phone, 1)\r\n            },\r\n            () => {\r\n                Send_On_WhatsApp(id, phone, 0)\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const Send_On_SMS = async (id, phone, check) => {\r\n        let checkpres = check\r\n        if (phone == undefined || phone == null) {\r\n            Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n        } else {\r\n            Notiflix.Loading.circle('Sending Bill on SMS', {\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E',\r\n                messageColor: '#96351E',\r\n                messageFontSize: '1.5rem'\r\n            })\r\n            try {\r\n                axios.post(`${url}/send/bill/sms`, {\r\n                    appointment_id: id,\r\n                    check_bill: 1,\r\n                    check_pre: checkpres,\r\n                }).then((response) => {\r\n                    console.log(response)\r\n                    Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n                    Notiflix.Loading.remove()\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                Notiflix.Loading.remove()\r\n            }\r\n        }\r\n\r\n    }\r\n    const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Choose Option to Send `,\r\n            `Do you want to send the Bill`,\r\n            'With the Prescription ?',\r\n            'Without the Prescription ?',\r\n            () => {\r\n                Send_On_SMS(id, phone, 1)\r\n            },\r\n            () => {\r\n                Send_On_SMS(id, phone, 0)\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n    console.log(permission, permission.appointment_edit)\r\n    return (\r\n        <>\r\n            {\r\n                props.isLoading == true ? (\r\n\r\n                    <div className='container text-center position-absolute start-0 end-0' >\r\n                        <h4>Hold on its Loading</h4>\r\n                        <div className=\"spinner-grow bg-secondary col-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (props.getAppointments.length == 0 ? (\r\n\r\n                    <div className=\"container text-center text-charcoal position-absolute start-0 end-0\">\r\n                        <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n                    </div>\r\n\r\n                ) : (\r\n\r\n                    props.getAppointments.map((data, key) => (\r\n                        <tr id={key} key={key} className='align-middle text-start'>\r\n                            <td className={`d-${permission.appointment_edit == 1 ? '' : 'none'} bg-${tableindex == key ? 'lightyellow' : ''} text-center ps-3`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} onClick={(e) => { openapppointmentform(); settableindex(key) }} className=\"btn p-0 m-0\" />\r\n                            </td>\r\n                            <td className='text-start'>\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    <div className=\"col-1 p-0 m-0 me-2\">\r\n                                        <div className={`rounded-circle border-1 button-${props.status_color(data.appointment_status)}`} style={{ height: '12px', width: '12px' }}></div>\r\n                                    </div>\r\n                                    <div className=\"col-5 p-0 m-0 \">\r\n                                        <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent fw-bold border-0 `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                            <option className=\"button text-start\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                                            <option className=\"button-lightred\" value='1'>Pending</option>\r\n                                            <option className=\"button-lightblue\" value='2'>Booked</option>\r\n                                            <option className=\"button-lightred\" value='3'>Cancelled</option>\r\n                                            <option className=\"button-pearl\" value='4'>QR Generated</option>\r\n                                            <option className=\"button-brandy\" value='5'>Checked_in</option>\r\n                                            <option className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                                            <option className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                                            <option className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                                            <option className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                                            <option className=\"button-lightgreen\" value='10'>Completed</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>\r\n                                <div className=\"col-auto\">\r\n                                    {data.patient != null && data.patient.full_name != null ? data.patient.full_name : ''}\r\n                                </div>\r\n                                <div className=\"col-auto text-burntumber\">\r\n                                    {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"}\r\n                                </div>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                            {/* <td className='text-charcoal fw-bold'></td> */}\r\n                            <td className='text-charcoal fw-bold'>\r\n                                <div className=\"col-auto\">\r\n                                    {data.timeslot && data.timeslot.date !== null ? reversefunction(data.timeslot.date) : ''}\r\n                                </div>\r\n                                <div className=\"col-auto text-burntumber\">\r\n                                    {data.follow_up_date ? 'F/U- ' + reversefunction(data.follow_up_date ? data.follow_up_date : '') : ''}\r\n                                </div>\r\n\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>{data.timeslot && data.timeslot.time_from !== null ? props.tConvert(data.timeslot.time_from) : ''}</td>\r\n                            <td className='text-charcoal fw-bold text-start' style={{ width: 'min-content' }}>\r\n                                <div className=\"col-auto\">\r\n                                    ₹{data.total_amount && data.total_amount !== null ? data.total_amount : data.total_amount}\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                    <AmountPaid appointmentData={data} />\r\n                                </div>\r\n                            </td>\r\n\r\n                            {/* <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td> */}\r\n                            {/* <td>\r\n                              \r\n                             </td> */}\r\n                            {/* <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td> */}\r\n                            <td className='text-center  align-self-center p-0 m-0 '>\r\n                                <div className=\"dropdown text-decoration-none d-inline-block\">\r\n                                    <button className=\"button p-0 m-0 bg-transparent border-0 p-0  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu shadow-sm text-decoration-none p-0 m-0 p-2\" style={{ '-webkit-appearance': 'none', width: 'max-content' }}>\r\n                                        <li className='dropdown-item border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}><img className='m-2 img-fluid' style={{ 'width': '1.8rem' }} src={process.env.PUBLIC_URL + 'images/bill.png'} />Bill</li>\r\n                                        <li className={`dropdown-item border-bottom p-0 m-0 align-items-center d-${permission.appointment_charges_edit == 1 ? '' : 'none'}`} onClick={() => { setpaymentindex(key); toggle_payments(); }}><img className='m-2 img-fluid' style={{ 'width': '1.6rem' }} src={process.env.PUBLIC_URL + 'images/rupee.png'} />Payments</li>\r\n                                        <li className='dropdown-item border-bottom p-0 m-0 align-items-center' onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} />Generate Bill</li>\r\n                                        <li className=\"dropdown-item border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Prescription </li>\r\n                                        <li className=\"dropdown-item border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Send on Whats App </li>\r\n                                        <li className=\"dropdown-item p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\" style={{ width: \"1.8rem\" }} />{' '}Send on SMS</li>\r\n                                    </ul>\r\n                                </div></td>\r\n                            {\r\n                                tableindex == key ? (\r\n                                    <td className={` d-${tableindex == key ? appointmentform : 'none'} updateappointment bg-seashell col-lg-8 col-xl-5 col-md-8 col-sm-10 col-12 start-0 end-0 fw-none  mx-auto top-0 border border-1 rounded-1 position-absolute`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                                        <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} closeappointmentform={closeappointmentform} doctorid={props.doctorid} fetchapi={props.fetchapi} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} />\r\n                                    </td>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                billindex == key ? (\r\n                                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 top-0 col-sm-12 col-12 col-xl-6 border border-2 rounded-1 shadow-sm position-absolute`} style={{ zIndex: '3', marginTop: '6rem' }}>\r\n                                        <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            toggle_bill={toggle_bill}\r\n                                            patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            appointmentid={data.id}\r\n                                            doctorfee={data.doctor.consulationFee} /></td>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                paymentindex == key ? (\r\n                                    <td className={`payments top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-12 col-12 col-xl-6 rounded-1 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                                        <Payments\r\n                                            toggle_payments={toggle_payments}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                    </td>\r\n                                ) : (<></>)\r\n                            }\r\n\r\n                        </tr>\r\n                    ))\r\n                )\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport { AllAppointmentslist }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedAppointments.jsx",["964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Payments } from './Payments.jsx'\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport Notiflix from 'notiflix';\r\nimport { URL, Permissions } from '../../index'\r\nimport '../../css/appointment.css'\r\nimport { Bill } from './Bill'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nconst SelectedAppointments = (props) => {\r\n  const url = useContext(URL);\r\n  const permission = useContext(Permissions)\r\n  let adminid = localStorage.getItem('id')\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [paymentindex, setpaymentindex] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [tableindex, settableindex] = useState()\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n    }\r\n  }\r\n  const closeappointmentform = () => {\r\n\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  }\r\n  const toggle_payments = () => {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentindex()\r\n    }\r\n  }\r\n  const toggle_bill = () => {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n    if (billform === 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Notiflix.Loading.circle('Updating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E'\r\n        }\r\n        )\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          props.fetchallAppointmentslist()\r\n          Notiflix.Loading.remove()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        alert(e)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          console.log(response)\r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  console.log(paymentindex, props.getAppointments)\r\n  return (\r\n    <>\r\n      {\r\n        props.isselectedLoading == true ? (\r\n          <div className='container text-center position-absolute start-0 end-0'>\r\n            <h4>Hold on its loading</h4>\r\n            <div class=\"spinner-grow bg-charcoal col-2\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n\r\n          props.appointmentdata.length == 0 ? (\r\n            <div className=\"container text-center text-charcoal position-absolute start-0 end-0\">\r\n              <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n            </div>\r\n          ) : (\r\n\r\n            props.appointmentdata.map((data, key) => (\r\n              <tr id={key} className='text-charcoal fw-bold align-middle text-start'>\r\n                <td className={`ps-3 d-${permission.appointment_edit == 1 ? '' : 'none'} bg-${tableindex == key ? 'lightyellow' : ''}`}>\r\n                  <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} onClick={(e) => { settableindex(key); openapppointmentform(); }} className=\"btn p-0 m-0\" />\r\n                </td>\r\n                <td>\r\n                  <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-1 p-0 m-0 me-2\">\r\n                      <div className={`rounded-circle border-1 button-${props.status_color(data.appointment_status)}`} style={{ height: '12px', width: '12px' }}></div>\r\n                    </div>\r\n                    <div className=\"col-5 p-0 m-0 \">\r\n                      <select disabled={permission.appointment_edit == 1 ? false : true} className={`fw-bold bg-transparent border-0 `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                        <option className=\"button text-start\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                        <option className=\"button-lightred\" value='1'>Pending</option>\r\n                        <option className=\"button-lightblue\" value='2'>Booked</option>\r\n                        <option className=\"button-lightred\" value='3'>Cancelled</option>\r\n                        <option className=\"button-pearl\" value='4'>QR Generated</option>\r\n                        <option className=\"button-brandy\" value='5'>Checked_in</option>\r\n                        <option className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                        <option className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                        <option className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                        <option className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                        <option className=\"button-lightgreen\" value='10'>Completed</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                {/* <td><button className={`btn button-${props.status_color(data.appointment_status)} text-charcoal fw-bold rounded-5`}>{props.status(data.appointment_status)}</button></td> */}\r\n                <td>\r\n                  <div className=\"col-auto\">\r\n                    {data.patient != null && data.patient.full_name != null ? data.patient.full_name : ''}\r\n                  </div>\r\n                  <div className=\"col-auto text-burntumber\">\r\n                    {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"}\r\n                  </div>\r\n                </td>\r\n                <td>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : ''}</td>\r\n                {/* <td></td> */}\r\n                <td>\r\n                  <div className=\"col-auto\">\r\n                    {data.timeslot.date && data.timeslot.date !== null ? reversefunction(data.timeslot.date) : ''}\r\n                  </div>\r\n                  <div className=\"col-auto text-burntumber\">\r\n                    {data.follow_up_date ? 'F/U- ' + reversefunction(data.follow_up_date ? data.follow_up_date : '') : ''}\r\n                  </div>\r\n                </td>\r\n                <td>{props.tConvert(data.timeslot.time_from)}</td>\r\n                <td>\r\n                  <div className=\"col-auto\">\r\n                    {data.total_amount}\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <AmountPaid appointmentData={data} />\r\n                  </div>\r\n                </td>\r\n                {/* <td className=''></td> */}\r\n                {/* <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td> */}\r\n                {/* <td>{data.follow_up_date ? data.follow_up_date : ''}</td> */}\r\n                {/* <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td> */}\r\n                <td className='text-center'><div className=\"dropdown text-decoration-none d-inline-block bg-transparent\">\r\n                  <button className=\"button p-0 m-0 px-1 py-1 bg-transparent border-0 p-0  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                  </button>\r\n                  <ul className=\"dropdown-menu text-decoration-none bg-white p-2\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content' }}>\r\n                    <li className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}><img className='m-2 img-fluid' style={{ 'width': '1.8rem' }} src={process.env.PUBLIC_URL + 'images/bill.png'} />Bill</li>\r\n                    <li className={`dropdown-item  border-bottom p-0 m-0 align-items-center d-${permission.appointment_charges_edit == 1 ? '' : 'none'}`} onClick={() => { setpaymentindex(key); toggle_payments(); }}><img className='m-2 img-fluid' style={{ 'width': '1.6rem' }} src={process.env.PUBLIC_URL + 'images/rupee.png'} />Payments</li>\r\n                    <li className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} />Generate Bill</li>\r\n                    <li className=\"dropdown-item d-flex border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Generate Prescription </li>\r\n                    <li className=\"dropdown-item d-flex border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" style={{ width: \"2rem\" }} /> Send on Whats App </li>\r\n                    <li className=\"dropdown-item d-flex p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />{' '}Send on SMS</li>\r\n                  </ul>\r\n                </div></td>\r\n                {\r\n                  tableindex == key ? (\r\n                    <td className={` d-${tableindex == key ? appointmentform : 'none'}  updateappointment bg-seashell col-lg-8 col-xl-5 col-md-8 col-sm-10 col-12 start-0 end-0  mx-auto top-0 border border-1 rounded-1 position-absolute`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                      <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}\r\n                        patientid={data.patient && data.patient.id !== null ? data.patient.id : 'N/A'} appointmentid={data.id && data.id !== null ? data.id : 'N/A'}\r\n                        closeappointmentform={closeappointmentform} doctorid={props.doctorid ? props.doctorid : 'N/A'}\r\n                        fetchapi={props.fetchapi}\r\n                        appointmentdoctorid={data.doctor.id}\r\n                        appointmentdate={data.appointment_date}\r\n                        appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  billindex == key ? (\r\n                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 top-0 col-sm-12 col-12 col-xl-6 border border-2 rounded-1 shadow position-absolute`} style={{ zIndex: '3', marginTop: '6rem' }}>\r\n                      <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        toggle_bill={toggle_bill}\r\n                        patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        appointmentdata={props.appointmentdata[key]}\r\n                        appointmentid={data.id}\r\n                        doctorfee={data.doctor.consulationFee} /></td>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  paymentindex == key ? (\r\n                    <td className={`payments top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-12 col-12 col-xl-6 rounded-1 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ zIndex: '3', marginTop: '10rem' }}>\r\n                      <Payments\r\n                        toggle_payments={toggle_payments}\r\n                        appointmentdata={props.appointmentdata[key]}\r\n                        fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                    </td>\r\n                  ) : (<></>)\r\n                }\r\n\r\n              </tr>\r\n            ))\r\n          )\r\n        )\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SelectedAppointments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Patients\\UpdatePatient.jsx",["984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n// import {useJsApiLoader, Autocomplete } from '@react-google-maps/api'\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/patient.css';\r\nconst UpdatePatient = (props) => {\r\n    const url = useContext(URL);\r\n    let adminid = localStorage.getItem('id')\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState()\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const ismainref = useRef()\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    async function currentvalue() {\r\n        setgender(props.data.gender)\r\n        if (props.data.address[0] && props.data.address[0].address_line2) {\r\n            setaddress(props.data.address[0].address_line1 + props.data.address[0].address_line2)\r\n        } else if (props.data.address[0] && props.data.address[0].address_line1) {\r\n            setaddress(props.data.address[0].address_line1)\r\n        } else {\r\n            setaddress('')\r\n        }\r\n        props.phonecountrycode ? setcountrycode(props.phonecountrycode) : setcountrycode()\r\n        props.PhoneNo ? setphonenumber(props.PhoneNo) : setphonenumber()\r\n        props.full_name ? setfullname(props.full_name) : setfullname('')\r\n        props.dob ? setDOB(props.dob) : setDOB()\r\n        props.pincode ? setpincode(props.pincode) : setpincode()\r\n        props.email ? setemail(props.email) : setemail('')\r\n        props.location ? setplace(props.location) : setplace()\r\n        props.main ? setmain(props.main) : setmain()\r\n        props.latitude ? setlat(props.latitude) : setlat()\r\n        props.longitude ? setlng(props.longitude) : setlng()\r\n        if (props.parent === null) {\r\n            ismainref.current.value = '1'\r\n            setmain('1')\r\n        } else {\r\n            ismainref.current.value = '2'\r\n            setmain('2')\r\n            setdisplay('block')\r\n            setrelation(props.relation)\r\n        }\r\n\r\n        if (props.data.parent) {\r\n            if (props.data.parent.full_name || props.data.parent.email) {\r\n                setaccountinput(props.data.parent.full_name + \" | \" + props.data.parent.id + \" | \" + props.data.parent.email)\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        currentvalue()\r\n    }, [props.patient_id])\r\n\r\n\r\n    const d = (e) => {\r\n        if (e.target.value == 1) {\r\n            setdisplay('none')\r\n        }\r\n        if (e.target.value == 2) {\r\n            setdisplay('flex')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data.patient_list)\r\n            console.log(response.data.data.patients_list)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(props.patientid, fullname, countrycode, phonenumber, DOB, gender, props.gender, email, address, pincode, props.location, place, main, adminid, props.linkid, props.relation)\r\n    async function UpdatePatient() {\r\n        console.log(props.patientid, fullname, countrycode, phonenumber, DOB, gender, email, address, pincode, props.location, place, main, adminid, props.linkid, props.relation)\r\n        try {\r\n            if (fullname && countrycode && phonenumber && DOB && email && address && pincode && main && adminid) {\r\n                await axios.post(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/update/patient`, {\r\n                    patient_id: props.patientid,\r\n                    full_name: fullname,\r\n                    phone_country_code: countrycode,\r\n                    phone_number: phonenumber,\r\n                    dob: DOB,\r\n                    gender: gender,\r\n                    email: email,\r\n                    address: address,\r\n                    pin_code: pincode,\r\n                    location: props.location ? props.location : place,\r\n                    is_main: main,\r\n                    latitude: props.latitude ? props.latitude : lat,\r\n                    longitude: props.longitude ? props.longitude : lat,\r\n                    relation: main == 2 ? props.relation ? props.relation : relation : '',\r\n                    link_id: main == 2 ? props.linkid ? props.linkid : linkid : '',\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    Notiflix.Notify.success(response.data.message);\r\n                    props.getAllPatients(0)\r\n                    props.CloseUpdatePatient()\r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais');\r\n            }\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Patient Details`,\r\n            `Do you surely want to update ${props.data.full_name}'s Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdatePatient()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(() => {\r\n\r\n        if (data.value !== undefined && data.value.place_id !== undefined) {\r\n            setpincode()\r\n            console.log(data.value.place_id)\r\n            // initialize the map\r\n            const map = new window.google.maps.Map({\r\n                center: { lat: lat, lng: lng },\r\n                zoom: 14\r\n            });\r\n            // initialize the PlacesService object with your API key and map\r\n            const placesService = new window.google.maps.places.PlacesService(map);\r\n\r\n            // send a getDetails request for the place using its Place ID\r\n            placesService.getDetails({\r\n                placeId: data.value.place_id\r\n            }, (placeResult, status) => {\r\n                if (status === 'OK') {\r\n                    console.log(placeResult)\r\n                    // find the address component with type \"postal_code\"\r\n                    const postalCodeComponent = placeResult.address_components.find(component => {\r\n                        return component.types.includes('postal_code');\r\n                    });\r\n\r\n                    if (postalCodeComponent) {\r\n                        const postalCode = postalCodeComponent.short_name;\r\n                        setpincode(postalCode);\r\n                    } else {\r\n                        Notiflix.Notify.warning('Postal code not found for this place.');\r\n                    }\r\n                } else {\r\n                    Notiflix.Notify.failure(`Failed to get place details: ${status}`);\r\n                }\r\n            });\r\n        } else {\r\n            console.log(data)\r\n        }\r\n\r\n        data === \"\" ? setData(\"\") : setData(data);\r\n        setplace(data.label)\r\n    }, [data]);\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n    console.log(props.data)\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2 position-relative\">Update Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseUpdatePatient} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countryCode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countryCode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countryCode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countryCode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countryCode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countryCode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countryCode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countryCode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countryCode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countryCode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countryCode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countryCode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countryCode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countryCode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countryCode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countryCode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countryCode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countryCode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countryCode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countryCode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countryCode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countryCode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countryCode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countryCode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countryCode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countryCode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countryCode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countryCode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countryCode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countryCode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countryCode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countryCode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countryCode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countryCode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countryCode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countryCode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countryCode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countryCode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countryCode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countryCode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countryCode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countryCode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countryCode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countryCode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countryCode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countryCode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countryCode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countryCode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countryCode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countryCode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countryCode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countryCode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countryCode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countryCode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countryCode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countryCode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countryCode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countryCode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countryCode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countryCode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countryCode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countryCode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countryCode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countryCode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countryCode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countryCode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countryCode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countryCode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countryCode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countryCode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countryCode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countryCode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countryCode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countryCode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countryCode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countryCode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countryCode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countryCode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countryCode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countryCode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countryCode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countryCode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countryCode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countryCode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countryCode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countryCode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countryCode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countryCode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countryCode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countryCode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countryCode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countryCode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countryCode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countryCode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countryCode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countryCode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countryCode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countryCode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countryCode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countryCode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countryCode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countryCode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countryCode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countryCode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countryCode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countryCode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countryCode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countryCode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countryCode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countryCode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countryCode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countryCode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countryCode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countryCode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countryCode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countryCode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countryCode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countryCode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countryCode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countryCode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countryCode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countryCode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countryCode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countryCode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countryCode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countryCode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countryCode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countryCode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countryCode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countryCode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countryCode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countryCode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countryCode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countryCode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countryCode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countryCode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countryCode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countryCode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countryCode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countryCode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countryCode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countryCode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countryCode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countryCode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countryCode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countryCode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countryCode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countryCode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countryCode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countryCode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countryCode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countryCode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countryCode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countryCode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countryCode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countryCode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countryCode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countryCode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countryCode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countryCode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countryCode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countryCode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countryCode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countryCode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countryCode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countryCode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countryCode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countryCode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countryCode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countryCode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countryCode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countryCode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countryCode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countryCode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countryCode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countryCode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countryCode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countryCode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countryCode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countryCode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countryCode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countryCode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countryCode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countryCode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countryCode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countryCode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countryCode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countryCode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countryCode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countryCode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countryCode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countryCode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countryCode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countryCode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countryCode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countryCode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countryCode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countryCode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countryCode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countryCode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countryCode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countryCode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countryCode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countryCode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countryCode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countryCode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countryCode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countryCode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countryCode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countryCode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countryCode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countryCode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countryCode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countryCode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <input className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { setphonenumber(e.target.value) }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Location\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: props.location ? props.location : data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                console.log(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' ref={ismainref} onChange={(e) => { setmain(e.target.value); d(e); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`conatiner m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' value={relation ? relation : ''} onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option>Select Relation</option>\r\n                                <option value='Son'>Son</option>\r\n                                <option value='Daughter'>Daughter</option>\r\n                                <option value='Father'>Father</option>\r\n                                <option value='Mother'>Mother</option>\r\n                                <option value='Husband'>Husband</option>\r\n                                <option value='Wife'>Wife</option>\r\n                                <option value='Brother'>Brother</option>\r\n                                <option value='Sister'>Sister</option>\r\n                                <option value='Grand Father'>Grand Father</option>\r\n                                <option value='Grand Mother'>Grand Mother</option>\r\n                                <option value='Grand Child'>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} start-0 end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                    <button className=\"btn button-charcoal\" onClick={confirmmessage} > Save Changes </button>\r\n                </div>\r\n                <div className=\"col-6 pb-2 m-auto text-center\">\r\n                    <button className=\"btn button-pearl \" onClick={currentvalue}>Set Previous</button>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { UpdatePatient }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Doctors\\UpdateDoctor.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customconfirm.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Payments.jsx",["1027","1028","1029","1030","1031","1032","1033","1034","1035","1036"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.fetchallAppointmentslist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            pendings.push(props.appointmentdata.pending_payments[j])\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            if (props.appointmentdata.pending_payments[j].is_paid == 0) {\r\n                pendingid = props.appointmentdata.pending_payments[j].id\r\n            }\r\n\r\n        }\r\n\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.fetchallAppointmentslist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    // console.log(advancepaymentmethods)\r\n    console.log(props.appointmentdata)\r\n    console.log(advancepaid)\r\n    return (\r\n        <div className=' text-start p-0 m-0'>\r\n            <h5 className='text-start fw-bold'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.toggle_payments}></button>\r\n            <div className=\"d-flex justify-content-start p-0 m-0 gx-2 mt-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} rounded-1 me-1 border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0  d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h6 className='text-charcoal75 fw-bolder mt-2 mb-1'>Advance Payments from {props.patientname}</h6>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n\r\n                            <table className='bg-pearl table rounded-1'>\r\n                                <thead className=''>\r\n                                    <th className='ps-2'>Description</th>\r\n                                    <th className='ps-2'>Amount</th>\r\n                                </thead>\r\n                                <tbody className='align-middle'>\r\n                                    <tr >\r\n                                        <td></td>\r\n                                        <td>{advancepaid.advnace_total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n\r\n                            // <div className='row align-items-center p-0 m-0'>\r\n                            //     <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                            //     <input className=' col-6 p-0 m-0 form-control w-50  bg-seashell ' value={advancepaid.advnace_total} />\r\n                            //     <hr />\r\n                            // </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow fw-bolder rounded-1 p-2 m-1 mt-2 text-center'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <hr />\r\n                <h6 className='text-charcoal75 fw-bolder mb-2 mt-3'>Add Advance Payment</h6>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-3 ps-0\">\r\n                        <p className='text-charcoal p-0 m-0 fw-bold'>Description</p>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <p className='text-charcoal fw-bold mt-3'>Add Payment Method</p>\r\n                    </div>\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2 justify-content-around\">\r\n                            <div className=\"col-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-4 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 \">\r\n                                <button className='btn p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container text-center\">\r\n                    <button className='button  button-charcoal rounded-1 mt-3 mb-2' disabled={Description ? false : true} onClick={AddadvancePaymentMethods}>Save</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} `}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h6 className='fw-bolder text-charcoal75 mt-2'>Previous paid payments</h6>\r\n                                <div className='p-0 m-0 scroll scroll-y rounded-1'>\r\n                                    <table className=' p-0 m-0 border-0 bg-pearl p-2 '>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='p-0 m-0 px-1 border-bottom' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Cash</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Card</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Paytm</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Phonepe</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Razorpay</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Wire-Transfer</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={`d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='p-0 m-0 px-1'>{data.paid_amount}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} `}>\r\n                                            <div className=\"row p-0 m-0 align-items-center mt-2 justify-content-center\">\r\n                                                <div className=\"col-auto\">\r\n                                                    <span className='text-burntumber fw-bolder'>Pending Amount: {Data.pending_amount}</span>\r\n                                                </div>\r\n                                                <div className=\"col-auto\">\r\n                                                    <button className='btn p-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={``}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-start\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 ms-2 \">\r\n\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n                                <div className=\"container text-center\">\r\n                                    <button className='button button-charcoal mt-lg-4 mt-md-3 mt-1 mb-2' onClick={UpdatePendingPayments}>Save</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    ) : (\r\n\r\n                        props.paymentsi !== undefined ? (\r\n                            <div className='rounded-1 bg-lightgreen fw-bolder p-2 my-4 text-center'>Please generate the bill first</div>\r\n                        ) : (\r\n                            <div className='rounded-1 bg-lightgreen fw-bolder p-2 my-4 text-center'>No Pending Payments Found</div>\r\n                        )\r\n\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AmountPaid.jsx",["1037","1038","1039","1040","1041","1042"],[],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/bootstrap.css'\r\nimport { Payments } from './Payments'\r\nconst AmountPaid = (props) => {\r\n  const [openpayments, setopenpayments] = useState('none')\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n  const [paidpendingtotal, setpaidpending] = useState(0)\r\n  const calculate = () => {\r\n    var data = props.appointmentData;\r\n    if (data.payment_method != null) {\r\n      var payment = Object.values(JSON.parse(data.payment_method_details))\r\n      var val = 0;\r\n      for (let i = 0; i < payment.length; i++) {\r\n        var element = parseFloat(payment[i]);\r\n        val += element\r\n        setTotalAmount(val)\r\n      }\r\n    }\r\n  }\r\n  const CalculatePaidPendings = () => {\r\n    let totalpaidpendings = []\r\n    let pendingtotal = 0\r\n    if (props.appointmentData.pending_payments && props.appointmentData.pending_payments != null) {\r\n      for (let i = 0; i < props.appointmentData.pending_payments.length; i++) {\r\n        if (props.appointmentData.pending_payments[i].is_paid == 1) {\r\n          totalpaidpendings.push(props.appointmentData.pending_payments[i].paid_amount !== null ? props.appointmentData.pending_payments[i].paid_amount : 0)\r\n        }\r\n      }\r\n    }\r\n\r\n    totalpaidpendings.forEach(item => {\r\n      pendingtotal += Number(item)\r\n    })\r\n    setpaidpending(pendingtotal)\r\n  }\r\n  useEffect(() => {\r\n    calculate()\r\n    CalculatePaidPendings()\r\n  }, [])\r\n\r\n  return (\r\n    totalAmount != null ? (\r\n      totalAmount + paidpendingtotal == props.appointmentData.total_amount ? (\r\n\r\n\r\n        <div className='text-white bg-lightgreen px-2 fw-normal rounded-2' style={{ letterSpacing: '1px' }}>Paid ₹{Number(totalAmount) + Number(paidpendingtotal)}</div>\r\n        // <div className=\"ms-1 btn button-sm rounded-1 button-lightgreen fw-bold\" style={{ fontSize: '0.75rem', letterSpacing: '0.5px', padding: '0.12rem' }}>{Number(totalAmount) + Number(paidpendingtotal)} Done</div>\r\n      ) : (\r\n        <div className=\"text-burntumber bg-lightred px-2 fw-normal rounded-2\" style={{ letterSpacing: '1px' }}>Pending ₹{(Number(props.appointmentData.total_amount) - (Number(totalAmount) + Number(paidpendingtotal))).toFixed(1)} </div>\r\n\r\n      )\r\n\r\n    ) : (\r\n      <button className=\"btn button-seashell p-0 m-0\" type=\"button\" disabled>\r\n        <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      </button>\r\n    )\r\n\r\n  )\r\n}\r\n\r\nexport default AmountPaid","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\SelectedTimeAppointment.jsx",["1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate, Clinic, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix'\r\n\r\nimport '../../css/dashboard.css'\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const Doclist = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n\r\n    // Functions\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time]\r\n        if (time.length > 1) {\r\n            time = time.slice(1)\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM '\r\n            time[0] = +time[0] % 12 || 12\r\n        }\r\n        return time.join('')\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block')\r\n        } else {\r\n            setdisplaysearchlist('none')\r\n        }\r\n    }\r\n    const get_value = (data) => {\r\n        setsearchinput(data.full_name)\r\n        setpatientid(data.id)\r\n        setdisplaysearchlist('none')\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && doctorid && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                setload(false)\r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n            setload(false)\r\n        }\r\n    }\r\n    // console.log(displaysearchlist, props.DoctorName)\r\n    // Functions\r\n    console.log(doctorname, doctorid);\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment  at <span className=' text-charcoal fw-bold border-0 fs-6'>{tConvert(props.selectedtime)}</span></h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <hr className='p-0 m-0 mb-1' />\r\n            <div className=\" text-start ms-3 clinics align-self-center mb-2 \">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}>\r\n                            <img src={process.env.PUBLIC_URL + '/images/location.png'} className=' align-self-center ' style={{ width: '1.3rem' }} /> {data.title} {data.address}</label>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control bg-pearl border-0\" value={searchinput ? searchinput : ''} onChange={(e) => { searchpatient(e) }} />\r\n                    <div className={`col-6 position-absolute d-${displaysearchlist} rounded-1 `} style={{ zIndex: 3 }}>\r\n                        {\r\n                            searchload ? (\r\n                                <option className=\"btn col-12 text-charcoal75 bg-pearl p-0 m-0 ps-1 mt-1\">Loading... </option>\r\n                            ) : (\r\n                                searchlist !== undefined && searchlist.length == 0 ? (\r\n                                    <option className=\"text-burntumber col-12 p-0 m-0 bg-pearl shadow rounded mt-1 p-2\">Patient not found</option>\r\n                                ) : (\r\n                                    <div className='mt-1 searchresult bg-seashell shadow rounded-1 bg-pearl border border-1 col-12  ' >\r\n                                        {\r\n                                            searchlist.map((data, i) => (\r\n                                                <button style={{ cursor: 'pointer' }} className={`col-12 bg-${i % 2 == 0 ? 'seashell' : 'pearl'} btn d-block p-2 fw-bold text-charcoal text-start border-bottom align-self-center`} name={data.id} value={data.full_name} onClick={() => { get_value(data) }}>{data.full_name} {data.phone_number}</button>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"d-flex p-0 m-0 text-start justify-content-around\">\r\n                        <div className='button button-charcoal50-outline align-self-center '> Dr.{doctorname}</div>\r\n                        <div className=\"button button-charcoal50-outline ms-3\" >{reversefunction(APIDate)}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                load ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"col-6 donebutton py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"button button-charcoal\" onClick={BookAppointment}> Done </button>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\SelectedDoctorSlot.jsx",["1055","1056","1057","1058","1059","1060","1061","1062","1063"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState()\r\n    const [docdate, setdocdate] = useState()\r\n    const [fromtime, setfromtime] = useState()\r\n    const [totime, settotime] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n        if (doctorid && APIDate && fromtime && totime && clinicid && admin_id) {\r\n            Notiflix.Loading.pulse({\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E'\r\n            })\r\n            await axios.post(`${url}/doctor/add/timeslots`, {\r\n                doctor_id: doctorid,\r\n                date: APIDate,\r\n                time_from: fromtime,\r\n                time_to: totime,\r\n                clinic_id: clinicid,\r\n                admin_id: admin_id\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                props.CloseAddQuickSlots()\r\n                props.fetchapi()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Doctor Slot`,\r\n            `Do you surely want to add more Time Slots of Dr. ${doctorname}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        )\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center pt-1\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 text-center clinics\">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><img src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.5rem' }} />{data.title} {data.address}</label>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row mt-2 justify-content-center gx-2\">\r\n                <div className=\"col-auto\">\r\n                    <button className='button button-charcoal50-outline'>{doctorname}</button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div type=\"date\" disabled className=\"form-control col-10 button button-charcoal50-outline\" >{reversefunction(APIDate)}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 mt-2 justify-content-center\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                </div>\r\n                <div className='col-auto'>-</div>\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\UpdateAppointment.jsx",["1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center p-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute p-2 mt-1\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell border-0 p-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-end text-charcoal `}>\r\n                                <div className=\"row p-0 m-0 align-items-end\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img className='' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal rounded-1 bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>Dr. {data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\" border-0 col-12 bg-seashell \"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell rounded-1 border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal50 fw-bold'>Selected Time</label>\r\n                        <div className=\"col-12 p-0 m-0 selectedtime\">\r\n                            <button className='button button-charcoal50-outline rounded-1 fw-bold shadow-none' style={{ letterSpacing: '1px' }} >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <p className=\"m-0 mt-2 fw-bold ps-2 pt-2\" style={{ letterSpacing: '1px' }}>Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ps-2\">\r\n                    {ApiDocTimefrom  && ApiDocTimefrom.length !== 0  ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} px-3 py-2 rounded-1 fw-bold m-1`} style={{ letterSpacing: '1px' }} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline rounded-1 px-3 py-2 m-1 fw-bold\" style={{ letterSpacing: '1px' }} id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded fw-bold text-burntumber bg-lightred'>No Time Slots Available</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button className='btn button-charcoal' onClick={confirmmessage}>Done</button>\r\n                                </div>\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button className=\"btn btn-light border \" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Bill.jsx",["1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { URL } from \"../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport \"../../css/dashboard.css\";\r\nimport axios from \"axios\";\r\nconst Bill = (props) => {\r\n  const url = useContext(URL);\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const Charges = {\r\n    description: \"\",\r\n    amount: 0,\r\n    discount: 0,\r\n    cgst: 0,\r\n    sgst: 0,\r\n    gross_amount: 0,\r\n    id: \"\",\r\n  };\r\n  const paymentmethoddetails = {\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  };\r\n  //Advance payments\r\n  const [loadadvancepayments, setloadadvancepayments] = useState(false);\r\n  const [advancepayments, setadvancepayments] = useState();\r\n\r\n  //ExtraCharge\r\n  const [extrachargecount, setextrachargecount] = useState([]);\r\n\r\n  //Bill\r\n  const [constext, setconstext] = useState(\"\");\r\n  const [docdiscount, setdocdiscount] = useState(0);\r\n  const [coupondiscount, setcoupondiscount] = useState(0);\r\n  const [aartasdiscount, setaartasdiscount] = useState(0);\r\n  const [AtC, setAtC] = useState(0);\r\n  const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee);\r\n  const [SGST, setSGST] = useState();\r\n  const [CGST, setCGST] = useState();\r\n  const [paymentmethods, setpaymentmethods] = useState([]);\r\n  const [load, setload] = useState();\r\n  const [Addcons, setAddcons] = useState(false)\r\n\r\n  async function AddExtraCharges() {\r\n    let extracharges = [];\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id) {\r\n        for (\r\n          let j = 0;\r\n          j < props.appointmentdata[i].other_charges.length;\r\n          j++\r\n        ) {\r\n          extracharges.push({\r\n            description:\r\n              props.appointmentdata[i].other_charges[j].description != null\r\n                ? props.appointmentdata[i].other_charges[j].description\r\n                : \"N/A\",\r\n            amount:\r\n              props.appointmentdata[i].other_charges[j].total_amount != null\r\n                ? props.appointmentdata[i].other_charges[j].total_amount\r\n                : 0,\r\n            discount:\r\n              props.appointmentdata[i].other_charges[j].discount != null\r\n                ? props.appointmentdata[i].other_charges[j].discount\r\n                : 0,\r\n            cgst:\r\n              props.appointmentdata[i].other_charges[j] != null &&\r\n                props.appointmentdata[i].other_charges[j].gst_rate != null\r\n                ? props.appointmentdata[i].other_charges[j].gst_rate / 2\r\n                : 0,\r\n            sgst:\r\n              props.appointmentdata[i].other_charges[j] != null &&\r\n                props.appointmentdata[i].other_charges[j].gst_rate != null\r\n                ? props.appointmentdata[i].other_charges[j].gst_rate / 2\r\n                : 0,\r\n            gross_amount:\r\n              props.appointmentdata[i].other_charges[j].final_amount &&\r\n                props.appointmentdata[i].other_charges[j].final_amount !== null\r\n                ? props.appointmentdata[i].other_charges[j].final_amount\r\n                : \"\",\r\n            id:\r\n              props.appointmentdata[i].other_charges[j].id &&\r\n                props.appointmentdata[i].other_charges[j].id != null\r\n                ? props.appointmentdata[i].other_charges[j].id\r\n                : \"\",\r\n          });\r\n        }\r\n        setaartasdiscount(props.appointmentdata[i].aartas_discount);\r\n        setdocdiscount(props.appointmentdata[i].doc_discount);\r\n        setconstext(props.appointmentdata[i].cons_text);\r\n      }\r\n    }\r\n    setextrachargecount(extracharges);\r\n  }\r\n  async function AddPaymentMethods() {\r\n    let Payments = [];\r\n    let amounts = [];\r\n    let allamounts = [];\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id && props.appointmentdata[i].payment_method_details) {\r\n        Payments.push(Object.keys(JSON.parse(props.appointmentdata[i].payment_method_details)));\r\n        amounts.push(Object.values(JSON.parse(props.appointmentdata[i].payment_method_details)));\r\n      }\r\n    }\r\n    let paymentobj = [];\r\n    let p = {\r\n      paymentmethod: \"\",\r\n      amount: 0,\r\n    };\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(\r\n          (p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n        );\r\n      }\r\n      setpaymentmethods(allamounts);\r\n    }\r\n\r\n    paymentmethods.push(paymentobj);\r\n  }\r\n  useEffect(() => {\r\n    AddExtraCharges();\r\n    AddPaymentMethods();\r\n  }, [props.billform]);\r\n  // useEffect(() => {\r\n  //     AddExtraCharges()\r\n  // }, [props.isLoading])\r\n\r\n  async function DeleteExtraCharges(i) {\r\n    if (extrachargecount[i].id) {\r\n      setextrachargecount([]);\r\n      await axios\r\n        .post(`${url}/appointment/delete/extra/charges`, {\r\n          id: extrachargecount[i].id,\r\n        })\r\n        .then((response) => {\r\n          setextrachargecount([]);\r\n          extrachargecount.splice(i, i);\r\n          Notiflix.Notify.success(response.data.message);\r\n          props.Appointmentlist();\r\n        });\r\n    } else {\r\n      extrachargecount.splice(i, i);\r\n    }\r\n  }\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i);\r\n  }\r\n  function Calculate_gst(amount, discount, cgst, sgst) {\r\n    setextrachargecount((prevState) => [...prevState]);\r\n    let AMOUNT = amount ? amount : 0;\r\n    let DISCOUNT = discount ? discount : 0;\r\n    let CGST = cgst ? cgst : 0;\r\n    let SGST = sgst ? sgst : 0;\r\n    let total = AMOUNT - DISCOUNT;\r\n    CGST = ((CGST + SGST) * total) / 100;\r\n    total = total + CGST;\r\n    total = total.toFixed(2);\r\n    return total;\r\n  }\r\n  function Get_total_Seperate_gsts() {\r\n    let grosstotal = [];\r\n    let total = 0;\r\n    for (let i = 0; i < extrachargecount.length; i++) {\r\n      grosstotal.push(\r\n        (Number(extrachargecount[i].gross_amount) -\r\n          (Number(extrachargecount[i].amount) -\r\n            Number(extrachargecount[i].discount))) /\r\n        2\r\n      );\r\n    }\r\n    // console.log(grosstotal,total)\r\n    grosstotal.forEach((item) => {\r\n      total += item;\r\n    });\r\n    total = total.toFixed(2);\r\n    return total;\r\n  }\r\n  function Get_Grand_Total() {\r\n    let total = 0;\r\n    let discounts =\r\n      Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount);\r\n    extrachargecount.map((data) => (total += Number(data.gross_amount)));\r\n    total = total + Number(AddConsAmt) - discounts;\r\n    total = total.toFixed(2);\r\n    if (Addcons == true) {\r\n      total = Number(total) + Number(ConsumableAmount())\r\n    } else {\r\n      total = total\r\n    }\r\n    return total;\r\n  }\r\n  function Total_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      for (let i = 0; i < paymentmethods.length; i++) {\r\n        totalarr.push(Number(paymentmethods[i].amount));\r\n      }\r\n      totalarr.forEach((item) => {\r\n        total += Number(item);\r\n      });\r\n      total = total.toFixed(2);\r\n      return total;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  function Return_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    let Advance = 0;\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      totalarr.push(Number(paymentmethods[i].amount));\r\n    }\r\n    totalarr.forEach((item) => {\r\n      total += item;\r\n    });\r\n    if (total > Get_Grand_Total()) {\r\n      Advance = total - Get_Grand_Total();\r\n      return Advance;\r\n    } else {\r\n      return Advance;\r\n    }\r\n  }\r\n  async function SaveBill() {\r\n    let GrandTotal = Get_Grand_Total();\r\n    GrandTotal = Number(GrandTotal);\r\n    let Docfee = Number(props.doctorfee);\r\n    let DoctorDiscount = Number(docdiscount);\r\n    let AartasDiscount = Number(aartasdiscount);\r\n    let TotalCGST = Get_total_Seperate_gsts();\r\n    let TotalSGST = Get_total_Seperate_gsts();\r\n    let Description = [];\r\n    let TotalAmount = [];\r\n    let Discount = [];\r\n    let Grossamount = [];\r\n    let DiscountedAmount = [];\r\n    let ids = [];\r\n    let gstrate = [];\r\n    console.log(gstrate);\r\n    for (let i = 0; i < extrachargecount.length; i++) {\r\n      Description.push(extrachargecount[i].description);\r\n      TotalAmount.push(Number(extrachargecount[i].amount));\r\n      Discount.push(Number(extrachargecount[i].discount));\r\n      DiscountedAmount.push(\r\n        Number(extrachargecount[i].amount) -\r\n        Number(extrachargecount[i].discount)\r\n      );\r\n      if (extrachargecount[i].id) {\r\n        ids.push(Number(extrachargecount[i].id));\r\n      }\r\n      if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n        gstrate.push(\r\n          Number(extrachargecount[i].cgst + extrachargecount[i].sgst)\r\n        );\r\n      } else {\r\n        gstrate.push(0);\r\n      }\r\n      Grossamount.push(extrachargecount[i].gross_amount);\r\n    }\r\n    let Paymentmethod = [];\r\n    let Paymentmethodsvalue = [];\r\n    for (let j = 0; j < paymentmethods.length; j++) {\r\n      Paymentmethod.push(paymentmethods[j].paymentmethod);\r\n      Paymentmethodsvalue.push(Number(paymentmethods[j].amount));\r\n    }\r\n    let Data = {\r\n      appointment_id: props.appointmentid,\r\n      g_total_main: GrandTotal,\r\n      cons_fee: Docfee,\r\n      description: Description,\r\n      total_amount: TotalAmount,\r\n      discount: Discount,\r\n      amount: DiscountedAmount,\r\n      doc_dis: DoctorDiscount,\r\n      aartas_discount: AartasDiscount,\r\n      payment_method: Paymentmethod,\r\n      payment_method_main: Paymentmethod,\r\n      payment_method_details: Paymentmethodsvalue,\r\n      SGST: Number(TotalSGST),\r\n      CGST: Number(TotalCGST),\r\n      admin_id: Number(adminid),\r\n      cons_text: constext,\r\n      add_to_cart: AtC,\r\n      show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n      ot_id: ids,\r\n      gst_rate: gstrate,\r\n      final_amount: Grossamount,\r\n    };\r\n    async function Payment() {\r\n      try {\r\n        setload(true);\r\n        await axios\r\n          .post(`${url}/appointment/save/charges`, Data)\r\n          .then((response) => {\r\n            props.Appointmentlist();\r\n            props.setsingleload(0);\r\n            setextrachargecount([]);\r\n            Notiflix.Notify.success(response.data.message);\r\n            setload(false);\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n    Payment();\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(0);\r\n        SaveBill();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  const AddtoCart = async () => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments in Cart`,\r\n      `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(1);\r\n        SaveBill();\r\n      },\r\n      () => {\r\n        setAtC(0);\r\n        SaveBill();\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  async function AdvancePayments() {\r\n    setloadadvancepayments(true);\r\n    axios\r\n      .post(`${url}/advance/balance`, {\r\n        patient_id: props.patientid,\r\n      })\r\n      .then((response) => {\r\n        setloadadvancepayments(false);\r\n        setadvancepayments(response.data.data);\r\n      });\r\n  }\r\n  const ConsumableAmount = () => {\r\n    let consumables_amount = []\r\n    let Total = 0;\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id) {\r\n        for (let j = 0; j < props.appointmentdata[i].medicine_used.length; j++) {\r\n          consumables_amount.push(props.appointmentdata[i].medicine_used[j].total_amount)\r\n        }\r\n      }\r\n    }\r\n\r\n    consumables_amount.forEach((data) => (\r\n      Total += data\r\n    ))\r\n    Total = Total.toFixed(2)\r\n    return Total\r\n  }\r\n  console.log(Addcons)\r\n  useEffect(() => {\r\n    AdvancePayments();\r\n    ConsumableAmount();\r\n  }, []);\r\n  return (\r\n    <div className=\"bg-seashell p-0 m-0\">\r\n      <h5 className=\"text-charcoal mt-2 fw-bold text-start ps-3\">\r\n        {props.patientname} Bill\r\n      </h5>\r\n      <button\r\n        className=\"btn btn-close position-absolute top-0 end-0 me-2 mt-1 \"\r\n        onClick={() => {\r\n          props.CloseBillForm();\r\n        }}\r\n      ></button>\r\n      <hr className=\"p-0 m-0\" />\r\n      <div className=\"scroll\">\r\n        {props.isLoading ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"container-fluid text-start px-3 py-2 position-relative\">\r\n              <h6 className=\"fw-bold text-charcoal\">Consultation</h6>\r\n              <label className=\"position-absolute end-0 top-0 mt-2 me-4 text-cahrcoal fw-bolder\">\r\n                <input className=\"form-check-input me-1 \" type=\"checkbox\" checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />\r\n                Add Consultation Amount\r\n              </label>\r\n              <div className=\"row p-0 m-0 justify-content-between\">\r\n                <div className=\"col-8 ps-0 \">\r\n                  <label className=\"text-charcoal75 fw-bold\"> Consultation text </label>\r\n                  <input className=\"form-control bg-seashell fw-bold\" value={constext ? constext : \"\"} onChange={(e) => setconstext(e.target.value)} />\r\n                </div>\r\n                <div className=\"col-4 pe-0 \">\r\n                  <label className=\"text-charcoal75 fw-bold\"> Doctor's Consultation Charge </label>\r\n                  <input className=\"form-control bg-seashell fw-bold\" disabled={true} value={AddConsAmt} />\r\n                </div>\r\n                {/* <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell'>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid text-start p-2 ps-3\">\r\n              <h6 className=\"fw-bolder text-charcoal\">Discounts</h6>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-4 ps-0\">\r\n                  <label className=\"text-charcoal75 fw-bold\">Coupon</label>\r\n                  <input\r\n                    className=\"form-control border-0 fw-bold text-burntumber text-start\"\r\n                    disabled={true}\r\n                    value={coupondiscount ? coupondiscount : \"\"}\r\n                    onChange={(e) => setcoupondiscount(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <label className=\"text-charcoal75 fw-bold\">Doctor</label>\r\n                  <input className=\"form-control bg-seashell fw-bold text-burntumber text-start\" value={docdiscount ? docdiscount : \"\"} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <label className=\"text-charcoal75 fw-bold\">Aartas</label>\r\n                  <input className=\"form-control bg-seashell fw-bold text-burntumber text-start\" value={aartasdiscount ? aartasdiscount : \"\"} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid text-start p-2\">\r\n              <div className=\"bg-seashell position-relative\">\r\n                <div className=\"row p-0 m-0 align-items-center mb-2\">\r\n                  <div className=\"col-auto p-0 m-0 ps-2 pe-1\">\r\n                    <h6 className=\" p-0 m-0 text-charcoal fw-bolder\"> Extra Charges </h6>\r\n                  </div>\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <button className=\"btn p-0 m-0 py-0\" onClick={() => setextrachargecount((prevState) => [...prevState, Charges,])} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"2rem\" }} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {props.isLoading ? (\r\n                  <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                    <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                      <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  extrachargecount.map((data, i) => (\r\n                    <div className=\"container-fluid p-0 m-0\">\r\n                      <div className=\"row p-0 m-0\">\r\n                        <div className=\"col-3\">\r\n                          <label className=\"fw-bold text-charcoal75 text-start ps-1\"> Description </label>\r\n                          <input className=\"form-control bg-seashell m-0 text-start fw-bold \" value={data.description ? data.description : \"\"} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <label className=\"fw-bold text-charcoal75 text-start ps-1\">\r\n                            Amount\r\n                          </label>\r\n                          <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.amount ? data.amount : \"\"} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                        </div>\r\n                        <div className=\"col-2 \">\r\n                          <label className=\"fw-bold text-charcoal75 text-start ps-1\">\r\n                            Discount\r\n                          </label>\r\n                          <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.discount ? data.discount : \"\"} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                        </div>\r\n\r\n                        <div className=\"col-2\">\r\n                          <label className=\"fw-bold text-charcoal75 text-start ps-1\"> GST % </label>\r\n                          <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.cgst && data.sgst ? data.cgst + data.sgst : \"\"} onChange={(e) => { data.cgst = e.target.value / 2; data.sgst = e.target.value / 2; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                        </div>\r\n                        <div className=\"col-2 p-0 align-self-end \">\r\n                          <div className=\"row p-0 m-0 \">\r\n                            <div className=\"col-6 p-0 m-0 fw-bold text-charcoal75 text-end\"> Amount: </div>\r\n                            <input type=\"number\" className=\"col-6 p-0 border-0 text-start bg-seashell m-0 ps-1 fw-bold text-burntumber\" style={{ letterSpacing: \"1px\" }} value={data.amount && data.discount ? data.amount - data.discount : \"\"} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"row p-0 m-0\">\r\n                            <div className=\"col-6 p-0 m-0 fw-bold text-charcoal75 text-end\"> incl. gst: </div>\r\n                            <input className=\"col-6 p-0 border-0 m-0 text-start bg-seashell ps-1 fw-bold text-burntumber\" style={{ letterSpacing: \"1px\" }} value={data.gross_amount ? data.gross_amount : \"\"} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-1 align-self-end\">\r\n                          <button className=\"btn btn-sm p-0 m-0\" onClick={() => { DeleteExtraCharges(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                            <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" style={{ width: \"1.5rem\" }} />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"container-fluid text-start my-2 border border-1 py-1 rounded-1 w-auto mx-3\">\r\n              <div className=\"row p-0 m-0 align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                      <div className=\"row p-0 m-0\">\r\n                        <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                          <label className=\"text-burntumber fw-bold p-0 m-0\"> SGST:- ₹ </label>\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">\r\n                          <input className=\"form-control bg-seashell fw-bold border-0 p-0 m-0\" disabled value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                      <div className=\"row p-0 m-0\">\r\n                        <div className=\"col-auto p-0 m-0\">\r\n                          <label className=\"text-burntumber fw-bold p-0 m-0\"> CGST:- ₹ </label>\r\n                        </div>\r\n                        <div className=\"col-auto p-0 m-0\">\r\n                          <input className=\"form-control bg-seashell fw-bold border-0 p-0 m-0\" disabled value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container-fluid p-1 mt-2\">\r\n              <div className=\"row text-center p-0 m-0 p-0 m-0\">\r\n                <div className=\"col-4 text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Advance Amount Balance </label>\r\n                  {\r\n                    loadadvancepayments ? (\r\n                      <div className=\" py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border spinner-border-sm\" role=\"status\" >\r\n                          <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                      </div>\r\n                    ) : advancepayments ? (\r\n                      <div className=\"text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell\">\r\n                        {\"₹\" + advancepayments.advnace_total}\r\n                      </div>\r\n                    ) : (\r\n                      // <input className='form-control text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell' value= />\r\n                      <div className=\"bg-lightred text-center fw-bold rounded-1 p-2\"> No Advance Payments Found </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-4 p-0 m-0  text-start\">\r\n                  <label className=\"fw-bolder text-charcoal text-start text-wrap\"> Consumables Amount </label>\r\n                  {/* defaultValue=\" not available\" */}\r\n                  <input className=\"form-control bg-seashell text-success text-start rounded-1  border-0 fw-bolder p-0 text-charcoal50\" value={\"₹\" + ConsumableAmount()} />\r\n                </div>\r\n                <div className=\"col-4 \">\r\n                  <div className=\"col-12 text-start\">\r\n                    <input type=\"checkbox\" className=\"form-check-input me-1 p-2 ms-1\" checked={Addcons ? Addcons : ''} onChange={() => { Addcons == false ? setAddcons(true) : setAddcons(false) }} />\r\n                  </div>\r\n                  <div className=\"col-12 p-0 m-0 text-start \">\r\n                    <p className=\"text-burntumber fw-bold text-wrap text-start\">Include Amt in Grand Total </p>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container-fluid text-start position-relative mt-2\">\r\n              <div className=\"row p-0 m-0 align-items-center\">\r\n                <div className=\"col-auto p-0 m-0 ps-1\">\r\n                  <h6 className=\"text-charcoal p-0 m-0 fw-bolder\">Payments</h6>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0\">\r\n                  <button className=\"btn p-0 ms-1\" onClick={() => setpaymentmethods((prevState) => [...prevState, paymentmethoddetails,])} >\r\n                    <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"2rem\" }} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\" justify-content-start p-0 m-0 mt-2 me-3\">\r\n                <div className=\"col-5 text-start p-0 m-0\">\r\n                  <span className=\" text-end p-0 m-0 text-charcoal fw-bold ps-1\"> Amount Recieved:{\" \"} </span>\r\n                  <span className=\"text-success fw-bolder\">\r\n                    {\" \"}\r\n                    {paymentmethods && paymentmethods.length > 0\r\n                      ? \"₹\" + Total_Amount()\r\n                      : \"₹\" + 0}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-5 text-start m-0 p-0\">\r\n                  {/* <span className=\"text-wrap text-center p-0 m-0 fw-bold ps-1\"> Return Amount: </span> */}\r\n                  <span className=\"text-start align-self-end p-0 m-0 ms-1 text-burntumber fw-bolder\"> {\" \"} {Return_Amount() > 0 ? `Amount Exceeded by ${Return_Amount()}` : \"\"}{\" \"} </span>\r\n                </div>\r\n              </div>\r\n\r\n              {paymentmethods.map((data, i) => (\r\n                <div className=\"row p-0 m-0 justify-content-start mt-3 mb-3\">\r\n                  <div className=\"col-4 p-0 me-2 ms-1\">\r\n                    <select className=\"form-control bg-seashell fw-bold\" value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} >\r\n                      <option className=\"text-charcoal75 fw-bolder\"> Payment Method </option>\r\n                      <option value=\"Cash\">Cash</option>\r\n                      <option value=\"Card\">Card</option>\r\n                      <option value=\"Paytm\">Paytm</option>\r\n                      <option value=\"Phonepe\">Phone Pe</option>\r\n                      <option value=\"Wire-Transfer\">Wire Transfer</option>\r\n                      <option value=\"Razorpay\">Razorpay</option>\r\n                      <option value=\"Points\">Points</option>\r\n                      <option value=\"Adjust-Advance\">Adjust-Advance</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-4 p-0 m-0\">\r\n                    <input className=\"form-control bg-seashell fw-bold\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} />\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <button className=\"btn btn-sm p-0 m-0\" onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                      <img src={process.env.PUBLIC_URL + \"/images/delete.png\"} className=\"img-fluid\" style={{ width: \"1rem\" }} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"container-fluid pb-2 position-sticky bottom-0 bg-seashell border border-1 \" style={{ marginTop: '20vh' }}>\r\n          {load ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row p-0 m-0 text-center align-items-center mt-1 \">\r\n              <div className=\"col-4 align-self-end text-start\">\r\n                <label className=\" fw-bolder text-charcoal text-wrap text-start\">\r\n                  Grand Total\r\n                </label>\r\n                <input\r\n                  className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0  bg-seashell\"\r\n                  value={\"₹\" + Get_Grand_Total()}\r\n                />\r\n              </div>\r\n              <div className=\"col-6 d-flex justify-content-end\">\r\n                <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n              <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                <button className=\"button button-charcoal \" onClick={confirmmessage} > Save </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Bill };\r\n","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\Bill.jsx",["1095","1096","1097","1098","1099","1100","1101","1102","1103","1104"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n\r\n\r\n        for (let j = 0; j < props.appointmentdata.other_charges.length; j++) {\r\n            extracharges.push({\r\n                description: props.appointmentdata.other_charges[j].description != null ? props.appointmentdata.other_charges[j].description : 'N/A',\r\n                amount: props.appointmentdata.other_charges[j].total_amount != null ? props.appointmentdata.other_charges[j].total_amount : 0,\r\n                discount: props.appointmentdata.other_charges[j].discount != null ? props.appointmentdata.other_charges[j].discount : 0,\r\n                cgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                sgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                gross_amount: props.appointmentdata.other_charges[j].final_amount && props.appointmentdata.other_charges[j].final_amount !== null ? props.appointmentdata.other_charges[j].final_amount : '',\r\n                id: props.appointmentdata.other_charges[j].id && props.appointmentdata.other_charges[j].id != null ? props.appointmentdata.other_charges[j].id : ''\r\n            })\r\n\r\n        }\r\n        setaartasdiscount(props.appointmentdata.aartas_discount)\r\n        setdocdiscount(props.appointmentdata.doc_discount)\r\n        setconstext(props.appointmentdata.cons_text)\r\n\r\n\r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n        Payments.push(Object.keys(JSON.parse(props.appointmentdata.payment_method_details)))\r\n        amounts.push(Object.values(JSON.parse(props.appointmentdata.payment_method_details)))\r\n\r\n\r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell p-0 m-0'>\r\n            <h5 className='text-charcoal mt-2 fw-bold text-start ps-3'>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2 mt-1 ' onClick={() => { props.toggle_bill() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start px-3 py-2 position-relative\">\r\n                                <h6 className='fw-bold text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-2 me-4 text-cahrcoal fw-bolder'>\r\n                                    <input className='form-check-input me-1 ' type='checkbox' disabled={true} checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0 justify-content-between\">\r\n                                    <div className=\"col-8 ps-0 \">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell fw-bold border-0' disabled={true} value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-4 pe-0 \">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell fw-bold border-0' disabled={true} value={AddConsAmt} />\r\n                                    </div>\r\n                                    {/* <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell'>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2 ps-3\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-4 ps-0\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control border-0 fw-bold text-burntumber text-start' disabled={true} value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell fw-bold text-burntumber text-start border-0' disabled={true} value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell fw-bold text-burntumber text-start border-0' disabled={true} value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell position-relative'>\r\n                                    <div className=\"row p-0 m-0 align-items-center mb-2\">\r\n                                        <div className=\"col-auto p-0 m-0 ps-2 pe-1\">\r\n                                            <h6 className=' p-0 m-0 text-charcoal fw-bolder'>Extra Charges</h6>\r\n                                        </div>\r\n                                        <div className=\"col-auto p-0 m-0 d-none\">\r\n                                            <button className='btn p-0 m-0 py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>Description</label>\r\n                                                            <input className='form-control bg-seashell m-0 text-start fw-bold border-0 ' disabled={true} value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>Amount</label>\r\n                                                            <input type='number' className='form-control text-start bg-seashell m-0 fw-bold border-0 ' disabled={true} value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 \">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>Discount</label>\r\n                                                            <input type='number' className='form-control text-start bg-seashell m-0 fw-bold border-0 ' disabled={true} value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        {/* <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start'>FinalAmount</label>\r\n                                                        </div> */}\r\n                                                        <div className=\"col-2\">\r\n                                                            <label className='fw-bold text-charcoal75 text-start ps-1'>GST %</label>\r\n                                                            <input type='number' className='form-control text-start bg-seashell m-0 fw-bold border-0 ' disabled={true} value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 align-self-end \">\r\n                                                            <div className=\"row p-0 m-0 \">\r\n                                                                <div className='col-6 p-0 m-0 fw-bold text-charcoal75 text-end' >Amount:</div>\r\n                                                                <input type='number' className='col-6 p-0 border-0 text-start bg-seashell m-0 ps-1 fw-bold text-burntumber border-0' disabled={true} style={{ letterSpacing: '1px' }} value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                            </div>\r\n                                                            <div className=\"row p-0 m-0\">\r\n                                                                <div className='col-6 p-0 m-0 fw-bold text-charcoal75 text-end'>incl. gst:</div>\r\n                                                                <input className='col-6 p-0 border-0 m-0 text-start bg-seashell ps-1 fw-bold text-burntumber' disabled={true} style={{ letterSpacing: '1px' }} value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-1 align-self-end d-none\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start my-2  py-1 rounded-1 w-auto mx-3\">\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    {/* <div className=\"col-auto\">\r\n                                        <h6 className='fw-bolder text-charcoal p-0 m-0'>Tax</h6>\r\n                                    </div> */}\r\n                                    <div className=\"col-auto\">\r\n                                        <div className=\"row p-0 m-0\">\r\n                                            <div className=\"col-auto p-0 m-0\">\r\n                                                <div className=\"row p-0 m-0\">\r\n                                                    <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                                        <label className='text-burntumber fw-bold p-0 m-0'>SGST:- ₹</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-auto p-0 m-0\">\r\n                                                        <input className='form-control bg-seashell fw-bold border-0 p-0 m-0' disabled value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-auto p-0 m-0\">\r\n                                                <div className=\"row p-0 m-0\">\r\n                                                    <div className=\"col-auto p-0 m-0\">\r\n                                                        <label className='text-burntumber fw-bold p-0 m-0'>CGST:- ₹</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-auto p-0 m-0\">\r\n                                                        <input className='form-control bg-seashell fw-bold border-0 p-0 m-0' disabled value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n\r\n                                    <div className=\"col-4 align-self-end text-start\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap text-start'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-start border-0 rounded-1 fw-bolder p-0  bg-seashell' disabled={true} value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-1 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end text-start\">\r\n                                        <label className=' fw-bolder text-charcoal text-start text-wrap'>Consumables Amount</label>\r\n                                        <input disabled={true} className='form-control text-start rounded-1  border-0 fw-bolder p-0 text-charcoal50' defaultValue='not available' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative mt-2\">\r\n                                <div className=\"row p-0 m-0 align-items-center\">\r\n                                    <div className=\"col-auto p-0 m-0 ps-1\">\r\n                                        <h6 className='text-charcoal p-0 m-0 fw-bolder'>Payments</h6>\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 d-none\">\r\n                                        <button className='btn p-0 ms-1' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"row justify-content-start p-0 m-0 mt-2\">\r\n                                    <div className=\"col-5 text-start p-0 m-0 me-3 \">\r\n                                        <span className=\" text-start p-0 m-0 text-charcoal fw-bold\"> Total Amount: </span>\r\n                                        <span className='text-lightgreen fw-bold'> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-start m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1 fw-bold border-0 text-end' disabled={true} value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1 fw-bold border-0' disabled={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <button className='btn d-none btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid p-0 m-0 bg-seashell position-sticky bottom-0  pb-2\" style={{ marginTop: '2vh' }}>\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0 text-center\">\r\n                                <div className='col-4 align-self-end text-start'>\r\n                                    <label className=' fw-bolder text-charcoal text-wrap text-start'>Grand Total</label>\r\n                                    <div className='form-control rounded-1 text-burntumber fs-6 text-start border-0 fw-bolder p-0 bg-seashell'  >{Get_Grand_Total()}</div>\r\n                                </div>\r\n                                <div className=\"col-4 justify-content-center\">\r\n                                    <button className='button button-charcoal' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-4 justify-content-center\">\r\n                                    <button className='button button-pearl' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Appointments\\UpdateAppointment.jsx",["1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\n\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [load, setload] = useState()\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n            settrigger(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        props.fetchallAppointmentslist()\r\n                        props.closeappointmentform()\r\n                        setload(false)\r\n                        props.fetchapi()\r\n                        Notiflix.Notify.success(response.data.message);\r\n\r\n                    } else {\r\n                        setload(false)\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='fw-light text-start position-relative p-0 m-0'>\r\n            <h5 className=\"text-center\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute top-0\" aria-label=\"Close\" disabled={load == true ? true : false} onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell align-self-center border-0 ps-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} `}>\r\n                                <div className=\"row p-0 m-0 align-items-end\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.5rem' }} />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div></div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-4 \">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control button-charcoal-outline rounded-1\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading...</div>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-4 m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\"col-12\">\r\n                            <input type=\"date\" ref={dateref} className=\"form-control border-charcoal bg-seashell  rounded-1\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-lg-3 col-4\">\r\n                        <label className=\"fw-bold text-charcoal50\" style={{ letterSpacing: '1px' }}>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-charcoal50 shadow-none' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"m-0 p-0 mb-md-2 mt-2 ps-2 fw-bold\" style={{ letterSpacing: '1px' }}>Select new Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ms-2\">\r\n                    {ApiDocTimefrom && ApiDocTimefrom.length !== 0 ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button style={{ letterSpacing: '1px' }} className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} rounded-1 px-3 py-2 fw-bold  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button style={{ letterSpacing: '1px' }} disabled className=\"button-sm button-charcoa50 px-3 py-2 fw-bold m-1 rounded-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded fw-bold text-burntumber bg-lightred'>No timeslots Avaliable</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-auto py-2 pb-2 m-auto text-center\">\r\n                                <button className='btn button-charcoal' onClick={confirmmessage}>Done</button>\r\n                            </div>\r\n                            <div className=\"col-auto py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Payments.jsx",["1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(props.paymentsi == undefined ? 0 : 1)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.Appointmentlist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                    pendings.push(props.appointmentdata[i].pending_payments[j])\r\n                }\r\n            }\r\n\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                if (props.appointmentid == props.appointmentdata[i].id) {\r\n                    if (props.appointmentdata[i].pending_payments[j].is_paid == 0) {\r\n                        pendingid = props.appointmentdata[i].pending_payments[j].id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    console.log(advancepaymentmethods)\r\n    return (\r\n        <div className=' text-start p-0 m-0'>\r\n            <h5 className='text-start fw-bold'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.ClosePaymentsForm}></button>\r\n            <div className=\"d-flex justify-content-start p-0 m-0 gx-2 mt-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} rounded-1 me-1 border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0  d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h6 className='text-charcoal75 fw-bolder mt-2 mb-1'>Advance Payments from {props.patientname}</h6>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                            <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n\r\n                            <table className='bg-pearl table rounded-1'>\r\n                                <thead className=''>\r\n                                    <th className='ps-2'>Description</th>\r\n                                    <th className='ps-2'>Amount</th>\r\n                                </thead>\r\n                                <tbody className='align-middle'>\r\n                                    <tr >\r\n                                        <td></td>\r\n                                        <td>{advancepaid.advnace_total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n\r\n                            // <div className='row align-items-center p-0 m-0'>\r\n                            //     <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                            //     <input className=' col-6 p-0 m-0 form-control w-50  bg-seashell ' value={advancepaid.advnace_total} />\r\n                            //     <hr />\r\n                            // </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow fw-bolder rounded-1 p-2 m-1 mt-2 text-center'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <hr />\r\n                <h6 className='text-charcoal75 fw-bolder mb-2 mt-3'>Add Advance Payment</h6>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-3 ps-0\">\r\n                        <p className='text-charcoal p-0 m-0 fw-bold'>Description</p>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 align-items-center\">\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <p className='text-charcoal fw-bold mt-3'>Add Payment Method</p>\r\n                    </div>\r\n                    <div className=\"col-auto p-0 m-0\">\r\n                        <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2 justify-content-around\">\r\n                            <div className=\"col-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-4 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 \">\r\n                                <button className='btn p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container text-center\">\r\n                    <button className='button  button-charcoal rounded-1 mt-3 mb-2' disabled={Description ? false : true} onClick={AddadvancePaymentMethods}>Save</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} `}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto \">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h6 className='fw-bolder text-charcoal75 mt-2'>Previous paid payments</h6>\r\n                                <div className='p-0 m-0 scroll scroll-y rounded-1'>\r\n                                    <table className=' p-0 m-0 border-0 bg-pearl p-2 '>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='p-0 m-0 px-1 border-bottom' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Cash</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Card</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Paytm</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Phonepe</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Razorpay</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Wire-Transfer</th>\r\n                                                <th className='p-0 m-0 px-1 bg-pearl' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={`d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='p-0 m-0 px-1'>{data.paid_amount}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='p-0 m-0 px-1'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} `}>\r\n                                            <div className=\"row p-0 m-0 align-items-center mt-2 justify-content-center\">\r\n                                                <div className=\"col-auto\">\r\n                                                    <span className='text-burntumber fw-bolder'>Pending Amount: {Data.pending_amount}</span>\r\n                                                </div>\r\n                                                <div className=\"col-auto\">\r\n                                                    <button className='btn p-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={``}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-start\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 ms-2 \">\r\n\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n                                <div className=\"container text-center\">\r\n                                    <button className='button button-charcoal mt-lg-4 mt-md-3 mt-1 mb-2' onClick={UpdatePendingPayments}>Save</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    ) : (\r\n\r\n                        props.paymentsi !== undefined ? (\r\n                            <div className='rounded-1 bg-lightgreen text-white fw-bolder p-2 my-4'>Please see or update the bill first</div>\r\n                        ) : (\r\n                            <div className='rounded-1 bg-lightgreen text-white fw-bolder p-2 my-4'>No Pending Payments Found</div>\r\n                        )\r\n\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\Vitals.jsx",["1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\n\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    // console.log(vitalid, vitalupdatevalue, appointmentvitalid, props.appointmentid, props.patientid)\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  // console.log(props.appointmentvitalslist)\r\n  return (\r\n    <div className='bg-seashell rounded-1 position-relative pb-4'>\r\n      <h5 className='p-1 text-center'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 m-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} style={{ width: '1.5rem' }} /></button>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '>\r\n                <h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0 align-self-end\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid mt-2\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row justify-content-end align-items-center\">\r\n              <div className=\"col-3\">\r\n                <select className='form-control p-0 text-center border-0 text-end bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1\">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center p-0 m-0'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center p-0 m-0'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-2 px-1\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-2\"></div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <div className=\"container text-center mt-3\">\r\n        <button className='button button-charcoal mx-auto' onClick={props.CloseVitals}>Done</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customloading.jsx",["1154"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\UpdateMedicine.jsx",["1155","1156"],[],"import axios from 'axios'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\n\r\nconst UpdateMedicine = (props) => {\r\n  const url = useContext(URL)\r\n  const [displayname, setdisplayname] = useState()\r\n  const [name, setname] = useState()\r\n  const [saltname, setsaltname] = useState()\r\n  const [manufacturer, setmanufacturer] = useState()\r\n  const [strength, setstrength] = useState()\r\n  const [unit, setunit] = useState()\r\n  const [pack, setpack] = useState()\r\n  const [packtype, setpacktype] = useState()\r\n  const [mfid, setmfid] = useState()\r\n  const [schedule, setschedule] = useState()\r\n  const [hsn, sethsn] = useState()\r\n  const [rack, setrack] = useState()\r\n  const [maxsc, setmaxsc] = useState()\r\n  const [minsc, setminsc] = useState()\r\n  const [altsc, setaltsc] = useState()\r\n  const [img, setimg] = useState('')\r\n  const data = props.data\r\n  const FillDetails = async () => {\r\n    setdisplayname(data.display_name)\r\n    setname(data.name)\r\n    setsaltname(data.salt_name)\r\n    setmanufacturer(data.manufacturer)\r\n    setstrength(data.strength)\r\n    setunit(data.medicine_unit)\r\n    setpack(data.packaging)\r\n    setpacktype(data.packaging_type_id)\r\n    setmfid(data.medicine_form_id)\r\n    setschedule(data.schedule)\r\n    sethsn(data.hsn_code)\r\n    setrack(data.rack_number)\r\n    setmaxsc(data.max_stock_count)\r\n    setminsc(data.min_stock_count)\r\n    setaltsc(data.alert_stock_count)\r\n    setimg(data.image)\r\n\r\n  }\r\n  useEffect(() => {\r\n    FillDetails()\r\n  }, [])\r\n  const handleimage = async (e) => {\r\n    console.log(e.target.files)\r\n    if (e.target.files.length !== 0) {\r\n      setimg(e.target.files)\r\n    }\r\n\r\n  }\r\n  const UpdateMedicine = async () => {\r\n    const Data = {\r\n      medicine_id: data.id,\r\n      display_name: displayname,\r\n      name: name,\r\n      salt_name: saltname,\r\n      manufacturer: manufacturer,\r\n      strength: strength,\r\n      medicine_unit: Number(unit),\r\n      packaging: pack,\r\n      packaging_type_id: Number(packtype),\r\n      medicine_form_id: Number(mfid),\r\n      schedule: schedule,\r\n      hsn_code: hsn,\r\n      rack_number: rack,\r\n      max_stock_count: Number(maxsc),\r\n      min_stock_count: Number(minsc),\r\n      alert_stock_count: Number(altsc),\r\n      image: img ? {\r\n        name: img[0].name,\r\n        size: img[0].size,\r\n        type: img[0].type,\r\n        webkitRelativePath: img[0].webkitRelativePath,\r\n        lastModifiedDate: img[0].lastModifiedDate,\r\n        lastModified: img[0].lastModified\r\n\r\n      } : ''\r\n    }\r\n    console.log(props.data)\r\n    console.log(props.data.id)\r\n    try {\r\n      await axios.post(`${url}/medicine/update`, Data).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.medcinelist()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to Update ${data.display_name} Details`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        UpdateMedicine()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    )\r\n  }\r\n\r\n  if (img !== null) {\r\n    console.log(img[0])\r\n  }\r\n  console.log(data)\r\n  return (\r\n    <div className='position-relative bg-seashell p-0 m-0 fw-bold'>\r\n      <h5 className='p-0 m-0 text-center py-2 border-bottom'>Update Medicine</h5>\r\n      <button className='btn btn-close position-absolute end-0 top-0 mt-1 me-1' onClick={props.ToggleUpdateMedicine}></button>\r\n      <div className='scroll scroll-y' style={{ height: '78vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Basic Details</p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Display Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={displayname ? displayname : ''} onChange={(e) => { setdisplayname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={name ? name : ''} onChange={(e) => { setname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Salt Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={saltname ? saltname : ''} onChange={(e) => { setsaltname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Manufacturer</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={manufacturer ? manufacturer : ''} onChange={(e) => { setmanufacturer(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end mt-3\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Other Details  </p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Strength</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={strength ? strength : ''} onChange={(e) => { setstrength(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Unit</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={unit ? unit : ''} onChange={(e) => { setunit(e.target.value) }}>\r\n                <option>Select Unit</option>\r\n                <option value='1'>mg</option>\r\n                <option value='2'>ml</option>\r\n                <option value='3'>mcg</option>\r\n                <option value='4'>g</option>\r\n                <option value='5'>%</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={pack ? pack : ''} onChange={(e) => { setpack(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging Type</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={packtype ? packtype : ''} onChange={(e) => { setpacktype(e.target.value) }}>\r\n                <option>Select Packaging Type</option>\r\n                <option value='1'>Strip</option>\r\n                <option value='2'>Tube</option>\r\n                <option value='3'>Bottle</option>\r\n                <option value='4'>Syringe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Form</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={mfid ? mfid : ''} onChange={(e) => { setmfid(e.target.value) }}>\r\n                <option>Select Medicine form</option>\r\n                <option value=\"1\" >tablet</option>\r\n                <option value=\"2\" >capsule</option>\r\n                <option value=\"3\" >liquid</option>\r\n                <option value=\"4\">topical</option>\r\n                <option value=\"5\" >cream</option>\r\n                <option value=\"6\" >device</option>\r\n                <option value=\"7\" >drop</option>\r\n                <option value=\"8\" >foam</option>\r\n                <option value=\"9\" >gel</option>\r\n                <option value=\"10\" >inhaler</option>\r\n                <option value=\"11\" >injection</option>\r\n                <option value=\"12\" >lotion</option>\r\n                <option value=\"13\" >ointment</option>\r\n                <option value=\"14\" >patch</option>\r\n                <option value=\"15\" >powder</option>\r\n                <option value=\"16\" >spray</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Schedule</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={schedule ? schedule : ''} onChange={(e) => { setschedule(e.target.value) }} >\r\n                <option>Select Schedule</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"H\" >H</option>\r\n                <option value=\"X\" >X</option>\r\n                <option value=\"J\" >J</option>\r\n                <option value=\"A\" >A</option>\r\n                <option value=\"B\" >B</option>\r\n                <option value=\"C\" >C</option>\r\n                <option value=\"D\" >D</option>\r\n                <option value=\"E\" >E</option>\r\n                <option value=\"F\" >F</option>\r\n                <option value=\"K\" >K</option>\r\n                <option value=\"M\" >M</option>\r\n                <option value=\"N\" >N</option>\r\n                <option value=\"O\" >O</option>\r\n                <option value=\"P\" >P</option>\r\n                <option value=\"Q\" >Q</option>\r\n                <option value=\"R\" >R</option>\r\n                <option value=\"S\" >S</option>\r\n                <option value=\"T\" >T</option>\r\n                <option value=\"U\" >U</option>\r\n                <option value=\"V\" >V</option>\r\n                <option value=\"Y\">Y</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"row p-0 m-0 justify-content-center mt-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Choose Medicine Photo</p>\r\n          <div className=\"col-4 ms-5\">\r\n            <input type='file' className='form-control bg-seashell p-0 m-0 px-2 py-1' onChange={(e) => { handleimage(e) }} />\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row p-0 m-0 justify-content-end mt-3 mb-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>HSN Code and Count</p>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>HSN Code</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={hsn ? hsn : ''} onChange={(e) => { sethsn(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Rack Number</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={rack ? rack : ''} onChange={(e) => { setrack(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Max. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={maxsc ? maxsc : ''} onChange={(e) => { setmaxsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Min. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={minsc ? minsc : ''} onChange={(e) => { setminsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Alert Stock Count </p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={altsc ? altsc : ''} onChange={(e) => { setaltsc(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='bg-pearl border p-2 align-items-center '>\r\n        <div className=\"row p-0 m-0 text-center justify-content-between align-items-center align-self-center\">\r\n\r\n          <div className=\"col-6\">\r\n            <button className='button button-charcoal ' onClick={confirmmessage}>Update</button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button className='button button-seashell' onClick={FillDetails}>Set Previous</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { UpdateMedicine }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\pharmacy\\NewMedicine.jsx",["1157"],[],"import axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\n\r\nconst NewMedicine = (props) => {\r\n  const url = useContext(URL)\r\n  const [displayname, setdisplayname] = useState()\r\n  const [name, setname] = useState()\r\n  const [saltname, setsaltname] = useState()\r\n  const [manufacturer, setmanufacturer] = useState()\r\n  const [strength, setstrength] = useState()\r\n  const [unit, setunit] = useState()\r\n  const [pack, setpack] = useState()\r\n  const [packtype, setpacktype] = useState()\r\n  const [mfid, setmfid] = useState()\r\n  const [schedule, setschedule] = useState()\r\n  const [hsn, sethsn] = useState()\r\n  const [rack, setrack] = useState()\r\n  const [maxsc, setmaxsc] = useState()\r\n  const [minsc, setminsc] = useState()\r\n  const [altsc, setaltsc] = useState()\r\n  const [img, setimg] = useState()\r\n\r\n  const SaveMedicine = async () => {\r\n    const data = {\r\n      display_name: displayname,\r\n      name: name,\r\n      salt_name: saltname,\r\n      manufacturer: manufacturer,\r\n      strength: strength,\r\n      medicine_unit: unit,\r\n      packaging: pack,\r\n      packaging_type_id: packtype,\r\n      medicine_form_id: mfid,\r\n      schedule: schedule,\r\n      hsn_code: hsn,\r\n      rack_number: rack,\r\n      max_stock_count: maxsc,\r\n      min_stock_count: minsc,\r\n      alert_stock_count: altsc,\r\n      image: img\r\n    }\r\n    if (displayname && name && saltname && manufacturer && strength && unit && pack && packtype && mfid && schedule && hsn && rack && maxsc && minsc && altsc && img) {\r\n      try {\r\n        await axios.post(`${url}/medicine/add`, data).then((response) => {\r\n          props.ToggleNewMedicine()\r\n          ClearFields()\r\n          if (response.data.status == true) {\r\n            Notiflix.Notify.success(response.data.message)\r\n          } else {\r\n            Notiflix.Notify.warning(response.data.message)\r\n          }\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Details')\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add ${displayname} as New Medicine `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveMedicine()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    )\r\n  }\r\n  const ClearFields = async () => {\r\n    setdisplayname()\r\n    setname()\r\n    setsaltname()\r\n    setmanufacturer()\r\n    setstrength()\r\n    setunit()\r\n    setpack()\r\n    setpacktype()\r\n    setmfid()\r\n    setschedule()\r\n    sethsn()\r\n    setrack()\r\n    setmaxsc()\r\n    setminsc()\r\n    setaltsc()\r\n    setimg()\r\n  }\r\n  return (\r\n    <div className='position-relative bg-seashell p-0 m-0 fw-bold'>\r\n      <h5 className='p-0 m-0 text-center py-2 border-bottom'>Add New Medicine</h5>\r\n      <button className='btn btn-close position-absolute end-0 top-0 mt-1 me-1' onClick={props.ToggleNewMedicine}></button>\r\n      <div className='scroll scroll-y' style={{ height: '78vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Basic Details</p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Display Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={displayname ? displayname : ''} onChange={(e) => { setdisplayname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={name ? name : ''} onChange={(e) => { setname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Salt Name</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={saltname ? saltname : ''} onChange={(e) => { setsaltname(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Manufacturer</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={manufacturer ? manufacturer : ''} onChange={(e) => { setmanufacturer(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"row p-0 m-0 justify-content-end mt-3\">\r\n            <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Other Details  </p>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Strength</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={strength ? strength : ''} onChange={(e) => { setstrength(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Unit</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={unit ? unit : ''} onChange={(e) => { setunit(e.target.value) }}>\r\n                <option>Select Unit</option>\r\n                <option value='1'>mg</option>\r\n                <option value='2'>ml</option>\r\n                <option value='3'>mcg</option>\r\n                <option value='4'>g</option>\r\n                <option value='5'>%</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging</p>\r\n              <input className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={pack ? pack : ''} onChange={(e) => { setpack(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Packaging Type</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={packtype ? packtype : ''} onChange={(e) => { setpacktype(e.target.value) }}>\r\n                <option>Select Packaging Type</option>\r\n                <option value='1'>Strip</option>\r\n                <option value='2'>Tube</option>\r\n                <option value='3'>Bottle</option>\r\n                <option value='4'>Syringe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Medicine Form</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={mfid ? mfid : ''} onChange={(e) => { setmfid(e.target.value) }}>\r\n                <option>Select Medicine form</option>\r\n                <option value=\"1\" >tablet</option>\r\n                <option value=\"2\" >capsule</option>\r\n                <option value=\"3\" >liquid</option>\r\n                <option value=\"4\">topical</option>\r\n                <option value=\"5\" >cream</option>\r\n                <option value=\"6\" >device</option>\r\n                <option value=\"7\" >drop</option>\r\n                <option value=\"8\" >foam</option>\r\n                <option value=\"9\" >gel</option>\r\n                <option value=\"10\" >inhaler</option>\r\n                <option value=\"11\" >injection</option>\r\n                <option value=\"12\" >lotion</option>\r\n                <option value=\"13\" >ointment</option>\r\n                <option value=\"14\" >patch</option>\r\n                <option value=\"15\" >powder</option>\r\n                <option value=\"16\" >spray</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className='p-0 m-0'>Schedule</p>\r\n              <select className='form-control w-75 bg-seashell p-0 m-0 px-2 py-1' value={schedule ? schedule : ''} onChange={(e) => { setschedule(e.target.value) }} >\r\n                <option>Select Schedule</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"H\" >H</option>\r\n                <option value=\"X\" >X</option>\r\n                <option value=\"J\" >J</option>\r\n                <option value=\"A\" >A</option>\r\n                <option value=\"B\" >B</option>\r\n                <option value=\"C\" >C</option>\r\n                <option value=\"D\" >D</option>\r\n                <option value=\"E\" >E</option>\r\n                <option value=\"F\" >F</option>\r\n                <option value=\"K\" >K</option>\r\n                <option value=\"M\" >M</option>\r\n                <option value=\"N\" >N</option>\r\n                <option value=\"O\" >O</option>\r\n                <option value=\"P\" >P</option>\r\n                <option value=\"Q\" >Q</option>\r\n                <option value=\"R\" >R</option>\r\n                <option value=\"S\" >S</option>\r\n                <option value=\"T\" >T</option>\r\n                <option value=\"U\" >U</option>\r\n                <option value=\"V\" >V</option>\r\n                <option value=\"Y\">Y</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-center mt-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>Choose Medicine Photo</p>\r\n          <div className=\"col-4 ms-5\">\r\n            <input type='file' className='form-control bg-seashell p-0 m-0 px-2 py-1' value={img ? img : ''} onChange={(e) => { setimg(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0 justify-content-end mt-3 mb-3\">\r\n          <p className='text-charcoal fw-bold p-0 m-0 py-2 text-center'>HSN Code and Count</p>\r\n          <div className=\"col-12\">\r\n            <p className='p-0 m-0'>HSN Code</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={hsn ? hsn : ''} onChange={(e) => { sethsn(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Rack Number</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={rack ? rack : ''} onChange={(e) => { setrack(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Max. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={maxsc ? maxsc : ''} onChange={(e) => { setmaxsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Min. Stock Count</p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={minsc ? minsc : ''} onChange={(e) => { setminsc(e.target.value) }} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <p className='p-0 m-0'>Alert Stock Count </p>\r\n            <input className='form-control bg-seashell p-0 m-0 px-2 py-1' value={altsc ? altsc : ''} onChange={(e) => { setaltsc(e.target.value) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='bg-pearl border p-3 align-items-center '>\r\n        <div className=\"row p-0 m-0 text-center justify-content-between align-items-center align-self-center\">\r\n\r\n          <div className=\"col-6\">\r\n            <button className='button button-charcoal ' onClick={confirmmessage}>Save</button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button className='button button-seashell' onClick={ClearFields}>Cancel</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { NewMedicine }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\notiflix\\customnotify.jsx",["1158"],[],"import React from 'react'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst customnotify = () => {\r\n  return (\r\n      \r\nNotiflix.Notify.init({\r\n    width: '280px',\r\n    position: 'right-top',\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 1000,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade',\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic',\r\n    fontAwesomeIconSize: '34px',\r\n    success: {\r\n    background: '#95B3AB',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-success',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-check-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n    failure: {\r\n    background: '#ff5549',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-failure',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-times-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n    warning: {\r\n    background: '#eebf31',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-warning',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n    info: {\r\n    background: '#26c0d3',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-info',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-info-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n    })\r\n  )\r\n}\r\n\r\nexport  {customnotify}\r\n",[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\ExportExcel.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\Bootstrap_Confirm.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\qrcode.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\Today\\AddConsumables.jsx",["1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197"],[],"import { URL, TodayDate, DoctorsList, Clinic, Permissions } from '../../index';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport React, { useState, useRef, useContext, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport axios from 'axios'\r\n\r\n\r\nconst AddConsumables = (props) => {\r\n    const tableref = useRef(null)\r\n    const cliniclist = useContext(Clinic)\r\n    const url = useContext(URL)\r\n    const Doclist = useContext(DoctorsList)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const medicinesref = useRef(null)\r\n    const medbyidref = useRef(null);\r\n    const patientaddref = useRef(null)\r\n    const stockref = useRef(null)\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [doctorname, setdoctorname] = useState()\r\n    const [otherdoctor, setotherdoctor] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [ischecked, setischecked] = useState()\r\n    const [Dc, setDc] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [products, setproducts] = useState([])\r\n    const [itemsearch, setitemsearch] = useState([])\r\n    const [itembyid, setitembyid] = useState([])\r\n    const [loadbyId, setloadbyId] = useState()\r\n    const [itemname, setitemname] = useState()\r\n    const [itemid, setitemid] = useState()\r\n    const [SelectedProducts, setSelectedProducts] = useState([])\r\n    const [Grandtotal, setGrandtotal] = useState()\r\n    const [loadsearch, setloadsearch] = useState()\r\n    const [ce, setce] = useState('none')\r\n    const [nursenotes, setnursenotes] = useState('')\r\n    const [deleteload, setdeleteload] = useState(false)\r\n\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    const searchmeds = async (search) => {\r\n        setloadsearch(true)\r\n        try {\r\n            await axios.get(`${url}/stock/list?search=${search}`).then((response) => {\r\n                let medicines = []\r\n                let vaccines = []\r\n                let items = []\r\n                medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n                vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n                items = medicines.concat(vaccines)\r\n                items = items.flat()\r\n                console.log(items)\r\n                setitemsearch(items)\r\n                setloadsearch(false)\r\n                if (search.length > 1) {\r\n                    medicinesref.current.style.display = 'block';\r\n                } else {\r\n                    medicinesref.current.style.display = 'none';\r\n                }\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const searchmedbyId = async (search) => {\r\n        if (search.length > 0) {\r\n            setloadbyId(true)\r\n            try {\r\n                await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n                    setloadbyId(false)\r\n                    setitembyid([response.data.data])\r\n                })\r\n            } catch (e) {\r\n                setloadbyId(false)\r\n                Notiflix.Notify.failure(e.message)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Doclist.map((data) => (\r\n            data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n        ))\r\n    }, [doctorid])\r\n    function CalSellingCost(mrp, disc) {\r\n        let cost = mrp\r\n        if (!disc) {\r\n            cost = Number(mrp)\r\n            return cost\r\n        } else {\r\n            cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n    }\r\n    function CalTotalAmount(qty, cst, realcst) {\r\n        let cost = cst\r\n        if (Number(realcst) > Number(cost)) {\r\n            Notiflix.Notify.failure('Selling Cost should not less than Cost')\r\n        }\r\n        if (!qty) {\r\n            return 0\r\n        } else if (qty == 1) {\r\n            cst = Number(cst)\r\n            return cst\r\n        } else {\r\n            cost = Number(cst) * Number(qty)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n\r\n    }\r\n    function CalGrandttl() {\r\n        let ttl = 0\r\n        SelectedProducts.map((data) => (\r\n            ttl += Number(data.totalamt)\r\n        ))\r\n        setGrandtotal(ttl)\r\n    }\r\n    function CaltotalDiscount(data) {\r\n        let total = 0\r\n        if (data) {\r\n            data.forEach(item => {\r\n                total += Number(item.discount)\r\n            })\r\n            return total\r\n        } else {\r\n            return total\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        CalGrandttl()\r\n    }, [SelectedProducts])\r\n    function AddProducts(data) {\r\n        let T = ''\r\n        if (data.vaccine_brand_id) {\r\n            T = 'v'\r\n        } else {\r\n            T = 'm'\r\n        }\r\n        let ProductDetails = {\r\n            productid: data.id,\r\n            type: data.type ? data.type : T,\r\n            product: data.item_name ? data.item_name : itemname,\r\n            batch: data.batch_no,\r\n            expiry: data.expiry_date,\r\n            quantity: data.current_stock,\r\n            qtytoSale: 1,\r\n            discount: 0,\r\n            cost: data.cost,\r\n            mainmrp: data.mrp,\r\n            disccost: data.mrp,\r\n            gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n            totalamt: data.mrp\r\n\r\n        }\r\n\r\n        if (SelectedProducts && SelectedProducts.length == 0) {\r\n            setSelectedProducts([ProductDetails])\r\n        } else {\r\n            setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n        }\r\n\r\n    }\r\n    async function DeleteProduct(Batch) {\r\n        let obj = []\r\n        obj.push(SelectedProducts.filter(function (e) {\r\n            return e.batch !== Batch\r\n        }))\r\n        obj = obj.flat()\r\n        setSelectedProducts(obj)\r\n    }\r\n    async function SubmitConsumabaleEntry() {\r\n        let productids = [];\r\n        let proquantity = [];\r\n        let Discount = [];\r\n        let discountonmrp = [];\r\n        let mrp = [];\r\n        let GST = [];\r\n        let Totalamount = []\r\n\r\n        for (let i = 0; i < SelectedProducts.length; i++) {\r\n            productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n            proquantity.push(SelectedProducts[i].qtytoSale)\r\n            Discount.push(SelectedProducts[i].discount)\r\n            discountonmrp.push(SelectedProducts[i].disccost)\r\n            mrp.push(SelectedProducts[i].mainmrp)\r\n            GST.push(SelectedProducts[i].gst)\r\n            Totalamount.push(SelectedProducts[i].totalamt)\r\n        }\r\n        let Data = {\r\n            pro_id: productids,\r\n            qty: proquantity,\r\n            discount: Discount,\r\n            disc_mrp: discountonmrp,\r\n            main_mrp: mrp,\r\n            gst: GST,\r\n            total_amount: Totalamount,\r\n            appointment_id: props.appointmentid,\r\n        }\r\n        setload(true)\r\n        try {\r\n            await axios.post(`${url}/save/consumable`, Data).then((response) => {\r\n                setload(false)\r\n                if (response.data.status == true) {\r\n                    NurseNotes()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    props.Appointmentlist()\r\n                    setSelectedProducts([])\r\n                } else {\r\n                    Notiflix.Notify.warning(response.data.message)\r\n                }\r\n            }).catch(function error(e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            setload(false)\r\n        }\r\n    }\r\n    function confirmmessage() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                SubmitConsumabaleEntry()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const toggle_consumables_existed = () => {\r\n        if (ce === 'none') {\r\n            setce('block')\r\n        }\r\n        if (ce === 'block') {\r\n            setce('none')\r\n        }\r\n    }\r\n    const NurseNotes = async () => {\r\n        try {\r\n            await axios.post(`${url}/save/nursing/notes`, {\r\n                appointment_id: props.appointmentid,\r\n                notes: nursenotes\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n                setnursenotes(\"\")\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const RemoveConsumable = async (ID) => {\r\n        setdeleteload(true)\r\n        try {\r\n            await axios.post(`${url}/remove/consumable`, {\r\n                id: ID\r\n            }).then((response) => {\r\n                setdeleteload(false)\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } catch (e) {\r\n            setdeleteload(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid p-0 m-0\">\r\n            <div className='position-relative mb-3'>\r\n                <h5 className='text-start text-charcoal fw-bold '>{props.patientname} Consumables</h5>\r\n                <button className='btn btn-close position-absolute p-1 m-0 end-0 top-0 me-2' disabled={load ? true : false} onClick={props.toggleConsumables}></button>\r\n            </div>\r\n            <button className='button-sm border-0 mx-1 bg-transparent text-charcoal position-relative float-end p-0 mt-2 me-5' onClick={toggle_consumables_existed} >\r\n                <span className=' fw-bold'>Consumables</span>\r\n                <img src={process.env.PUBLIC_URL + 'images/cart.png'} />\r\n                <span class={` position-absolute text-pearl start-100 translate-middle badge fw-normal p-0 m-0 p-1 px-2 rounded-2 bg-burntumber border-burntumber`} style={{ zIndex: '2', top: \"10%\" }}> {props.existedconsumables.length} </span>\r\n            </button>\r\n            <div className={`d-${ce} position-absolute start-0 end-0 top-0 bg-seashell`} style={{ zIndex: '6', height: '60vh' }}>\r\n                <h5 className='text-start text-charcoal fw-bold p-2'>{props.patientname} Consumables</h5>\r\n                <img src={process.env.PUBLIC_URL + 'images/leftarrow.png'} className='ms-2 mb-2' onClick={toggle_consumables_existed} />\r\n                <h6 className='text-start text-charcoal fw-bold p-1 ps-2 pb-0 '>Consumables Added </h6>\r\n                <div className=\"scroll\">\r\n                    <table className='table fw-bold p-0 m-0'>\r\n                        <thead className='p-0 m-0 top-0 bg-seashell'>\r\n                            <tr>\r\n                                <th>Item ID</th>\r\n                                <th>Item Name</th>\r\n                                <th>MRP</th>\r\n                                <th>Disc %</th>\r\n                                <th>Cost</th>\r\n                                <th>Total Amount</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {\r\n                            props.existedconsumables && props.existedconsumables.length !== 0 ? (\r\n                                <tbody className='p-0 m-0 bg-pearl'>\r\n                                    {\r\n                                        props.existedconsumables.length !== 0 ? (\r\n                                            props.existedconsumables.map((data) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>m{data.medicies_stocks_id}</td>\r\n                                                    <td>{data.medicine.display_name}</td>\r\n                                                    <td>₹{data.main_mrp}</td>\r\n                                                    <td className='text-center p-0 m-0'>{data.discount} </td>\r\n                                                    <td>₹{data.disc_mrp}</td>\r\n                                                    <td>₹{data.total_amount}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            deleteload ? (\r\n                                                                <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                                            ) : (\r\n                                                                <img src={process.env.PUBLIC_URL + 'images/delete.png'} onClick={() => { RemoveConsumable(data.id) }} />\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (<tbody>\r\n                                            <tr>\r\n                                                No consumables Found\r\n                                            </tr>\r\n                                        </tbody>)\r\n\r\n                                    }\r\n                                </tbody>\r\n                            ) : (\r\n                                <tbody className='position-relative'>\r\n                                    <tr className='p-0 m-0 text-center'>\r\n                                        <td className='position-absolute text-charcoal75 fw-bold start-0 end-0'>No Consumabels Added</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            )\r\n                        }\r\n                    </table>\r\n                </div>\r\n                <div className=\"container-fluid fw-bold mt-5 \">\r\n                    <h6 className='fw-bold'>Nursing Notes</h6>\r\n                    <p className='d-inline-block w-100 text-wrap bg-pearl p-2 rounded-2 ' style={{ minHeight: '10vh' }}>\r\n                        {props.appointmentdata.nursing_notes}\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={`container-fluid text-start p-0 m-0 mt-3 d-${ce === 'block' ? 'none' : 'block'}`}>\r\n                <div className=\"col-12 justify-content-center\">\r\n                    <h6 className='text-charcoal fw-bolder text-start ms-1'>Search Consumables</h6>\r\n                    <hr className='p-0 m-0' />\r\n                    {/* <div className=\"col-12\">\r\n                <button className='button button-seashell text-burntumber border-burntumber '>Scan to Add Product</button>\r\n              </div>\r\n              <h4 className='my-2'>OR</h4> */}\r\n                    <div className=\"row my-2 justify-content-center\">\r\n\r\n\r\n                        <div className=\"col-4 position-relative\">\r\n                            <input className='form-control bg-seashell' placeholder='Search Product by Name'\r\n                                value={itemname ? itemname : ''}\r\n                                onChange={(e) => {\r\n                                    searchmeds(e.target.value);\r\n                                    setitemname(e.target.value);\r\n                                    setitemid();\r\n                                    setproducts();\r\n                                    stockref.current.style.display = 'none'\r\n                                }} />\r\n                            <div ref={medicinesref} className='position-absolute scroll scroll-y rounded-1 mt-1' style={{ Width: 'max-content', zIndex: '1', maxHeight: '40vh' }} >\r\n                                {\r\n                                    itemsearch ? (\r\n                                        loadsearch ? (\r\n                                            <div className='rounded-1 p-1 bg-pearl'>\r\n                                                Searching Please wait....\r\n                                                <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                    <span className=\"sr-only\"> </span> </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            loadsearch == false && itemsearch.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                            ) : (\r\n                                                <div className={`rounded-1 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                                                    <p className={`text-start m-1 fw-bold text-charcoal75 ms-1`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                                                    {\r\n                                                        itemsearch.map((data, i) => (\r\n                                                            <div style={{ cursor: 'pointer', Width: '10rem' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-1 py-2 fw-bold border-bottom text-charcoal `}\r\n                                                                onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = 'block' }}>{data.display_name ? data.display_name : data.name}<span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span></div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        )\r\n                                    ) : (<div className='bg-seashell'></div>)\r\n                                }\r\n                            </div>\r\n                            <div ref={stockref} className={`position-absolute bg-pearl start-100 mt-1 px-3 scroll scroll-y align-self-center rounded-1 border border-1 p-1 d-${products && products.stock_info && products.stock_info !== undefined ? 'block' : 'none'}`} style={{ marginTop: '0rem', zIndex: '2', 'width': '22vh', 'min-width': '22vh', 'height': '30vh' }}>\r\n                                <p className={`text-start m-1 fw-bold text-charcoal75`} style={{ fontSize: '0.8rem' }}>{products && products.stock_info !== undefined ? products.stock_info.length : ''} Batch Stocks</p>\r\n                                {\r\n                                    products && products.length !== 0 ? (\r\n                                        products && products.stock_info.length == 0 ? (\r\n                                            <div className='text-white bg-burntumber p-2'>Oops ! Not Available</div>\r\n                                        ) : (\r\n                                            products.stock_info.map((data, i) => (\r\n                                                <div style={{ cursor: 'pointer', minWidth: '6rem', marginTop: '2%' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} border-bottom p-2`}\r\n                                                    onClick={\r\n                                                        () => {\r\n                                                            AddProducts(data);\r\n                                                            setitemname();\r\n                                                            setitemid();\r\n                                                            setproducts();\r\n                                                            setitemsearch()\r\n                                                        }}>\r\n                                                    <h6 className='text-start m-0 p-0 fw-bold'>{itemname}</h6>\r\n                                                    <p className='p-0 m-0 px-1'>BatchNo. - <span className='fw-bold'>{data.batch_no && data.batch_no !== null ? data.batch_no : ''}</span></p>\r\n                                                    <p className='p-0 m-0 px-1'>Stock - <span className='fw-bold'>{data.current_stock && data.current_stock ? data.current_stock : ''}</span></p>\r\n                                                    <p className='p-0 m-0 px-1'>Expiry Date - <span className='fw-bold'>{data.expiry_date ? reversefunction(data.expiry_date) : ''}</span></p>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n\r\n                                    ) : (\r\n                                        <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div></div>\r\n                        </div>\r\n                        <div className='col-1 text-burntumber text-center fw-bold align-self-center'> OR </div>\r\n                        <div className=\"col-4 \">\r\n                            <input className='form-control bg-seashell border border-1 rounded-1' value={itemid ? itemid : ''} placeholder='Search Product by ID' onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = 'block' }} />\r\n                            <div ref={medbyidref} className='position-absolute rounded-1 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                                {\r\n                                    itembyid ? (\r\n                                        loadbyId ? (\r\n                                            <div className='rounded-1 p-1 bg-pearl'>\r\n                                                Searching Please wait....\r\n                                                <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                    <span className=\"sr-only\"> </span> </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            loadbyId == false && itembyid.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                            ) : (\r\n                                                itembyid.map((data, i) => (\r\n                                                    <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 p-1 rounded-pill shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'}`}\r\n                                                        onClick={(e) => {\r\n                                                            setitemid(data.type + data.id);\r\n                                                            AddProducts(data)\r\n                                                            medbyidref.current.style.display = 'none';\r\n                                                        }}>{data.item_name ? data.item_name : ''}</div>\r\n                                                ))\r\n                                            )\r\n                                        )\r\n                                    ) : (<div className='bg-seashell'></div>)\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 m-0 p-0\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h6 className='text-charcoal fw-bolder text-start ms-1'>Add Consumables</h6>\r\n\r\n                    </div>\r\n                    <div className='scroll scroll-y' style={{ height: '35vh' }}>\r\n                        <table className='table'>\r\n                            <thead className=' bg-seashell'>\r\n                                <tr className={``}>\r\n                                    <th className=''>Item ID</th>\r\n                                    <th className=''>Item Name</th>\r\n                                    <th className=''>BatchNo.</th>\r\n                                    <th className=''>Expiry Date</th>\r\n                                    <th className=''>Avl.Stock</th>\r\n                                    <th className=''>Qty To Sale</th>\r\n                                    <th className=''>Discount %</th>\r\n                                    <th className=''>MRP</th>\r\n                                    <th className=''>Cost</th>\r\n                                    <th className=''>GST Rate</th>\r\n                                    <th className=''>Selling Cost/Unit</th>\r\n                                    <th className=''>Total Amount</th>\r\n                                    <th className=''>Delete</th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n                            {\r\n                                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                                    <tbody className='p-0 m-0 bg-pearl'>\r\n                                        {\r\n                                            SelectedProducts.map((data) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>{data.type}{data.productid}</td>\r\n                                                    <td>{data.product}</td>\r\n                                                    <td>{data.batch}</td>\r\n                                                    <td>{reversefunction(data.expiry)}</td>\r\n                                                    <td>{data.quantity}</td>\r\n\r\n                                                    <td className=''>\r\n                                                        <input className='border border-1 rounded-1 w-25 p-0 text-center bg-seashell'\r\n                                                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                                                            onChange={(e) => {\r\n                                                                e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost);\r\n                                                                setSelectedProducts(prevState => [...prevState])\r\n                                                            }} /> </td>\r\n\r\n                                                    <td className='' style={{ Width: '0rem' }}>\r\n                                                        <input className='border border-1 rounded-1 w-25 p-0 text-center bg-seashell'\r\n                                                            value={data.discount ? data.discount : ''}\r\n                                                            onChange={(e) => {\r\n                                                                data.discount = e.target.value;\r\n                                                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost))\r\n                                                                setSelectedProducts(prevState => [...prevState]);\r\n                                                            }} /> </td>\r\n                                                    <td>{data.mainmrp}</td>\r\n                                                    <td>{data.cost}</td>\r\n                                                    <td>{data.gst + '%'}</td>\r\n                                                    <td>{data.disccost}</td>\r\n                                                    <td>{data.totalamt}</td>\r\n                                                    <td><img src={process.env.PUBLIC_URL + 'images/delete.png'} onClick={() => { DeleteProduct(data.batch) }} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                ) : (\r\n                                    <tbody className='position-relative'>\r\n                                        <tr className='p-0 m-0 text-center'>\r\n                                            <td className='position-absolute text-charcoal75 fw-bold start-0 end-0'>No Consumabels Added</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container p-0 m-0 mb-5 pb-5\">\r\n                    <h6 className='fw-bold p-0 m-0 ps-0 ms-0 my-2'>Nurse notes</h6>\r\n                    <textarea className='col-12 form-control w-100' value={nursenotes ? nursenotes : ''} onChange={(e) => setnursenotes(e.target.value)} style={{ width: '95vh', height: '10vh' }}></textarea>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-start bg-pearl align-items-center rounded-bottom'>\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{Grandtotal}</h4>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{SelectedProducts.length}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 align-self-center text-center\">\r\n                        {\r\n                            load ? (\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-start\">\r\n                                    <div class=\"spinner-border\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <button className='button button-charcoal px-5' onClick={() => { confirmmessage() }}>Save</button>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\nexport { AddConsumables }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Navbar.jsx",["1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216"],[],"import React from 'react'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext } from \"react\";\r\n// import { w3cwebsocket as websocket } from 'websocket'\r\n\r\n//Context APIs\r\nimport { Permissions } from '../../index'\r\n//Components\r\nimport { SearchField } from '../features/SearchField'\r\nimport { AddPatient } from '../Today/AddPatient'\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\nimport { AddAppointment } from '../Today/AddAppointment'\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n    //Use States\r\n    const [patientform, setpatientform] = useState(\"none\");\r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    const [doctorform, setdoctorform] = useState(\"none\");\r\n    const [Docval, setDocval] = useState()\r\n    const [highlighticon, sethighlighticon] = useState()\r\n\r\n    const location = useLocation()\r\n    const togglepatientform = () => {\r\n        if (patientform === \"none\") {\r\n            setpatientform(\"block\");\r\n        } else if (patientform === \"block\") {\r\n            setpatientform(\"none\");\r\n        }\r\n    };\r\n\r\n\r\n    const toggleappointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\");\r\n        } else if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\");\r\n        }\r\n    };\r\n\r\n    const toggledoctorform = () => {\r\n        if (doctorform === \"none\") {\r\n            setDocval(1)\r\n            setdoctorform(\"block\");\r\n\r\n        } else if (doctorform === \"block\") {\r\n            setDocval(0)\r\n            setdoctorform(\"none\");\r\n        }\r\n    };\r\n\r\n\r\n    const NavbarIcons = [\r\n        {\r\n            title: 'Today',\r\n            path: '/',\r\n            image: '/images/today.png',\r\n            display: props.permissions.dashboard_view !== undefined ? props.permissions.dashboard_view : 0\r\n\r\n        },\r\n        {\r\n            title: 'Appointments',\r\n            path: '/Appointments',\r\n            image: '/images/appointment.png',\r\n            display: props.permissions.appointment_view !== undefined ? props.permissions.appointment_view : 0\r\n\r\n        },\r\n        {\r\n            title: 'Patients',\r\n            path: '/Patients',\r\n            image: '/images/patient.png',\r\n            display: props.permissions.patient_view !== undefined ? props.permissions.patient_view : 0\r\n\r\n        },\r\n        {\r\n            title: 'Doctors',\r\n            path: '/Doctors',\r\n            image: '/images/doctor.png',\r\n            display: props.permissions.doctor_view !== undefined ? props.permissions.doctor_view : 0\r\n        },\r\n        {\r\n            title: 'DSR',\r\n            path: '/DailySaleReport',\r\n            image: '/images/dsr.png',\r\n            display: props.permissions.dsr_pharmacy == undefined && props.permissions.dsr_appointment == undefined && props.permissions.dsr_doctor_timings == undefined ? 0 : 1\r\n        },\r\n        {\r\n            title: 'Pharmacy',\r\n            path: '/pharmacy',\r\n            image: '/images/Pharmacy.png',\r\n            display: props.permissions.purchase_entry_view == undefined && props.permissions.purchase_orders_view == undefined && props.permissions.purchase_return_view == undefined && props.permissions.sale_entry_view == undefined && props.permissions.sale_return_view == undefined ? 0 : 1\r\n        },\r\n\r\n\r\n    ]\r\n\r\n    //Searchfield input\r\n    const [searchtext, setsearchtext] = useState()\r\n    // onClick={togglelogoutbtn}\r\n    // d-${props.logoutbtn} \r\n    return (\r\n        <>\r\n            <div className=\"navsection p-0 m-0 py-1\">\r\n                <div className=\"container-fluid p-0 m-0 \">\r\n                    <div className=\"row m-0 p-0 justify-content-lg-between justify-content-md-between justify-content-sm-between justify-content-between align-items-center\">\r\n                        <div className=\"col-lg-auto col-xl-auto col-md-auto col-sm-auto col-auto p-0 m-0 ms-2 text-start dropdown\">\r\n                            <button className=\"button dropdown-toggle button-seashell shadow-none d-inline-block col-md-auto col-auto user position-relative p-0 m-0 ms-2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                <h1 className=\"m-0 username text-decoration-none  text-start fw-bold\"> {props.username} </h1>\r\n                                <div className=\"m-0 userstatus text-decoration-none text-start text-burntumber fw-bold\" >{props.designation} </div>\r\n                                <ul class=\"dropdown-menu p-0 m-0 border-0\">\r\n                                    <li class=\"dropdown-item p-0 m-0 bg-lightred50 text-center rounded-2 p-1 fw-bold border-0 text-burntumber \" onClick={props.logout}>Logout</li>\r\n                                </ul>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-lg-auto col-xl-7 align-self-center col-sm-auto col-md-auto col-12 p-0 m-0 menu order-2 order-xl-0 order-sm-0 order-md-0 mt-lg-0 mt-md-0 md-sm-0\">\r\n                            <div className=\"row p-0 m-0 justify-content-sm-center justify-content-evenly\">\r\n                                {\r\n                                    NavbarIcons.map((data, i) => (\r\n                                        <div className={`col-auto p-0 m-0 align-self-end d-${data.display == 1 ? '' : 'none'} `} onClick={() => sethighlighticon(data.path)}>\r\n                                            <Link to={data.path} className=\"text-decoration-none\">\r\n                                                <div className=\"text-center\">\r\n                                                    <img src={process.env.PUBLIC_URL + data.image} alt=\"displaying_image\" className={`img-fluid rounded-1 p-2 bg-${location.pathname === data.path ? 'burntumber25' : 'seashell'}`} style={{ width: `1.2rem`, boxSizing: 'content-box' }} />\r\n                                                </div>\r\n                                                <small className=\"col-12 m-0 p-0 px-2 text-center fw-bold text-charcoal\">{data.title}</small>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                    ))\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                        {/* className=\"col-lg-2 col-xl-2 col-md-2 col-sm-6 col-6 mt-sm-2 search text-center position-relative\" */}\r\n                        <div className=\"col-lg-auto col-xl-2 col-md-auto col-8 col-sm-auto text-center align-self-center position-relative p-0 m-0 order-sm-2 order-md-1 order-1 \">\r\n                            <div className=\"row p-0 m-0 align-items-center justify-content-md-start justify-content-center\">\r\n                                <div className=\"col-sm-auto col-xl-8 col-lg-8 col-md-8 me-1 col-7 p-0 m-0 position-relative \" style={{ zIndex: '3' }} >\r\n                                    <input type=\"text\" className=\"rounded-1 text-charcoal w-100 bg-charcoal25 positon-relative border border-1 text-start py-sm-1 ps-2 py-1 fw-bold\" onBlur={() => { setsearchtext('') }} placeholder=\"search\" onChange={(e) => setsearchtext(e.target.value)} />\r\n                                    <div className=\"position-absolute bg-pearl start-0 shadow mt-1 rounded-1 border border-1\">\r\n                                        <SearchField searchtext={searchtext} fetchapi={props.fetchapi} />\r\n                                    </div>\r\n                                </div>\r\n                                {/* col-xl-2 col-md-auto col-sm-auto col-6  */}\r\n                                <div className={`col-auto p-0 m-0 dropdown text-decoration-none me-sm-1 d-${props.permissions.patient_add == undefined && props.permissions.doctor_add == undefined && props.permissions.appointment_add == undefined ? 'none' : ''}`}>\r\n                                    <button className=\"button p-0 m-0 px-2 pe-2 py-1 button-burntumber dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        + Add\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\">\r\n                                        <li><button className={`dropdown-item border-bottom d-${props.permissions.patient_add == 1 ? '' : 'none'} fs-6`} onClick={() => { togglepatientform() }}>+ Patient</button></li>\r\n                                        <li className={`d-${props.permissions.appointment_add == 1 ? '' : 'none'}`}><button className=\"dropdown-item border-bottom fs-6\" onClick={() => { toggleappointmentform() }}>+ Appointment</button></li>\r\n                                        <li><button className={`dropdown-item fs-6`} onClick={() => { toggledoctorform() }}>+ Doctor</button></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`col-lg-5 col-md-6 col-sm-12 col-12 rounded-4 p-2 me-lg-2 me-md-2 mt-2 scroll patientinfosection d-${patientform} border position-absolute`} >\r\n                <AddPatient togglepatientform={togglepatientform} />\r\n            </div>\r\n            <div className={`col-lg-5 col-md-6 col-sm-12 rounded-4 p-2 me-lg-2 me-md-2 mt-2 col-12 bg-seashell appointmentinfosection d-${appointmentform} border-start border-top border-2 position-absolute`} style={{ zIndex: '4', right: '0' }} >\r\n                <AddAppointment toggleappointmentform={toggleappointmentform} fetchapi={props.fetchapi} />\r\n            </div>\r\n            {\r\n                Docval == 1 ? (\r\n                    <div className={`col-lg-5 col-md-6 col-sm-12 col-12 px-2 me-lg-2 me-md-2 mt-lg-2 mt-md-2 mt-1 bg-seashell  rounded-4 doctorinfosection d-${doctorform} shadow-sm border position-absolute`} >\r\n                        <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop3'} fetchapi={props.fetchapi} />\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n\r\n            {/* <div className=\"position-absolute bottom-0 end-0 me-5 mb-3 d-block\" style={{ zIndex: 1000 }}>\r\n          <button className={`btn p-0 m-0 d-${openchat == 'block' ? 'none' : 'block'}`} onClick={() => { openchat == 'none' ? setopenchat('block') : setopenchat('none') }}><img src={process.env.PUBLIC_URL + 'images/chat.png'} style={{ width: '2.5rem' }} /></button>\r\n          <div className={`container d-${openchat == 'none' ? 'none' : 'block'}`}>\r\n            <div className=\"bg-lightgreen border border-1 rounded-1 overflow-scroll\" style={{ maxHeight: '15rem' }}>\r\n              {\r\n                chatarr.flat().map((data) => (\r\n                  <div className=\"text-end me-2\">{data}</div>\r\n                ))}</div>\r\n            <button className=\"btn btn-close\" onClick={() => { openchat == 'none' ? setopenchat('block') : setopenchat('none') }}></button>\r\n            <input className=\"bg-seashell rounded-1 border border-1\" ref={chatinputref} onBlur={(e) => { setchat(e.target.value) }} />\r\n            <button className=\"btn p-0 m-0\" onClick={sendmessage}><img src={process.env.PUBLIC_URL + 'images/completed.png'} style={{ width: '1.8rem' }} /></button>\r\n          </div>\r\n  \r\n        </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Clinic.jsx",["1217","1218","1219","1220","1221","1222","1223"],[],"import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext, createContext } from \"react\";\r\n// import { w3cwebsocket as websocket } from 'websocket'\r\nimport { Timecard, DoctorSchedule } from '../Today/Doctor'\r\n//Context APIs\r\nimport { Permissions } from '../../index'\r\n//Components\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\n//css\r\nimport '../../css/dashboard.css'\r\n\r\nconst DOCTORNAME = createContext()\r\nconst DOCTORID = createContext()\r\nfunction Doctorsection(props) {\r\n  const permission = useContext(Permissions)\r\n  const [Docval, setDocval] = useState(0)\r\n  const [Doctor, setDoctor] = useState(0)\r\n  const [DoctorID, setDoctorID] = useState()\r\n  const [DoctorName, setDoctorName] = useState()\r\n  const [DocClinic, setDocClinic] = useState()\r\n  const [doctorindex, setdoctorindex] = useState([0])\r\n  const [doctorform, setdoctorform] = useState(\"none\");\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setDocval(1)\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setDocval(0)\r\n      setdoctorform(\"none\");\r\n    }\r\n  };\r\n\r\n  function getindexes() {\r\n    for (let j = 0; j < doctorindex.length; j++) {\r\n      if (doctorindex.includes(Doctor)) {\r\n        break;\r\n      } else {\r\n        doctorindex.push(Doctor)\r\n      }\r\n    }\r\n  }\r\n  getindexes()\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid doctorsection p-0 m-0 mt-1 ps-1 scroll\">\r\n        <div className=\" hstack gap-3 d-flex p-0 m-0 py-1 ps-1 align-items-center\">\r\n          {\r\n            props.isLoading ? (\r\n              <div className='col-3'>\r\n                <div className=\"spinner-border my-auto\" style={{ width: \"2rem\", height: \"2rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div>\r\n                <div className=\"spinner-grow my-auto\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div> </div>\r\n            ) : (\r\n              props.todayDoc.map((data, i) => (\r\n                <>\r\n                  <div className='col-auto doctors p-0 m-0'>\r\n                    <button key={i} className={` button rounded-1 p-0 m-0 py-1 px-3 btn-sm col-auto shadow-none text-${i === Doctor ? 'light' : 'charcoal75 fw-bolder'} button-${i === Doctor ? \"charcoal\" : \"pearl\"} border-${i === Doctor ? 'secondary' : 'none'}`}\r\n                      style={{ fontSize: '0.9rem' }}\r\n                      autoFocus={i === Doctor ? true : false}\r\n                      onFocus={() => { setDoctorID(data[0]); setDoctorName(data[1]); setDocClinic(data[2]) }}\r\n                      value={`${data[0]}.${data[1]}`} onClick={(a) => { setDoctor(i); setDoctorID(data[0]); setDoctorName(data[1]); }}>{`Dr. ${data[1]}`} </button>\r\n                  </div>\r\n                  <div className='vr rounded-1 h-75 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            )}\r\n          <div className='col-auto'>\r\n            <button className={`btn bg-transparent border-0 `} id=\"adddoctorbtn\" onClick={toggledoctorform} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <section className=\"patientsection p-0 m-0 ps-1 position-relative\">\r\n        {\r\n          props.Loading ? (\r\n            <div className=\" position-absolute start-0 ms-2 end-0 m-auto loader \">\r\n              <button class=\"button button-pearl shadow-none fs-3 fw-bolder text-charcoal75\" type=\"button\" disabled>\r\n                Please Be Patient While We are Fetching Data\r\n                <span class=\"spinner-grow spinner-grow ms-1 bg-brandy \" role=\"status\" aria-hidden=\"true\"></span>\r\n              </button>\r\n              <button class=\"button button-pearl shadow-none m-0 p-0 \" type=\"button\" disabled>\r\n                <span class=\"spinner-grow spinner-grow bg-raffia\" role=\"status\" aria-hidden=\"true\"></span>\r\n                <span class=\"spinner-grow spinner-grow-md ms-1 bg-burntumber\" role=\"status\" aria-hidden=\"true\"></span>\r\n                <span class=\"spinner-grow spinner-grow-lg ms-1 bg-charcoal75\" role=\"status\" aria-hidden=\"true\"></span>\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </button>\r\n            </div>\r\n\r\n          ) : (\r\n            props.todayDoc && props.todayDoc.length != 0 ? (\r\n              doctorindex.map((data, i) => (\r\n                data == Doctor ? (\r\n                  <div key={i}>\r\n                    <div className={`p-0 m-0 my-2 d-${permission.dashboard_all == 1 ? '' : 'none'}`}>\r\n                      <Timecard docid={props.todayDoc[Doctor][0]} _selected={Doctor} />\r\n                    </div>\r\n                    <div className=\"p-0 m-0 my-2\">\r\n{/* \r\n                    DoctorID={DoctorID} DoctorName={DoctorName} */}\r\n\r\n                      <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n                          <DoctorSchedule todayDoc={props.todayDoc} DoctorID={DoctorID} DoctorName={DoctorName}  _selected={Doctor} fetchapi={props.fetchapi} DocClinic={DocClinic}  />\r\n                        </DOCTORID.Provider>    \r\n                      </DOCTORNAME.Provider>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )\r\n              ))\r\n            ) : (\r\n              <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-burntumber\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </section>\r\n      {\r\n        Docval == 1 ? (\r\n          <div className={`col-lg-5 col-md-6 col-sm-12 col-12 doctorinfosection d-${doctorform} me-lg-2 top-0  me-md-2 rounded-4 border bg-seashell shadow-sm position-absolute`} style={{ zIndex: '2', marginTop: '5.1rem' }} >\r\n                    <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n            <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop4'} fetchapi={props.fetchapi} />\r\n            </DOCTORID.Provider>    \r\n            </DOCTORNAME.Provider>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n\r\n    </>\r\n  );\r\n\r\n}\r\nexport default Doctorsection\r\nexport { DOCTORNAME, DOCTORID }","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\features\\InactiveLogout.jsx",[],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Appointments.jsx",["1224","1225","1226","1227","1228","1229","1230","1231","1232","1233"],[],"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport { AllAppointmentslist } from '../../components/Appointments/AllAppointmentslist'\r\nimport { SelectedAppointments } from '../../components/Appointments/SelectedAppointments'\r\nimport { URL, TodayDate, DoctorsList, Permissions } from '../../index'\r\n//css\r\nimport '../../css/appointment.css'\r\nfunction Appointments(props) {\r\n    //Global Variables\r\n    const APIDate = useContext(TodayDate)\r\n    const permission = useContext(Permissions)\r\n    const url = useContext(URL)\r\n    let clinicID = localStorage.getItem('ClinicId')\r\n    const docnames = useContext(DoctorsList)\r\n    //Appointments use state\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [fromdate, setfromdate] = useState()\r\n    const [todate, settodate] = useState()\r\n    //Selected Appointments use state\r\n    const [isselectedLoading, setisselectedLoading] = useState()\r\n    const [appointmentdata, setappointmentdata] = useState([])\r\n    const [type, settype] = useState()\r\n    //All Appointments use state\r\n    const [getAppointments, setgetAppointments] = useState([])\r\n    const [isLoading, setisLoading] = useState()\r\n    const [visibles, setvisibles] = useState([])\r\n\r\n    async function fetchallAppointmentslist() {\r\n        if (doctorid) {\r\n            setgetAppointments([])\r\n            try {\r\n                setisselectedLoading(true);\r\n                await axios.get(`${url}/appointment/list?clinic_id=${clinicID}&doctor_id=${doctorid}&from_date=${fromdate ? fromdate : APIDate}&to_date=${todate ? todate : fromdate ? fromdate : APIDate}&status=${type ? type : ''}`).then((response) => {\r\n                    setappointmentdata(response.data.data)\r\n                })\r\n                setisselectedLoading(false);\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n        } else {\r\n            setappointmentdata([])\r\n            let listdata = []\r\n            try {\r\n                setvisibles()\r\n                setisLoading(true)\r\n                await axios.get(`${url}/appointment/list?clinic_id=${clinicID}&from_date=${fromdate ? fromdate : APIDate}&to_date=${todate ? todate : fromdate ? fromdate : APIDate}&status=${type ? type : ''}`).then((response) => {\r\n                    setgetAppointments(response.data.data)\r\n                    response.data.data.map((data) => {\r\n                        listdata.push(data.doctor.id)\r\n                    })\r\n                    setvisibles(listdata, [])\r\n                })\r\n                setisLoading(false)\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchallAppointmentslist()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchallAppointmentslist()\r\n    }, [doctorid, fromdate, todate, type])\r\n\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n\r\n    let array = [[1, 'Pending', 'lightred'], [2, 'Booked', 'lightblue'], [3, 'Cancelled', 'lightred'], [4, 'QR Generated', 'light'], [5, 'Checked_in', 'brandy'], [6, 'Vitals Done', 'lightred'], [7, 'In_apppointment', 'lightyellow'], [8, 'Payment done', 'lightgreen'], [9, 'Unattained', 'lightyellow'], [10, 'Completed', 'lightgreen']]\r\n\r\n    function status(number) {\r\n        let status\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (number == array[i][0]) {\r\n                status = array[i][1]\r\n                break;\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    function status_color(number) {\r\n        let status_color;\r\n        for (let j = 0; j < array.length; j++) {\r\n            if (number == array[j][0]) {\r\n                status_color = array[j][2]\r\n                break;\r\n            }\r\n        }\r\n        return status_color\r\n    }\r\n\r\n    const options = [['All', ''], ['Cancelled', 3], ['Completed', 10], ['Unattended', 9]]\r\n    const [optionsindex, setoptionsindex] = useState(0)\r\n\r\n    const clearfields = () => {\r\n        setdoctorid()\r\n        setfromdate()\r\n        settodate()\r\n    }\r\n\r\n    function CountAppointments(response) {\r\n        let arr = []\r\n        for (let i = 0; i < visibles.length; i++) {\r\n            if (response === visibles[i]) {\r\n                arr.push(response)\r\n            }\r\n        }\r\n        if (arr.length != 0) {\r\n            return ' | ' + '(' + arr.length + ' Appointments)'\r\n        }\r\n    }\r\n    // useEffect(() => {\r\n    // }, [fromdate, todate])\r\n    // console.log(docnames, visibles, getAppointments.length, appointmentdata.length)\r\n    return (\r\n        <>\r\n            <section className=\"page2appointment \">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-12 col-sm-12 col-md-7 col-lg-6 col-xl-6\">\r\n                            <div className=\"col-12 mt-3\">\r\n                                <h4 className=\"p-lg-2 p-md-2 p-sm-2\">All Appointments</h4>\r\n                            </div>\r\n                            <div className=\"col-12 mt-2\">\r\n                                <div className=\"row p-0 m-0 g-lg-2 g-md-2 g-sm-2 g-2\">\r\n                                    {\r\n                                        options.map((data, index) => (\r\n                                            <div className=\"col-auto\">\r\n                                                <button className={`button-sm px-4 rounded-5 border-charcoal mx-1 position-relative button-${optionsindex == index ? 'charcoal' : 'pearl'}`} key={index} onClick={(e) => { setoptionsindex(index); settype(data[1]) }}>\r\n                                                    {data[0]}\r\n                                                    <span class={` d-${optionsindex == index ? '' : 'none'} position-absolute top-0 text-pearl start-100 translate-middle badge fw-normal px-2 rounded-pill bg-burntumber border-burntumber`} style={{ zIndex: '2' }}>\r\n                                                        {doctorid ? appointmentdata.length : getAppointments.length}\r\n\r\n                                                    </span>\r\n                                                </button>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-12 col-md-5 col-lg-6 col-xl-6 daterange\">\r\n                            <div className=\"col-12 mt-3 mb-2\">\r\n                                <img src={process.env.PUBLIC_URL + \"/images/today.png\"} alt=\"displaying_image\" />\r\n                                <span className=\"text-burntumber fw-bold\">Select Date Range</span>\r\n                                <button className=\"float-end button-sm button-burntumber\" onClick={clearfields}>Clear</button>\r\n                            </div>\r\n                            <div className=\"d-flex g-md-3\">\r\n                                <input placeholder=\"Start Date\" className=\"form-control\" value={fromdate ? fromdate : APIDate ? APIDate : ''} onFocus={() => { settodate(); setdoctorid() }} type=\"date\" onChange={(e) => { setfromdate(e.target.value) }} />\r\n                                <div className=\"text-center\">_</div>\r\n                                <input disabled={fromdate == null} value={todate ? todate : fromdate ? fromdate : APIDate ? APIDate : ''} placeholder=\"End Date\" className=\"form-control\" type=\"date\" onChange={(e) => { settodate(e.target.value) }} />\r\n                            </div>\r\n                            <div className=\"col-12 mt-2\">\r\n                                <h6 className=\"text-burntumber fw-bold\">Select Doctor to see their appointments</h6>\r\n                                <select className=\"form-control\" value={doctorid ? doctorid : ''} onChange={(e) => { setdoctorid(e.target.value) }}>\r\n                                    <option selected value=\"Select Doctor\">Select Doctor</option>\r\n                                    {\r\n                                        visibles ? (\r\n                                            docnames.map((response, i) => (\r\n                                                <option className={`form-control text-charcoal`} key={i} value={response[0]} >Dr. {response[1]}{' '}{' '}{CountAppointments(response[0])}</option>\r\n                                            ))\r\n\r\n                                        ) : (<option>Loading..</option>)\r\n                                    }\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <section className=\"container-fluid scroll scroll-y mt-2 \" >\r\n                    <table className=\"table text-start\">\r\n                        <thead className=\"text-charcoal75 fw-bold\">\r\n                            <tr className=\" bg-pearl position-sticky top-0\">\r\n                                <th className={`text-center d-${permission.appointment_edit == 1 ? '' : 'none'}`}>Update</th>\r\n                                <th className=\"\">Status</th>\r\n                                <th>Patient</th>\r\n                                <th>Doctor Name</th>\r\n                                {/* <th>Phone Number</th> */}\r\n                                <th>Date & F/U Date</th>\r\n                                <th>Time</th>\r\n                                <th>Amount</th>\r\n                                {/* <th>Rx</th> */}\r\n                                {/* <th>F/U Date</th> */}\r\n                                {/* <th>Actions</th> */}\r\n                                <th className=\" text-center bg-pearl\">More</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-charcoal \">\r\n                            {\r\n                                doctorid ? (\r\n                                    <SelectedAppointments appointmentdata={appointmentdata} isselectedLoading={isselectedLoading} type={type} doctorid={doctorid} fromdate={fromdate} todate={todate} fetchallAppointmentslist={fetchallAppointmentslist} status={status} status_color={status_color} tConvert={tConvert} fetchapi={props.fetchapi} />\r\n                                ) : (\r\n\r\n                                    <AllAppointmentslist isLoading={isLoading} getAppointments={getAppointments} type={type} fromdate={fromdate} todate={todate} doctorid={doctorid} fetchallAppointmentslist={fetchallAppointmentslist} status={status} status_color={status_color} tConvert={tConvert} fetchapi={props.fetchapi} />\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n\r\n            </section>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default Appointments","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Patients.jsx",["1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249"],[],"import { useState, useEffect, useContext, useRef } from \"react\"\r\nimport axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport { URL, TodayDate, DoctorsList, Doctorapi, Permissions, Secretkey } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\"\r\nimport { UpdatePatient } from '../Patients/UpdatePatient'\r\n//css\r\nimport '../../css/patient.css'\r\nfunction Patients() {\r\n    const url = useContext(URL)\r\n    const permission = useContext(Permissions)\r\n    const adminid = localStorage.getItem('id')\r\n    const [PatientsList, setPatientsList] = useState([])\r\n    const [pages, setpages] = useState()\r\n    const [pagecount, setpagecount] = useState()\r\n    const [tabindex, settabindex] = useState(0)\r\n    const [Loading, setLoading] = useState(false)\r\n    const [patientsearch, setpatientsearch] = useState()\r\n  \r\n    function GetPages() {\r\n      try {\r\n        axios.get(`${url}/patient/list?search=${patientsearch ? patientsearch : ''}&limit=10&offset=0`).then((response) => {\r\n          setpagecount(response.data.data.total_count)\r\n          setpages(Math.round(response.data.data.total_count / 10) + 1)\r\n          setLoading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e.message)\r\n          setLoading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      }\r\n    }\r\n    async function getAllPatients(Data) {\r\n      if (Data == undefined || Data.selected == undefined) {\r\n        setLoading(true)\r\n        setPatientsList()\r\n        await axios.get(`${url}/patient/list?search=${patientsearch ? patientsearch : ''}&limit=10&offset=0`).then((response) => {\r\n          setPatientsList(response.data.data.patients_list)\r\n        })\r\n        setLoading(false)\r\n      } else {\r\n        setLoading(true)\r\n        setPatientsList()\r\n        await axios.get(`${url}/patient/list?search=${patientsearch ? patientsearch : ''}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n          setPatientsList(response.data.data.patients_list)\r\n        })\r\n        setLoading(false)\r\n      }\r\n  \r\n  \r\n    }\r\n    useEffect(() => {\r\n      GetPages()\r\n      getAllPatients()\r\n    }, [pagecount, patientsearch])\r\n  \r\n  \r\n    async function DeletePatient(patientid) {\r\n      if (adminid && patientid) {\r\n        try {\r\n          console.log('hit')\r\n          await axios.post(`${url}/delete/patient`, {\r\n            id: patientid,\r\n            admin_id: adminid\r\n  \r\n          }).then((response) => {\r\n            Notiflix.Notify.success(response.data.message)\r\n            getAllPatients()\r\n          })\r\n        } catch (e) {\r\n          alert(e)\r\n        }\r\n      }\r\n    }\r\n    function confirmmessage(name, patientid) {\r\n      customconfirm()\r\n      Notiflix.Confirm.show(\r\n        `Delete Patient`,\r\n        `Do you surely want to Delete Patient ${name} `,\r\n        'Yes',\r\n        'No',\r\n        () => {\r\n          DeletePatient(patientid)\r\n        },\r\n        () => {\r\n          return 0\r\n        },\r\n        {\r\n        },\r\n      );\r\n    }\r\n    const reversefunction = (date) => {\r\n      if (date) {\r\n        date = date.split(\"-\").reverse().join(\"-\")\r\n        return date\r\n      }\r\n  \r\n    }\r\n    const [updatepatient, setupdatepatient] = useState('none')\r\n    const [form, setform] = useState();\r\n  \r\n    const OpenUpdatePatient = (i) => {\r\n      if (updatepatient === 'none') {\r\n        setupdatepatient('block')\r\n        setform(i)\r\n      }\r\n    }\r\n  \r\n    const CloseUpdatePatient = () => {\r\n      if (updatepatient === 'block') {\r\n        setupdatepatient('none')\r\n      }\r\n    }\r\n    return (\r\n      <section className=\"patientsection text-center position-relative\">\r\n        <div className=\"conatainer searchbar\">\r\n          <input className=\" form-control m-auto mt-2\" placeholder=\"Search Patient By Name or Number\" onChange={(e) => { setpatientsearch(e.target.value); getAllPatients(); }} onBlur={getAllPatients} />\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 scroll scroll-y \" style={{ minHeight: '30rem' }}>\r\n          <table className=\"table text-start fw-bold\" >\r\n            <thead className=\"text-charcoal75\">\r\n              <tr>\r\n                <th className={`d-${permission.patient_edit == 1 ? '' : 'none'}`}>Update</th>\r\n                <th>Patient Name</th>\r\n                <th>Gender</th>\r\n                <th>DOB</th>\r\n                <th>Email</th>\r\n                {/* <th>Address</th>\r\n                <th>Location</th> */}\r\n                <th>Pincode</th>\r\n                <th>Phone Number</th>\r\n                <th>Is Main Account</th>\r\n                <th className={`d-${permission.patient_delete == 1 ? '' : 'none'}`}>Delete</th>\r\n                {/* <th>More</th> */}\r\n              </tr>\r\n            </thead>\r\n  \r\n            {\r\n              Loading ? (\r\n                <tbody className=' text-center' style={{ minHeight: '30vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center spinner\">\r\n                      <strong className=''>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n  \r\n                </tbody>\r\n              ) : (\r\n                PatientsList && PatientsList.length == 0 ? (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '30vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Patients found</td>\r\n                    </tr>\r\n                  </tbody>\r\n  \r\n                ) : (\r\n                  <tbody>\r\n                    {\r\n                      PatientsList && PatientsList.map((data, i) => (\r\n                        <tr className=\"align-middle\">\r\n                          <td className={`d-${permission.patient_edit == 1 ? '' : 'none'}`}>\r\n                            <button className=\"btn p-0 m-0\" onClick={(e) => { settabindex(i); OpenUpdatePatient(i) }}><img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} /></button>\r\n                            {form == i ? (\r\n                              <section id={i} className={`updatepatientform text-start position-absolute d-${tabindex == i ? updatepatient : 'none'} bg-seashell top-0 rounded-1 shadow-sm border`}>\r\n                                <UpdatePatient index={i} getAllPatients={getAllPatients} CloseUpdatePatient={CloseUpdatePatient} patientid={data.id} data={data} phonecountrycode={data.phone_country_code ? data.phone_country_code : 'N/A'} PhoneNo={data.phone_number ? Number(data.phone_number) : ''} dob={data.dob ? data.dob : ''} gender={data.gender ? data.gender : ''} full_name={data.full_name ? data.full_name : ''} email={data.email ? data.email : ''} pincode={data.pin_code ? data.pin_code : ''} location={data.location ? data.location : ''} parent={data.parent} linkid={data.link_id ? data.link_id : ''} relation={data.relation} latitude={data.latitude} longitude={data.longitude} />\r\n                              </section>\r\n                            ) : (<></>)\r\n                            }\r\n  \r\n                          </td>\r\n                          <td>{data.full_name ? data.full_name : 'N/A'}</td>\r\n                          <td>{data.gender ? data.gender : 'N/A'}</td>\r\n                          <td>{data.dob ? reversefunction(data.dob) : 'N/A'}</td>\r\n                          <td>{data.email ? data.email : 'N/A'}</td>\r\n                          <td>{data.pin_code ? data.pin_code : 'N/A'}</td>\r\n                          <td>{data.phone_number ? data.phone_number : 'N/A'}</td>\r\n                          <td>{data.parent ? ' No' : 'Yes'}</td>\r\n                          <td className={`d-${permission.patient_delete == 1 ? '' : 'none'}`}>\r\n                            <button className=\"btn p-0 m-0\" onClick={(e) => { confirmmessage(data.full_name, data.id); }}><img src={process.env.PUBLIC_URL + \"/images/delete.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                        </tr>\r\n  \r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ))\r\n            }\r\n  \r\n          </table>\r\n        </div>\r\n  \r\n        <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n  \r\n          < ReactPaginate\r\n            previousLabel={'Previous'}\r\n            nextLabel={'Next'}\r\n            breakLabel={'.'}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={getAllPatients}\r\n            containerClassName={'pagination scroll align-self-center align-items-center'}\r\n            pageClassName={'page-item text-charcoal'}\r\n            pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1'}\r\n            previousClassName={'btn button-charcoal-outline me-2'}\r\n            previousLinkClassName={'text-decoration-none text-charcoal'}\r\n            nextClassName={'btn button-charcoal-outline ms-2'}\r\n            nextLinkClassName={'text-decoration-none text-charcoal'}\r\n            breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n            breakLinkClassName={'text-decoration-none text-charcoal'}\r\n            activeClassName={'active'}\r\n          />\r\n        </div>\r\n  \r\n      </section>\r\n    )\r\n  \r\n  \r\n  \r\n  }\r\n  export default Patients","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Doctors.jsx",["1250","1251","1252","1253","1254","1255","1256","1257","1258"],[],"import axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport Notiflix from 'notiflix';\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { UpdateDoctor } from \"../Doctors/UpdateDoctor\"\r\nimport { URL } from '../../index'\r\n//css\r\nimport '../../css/Doctors.css'\r\n\r\nfunction Doctors() {\r\n    const url = useContext(URL)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const imagepath = 'https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/assets/doctor/'\r\n    const [Doctorssearch, setDoctorssearch] = useState()\r\n    const [Doctorslist, setDoctorslist] = useState([])\r\n    const [pages, setpages] = useState()\r\n    const [pagecount, setpagecount] = useState()\r\n    const [tabindex, settabindex] = useState()\r\n    const [form, setform] = useState()\r\n    const [pageloading, setpageloading] = useState(false)\r\n    const [updatedoctor, setupdatedoctor] = useState('none')\r\n    function GetPages() {\r\n      try {\r\n        axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=0`).then((response) => {\r\n          setpagecount(response.data.data.total_count)\r\n          setpages(Math.round(response.data.data.total_count / 10) + 1)\r\n          setpageloading(false)\r\n        }).catch((e) => {\r\n          Notiflix.Notify.warning(e.message)\r\n          setpageloading(false)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.warning(e.message)\r\n        setpageloading(false)\r\n      }\r\n    }\r\n    async function getAllDoctors(Data) {\r\n      if (Data == undefined || Data.selected == undefined) {\r\n        setpageloading(true)\r\n        setDoctorslist()\r\n        await axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=0`).then((response) => {\r\n          setDoctorslist(response.data.data.doctor_list)\r\n          console.log(response)\r\n        })\r\n        setpageloading(false)\r\n      } else {\r\n        setpageloading(true)\r\n        setDoctorslist()\r\n        await axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n          setDoctorslist(response.data.data.doctor_list)\r\n        })\r\n        setpageloading(false)\r\n      }\r\n  \r\n    }\r\n  \r\n    useEffect(() => {\r\n      GetPages()\r\n      getAllDoctors()\r\n    }, [pagecount, Doctorssearch])\r\n  \r\n    function OpenUpdateDoctor(i) {\r\n      if (updatedoctor === 'none') {\r\n        setupdatedoctor('block')\r\n        setform(i)\r\n      }\r\n    }\r\n    function CloseUpdateDoctor() {\r\n      if (updatedoctor === 'block') {\r\n        setupdatedoctor('none')\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <section className=\"Doctorspage text-center position-relative\">\r\n        <div className=\"conatainer searchbar\">\r\n          <input className=\"form-control m-auto mt-2\" placeholder=\"Search Doctor\" onChange={(e) => { setDoctorssearch(e.target.value) }} />\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 scroll scroll-y\" style={{ minHeight: '30rem' }}>\r\n          <table className=\"table text-start fw-bold\" >\r\n            <thead className=\"text-charcoal75\">\r\n              <tr>\r\n                <th>Update</th>\r\n                <th>Name</th>\r\n                <th>Specialization</th>\r\n                <th>Degree</th>\r\n                <th>Mobile No.</th>\r\n                <th>Email Id</th>\r\n                <th>Procedures</th>\r\n                {/* <th>More</th> */}\r\n              </tr>\r\n            </thead>\r\n  \r\n            {\r\n              pageloading ? (\r\n                <tbody className=' text-center' style={{ minHeight: '30vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className=''>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n  \r\n                </tbody>\r\n              ) : (\r\n                Doctorslist && Doctorslist.length == 0 ? (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '30vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Doctors found</td>\r\n                    </tr>\r\n                  </tbody>\r\n  \r\n                ) : (\r\n                  <tbody style={{ minHeight: '32vh' }}>\r\n                    {\r\n                      Doctorslist && Doctorslist.map((data, i) => (\r\n                        <tr className=\"align-middle\">\r\n                          <td><button className=\"btn p-0 m-0\" onClick={(e) => { settabindex(i); OpenUpdateDoctor(i) }}><img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} /></button>\r\n                            {form == i ? (\r\n                              <section id={i} className={`scroll scroll-y position-absolute d-${tabindex == i ? updatedoctor : 'none'} bg-seashell rounded shadow top-0 bottom-2 `} style={{ marginLeft: '22.5rem', width: '40rem', height: '35rem' }}>\r\n                                <UpdateDoctor index={i} CloseUpdateDoctor={CloseUpdateDoctor} patientid={data.id} data={data} phonecountrycode={data.phone_country_code ? data.phone_country_code : ''} PhoneNo={data.phone_number ? Number(data.phone_number) : ''} dob={data.dob ? data.dob : ''} gender={data.gender ? data.gender : ''} full_name={data.full_name ? data.full_name : ''} email={data.email ? data.email : ''} pincode={data.pin_code ? data.pin_code : ''} location={data.location ? data.location : ''} parent={data.parent} linkid={data.link_id ? data.link_id : ''} relation={data.relation} latitude={data.latitude} longitude={data.longitude} />\r\n                              </section>\r\n                            ) : (<></>)\r\n                            }\r\n  \r\n                          </td>\r\n                          <td className=\"pe-5\">{data.image ? <img className=\"img-fluid rounded-5\" style={{ width: '2rem' }} src={imagepath + data.image} /> : 'Image not found'}{' '}{data.doctor_name ? data.doctor_name : ''}</td>\r\n                          <td>{data.speciality.name}</td>\r\n                          <td>{data.degree_suffix ? data.degree_suffix : ''}</td>\r\n                          <td>{data.phone_number ? data.phone_number : ''}</td>\r\n                          <td>{data.email}</td>\r\n                          <td className=\"text-center\"><button className=\"btn p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/info.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          {/* <td><button className=\"btn p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td> */}\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n  \r\n          </table>\r\n        </div>\r\n  \r\n        <div className=\"d-flex text-center justify-content-center mt-3\">\r\n  \r\n          < ReactPaginate\r\n            previousLabel={'Previous'}\r\n            nextLabel={'Next'}\r\n            breakLabel={'. . .'}\r\n            pageCount={pages}\r\n            marginPagesDisplayed={3}\r\n            pageRangeDisplayed={2}\r\n            onPageChange={getAllDoctors}\r\n            containerClassName={'pagination'}\r\n            pageClassName={'page-item text-charcoal'}\r\n            pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1'}\r\n            previousClassName={'btn button-charcoal-outline me-2'}\r\n            previousLinkClassName={'text-decoration-none text-charcoal'}\r\n            nextClassName={'btn button-charcoal-outline ms-2'}\r\n            nextLinkClassName={'text-decoration-none text-charcoal'}\r\n            breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n            breakLinkClassName={'text-decoration-none text-charcoal'}\r\n            activeClassName={'active'}\r\n          />\r\n        </div>\r\n  \r\n      </section>\r\n    )\r\n  }\r\n  export default Doctors","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Dsr.jsx",["1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278"],[],"C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\DSR.jsx",["1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296"],[],"import axios from \"axios\"\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { Appointments_Dsr } from '../Dsr/Appointments_Dsr'\r\nimport { Doctors_Dsr } from '../Dsr/Doctors_Dsr'\r\nimport { Pharmacy_Dsr } from '../Dsr/Pharmacy_Dsr'\r\nimport { URL, TodayDate, DoctorsList, Permissions } from '../../index'\r\nimport { Livetime } from \"../features/livetime\"\r\n\r\nfunction DailySaleReport(props) {\r\n  const permission = useContext(Permissions)\r\n  const Doctors = useContext(DoctorsList)\r\n  const CurrentDate = useContext(TodayDate)\r\n  const clinicid = localStorage.getItem('ClinicId')\r\n  const options = [\r\n    {\r\n      option: 'Appointments',\r\n      display: permission.dsr_appointments ? 1 : 0,\r\n    },\r\n    {\r\n      option: 'Doctors',\r\n      display: permission.dsr_doctor_timings ? 1 : 0,\r\n    },\r\n    {\r\n      option: 'Pharmacy',\r\n      display: permission.dsr_pharmacy ? 1 : 0\r\n    }\r\n\r\n  ]\r\n  // permission.dsr_appointments ? 0 :  permission.dsr_doctor_timings ? 1 : permission.dsr_pharmacy ? 2:''\r\n  const [menu, setmenu] = useState(permission.dsr_appointments ? 0 : permission.dsr_doctor_timings ? 1 : permission.dsr_pharmacy ? 2 : '')\r\n  const [type, settype] = useState('text')\r\n  const [doctorid, setdoctorid] = useState()\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [clinic, setclinic] = useState(clinicid)\r\n\r\n\r\n  function ToggleOptions(_menu) {\r\n    if (permission.dsr_appointments == 1 && _menu == 0) {\r\n      return <Appointments_Dsr clinic={clinic} doctorid={doctorid} fromdate={fromdate ? fromdate : CurrentDate} todate={todate ? todate : fromdate} />\r\n    }\r\n    if (permission.dsr_doctor_timings == 1 && _menu == 1) {\r\n      return <Doctors_Dsr clinicid={clinicid} doctorid={doctorid} fromdate={fromdate ? fromdate : CurrentDate} todate={todate ? todate : fromdate} />\r\n    }\r\n    if (permission.dsr_pharmacy == 1 && menu == 2) {\r\n      return <Pharmacy_Dsr clinicid={clinicid} doctorid={doctorid} fromdate={fromdate ? fromdate : CurrentDate} todate={todate ? todate : fromdate} />\r\n    }\r\n    return <div>Please Select an Option from above</div>\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"DSRsection mt-1\">\r\n      <div className=\"p-0 m-0 mb-2\">\r\n        <div className=\"row p-0 m-0 options align-items-center bg-seashell \">\r\n          <div className=\" hstack gap-3 d-flex p-0 m-0 p-1 align-items-center\">\r\n            {\r\n              options.map((data, i) => (\r\n                <>\r\n                  <div className={`col-auto p-0 m-0 d-${data.display == 1 ? '' : 'none'}`}>\r\n                    <button className={`button m-0 p-0 px-2 py-1 ms-1 border-0 button-${i == menu ? 'charcoal' : ''} `} id={i} key={i} onClick={() => { setmenu(i) }}>{data.option}</button>\r\n                  </div>\r\n                  <div className={`vr rounded-1 h-50 align-self-center d-${data.display == 1 ? '' : 'none'}`} style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row p-0 m-0 align-items-center gx-2 \">\r\n          <div className=\"col-auto\">\r\n            <div className=\"container-fluid p-0 m-0 my-2 \">\r\n              <div className=\"row m-0 p-0 align-items-center\">\r\n                <span className='col-auto fs-4 text-charcoal fw-bold p-0 m-0'>{<Livetime />}</span>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"dropdown\">\r\n              <button className=\"button button p-0 m-0 px-1 py-1 button-pearl text-burntumber  fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Filter Options\r\n              </button>\r\n              <ul className=\"dropdown-menu\">\r\n                <li className=\"text-start\"><button className=\"dropdown-item border-bottom\" >\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <select className=\"px-1 bg-transparent border-0 text-charcoal py-2  py-md-1 text-center \" value={clinic ? clinic : ''} onChange={(e) => { setclinic(e.target.value) }}>\r\n                      <option value=\"Select Clinic\">Clinic</option>\r\n                      {\r\n                        props.cliniclist ? (\r\n                          props.cliniclist.map((data) => (\r\n                            <option className=\"text-start\" value={data.id}>{data.id}.{' '}{data.title}</option>\r\n                          ))\r\n                        ) : (\r\n                          <option>Loading</option>\r\n                        )\r\n                      }\r\n                    </select>\r\n                  </div></button></li>\r\n                <li className=\"text-start\"><button className=\"dropdown-item border-bottom \" >\r\n                  <div className=\"col-auto p-0 m-0 \">\r\n                    <select className=\"bg-pearl text-center bg-transparent border-0 text-charcoal px-1 py-2 py-md-1\" value={doctorid ? doctorid : ''} onChange={(e) => setdoctorid(e.target.value)}>\r\n                      <option value='Doctors'>Select Doctor</option>\r\n                      {\r\n                        Doctors.map((data) => (\r\n                          <>\r\n                            <option className=\"text-start\" value={data[0]}> Dr.{data[1]} </option>\r\n\r\n                          </>\r\n                        ))\r\n                      }\r\n                    </select>\r\n                  </div></button></li>\r\n                <li className=\"text-start\"><button className=\"dropdown-item \">\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <div className=\"row p-0 m-0 text-center\">\r\n                      <input type='date' placeholder=\"from Date\" value={fromdate ? fromdate : CurrentDate ? CurrentDate : ''} className=' bg-pearl col-auto px-2 border-0 outline-none text-charcoal ' onChange={(e) => setfromdate(e.target.value)} />\r\n                      <div className=\"bg-pearl fw-bolder col-auto\">-</div>\r\n                      <input type='date' placeholder=\"to Date\" value={todate ? todate : CurrentDate ? CurrentDate : ''} className='bg-pearl px-2 border-0 col-auto outline-none text-charcoal' onChange={(e) => settodate(e.target.value)} />\r\n                    </div>\r\n                  </div></button></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"container-fluid  m-0 p-0 \">\r\n        <div className=\"p-0 m-0\">{ToggleOptions(menu)}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailySaleReport","C:\\Users\\prath\\Desktop\\Connect_App\\src\\components\\App\\Pharmacy.jsx",["1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317"],[],"import { useState, useEffect, useContext, useRef } from \"react\"\r\nimport axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport { URL, TodayDate, DoctorsList, Doctorapi, Permissions, Secretkey } from '../../index'\r\nimport { Salesection, Purchasesection, Stocksection, Listsection } from \"../pharmacy/pharmacy\"\r\nimport { Livetime } from \"../features/livetime\"\r\n//css\r\nimport '../../css/pharmacy.css'\r\nfunction Pharmacy() {\r\n    const permission = useContext(Permissions)\r\n    let menu = [\r\n      {\r\n        option: \"Sale\",\r\n        display: permission.sale_entry_view == undefined && permission.ale_return_view == undefined ? 0 : 1,\r\n      },\r\n      {\r\n        option: \"Stock Info\",\r\n        display: permission.purchase_entry_view == undefined && permission.purchase_orders_view == undefined && permission.purchase_return_view == undefined ? 0 : 1,\r\n      },\r\n      {\r\n        option: \"Purchase\",\r\n        display: permission.purchase_entry_view == undefined && permission.purchase_orders_view == undefined && permission.purchase_return_view == undefined ? 0 : 1,\r\n      },\r\n      {\r\n        option: \"Lists\",\r\n        display: permission.vaccine_view == undefined && permission.medicine_view == undefined ? 0 : 1,\r\n      }\r\n  \r\n    ];\r\n    const [menuindex, setmenuindex] = useState(0);\r\n    const _selectedmenu = (_menu) => {\r\n      if (_menu === 0) {\r\n        return <div className=\"\">\r\n          <Salesection />\r\n        </div>;\r\n      }\r\n      if (_menu === 1) {\r\n        return (\r\n          <div className=\"\">\r\n            <Stocksection />\r\n          </div>\r\n        );\r\n      }\r\n      if (_menu === 2) {\r\n        return <Purchasesection />;\r\n      }\r\n      if (_menu === 3) {\r\n        return <Listsection />;\r\n      }\r\n      return <div className=\"\">Nothing Selected</div>;\r\n    };\r\n    return (\r\n      <>\r\n        <section className={`pharmacy position-relative`}>\r\n          <div className=\"pharmacysection\">\r\n            <div className=\"container-fluid pharmacytabsection\">\r\n              <div className=\"  gap-3 d-flex p-0 m-0 ms-1 p-1 align-items-center\">\r\n                {\r\n                  menu.map((e, i) => {\r\n                    return (\r\n                      <>\r\n                        <div className={`col-auto p-0 m-0 d-${e.display == 1 ? '' : 'none'}`}>\r\n                          <button className={`button animatebuttons rounded-1 p-0 m-0 py-1 px-4 btn-sm col-auto shadow-none text-${i === menuindex ? 'light' : 'charcoal75 fw-bolder'} button-${i === menuindex ? \"charcoal\" : \"seashell\"} border-${i === menuindex ? 'secondary' : 'none'}`} onClick={(a) => setmenuindex(i)} > {e.option} </button>\r\n                        </div>\r\n                        <div className={`vr rounded-1 h-75 align-self-center d-${e.display == 1 ? '' : 'none'}`} style={{ padding: '0.8px' }}></div>\r\n                      </>\r\n                    );\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-0 m-0 ms-1 text-charcoal75 fw-bold \" style={{ letterSpacing: '1.2px' }}>\r\n            {<Livetime />}\r\n          </div>\r\n          <div className=\"p-0 m-0\">{_selectedmenu(menuindex)}</div>\r\n        </section>\r\n  \r\n      </>\r\n    );\r\n  }\r\n  export default Pharmacy",{"ruleId":"1318","severity":1,"message":"1319","line":15,"column":26,"nodeType":"1320","messageId":"1321","endLine":15,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":15,"column":43,"nodeType":"1320","messageId":"1321","endLine":15,"endColumn":45},{"ruleId":"1318","severity":1,"message":"1319","line":20,"column":26,"nodeType":"1320","messageId":"1321","endLine":20,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":20,"column":43,"nodeType":"1320","messageId":"1321","endLine":20,"endColumn":45},{"ruleId":"1322","severity":1,"message":"1323","line":58,"column":21,"nodeType":"1324","messageId":"1325","endLine":58,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1327","line":133,"column":8,"nodeType":"1328","endLine":133,"endColumn":32,"suggestions":"1329"},{"ruleId":"1318","severity":1,"message":"1319","line":154,"column":26,"nodeType":"1320","messageId":"1321","endLine":154,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":154,"column":43,"nodeType":"1320","messageId":"1321","endLine":154,"endColumn":45},{"ruleId":"1318","severity":1,"message":"1319","line":159,"column":26,"nodeType":"1320","messageId":"1321","endLine":159,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":159,"column":43,"nodeType":"1320","messageId":"1321","endLine":159,"endColumn":45},{"ruleId":"1322","severity":1,"message":"1323","line":200,"column":21,"nodeType":"1324","messageId":"1325","endLine":200,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1330","line":275,"column":8,"nodeType":"1328","endLine":275,"endColumn":33,"suggestions":"1331"},{"ruleId":"1318","severity":1,"message":"1319","line":297,"column":26,"nodeType":"1320","messageId":"1321","endLine":297,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":297,"column":43,"nodeType":"1320","messageId":"1321","endLine":297,"endColumn":45},{"ruleId":"1318","severity":1,"message":"1319","line":302,"column":26,"nodeType":"1320","messageId":"1321","endLine":302,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":302,"column":43,"nodeType":"1320","messageId":"1321","endLine":302,"endColumn":45},{"ruleId":"1322","severity":1,"message":"1323","line":357,"column":21,"nodeType":"1324","messageId":"1325","endLine":357,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1332","line":434,"column":8,"nodeType":"1328","endLine":434,"endColumn":28,"suggestions":"1333"},{"ruleId":"1318","severity":1,"message":"1319","line":454,"column":26,"nodeType":"1320","messageId":"1321","endLine":454,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":454,"column":43,"nodeType":"1320","messageId":"1321","endLine":454,"endColumn":45},{"ruleId":"1318","severity":1,"message":"1319","line":459,"column":26,"nodeType":"1320","messageId":"1321","endLine":459,"endColumn":28},{"ruleId":"1318","severity":1,"message":"1319","line":459,"column":43,"nodeType":"1320","messageId":"1321","endLine":459,"endColumn":45},{"ruleId":"1322","severity":1,"message":"1323","line":504,"column":21,"nodeType":"1324","messageId":"1325","endLine":504,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1334","line":581,"column":8,"nodeType":"1328","endLine":581,"endColumn":29,"suggestions":"1335"},{"ruleId":"1336","severity":1,"message":"1337","line":62,"column":70,"nodeType":"1338","messageId":"1339","endLine":62,"endColumn":72},{"ruleId":"1340","severity":1,"message":"1341","line":95,"column":19,"nodeType":"1324","messageId":"1342","endLine":95,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":156,"column":14,"nodeType":"1338","messageId":"1339","endLine":156,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":156,"column":44,"nodeType":"1338","messageId":"1339","endLine":156,"endColumn":46},{"ruleId":"1326","severity":1,"message":"1343","line":225,"column":6,"nodeType":"1328","endLine":225,"endColumn":33,"suggestions":"1344"},{"ruleId":"1326","severity":1,"message":"1345","line":230,"column":6,"nodeType":"1328","endLine":230,"endColumn":17,"suggestions":"1346"},{"ruleId":"1336","severity":1,"message":"1337","line":247,"column":18,"nodeType":"1338","messageId":"1339","endLine":247,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":257,"column":18,"nodeType":"1338","messageId":"1339","endLine":257,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":308,"column":15,"nodeType":"1338","messageId":"1339","endLine":308,"endColumn":17},{"ruleId":"1336","severity":1,"message":"1337","line":339,"column":115,"nodeType":"1338","messageId":"1339","endLine":339,"endColumn":117},{"ruleId":"1336","severity":1,"message":"1347","line":401,"column":51,"nodeType":"1338","messageId":"1339","endLine":401,"endColumn":53},{"ruleId":"1336","severity":1,"message":"1337","line":404,"column":45,"nodeType":"1338","messageId":"1339","endLine":404,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":413,"column":62,"nodeType":"1338","messageId":"1339","endLine":413,"endColumn":64},{"ruleId":"1336","severity":1,"message":"1337","line":413,"column":126,"nodeType":"1338","messageId":"1339","endLine":413,"endColumn":128},{"ruleId":"1336","severity":1,"message":"1337","line":422,"column":62,"nodeType":"1338","messageId":"1339","endLine":422,"endColumn":64},{"ruleId":"1336","severity":1,"message":"1337","line":435,"column":64,"nodeType":"1338","messageId":"1339","endLine":435,"endColumn":66},{"ruleId":"1336","severity":1,"message":"1337","line":436,"column":24,"nodeType":"1338","messageId":"1339","endLine":436,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":443,"column":157,"nodeType":"1338","messageId":"1339","endLine":443,"endColumn":159},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":24,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":26},{"ruleId":"1340","severity":1,"message":"1348","line":501,"column":10,"nodeType":"1324","messageId":"1342","endLine":501,"endColumn":26},{"ruleId":"1340","severity":1,"message":"1349","line":501,"column":28,"nodeType":"1324","messageId":"1342","endLine":501,"endColumn":47},{"ruleId":"1340","severity":1,"message":"1350","line":526,"column":12,"nodeType":"1324","messageId":"1342","endLine":526,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1351","line":536,"column":6,"nodeType":"1328","endLine":536,"endColumn":8,"suggestions":"1352"},{"ruleId":"1326","severity":1,"message":"1353","line":593,"column":6,"nodeType":"1328","endLine":593,"endColumn":26,"suggestions":"1354"},{"ruleId":"1336","severity":1,"message":"1337","line":644,"column":41,"nodeType":"1338","messageId":"1339","endLine":644,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":656,"column":48,"nodeType":"1338","messageId":"1339","endLine":656,"endColumn":50},{"ruleId":"1355","severity":1,"message":"1356","line":676,"column":21,"nodeType":"1357","endLine":676,"endColumn":130},{"ruleId":"1355","severity":1,"message":"1356","line":700,"column":21,"nodeType":"1357","endLine":700,"endColumn":130},{"ruleId":"1336","severity":1,"message":"1337","line":719,"column":47,"nodeType":"1338","messageId":"1339","endLine":719,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1356","line":721,"column":15,"nodeType":"1357","endLine":721,"endColumn":119},{"ruleId":"1355","severity":1,"message":"1356","line":725,"column":15,"nodeType":"1357","endLine":725,"endColumn":119},{"ruleId":"1336","severity":1,"message":"1337","line":744,"column":102,"nodeType":"1338","messageId":"1339","endLine":744,"endColumn":104},{"ruleId":"1336","severity":1,"message":"1337","line":761,"column":13,"nodeType":"1338","messageId":"1339","endLine":761,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":762,"column":18,"nodeType":"1338","messageId":"1339","endLine":762,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":767,"column":13,"nodeType":"1338","messageId":"1339","endLine":767,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":768,"column":17,"nodeType":"1338","messageId":"1339","endLine":768,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":825,"column":78,"nodeType":"1338","messageId":"1339","endLine":825,"endColumn":80},{"ruleId":"1336","severity":1,"message":"1337","line":852,"column":21,"nodeType":"1338","messageId":"1339","endLine":852,"endColumn":23},{"ruleId":"1336","severity":1,"message":"1337","line":882,"column":32,"nodeType":"1338","messageId":"1339","endLine":882,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":899,"column":59,"nodeType":"1338","messageId":"1339","endLine":899,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":906,"column":59,"nodeType":"1338","messageId":"1339","endLine":906,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":913,"column":59,"nodeType":"1338","messageId":"1339","endLine":913,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":920,"column":59,"nodeType":"1338","messageId":"1339","endLine":920,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":927,"column":59,"nodeType":"1338","messageId":"1339","endLine":927,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":934,"column":59,"nodeType":"1338","messageId":"1339","endLine":934,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":972,"column":71,"nodeType":"1338","messageId":"1339","endLine":972,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":978,"column":71,"nodeType":"1338","messageId":"1339","endLine":978,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":984,"column":71,"nodeType":"1338","messageId":"1339","endLine":984,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":990,"column":71,"nodeType":"1338","messageId":"1339","endLine":990,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":996,"column":71,"nodeType":"1338","messageId":"1339","endLine":996,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1002,"column":71,"nodeType":"1338","messageId":"1339","endLine":1002,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1060,"column":32,"nodeType":"1338","messageId":"1339","endLine":1060,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":1076,"column":59,"nodeType":"1338","messageId":"1339","endLine":1076,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1083,"column":59,"nodeType":"1338","messageId":"1339","endLine":1083,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1090,"column":59,"nodeType":"1338","messageId":"1339","endLine":1090,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1097,"column":59,"nodeType":"1338","messageId":"1339","endLine":1097,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1104,"column":59,"nodeType":"1338","messageId":"1339","endLine":1104,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1111,"column":59,"nodeType":"1338","messageId":"1339","endLine":1111,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1149,"column":71,"nodeType":"1338","messageId":"1339","endLine":1149,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1155,"column":71,"nodeType":"1338","messageId":"1339","endLine":1155,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1161,"column":71,"nodeType":"1338","messageId":"1339","endLine":1161,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1167,"column":71,"nodeType":"1338","messageId":"1339","endLine":1167,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1173,"column":71,"nodeType":"1338","messageId":"1339","endLine":1173,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1179,"column":71,"nodeType":"1338","messageId":"1339","endLine":1179,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":1256,"column":14,"nodeType":"1338","messageId":"1339","endLine":1256,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":1256,"column":44,"nodeType":"1338","messageId":"1339","endLine":1256,"endColumn":46},{"ruleId":"1326","severity":1,"message":"1343","line":1325,"column":6,"nodeType":"1328","endLine":1325,"endColumn":24,"suggestions":"1358"},{"ruleId":"1326","severity":1,"message":"1359","line":1330,"column":6,"nodeType":"1328","endLine":1330,"endColumn":17,"suggestions":"1360"},{"ruleId":"1336","severity":1,"message":"1347","line":1432,"column":55,"nodeType":"1338","messageId":"1339","endLine":1432,"endColumn":57},{"ruleId":"1336","severity":1,"message":"1337","line":1437,"column":44,"nodeType":"1338","messageId":"1339","endLine":1437,"endColumn":46},{"ruleId":"1336","severity":1,"message":"1337","line":1494,"column":60,"nodeType":"1338","messageId":"1339","endLine":1494,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":1498,"column":26,"nodeType":"1338","messageId":"1339","endLine":1498,"endColumn":28},{"ruleId":"1340","severity":1,"message":"1361","line":1562,"column":9,"nodeType":"1324","messageId":"1342","endLine":1562,"endColumn":17},{"ruleId":"1340","severity":1,"message":"1362","line":1587,"column":20,"nodeType":"1324","messageId":"1342","endLine":1587,"endColumn":31},{"ruleId":"1340","severity":1,"message":"1363","line":1588,"column":10,"nodeType":"1324","messageId":"1342","endLine":1588,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1364","line":1588,"column":21,"nodeType":"1324","messageId":"1342","endLine":1588,"endColumn":33},{"ruleId":"1336","severity":1,"message":"1337","line":1642,"column":12,"nodeType":"1338","messageId":"1339","endLine":1642,"endColumn":14},{"ruleId":"1336","severity":1,"message":"1337","line":1645,"column":12,"nodeType":"1338","messageId":"1339","endLine":1645,"endColumn":14},{"ruleId":"1336","severity":1,"message":"1337","line":1699,"column":36,"nodeType":"1338","messageId":"1339","endLine":1699,"endColumn":38},{"ruleId":"1326","severity":1,"message":"1365","line":1700,"column":6,"nodeType":"1328","endLine":1700,"endColumn":16,"suggestions":"1366"},{"ruleId":"1336","severity":1,"message":"1337","line":1720,"column":20,"nodeType":"1338","messageId":"1339","endLine":1720,"endColumn":22},{"ruleId":"1326","severity":1,"message":"1367","line":1747,"column":6,"nodeType":"1328","endLine":1747,"endColumn":24,"suggestions":"1368"},{"ruleId":"1336","severity":1,"message":"1337","line":1774,"column":53,"nodeType":"1338","messageId":"1339","endLine":1774,"endColumn":55},{"ruleId":"1336","severity":1,"message":"1337","line":1834,"column":33,"nodeType":"1338","messageId":"1339","endLine":1834,"endColumn":35},{"ruleId":"1336","severity":1,"message":"1337","line":1838,"column":38,"nodeType":"1338","messageId":"1339","endLine":1838,"endColumn":40},{"ruleId":"1336","severity":1,"message":"1337","line":1894,"column":13,"nodeType":"1338","messageId":"1339","endLine":1894,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1369","line":1897,"column":6,"nodeType":"1328","endLine":1897,"endColumn":11,"suggestions":"1370"},{"ruleId":"1340","severity":1,"message":"1371","line":1915,"column":7,"nodeType":"1324","messageId":"1342","endLine":1915,"endColumn":8},{"ruleId":"1336","severity":1,"message":"1337","line":1928,"column":70,"nodeType":"1338","messageId":"1339","endLine":1928,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":1929,"column":119,"nodeType":"1338","messageId":"1339","endLine":1929,"endColumn":121},{"ruleId":"1336","severity":1,"message":"1337","line":1938,"column":147,"nodeType":"1338","messageId":"1339","endLine":1938,"endColumn":149},{"ruleId":"1336","severity":1,"message":"1337","line":1948,"column":89,"nodeType":"1338","messageId":"1339","endLine":1948,"endColumn":91},{"ruleId":"1336","severity":1,"message":"1337","line":1970,"column":25,"nodeType":"1338","messageId":"1339","endLine":1970,"endColumn":27},{"ruleId":"1336","severity":1,"message":"1337","line":1970,"column":48,"nodeType":"1338","messageId":"1339","endLine":1970,"endColumn":50},{"ruleId":"1336","severity":1,"message":"1337","line":1972,"column":35,"nodeType":"1338","messageId":"1339","endLine":1972,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1337","line":2042,"column":36,"nodeType":"1338","messageId":"1339","endLine":2042,"endColumn":38},{"ruleId":"1336","severity":1,"message":"1337","line":2042,"column":66,"nodeType":"1338","messageId":"1339","endLine":2042,"endColumn":68},{"ruleId":"1336","severity":1,"message":"1337","line":2049,"column":103,"nodeType":"1338","messageId":"1339","endLine":2049,"endColumn":105},{"ruleId":"1336","severity":1,"message":"1347","line":2061,"column":47,"nodeType":"1338","messageId":"1339","endLine":2061,"endColumn":49},{"ruleId":"1336","severity":1,"message":"1337","line":2062,"column":48,"nodeType":"1338","messageId":"1339","endLine":2062,"endColumn":50},{"ruleId":"1336","severity":1,"message":"1337","line":2066,"column":105,"nodeType":"1338","messageId":"1339","endLine":2066,"endColumn":107},{"ruleId":"1336","severity":1,"message":"1337","line":2099,"column":32,"nodeType":"1338","messageId":"1339","endLine":2099,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":2099,"column":60,"nodeType":"1338","messageId":"1339","endLine":2099,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":2107,"column":76,"nodeType":"1338","messageId":"1339","endLine":2107,"endColumn":78},{"ruleId":"1355","severity":1,"message":"1356","line":2178,"column":27,"nodeType":"1357","endLine":2178,"endColumn":113},{"ruleId":"1340","severity":1,"message":"1372","line":2262,"column":9,"nodeType":"1324","messageId":"1342","endLine":2262,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1373","line":2263,"column":10,"nodeType":"1324","messageId":"1342","endLine":2263,"endColumn":18},{"ruleId":"1340","severity":1,"message":"1374","line":2267,"column":10,"nodeType":"1324","messageId":"1342","endLine":2267,"endColumn":20},{"ruleId":"1340","severity":1,"message":"1375","line":2267,"column":22,"nodeType":"1324","messageId":"1342","endLine":2267,"endColumn":35},{"ruleId":"1336","severity":1,"message":"1337","line":2301,"column":28,"nodeType":"1338","messageId":"1339","endLine":2301,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":2301,"column":70,"nodeType":"1338","messageId":"1339","endLine":2301,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":2484,"column":43,"nodeType":"1338","messageId":"1339","endLine":2484,"endColumn":45},{"ruleId":"1336","severity":1,"message":"1337","line":2492,"column":66,"nodeType":"1338","messageId":"1339","endLine":2492,"endColumn":68},{"ruleId":"1355","severity":1,"message":"1356","line":2514,"column":17,"nodeType":"1357","endLine":2517,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":2600,"column":67,"nodeType":"1338","messageId":"1339","endLine":2600,"endColumn":69},{"ruleId":"1336","severity":1,"message":"1337","line":2687,"column":13,"nodeType":"1338","messageId":"1339","endLine":2687,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":2688,"column":18,"nodeType":"1338","messageId":"1339","endLine":2688,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":2693,"column":13,"nodeType":"1338","messageId":"1339","endLine":2693,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":2694,"column":17,"nodeType":"1338","messageId":"1339","endLine":2694,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":2759,"column":78,"nodeType":"1338","messageId":"1339","endLine":2759,"endColumn":80},{"ruleId":"1336","severity":1,"message":"1337","line":2777,"column":21,"nodeType":"1338","messageId":"1339","endLine":2777,"endColumn":23},{"ruleId":"1336","severity":1,"message":"1337","line":2812,"column":32,"nodeType":"1338","messageId":"1339","endLine":2812,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":2826,"column":59,"nodeType":"1338","messageId":"1339","endLine":2826,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":2833,"column":59,"nodeType":"1338","messageId":"1339","endLine":2833,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":2840,"column":59,"nodeType":"1338","messageId":"1339","endLine":2840,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":2847,"column":59,"nodeType":"1338","messageId":"1339","endLine":2847,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":2854,"column":59,"nodeType":"1338","messageId":"1339","endLine":2854,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":2861,"column":59,"nodeType":"1338","messageId":"1339","endLine":2861,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":2909,"column":71,"nodeType":"1338","messageId":"1339","endLine":2909,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":2915,"column":71,"nodeType":"1338","messageId":"1339","endLine":2915,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":2921,"column":71,"nodeType":"1338","messageId":"1339","endLine":2921,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":2927,"column":71,"nodeType":"1338","messageId":"1339","endLine":2927,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":2933,"column":71,"nodeType":"1338","messageId":"1339","endLine":2933,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":2939,"column":71,"nodeType":"1338","messageId":"1339","endLine":2939,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3004,"column":32,"nodeType":"1338","messageId":"1339","endLine":3004,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":3026,"column":59,"nodeType":"1338","messageId":"1339","endLine":3026,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3033,"column":59,"nodeType":"1338","messageId":"1339","endLine":3033,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3040,"column":59,"nodeType":"1338","messageId":"1339","endLine":3040,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3047,"column":59,"nodeType":"1338","messageId":"1339","endLine":3047,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3054,"column":59,"nodeType":"1338","messageId":"1339","endLine":3054,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3061,"column":59,"nodeType":"1338","messageId":"1339","endLine":3061,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3110,"column":71,"nodeType":"1338","messageId":"1339","endLine":3110,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3116,"column":71,"nodeType":"1338","messageId":"1339","endLine":3116,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3122,"column":71,"nodeType":"1338","messageId":"1339","endLine":3122,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3128,"column":71,"nodeType":"1338","messageId":"1339","endLine":3128,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3134,"column":71,"nodeType":"1338","messageId":"1339","endLine":3134,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3140,"column":71,"nodeType":"1338","messageId":"1339","endLine":3140,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":3234,"column":55,"nodeType":"1338","messageId":"1339","endLine":3234,"endColumn":57},{"ruleId":"1336","severity":1,"message":"1337","line":3304,"column":14,"nodeType":"1338","messageId":"1339","endLine":3304,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":3304,"column":44,"nodeType":"1338","messageId":"1339","endLine":3304,"endColumn":46},{"ruleId":"1326","severity":1,"message":"1343","line":3372,"column":6,"nodeType":"1328","endLine":3372,"endColumn":33,"suggestions":"1376"},{"ruleId":"1326","severity":1,"message":"1377","line":3377,"column":6,"nodeType":"1328","endLine":3377,"endColumn":17,"suggestions":"1378"},{"ruleId":"1336","severity":1,"message":"1337","line":3467,"column":108,"nodeType":"1338","messageId":"1339","endLine":3467,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1347","line":3585,"column":61,"nodeType":"1338","messageId":"1339","endLine":3585,"endColumn":63},{"ruleId":"1336","severity":1,"message":"1337","line":3590,"column":44,"nodeType":"1338","messageId":"1339","endLine":3590,"endColumn":46},{"ruleId":"1336","severity":1,"message":"1337","line":3597,"column":100,"nodeType":"1338","messageId":"1339","endLine":3597,"endColumn":102},{"ruleId":"1336","severity":1,"message":"1337","line":3653,"column":60,"nodeType":"1338","messageId":"1339","endLine":3653,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":3657,"column":26,"nodeType":"1338","messageId":"1339","endLine":3657,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":3668,"column":104,"nodeType":"1338","messageId":"1339","endLine":3668,"endColumn":106},{"ruleId":"1336","severity":1,"message":"1337","line":3672,"column":26,"nodeType":"1338","messageId":"1339","endLine":3672,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":3755,"column":13,"nodeType":"1338","messageId":"1339","endLine":3755,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":3756,"column":18,"nodeType":"1338","messageId":"1339","endLine":3756,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":3761,"column":13,"nodeType":"1338","messageId":"1339","endLine":3761,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":3762,"column":17,"nodeType":"1338","messageId":"1339","endLine":3762,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":3833,"column":78,"nodeType":"1338","messageId":"1339","endLine":3833,"endColumn":80},{"ruleId":"1336","severity":1,"message":"1337","line":3850,"column":19,"nodeType":"1338","messageId":"1339","endLine":3850,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":3890,"column":32,"nodeType":"1338","messageId":"1339","endLine":3890,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":3909,"column":59,"nodeType":"1338","messageId":"1339","endLine":3909,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3916,"column":59,"nodeType":"1338","messageId":"1339","endLine":3916,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3923,"column":59,"nodeType":"1338","messageId":"1339","endLine":3923,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3930,"column":59,"nodeType":"1338","messageId":"1339","endLine":3930,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3937,"column":59,"nodeType":"1338","messageId":"1339","endLine":3937,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3944,"column":59,"nodeType":"1338","messageId":"1339","endLine":3944,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":3996,"column":71,"nodeType":"1338","messageId":"1339","endLine":3996,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4002,"column":71,"nodeType":"1338","messageId":"1339","endLine":4002,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4010,"column":71,"nodeType":"1338","messageId":"1339","endLine":4010,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4016,"column":71,"nodeType":"1338","messageId":"1339","endLine":4016,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4024,"column":71,"nodeType":"1338","messageId":"1339","endLine":4024,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4030,"column":71,"nodeType":"1338","messageId":"1339","endLine":4030,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4069,"column":109,"nodeType":"1338","messageId":"1339","endLine":4069,"endColumn":111},{"ruleId":"1336","severity":1,"message":"1337","line":4138,"column":32,"nodeType":"1338","messageId":"1339","endLine":4138,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":4157,"column":59,"nodeType":"1338","messageId":"1339","endLine":4157,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":4164,"column":59,"nodeType":"1338","messageId":"1339","endLine":4164,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":4171,"column":59,"nodeType":"1338","messageId":"1339","endLine":4171,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":4178,"column":59,"nodeType":"1338","messageId":"1339","endLine":4178,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":4185,"column":59,"nodeType":"1338","messageId":"1339","endLine":4185,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":4192,"column":59,"nodeType":"1338","messageId":"1339","endLine":4192,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":4244,"column":71,"nodeType":"1338","messageId":"1339","endLine":4244,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4250,"column":71,"nodeType":"1338","messageId":"1339","endLine":4250,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4256,"column":71,"nodeType":"1338","messageId":"1339","endLine":4256,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4262,"column":71,"nodeType":"1338","messageId":"1339","endLine":4262,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4268,"column":71,"nodeType":"1338","messageId":"1339","endLine":4268,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4274,"column":71,"nodeType":"1338","messageId":"1339","endLine":4274,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":4311,"column":109,"nodeType":"1338","messageId":"1339","endLine":4311,"endColumn":111},{"ruleId":"1336","severity":1,"message":"1337","line":4402,"column":28,"nodeType":"1338","messageId":"1339","endLine":4402,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":4455,"column":30,"nodeType":"1338","messageId":"1339","endLine":4455,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":4455,"column":72,"nodeType":"1338","messageId":"1339","endLine":4455,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":4692,"column":34,"nodeType":"1338","messageId":"1339","endLine":4692,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":4753,"column":20,"nodeType":"1338","messageId":"1339","endLine":4753,"endColumn":22},{"ruleId":"1336","severity":1,"message":"1337","line":4806,"column":22,"nodeType":"1338","messageId":"1339","endLine":4806,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1379","line":4897,"column":6,"nodeType":"1328","endLine":4897,"endColumn":17,"suggestions":"1380"},{"ruleId":"1326","severity":1,"message":"1381","line":4902,"column":6,"nodeType":"1328","endLine":4902,"endColumn":17,"suggestions":"1382"},{"ruleId":"1326","severity":1,"message":"1383","line":4905,"column":6,"nodeType":"1328","endLine":4905,"endColumn":19,"suggestions":"1384"},{"ruleId":"1326","severity":1,"message":"1385","line":4905,"column":7,"nodeType":"1386","endLine":4905,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1387","line":4909,"column":6,"nodeType":"1328","endLine":4909,"endColumn":35,"suggestions":"1388"},{"ruleId":"1326","severity":1,"message":"1385","line":4909,"column":7,"nodeType":"1386","endLine":4909,"endColumn":21},{"ruleId":"1326","severity":1,"message":"1385","line":4909,"column":23,"nodeType":"1386","endLine":4909,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":4960,"column":40,"nodeType":"1338","messageId":"1339","endLine":4960,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":4973,"column":18,"nodeType":"1338","messageId":"1339","endLine":4973,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1347","line":4974,"column":41,"nodeType":"1338","messageId":"1339","endLine":4974,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":5022,"column":18,"nodeType":"1338","messageId":"1339","endLine":5022,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":5022,"column":35,"nodeType":"1338","messageId":"1339","endLine":5022,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1347","line":5023,"column":41,"nodeType":"1338","messageId":"1339","endLine":5023,"endColumn":43},{"ruleId":"1389","severity":1,"message":"1390","line":5034,"column":21,"nodeType":"1338","messageId":"1391","endLine":5034,"endColumn":22},{"ruleId":"1389","severity":1,"message":"1390","line":5038,"column":40,"nodeType":"1338","messageId":"1391","endLine":5038,"endColumn":41},{"ruleId":"1336","severity":1,"message":"1337","line":5077,"column":28,"nodeType":"1338","messageId":"1339","endLine":5077,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":5077,"column":70,"nodeType":"1338","messageId":"1339","endLine":5077,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":5084,"column":16,"nodeType":"1338","messageId":"1339","endLine":5084,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":5087,"column":16,"nodeType":"1338","messageId":"1339","endLine":5087,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":5118,"column":38,"nodeType":"1338","messageId":"1339","endLine":5118,"endColumn":40},{"ruleId":"1336","severity":1,"message":"1337","line":5119,"column":70,"nodeType":"1338","messageId":"1339","endLine":5119,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":5152,"column":40,"nodeType":"1338","messageId":"1339","endLine":5152,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":5170,"column":40,"nodeType":"1338","messageId":"1339","endLine":5170,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":5230,"column":47,"nodeType":"1338","messageId":"1339","endLine":5230,"endColumn":49},{"ruleId":"1336","severity":1,"message":"1337","line":5242,"column":68,"nodeType":"1338","messageId":"1339","endLine":5242,"endColumn":70},{"ruleId":"1336","severity":1,"message":"1337","line":5246,"column":47,"nodeType":"1338","messageId":"1339","endLine":5246,"endColumn":49},{"ruleId":"1336","severity":1,"message":"1337","line":5367,"column":51,"nodeType":"1338","messageId":"1339","endLine":5367,"endColumn":53},{"ruleId":"1336","severity":1,"message":"1337","line":5373,"column":43,"nodeType":"1338","messageId":"1339","endLine":5373,"endColumn":45},{"ruleId":"1336","severity":1,"message":"1337","line":5406,"column":69,"nodeType":"1338","messageId":"1339","endLine":5406,"endColumn":71},{"ruleId":"1336","severity":1,"message":"1337","line":5452,"column":39,"nodeType":"1338","messageId":"1339","endLine":5452,"endColumn":41},{"ruleId":"1336","severity":1,"message":"1337","line":5455,"column":32,"nodeType":"1338","messageId":"1339","endLine":5455,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":5489,"column":45,"nodeType":"1338","messageId":"1339","endLine":5489,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":5509,"column":74,"nodeType":"1338","messageId":"1339","endLine":5509,"endColumn":76},{"ruleId":"1336","severity":1,"message":"1337","line":5662,"column":65,"nodeType":"1338","messageId":"1339","endLine":5662,"endColumn":67},{"ruleId":"1336","severity":1,"message":"1337","line":5698,"column":65,"nodeType":"1338","messageId":"1339","endLine":5698,"endColumn":67},{"ruleId":"1336","severity":1,"message":"1337","line":5732,"column":65,"nodeType":"1338","messageId":"1339","endLine":5732,"endColumn":67},{"ruleId":"1336","severity":1,"message":"1337","line":5802,"column":29,"nodeType":"1338","messageId":"1339","endLine":5802,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":5802,"column":49,"nodeType":"1338","messageId":"1339","endLine":5802,"endColumn":51},{"ruleId":"1336","severity":1,"message":"1337","line":6044,"column":14,"nodeType":"1338","messageId":"1339","endLine":6044,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":6044,"column":44,"nodeType":"1338","messageId":"1339","endLine":6044,"endColumn":46},{"ruleId":"1326","severity":1,"message":"1343","line":6112,"column":6,"nodeType":"1328","endLine":6112,"endColumn":33,"suggestions":"1392"},{"ruleId":"1326","severity":1,"message":"1393","line":6117,"column":6,"nodeType":"1328","endLine":6117,"endColumn":17,"suggestions":"1394"},{"ruleId":"1336","severity":1,"message":"1347","line":6224,"column":61,"nodeType":"1338","messageId":"1339","endLine":6224,"endColumn":63},{"ruleId":"1336","severity":1,"message":"1337","line":6229,"column":42,"nodeType":"1338","messageId":"1339","endLine":6229,"endColumn":44},{"ruleId":"1336","severity":1,"message":"1337","line":6276,"column":58,"nodeType":"1338","messageId":"1339","endLine":6276,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":6280,"column":24,"nodeType":"1338","messageId":"1339","endLine":6280,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":6349,"column":13,"nodeType":"1338","messageId":"1339","endLine":6349,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":6350,"column":18,"nodeType":"1338","messageId":"1339","endLine":6350,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":6355,"column":13,"nodeType":"1338","messageId":"1339","endLine":6355,"endColumn":15},{"ruleId":"1336","severity":1,"message":"1337","line":6356,"column":17,"nodeType":"1338","messageId":"1339","endLine":6356,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":6421,"column":69,"nodeType":"1338","messageId":"1339","endLine":6421,"endColumn":71},{"ruleId":"1336","severity":1,"message":"1337","line":6438,"column":19,"nodeType":"1338","messageId":"1339","endLine":6438,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":6479,"column":32,"nodeType":"1338","messageId":"1339","endLine":6479,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":6495,"column":59,"nodeType":"1338","messageId":"1339","endLine":6495,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6502,"column":59,"nodeType":"1338","messageId":"1339","endLine":6502,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6509,"column":59,"nodeType":"1338","messageId":"1339","endLine":6509,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6516,"column":59,"nodeType":"1338","messageId":"1339","endLine":6516,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6523,"column":59,"nodeType":"1338","messageId":"1339","endLine":6523,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6530,"column":59,"nodeType":"1338","messageId":"1339","endLine":6530,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6582,"column":71,"nodeType":"1338","messageId":"1339","endLine":6582,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6588,"column":71,"nodeType":"1338","messageId":"1339","endLine":6588,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6594,"column":71,"nodeType":"1338","messageId":"1339","endLine":6594,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6600,"column":71,"nodeType":"1338","messageId":"1339","endLine":6600,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6606,"column":71,"nodeType":"1338","messageId":"1339","endLine":6606,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6612,"column":71,"nodeType":"1338","messageId":"1339","endLine":6612,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6679,"column":32,"nodeType":"1338","messageId":"1339","endLine":6679,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":6698,"column":59,"nodeType":"1338","messageId":"1339","endLine":6698,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6705,"column":59,"nodeType":"1338","messageId":"1339","endLine":6705,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6712,"column":59,"nodeType":"1338","messageId":"1339","endLine":6712,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6719,"column":59,"nodeType":"1338","messageId":"1339","endLine":6719,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6726,"column":59,"nodeType":"1338","messageId":"1339","endLine":6726,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6733,"column":59,"nodeType":"1338","messageId":"1339","endLine":6733,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":6785,"column":71,"nodeType":"1338","messageId":"1339","endLine":6785,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6791,"column":71,"nodeType":"1338","messageId":"1339","endLine":6791,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6797,"column":71,"nodeType":"1338","messageId":"1339","endLine":6797,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6803,"column":71,"nodeType":"1338","messageId":"1339","endLine":6803,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6809,"column":71,"nodeType":"1338","messageId":"1339","endLine":6809,"endColumn":73},{"ruleId":"1336","severity":1,"message":"1337","line":6815,"column":71,"nodeType":"1338","messageId":"1339","endLine":6815,"endColumn":73},{"ruleId":"1340","severity":1,"message":"1395","line":6853,"column":9,"nodeType":"1324","messageId":"1342","endLine":6853,"endColumn":17},{"ruleId":"1340","severity":1,"message":"1396","line":6854,"column":9,"nodeType":"1324","messageId":"1342","endLine":6854,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":6897,"column":28,"nodeType":"1338","messageId":"1339","endLine":6897,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":6897,"column":70,"nodeType":"1338","messageId":"1339","endLine":6897,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":7000,"column":34,"nodeType":"1338","messageId":"1339","endLine":7000,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":7092,"column":43,"nodeType":"1338","messageId":"1339","endLine":7092,"endColumn":45},{"ruleId":"1336","severity":1,"message":"1337","line":7100,"column":57,"nodeType":"1338","messageId":"1339","endLine":7100,"endColumn":59},{"ruleId":"1336","severity":1,"message":"1337","line":7148,"column":43,"nodeType":"1338","messageId":"1339","endLine":7148,"endColumn":45},{"ruleId":"1336","severity":1,"message":"1337","line":7156,"column":66,"nodeType":"1338","messageId":"1339","endLine":7156,"endColumn":68},{"ruleId":"1355","severity":1,"message":"1356","line":7178,"column":17,"nodeType":"1357","endLine":7181,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":7258,"column":67,"nodeType":"1338","messageId":"1339","endLine":7258,"endColumn":69},{"ruleId":"1340","severity":1,"message":"1397","line":7402,"column":9,"nodeType":"1324","messageId":"1342","endLine":7402,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":7432,"column":14,"nodeType":"1338","messageId":"1339","endLine":7432,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":7432,"column":44,"nodeType":"1338","messageId":"1339","endLine":7432,"endColumn":46},{"ruleId":"1336","severity":1,"message":"1337","line":7502,"column":45,"nodeType":"1338","messageId":"1339","endLine":7502,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":7512,"column":24,"nodeType":"1338","messageId":"1339","endLine":7512,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":7512,"column":58,"nodeType":"1338","messageId":"1339","endLine":7512,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":7554,"column":26,"nodeType":"1338","messageId":"1339","endLine":7554,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":7554,"column":60,"nodeType":"1338","messageId":"1339","endLine":7554,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":7607,"column":21,"nodeType":"1338","messageId":"1339","endLine":7607,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1398","line":7642,"column":6,"nodeType":"1328","endLine":7642,"endColumn":29,"suggestions":"1399"},{"ruleId":"1326","severity":1,"message":"1400","line":7646,"column":6,"nodeType":"1328","endLine":7646,"endColumn":20,"suggestions":"1401"},{"ruleId":"1336","severity":1,"message":"1337","line":7758,"column":26,"nodeType":"1338","messageId":"1339","endLine":7758,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":7758,"column":60,"nodeType":"1338","messageId":"1339","endLine":7758,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":7797,"column":73,"nodeType":"1338","messageId":"1339","endLine":7797,"endColumn":75},{"ruleId":"1355","severity":1,"message":"1356","line":7798,"column":23,"nodeType":"1357","endLine":7801,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":7813,"column":45,"nodeType":"1338","messageId":"1339","endLine":7813,"endColumn":47},{"ruleId":"1355","severity":1,"message":"1356","line":7823,"column":23,"nodeType":"1357","endLine":7826,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":7829,"column":26,"nodeType":"1338","messageId":"1339","endLine":7829,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":7831,"column":154,"nodeType":"1338","messageId":"1339","endLine":7831,"endColumn":156},{"ruleId":"1336","severity":1,"message":"1337","line":7906,"column":14,"nodeType":"1338","messageId":"1339","endLine":7906,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":7906,"column":44,"nodeType":"1338","messageId":"1339","endLine":7906,"endColumn":46},{"ruleId":"1336","severity":1,"message":"1337","line":7949,"column":46,"nodeType":"1338","messageId":"1339","endLine":7949,"endColumn":48},{"ruleId":"1336","severity":1,"message":"1337","line":7967,"column":25,"nodeType":"1338","messageId":"1339","endLine":7967,"endColumn":27},{"ruleId":"1336","severity":1,"message":"1337","line":7967,"column":60,"nodeType":"1338","messageId":"1339","endLine":7967,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":8066,"column":27,"nodeType":"1338","messageId":"1339","endLine":8066,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":8066,"column":62,"nodeType":"1338","messageId":"1339","endLine":8066,"endColumn":64},{"ruleId":"1326","severity":1,"message":"1402","line":8124,"column":6,"nodeType":"1328","endLine":8124,"endColumn":29,"suggestions":"1403"},{"ruleId":"1326","severity":1,"message":"1400","line":8128,"column":6,"nodeType":"1328","endLine":8128,"endColumn":21,"suggestions":"1404"},{"ruleId":"1336","severity":1,"message":"1337","line":8131,"column":21,"nodeType":"1338","messageId":"1339","endLine":8131,"endColumn":23},{"ruleId":"1336","severity":1,"message":"1337","line":8251,"column":27,"nodeType":"1338","messageId":"1339","endLine":8251,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":8251,"column":62,"nodeType":"1338","messageId":"1339","endLine":8251,"endColumn":64},{"ruleId":"1336","severity":1,"message":"1337","line":8293,"column":73,"nodeType":"1338","messageId":"1339","endLine":8293,"endColumn":75},{"ruleId":"1355","severity":1,"message":"1356","line":8294,"column":23,"nodeType":"1357","endLine":8297,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":8309,"column":45,"nodeType":"1338","messageId":"1339","endLine":8309,"endColumn":47},{"ruleId":"1355","severity":1,"message":"1356","line":8319,"column":23,"nodeType":"1357","endLine":8322,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":8325,"column":26,"nodeType":"1338","messageId":"1339","endLine":8325,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":8327,"column":154,"nodeType":"1338","messageId":"1339","endLine":8327,"endColumn":156},{"ruleId":"1336","severity":1,"message":"1337","line":8414,"column":37,"nodeType":"1338","messageId":"1339","endLine":8414,"endColumn":39},{"ruleId":"1336","severity":1,"message":"1337","line":8523,"column":37,"nodeType":"1338","messageId":"1339","endLine":8523,"endColumn":39},{"ruleId":"1336","severity":1,"message":"1337","line":8677,"column":14,"nodeType":"1338","messageId":"1339","endLine":8677,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":8677,"column":44,"nodeType":"1338","messageId":"1339","endLine":8677,"endColumn":46},{"ruleId":"1326","severity":1,"message":"1405","line":8710,"column":6,"nodeType":"1328","endLine":8710,"endColumn":17,"suggestions":"1406"},{"ruleId":"1336","severity":1,"message":"1337","line":8712,"column":16,"nodeType":"1338","messageId":"1339","endLine":8712,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":8715,"column":16,"nodeType":"1338","messageId":"1339","endLine":8715,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":8720,"column":16,"nodeType":"1338","messageId":"1339","endLine":8720,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":8723,"column":16,"nodeType":"1338","messageId":"1339","endLine":8723,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":8762,"column":114,"nodeType":"1338","messageId":"1339","endLine":8762,"endColumn":116},{"ruleId":"1336","severity":1,"message":"1337","line":8775,"column":109,"nodeType":"1338","messageId":"1339","endLine":8775,"endColumn":111},{"ruleId":"1336","severity":1,"message":"1337","line":8781,"column":111,"nodeType":"1338","messageId":"1339","endLine":8781,"endColumn":113},{"ruleId":"1336","severity":1,"message":"1337","line":8805,"column":25,"nodeType":"1338","messageId":"1339","endLine":8805,"endColumn":27},{"ruleId":"1336","severity":1,"message":"1337","line":8805,"column":58,"nodeType":"1338","messageId":"1339","endLine":8805,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":8816,"column":45,"nodeType":"1338","messageId":"1339","endLine":8816,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":8817,"column":108,"nodeType":"1338","messageId":"1339","endLine":8817,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":8827,"column":66,"nodeType":"1338","messageId":"1339","endLine":8827,"endColumn":68},{"ruleId":"1355","severity":1,"message":"1356","line":8829,"column":23,"nodeType":"1357","endLine":8829,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":8832,"column":26,"nodeType":"1338","messageId":"1339","endLine":8832,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":8833,"column":60,"nodeType":"1338","messageId":"1339","endLine":8833,"endColumn":62},{"ruleId":"1340","severity":1,"message":"1407","line":17,"column":10,"nodeType":"1324","messageId":"1342","endLine":17,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1408","line":17,"column":23,"nodeType":"1324","messageId":"1342","endLine":17,"endColumn":37},{"ruleId":"1340","severity":1,"message":"1409","line":18,"column":10,"nodeType":"1324","messageId":"1342","endLine":18,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1410","line":18,"column":23,"nodeType":"1324","messageId":"1342","endLine":18,"endColumn":37},{"ruleId":"1340","severity":1,"message":"1411","line":20,"column":10,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1412","line":20,"column":24,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":39},{"ruleId":"1340","severity":1,"message":"1413","line":26,"column":10,"nodeType":"1324","messageId":"1342","endLine":26,"endColumn":12},{"ruleId":"1340","severity":1,"message":"1414","line":26,"column":14,"nodeType":"1324","messageId":"1342","endLine":26,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1415","line":27,"column":16,"nodeType":"1324","messageId":"1342","endLine":27,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1416","line":47,"column":6,"nodeType":"1328","endLine":47,"endColumn":50,"suggestions":"1417"},{"ruleId":"1336","severity":1,"message":"1337","line":59,"column":19,"nodeType":"1338","messageId":"1339","endLine":59,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":59,"column":45,"nodeType":"1338","messageId":"1339","endLine":59,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":65,"column":26,"nodeType":"1338","messageId":"1339","endLine":65,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":73,"column":19,"nodeType":"1338","messageId":"1339","endLine":73,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":79,"column":26,"nodeType":"1338","messageId":"1339","endLine":79,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":88,"column":19,"nodeType":"1338","messageId":"1339","endLine":88,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":94,"column":26,"nodeType":"1338","messageId":"1339","endLine":94,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":107,"column":19,"nodeType":"1338","messageId":"1339","endLine":107,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":107,"column":45,"nodeType":"1338","messageId":"1339","endLine":107,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":113,"column":26,"nodeType":"1338","messageId":"1339","endLine":113,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":121,"column":19,"nodeType":"1338","messageId":"1339","endLine":121,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":127,"column":26,"nodeType":"1338","messageId":"1339","endLine":127,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":136,"column":19,"nodeType":"1338","messageId":"1339","endLine":136,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":142,"column":26,"nodeType":"1338","messageId":"1339","endLine":142,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":155,"column":19,"nodeType":"1338","messageId":"1339","endLine":155,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":155,"column":45,"nodeType":"1338","messageId":"1339","endLine":155,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":161,"column":27,"nodeType":"1338","messageId":"1339","endLine":161,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":168,"column":19,"nodeType":"1338","messageId":"1339","endLine":168,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":174,"column":27,"nodeType":"1338","messageId":"1339","endLine":174,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":181,"column":19,"nodeType":"1338","messageId":"1339","endLine":181,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":187,"column":27,"nodeType":"1338","messageId":"1339","endLine":187,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":198,"column":19,"nodeType":"1338","messageId":"1339","endLine":198,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":198,"column":45,"nodeType":"1338","messageId":"1339","endLine":198,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":204,"column":30,"nodeType":"1338","messageId":"1339","endLine":204,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":211,"column":19,"nodeType":"1338","messageId":"1339","endLine":211,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":217,"column":30,"nodeType":"1338","messageId":"1339","endLine":217,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":224,"column":19,"nodeType":"1338","messageId":"1339","endLine":224,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":230,"column":30,"nodeType":"1338","messageId":"1339","endLine":230,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":242,"column":19,"nodeType":"1338","messageId":"1339","endLine":242,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":242,"column":45,"nodeType":"1338","messageId":"1339","endLine":242,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":248,"column":28,"nodeType":"1338","messageId":"1339","endLine":248,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":256,"column":19,"nodeType":"1338","messageId":"1339","endLine":256,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":262,"column":28,"nodeType":"1338","messageId":"1339","endLine":262,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":270,"column":19,"nodeType":"1338","messageId":"1339","endLine":270,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":276,"column":28,"nodeType":"1338","messageId":"1339","endLine":276,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":288,"column":19,"nodeType":"1338","messageId":"1339","endLine":288,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":288,"column":45,"nodeType":"1338","messageId":"1339","endLine":288,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":294,"column":29,"nodeType":"1338","messageId":"1339","endLine":294,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":302,"column":19,"nodeType":"1338","messageId":"1339","endLine":302,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":308,"column":29,"nodeType":"1338","messageId":"1339","endLine":308,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":316,"column":19,"nodeType":"1338","messageId":"1339","endLine":316,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":322,"column":29,"nodeType":"1338","messageId":"1339","endLine":322,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":334,"column":19,"nodeType":"1338","messageId":"1339","endLine":334,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":334,"column":45,"nodeType":"1338","messageId":"1339","endLine":334,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":340,"column":34,"nodeType":"1338","messageId":"1339","endLine":340,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":348,"column":19,"nodeType":"1338","messageId":"1339","endLine":348,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":354,"column":34,"nodeType":"1338","messageId":"1339","endLine":354,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":362,"column":19,"nodeType":"1338","messageId":"1339","endLine":362,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":368,"column":34,"nodeType":"1338","messageId":"1339","endLine":368,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":382,"column":58,"nodeType":"1338","messageId":"1339","endLine":382,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1347","line":387,"column":32,"nodeType":"1338","messageId":"1339","endLine":387,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":400,"column":19,"nodeType":"1338","messageId":"1339","endLine":400,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":400,"column":37,"nodeType":"1338","messageId":"1339","endLine":400,"endColumn":39},{"ruleId":"1336","severity":1,"message":"1347","line":406,"column":32,"nodeType":"1338","messageId":"1339","endLine":406,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":413,"column":19,"nodeType":"1338","messageId":"1339","endLine":413,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":419,"column":32,"nodeType":"1338","messageId":"1339","endLine":419,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":426,"column":19,"nodeType":"1338","messageId":"1339","endLine":426,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":432,"column":32,"nodeType":"1338","messageId":"1339","endLine":432,"endColumn":34},{"ruleId":"1340","severity":1,"message":"1418","line":442,"column":12,"nodeType":"1324","messageId":"1342","endLine":442,"endColumn":27},{"ruleId":"1419","severity":1,"message":"1420","line":458,"column":50,"nodeType":"1421","messageId":"1422","endLine":458,"endColumn":52},{"ruleId":"1336","severity":1,"message":"1337","line":459,"column":24,"nodeType":"1338","messageId":"1339","endLine":459,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":475,"column":12,"nodeType":"1338","messageId":"1339","endLine":475,"endColumn":14},{"ruleId":"1336","severity":1,"message":"1337","line":479,"column":12,"nodeType":"1338","messageId":"1339","endLine":479,"endColumn":14},{"ruleId":"1336","severity":1,"message":"1337","line":636,"column":59,"nodeType":"1338","messageId":"1339","endLine":636,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":703,"column":59,"nodeType":"1338","messageId":"1339","endLine":703,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":781,"column":59,"nodeType":"1338","messageId":"1339","endLine":781,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":859,"column":59,"nodeType":"1338","messageId":"1339","endLine":859,"endColumn":61},{"ruleId":"1336","severity":1,"message":"1337","line":1002,"column":61,"nodeType":"1338","messageId":"1339","endLine":1002,"endColumn":63},{"ruleId":"1336","severity":1,"message":"1337","line":1129,"column":55,"nodeType":"1338","messageId":"1339","endLine":1129,"endColumn":57},{"ruleId":"1336","severity":1,"message":"1337","line":1198,"column":55,"nodeType":"1338","messageId":"1339","endLine":1198,"endColumn":57},{"ruleId":"1340","severity":1,"message":"1423","line":5,"column":10,"nodeType":"1324","messageId":"1342","endLine":5,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1424","line":23,"column":10,"nodeType":"1324","messageId":"1342","endLine":23,"endColumn":18},{"ruleId":"1419","severity":1,"message":"1420","line":36,"column":54,"nodeType":"1421","messageId":"1422","endLine":36,"endColumn":56},{"ruleId":"1326","severity":1,"message":"1425","line":57,"column":6,"nodeType":"1328","endLine":57,"endColumn":8,"suggestions":"1426"},{"ruleId":"1326","severity":1,"message":"1425","line":60,"column":6,"nodeType":"1328","endLine":60,"endColumn":66,"suggestions":"1427"},{"ruleId":"1336","severity":1,"message":"1337","line":83,"column":19,"nodeType":"1338","messageId":"1339","endLine":83,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":83,"column":45,"nodeType":"1338","messageId":"1339","endLine":83,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":89,"column":26,"nodeType":"1338","messageId":"1339","endLine":89,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":95,"column":19,"nodeType":"1338","messageId":"1339","endLine":95,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":101,"column":26,"nodeType":"1338","messageId":"1339","endLine":101,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":107,"column":19,"nodeType":"1338","messageId":"1339","endLine":107,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":113,"column":26,"nodeType":"1338","messageId":"1339","endLine":113,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":127,"column":19,"nodeType":"1338","messageId":"1339","endLine":127,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":127,"column":45,"nodeType":"1338","messageId":"1339","endLine":127,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":133,"column":26,"nodeType":"1338","messageId":"1339","endLine":133,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":141,"column":19,"nodeType":"1338","messageId":"1339","endLine":141,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":147,"column":26,"nodeType":"1338","messageId":"1339","endLine":147,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":155,"column":19,"nodeType":"1338","messageId":"1339","endLine":155,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":161,"column":26,"nodeType":"1338","messageId":"1339","endLine":161,"endColumn":28},{"ruleId":"1336","severity":1,"message":"1337","line":173,"column":19,"nodeType":"1338","messageId":"1339","endLine":173,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":173,"column":45,"nodeType":"1338","messageId":"1339","endLine":173,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":179,"column":27,"nodeType":"1338","messageId":"1339","endLine":179,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":186,"column":19,"nodeType":"1338","messageId":"1339","endLine":186,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":192,"column":27,"nodeType":"1338","messageId":"1339","endLine":192,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":199,"column":19,"nodeType":"1338","messageId":"1339","endLine":199,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":205,"column":27,"nodeType":"1338","messageId":"1339","endLine":205,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":219,"column":19,"nodeType":"1338","messageId":"1339","endLine":219,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":219,"column":45,"nodeType":"1338","messageId":"1339","endLine":219,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":225,"column":30,"nodeType":"1338","messageId":"1339","endLine":225,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":231,"column":19,"nodeType":"1338","messageId":"1339","endLine":231,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":237,"column":30,"nodeType":"1338","messageId":"1339","endLine":237,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":243,"column":19,"nodeType":"1338","messageId":"1339","endLine":243,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":249,"column":30,"nodeType":"1338","messageId":"1339","endLine":249,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":260,"column":19,"nodeType":"1338","messageId":"1339","endLine":260,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":260,"column":45,"nodeType":"1338","messageId":"1339","endLine":260,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":266,"column":28,"nodeType":"1338","messageId":"1339","endLine":266,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":272,"column":19,"nodeType":"1338","messageId":"1339","endLine":272,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":278,"column":28,"nodeType":"1338","messageId":"1339","endLine":278,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":284,"column":19,"nodeType":"1338","messageId":"1339","endLine":284,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":290,"column":28,"nodeType":"1338","messageId":"1339","endLine":290,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":304,"column":19,"nodeType":"1338","messageId":"1339","endLine":304,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":304,"column":45,"nodeType":"1338","messageId":"1339","endLine":304,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":310,"column":29,"nodeType":"1338","messageId":"1339","endLine":310,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":317,"column":19,"nodeType":"1338","messageId":"1339","endLine":317,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":323,"column":29,"nodeType":"1338","messageId":"1339","endLine":323,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":330,"column":19,"nodeType":"1338","messageId":"1339","endLine":330,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":336,"column":29,"nodeType":"1338","messageId":"1339","endLine":336,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":349,"column":19,"nodeType":"1338","messageId":"1339","endLine":349,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":349,"column":45,"nodeType":"1338","messageId":"1339","endLine":349,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1347","line":355,"column":34,"nodeType":"1338","messageId":"1339","endLine":355,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":362,"column":19,"nodeType":"1338","messageId":"1339","endLine":362,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":368,"column":34,"nodeType":"1338","messageId":"1339","endLine":368,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":375,"column":19,"nodeType":"1338","messageId":"1339","endLine":375,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1347","line":381,"column":34,"nodeType":"1338","messageId":"1339","endLine":381,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1347","line":398,"column":30,"nodeType":"1338","messageId":"1339","endLine":398,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1347","line":413,"column":30,"nodeType":"1338","messageId":"1339","endLine":413,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":427,"column":57,"nodeType":"1338","messageId":"1339","endLine":427,"endColumn":59},{"ruleId":"1336","severity":1,"message":"1347","line":432,"column":32,"nodeType":"1338","messageId":"1339","endLine":432,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1347","line":450,"column":30,"nodeType":"1338","messageId":"1339","endLine":450,"endColumn":32},{"ruleId":"1419","severity":1,"message":"1420","line":473,"column":49,"nodeType":"1421","messageId":"1422","endLine":473,"endColumn":51},{"ruleId":"1336","severity":1,"message":"1337","line":474,"column":24,"nodeType":"1338","messageId":"1339","endLine":474,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":610,"column":39,"nodeType":"1338","messageId":"1339","endLine":610,"endColumn":41},{"ruleId":"1336","severity":1,"message":"1337","line":692,"column":39,"nodeType":"1338","messageId":"1339","endLine":692,"endColumn":41},{"ruleId":"1340","severity":1,"message":"1428","line":16,"column":10,"nodeType":"1324","messageId":"1342","endLine":16,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1429","line":30,"column":6,"nodeType":"1328","endLine":30,"endColumn":36,"suggestions":"1430"},{"ruleId":"1336","severity":1,"message":"1337","line":46,"column":65,"nodeType":"1338","messageId":"1339","endLine":46,"endColumn":67},{"ruleId":"1336","severity":1,"message":"1337","line":47,"column":70,"nodeType":"1338","messageId":"1339","endLine":47,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":59,"column":65,"nodeType":"1338","messageId":"1339","endLine":59,"endColumn":67},{"ruleId":"1340","severity":1,"message":"1431","line":63,"column":43,"nodeType":"1324","messageId":"1342","endLine":63,"endColumn":54},{"ruleId":"1336","severity":1,"message":"1347","line":77,"column":57,"nodeType":"1338","messageId":"1339","endLine":77,"endColumn":59},{"ruleId":"1336","severity":1,"message":"1337","line":79,"column":38,"nodeType":"1338","messageId":"1339","endLine":79,"endColumn":40},{"ruleId":"1336","severity":1,"message":"1347","line":82,"column":47,"nodeType":"1338","messageId":"1339","endLine":82,"endColumn":49},{"ruleId":"1336","severity":1,"message":"1347","line":84,"column":54,"nodeType":"1338","messageId":"1339","endLine":84,"endColumn":56},{"ruleId":"1336","severity":1,"message":"1347","line":84,"column":193,"nodeType":"1338","messageId":"1339","endLine":84,"endColumn":195},{"ruleId":"1336","severity":1,"message":"1347","line":89,"column":54,"nodeType":"1338","messageId":"1339","endLine":89,"endColumn":56},{"ruleId":"1336","severity":1,"message":"1347","line":89,"column":199,"nodeType":"1338","messageId":"1339","endLine":89,"endColumn":201},{"ruleId":"1336","severity":1,"message":"1337","line":100,"column":47,"nodeType":"1338","messageId":"1339","endLine":100,"endColumn":49},{"ruleId":"1326","severity":1,"message":"1432","line":133,"column":6,"nodeType":"1328","endLine":133,"endColumn":42,"suggestions":"1433"},{"ruleId":"1389","severity":1,"message":"1390","line":216,"column":42,"nodeType":"1338","messageId":"1391","endLine":216,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":333,"column":39,"nodeType":"1338","messageId":"1339","endLine":333,"endColumn":41},{"ruleId":"1336","severity":1,"message":"1337","line":333,"column":60,"nodeType":"1338","messageId":"1339","endLine":333,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":347,"column":66,"nodeType":"1338","messageId":"1339","endLine":347,"endColumn":68},{"ruleId":"1336","severity":1,"message":"1337","line":382,"column":29,"nodeType":"1338","messageId":"1339","endLine":382,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":382,"column":64,"nodeType":"1338","messageId":"1339","endLine":382,"endColumn":66},{"ruleId":"1340","severity":1,"message":"1434","line":2,"column":27,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":37},{"ruleId":"1435","severity":1,"message":"1436","line":80,"column":13,"nodeType":"1437","messageId":"1438","endLine":80,"endColumn":91,"fix":"1439"},{"ruleId":"1435","severity":1,"message":"1440","line":80,"column":13,"nodeType":"1437","messageId":"1438","endLine":80,"endColumn":23,"fix":"1441"},{"ruleId":"1326","severity":1,"message":"1442","line":133,"column":6,"nodeType":"1328","endLine":133,"endColumn":16,"suggestions":"1443"},{"ruleId":"1336","severity":1,"message":"1337","line":138,"column":27,"nodeType":"1338","messageId":"1339","endLine":138,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":142,"column":16,"nodeType":"1338","messageId":"1339","endLine":142,"endColumn":18},{"ruleId":"1444","severity":1,"message":"1445","line":145,"column":9,"nodeType":"1357","endLine":145,"endColumn":102},{"ruleId":"1336","severity":1,"message":"1337","line":163,"column":74,"nodeType":"1338","messageId":"1339","endLine":163,"endColumn":76},{"ruleId":"1355","severity":1,"message":"1356","line":164,"column":17,"nodeType":"1357","endLine":164,"endColumn":131},{"ruleId":"1340","severity":1,"message":"1446","line":214,"column":10,"nodeType":"1324","messageId":"1342","endLine":214,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1447","line":301,"column":6,"nodeType":"1328","endLine":301,"endColumn":12,"suggestions":"1448"},{"ruleId":"1326","severity":1,"message":"1449","line":332,"column":6,"nodeType":"1328","endLine":332,"endColumn":28,"suggestions":"1450"},{"ruleId":"1326","severity":1,"message":"1385","line":332,"column":7,"nodeType":"1338","endLine":332,"endColumn":27},{"ruleId":"1336","severity":1,"message":"1337","line":332,"column":15,"nodeType":"1338","messageId":"1339","endLine":332,"endColumn":17},{"ruleId":"1336","severity":1,"message":"1347","line":370,"column":46,"nodeType":"1338","messageId":"1339","endLine":370,"endColumn":48},{"ruleId":"1336","severity":1,"message":"1337","line":373,"column":46,"nodeType":"1338","messageId":"1339","endLine":373,"endColumn":48},{"ruleId":"1451","severity":1,"message":"1452","line":382,"column":23,"nodeType":"1357","endLine":382,"endColumn":146},{"ruleId":"1451","severity":1,"message":"1452","line":390,"column":23,"nodeType":"1357","endLine":390,"endColumn":121},{"ruleId":"1336","severity":1,"message":"1337","line":418,"column":40,"nodeType":"1338","messageId":"1339","endLine":418,"endColumn":42},{"ruleId":"1451","severity":1,"message":"1453","line":442,"column":23,"nodeType":"1357","endLine":442,"endColumn":68},{"ruleId":"1326","severity":1,"message":"1454","line":34,"column":8,"nodeType":"1328","endLine":34,"endColumn":26,"suggestions":"1455"},{"ruleId":"1336","severity":1,"message":"1337","line":56,"column":57,"nodeType":"1338","messageId":"1339","endLine":56,"endColumn":59},{"ruleId":"1336","severity":1,"message":"1337","line":70,"column":171,"nodeType":"1338","messageId":"1339","endLine":70,"endColumn":173},{"ruleId":"1340","severity":1,"message":"1456","line":1,"column":17,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":30},{"ruleId":"1340","severity":1,"message":"1457","line":33,"column":10,"nodeType":"1324","messageId":"1342","endLine":33,"endColumn":23},{"ruleId":"1340","severity":1,"message":"1458","line":48,"column":10,"nodeType":"1324","messageId":"1342","endLine":48,"endColumn":16},{"ruleId":"1340","severity":1,"message":"1459","line":64,"column":12,"nodeType":"1324","messageId":"1342","endLine":64,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1460","line":92,"column":6,"nodeType":"1328","endLine":92,"endColumn":23,"suggestions":"1461"},{"ruleId":"1336","severity":1,"message":"1337","line":109,"column":18,"nodeType":"1338","messageId":"1339","endLine":109,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":119,"column":18,"nodeType":"1338","messageId":"1339","endLine":119,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":240,"column":18,"nodeType":"1338","messageId":"1339","endLine":240,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":308,"column":15,"nodeType":"1338","messageId":"1339","endLine":308,"endColumn":17},{"ruleId":"1336","severity":1,"message":"1337","line":324,"column":72,"nodeType":"1338","messageId":"1339","endLine":324,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":358,"column":15,"nodeType":"1338","messageId":"1339","endLine":358,"endColumn":17},{"ruleId":"1336","severity":1,"message":"1337","line":374,"column":72,"nodeType":"1338","messageId":"1339","endLine":374,"endColumn":74},{"ruleId":"1462","severity":1,"message":"1463","line":424,"column":3,"nodeType":"1464","messageId":"1465","endLine":425,"endColumn":31},{"ruleId":"1466","severity":1,"message":"1467","line":424,"column":3,"nodeType":"1324","messageId":"1468","endLine":424,"endColumn":8},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":27,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":453,"column":72,"nodeType":"1338","messageId":"1339","endLine":453,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":35,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1337","line":456,"column":58,"nodeType":"1338","messageId":"1339","endLine":456,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":498,"column":28,"nodeType":"1338","messageId":"1339","endLine":498,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":509,"column":46,"nodeType":"1338","messageId":"1339","endLine":509,"endColumn":48},{"ruleId":"1336","severity":1,"message":"1337","line":537,"column":81,"nodeType":"1338","messageId":"1339","endLine":537,"endColumn":83},{"ruleId":"1336","severity":1,"message":"1337","line":564,"column":45,"nodeType":"1338","messageId":"1339","endLine":564,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":565,"column":221,"nodeType":"1338","messageId":"1339","endLine":565,"endColumn":223},{"ruleId":"1336","severity":1,"message":"1337","line":598,"column":199,"nodeType":"1338","messageId":"1339","endLine":598,"endColumn":201},{"ruleId":"1336","severity":1,"message":"1337","line":604,"column":210,"nodeType":"1338","messageId":"1339","endLine":604,"endColumn":212},{"ruleId":"1336","severity":1,"message":"1337","line":609,"column":41,"nodeType":"1338","messageId":"1339","endLine":609,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":610,"column":68,"nodeType":"1338","messageId":"1339","endLine":610,"endColumn":70},{"ruleId":"1336","severity":1,"message":"1337","line":616,"column":226,"nodeType":"1338","messageId":"1339","endLine":616,"endColumn":228},{"ruleId":"1336","severity":1,"message":"1337","line":621,"column":48,"nodeType":"1338","messageId":"1339","endLine":621,"endColumn":50},{"ruleId":"1336","severity":1,"message":"1337","line":622,"column":228,"nodeType":"1338","messageId":"1339","endLine":622,"endColumn":230},{"ruleId":"1336","severity":1,"message":"1337","line":628,"column":41,"nodeType":"1338","messageId":"1339","endLine":628,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":629,"column":223,"nodeType":"1338","messageId":"1339","endLine":629,"endColumn":225},{"ruleId":"1336","severity":1,"message":"1347","line":668,"column":19,"nodeType":"1338","messageId":"1339","endLine":668,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":693,"column":37,"nodeType":"1338","messageId":"1339","endLine":693,"endColumn":39},{"ruleId":"1326","severity":1,"message":"1442","line":754,"column":6,"nodeType":"1328","endLine":754,"endColumn":23,"suggestions":"1469"},{"ruleId":"1336","severity":1,"message":"1337","line":758,"column":25,"nodeType":"1338","messageId":"1339","endLine":758,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1470","line":763,"column":6,"nodeType":"1328","endLine":763,"endColumn":16,"suggestions":"1471"},{"ruleId":"1355","severity":1,"message":"1356","line":786,"column":91,"nodeType":"1357","endLine":786,"endColumn":175},{"ruleId":"1355","severity":1,"message":"1356","line":832,"column":149,"nodeType":"1357","endLine":832,"endColumn":300},{"ruleId":"1340","severity":1,"message":"1472","line":1,"column":38,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":44},{"ruleId":"1340","severity":1,"message":"1473","line":7,"column":28,"nodeType":"1324","messageId":"1342","endLine":7,"endColumn":44},{"ruleId":"1340","severity":1,"message":"1474","line":31,"column":12,"nodeType":"1324","messageId":"1342","endLine":31,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":40,"column":18,"nodeType":"1338","messageId":"1339","endLine":40,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":44,"column":18,"nodeType":"1338","messageId":"1339","endLine":44,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":88,"column":58,"nodeType":"1338","messageId":"1339","endLine":88,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":113,"column":32,"nodeType":"1338","messageId":"1339","endLine":113,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":114,"column":31,"nodeType":"1338","messageId":"1339","endLine":114,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1475","line":173,"column":8,"nodeType":"1328","endLine":173,"endColumn":14,"suggestions":"1476"},{"ruleId":"1336","severity":1,"message":"1337","line":438,"column":130,"nodeType":"1338","messageId":"1339","endLine":438,"endColumn":132},{"ruleId":"1336","severity":1,"message":"1337","line":438,"column":150,"nodeType":"1338","messageId":"1339","endLine":438,"endColumn":152},{"ruleId":"1336","severity":1,"message":"1337","line":438,"column":193,"nodeType":"1338","messageId":"1339","endLine":438,"endColumn":195},{"ruleId":"1336","severity":1,"message":"1337","line":438,"column":213,"nodeType":"1338","messageId":"1339","endLine":438,"endColumn":215},{"ruleId":"1336","severity":1,"message":"1337","line":438,"column":266,"nodeType":"1338","messageId":"1339","endLine":438,"endColumn":268},{"ruleId":"1336","severity":1,"message":"1337","line":438,"column":286,"nodeType":"1338","messageId":"1339","endLine":438,"endColumn":288},{"ruleId":"1336","severity":1,"message":"1337","line":439,"column":86,"nodeType":"1338","messageId":"1339","endLine":439,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":439,"column":106,"nodeType":"1338","messageId":"1339","endLine":439,"endColumn":108},{"ruleId":"1336","severity":1,"message":"1337","line":439,"column":149,"nodeType":"1338","messageId":"1339","endLine":439,"endColumn":151},{"ruleId":"1336","severity":1,"message":"1337","line":439,"column":169,"nodeType":"1338","messageId":"1339","endLine":439,"endColumn":171},{"ruleId":"1336","severity":1,"message":"1337","line":439,"column":222,"nodeType":"1338","messageId":"1339","endLine":439,"endColumn":224},{"ruleId":"1336","severity":1,"message":"1337","line":439,"column":242,"nodeType":"1338","messageId":"1339","endLine":439,"endColumn":244},{"ruleId":"1336","severity":1,"message":"1337","line":441,"column":130,"nodeType":"1338","messageId":"1339","endLine":441,"endColumn":132},{"ruleId":"1336","severity":1,"message":"1337","line":441,"column":152,"nodeType":"1338","messageId":"1339","endLine":441,"endColumn":154},{"ruleId":"1336","severity":1,"message":"1337","line":441,"column":197,"nodeType":"1338","messageId":"1339","endLine":441,"endColumn":199},{"ruleId":"1336","severity":1,"message":"1337","line":441,"column":219,"nodeType":"1338","messageId":"1339","endLine":441,"endColumn":221},{"ruleId":"1336","severity":1,"message":"1337","line":441,"column":274,"nodeType":"1338","messageId":"1339","endLine":441,"endColumn":276},{"ruleId":"1336","severity":1,"message":"1337","line":441,"column":296,"nodeType":"1338","messageId":"1339","endLine":441,"endColumn":298},{"ruleId":"1336","severity":1,"message":"1337","line":442,"column":86,"nodeType":"1338","messageId":"1339","endLine":442,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":442,"column":108,"nodeType":"1338","messageId":"1339","endLine":442,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":442,"column":153,"nodeType":"1338","messageId":"1339","endLine":442,"endColumn":155},{"ruleId":"1336","severity":1,"message":"1337","line":442,"column":175,"nodeType":"1338","messageId":"1339","endLine":442,"endColumn":177},{"ruleId":"1336","severity":1,"message":"1337","line":442,"column":230,"nodeType":"1338","messageId":"1339","endLine":442,"endColumn":232},{"ruleId":"1336","severity":1,"message":"1337","line":442,"column":252,"nodeType":"1338","messageId":"1339","endLine":442,"endColumn":254},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":130,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":132},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":152,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":154},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":197,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":199},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":219,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":221},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":266,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":268},{"ruleId":"1336","severity":1,"message":"1337","line":444,"column":288,"nodeType":"1338","messageId":"1339","endLine":444,"endColumn":290},{"ruleId":"1336","severity":1,"message":"1337","line":445,"column":86,"nodeType":"1338","messageId":"1339","endLine":445,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":445,"column":108,"nodeType":"1338","messageId":"1339","endLine":445,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":445,"column":153,"nodeType":"1338","messageId":"1339","endLine":445,"endColumn":155},{"ruleId":"1336","severity":1,"message":"1337","line":445,"column":175,"nodeType":"1338","messageId":"1339","endLine":445,"endColumn":177},{"ruleId":"1336","severity":1,"message":"1337","line":445,"column":230,"nodeType":"1338","messageId":"1339","endLine":445,"endColumn":232},{"ruleId":"1336","severity":1,"message":"1337","line":445,"column":252,"nodeType":"1338","messageId":"1339","endLine":445,"endColumn":254},{"ruleId":"1340","severity":1,"message":"1363","line":24,"column":12,"nodeType":"1324","messageId":"1342","endLine":24,"endColumn":21},{"ruleId":"1326","severity":1,"message":"1477","line":36,"column":8,"nodeType":"1328","endLine":36,"endColumn":10,"suggestions":"1478"},{"ruleId":"1326","severity":1,"message":"1479","line":44,"column":8,"nodeType":"1328","endLine":44,"endColumn":35,"suggestions":"1480"},{"ruleId":"1336","severity":1,"message":"1347","line":100,"column":61,"nodeType":"1338","messageId":"1339","endLine":100,"endColumn":63},{"ruleId":"1336","severity":1,"message":"1337","line":169,"column":40,"nodeType":"1338","messageId":"1339","endLine":169,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":182,"column":58,"nodeType":"1338","messageId":"1339","endLine":182,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":184,"column":58,"nodeType":"1338","messageId":"1339","endLine":184,"endColumn":60},{"ruleId":"1336","severity":1,"message":"1337","line":196,"column":62,"nodeType":"1338","messageId":"1339","endLine":196,"endColumn":64},{"ruleId":"1336","severity":1,"message":"1337","line":217,"column":61,"nodeType":"1338","messageId":"1339","endLine":217,"endColumn":63},{"ruleId":"1336","severity":1,"message":"1337","line":217,"column":202,"nodeType":"1338","messageId":"1339","endLine":217,"endColumn":204},{"ruleId":"1336","severity":1,"message":"1337","line":252,"column":45,"nodeType":"1338","messageId":"1339","endLine":252,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":253,"column":93,"nodeType":"1338","messageId":"1339","endLine":253,"endColumn":95},{"ruleId":"1336","severity":1,"message":"1337","line":253,"column":120,"nodeType":"1338","messageId":"1339","endLine":253,"endColumn":122},{"ruleId":"1340","severity":1,"message":"1481","line":2,"column":20,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1482","line":12,"column":9,"nodeType":"1324","messageId":"1342","endLine":12,"endColumn":16},{"ruleId":"1340","severity":1,"message":"1483","line":51,"column":9,"nodeType":"1324","messageId":"1342","endLine":51,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":88,"column":32,"nodeType":"1338","messageId":"1339","endLine":88,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":99,"column":93,"nodeType":"1338","messageId":"1339","endLine":99,"endColumn":95},{"ruleId":"1336","severity":1,"message":"1337","line":118,"column":45,"nodeType":"1338","messageId":"1339","endLine":118,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":118,"column":175,"nodeType":"1338","messageId":"1339","endLine":118,"endColumn":177},{"ruleId":"1340","severity":1,"message":"1484","line":1,"column":8,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1485","line":2,"column":17,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":25},{"ruleId":"1340","severity":1,"message":"1481","line":2,"column":27,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":36},{"ruleId":"1340","severity":1,"message":"1434","line":2,"column":38,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":48},{"ruleId":"1340","severity":1,"message":"1486","line":3,"column":10,"nodeType":"1324","messageId":"1342","endLine":3,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1487","line":6,"column":8,"nodeType":"1324","messageId":"1342","endLine":6,"endColumn":16},{"ruleId":"1336","severity":1,"message":"1337","line":144,"column":19,"nodeType":"1338","messageId":"1339","endLine":144,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":160,"column":82,"nodeType":"1338","messageId":"1339","endLine":160,"endColumn":84},{"ruleId":"1336","severity":1,"message":"1337","line":190,"column":19,"nodeType":"1338","messageId":"1339","endLine":190,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":206,"column":82,"nodeType":"1338","messageId":"1339","endLine":206,"endColumn":84},{"ruleId":"1336","severity":1,"message":"1337","line":239,"column":33,"nodeType":"1338","messageId":"1339","endLine":239,"endColumn":35},{"ruleId":"1336","severity":1,"message":"1337","line":247,"column":51,"nodeType":"1338","messageId":"1339","endLine":247,"endColumn":53},{"ruleId":"1336","severity":1,"message":"1337","line":257,"column":77,"nodeType":"1338","messageId":"1339","endLine":257,"endColumn":79},{"ruleId":"1336","severity":1,"message":"1337","line":257,"column":113,"nodeType":"1338","messageId":"1339","endLine":257,"endColumn":115},{"ruleId":"1355","severity":1,"message":"1356","line":258,"column":33,"nodeType":"1357","endLine":258,"endColumn":211},{"ruleId":"1336","severity":1,"message":"1337","line":266,"column":87,"nodeType":"1338","messageId":"1339","endLine":266,"endColumn":89},{"ruleId":"1355","severity":1,"message":"1356","line":322,"column":165,"nodeType":"1357","endLine":322,"endColumn":277},{"ruleId":"1336","severity":1,"message":"1337","line":323,"column":152,"nodeType":"1338","messageId":"1339","endLine":323,"endColumn":154},{"ruleId":"1355","severity":1,"message":"1356","line":323,"column":235,"nodeType":"1357","endLine":323,"endColumn":348},{"ruleId":"1336","severity":1,"message":"1337","line":331,"column":44,"nodeType":"1338","messageId":"1339","endLine":331,"endColumn":46},{"ruleId":"1336","severity":1,"message":"1337","line":332,"column":69,"nodeType":"1338","messageId":"1339","endLine":332,"endColumn":71},{"ruleId":"1336","severity":1,"message":"1337","line":338,"column":43,"nodeType":"1338","messageId":"1339","endLine":338,"endColumn":45},{"ruleId":"1336","severity":1,"message":"1337","line":339,"column":72,"nodeType":"1338","messageId":"1339","endLine":339,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":350,"column":46,"nodeType":"1338","messageId":"1339","endLine":350,"endColumn":48},{"ruleId":"1336","severity":1,"message":"1337","line":351,"column":215,"nodeType":"1338","messageId":"1339","endLine":351,"endColumn":217},{"ruleId":"1340","severity":1,"message":"1481","line":2,"column":20,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":29},{"ruleId":"1336","severity":1,"message":"1337","line":141,"column":15,"nodeType":"1338","messageId":"1339","endLine":141,"endColumn":17},{"ruleId":"1336","severity":1,"message":"1337","line":157,"column":72,"nodeType":"1338","messageId":"1339","endLine":157,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":187,"column":15,"nodeType":"1338","messageId":"1339","endLine":187,"endColumn":17},{"ruleId":"1336","severity":1,"message":"1337","line":203,"column":72,"nodeType":"1338","messageId":"1339","endLine":203,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":235,"column":33,"nodeType":"1338","messageId":"1339","endLine":235,"endColumn":35},{"ruleId":"1336","severity":1,"message":"1337","line":245,"column":40,"nodeType":"1338","messageId":"1339","endLine":245,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":253,"column":70,"nodeType":"1338","messageId":"1339","endLine":253,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":253,"column":106,"nodeType":"1338","messageId":"1339","endLine":253,"endColumn":108},{"ruleId":"1355","severity":1,"message":"1356","line":254,"column":19,"nodeType":"1357","endLine":254,"endColumn":198},{"ruleId":"1336","severity":1,"message":"1337","line":262,"column":69,"nodeType":"1338","messageId":"1339","endLine":262,"endColumn":71},{"ruleId":"1355","severity":1,"message":"1356","line":315,"column":152,"nodeType":"1357","endLine":315,"endColumn":264},{"ruleId":"1336","severity":1,"message":"1337","line":316,"column":133,"nodeType":"1338","messageId":"1339","endLine":316,"endColumn":135},{"ruleId":"1355","severity":1,"message":"1356","line":316,"column":216,"nodeType":"1357","endLine":316,"endColumn":329},{"ruleId":"1336","severity":1,"message":"1337","line":324,"column":30,"nodeType":"1338","messageId":"1339","endLine":324,"endColumn":32},{"ruleId":"1336","severity":1,"message":"1337","line":325,"column":53,"nodeType":"1338","messageId":"1339","endLine":325,"endColumn":55},{"ruleId":"1336","severity":1,"message":"1337","line":337,"column":29,"nodeType":"1338","messageId":"1339","endLine":337,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":338,"column":56,"nodeType":"1338","messageId":"1339","endLine":338,"endColumn":58},{"ruleId":"1336","severity":1,"message":"1337","line":349,"column":32,"nodeType":"1338","messageId":"1339","endLine":349,"endColumn":34},{"ruleId":"1336","severity":1,"message":"1337","line":350,"column":199,"nodeType":"1338","messageId":"1339","endLine":350,"endColumn":201},{"ruleId":"1340","severity":1,"message":"1488","line":35,"column":14,"nodeType":"1324","messageId":"1342","endLine":35,"endColumn":35},{"ruleId":"1326","severity":1,"message":"1489","line":77,"column":8,"nodeType":"1328","endLine":77,"endColumn":26,"suggestions":"1490"},{"ruleId":"1336","severity":1,"message":"1337","line":81,"column":28,"nodeType":"1338","messageId":"1339","endLine":81,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":84,"column":28,"nodeType":"1338","messageId":"1339","endLine":84,"endColumn":30},{"ruleId":"1336","severity":1,"message":"1337","line":130,"column":36,"nodeType":"1338","messageId":"1339","endLine":130,"endColumn":38},{"ruleId":"1336","severity":1,"message":"1337","line":131,"column":35,"nodeType":"1338","messageId":"1339","endLine":131,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1475","line":205,"column":8,"nodeType":"1328","endLine":205,"endColumn":14,"suggestions":"1491"},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":130,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":132},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":150,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":152},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":193,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":195},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":213,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":215},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":266,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":268},{"ruleId":"1336","severity":1,"message":"1337","line":451,"column":286,"nodeType":"1338","messageId":"1339","endLine":451,"endColumn":288},{"ruleId":"1336","severity":1,"message":"1337","line":452,"column":86,"nodeType":"1338","messageId":"1339","endLine":452,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":452,"column":106,"nodeType":"1338","messageId":"1339","endLine":452,"endColumn":108},{"ruleId":"1336","severity":1,"message":"1337","line":452,"column":149,"nodeType":"1338","messageId":"1339","endLine":452,"endColumn":151},{"ruleId":"1336","severity":1,"message":"1337","line":452,"column":169,"nodeType":"1338","messageId":"1339","endLine":452,"endColumn":171},{"ruleId":"1336","severity":1,"message":"1337","line":452,"column":222,"nodeType":"1338","messageId":"1339","endLine":452,"endColumn":224},{"ruleId":"1336","severity":1,"message":"1337","line":452,"column":242,"nodeType":"1338","messageId":"1339","endLine":452,"endColumn":244},{"ruleId":"1336","severity":1,"message":"1337","line":454,"column":130,"nodeType":"1338","messageId":"1339","endLine":454,"endColumn":132},{"ruleId":"1336","severity":1,"message":"1337","line":454,"column":152,"nodeType":"1338","messageId":"1339","endLine":454,"endColumn":154},{"ruleId":"1336","severity":1,"message":"1337","line":454,"column":197,"nodeType":"1338","messageId":"1339","endLine":454,"endColumn":199},{"ruleId":"1336","severity":1,"message":"1337","line":454,"column":219,"nodeType":"1338","messageId":"1339","endLine":454,"endColumn":221},{"ruleId":"1336","severity":1,"message":"1337","line":454,"column":274,"nodeType":"1338","messageId":"1339","endLine":454,"endColumn":276},{"ruleId":"1336","severity":1,"message":"1337","line":454,"column":296,"nodeType":"1338","messageId":"1339","endLine":454,"endColumn":298},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":86,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":108,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":153,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":155},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":175,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":177},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":230,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":232},{"ruleId":"1336","severity":1,"message":"1337","line":455,"column":252,"nodeType":"1338","messageId":"1339","endLine":455,"endColumn":254},{"ruleId":"1336","severity":1,"message":"1337","line":457,"column":130,"nodeType":"1338","messageId":"1339","endLine":457,"endColumn":132},{"ruleId":"1336","severity":1,"message":"1337","line":457,"column":152,"nodeType":"1338","messageId":"1339","endLine":457,"endColumn":154},{"ruleId":"1336","severity":1,"message":"1337","line":457,"column":197,"nodeType":"1338","messageId":"1339","endLine":457,"endColumn":199},{"ruleId":"1336","severity":1,"message":"1337","line":457,"column":219,"nodeType":"1338","messageId":"1339","endLine":457,"endColumn":221},{"ruleId":"1336","severity":1,"message":"1337","line":457,"column":266,"nodeType":"1338","messageId":"1339","endLine":457,"endColumn":268},{"ruleId":"1336","severity":1,"message":"1337","line":457,"column":288,"nodeType":"1338","messageId":"1339","endLine":457,"endColumn":290},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":86,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":108,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":153,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":155},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":175,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":177},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":230,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":232},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":252,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":254},{"ruleId":"1326","severity":1,"message":"1492","line":43,"column":8,"nodeType":"1328","endLine":43,"endColumn":10,"suggestions":"1493"},{"ruleId":"1326","severity":1,"message":"1494","line":91,"column":8,"nodeType":"1328","endLine":91,"endColumn":10,"suggestions":"1495"},{"ruleId":"1336","severity":1,"message":"1337","line":99,"column":67,"nodeType":"1338","messageId":"1339","endLine":99,"endColumn":69},{"ruleId":"1355","severity":1,"message":"1356","line":205,"column":153,"nodeType":"1357","endLine":205,"endColumn":257},{"ruleId":"1355","severity":1,"message":"1356","line":229,"column":171,"nodeType":"1357","endLine":229,"endColumn":280},{"ruleId":"1336","severity":1,"message":"1347","line":242,"column":90,"nodeType":"1338","messageId":"1339","endLine":242,"endColumn":92},{"ruleId":"1336","severity":1,"message":"1337","line":274,"column":86,"nodeType":"1338","messageId":"1339","endLine":274,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":294,"column":75,"nodeType":"1338","messageId":"1339","endLine":294,"endColumn":77},{"ruleId":"1355","severity":1,"message":"1356","line":300,"column":180,"nodeType":"1357","endLine":300,"endColumn":284},{"ruleId":"1355","severity":1,"message":"1356","line":327,"column":210,"nodeType":"1357","endLine":327,"endColumn":319},{"ruleId":"1340","severity":1,"message":"1496","line":4,"column":10,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":18},{"ruleId":"1340","severity":1,"message":"1497","line":6,"column":10,"nodeType":"1324","messageId":"1342","endLine":6,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1498","line":6,"column":24,"nodeType":"1324","messageId":"1342","endLine":6,"endColumn":39},{"ruleId":"1336","severity":1,"message":"1337","line":26,"column":63,"nodeType":"1338","messageId":"1339","endLine":26,"endColumn":65},{"ruleId":"1326","severity":1,"message":"1499","line":40,"column":6,"nodeType":"1328","endLine":40,"endColumn":8,"suggestions":"1500"},{"ruleId":"1336","severity":1,"message":"1337","line":44,"column":38,"nodeType":"1338","messageId":"1339","endLine":44,"endColumn":40},{"ruleId":"1340","severity":1,"message":"1481","line":1,"column":27,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":36},{"ruleId":"1340","severity":1,"message":"1501","line":5,"column":28,"nodeType":"1324","messageId":"1342","endLine":5,"endColumn":37},{"ruleId":"1340","severity":1,"message":"1502","line":14,"column":11,"nodeType":"1324","messageId":"1342","endLine":14,"endColumn":23},{"ruleId":"1340","severity":1,"message":"1503","line":15,"column":11,"nodeType":"1324","messageId":"1342","endLine":15,"endColumn":18},{"ruleId":"1340","severity":1,"message":"1362","line":25,"column":22,"nodeType":"1324","messageId":"1342","endLine":25,"endColumn":33},{"ruleId":"1340","severity":1,"message":"1504","line":26,"column":12,"nodeType":"1324","messageId":"1342","endLine":26,"endColumn":16},{"ruleId":"1340","severity":1,"message":"1505","line":65,"column":11,"nodeType":"1324","messageId":"1342","endLine":65,"endColumn":24},{"ruleId":"1336","severity":1,"message":"1337","line":94,"column":99,"nodeType":"1338","messageId":"1339","endLine":94,"endColumn":101},{"ruleId":"1336","severity":1,"message":"1337","line":99,"column":57,"nodeType":"1338","messageId":"1339","endLine":99,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":100,"column":29,"nodeType":"1357","endLine":100,"endColumn":150},{"ruleId":"1336","severity":1,"message":"1337","line":112,"column":79,"nodeType":"1338","messageId":"1339","endLine":112,"endColumn":81},{"ruleId":"1336","severity":1,"message":"1337","line":118,"column":117,"nodeType":"1338","messageId":"1339","endLine":118,"endColumn":119},{"ruleId":"1340","severity":1,"message":"1481","line":2,"column":20,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1506","line":16,"column":11,"nodeType":"1324","messageId":"1342","endLine":16,"endColumn":18},{"ruleId":"1340","severity":1,"message":"1507","line":20,"column":12,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1508","line":20,"column":31,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":51},{"ruleId":"1340","severity":1,"message":"1509","line":21,"column":12,"nodeType":"1324","messageId":"1342","endLine":21,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1510","line":21,"column":21,"nodeType":"1324","messageId":"1342","endLine":21,"endColumn":31},{"ruleId":"1340","severity":1,"message":"1362","line":24,"column":22,"nodeType":"1324","messageId":"1342","endLine":24,"endColumn":33},{"ruleId":"1336","severity":1,"message":"1337","line":84,"column":57,"nodeType":"1338","messageId":"1339","endLine":84,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":84,"column":90,"nodeType":"1357","endLine":84,"endColumn":179},{"ruleId":"1340","severity":1,"message":"1511","line":10,"column":11,"nodeType":"1324","messageId":"1342","endLine":10,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1362","line":19,"column":22,"nodeType":"1324","messageId":"1342","endLine":19,"endColumn":33},{"ruleId":"1340","severity":1,"message":"1363","line":22,"column":12,"nodeType":"1324","messageId":"1342","endLine":22,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1364","line":22,"column":23,"nodeType":"1324","messageId":"1342","endLine":22,"endColumn":35},{"ruleId":"1326","severity":1,"message":"1477","line":37,"column":8,"nodeType":"1328","endLine":37,"endColumn":10,"suggestions":"1512"},{"ruleId":"1326","severity":1,"message":"1513","line":85,"column":8,"nodeType":"1328","endLine":85,"endColumn":11,"suggestions":"1514"},{"ruleId":"1326","severity":1,"message":"1515","line":85,"column":9,"nodeType":"1516","endLine":85,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1517","line":89,"column":8,"nodeType":"1328","endLine":89,"endColumn":17,"suggestions":"1518"},{"ruleId":"1336","severity":1,"message":"1347","line":124,"column":122,"nodeType":"1338","messageId":"1339","endLine":124,"endColumn":124},{"ruleId":"1336","severity":1,"message":"1337","line":184,"column":40,"nodeType":"1338","messageId":"1339","endLine":184,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":195,"column":40,"nodeType":"1338","messageId":"1339","endLine":195,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":206,"column":108,"nodeType":"1338","messageId":"1339","endLine":206,"endColumn":110},{"ruleId":"1336","severity":1,"message":"1337","line":212,"column":67,"nodeType":"1338","messageId":"1339","endLine":212,"endColumn":69},{"ruleId":"1355","severity":1,"message":"1356","line":215,"column":41,"nodeType":"1357","endLine":215,"endColumn":143},{"ruleId":"1336","severity":1,"message":"1337","line":266,"column":45,"nodeType":"1338","messageId":"1339","endLine":266,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":267,"column":90,"nodeType":"1338","messageId":"1339","endLine":267,"endColumn":92},{"ruleId":"1336","severity":1,"message":"1337","line":46,"column":31,"nodeType":"1338","messageId":"1339","endLine":46,"endColumn":33},{"ruleId":"1336","severity":1,"message":"1337","line":99,"column":31,"nodeType":"1338","messageId":"1339","endLine":99,"endColumn":33},{"ruleId":"1340","severity":1,"message":"1350","line":112,"column":12,"nodeType":"1324","messageId":"1342","endLine":112,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1519","line":123,"column":6,"nodeType":"1328","endLine":123,"endColumn":22,"suggestions":"1520"},{"ruleId":"1336","severity":1,"message":"1337","line":185,"column":17,"nodeType":"1338","messageId":"1339","endLine":185,"endColumn":19},{"ruleId":"1521","severity":1,"message":"1522","line":188,"column":15,"nodeType":"1324","messageId":"1523","endLine":188,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":285,"column":33,"nodeType":"1338","messageId":"1339","endLine":285,"endColumn":35},{"ruleId":"1336","severity":1,"message":"1337","line":359,"column":31,"nodeType":"1338","messageId":"1339","endLine":359,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1524","line":376,"column":6,"nodeType":"1328","endLine":376,"endColumn":8,"suggestions":"1525"},{"ruleId":"1336","severity":1,"message":"1337","line":401,"column":116,"nodeType":"1338","messageId":"1339","endLine":401,"endColumn":118},{"ruleId":"1355","severity":1,"message":"1356","line":453,"column":23,"nodeType":"1357","endLine":453,"endColumn":127},{"ruleId":"1355","severity":1,"message":"1356","line":500,"column":29,"nodeType":"1357","endLine":500,"endColumn":138},{"ruleId":"1336","severity":1,"message":"1337","line":564,"column":146,"nodeType":"1338","messageId":"1339","endLine":564,"endColumn":148},{"ruleId":"1355","severity":1,"message":"1356","line":580,"column":21,"nodeType":"1357","endLine":580,"endColumn":125},{"ruleId":"1355","severity":1,"message":"1356","line":621,"column":23,"nodeType":"1357","endLine":621,"endColumn":130},{"ruleId":"1340","severity":1,"message":"1350","line":80,"column":33,"nodeType":"1324","messageId":"1342","endLine":80,"endColumn":34},{"ruleId":"1326","severity":1,"message":"1519","line":91,"column":8,"nodeType":"1328","endLine":91,"endColumn":10,"suggestions":"1526"},{"ruleId":"1340","severity":1,"message":"1527","line":167,"column":14,"nodeType":"1324","messageId":"1342","endLine":167,"endColumn":27},{"ruleId":"1336","severity":1,"message":"1337","line":241,"column":39,"nodeType":"1338","messageId":"1339","endLine":241,"endColumn":41},{"ruleId":"1326","severity":1,"message":"1492","line":312,"column":8,"nodeType":"1328","endLine":312,"endColumn":10,"suggestions":"1528"},{"ruleId":"1336","severity":1,"message":"1337","line":331,"column":152,"nodeType":"1338","messageId":"1339","endLine":331,"endColumn":154},{"ruleId":"1355","severity":1,"message":"1356","line":375,"column":156,"nodeType":"1357","endLine":375,"endColumn":260},{"ruleId":"1355","severity":1,"message":"1356","line":419,"column":190,"nodeType":"1357","endLine":419,"endColumn":299},{"ruleId":"1355","severity":1,"message":"1356","line":499,"column":159,"nodeType":"1357","endLine":499,"endColumn":263},{"ruleId":"1355","severity":1,"message":"1356","line":532,"column":187,"nodeType":"1357","endLine":532,"endColumn":294},{"ruleId":"1340","severity":1,"message":"1511","line":10,"column":11,"nodeType":"1324","messageId":"1342","endLine":10,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1529","line":18,"column":12,"nodeType":"1324","messageId":"1342","endLine":18,"endColumn":23},{"ruleId":"1340","severity":1,"message":"1530","line":18,"column":25,"nodeType":"1324","messageId":"1342","endLine":18,"endColumn":39},{"ruleId":"1340","severity":1,"message":"1531","line":19,"column":12,"nodeType":"1324","messageId":"1342","endLine":19,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1532","line":19,"column":24,"nodeType":"1324","messageId":"1342","endLine":19,"endColumn":37},{"ruleId":"1340","severity":1,"message":"1533","line":20,"column":12,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1534","line":20,"column":31,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":51},{"ruleId":"1340","severity":1,"message":"1535","line":21,"column":12,"nodeType":"1324","messageId":"1342","endLine":21,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1536","line":21,"column":23,"nodeType":"1324","messageId":"1342","endLine":21,"endColumn":35},{"ruleId":"1340","severity":1,"message":"1362","line":23,"column":22,"nodeType":"1324","messageId":"1342","endLine":23,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1477","line":37,"column":8,"nodeType":"1328","endLine":37,"endColumn":10,"suggestions":"1537"},{"ruleId":"1326","severity":1,"message":"1513","line":87,"column":8,"nodeType":"1328","endLine":87,"endColumn":11,"suggestions":"1538"},{"ruleId":"1326","severity":1,"message":"1515","line":87,"column":9,"nodeType":"1516","endLine":87,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1517","line":91,"column":8,"nodeType":"1328","endLine":91,"endColumn":17,"suggestions":"1539"},{"ruleId":"1336","severity":1,"message":"1347","line":122,"column":122,"nodeType":"1338","messageId":"1339","endLine":122,"endColumn":124},{"ruleId":"1336","severity":1,"message":"1337","line":180,"column":40,"nodeType":"1338","messageId":"1339","endLine":180,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":191,"column":40,"nodeType":"1338","messageId":"1339","endLine":191,"endColumn":42},{"ruleId":"1336","severity":1,"message":"1337","line":201,"column":124,"nodeType":"1338","messageId":"1339","endLine":201,"endColumn":126},{"ruleId":"1336","severity":1,"message":"1337","line":207,"column":67,"nodeType":"1338","messageId":"1339","endLine":207,"endColumn":69},{"ruleId":"1355","severity":1,"message":"1356","line":210,"column":41,"nodeType":"1357","endLine":210,"endColumn":130},{"ruleId":"1336","severity":1,"message":"1337","line":258,"column":45,"nodeType":"1338","messageId":"1339","endLine":258,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":259,"column":123,"nodeType":"1338","messageId":"1339","endLine":259,"endColumn":125},{"ruleId":"1336","severity":1,"message":"1337","line":12,"column":68,"nodeType":"1338","messageId":"1339","endLine":12,"endColumn":70},{"ruleId":"1326","severity":1,"message":"1492","line":42,"column":8,"nodeType":"1328","endLine":42,"endColumn":10,"suggestions":"1540"},{"ruleId":"1336","severity":1,"message":"1337","line":84,"column":37,"nodeType":"1338","messageId":"1339","endLine":84,"endColumn":39},{"ruleId":"1326","severity":1,"message":"1494","line":95,"column":8,"nodeType":"1328","endLine":95,"endColumn":10,"suggestions":"1541"},{"ruleId":"1336","severity":1,"message":"1337","line":103,"column":41,"nodeType":"1338","messageId":"1339","endLine":103,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":104,"column":78,"nodeType":"1338","messageId":"1339","endLine":104,"endColumn":80},{"ruleId":"1355","severity":1,"message":"1356","line":208,"column":153,"nodeType":"1357","endLine":208,"endColumn":257},{"ruleId":"1355","severity":1,"message":"1356","line":232,"column":171,"nodeType":"1357","endLine":232,"endColumn":280},{"ruleId":"1336","severity":1,"message":"1347","line":245,"column":90,"nodeType":"1338","messageId":"1339","endLine":245,"endColumn":92},{"ruleId":"1336","severity":1,"message":"1337","line":277,"column":86,"nodeType":"1338","messageId":"1339","endLine":277,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":297,"column":75,"nodeType":"1338","messageId":"1339","endLine":297,"endColumn":77},{"ruleId":"1355","severity":1,"message":"1356","line":303,"column":180,"nodeType":"1357","endLine":303,"endColumn":284},{"ruleId":"1355","severity":1,"message":"1356","line":330,"column":210,"nodeType":"1357","endLine":330,"endColumn":319},{"ruleId":"1340","severity":1,"message":"1481","line":1,"column":27,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":36},{"ruleId":"1336","severity":1,"message":"1337","line":28,"column":24,"nodeType":"1338","messageId":"1339","endLine":28,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":86,"column":29,"nodeType":"1338","messageId":"1339","endLine":86,"endColumn":31},{"ruleId":"1336","severity":1,"message":"1337","line":104,"column":19,"nodeType":"1338","messageId":"1339","endLine":104,"endColumn":21},{"ruleId":"1336","severity":1,"message":"1337","line":111,"column":21,"nodeType":"1338","messageId":"1339","endLine":111,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1356","line":122,"column":98,"nodeType":"1357","endLine":122,"endColumn":186},{"ruleId":"1336","severity":1,"message":"1337","line":131,"column":46,"nodeType":"1338","messageId":"1339","endLine":131,"endColumn":48},{"ruleId":"1336","severity":1,"message":"1337","line":146,"column":60,"nodeType":"1338","messageId":"1339","endLine":146,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":150,"column":23,"nodeType":"1338","messageId":"1339","endLine":150,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":151,"column":64,"nodeType":"1338","messageId":"1339","endLine":151,"endColumn":66},{"ruleId":"1336","severity":1,"message":"1337","line":167,"column":48,"nodeType":"1338","messageId":"1339","endLine":167,"endColumn":50},{"ruleId":"1336","severity":1,"message":"1337","line":171,"column":23,"nodeType":"1338","messageId":"1339","endLine":171,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":172,"column":52,"nodeType":"1338","messageId":"1339","endLine":172,"endColumn":54},{"ruleId":"1355","severity":1,"message":"1356","line":178,"column":53,"nodeType":"1357","endLine":178,"endColumn":199},{"ruleId":"1340","severity":1,"message":"1542","line":1,"column":8,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1543","line":48,"column":6,"nodeType":"1328","endLine":48,"endColumn":8,"suggestions":"1544"},{"ruleId":"1340","severity":1,"message":"1545","line":49,"column":9,"nodeType":"1324","messageId":"1342","endLine":49,"endColumn":20},{"ruleId":"1336","severity":1,"message":"1337","line":51,"column":36,"nodeType":"1338","messageId":"1339","endLine":51,"endColumn":38},{"ruleId":"1340","severity":1,"message":"1542","line":1,"column":8,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1423","line":1,"column":15,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":24},{"ruleId":"1340","severity":1,"message":"1546","line":1,"column":47,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":58},{"ruleId":"1340","severity":1,"message":"1361","line":9,"column":11,"nodeType":"1324","messageId":"1342","endLine":9,"endColumn":19},{"ruleId":"1340","severity":1,"message":"1547","line":10,"column":11,"nodeType":"1324","messageId":"1342","endLine":10,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1548","line":16,"column":11,"nodeType":"1324","messageId":"1342","endLine":16,"endColumn":24},{"ruleId":"1340","severity":1,"message":"1529","line":18,"column":12,"nodeType":"1324","messageId":"1342","endLine":18,"endColumn":23},{"ruleId":"1340","severity":1,"message":"1530","line":18,"column":25,"nodeType":"1324","messageId":"1342","endLine":18,"endColumn":39},{"ruleId":"1340","severity":1,"message":"1549","line":19,"column":22,"nodeType":"1324","messageId":"1342","endLine":19,"endColumn":33},{"ruleId":"1340","severity":1,"message":"1550","line":20,"column":12,"nodeType":"1324","messageId":"1342","endLine":20,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1551","line":21,"column":12,"nodeType":"1324","messageId":"1342","endLine":21,"endColumn":23},{"ruleId":"1340","severity":1,"message":"1552","line":21,"column":25,"nodeType":"1324","messageId":"1342","endLine":21,"endColumn":39},{"ruleId":"1340","severity":1,"message":"1553","line":22,"column":12,"nodeType":"1324","messageId":"1342","endLine":22,"endColumn":20},{"ruleId":"1340","severity":1,"message":"1362","line":22,"column":22,"nodeType":"1324","messageId":"1342","endLine":22,"endColumn":33},{"ruleId":"1340","severity":1,"message":"1363","line":23,"column":12,"nodeType":"1324","messageId":"1342","endLine":23,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1364","line":23,"column":23,"nodeType":"1324","messageId":"1342","endLine":23,"endColumn":35},{"ruleId":"1340","severity":1,"message":"1554","line":24,"column":12,"nodeType":"1324","messageId":"1342","endLine":24,"endColumn":14},{"ruleId":"1340","severity":1,"message":"1555","line":24,"column":16,"nodeType":"1324","messageId":"1342","endLine":24,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1556","line":25,"column":12,"nodeType":"1324","messageId":"1342","endLine":25,"endColumn":15},{"ruleId":"1340","severity":1,"message":"1557","line":25,"column":17,"nodeType":"1324","messageId":"1342","endLine":25,"endColumn":23},{"ruleId":"1340","severity":1,"message":"1558","line":27,"column":12,"nodeType":"1324","messageId":"1342","endLine":27,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1559","line":27,"column":24,"nodeType":"1324","messageId":"1342","endLine":27,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1337","line":89,"column":21,"nodeType":"1338","messageId":"1339","endLine":89,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1365","line":91,"column":8,"nodeType":"1328","endLine":91,"endColumn":18,"suggestions":"1560"},{"ruleId":"1336","severity":1,"message":"1337","line":110,"column":24,"nodeType":"1338","messageId":"1339","endLine":110,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1367","line":141,"column":8,"nodeType":"1328","endLine":141,"endColumn":26,"suggestions":"1561"},{"ruleId":"1336","severity":1,"message":"1337","line":166,"column":57,"nodeType":"1338","messageId":"1339","endLine":166,"endColumn":59},{"ruleId":"1336","severity":1,"message":"1337","line":213,"column":42,"nodeType":"1338","messageId":"1339","endLine":213,"endColumn":44},{"ruleId":"1355","severity":1,"message":"1356","line":293,"column":17,"nodeType":"1357","endLine":293,"endColumn":73},{"ruleId":"1355","severity":1,"message":"1356","line":298,"column":17,"nodeType":"1357","endLine":298,"endColumn":137},{"ruleId":"1355","severity":1,"message":"1356","line":331,"column":65,"nodeType":"1357","endLine":331,"endColumn":169},{"ruleId":"1336","severity":1,"message":"1337","line":395,"column":56,"nodeType":"1338","messageId":"1339","endLine":395,"endColumn":58},{"ruleId":"1336","severity":1,"message":"1337","line":395,"column":86,"nodeType":"1338","messageId":"1339","endLine":395,"endColumn":88},{"ruleId":"1336","severity":1,"message":"1337","line":402,"column":138,"nodeType":"1338","messageId":"1339","endLine":402,"endColumn":140},{"ruleId":"1336","severity":1,"message":"1337","line":416,"column":80,"nodeType":"1338","messageId":"1339","endLine":416,"endColumn":82},{"ruleId":"1336","severity":1,"message":"1337","line":420,"column":145,"nodeType":"1338","messageId":"1339","endLine":420,"endColumn":147},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":54,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":56},{"ruleId":"1336","severity":1,"message":"1337","line":458,"column":82,"nodeType":"1338","messageId":"1339","endLine":458,"endColumn":84},{"ruleId":"1336","severity":1,"message":"1337","line":462,"column":164,"nodeType":"1338","messageId":"1339","endLine":462,"endColumn":166},{"ruleId":"1355","severity":1,"message":"1356","line":538,"column":57,"nodeType":"1357","endLine":538,"endColumn":161},{"ruleId":"1340","severity":1,"message":"1481","line":3,"column":20,"nodeType":"1324","messageId":"1342","endLine":3,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1434","line":3,"column":31,"nodeType":"1324","messageId":"1342","endLine":3,"endColumn":41},{"ruleId":"1340","severity":1,"message":"1546","line":7,"column":10,"nodeType":"1324","messageId":"1342","endLine":7,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1562","line":22,"column":12,"nodeType":"1324","messageId":"1342","endLine":22,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":86,"column":53,"nodeType":"1338","messageId":"1339","endLine":86,"endColumn":55},{"ruleId":"1336","severity":1,"message":"1337","line":86,"column":103,"nodeType":"1338","messageId":"1339","endLine":86,"endColumn":105},{"ruleId":"1336","severity":1,"message":"1337","line":86,"column":156,"nodeType":"1338","messageId":"1339","endLine":86,"endColumn":158},{"ruleId":"1336","severity":1,"message":"1337","line":92,"column":60,"nodeType":"1338","messageId":"1339","endLine":92,"endColumn":62},{"ruleId":"1336","severity":1,"message":"1337","line":92,"column":115,"nodeType":"1338","messageId":"1339","endLine":92,"endColumn":117},{"ruleId":"1336","severity":1,"message":"1337","line":92,"column":170,"nodeType":"1338","messageId":"1339","endLine":92,"endColumn":172},{"ruleId":"1336","severity":1,"message":"1337","line":92,"column":220,"nodeType":"1338","messageId":"1339","endLine":92,"endColumn":222},{"ruleId":"1336","severity":1,"message":"1337","line":92,"column":271,"nodeType":"1338","messageId":"1339","endLine":92,"endColumn":273},{"ruleId":"1336","severity":1,"message":"1337","line":120,"column":107,"nodeType":"1338","messageId":"1339","endLine":120,"endColumn":109},{"ruleId":"1336","severity":1,"message":"1337","line":144,"column":139,"nodeType":"1338","messageId":"1339","endLine":144,"endColumn":141},{"ruleId":"1336","severity":1,"message":"1337","line":144,"column":184,"nodeType":"1338","messageId":"1339","endLine":144,"endColumn":186},{"ruleId":"1336","severity":1,"message":"1337","line":144,"column":234,"nodeType":"1338","messageId":"1339","endLine":144,"endColumn":236},{"ruleId":"1336","severity":1,"message":"1337","line":149,"column":127,"nodeType":"1338","messageId":"1339","endLine":149,"endColumn":129},{"ruleId":"1336","severity":1,"message":"1337","line":150,"column":95,"nodeType":"1338","messageId":"1339","endLine":150,"endColumn":97},{"ruleId":"1336","severity":1,"message":"1337","line":167,"column":24,"nodeType":"1338","messageId":"1339","endLine":167,"endColumn":26},{"ruleId":"1340","severity":1,"message":"1563","line":2,"column":10,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":14},{"ruleId":"1340","severity":1,"message":"1481","line":3,"column":20,"nodeType":"1324","messageId":"1342","endLine":3,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1564","line":22,"column":23,"nodeType":"1324","messageId":"1342","endLine":22,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1347","line":96,"column":53,"nodeType":"1338","messageId":"1339","endLine":96,"endColumn":55},{"ruleId":"1336","severity":1,"message":"1337","line":98,"column":22,"nodeType":"1338","messageId":"1339","endLine":98,"endColumn":24},{"ruleId":"1336","severity":1,"message":"1337","line":100,"column":80,"nodeType":"1338","messageId":"1339","endLine":100,"endColumn":82},{"ruleId":"1336","severity":1,"message":"1337","line":128,"column":16,"nodeType":"1338","messageId":"1339","endLine":128,"endColumn":18},{"ruleId":"1419","severity":1,"message":"1420","line":49,"column":51,"nodeType":"1421","messageId":"1422","endLine":49,"endColumn":53},{"ruleId":"1326","severity":1,"message":"1565","line":64,"column":8,"nodeType":"1328","endLine":64,"endColumn":10,"suggestions":"1566"},{"ruleId":"1326","severity":1,"message":"1565","line":68,"column":8,"nodeType":"1328","endLine":68,"endColumn":42,"suggestions":"1567"},{"ruleId":"1336","severity":1,"message":"1337","line":89,"column":24,"nodeType":"1338","messageId":"1339","endLine":89,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1337","line":100,"column":24,"nodeType":"1338","messageId":"1339","endLine":100,"endColumn":26},{"ruleId":"1336","severity":1,"message":"1347","line":124,"column":24,"nodeType":"1338","messageId":"1339","endLine":124,"endColumn":26},{"ruleId":"1389","severity":1,"message":"1390","line":125,"column":26,"nodeType":"1338","messageId":"1391","endLine":125,"endColumn":27},{"ruleId":"1336","severity":1,"message":"1337","line":145,"column":155,"nodeType":"1338","messageId":"1339","endLine":145,"endColumn":157},{"ruleId":"1336","severity":1,"message":"1337","line":147,"column":85,"nodeType":"1338","messageId":"1339","endLine":147,"endColumn":87},{"ruleId":"1336","severity":1,"message":"1337","line":191,"column":93,"nodeType":"1338","messageId":"1339","endLine":191,"endColumn":95},{"ruleId":"1340","severity":1,"message":"1472","line":1,"column":43,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":49},{"ruleId":"1340","severity":1,"message":"1423","line":4,"column":15,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":24},{"ruleId":"1340","severity":1,"message":"1568","line":4,"column":26,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":37},{"ruleId":"1340","severity":1,"message":"1501","line":4,"column":39,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":48},{"ruleId":"1340","severity":1,"message":"1569","line":4,"column":63,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":37,"column":16,"nodeType":"1338","messageId":"1339","endLine":37,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":37,"column":46,"nodeType":"1338","messageId":"1339","endLine":37,"endColumn":48},{"ruleId":"1326","severity":1,"message":"1570","line":58,"column":8,"nodeType":"1328","endLine":58,"endColumn":34,"suggestions":"1571"},{"ruleId":"1336","severity":1,"message":"1337","line":126,"column":61,"nodeType":"1338","messageId":"1339","endLine":126,"endColumn":63},{"ruleId":"1336","severity":1,"message":"1337","line":136,"column":63,"nodeType":"1338","messageId":"1339","endLine":136,"endColumn":65},{"ruleId":"1336","severity":1,"message":"1337","line":153,"column":53,"nodeType":"1338","messageId":"1339","endLine":153,"endColumn":55},{"ruleId":"1336","severity":1,"message":"1337","line":165,"column":71,"nodeType":"1338","messageId":"1339","endLine":165,"endColumn":73},{"ruleId":"1355","severity":1,"message":"1356","line":166,"column":119,"nodeType":"1357","endLine":166,"endColumn":209},{"ruleId":"1336","severity":1,"message":"1337","line":167,"column":35,"nodeType":"1338","messageId":"1339","endLine":167,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1337","line":168,"column":119,"nodeType":"1338","messageId":"1339","endLine":168,"endColumn":121},{"ruleId":"1336","severity":1,"message":"1337","line":182,"column":73,"nodeType":"1338","messageId":"1339","endLine":182,"endColumn":75},{"ruleId":"1340","severity":1,"message":"1472","line":4,"column":43,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":49},{"ruleId":"1336","severity":1,"message":"1337","line":38,"column":16,"nodeType":"1338","messageId":"1339","endLine":38,"endColumn":18},{"ruleId":"1336","severity":1,"message":"1337","line":38,"column":46,"nodeType":"1338","messageId":"1339","endLine":38,"endColumn":48},{"ruleId":"1326","severity":1,"message":"1572","line":60,"column":8,"nodeType":"1328","endLine":60,"endColumn":34,"suggestions":"1573"},{"ruleId":"1336","severity":1,"message":"1337","line":106,"column":51,"nodeType":"1338","messageId":"1339","endLine":106,"endColumn":53},{"ruleId":"1355","severity":1,"message":"1356","line":118,"column":120,"nodeType":"1357","endLine":118,"endColumn":210},{"ruleId":"1336","severity":1,"message":"1337","line":119,"column":35,"nodeType":"1338","messageId":"1339","endLine":119,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1337","line":120,"column":106,"nodeType":"1338","messageId":"1339","endLine":120,"endColumn":108},{"ruleId":"1355","severity":1,"message":"1356","line":127,"column":62,"nodeType":"1357","endLine":127,"endColumn":156},{"ruleId":"1340","severity":1,"message":"1484","line":1,"column":8,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1481","line":2,"column":20,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1472","line":2,"column":43,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":49},{"ruleId":"1340","severity":1,"message":"1486","line":6,"column":10,"nodeType":"1324","messageId":"1342","endLine":6,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1574","line":12,"column":9,"nodeType":"1324","messageId":"1342","endLine":12,"endColumn":16},{"ruleId":"1340","severity":1,"message":"1575","line":16,"column":9,"nodeType":"1324","messageId":"1342","endLine":16,"endColumn":20},{"ruleId":"1340","severity":1,"message":"1576","line":37,"column":12,"nodeType":"1324","messageId":"1342","endLine":37,"endColumn":16},{"ruleId":"1340","severity":1,"message":"1577","line":37,"column":18,"nodeType":"1324","messageId":"1342","endLine":37,"endColumn":25},{"ruleId":"1336","severity":1,"message":"1337","line":45,"column":39,"nodeType":"1338","messageId":"1339","endLine":45,"endColumn":41},{"ruleId":"1336","severity":1,"message":"1337","line":45,"column":53,"nodeType":"1338","messageId":"1339","endLine":45,"endColumn":55},{"ruleId":"1578","severity":1,"message":"1579","line":46,"column":16,"nodeType":"1357","messageId":"1580","endLine":46,"endColumn":153},{"ruleId":"1336","severity":1,"message":"1337","line":48,"column":41,"nodeType":"1338","messageId":"1339","endLine":48,"endColumn":43},{"ruleId":"1336","severity":1,"message":"1337","line":48,"column":55,"nodeType":"1338","messageId":"1339","endLine":48,"endColumn":57},{"ruleId":"1578","severity":1,"message":"1581","line":49,"column":16,"nodeType":"1357","messageId":"1580","endLine":49,"endColumn":152},{"ruleId":"1336","severity":1,"message":"1337","line":51,"column":35,"nodeType":"1338","messageId":"1339","endLine":51,"endColumn":37},{"ruleId":"1336","severity":1,"message":"1337","line":51,"column":48,"nodeType":"1338","messageId":"1339","endLine":51,"endColumn":50},{"ruleId":"1578","severity":1,"message":"1582","line":52,"column":16,"nodeType":"1357","messageId":"1580","endLine":52,"endColumn":153},{"ruleId":"1336","severity":1,"message":"1337","line":66,"column":72,"nodeType":"1338","messageId":"1339","endLine":66,"endColumn":74},{"ruleId":"1336","severity":1,"message":"1337","line":67,"column":93,"nodeType":"1338","messageId":"1339","endLine":67,"endColumn":95},{"ruleId":"1336","severity":1,"message":"1337","line":69,"column":91,"nodeType":"1338","messageId":"1339","endLine":69,"endColumn":93},{"ruleId":"1340","severity":1,"message":"1484","line":1,"column":8,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1481","line":2,"column":20,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1472","line":2,"column":43,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":49},{"ruleId":"1340","severity":1,"message":"1486","line":6,"column":10,"nodeType":"1324","messageId":"1342","endLine":6,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1576","line":31,"column":10,"nodeType":"1324","messageId":"1342","endLine":31,"endColumn":14},{"ruleId":"1340","severity":1,"message":"1577","line":31,"column":16,"nodeType":"1324","messageId":"1342","endLine":31,"endColumn":23},{"ruleId":"1336","severity":1,"message":"1337","line":39,"column":37,"nodeType":"1338","messageId":"1339","endLine":39,"endColumn":39},{"ruleId":"1336","severity":1,"message":"1337","line":39,"column":51,"nodeType":"1338","messageId":"1339","endLine":39,"endColumn":53},{"ruleId":"1578","severity":1,"message":"1579","line":40,"column":14,"nodeType":"1357","messageId":"1580","endLine":40,"endColumn":151},{"ruleId":"1336","severity":1,"message":"1337","line":42,"column":39,"nodeType":"1338","messageId":"1339","endLine":42,"endColumn":41},{"ruleId":"1336","severity":1,"message":"1337","line":42,"column":53,"nodeType":"1338","messageId":"1339","endLine":42,"endColumn":55},{"ruleId":"1578","severity":1,"message":"1581","line":43,"column":14,"nodeType":"1357","messageId":"1580","endLine":43,"endColumn":150},{"ruleId":"1336","severity":1,"message":"1337","line":45,"column":33,"nodeType":"1338","messageId":"1339","endLine":45,"endColumn":35},{"ruleId":"1336","severity":1,"message":"1337","line":45,"column":46,"nodeType":"1338","messageId":"1339","endLine":45,"endColumn":48},{"ruleId":"1578","severity":1,"message":"1582","line":46,"column":14,"nodeType":"1357","messageId":"1580","endLine":46,"endColumn":151},{"ruleId":"1336","severity":1,"message":"1337","line":60,"column":70,"nodeType":"1338","messageId":"1339","endLine":60,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":61,"column":91,"nodeType":"1338","messageId":"1339","endLine":61,"endColumn":93},{"ruleId":"1336","severity":1,"message":"1337","line":63,"column":89,"nodeType":"1338","messageId":"1339","endLine":63,"endColumn":91},{"ruleId":"1340","severity":1,"message":"1481","line":1,"column":20,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":29},{"ruleId":"1340","severity":1,"message":"1472","line":1,"column":43,"nodeType":"1324","messageId":"1342","endLine":1,"endColumn":49},{"ruleId":"1340","severity":1,"message":"1484","line":2,"column":8,"nodeType":"1324","messageId":"1342","endLine":2,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1583","line":3,"column":8,"nodeType":"1324","messageId":"1342","endLine":3,"endColumn":21},{"ruleId":"1340","severity":1,"message":"1486","line":4,"column":10,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":13},{"ruleId":"1340","severity":1,"message":"1423","line":4,"column":15,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":24},{"ruleId":"1340","severity":1,"message":"1568","line":4,"column":26,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":37},{"ruleId":"1340","severity":1,"message":"1501","line":4,"column":39,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":48},{"ruleId":"1340","severity":1,"message":"1569","line":4,"column":63,"nodeType":"1324","messageId":"1342","endLine":4,"endColumn":72},{"ruleId":"1336","severity":1,"message":"1337","line":14,"column":45,"nodeType":"1338","messageId":"1339","endLine":14,"endColumn":47},{"ruleId":"1336","severity":1,"message":"1337","line":14,"column":88,"nodeType":"1338","messageId":"1339","endLine":14,"endColumn":90},{"ruleId":"1336","severity":1,"message":"1337","line":18,"column":49,"nodeType":"1338","messageId":"1339","endLine":18,"endColumn":51},{"ruleId":"1336","severity":1,"message":"1337","line":18,"column":97,"nodeType":"1338","messageId":"1339","endLine":18,"endColumn":99},{"ruleId":"1336","severity":1,"message":"1337","line":18,"column":145,"nodeType":"1338","messageId":"1339","endLine":18,"endColumn":147},{"ruleId":"1336","severity":1,"message":"1337","line":22,"column":49,"nodeType":"1338","messageId":"1339","endLine":22,"endColumn":51},{"ruleId":"1336","severity":1,"message":"1337","line":22,"column":97,"nodeType":"1338","messageId":"1339","endLine":22,"endColumn":99},{"ruleId":"1336","severity":1,"message":"1337","line":22,"column":145,"nodeType":"1338","messageId":"1339","endLine":22,"endColumn":147},{"ruleId":"1336","severity":1,"message":"1337","line":26,"column":42,"nodeType":"1338","messageId":"1339","endLine":26,"endColumn":44},{"ruleId":"1336","severity":1,"message":"1337","line":26,"column":83,"nodeType":"1338","messageId":"1339","endLine":26,"endColumn":85},{"ruleId":"1336","severity":1,"message":"1337","line":62,"column":73,"nodeType":"1338","messageId":"1339","endLine":62,"endColumn":75},{"ruleId":"1336","severity":1,"message":"1337","line":65,"column":92,"nodeType":"1338","messageId":"1339","endLine":65,"endColumn":94},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-redeclare","'vendorsitems' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MakePurchaseEntryExport'. Either include it or remove the dependency array.","ArrayExpression",["1584"],"React Hook useEffect has a missing dependency: 'MakePurchaseReturnExport'. Either include it or remove the dependency array.",["1585"],"React Hook useEffect has a missing dependency: 'MakeSaleEntryExport'. Either include it or remove the dependency array.",["1586"],"React Hook useEffect has a missing dependency: 'MakeSaleReturnExport'. Either include it or remove the dependency array.",["1587"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setchannel' is assigned a value but never used.","unusedVar","React Hook useEffect has a missing dependency: 'GetPages'. Either include it or remove the dependency array.",["1588"],"React Hook useEffect has missing dependencies: 'GETSalesList' and 'GETSalesListForExcel'. Either include them or remove the dependency array.",["1589"],"Expected '!==' and instead saw '!='.","'previouspayments' is assigned a value but never used.","'setpreviouspayments' is assigned a value but never used.","'p' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AddPaymentMethods'. Either include it or remove the dependency array.",["1590"],"React Hook useEffect has a missing dependency: 'CalPrevTotal'. Either include it or remove the dependency array.",["1591"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["1592"],"React Hook useEffect has missing dependencies: 'GETSaleReturns' and 'GETSaleReturnsForExcel'. Either include them or remove the dependency array.",["1593"],"'tableref' is assigned a value but never used.","'setclinicid' is assigned a value but never used.","'ischecked' is assigned a value but never used.","'setischecked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Doclist'. Either include it or remove the dependency array.",["1594"],"React Hook useEffect has a missing dependency: 'CalGrandttl'. Either include it or remove the dependency array.",["1595"],"React Hook useEffect has a missing dependency: 'SubmitSaleEntry'. Either include it or remove the dependency array.",["1596"],"'c' is assigned a value but never used.","'vendorsref' is assigned a value but never used.","'billname' is assigned a value but never used.","'itemsearch' is assigned a value but never used.","'setitemsearch' is assigned a value but never used.",["1597"],"React Hook useEffect has missing dependencies: 'GETPurchaseList' and 'GETPurchaseListForExcel'. Either include them or remove the dependency array.",["1598"],"React Hook useEffect has a missing dependency: 'CalculateGst'. Either include it or remove the dependency array.",["1599"],"React Hook useEffect has a missing dependency: 'CalculateIGst'. Either include it or remove the dependency array.",["1600"],"React Hook useEffect has a missing dependency: 'Calculate'. Either include it or remove the dependency array.",["1601"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'CalculateCPU'. Either include it or remove the dependency array.",["1602"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["1603"],"React Hook useEffect has missing dependencies: 'GETPurchaseReturns' and 'GETPurchaseReturnsForExcel'. Either include them or remove the dependency array.",["1604"],"'ClinicId' is assigned a value but never used.","'ClinicList' is assigned a value but never used.","'Todaydate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPages', 'GetVaccines', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["1605"],"React Hook useEffect has a missing dependency: 'Get_Detailed_Data'. Either include it or remove the dependency array.",["1606"],"React Hook useEffect has missing dependencies: 'GetMedicines', 'GetPages', and 'Get_Detailed_Data'. Either include them or remove the dependency array.",["1607"],["1608"],"React Hook useEffect has missing dependencies: 'GetPages' and 'medcinelist'. Either include them or remove the dependency array.",["1609"],"'pendingpaid' is assigned a value but never used.","'setpendingpaid' is assigned a value but never used.","'advancepaid' is assigned a value but never used.","'setadvancepaid' is assigned a value but never used.","'SalePendings' is assigned a value but never used.","'setSalePendings' is assigned a value but never used.","'pr' is assigned a value but never used.","'setpr' is assigned a value but never used.","'setprxl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PharmacyList'. Either include it or remove the dependency array.",["1610"],"'SumExtraCharges' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'TodayDate' is defined but never used.","'visibles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DSR_All_Appointments'. Either include it or remove the dependency array.",["1611"],["1612"],"'pageindex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetDoctors'. Either include it or remove the dependency array.",["1613"],"'doctorstime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DoctorwiseTable'. Either include it or remove the dependency array.",["1614"],"'useContext' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"1615","text":"1616"},"Unexpected whitespace before property get.",{"range":"1617","text":"1616"},"React Hook useEffect has a missing dependency: 'fetchapi'. Either include it or remove the dependency array.",["1618"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'roleId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Permissions'. Either include it or remove the dependency array.",["1619"],"React Hook useEffect has a missing dependency: 'Changepage'. Either include it or remove the dependency array.",["1620"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'searchpatient'. Either include it or remove the dependency array.",["1621"],"'createContext' is defined but never used.","'appointmentid' is assigned a value but never used.","'d_form' is assigned a value but never used.","'ArraySum' is defined but never used.","React Hook useEffect has a missing dependency: 'Appointmentlist'. Either include it or remove the dependency array.",["1622"],"no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'https:' is defined but never used.","unused",["1623"],"React Hook useEffect has a missing dependency: 'clinics'. Either include it or remove the dependency array.",["1624"],"'useRef' is defined but never used.","'geocodeByPlaceId' is defined but never used.","'placeid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'lat' and 'lng'. Either include them or remove the dependency array.",["1625"],"React Hook useEffect has a missing dependency: 'ClinicList'. Either include it or remove the dependency array.",["1626"],"React Hook useEffect has a missing dependency: 'setfromsearch'. Either include it or remove the dependency array.",["1627"],"'useEffect' is defined but never used.","'APIDate' is assigned a value but never used.","'toggledoctorform' is assigned a value but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'URL' is defined but never used.","'Notiflix' is defined but never used.","'capitalizeFirstLetter' is defined but never used.","React Hook useEffect has a missing dependency: 'currentvalue'. Either include it or remove the dependency array.",["1628"],["1629"],"React Hook useEffect has a missing dependency: 'AdvancePayments'. Either include it or remove the dependency array.",["1630"],"React Hook useEffect has a missing dependency: 'ExistedPendingPayments'. Either include it or remove the dependency array.",["1631"],"'Payments' is defined but never used.","'openpayments' is assigned a value but never used.","'setopenpayments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CalculatePaidPendings' and 'calculate'. Either include them or remove the dependency array.",["1632"],"'Doctorapi' is defined but never used.","'TodayDoctors' is assigned a value but never used.","'Doclist' is assigned a value but never used.","'time' is assigned a value but never used.","'gettime_value' is assigned a value but never used.","'Doctors' is assigned a value but never used.","'adddoctorfortoday' is assigned a value but never used.","'setadddoctorfortoday' is assigned a value but never used.","'docdate' is assigned a value but never used.","'setdocdate' is assigned a value but never used.","'colorref' is assigned a value but never used.",["1633"],"React Hook useEffect has missing dependencies: 'getCurrentTimeslots' and 'props.appointmentdate'. Either include them or remove the dependency array.",["1634"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'getCurrentTimefrom'. Either include it or remove the dependency array.",["1635"],"React Hook useEffect has missing dependencies: 'AddExtraCharges' and 'AddPaymentMethods'. Either include them or remove the dependency array.",["1636"],"no-self-assign","'total' is assigned to itself.","selfAssignment","React Hook useEffect has missing dependencies: 'AdvancePayments' and 'ConsumableAmount'. Either include them or remove the dependency array.",["1637"],["1638"],"'Return_Amount' is defined but never used.",["1639"],"'searchinput' is assigned a value but never used.","'setsearchinput' is assigned a value but never used.","'searchlist' is assigned a value but never used.","'setsearchlist' is assigned a value but never used.","'displaysearchlist' is assigned a value but never used.","'setdisplaysearchlist' is assigned a value but never used.","'patientid' is assigned a value but never used.","'setpatientid' is assigned a value but never used.",["1640"],["1641"],["1642"],["1643"],["1644"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'FillDetails'. Either include it or remove the dependency array.",["1645"],"'handleimage' is assigned a value but never used.","'Permissions' is defined but never used.","'cliniclist' is assigned a value but never used.","'patientaddref' is assigned a value but never used.","'setdoctorid' is assigned a value but never used.","'doctorname' is assigned a value but never used.","'otherdoctor' is assigned a value but never used.","'setotherdoctor' is assigned a value but never used.","'clinicid' is assigned a value but never used.","'Dc' is assigned a value but never used.","'setDc' is assigned a value but never used.","'AtC' is assigned a value but never used.","'setAtC' is assigned a value but never used.","'searchload' is assigned a value but never used.","'setsearchload' is assigned a value but never used.",["1646"],["1647"],"'highlighticon' is assigned a value but never used.","'Link' is defined but never used.","'setdoctorindex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchallAppointmentslist'. Either include it or remove the dependency array.",["1648"],["1649"],"'DoctorsList' is defined but never used.","'Secretkey' is defined but never used.","React Hook useEffect has missing dependencies: 'GetPages' and 'getAllPatients'. Either include them or remove the dependency array.",["1650"],"React Hook useEffect has missing dependencies: 'GetPages' and 'getAllDoctors'. Either include them or remove the dependency array.",["1651"],"'weekday' is assigned a value but never used.","'currentDate' is assigned a value but never used.","'type' is assigned a value but never used.","'settype' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Appointments_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Doctors_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pharmacy_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","'ReactPaginate' is defined but never used.",{"desc":"1652","fix":"1653"},{"desc":"1654","fix":"1655"},{"desc":"1656","fix":"1657"},{"desc":"1658","fix":"1659"},{"desc":"1660","fix":"1661"},{"desc":"1662","fix":"1663"},{"desc":"1664","fix":"1665"},{"desc":"1666","fix":"1667"},{"desc":"1668","fix":"1669"},{"desc":"1670","fix":"1671"},{"desc":"1672","fix":"1673"},{"desc":"1674","fix":"1675"},{"desc":"1676","fix":"1677"},{"desc":"1660","fix":"1678"},{"desc":"1679","fix":"1680"},{"desc":"1681","fix":"1682"},{"desc":"1683","fix":"1684"},{"desc":"1685","fix":"1686"},{"desc":"1687","fix":"1688"},{"desc":"1660","fix":"1689"},{"desc":"1690","fix":"1691"},{"desc":"1692","fix":"1693"},{"desc":"1694","fix":"1695"},{"desc":"1696","fix":"1697"},{"desc":"1698","fix":"1699"},{"desc":"1700","fix":"1701"},{"desc":"1702","fix":"1703"},{"desc":"1704","fix":"1705"},{"desc":"1706","fix":"1707"},{"desc":"1708","fix":"1709"},{"desc":"1710","fix":"1711"},[3089,3091],".",[3022,3024],{"desc":"1712","fix":"1713"},{"desc":"1714","fix":"1715"},{"desc":"1716","fix":"1717"},{"desc":"1718","fix":"1719"},{"desc":"1720","fix":"1721"},{"desc":"1722","fix":"1723"},{"desc":"1724","fix":"1725"},{"desc":"1726","fix":"1727"},{"desc":"1728","fix":"1729"},{"desc":"1730","fix":"1731"},{"desc":"1732","fix":"1733"},{"desc":"1726","fix":"1734"},{"desc":"1735","fix":"1736"},{"desc":"1737","fix":"1738"},{"desc":"1739","fix":"1740"},{"desc":"1728","fix":"1741"},{"desc":"1742","fix":"1743"},{"desc":"1744","fix":"1745"},{"desc":"1746","fix":"1747"},{"desc":"1748","fix":"1749"},{"desc":"1750","fix":"1751"},{"desc":"1735","fix":"1752"},{"desc":"1728","fix":"1753"},{"desc":"1742","fix":"1754"},{"desc":"1744","fix":"1755"},{"desc":"1735","fix":"1756"},{"desc":"1737","fix":"1757"},{"desc":"1758","fix":"1759"},{"desc":"1672","fix":"1760"},{"desc":"1674","fix":"1761"},{"desc":"1762","fix":"1763"},{"desc":"1764","fix":"1765"},{"desc":"1766","fix":"1767"},{"desc":"1768","fix":"1769"},"Update the dependencies array to be: [MakePurchaseEntryExport, props.purchaseentryarr]",{"range":"1770","text":"1771"},"Update the dependencies array to be: [MakePurchaseReturnExport, props.purchasereturnarr]",{"range":"1772","text":"1773"},"Update the dependencies array to be: [MakeSaleEntryExport, props.saleentryarr]",{"range":"1774","text":"1775"},"Update the dependencies array to be: [MakeSaleReturnExport, props.salereturnarr]",{"range":"1776","text":"1777"},"Update the dependencies array to be: [GetPages, channel, fromdate, todate]",{"range":"1778","text":"1779"},"Update the dependencies array to be: [GETSalesList, GETSalesListForExcel, pagecount]",{"range":"1780","text":"1781"},"Update the dependencies array to be: [AddPaymentMethods]",{"range":"1782","text":"1783"},"Update the dependencies array to be: [CalPrevTotal, props.saleentryarr]",{"range":"1784","text":"1785"},"Update the dependencies array to be: [GetPages, fromdate, todate]",{"range":"1786","text":"1787"},"Update the dependencies array to be: [GETSaleReturns, GETSaleReturnsForExcel, pagecount]",{"range":"1788","text":"1789"},"Update the dependencies array to be: [Doclist, doctorid]",{"range":"1790","text":"1791"},"Update the dependencies array to be: [CalGrandttl, SelectedProducts]",{"range":"1792","text":"1793"},"Update the dependencies array to be: [AtC, SubmitSaleEntry]",{"range":"1794","text":"1795"},{"range":"1796","text":"1779"},"Update the dependencies array to be: [GETPurchaseList, GETPurchaseListForExcel, pagecount]",{"range":"1797","text":"1798"},"Update the dependencies array to be: [CalculateGst, sgstprcnt]",{"range":"1799","text":"1800"},"Update the dependencies array to be: [CalculateIGst, igstprcnt]",{"range":"1801","text":"1802"},"Update the dependencies array to be: [Calculate]",{"range":"1803","text":"1804"},"Update the dependencies array to be: [CalculateCPU]",{"range":"1805","text":"1806"},{"range":"1807","text":"1779"},"Update the dependencies array to be: [GETPurchaseReturns, GETPurchaseReturnsForExcel, pagecount]",{"range":"1808","text":"1809"},"Update the dependencies array to be: [GetPages, GetVaccines, Get_Detailed_Data, pagecount, searchname]",{"range":"1810","text":"1811"},"Update the dependencies array to be: [Get_Detailed_Data, vaccineslist]",{"range":"1812","text":"1813"},"Update the dependencies array to be: [GetMedicines, GetPages, Get_Detailed_Data, pagecount, searchname]",{"range":"1814","text":"1815"},"Update the dependencies array to be: [Get_Detailed_Data, medicineslist]",{"range":"1816","text":"1817"},"Update the dependencies array to be: [GetPages, medcinelist, pagecount]",{"range":"1818","text":"1819"},"Update the dependencies array to be: [props.fromdate, props.todate, props.clinic, PharmacyList]",{"range":"1820","text":"1821"},"Update the dependencies array to be: [DSR_All_Appointments]",{"range":"1822","text":"1823"},"Update the dependencies array to be: [props.doctorid, props.fromdate, props.todate, props.clinic, DSR_All_Appointments]",{"range":"1824","text":"1825"},"Update the dependencies array to be: [GetDoctors, props.fromdate, props.todate]",{"range":"1826","text":"1827"},"Update the dependencies array to be: [props.fromdate, props.todate, load, DoctorwiseTable]",{"range":"1828","text":"1829"},"Update the dependencies array to be: [ClinicId, fetchapi]",{"range":"1830","text":"1831"},"Update the dependencies array to be: [Permissions, role]",{"range":"1832","text":"1833"},"Update the dependencies array to be: [Changepage]",{"range":"1834","text":"1835"},"Update the dependencies array to be: [props.searchtext, searchpatient]",{"range":"1836","text":"1837"},"Update the dependencies array to be: [Appointmentlist, props._selected]",{"range":"1838","text":"1839"},"Update the dependencies array to be: [fetchapi, props._selected]",{"range":"1840","text":"1841"},"Update the dependencies array to be: [clinicid, clinics]",{"range":"1842","text":"1843"},"Update the dependencies array to be: [data, lat, lng]",{"range":"1844","text":"1845"},"Update the dependencies array to be: [ClinicList]",{"range":"1846","text":"1847"},"Update the dependencies array to be: [props.patientidfromsearch, setfromsearch]",{"range":"1848","text":"1849"},"Update the dependencies array to be: [currentvalue, props.patient_id]",{"range":"1850","text":"1851"},{"range":"1852","text":"1845"},"Update the dependencies array to be: [AdvancePayments]",{"range":"1853","text":"1854"},"Update the dependencies array to be: [ExistedPendingPayments]",{"range":"1855","text":"1856"},"Update the dependencies array to be: [CalculatePaidPendings, calculate]",{"range":"1857","text":"1858"},{"range":"1859","text":"1847"},"Update the dependencies array to be: [getCurrentTimeslots, props.appointmentdate]",{"range":"1860","text":"1861"},"Update the dependencies array to be: [getCurrentTimefrom, trigger]",{"range":"1862","text":"1863"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods, props.billform]",{"range":"1864","text":"1865"},"Update the dependencies array to be: [AdvancePayments, ConsumableAmount]",{"range":"1866","text":"1867"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods]",{"range":"1868","text":"1869"},{"range":"1870","text":"1854"},{"range":"1871","text":"1847"},{"range":"1872","text":"1861"},{"range":"1873","text":"1863"},{"range":"1874","text":"1854"},{"range":"1875","text":"1856"},"Update the dependencies array to be: [FillDetails]",{"range":"1876","text":"1877"},{"range":"1878","text":"1791"},{"range":"1879","text":"1793"},"Update the dependencies array to be: [fetchallAppointmentslist]",{"range":"1880","text":"1881"},"Update the dependencies array to be: [doctorid, fetchallAppointmentslist, fromdate, todate, type]",{"range":"1882","text":"1883"},"Update the dependencies array to be: [GetPages, getAllPatients, pagecount, patientsearch]",{"range":"1884","text":"1885"},"Update the dependencies array to be: [pagecount, Doctorssearch, GetPages, getAllDoctors]",{"range":"1886","text":"1887"},[8080,8104],"[MakePurchaseEntryExport, props.purchaseentryarr]",[16444,16469],"[MakePurchaseReturnExport, props.purchasereturnarr]",[25893,25913],"[MakeSaleEntryExport, props.saleentryarr]",[35094,35115],"[MakeSaleReturnExport, props.salereturnarr]",[7223,7250],"[GetPages, channel, fromdate, todate]",[7332,7343],"[GETSalesList, GETSalesListForExcel, pagecount]",[23069,23071],"[AddPaymentMethods]",[24728,24748],"[CalPrevTotal, props.saleentryarr]",[53656,53674],"[GetPages, fromdate, todate]",[53760,53771],"[GETSaleReturns, GETSaleReturnsForExcel, pagecount]",[68227,68237],"[Doclist, doctorid]",[69390,69408],"[CalGrandttl, SelectedProducts]",[73548,73553],"[AtC, SubmitSaleEntry]",[134372,134399],[134487,134498],"[GETPurchaseList, GETPurchaseListForExcel, pagecount]",[189205,189216],"[CalculateGst, sgstprcnt]",[189301,189312],"[CalculateIGst, igstprcnt]",[189373,189386],"[Calculate]",[189447,189476],"[CalculateCPU]",[235855,235882],[235976,235987],"[GETPurchaseReturns, GETPurchaseReturnsForExcel, pagecount]",[292916,292939],"[GetPages, GetVaccines, Get_Detailed_Data, pagecount, searchname]",[293017,293031],"[Get_Detailed_Data, vaccineslist]",[312205,312228],"[GetMedicines, GetPages, Get_Detailed_Data, pagecount, searchname]",[312286,312301],"[Get_Detailed_Data, medicineslist]",[334085,334096],"[GetPages, medcinelist, pagecount]",[1708,1752],"[props.fromdate, props.todate, props.clinic, PharmacyList]",[2129,2131],"[DSR_All_Appointments]",[2188,2248],"[props.doctorid, props.fromdate, props.todate, props.clinic, DSR_All_Appointments]",[1055,1085],"[GetDoctors, props.fromdate, props.todate]",[5309,5345],"[props.fromdate, props.todate, load, DoctorwiseTable]",[4819,4829],"[ClinicId, fetchapi]",[11887,11893],"[Permissions, role]",[12656,12678],"[Changepage]",[1307,1325],"[props.searchtext, searchpatient]",[3515,3532],"[Appointmentlist, props._selected]",[36802,36819],"[fetchapi, props._selected]",[37001,37011],"[clinicid, clinics]",[6436,6442],"[data, lat, lng]",[1424,1426],"[ClinicList]",[1627,1654],"[props.patientidfromsearch, setfromsearch]",[3367,3385],"[currentvalue, props.patient_id]",[8378,8384],[1576,1578],"[AdvancePayments]",[3262,3264],"[ExistedPendingPayments]",[1473,1475],"[CalculatePaidPendings, calculate]",[1341,1343],[2936,2939],"[getCurrentTimeslots, props.appointmentdate]",[3004,3013],"[getCurrentTimefrom, trigger]",[4619,4635],"[AddExtraCharges, AddPaymentMethods, props.billform]",[12186,12188],"[AdvancePayments, ConsumableAmount]",[3867,3869],"[AddExtraCharges, AddPaymentMethods]",[11454,11456],[1515,1517],[3184,3187],[3252,3261],[1571,1573],[3443,3445],[1620,1622],"[FillDetails]",[3595,3605],[4915,4933],[2719,2721],"[fetchallAppointmentslist]",[2792,2826],"[doctorid, fetchallAppointmentslist, fromdate, todate, type]",[2248,2274],"[GetPages, getAllPatients, pagecount, patientsearch]",[2395,2421],"[pagecount, Doctorssearch, GetPages, getAllDoctors]"]