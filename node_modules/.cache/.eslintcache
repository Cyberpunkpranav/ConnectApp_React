[{"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\index.jsx":"1","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\App.jsx":"2","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\WelcomeLoader.jsx":"3","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\livetime.jsx":"4","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\Timer.jsx":"5","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\SearchField.jsx":"6","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AddAppointment.jsx":"7","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AddPatient.jsx":"8","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AddDoctorSlot.jsx":"9","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Doctor.jsx":"10","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\pharmacy\\apiarrays.jsx":"11","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\pharmacy\\pharmacy.jsx":"12","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\SelectedAppointments.jsx":"13","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\AllAppointmentslist.jsx":"14","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Doctors\\UpdateDoctor.jsx":"15","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Dsr\\Appointments_Dsr.jsx":"16","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Patients\\UpdatePatient.jsx":"17","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Dsr\\Doctors_Dsr.jsx":"18","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Dsr\\Pharmacy_Dsr.jsx":"19","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\notiflix\\customconfirm.jsx":"20","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\Payments.jsx":"21","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AmountPaid.jsx":"22","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\SelectedTimeAppointment.jsx":"23","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\UpdateAppointment.jsx":"24","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Bill.jsx":"25","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Vitals.jsx":"26","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\SelectedDoctorSlot.jsx":"27","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Payments.jsx":"28","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\pharmacy\\Exports.jsx":"29","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\UpdateAppointment.jsx":"30","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\Bill.jsx":"31","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\notiflix\\customnotify.jsx":"32","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\ExportExcel.jsx":"33","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\notiflix\\customloading.jsx":"34"},{"size":18032,"mtime":1677342373470,"results":"35","hashOfConfig":"36"},{"size":47041,"mtime":1677387084028,"results":"37","hashOfConfig":"36"},{"size":466,"mtime":1677298158382,"results":"38","hashOfConfig":"36"},{"size":722,"mtime":1677298158410,"results":"39","hashOfConfig":"36"},{"size":867,"mtime":1677298158350,"results":"40","hashOfConfig":"36"},{"size":3570,"mtime":1677298158316,"results":"41","hashOfConfig":"36"},{"size":12054,"mtime":1677298157866,"results":"42","hashOfConfig":"36"},{"size":36164,"mtime":1677298157917,"results":"43","hashOfConfig":"36"},{"size":5123,"mtime":1677298157901,"results":"44","hashOfConfig":"36"},{"size":31916,"mtime":1677384948399,"results":"45","hashOfConfig":"36"},{"size":9961,"mtime":1677298158508,"results":"46","hashOfConfig":"36"},{"size":227978,"mtime":1677383027764,"results":"47","hashOfConfig":"36"},{"size":10397,"mtime":1677298157616,"results":"48","hashOfConfig":"36"},{"size":12431,"mtime":1677298157549,"results":"49","hashOfConfig":"36"},{"size":132,"mtime":1677298157725,"results":"50","hashOfConfig":"36"},{"size":27972,"mtime":1677342373263,"results":"51","hashOfConfig":"36"},{"size":38338,"mtime":1677298157833,"results":"52","hashOfConfig":"36"},{"size":15103,"mtime":1677392264901,"results":"53","hashOfConfig":"36"},{"size":11008,"mtime":1677298157817,"results":"54","hashOfConfig":"36"},{"size":1075,"mtime":1677298158450,"results":"55","hashOfConfig":"36"},{"size":19755,"mtime":1677298157576,"results":"56","hashOfConfig":"36"},{"size":2359,"mtime":1677298157957,"results":"57","hashOfConfig":"36"},{"size":6264,"mtime":1677298157650,"results":"58","hashOfConfig":"36"},{"size":12608,"mtime":1677298158225,"results":"59","hashOfConfig":"36"},{"size":31013,"mtime":1677298157992,"results":"60","hashOfConfig":"36"},{"size":9440,"mtime":1677298158260,"results":"61","hashOfConfig":"36"},{"size":4035,"mtime":1677298158182,"results":"62","hashOfConfig":"36"},{"size":19984,"mtime":1677298158142,"results":"63","hashOfConfig":"36"},{"size":6257,"mtime":1677298158500,"results":"64","hashOfConfig":"36"},{"size":12455,"mtime":1677298157682,"results":"65","hashOfConfig":"36"},{"size":30952,"mtime":1677298157568,"results":"66","hashOfConfig":"36"},{"size":2135,"mtime":1677298158492,"results":"67","hashOfConfig":"36"},{"size":871,"mtime":1677298158308,"results":"68","hashOfConfig":"36"},{"size":731,"mtime":1677298158482,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6dja0o",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":332,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\index.jsx",["195","196","197","198","199","200","201","202","203","204","205","206","207"],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\App.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\WelcomeLoader.jsx",[],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\livetime.jsx",[],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\Timer.jsx",[],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\SearchField.jsx",["269","270"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport '../../css/dashboard.css'\r\nimport { AddAppointment } from '../Today/AddAppointment'\r\nimport { URL } from '../../index'\r\n\r\nconst SearchField = (props) => {\r\n    const url = useContext(URL)\r\n    const [searchload, setsearchload] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [patientname, setpatientname] = useState()\r\n    \r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    async function searchpatient() {\r\n        setsearchload(true)\r\n        setpatientid();\r\n        setpatientname();\r\n        await axios.get(`${url}/patient/list?search=${props.searchtext}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (props.searchtext && props.searchtext.length > 1) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        searchpatient()\r\n    }, [props.searchtext])\r\n\r\n    const get_value = (e) => {\r\n        setpatientid(e.target.name);\r\n        setpatientname(e.target.value);\r\n        toggleappointmentform()\r\n    }\r\n    const toggleappointmentform = () => {\r\n      if (appointmentform === \"none\") {\r\n        setappointmentform(\"block\");\r\n      } else if (appointmentform === \"block\") {\r\n        setappointmentform(\"none\");\r\n      }\r\n    };\r\n    return (\r\n        <>\r\n        <div className={`col-12 d-${displaysearchlist} searchlist bg-pearl rounded-2 p-0 m-0`} style={{ minHeight: '4rem' }}>\r\n            {\r\n                searchload ? (\r\n                    <div className=\"row p-0 m-0 text-charcoal75 fs-6 rounded-2\" style={{width:'50vh'}}>Loading... </div>\r\n                ) : (\r\n                    searchlist.length == 0 ? (\r\n                        <div className=\"text-danger btn fs-6 p-0 m-0\" style={{width:'50vh'}}>Patient not found. Add as new to book appointments</div>\r\n                    ) : (\r\n                        searchlist.map((data) => (\r\n                            <div className='row p-0 m-0 bg-pearl p-1 border-top rounded-bottom' style={{width:'50vh'}}>\r\n                                <div className=\"col-9 col-xl-9 col-lg-9 p-0 m-0\">\r\n                                    <button className=' p-0 m-0 border-0 text-charcoal bg-pearl text-start' >{data.full_name} {data.phone_number}</button>\r\n                                </div>\r\n                                <div className=\"col-auto col-xl-auto col-lg-auto p-0 m-0 align-self-center justify-content-center\">\r\n                                    <button className=\"button button-burntumber border-0 p-0 m-0 px-1\" name={data.id} value={data.full_name} onClick={(e) => get_value(e)} style={{fontSize:'0.8rem' }}>+Appointment</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )))\r\n\r\n                )\r\n\r\n            }\r\n        </div>\r\n        <div className={`rounded-4 bg-seashell end-0 appointmentinfosection d-${appointmentform} border-start border-top border-2 position-absolute`} style={{width:'30rem',top:'-2rem'}} >\r\n        <AddAppointment fetchapi={props.fetchapi} toggleappointmentform={toggleappointmentform} patientidfromsearch={patientid} patientnamefromsearch={patientname}/>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { SearchField }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AddAppointment.jsx",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst AddAppointment = (props) => {\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    let adminid = localStorage.getItem('id')\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n    \r\n    function setfromsearch(){\r\n        setpatientid(props.patientidfromsearch)\r\n        setsearchinput(props.patientnamefromsearch)\r\n    }\r\n    useEffect(()=>{\r\n        setfromsearch()\r\n    },[props.patientidfromsearch])\r\n    console.log(patientid,searchinput)\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const searchpatient = (e) => {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data)\r\n                    setsearchload(false)\r\n        })\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    const get_value = (e) => {\r\n        setsearchinput(e.target.value)\r\n        setpatientid(e.target.name)\r\n        setdisplaysearchlist('none');\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(e.target.value)\r\n    }\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n    function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n    function getTimefrom(e) {\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots && ApikeyDocTimeslots.length != 0) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n        } else {\r\n            Notiflix.Notify.info('Choose Doctor First')\r\n        }\r\n    }\r\n\r\n    function resetform(e) {\r\n        setsearchinput()\r\n        setpatientid()\r\n        setdoctorid()\r\n        setclinicid()\r\n        setischecked()\r\n    }\r\n\r\n    function BookAppointment(e) {\r\n        if (patientid && doctorid && clinicid && time && adminid) {\r\n            setload(true)\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: time,\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                Notiflix.Notify.success(response.data.message);\r\n                resetform()\r\n                props.toggleappointmentform()\r\n                props.fetchapi()\r\n                getTimeslots()\r\n                getTimefrom()\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n        }\r\n\r\n    }\r\n    const [timeindex, settimeindex] = useState()\r\n\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Appointment`,\r\n            `Do you surely want to Add Appointment for ${searchinput}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                BookAppointment()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2\">New Appointment</h5>\r\n            {\r\n                props.closeAddAppointmentform ? (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n                ) : (\r\n                    <button type=\"button\" disabled={load == true ? true : false} className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.toggleappointmentform(); }} ></button>\r\n                )\r\n            }\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <label className=\"m-0 mb-2\">Search Using Phone or Name</label>\r\n                <input type=\"text\" className=\"form-control selectpatient col-10 position-relative\" value={searchinput ? searchinput : ''} onFocus={() => setsearchload(true)} onChange={searchpatient} onBlur={searchpatient} />\r\n                <div className={`col-8 d-${displaysearchlist} searchinput`}>\r\n                    {\r\n                        searchload == true || searchinput == undefined ? (\r\n                            <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\">Loading... </p>\r\n                        ) : (\r\n                            searchlist.length == 0 ? (\r\n                                <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found add as new user to book appointements</p>\r\n                            ) : (\r\n                                searchlist.map((data) => (\r\n                                    <button className='col-12 d-block p-0 m-0 ms-1 border-0 bg-pearl text-charcoal text-start border border-1' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name}  {data.phone_number}</button>\r\n                                )))\r\n\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"col-12 p-0\">\r\n                    <a href=\"/#\" className=\"btn text-decoration-none btn-sm done\" onClick={props.formshift}> Add User </a>\r\n                </div>\r\n                <hr />\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                                <label className={`d-${clinicID==data.id?'block':'none'}`}><input type=\"checkbox\" className={`radio form me-1 `} key={i} checked={clinicID==data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n                    \r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor\" value={doctorid ? doctorid : ''} onChange={getTimeslots}>\r\n                                <option value=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    Doclist.map((data, i) => (\r\n                                        <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"\">Select Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom && doctorid ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, i) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button button-${props.timeindex == i ? 'pearl' : timeindex == i ? 'pearl' : 'lightgreen'} m-1`} value={data[0]} key={i} onClick={(e) => { gettime_value(e); settimeindex(i); }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className='btn button-burntumber m-1' key={i} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn button button-burntumber px-5\" onClick={confirmmessage}> Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport { AddAppointment }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AddPatient.jsx",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\n//Context APis\r\nimport { URL } from '../../index'\r\n//Google maps\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Css\r\nimport '../../css/bootstrap.css'\r\n\r\nconst AddPatient = (props) => {\r\n    const url = useContext(URL);\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState('1')\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const [load, setload] = useState()\r\n\r\n    const d = () => {\r\n        if (main == 1) {\r\n            console.log(main)\r\n            setdisplay('flex')\r\n        }\r\n        if (main == 2) {\r\n            console.log(main)\r\n            setdisplay('none')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    const resetform = async () => {\r\n        setfullname()\r\n        setphonenumber()\r\n        setDOB()\r\n        setemail()\r\n        setaddress()\r\n        setplace()\r\n        setpincode()\r\n        setcountrycode()\r\n    }\r\n\r\n\r\n    let adminid = localStorage.getItem('id')\r\n    async function NewPatient(e) {\r\n        if (fullname && countrycode && phonenumber && DOB && gender && email && address && pincode && place && main && adminid) {\r\n            setload(true)\r\n            await axios.post(`${url}/add/patient`, {\r\n                full_name: fullname,\r\n                phone_country_code: countrycode,\r\n                phone_number: phonenumber,\r\n                dob: DOB,\r\n                gender: gender,\r\n                email: email,\r\n                address: address,\r\n                pin_code: pincode,\r\n                location: place,\r\n                is_main: main,\r\n                latitude: lat,\r\n                longitude: lng,\r\n                relation: main == 2 ? relation : '',\r\n                link_id: main == 2 ? linkid : '',\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                setload(false)\r\n                console.log(response)\r\n                Notiflix.Notify.success(response.data.message);\r\n                props.togglepatientform()\r\n                resetform(e)\r\n\r\n            })\r\n        } else {\r\n            setload(false)\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n\r\n        }\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(() => {\r\n        data === \"\" ? setData(\"\") : setData(data);\r\n        setplace(data.label)\r\n    }, [data]);\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to add ${fullname} as a New Patient`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NewPatient()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2 position-relative\"> Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.togglepatientform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countrycode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countrycode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countrycode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countrycode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countrycode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countrycode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countrycode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countrycode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countrycode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countrycode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countrycode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countrycode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countrycode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countrycode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countrycode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countrycode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countrycode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countrycode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countrycode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countrycode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countrycode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countrycode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countrycode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countrycode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countrycode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countrycode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countrycode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countrycode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countrycode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countrycode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countrycode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countrycode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countrycode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countrycode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countrycode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countrycode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countrycode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countrycode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countrycode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countrycode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countrycode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countrycode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countrycode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countrycode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countrycode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countrycode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countrycode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countrycode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countrycode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countrycode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countrycode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countrycode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countrycode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countrycode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countrycode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countrycode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countrycode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countrycode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countrycode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countrycode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countrycode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countrycode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countrycode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countrycode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countrycode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countrycode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countrycode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countrycode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countrycode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countrycode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countrycode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countrycode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countrycode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countrycode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countrycode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countrycode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countrycode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countrycode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countrycode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countrycode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countrycode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countrycode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countrycode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countrycode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countrycode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countrycode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countrycode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countrycode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countrycode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countrycode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countrycode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countrycode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countrycode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countrycode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countrycode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countrycode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countrycode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countrycode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countrycode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countrycode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countrycode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countrycode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countrycode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countrycode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countrycode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countrycode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countrycode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countrycode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countrycode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countrycode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countrycode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countrycode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countrycode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countrycode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countrycode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countrycode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countrycode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countrycode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countrycode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countrycode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countrycode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countrycode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countrycode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countrycode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countrycode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countrycode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countrycode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countrycode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countrycode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countrycode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countrycode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countrycode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countrycode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countrycode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countrycode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countrycode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countrycode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countrycode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countrycode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countrycode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countrycode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countrycode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countrycode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countrycode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countrycode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countrycode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countrycode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countrycode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countrycode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countrycode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countrycode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countrycode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countrycode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countrycode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countrycode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countrycode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countrycode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countrycode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countrycode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countrycode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countrycode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countrycode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countrycode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countrycode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countrycode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countrycode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countrycode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countrycode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countrycode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countrycode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countrycode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countrycode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countrycode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countrycode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countrycode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countrycode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countrycode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countrycode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countrycode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countrycode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countrycode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countrycode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countrycode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countrycode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countrycode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countrycode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countrycode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countrycode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countrycode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countrycode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countrycode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countrycode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countrycode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countrycode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countrycode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countrycode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countrycode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countrycode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countrycode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countrycode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countrycode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countrycode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countrycode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countrycode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countrycode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countrycode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countrycode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countrycode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countrycode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countrycode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countrycode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countrycode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countrycode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countrycode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <input type=\"number\" className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { setphonenumber(e.target.value) }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Location\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className=\"col-6 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                console.log(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' onChange={(e) => { setmain(e.target.value); d(); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`conatiner m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option disabled >Select Relation</option>\r\n                                <option>Son</option>\r\n                                <option>Daughter</option>\r\n                                <option>Father</option>\r\n                                <option>Mother</option>\r\n                                <option>Husband</option>\r\n                                <option>Wife</option>\r\n                                <option>Brother</option>\r\n                                <option>Sister</option>\r\n                                <option>Grand Father</option>\r\n                                <option>Grand Mother</option>\r\n                                <option>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button type=\"button\" className=\"btn done px-5\" onClick={confirmmessage} > Done </button>\r\n                            </div>\r\n                            <div className=\"col-6 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { AddPatient }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AddDoctorSlot.jsx",["326","327","328","329","330","331","332"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs,Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2'>\r\n      <h5 className=\"text-center mt-2\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>{data[0]}.{data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className=\"radio form me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"btn done px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Doctor.jsx",["333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\pharmacy\\apiarrays.jsx",["361","362","363","364","365","366"],[],"import axios from 'axios';\r\nimport React ,{useState,useEffect,useContext} from 'react';\r\nimport { URL } from '../../index';\r\n\r\nimport '../../css/pharmacy.css';\r\nimport Notiflix from 'notiflix';\r\n\r\nfunction Purchaseorderarray(props){\r\n    let purchaseorderarr =[{\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightyellow rounded-5\">Consumables</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightyellow rounded-5\">Pending</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightred rounded-5\">Cancelled</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-burntumber rounded-5\">Rejected</button>\r\n    },\r\n    {\r\n        c1:'PO-14',\r\n        c2:<button className=\"button button-lightblue rounded-5\">Pharmacy</button>,\r\n        c3:'Lucky Distributor',\r\n        c4:'10/10/2022',\r\n        c5:'Kabir S',\r\n        c6:'30',\r\n        c7:'10,000',\r\n        c8:<button className=\"button button-lightgreen rounded-5\">Approved</button>\r\n    }\r\n];\r\n    return(\r\n        <>{\r\n            purchaseorderarr.map((item,_key) => {\r\n            return<tr key={_key}>\r\n            <td>{item.c1}</td>\r\n            <td>{item.c2}</td>\r\n            <td>{item.c3}</td>\r\n            <td>{item.c4}</td>\r\n            <td>{item.c5}</td>\r\n            <td>{item.c6}</td>\r\n            <td>{item.c7}</td>  \r\n            <td>{item.c8}</td>\r\n            <td><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/enter.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button>\r\n              <button className='btn'onClick={props.itemdetails}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n            <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/delete.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n          </tr>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Pharmacystocktable(){\r\n  let  pharmacystockarr = [{\r\n        c1:'01',\r\n        c2:'Dolo 650',\r\n        c3:'04',\r\n        c4:'600',\r\n        c5:'Lucky Distributors'\r\n    }]\r\n    return(\r\n        <>{\r\n            pharmacystockarr.map((item,_key) => {\r\n            return<tr key={_key}>\r\n            <td>{item.c1}</td>\r\n            <td>{item.c2}</td>\r\n            <td>{item.c3}</td>\r\n            <td>{item.c4}</td>\r\n            <td>{item.c5}</td>\r\n            <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></td>\r\n            <td><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n          </tr>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction POitemdetailsarray(){\r\n    let POitemdetailsarr = [\r\n        {\r\n        c1:'01',\r\n        c2:'Dolo 650',\r\n        c3:'10',\r\n        c4:'600'\r\n        },\r\n]\r\n    return (\r\n        <>\r\n\r\n<table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n     \r\n            <th>No.</th>\r\n            <th>Item Name</th>\r\n            <th>Total Qty</th>\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            POitemdetailsarr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                </tr>\r\n            })\r\n        }\r\n        </tbody>\r\n    </table>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport{Purchaseorderarray};\r\nexport {Pharmacystocktable};\r\nexport{POitemdetailsarray};\r\n\r\n\r\n\r\n\r\nfunction Stockvaccinearray(){\r\n        let Stockvaccinearr = [{\r\n            id: 1,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 2,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 3,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 4,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 5,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        {\r\n            id: 6,\r\n            c1: \"M-12\",\r\n            c2: \"Medicine Name 1\",\r\n            c3: 'LCY-12342',\r\n            c4: '10/10/2022',\r\n            c5: '230',\r\n            c6: '200',\r\n            c7: '12',\r\n            c8:'20',\r\n            c9:<img src='' alt='...'/>\r\n        },\r\n        ];\r\n        return (\r\n            <>{\r\n                Stockvaccinearr.map((item, _key) => {\r\n                    return <tr key={item.id}>\r\n                        <td>{item.c1}</td>\r\n                        <td>{item.c2}</td>\r\n                        <td>{item.c3}</td>\r\n                        <td>{item.c4}</td>\r\n                        <td>{item.c5}</td>\r\n                        <td>{item.c6}</td>\r\n                        <td>{item.c7}</td>\r\n                        <td>{item.c8}</td>\r\n                        <td></td>\r\n                        <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n        \r\n                    </tr>\r\n                })\r\n            }\r\n            </>\r\n    )\r\n}\r\n\r\nfunction Stockmedicinearray(){\r\n    let Stockvaccinearr = [{\r\n        id: 1,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 2,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 3,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 4,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 5,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    {\r\n        id: 6,\r\n        c1: \"M-12\",\r\n        c2: \"Medicine Name 1\",\r\n        c3: 'LCY-12342',\r\n        c4: '10/10/2022',\r\n        c5: '230',\r\n        c6: '200',\r\n        c7: '12',\r\n        c8:'20',\r\n        c9:<img src='' alt='...'/>\r\n    },\r\n    ];\r\n    return (\r\n        <>{\r\n            Stockvaccinearr.map((item, _key) => {\r\n                return <tr key={item.id}>\r\n                    <td>{item.c1}</td>\r\n                    <td>{item.c2}</td>\r\n                    <td>{item.c3}</td>\r\n                    <td>{item.c4}</td>\r\n                    <td>{item.c5}</td>\r\n                    <td>{item.c6}</td>\r\n                    <td>{item.c7}</td>\r\n                    <td>{item.c8}</td>\r\n                    <td></td>\r\n                    <td><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /><img src={process.env.PUBLIC_URL + \"/images/medicine.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></td>\r\n    \r\n                </tr>\r\n            })\r\n        }\r\n        </>\r\n)\r\n}\r\nexport{Stockvaccinearray};\r\nexport{Stockmedicinearray};\r\n","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\pharmacy\\pharmacy.jsx",["367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],[],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index';\r\nimport { ExportPurchaseEntry, ExportSaleEntry, ExportSaleReturn } from '../pharmacy/Exports'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport { customnotify } from '../features/notiflix/customnotify';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/pharmacy.css';\r\nimport '../../css/dashboard.css'\r\nimport { Purchaseorderarray, Pharmacystocktable, Stockvaccinearray, Stockmedicinearray, POitemdetailsarray, PEitemdetailsarray } from './apiarrays';\r\n\r\n//-------------------------------------------------Sales------------------------------------------------------------------------------------------\r\nfunction Salesection(props) {\r\n  const first = [\"Sale Entry\", \"Sale Returns\"];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return <Saleentrysection function={props.func} function2={props.function} />\r\n    }\r\n    if (_selected === 1) {\r\n      return <SaleReturns />\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <section className='purchasesection pt-1'>\r\n        <div className=\"container-fluid p-0 m-0\">\r\n          <div className=\"row gx-3 p-0 m-0\">\r\n            <div className=\"col-10  \">\r\n              <div className='row'>\r\n                {\r\n                  first.map((e, i) => {\r\n                    return (\r\n                      <div className=\"col-auto\">\r\n                        <button className={`btn btn-sm px-4 rounded-5 text-${i === second ? \"light\" : \"dark\"} bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(i)} >{e}</button>\r\n                      </div>\r\n                    )\r\n                  }\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid p-0 m-0 pt-3'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedScreen(second)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Saleentrysection(props) {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const adminid = localStorage.getItem('id')\r\n  const url = useContext(URL)\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [seidw, setseidw] = useState(\"none\");\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [saleentryarr, setsaleentryarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [paymentsapage, setpaymentsapage] = useState('none')\r\n  const [tabindex, settabindex] = useState()\r\n  console.log(saleentryarr)\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n    }\r\n  }\r\n  const toggle_seidw = () => {\r\n    if (seidw === \"none\") {\r\n      setseidw(\"block\");\r\n    }\r\n    if (seidw === \"block\") {\r\n      setseidw(\"none\");\r\n      setindex()\r\n    }\r\n  };\r\n  const toggle_payments = () => {\r\n    if (paymentsapage === 'none') {\r\n      setpaymentsapage('block')\r\n    }\r\n    if (paymentsapage === 'block') {\r\n      setpaymentsapage('none')\r\n      settabindex()\r\n    }\r\n\r\n  }\r\n  function GETSalesList(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/sale/entry?clinic_id=${ClinicID}&limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        console.log(response)\r\n        setsaleentryarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  async function getnextpages(e) {\r\n    GETSalesList(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETSalesList(e.target.value - 1)\r\n  }\r\n  useEffect(() => {\r\n    GETSalesList()\r\n  }, [channel, fromdate, todate])\r\n\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  let array = [[1, 'Confirmed', 'lightgreen'], [2, 'Payment done', 'success'], [3, 'Completed', 'lightyellow'], [4, 'Cancelled', 'danger']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n\r\n\r\n  //Status\r\n  const UpdateStatus = async (e, id) => {\r\n    console.log(e.target.value, id)\r\n    try {\r\n      await axios.post(`${url}/sale/entry/change/status`, {\r\n        sale_entry_id: id,\r\n        status: e.target.value,\r\n        admin_id: adminid,\r\n      }).then((response) => {\r\n        console.log(response)\r\n        Notiflix.Notify.success(response.data.message)\r\n        GETSalesList()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nsef}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Sale</button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between\">\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center text-center text-charcoal fw-bolder fs-6\">\r\n          Sale Entry\r\n        </div>\r\n        <div className=\"col-6 col-xl-7 col-lg-7 col-md-7 align-self-center m-1 \">\r\n          <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n            <div className=\"col-4 bg-pearl\">\r\n              <select className='p-0 m-0 bg-pearl border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n              <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 col-md-2 col-lg-2 align-self-center\">\r\n          <ExportSaleEntry saleentryarr={saleentryarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div className='scroll scroll-y p-0 m-0 mt-1' style={{ minHeight: '40vh', height: '58vh', maxHeight: '70vh' }}>\r\n        <table className=\"table text-center table-responsive p-0 m-0\">\r\n          <thead className=' p-0 m-0'>\r\n            <tr className=' p-0 m-0'>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Bill ID</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Patient Name</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Bill Date</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Bill Total</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' colspan='3'>Appointment Details</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Status</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>Actions</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' rowspan='2'>more</th>\r\n            </tr>\r\n            <tr className='p-0 m-0'>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' scope='col'>Appointment Date</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' scope='col'>Doctor Name</th>\r\n              <th className='text-charcoal75 fw-bolder p-0 m-0 px-1' scope='col'>Invoice No.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            Loading ? (\r\n              <body className=' text-center' style={{ minHeight: '55vh', height: '55vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n\r\n              </body>\r\n\r\n            ) : (\r\n              saleentryarr && saleentryarr.length != 0 ? (\r\n                <tbody>\r\n                  {\r\n                    saleentryarr.map((item, i) => (\r\n                      <tr className={` bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`} key={i}>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.id && item.id !== null ? \"P-\" + item.id : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.patient && item.patient && item.patient.full_name != null ? item.patient.full_name : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.bill_date && item.bill_date ? reversefunction(item.bill_date) : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.grand_total && item.grand_total ? \"Rs. \" + item.grand_total : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.appointment_date && item.appointment.appointment_date != null ? reversefunction(item.appointment.appointment_date) : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.doctor && item.appointment.doctor.doctor_name != null ? item.appointment.doctor.doctor_name : ''}</td>\r\n                        <td className='text-charcoal fw-bold p-0 m-0 px-1'>{item.appointment && item.appointment != null && item.appointment.bill_id && item.appointment.bill_id != null ? item.appointment.bill_id : ''}</td>\r\n                        <td className=\"text-charcoal fw-bold p-0 m-0 px-1\">\r\n                          <select disabled={item.sale_entry_status == 4 ? true : false} className={` fw-bolder border-0 bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} text-center  text-${status_color(item.sale_entry_status)}`} name={item.id} onChange={(e) => { UpdateStatus(e, item.id) }} style={{ appearance: 'none' }}>\r\n                            <option className=\"button\" selected disabled>{status(item.sale_entry_status)}</option>\r\n                            <option key={0} className=\"text-lightred\" value='1'>Confirmed</option>\r\n                            <option key={1} className=\"text-lightblue\" value='2'>Payment Done</option>\r\n                            <option key={2} className=\"text-lightred\" value='3'>Completed</option>\r\n                            <option key={3} className=\"text-pearl\" value='4'>Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td className={`text-charcoal fw-bold p-0 m-0 px-1 `}>\r\n                          <button className={`btn bg-${tabindex == i ? 'lightred' : ''}`} onClick={() => { settabindex(i); toggle_payments() }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/rupee.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" />\r\n                          </button>\r\n                          <button className=\"btn\" onClick={() => { setindex(i); toggle_seidw() }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} />\r\n                          </button> </td>\r\n\r\n                        <td className={`text-charcoal fw-bold p-0 m-0 px-1 `}>\r\n                          <button className=\"btn position-relative cursor-pointer more p-0 m-0\">\r\n                            <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                          </button></td>\r\n\r\n                        <td className={`position-absolute mt-1 d-${i == index ? seidw : 'none'} start-0 end-0 border border-1 bg-seashell p-0 m-0`} style={{ zIndex: '2', top: '-7.5rem', 'height': '90vh' }} >\r\n                          {\r\n                            i == index ? (\r\n                              <SEitemdetailssection saleentryarr={saleentryarr[i]} itembillid={\"P-\" + item.bill_id} toggle_seidw={toggle_seidw} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n\r\n                        <td className={`col-lg-8 col-xl-6 col-md-8 col-sm-10 start-0 end-0 top-0 mx-auto shadow rounded-4 position-absolute bg-pearl d-${tabindex == i ? paymentsapage : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                          {\r\n                            i == tabindex ? (\r\n                              <SaleEntrypayments GETSalesList={GETSalesList} saleentryarr={saleentryarr[i]} toggle_payments={toggle_payments} itembillid={\"P-\" + item.bill_id} />\r\n                            ) : (<></>)\r\n                          }\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              ) : (\r\n                <body className='text-center p-0 m-0' style={{ minHeight: '55vh', maxHeight: '55vh' }}>\r\n                  <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                    <strong className='text-charcoal fw-bolder text-center'>No Sale Entries</strong>\r\n                  </div>\r\n                </body>\r\n              )\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid my-1 p-0 m-0\">\r\n        <div className=\"d-flex p-0 m-0 justify-content-center text-center\">\r\n\r\n          <button className=\"btn  border-charcoal p-0 m-0 px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-sm-8 col-md-8 p-0 m-0\">\r\n            {\r\n              pages ? (\r\n                pages.map((page, i) => (\r\n                  <button className={`button rounded-3 ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}   shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { GETSalesList(i) }} key={i}>{page}</button>\r\n                ))\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn p-0 m-0 px-1 border-charcoal ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div>\r\n      </div>\r\n      <section className={`newsaleentryform p-0 m-0 position-absolute d-${nsef} border border-1 mx-auto start-0 end-0 bg-seashell`} style={{ height: '90vh' }}>\r\n        <SaleEntryForm toggle_nsef={toggle_nsef} GETSalesList={GETSalesList} />\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction SaleEntrypayments(props) {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const [paymentmethods, setpaymentmethods] = useState()\r\n  const [previouspayments, setpreviouspayments] = useState([])\r\n  const [previoustotal, setprevioustotal] = useState(0)\r\n  const [loading, setloading] = useState()\r\n  const paymentmethoddetails = {\r\n    paymentmethod: '',\r\n    amount: 0\r\n  }\r\n  async function AddPaymentMethods() {\r\n    let Payments = []\r\n    let amounts = []\r\n    let allamounts = []\r\n    Payments.push(Object.keys(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    amounts.push(Object.values(JSON.parse(props.saleentryarr.payment_method_details)))\r\n    let paymentobj = []\r\n    let p = {\r\n      paymentmethod: '',\r\n      amount: 0\r\n    }\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n      }\r\n      setpreviouspayments(allamounts)\r\n    }\r\n\r\n    paymentmethods.push(paymentobj)\r\n  }\r\n  useEffect(() => {\r\n    AddPaymentMethods()\r\n  }, [])\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i)\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments of  ${props.itembillid}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveSaleEntryCharges()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  async function SaveSaleEntryCharges() {\r\n    let PaymentMethod = []\r\n    let PaymentMethodDetails = []\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      PaymentMethod.push(paymentmethods[i].amount)\r\n      PaymentMethodDetails.push(paymentmethods[i].paymentmethod)\r\n    }\r\n    let Data = {\r\n      sale_entry_id: props.saleentryarr.id,\r\n      g_total_main: props.saleentryarr.grand_total,\r\n      payment_method: PaymentMethodDetails,\r\n      payment_method_main: PaymentMethodDetails,\r\n      payment_method_details: PaymentMethod,\r\n      admin_id: adminid\r\n    }\r\n    try {\r\n      setloading(true)\r\n      await axios.post(`${url}/sale/entry/save/charges`, Data).then((response) => {\r\n        props.GETSalesList()\r\n        setloading(false)\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } catch (e) {\r\n      setloading(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  const CalPrevTotal = async () => {\r\n    let total = 0\r\n    previouspayments.map((data) => (\r\n      total += Number(data.amount)\r\n    ))\r\n    console.log(total)\r\n    setprevioustotal(total)\r\n  }\r\n  useEffect(() => {\r\n    CalPrevTotal()\r\n  }, [previouspayments])\r\n  console.log(props.saleentryarr, paymentmethods, previoustotal)\r\n\r\n function AddMethods(){\r\n  if(paymentmethods && paymentmethods.length>0){\r\n    setpaymentmethods(prevState => [...prevState, paymentmethoddetails]) \r\n  }else{\r\n    setpaymentmethods([paymentmethoddetails])\r\n  }\r\n  \r\n  }\r\n  return (\r\n    <div className='p-0 m-0'>\r\n      <h6 className='text-center mt-2 fw-bold'>{props.itembillid} Payments</h6>\r\n      <hr className='p-0 m-0 mt-1' />\r\n      <button className='btn-close position-absolute top-0 end-0 p-2 m-2 ' onClick={() => props.toggle_payments()}></button>\r\n\r\n      <p className='text-charcoal p-0 m-auto fw-bolder'>Grand Total : <span className='text-burntumber'>Rs {props.saleentryarr.grand_total}</span></p>\r\n      <hr className='p-0 m-0 mb-1' />\r\n      <div className=\"container-fluid text-start position-relative\">\r\n        <div className={`d-${previoustotal == props.saleentryarr.grand_total ? '' : 'none'} bg-lightgreen fw-bold text-center p-2 my-2`}>Payment Done</div>\r\n        <h6 className='text-charcoal fw-bolder text-center'>Payments</h6>\r\n        {\r\n          previouspayments.map((data, i) => (\r\n            <div className=\"row p-0 m-0 justify-content-end g-2\">\r\n              <div className=\"col-4 \">\r\n                <div className=' text-center'>{data.paymentmethod}</div>\r\n              </div>\r\n              <div className=\"col-4 text-center \">\r\n                <div className=' text-center'>{data.amount}</div>\r\n              </div>\r\n              <div className=\"col-2 text-center\">\r\n              </div>\r\n            </div>\r\n          ))\r\n        }\r\n\r\n        {\r\n          paymentmethods ? (\r\n            paymentmethods.map((data, i) => (\r\n              <div className={`row p-0 m-0 d-${previoustotal < props.saleentryarr.grand_total ? '  ' : 'none'} justify-content-end g-2`}>\r\n                <div className=\"col-4 \">\r\n                  <select className='form-control border-success py-1 text-center' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                    <option value='Cash'>Cash</option>\r\n                    <option value='Card'>Card</option>\r\n                    <option value='Paytm'>Paytm</option>\r\n                    <option value='Phonepe'>Phone Pe</option>\r\n                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                    <option value='Razorpay'>Razorpay</option>\r\n                    <option value='Points'>Points</option>\r\n                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-4 text-center \">\r\n                  <input className='form-control border-success py-1 text-center' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (<></>)\r\n\r\n        }\r\n        <div className=\"container-fluid text-center mt-2\">\r\n          <button className='btn py-0' onClick={AddMethods}>\r\n            <img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mt-2'>\r\n        {\r\n          loading ? (\r\n            <div className=\"container-fliud pt-2\">\r\n              <div className=\"d-flex fs-6 align-items-center justify-content-around\">\r\n                <h6 className=\"text-burntumber\">Updating...</h6>\r\n                <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <button className='button button-burntumber m-0 p-0 py-1 px-5' onClick={confirmmessage}>Save</button>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <button className='button button-pearl border-charcoal p-0 m-0 py-1 px-5' onClick={() => { setpaymentmethods(); props.toggle_payments() }}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction SEitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n\r\n\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(cgst) + Number(sgst) + Number(igst)\r\n      return e\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let e = Number(Number(cgst) + Number(sgst) + Number(igst)) * Number(qty)\r\n      return e\r\n    }\r\n  }\r\n  console.log(props.saleentryarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n\r\n      <h5 className='text-center text-charcoal pt-3'>{props.itembillid} Sale Entry Item Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-4\" onClick={props.toggle_seidw} aria-label=\"Close\"></button>\r\n\r\n      <div className=\"col-2 d-none\">\r\n        <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n          <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n          <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n        </div>\r\n      </div>\r\n      <div className='d-flex p-0 m-0 mt-3 mb-1 justify-content-center'>\r\n        {\r\n          Items.map((data, i) => (\r\n            <button className={`button shadow-0 rounded-0 border-charcoal button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className=\"row p-0 m-0 justify-content-between\">\r\n        <div className=\"col-auto ms-2 mb-2 text-burntumber rounded-2 fw-bolder bg-pearl\" >\r\n          <p className='text-charcoal p-0 m-0 ms-1 text-start'>Grand Total</p>\r\n          <hr className='p-0 m-0' />\r\n          <h5 className='text-charcoal p-0 m-0 fw-bold text-start ms-1'>{props.saleentryarr.grand_total ? props.saleentryarr.grand_total : 0}</h5>\r\n        </div>\r\n        <div className=\"col-auto align-self-end justify-content-end me-4\">\r\n          <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '65vh', Height: '65vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Stock ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Medicine Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Quantity</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discount %</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discounted MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Amount in Rs.</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total amount in Rs.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.saleentryarr.sale_medicines && props.saleentryarr.sale_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.saleentryarr.sale_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks && item.medicine_stocks.id !== null ? \"m\" + item.medicine_stocks.id : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty && item.qty != null ? item.qty : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount != null ? item.discount : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks && item.medicine_stocks.total_amount ? item.medicine_stocks.total_amount : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : ''}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-center text-charcoal fw-bold'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '65vh', Height: '65vh', maxHeight: '65vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Stock ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Vaccine Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Quantity</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discount %</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Discounted MRP in Rs.</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total amount in Rs.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.saleentryarr.sale_vaccines !== undefined && props.saleentryarr.sale_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.saleentryarr.sale_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine_stocks && item.vaccine_stocks.id !== null ? \"v\" + item.vaccine_stocks.id : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty && item.qty != null ? item.qty : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount != null ? item.discount : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? Number(item.SGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? Number(item.CGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? Number(item.IGST_rate) : ''}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : ''}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : ''}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className=' text-center fw-bold text-charcoal'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction SaleReturns() {\r\n  const currentDate = useContext(TodayDate)\r\n  const url = useContext(URL)\r\n  const [sridw, setsridw] = useState(\"none\");\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [salereturnarr, setsalereturnarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [tabindex, settabindex] = useState()\r\n  console.log(salereturnarr)\r\n  function GETSaleReturns(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      // /sale/return?from_date=2023-01-01&to_date=2023-01-31&limit=2&offset=0\r\n      axios.get(`${url}/sale/return?limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        console.log(response)\r\n        setsalereturnarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GETSaleReturns()\r\n  }, [channel, fromdate, todate])\r\n\r\n  const toggle_sridw = () => {\r\n    if (sridw === \"none\") {\r\n      setsridw(\"block\");\r\n    }\r\n    if (sridw === \"block\") {\r\n      setsridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  async function getnextpages(e) {\r\n    GETSaleReturns(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETSaleReturns(e.target.value - 1)\r\n  }\r\n  console.log(salereturnarr)\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Return</button>\r\n      <div classsName='p-0 m-0'>\r\n        <div className=\"row p-0 m-0 justify-content-lg-between\">\r\n          <div className=\"col-2 col-md-2 col-lg-2 text-center align-self-center text-charcoal fw-bolder fs-6\">Sale Return </div>\r\n          <div className=\"col-6 col-xl-6 col-lg-7 col-md-7 col-sm-auto align-self-center m-1 justify-content-center \">\r\n            <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n              <div className=\"col-4 d-none\">\r\n                <select className='p-0 m-0 border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-4 col-md-6 col-sm-6 text-burntumber bg-pearl fw-bolder\">\r\n                <input type='date' className='p-0 m-0 border-0 text-burntumber  bg-pearl fw-bolder' placeholder='fromdate' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-4 col-md-6 col-sm-6 text-burntumber bg-pearl fw-bolder\">\r\n                <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder bg-pearl' placeholder='fromdate' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 col-lg-2 col-md-2 align-self-center\">\r\n            excel\r\n            <ExportSaleReturn salereturnarr={salereturnarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n          </div>\r\n        </div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '40vh', height: '59vh', maxHeight: '70vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return No.</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Name</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Sale Entry ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Amount</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Actions</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n\r\n                </body>\r\n\r\n              ) : (\r\n                salereturnarr && salereturnarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      salereturnarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>SR-{item.return_no}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.sale_entry && item.sale_entry.patient && item.sale_entry.patient.full_name != null ? item.sale_entry.patient.full_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.sale_entry && item.sale_entry && item.sale_entry.id != null ? 'P-' + item.sale_entry.id : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.return_date ? reversefunction(item.return_date) : ''}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.grand_total ? item.grand_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>\r\n                            {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                            <button className=\"btn\" onClick={() => { setindex(i); toggle_sridw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? sridw : 'none'} bg-seashell border border-1 start-0 end-0 p-0 m-0`} style={{ top: '-7.5rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <SRitemdetailssection salereturnarr={salereturnarr[i]} toggle_sridw={toggle_sridw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Sale Returns</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mb-1\">\r\n          <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n            <button className=\"btn p-0 m-0 border-charcoal px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n            <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n              {\r\n                pages ? (\r\n                  pages.map((page, i) => (\r\n                    <button className={`button ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'} shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { settabindex(i); GETSaleReturns(i) }} key={i}>{page}</button>\r\n                  ))\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )\r\n\r\n              }\r\n            </div>\r\n            <button className={`btn p-0 m-0 px-1 border-charcoal ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`newreturnentrysection position-absolute start-0 end-0 border border-1 bg-seashell d-${nref}`} style={{ 'height': '90vh' }}  >\r\n        {<NewSaleReturnentryform toggle_nref={toggle_nref} GETSaleReturns={GETSaleReturns} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction SaleEntryForm(props) {\r\n  const cliniclist = useContext(Clinic)\r\n  const url = useContext(URL)\r\n  const Doclist = useContext(DoctorsList)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const medicinesref = useRef(null)\r\n  const medbyidref = useRef(null);\r\n  const patientaddref = useRef(null)\r\n  const stockref = useRef(null)\r\n  const [searchinput, setsearchinput] = useState()\r\n  const [searchlist, setsearchlist] = useState([])\r\n  const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n  const [patientid, setpatientid] = useState()\r\n  const [patientdata, setpatientdata] = useState([])\r\n  const [doctorid, setdoctorid] = useState()\r\n  const [doctorname, setdoctorname] = useState()\r\n  const [clinicid, setclinicid] = useState(clinicID)\r\n  const [ischecked, setischecked] = useState()\r\n  const [Dc, setDc] = useState(0)\r\n  const [AtC, setAtC] = useState(0)\r\n  const [load, setload] = useState()\r\n  const [searchload, setsearchload] = useState(false)\r\n  const [products, setproducts] = useState([])\r\n  const [itemsearch, setitemsearch] = useState([])\r\n  const [itembyid, setitembyid] = useState([''])\r\n  const [loadbyId, setloadbyId] = useState()\r\n  const [itemname, setitemname] = useState()\r\n  const [itemid, setitemid] = useState()\r\n  const [SelectedProducts, setSelectedProducts] = useState([])\r\n  const [Grandtotal, setGrandtotal] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [addressid, setaddressid] = useState()\r\n  const [addressform, setaddressform] = useState('none')\r\n\r\n  const searchpatient = (e) => {\r\n    setsearchload(true)\r\n    setsearchinput(e.target.value)\r\n    axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n      setsearchlist(response.data.data)\r\n      setsearchload(false)\r\n    })\r\n    if (searchinput && searchinput.length > 1) {\r\n      setdisplaysearchlist('block');\r\n    } else {\r\n      setdisplaysearchlist('none');\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  const get_value = (id, name, data) => {\r\n    setsearchinput(name)\r\n    setpatientid(id)\r\n    setpatientdata(data)\r\n    setdisplaysearchlist('none');\r\n  }\r\n  const selectaddress = (data) => {\r\n    if (data) {\r\n      setaddressid(data.id)\r\n      setDc(1)\r\n    } else {\r\n      setaddressid()\r\n      setDc(0)\r\n    }\r\n  }\r\n  const DC = () => {\r\n    if (Dc == 0) {\r\n      setaddressform('block')\r\n    }\r\n    if (Dc == 1) {\r\n      if (addressid) {\r\n        setDc(0)\r\n        setaddressform('none')\r\n      } else {\r\n        setaddressform('block')\r\n      }\r\n    }\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/stock/list?search=${search}`).then((response) => {\r\n        let medicines = []\r\n        let vaccines = []\r\n        let items = []\r\n        medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n        vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n        items = medicines.concat(vaccines)\r\n        items = items.flat()\r\n        console.log(items)\r\n        setitemsearch(items)\r\n        setloadsearch(false)\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n  }\r\n\r\n  const searchmedbyId = async (search) => {\r\n    if (search.length > 0) {\r\n      setloadbyId(true)\r\n      try {\r\n        await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n          setloadbyId(false)\r\n          setitembyid([response.data.data])\r\n        })\r\n      } catch (e) {\r\n        setloadbyId(false)\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    Doclist.map((data) => (\r\n      data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n    ))\r\n  }, [doctorid])\r\n  function CalSellingCost(mrp, disc) {\r\n    let cost = mrp\r\n    if (!disc) {\r\n      cost = Number(mrp)\r\n      return cost\r\n    } else {\r\n      cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n      cost = cost.toFixed(2)\r\n      return cost\r\n    }\r\n  }\r\n  function CalTotalAmount(qty, cst) {\r\n    let cost = cst\r\n    if (!qty) {\r\n      return 0\r\n    } else if (qty == 1) {\r\n      cst = Number(cst)\r\n      return cst\r\n    } else {\r\n      cost = Number(cst) * Number(qty)\r\n      cost = cost.toFixed(2)\r\n      return cost\r\n    }\r\n  }\r\n  function CalGrandttl() {\r\n    let ttl = 0\r\n    SelectedProducts.map((data) => (\r\n      ttl += Number(data.totalamt)\r\n    ))\r\n    setGrandtotal(ttl)\r\n  }\r\n  function CaltotalDiscount(data) {\r\n    let total = 0\r\n    if (data) {\r\n      data.forEach(item => {\r\n        total += Number(item.discount)\r\n      })\r\n      return total\r\n    } else {\r\n      return total\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    CalGrandttl()\r\n  }, [SelectedProducts])\r\n  function AddProducts(data) {\r\n    let T = ''\r\n    if (data.vaccine_brand_id) {\r\n      T = 'v'\r\n    } else {\r\n      T = 'm'\r\n    }\r\n    let ProductDetails = {\r\n      productid: data.id,\r\n      type: data.type ? data.type : T,\r\n      product: data.item_name ? data.item_name : itemname,\r\n      batch: data.batch_no,\r\n      expiry: data.expiry_date,\r\n      quantity: data.current_stock,\r\n      qtytoSale: 1,\r\n      discount: 0,\r\n      cost: data.cost,\r\n      mainmrp: data.mrp,\r\n      disccost: data.mrp,\r\n      gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n      totalamt: data.mrp\r\n\r\n    }\r\n\r\n    if (SelectedProducts && SelectedProducts.length == 0) {\r\n      setSelectedProducts([ProductDetails])\r\n    } else {\r\n      setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n    }\r\n\r\n  }\r\n\r\n  async function DeleteProduct(Batch) {\r\n    let obj = []\r\n    obj.push(SelectedProducts.filter(function (e) {\r\n      return e.batch !== Batch\r\n    }))\r\n    obj = obj.flat()\r\n    setSelectedProducts(obj)\r\n  }\r\n  async function SubmitSaleEntry() {\r\n    let productids = [];\r\n    let proquantity = [];\r\n    let Discount = [];\r\n    let discountonmrp = [];\r\n    let mrp = [];\r\n    let GST = [];\r\n    let Totalamount = []\r\n    for (let i = 0; i < SelectedProducts.length; i++) {\r\n      productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n      proquantity.push(SelectedProducts[i].qtytoSale)\r\n      Discount.push(SelectedProducts[i].discount)\r\n      discountonmrp.push(SelectedProducts[i].disccost)\r\n      mrp.push(SelectedProducts[i].mainmrp)\r\n      GST.push(SelectedProducts[i].gst)\r\n      Totalamount.push(SelectedProducts[i].totalamt)\r\n    }\r\n    let Data = {\r\n      clinic_id: clinicid,\r\n      doctor_id: doctorid,\r\n      doctor_name: doctorname,\r\n      patient_id: patientid,\r\n      pro_id: productids,\r\n      qty: proquantity,\r\n      discount: Discount,\r\n      disc_mrp: discountonmrp,\r\n      main_mrp: mrp,\r\n      gst: GST,\r\n      total_amount: Totalamount,\r\n      grand_total: Grandtotal,\r\n      appointment_id: '',\r\n      add_to_cart: AtC,\r\n      deliver: Dc,\r\n      address_id: addressid,\r\n    }\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/sale/entry/save`, Data).then((response) => {\r\n        setload(false)\r\n        props.GETSalesList()\r\n        props.toggle_nsef()\r\n        Notiflix.Notify.success(response.data.message)\r\n        ClearForm()\r\n      }).catch(function error(e) {\r\n        console.log(e)\r\n        Notiflix.Notify.failure(e.message)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setload(false)\r\n    }\r\n  }\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Sale Entry`,\r\n      `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SubmitSaleEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  function confirmmessage2() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add to Cart`,\r\n      `Do you surely want to add the following Sale entries to the Cart  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        setAtC(1)\r\n      },\r\n      () => {\r\n        setAtC(0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const ClearForm = async () => {\r\n    setSelectedProducts([])\r\n    setaddressid()\r\n    setitemname()\r\n    setdoctorname()\r\n    setdoctorid()\r\n    setpatientid()\r\n    setGrandtotal()\r\n    setAtC()\r\n    setDc(0)\r\n    setsearchinput()\r\n    setpatientdata()\r\n  }\r\n  // console.log(patientid, doctorid, doctorname, Dc, itemname, itemid)\r\n  // console.log(SelectedProducts, Grandtotal)\r\n  // console.log(patientdata)\r\n  let c = 0\r\n  console.log(products, addressid, Dc, SelectedProducts)\r\n  console.log(itembyid)\r\n  console.log(itemsearch)\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0\">\r\n      <div className='position-relative mb-3'>\r\n        <h5 className='text-center text-charcoal pt-2 '>New Sale Entry</h5>\r\n        <button className='btn btn-close position-absolute end-0 top-0 me-2' disabled={load ? true : false} onClick={props.toggle_nsef}></button>\r\n      </div>\r\n      <hr className='p-0 m-0' />\r\n      <div className=\"p-0 m-0 text-center bg-seashell\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={` text-burntumber fw-bolder d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className={`radio form me-1  text-burntumber fw-bolder`} key={i} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n          ))\r\n        }\r\n      </div>\r\n      <hr className='p-0 m-0' />\r\n      <div className='my-2 text-center align-self-center'>\r\n        <div className=\" form-switch justify-content-center position-relative\">\r\n          <label className=\"form-check-label text-charcoal fw-bolder\" for=\"flexSwitchCheckDefault\">Deliver to Customer</label>\r\n          <input className=\"form-check-input ms-2 outline-none text-center\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" checked={Dc == 1 ? true : false} onChange={() => { DC() }} />\r\n          <div className={`d-${addressform} position-absolute start-0 end-0 m-5 mt-0 top-0 bg-pearl shadow rounded-2 `} style={{ zIndex: 2 }} ref={patientaddref}>\r\n            <div className='p-0 m-0 position-relative text-wrap'>\r\n              <button className='btn btn-close position-absolute end-0 p-1 m-1' onClick={() => { addressid ? setaddressform('none') : setaddressform('none') }}></button>\r\n              {\r\n                patientdata && patientdata.address && patientdata.address.length !== 0 ? (\r\n                  <div className=\"row p-0 m-0 gx-2  \">\r\n                    <h6 className='ms-1 text-burntumber fw-bold text-start'>Choose Address for Delivery</h6>\r\n                    {\r\n                      patientdata.address.map((data) => (\r\n                        <div className={`col-12 px-1 m-2 text-start card bg-${addressid == data.id ? 'lightgreen' : 'lightyellow'} text-charcoal fw-bold`} onClick={() => { addressid ? selectaddress() : selectaddress(data) }}>\r\n                          <div>Patient Name:- {data.full_name}</div>\r\n                          <div>Address:-{data.address_line1 && data.address_line1 !== null ? data.address_line1 : ''}</div>\r\n                          <div>{data.address_line2 && data.address_line2 !== null ? data.address_line2 : ''}</div>\r\n                          <div>PinCode:-{data.zip_code && data.zip_code !== null ? data.zip_code : ''}</div>\r\n                        </div>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                ) : (\r\n                  <div className='text-danger fw-bold'>Addresses not found.Update Patient Details to get Address </div>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row p-0 m-0\">\r\n        <div className=\"col-4\">\r\n          <label className=\"m-0\">Search Using Phone or Name</label>\r\n          <input type=\"text\" className=\"form-control bg-seashell selectpatient col-10 position-relative\" placeholder='Search for Patients' value={searchinput ? searchinput : ''} onFocus={() => setsearchload(true)} onChange={searchpatient} />\r\n          <div className={`col-auto d-${displaysearchlist} searchinput position-absolute rounded-2 shadow bg-pearl px-2`} style={{ width: 'max-content', zIndex: '2' }}>\r\n            {\r\n              searchload == true || searchinput == undefined ? (\r\n                <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\">Loading... </p>\r\n              ) : (\r\n                searchlist.length == 0 ? (\r\n                  <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found</p>\r\n                ) : (\r\n                  searchlist.map((data) => (\r\n                    <div className='col-auto p-0 m-0 ms-1 bg-pearl text-charcoal text-start px-1 border-bottom' style={{ width: 'max-content' }} onClick={() => { get_value(data.id, data.full_name, data) }}>{data.full_name} {data.phone_number}</div>\r\n                  )))\r\n\r\n              )\r\n\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Select Doctor</label>\r\n          <div className=\"col-12\">\r\n            <select className=\"col-10 form-control selectdoctor bg-seashell\" placeholder='Select Doctor' value={doctorid ? doctorid : ''} onChange={(e) => { setdoctorid(e.target.value); }} >\r\n              <option className='text-charcoal50'>Select Doctor</option>\r\n              {\r\n                Doclist.map((data, i) => (\r\n                  <option className={`text-charcoal`} key={i} value={data[0]}>{data[0]}.{' '}{'Dr.'}{' '}{data[1]}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Other Doctor</label>\r\n          <div className=\"col-12\">\r\n            <input className='col-10 form-control bg-seashell' placeholder='Other Doctors' />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"container-fluid mt-4 text-center p-0 m-0\">\r\n        <div className=\"col-12 p-0 m-0 justify-content-center\">\r\n          <h6 className='text-charcoal p-0 m-0 fw-bolder text-start ms-1'>Add Products</h6>\r\n          <hr className='p-0 m-0' />\r\n          {/* <div className=\"col-12\">\r\n              <button className='button button-seashell text-burntumber border-burntumber '>Scan to Add Product</button>\r\n            </div>\r\n            <h4 className='my-2'>OR</h4> */}\r\n          <div className=\"row p-0 m-0 my-2 justify-content-center\">\r\n\r\n\r\n            <div className=\"col-4\">\r\n              <input className='form-control bg-seashell' placeholder='Search Product by Name'\r\n                value={itemname ? itemname : ''}\r\n                onChange={(e) => {\r\n                  searchmeds(e.target.value);\r\n                  setitemname(e.target.value);\r\n                  setitemid();\r\n                  setproducts();\r\n                  stockref.current.style.display = 'none'\r\n                }} />\r\n              <div ref={medicinesref} className='position-absolute rounded-2 mt-1' style={{ Width: 'max-content', zIndex: '1' }} >\r\n                {\r\n                  itemsearch ? (\r\n                    loadsearch ? (\r\n                      <div className='rounded-2 p-1 bg-pearl'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      loadsearch == false && itemsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        <div className={`rounded-4 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                          <p className={`text-start p-0 m-0 m-1 fw-bold text-charcoal75 ms-2`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                          {\r\n                            itemsearch.map((data, i) => (\r\n                              <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-0 ps-1 border-bottom text-charcoal `} onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = 'block' }}>{data.display_name ? data.display_name : data.name}</div>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n              <div ref={stockref} className={`position-absolute bg-pearl scroll scroll-y align-self-center rounded-4 border border-1 p-1 d-${products && products.stock_info && products.stock_info.length > 0 ? 'block' : 'none'}`} style={{ marginLeft: '15.7rem', marginTop: '2rem', zIndex: '2', 'width': '13rem', 'height': '10rem' }}>\r\n                <p className={`text-start p-0 m-0 m-1 fw-bold text-charcoal75`} style={{ fontSize: '0.8rem' }}>{products && products.stock_info !== undefined ? products.stock_info.length : ''} Batch Stocks</p>\r\n                {\r\n                  products && products.length == 0 ? (\r\n                    <div className='bg-seashell'>Not Avaliable</div>\r\n                  ) : (\r\n\r\n                    products ? (\r\n\r\n                      products.stock_info.map((data, i) => (\r\n                        <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} border-bottom text-wrap`}\r\n                          onClick={\r\n                            () => {\r\n                              AddProducts(data);\r\n                              setitemname();\r\n                              setitemid();\r\n                              setproducts();\r\n                              setitemsearch()\r\n                            }}>\r\n                          <p className='text-center m-0 p-0 fw-bold'>{itemname}</p>\r\n                          <p className='p-0 m-0 '>BatchNo. - {data.batch_no && data.batch_no !== null ? data.batch_no : ''}</p>\r\n                          <p className='p-0 m-0 '>Stock - {data.current_stock && data.current_stock ? data.current_stock : ''}</p>\r\n                          <p className='p-0 m-0 '>Expiry Date - {data.expiry_date ? reversefunction(data.expiry_date) : ''}</p>\r\n                        </div>\r\n                      ))\r\n\r\n                    ) : (<div>Not available</div>)\r\n\r\n\r\n                  )\r\n\r\n                }\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n            <div className='col-1 text-burntumber fw-bold align-self-center'>\r\n              OR\r\n            </div>\r\n            <div className=\"col-4 \">\r\n              <input className='form-control bg-seashell border border-1 rounded-2' value={itemid ? itemid : ''} placeholder='Search Product by ID' onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value) }} />\r\n              <div ref={medbyidref} className='position-absolute rounded-2 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                {\r\n                  itembyid ? (\r\n                    loadbyId ? (\r\n                      <div className='rounded-2 p-1 bg-pearl'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      itembyid.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        itembyid.map((data, i) => (\r\n                          <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} fs-6 `}\r\n                            onClick={(e) => {\r\n                              setitemid(data.type + data.id);\r\n                              AddProducts(data)\r\n                              medbyidref.current.style.display = 'none';\r\n                            }}>{data.item_name ? data.item_name : ''}</div>\r\n                        ))\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 m-0 p-0\">\r\n          <div className=\"d-flex p-0 m-0 justify-content-between\">\r\n            <h6 className='text-charcoal p-0 m-0 fw-bolder text-start ms-1'>Product Added</h6>\r\n\r\n          </div>\r\n\r\n          <hr className='p-0 m-0' />\r\n          <div className='p-0 m-0 scroll scroll-y' style={{ height: '35vh' }}>\r\n            <table className='table p-0 m-0'>\r\n              <thead className='p-0 m-0'>\r\n                <tr className='p-0 m-0'>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Item ID</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Item Name</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>BatchNo.</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Avl.Stock</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Qty To Sale</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Discount %</th>\r\n                  <th className='p-0 m-0 px-2' colSpan='4' scope='col-group'>Costing</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Total Amount</th>\r\n                  <th className='p-0 m-0 px-2' rowSpan='2'>Delete</th>\r\n                </tr>\r\n                <tr className='p-0 m-0'>\r\n                  <th className='p-0 m-0 px-2' scope='col'>MRP</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>Cost</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>GST Rate</th>\r\n                  <th className='p-0 m-0 px-2' scope='col'>Selling Cost/Unit</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                  <tbody className='p-0 m-0'>\r\n                    {\r\n                      SelectedProducts.map((data) => (\r\n                        <tr className='p-0 m-0 align-middle'>\r\n                          <td>{data.type} {data.productid}</td>\r\n                          <td>{data.product}</td>\r\n                          <td>{data.batch}</td>\r\n                          <td>{reversefunction(data.expiry)}</td>\r\n                          <td>{data.quantity}</td>\r\n\r\n                          <td><input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell'\r\n                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                            onChange={(e) => {\r\n                              e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                              data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost)\r\n                              setSelectedProducts(prevState => [...prevState])\r\n                            }} /> </td>\r\n\r\n                          <td className='text-center p-0 m-0' style={{ Width: '0rem' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell'\r\n                              value={data.discount ? data.discount : ''}\r\n                              onChange={(e) => {\r\n                                data.discount = e.target.value;\r\n                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost)\r\n                                setSelectedProducts(prevState => [...prevState])\r\n                              }} /> </td>\r\n                          <td>{data.mainmrp}</td>\r\n                          <td>{data.cost}</td>\r\n                          <td>{data.gst + '%'}</td>\r\n                          <td>{data.disccost}</td>\r\n                          <td>{data.totalamt}</td>\r\n                          <td><button className='btn p-0 m-0' onClick={() => { DeleteProduct(data.batch) }}><img src={process.env.PUBLIC_URL + 'images/delete.png'} style={{ width: '1.5rem' }} /></button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='p-0 m-0 position-relative'>\r\n                    <tr className='p-0 m-0'>\r\n                      <td className='p-0 m-0 position-absolute text-charcoal fw-bold start-0 end-0'>No Product Added</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-center bg-pearl align-items-center rounded-bottom'>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grandtotal}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{SelectedProducts.length}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={() => { confirmmessage() }}>Save Entry</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' disabled={load ? true : false} onClick={() => { confirmmessage2() }}>Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction NewSaleReturnentryform(props) {\r\n  const url = useContext(URL)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n  const [billname, setbillname] = useState()\r\n  const [billid, setbillid] = useState()\r\n  const [loadbills, setloadbills] = useState()\r\n  const [billsearch, setbillsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState('')\r\n  const [load, setload] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([])\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0\r\n      costing = Number(cost) * Number(qtytotreturn)\r\n      return costing.toFixed(2)\r\n    } else {\r\n      return costing\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.sale_disc_mrp,\r\n      totalcost: data.cost,\r\n      saleqty: data.sale_qty,\r\n      qtytoReturn: data.sale_qty,\r\n    }\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj])\r\n      setitemname()\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n      setitemname()\r\n    }\r\n  }\r\n\r\n\r\n  const searchProduct = async () => {\r\n    setloadbills(true)\r\n    try {\r\n      await axios.get(`${url}/sale/return/item/search/by/id?item=${itemname}&bill_id=${billid}`).then((response) => {\r\n        console.log(response)\r\n        setbillsearch([response.data.data])\r\n\r\n        setloadbills(false)\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n        setloadbills(false)\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n      setloadbills(false)\r\n    }\r\n  }\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = []\r\n    let Totalamount = []\r\n    let quantity = []\r\n\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(MedicineentriesArr[i].Itemid ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}` : '')\r\n      Totalamount.push(MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : '')\r\n      quantity.push(MedicineentriesArr[i].qtytoReturn ? MedicineentriesArr[i].qtytoReturn : '')\r\n    }\r\n\r\n    Totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n\r\n    var Data = {\r\n      bill_id: billid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal\r\n    }\r\n    console.log(Data)\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/sale/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETSaleReturns()\r\n        setMedicineentriesArr()\r\n        setbillid()\r\n        setbillname()\r\n        setload(false)\r\n        props.toggle_nref()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      console.log(e.message)\r\n      setload(false)\r\n    }\r\n\r\n  }\r\n\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Sale ${MedicineentriesArr.length <= 1 ? 'Return ' : 'Returns'} of Bill P-${billid} `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveReturnEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  function Grand() {\r\n    let c = 0\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (\r\n        c += Number(data.totalcost)\r\n      ))\r\n    }\r\n    return c\r\n  }\r\n  console.log(billid, itemname, billsearch)\r\n  return (\r\n    <div className=\"p-0 m-0 \">\r\n      <div className=\"container-fluid p-0 m-0 border border-1 \">\r\n        <h5 className=\"text-center pt-3\" style={{ color: \"var(--charcoal)\" }} >New Sale Return Entry</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 p-2 me-2\" onClick={props.toggle_nref} disabled={load ? true : false} aria-label=\"Close\" ></button>\r\n        <hr />\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-end\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Bill</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder='Bill Id (Does not require initials)' value={billid ? billid : ''} onChange={(e) => { setbillid(e.target.value); setMedicineentriesArr([]) }} />\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className='position-relative'>\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className='form-control bg-seashell' placeholder='Product Id (Require initials)' value={itemname ? itemname : ''}\r\n                  onChange={(e) => {\r\n                    billid ? setitemname(e.target.value) : Notiflix.Notify.failure('Please Add Bill id First')\r\n                  }} />\r\n                <div ref={medicinesref} className='position-absolute rounded-2 bg-pearl col-12' style={{ zIndex: '1' }}>\r\n                  {\r\n                    billsearch ? (\r\n                      loadbills ? (\r\n                        <div className='rounded-2 p-1'>\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"> </span> </div>\r\n                        </div>\r\n                      ) : (\r\n                        billsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                        ) : (\r\n                          billsearch.map((data, i) => (\r\n                            <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'lightyellow'} fs-6 `} name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(data.item_name);\r\n                                InsertMedicines(data);\r\n                                medicinesref.current.style.display = 'none';\r\n                              }}>{data.item_name}</div>\r\n                          ))\r\n                        )\r\n                      )\r\n                    ) : (<div className='bg-seashell'></div>)\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className='p-0 m-0 btn' onClick={searchProduct}>\r\n                <img src={process.env.PUBLIC_URL + 'images/search.png'} style={{ width: '1.8rem' }} /></button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ Height: '65vh', zIndex: '2' }}>\r\n            <p className='text-center fw-bold text-burntumber p-0 m-0  mt-2 mb-1'>Items Selected</p>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead className='text-charcoal75 fw-bold'>\r\n                <tr>\r\n                  <th className='p-0 m-0 px-1'>Item ID</th>\r\n                  <th className='p-0 m-0 px-1'>Item Name</th>\r\n                  <th className='p-0 m-0 px-1'>batch No.</th>\r\n                  <th className='p-0 m-0 px-1'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Qty</th>\r\n                  <th className='p-0 m-0 px-1'>Qty to Return</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Rate/Unit</th>\r\n                  <th className='p-0 m-0 px-1'>Sale Rate</th>\r\n                  <th className='p-0 m-0 px-1'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                MedicineentriesArr ? (\r\n                  <tbody style={{ maxHeight: '65vh', minHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                    {\r\n                      MedicineentriesArr.map((item, _key) => (\r\n                        <tr key={_key} className=''>\r\n                          <td>{item.Type}{item.Itemid}</td>\r\n                          <td>{item.Item}</td>\r\n                          <td>{item.batchno}</td>\r\n                          <td>{reversefunction(item.expirydate)}</td>\r\n                          <td>{item.saleqty}</td>\r\n                          <td className='p-0 m-0' style={{ 'width': '0px', 'height': '0px' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2' value={item.qtytoReturn ? item.qtytoReturn : ''}\r\n                              onChange={(e) => {\r\n                                e.target.value <= item.saleqty ? item.qtytoReturn = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\")\r\n                                item.totalcost = CalculateCost(item.cost, item.saleqty, e.target.value)\r\n                                setMedicineentriesArr(prevState => [...prevState])\r\n                              }} /></td>\r\n                          <td>{item.cost}</td>\r\n                          <td>{item.totalcost}</td>\r\n                          <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr className=\"\"  >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 text-center bg-pearl  border border-1 py-3'>\r\n\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grand()}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{MedicineentriesArr ? MedicineentriesArr.length : 0}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={confirmmessage}>Save Entry</button>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' disabled={load ? true : false} >Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction SRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst, qty) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      let c = Number(cgst) + Number(sgst) + Number(igst)\r\n      return c * Number(qty)\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <div className=\"row p-0 m-0 position-relative\">\r\n          <h5 className='text-center text-charcoal pt-3'>{props.itembillid} Sale Return Item Details</h5>\r\n          <button type=\"button\" className=\"btn-close closebtn m-auto position-absolute end-0 me-4\" onClick={props.toggle_sridw} aria-label=\"Close\"></button>\r\n          <div className=\"col-2 d-none\">\r\n            <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n              <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n              <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n\r\n            <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className=\"row justify-content-end me-5\">\r\n        <div className=\"col-3\"><input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label></div>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '82vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Selling Cost</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Discount%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            {/* <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th> */}\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.salereturnarr.sale_medicines && props.salereturnarr.sale_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.salereturnarr.sale_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks.batch_no && item.medicine_stocks.batch_no != null ? item.medicine_stocks.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine_stocks.expiry_date && item.medicine_stocks.expiry_date != null ? reversefunction(item.medicine_stocks.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.main_mrp ? item.main_mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.disc_mrp ? item.disc_mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? Number(item.SGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? Number(item.CGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? Number(item.IGST) * Number(item.qty) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST, item.qty)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      {/* <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td> */}\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 bg-lightred'>\r\n                  <strong className='fs-5 text-center bg-lightred'>No Medicines Found</strong>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th>\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.salereturnarr.purchase_vaccines && props.salereturnarr.purchase_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.salereturnarr.purchase_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <strong className='fs-6 text-center'>No Vaccines Found</strong>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { Salesection }\r\n\r\n// ---------------------------------------------------------------purchase------------------------------------------------------------------\r\nfunction Purchasesection(props) {\r\n  const first = [\"Purchase Orders\", \"Purchase Entry\", \"Purchase Returns\"];\r\n  const [second, setSecond] = useState(0);\r\n\r\n  const _selectedScreen = (_selected) => {\r\n    if (_selected === 0) {\r\n      return <Purchaseordersection />\r\n    }\r\n    if (_selected === 1) {\r\n      return <Purchaseentrysection function={props.func} function2={props.function} />\r\n    }\r\n    if (_selected === 2) {\r\n      return <PurchaseReturns />\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <section className='purchasesection'>\r\n\r\n        <div className=\"row p-0 m-0 mt-1 gx-3\">\r\n\r\n          <div className='row p-0 m-0'>\r\n            {\r\n              first.map((e, i) => {\r\n                return (\r\n                  <div className=\"col-auto\">\r\n                    <button className={`btn btn-sm px-4 rounded-5 text-${i === second ? \"light\" : \"dark\"} bg-${i === second ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setSecond(i)} >{e}</button>\r\n                  </div>\r\n                )\r\n              }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid pt-4 p-0 m-0'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedScreen(second)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Purchaseentrysection(props) {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [peidw, setpeidw] = useState(\"none\");\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const toggle_peidw = () => {\r\n    if (peidw === \"none\") {\r\n      setpeidw(\"block\");\r\n    }\r\n    if (peidw === \"block\") {\r\n      setpeidw(\"none\");\r\n    }\r\n  };\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [purchaseentryarr, setpurchaseentryarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [npef, setnpef] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [tabindex, settabindex] = useState()\r\n\r\n  function GETPurchaseList(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/purchase/entry?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpurchaseentryarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GETPurchaseList()\r\n  }, [channel, fromdate, todate])\r\n  const toggle_npef = () => {\r\n    if (npef === \"none\") {\r\n      setnpef(\"block\");\r\n\r\n    }\r\n    if (npef === \"block\") {\r\n      setnpef(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function getnextpages(e) {\r\n    GETPurchaseList(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETPurchaseList(e.target.value - 1)\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_npef}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Purchase</button>\r\n      <div className=\"row p-0 m-0 justify-content-lg-between align-items-center\">\r\n        <div className=\"col-3 col-md-2 col-lg-2 align-self-center text-center text-charcoal mb-2 fw-bolder\">Purchase Entry</div>\r\n        <div className=\"col-6 col-xl-6 col-lg-7 col-md-7 align-self-center m-1 \">\r\n          <div className=\"row border-burntumber fw-bolder rounded-2 text-center justify-content-center \">\r\n            <div className=\"col-4\">\r\n              <select className='p-0 m-0 border-0 text-burntumber fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder\">\r\n              <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n            </div>\r\n            <div className=\"col-4 text-burntumber fw-bolder\">\r\n              <input type='date' className='p-0 m-0 border-0 text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2 cool-md-2 col-lg-2 align-self-center\">\r\n          <ExportPurchaseEntry purchaseentryarr={purchaseentryarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '56vh', height: '56vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PE ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PO ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Channel</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Invoice No.</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Bill Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Bill Total</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Vendor</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Actions</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '55vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n\r\n                </body>\r\n\r\n              ) : (\r\n                purchaseentryarr && purchaseentryarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      purchaseentryarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>PE-{item.bill_id}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.purchase_order_id && item.purchase_order_id !== null ? item.purchase_order_id : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.channel && item.channel == 1 ? \"Pharmacy\" : \"Clinic\"}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.invoice_no ? item.invoice_no : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.bill_date && item.bill_date ? reversefunction(item.bill_date) : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.bill_total && item.bill_total ? \"Rs. \" + item.bill_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button><button className=\"btn\" onClick={() => { setindex(i); toggle_peidw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? peidw : 'none'} border border-1 start-0 end-0 bg-seashell p-0 m-0`} style={{ top: '-7.5rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <PEitemdetailssection purchaseentryarr={purchaseentryarr[i]} itembillid={\"PE-\" + item.bill_id} toggle_peidw={toggle_peidw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Purchase Entries</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid mb-1 mt-1\">\r\n          <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n            <button className=\"btn p-0 m-0 me-2 px-1 border-charcoal\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n            <div className=\"col-auto col-xl-auto col-sm-8 col-md-8 p-0 m-0\">\r\n              {\r\n                pages ? (\r\n                  pages.map((page, i) => (\r\n                    <button className={`button ms-2 border-0 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}  shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { settabindex(i); GETPurchaseList(i) }} key={i}>{page}</button>\r\n                  ))\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )\r\n\r\n              }\r\n            </div>\r\n            <button className={`btn p-0 m-0 border-charcoal ms-2 px-1`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`newpurchaseentrysection position-absolute start-0 end-0 bg-seashell border border-1 d-${npef}`} style={{ 'height': '90vh' }}  >\r\n        {<Newpurchaseentryform toggle_npef={toggle_npef} GETPurchaseList={GETPurchaseList} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction PEitemdetailssection(props) {\r\n  console.log(props.purchaseentryarr)\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n\r\n\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0\">\r\n        <h5 className='text-center pt-3 text-charcoal'>{props.itembillid} Purchase Entry Item Details</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2\" onClick={props.toggle_peidw} aria-label=\"Close\"></button>\r\n\r\n        <div className=\"col-2 d-none\">\r\n          <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n            <button className={`button border-charcoal rounded-0 shadow-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\" d-flex justify-content-end me-5\">\r\n        <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchaseentryarr.medicines && props.purchaseentryarr.medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchaseentryarr.medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? item.expiry_date : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className=' text-center fw-bold'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', Height: '70vh', maxHeight: '70vh' }}>\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Print QR</th>\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchaseentryarr.vaccines && props.purchaseentryarr.vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchaseentryarr.vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? item.expiry_date : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'><button className='btn'><img src={process.env.PUBLIC_URL + \"/images/qrcode.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button></td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2 '>\r\n                  <p className='fw-bold text-center'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction Newpurchaseentryform(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem('ClinicId')\r\n  const ClinicList = useContext(Clinic)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n  const [channel, setchannel] = useState()\r\n  const [po, setpo] = useState()\r\n  const [invoice, setinvoice] = useState()\r\n  const [invoicedate, setinvoicedate] = useState()\r\n  const [vendorname, setvendorname] = useState()\r\n  const [vendorid, setvendorid] = useState()\r\n  const [loadvendors, setloadvendors] = useState()\r\n  const [vendorcode, setvendorcode] = useState()\r\n  const [vendorsearch, setvendorsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState()\r\n  const [itemid, setitemid] = useState()\r\n  const [itemtype, setitemtype] = useState()\r\n  const [batchno, setbatchno] = useState()\r\n  const [expdate, setexpdate] = useState()\r\n  const [manufdate, setmanufdate] = useState()\r\n  const [mrp, setmrp] = useState()\r\n  const [rate, setrate] = useState()\r\n  const [qty, setqty] = useState()\r\n  const [freeqty, setfreeqty] = useState()\r\n  const [disc, setdisc] = useState(0)\r\n  const [trddisc, settrddisc] = useState(0)\r\n  const [cgst, setcgst] = useState(0)\r\n  const [cgstprcnt, setcgstprcnt] = useState(0)\r\n  const [sgst, setsgst] = useState(0)\r\n  const [sgstprcnt, setsgstprcnt] = useState(0)\r\n  const [igst, setigst] = useState(0)\r\n  const [igstprcnt, setigstprcnt] = useState(0)\r\n  const [cpu, setcpu] = useState(0)\r\n  const [totalamt, settotalamt] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState()\r\n  const [tableindex, settableindex] = useState()\r\n  const [clinicstatecode, setclinicstatecode] = useState()\r\n  const [load, setload] = useState()\r\n\r\n  async function filterclinic() {\r\n    for (let i = 0; i < ClinicList.length; i++) {\r\n      if (ClinicList[i].id == ClinicId) {\r\n        setclinicstatecode(ClinicList[i].state_code)\r\n      }\r\n    }\r\n  }\r\n  let MedicineentriesObj = {\r\n    type: '',\r\n    Itemid: '',\r\n    Itemname: '',\r\n    batchno: '',\r\n    expirydate: '',\r\n    manufacturingDate: '',\r\n    quantity: '',\r\n    freeQty: '',\r\n    MRP: '',\r\n    Rate: '',\r\n    Discount: '',\r\n    tradeDiscount: '',\r\n    sgst: '',\r\n    sgstpercent: '',\r\n    cgst: '',\r\n    cgstper: '',\r\n    igst: '',\r\n    igstper: '',\r\n    costperunit: '',\r\n    totalamount: ''\r\n  }\r\n  async function InsertMedicines() {\r\n    MedicineentriesObj = {\r\n      type: itemtype,\r\n      Itemid: itemid,\r\n      Itemname: itemname,\r\n      batchno: batchno,\r\n      expirydate: expdate,\r\n      manufacturingDate: manufdate,\r\n      MRP: mrp,\r\n      Rate: rate,\r\n      Qty: qty,\r\n      freeQty: freeqty,\r\n      Discount: disc,\r\n      tradeDiscount: trddisc,\r\n      sgstper: sgstprcnt,\r\n      sgst: sgst,\r\n      cgstper: cgstprcnt,\r\n      cgst: cgst,\r\n      igstper: igstprcnt,\r\n      igst: igst,\r\n      costperunit: cpu,\r\n      totalamount: totalamt\r\n    }\r\n    if (qty) {\r\n      if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n        setMedicineentriesArr([MedicineentriesObj])\r\n      } else {\r\n        setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n      }\r\n    } else {\r\n      Notiflix.Notify.warning(\"please choose quantity\")\r\n    }\r\n\r\n    resetfields()\r\n  }\r\n  const searchmeds = async (search) => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/item/search?search=${search}`).then((response) => {\r\n        let medicines = []\r\n        let vaccines = []\r\n        let items = []\r\n        medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n        vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n        items = medicines.concat(vaccines)\r\n        items = items.flat()\r\n        console.log(items)\r\n        setitemsearch(items)\r\n        setloadsearch(false)\r\n        if (search.length > 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n\r\n  }\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true)\r\n    try {\r\n      await axios.get(`${url}/kyc/list?limit=10&offset=0&search=${search}`).then((response) => {\r\n        setvendorsearch(response.data.data)\r\n        setloadvendors(false)\r\n        if (search.length > 1) {\r\n          vendorsref.current.style.display = 'block';\r\n        } else {\r\n          vendorsref.current.style.display = 'none';\r\n        }\r\n      }).catch(\r\n        function error(e) {\r\n          Notiflix.Notify.warning(e.data.message)\r\n          setloadvendors(false)\r\n        }\r\n      )\r\n    } catch (e) {\r\n      setloadvendors(false)\r\n      Notiflix.Notify.warning(e.data.message)\r\n    }\r\n  }\r\n  const SavePurchase = async () => {\r\n    let MedId = []\r\n    let medname = []\r\n    let Type = []\r\n    let batches = []\r\n    let expirydate = []\r\n    let manufacturingDate = []\r\n    let MRP = []\r\n    let Rate = []\r\n    let Discount = []\r\n    let tradeDiscount = []\r\n    let sgst = []\r\n    let sgstpercent = []\r\n    let cgst = []\r\n    let cgstpercent = []\r\n    let igst = []\r\n    let igstpercent = []\r\n    let costperunit = []\r\n    let totalamount = []\r\n    let quantity = []\r\n    let freequantity = []\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      Type.push(MedicineentriesArr[i].type ? MedicineentriesArr[i].type : '')\r\n      MedId.push(MedicineentriesArr[i].Itemid ? MedicineentriesArr[i].Itemid : '')\r\n      medname.push(MedicineentriesArr[i].Itemname ? MedicineentriesArr[i].Itemname : '')\r\n      batches.push(MedicineentriesArr[i].batchno ? MedicineentriesArr[i].batchno : '')\r\n      expirydate.push(MedicineentriesArr[i].expirydate ? MedicineentriesArr[i].expirydate : '')\r\n      manufacturingDate.push(MedicineentriesArr[i].manufacturingDate ? MedicineentriesArr[i].manufacturingDate : '')\r\n      MRP.push(MedicineentriesArr[i].MRP ? MedicineentriesArr[i].MRP : '')\r\n      Rate.push(MedicineentriesArr[i].Rate ? MedicineentriesArr[i].Rate : '')\r\n      Discount.push(MedicineentriesArr[i].Discount ? MedicineentriesArr[i].Discount : 0)\r\n      tradeDiscount.push(MedicineentriesArr[i].tradeDiscount ? MedicineentriesArr[i].tradeDiscount : 0)\r\n      sgst.push(MedicineentriesArr[i].sgst ? MedicineentriesArr[i].sgst : '')\r\n      sgstpercent.push(MedicineentriesArr[i].sgstper ? Number(MedicineentriesArr[i].sgstper) : 0)\r\n      cgst.push(MedicineentriesArr[i].cgst ? MedicineentriesArr[i].cgst : '')\r\n      cgstpercent.push(MedicineentriesArr[i].cgstper ? Number(MedicineentriesArr[i].cgstper) : 0)\r\n      igst.push(MedicineentriesArr[i].igst ? MedicineentriesArr[i].igst : '')\r\n      igstpercent.push(MedicineentriesArr[i].igstper ? Number(MedicineentriesArr[i].igstper) : 0)\r\n      costperunit.push(MedicineentriesArr[i].costperunit ? MedicineentriesArr[i].costperunit : '')\r\n      totalamount.push(MedicineentriesArr[i].totalamount ? MedicineentriesArr[i].totalamount : '')\r\n      quantity.push(MedicineentriesArr[i].Qty ? MedicineentriesArr[i].Qty : '')\r\n      freequantity.push(MedicineentriesArr[i].freeQty ? MedicineentriesArr[i].freeQty : '')\r\n    }\r\n\r\n    totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n    console.log(grosstotal, Type, MedId, medname, batches, expirydate, manufacturingDate, MRP, Rate, Discount, tradeDiscount, sgst, sgstpercent, cgst, cgstpercent, igst, igstpercent, costperunit, totalamount, quantity, freequantity)\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      purchase_order_id: po,\r\n      invoice_no: invoice,\r\n      bill_date: invoicedate,\r\n      clinic_id: ClinicId,\r\n      channel: channel,\r\n      bill_total: grosstotal,\r\n      id: MedId,\r\n      type: Type,\r\n      qty: quantity,\r\n      free_qty: freequantity,\r\n      mrp: MRP,\r\n      rate: Rate,\r\n      trade_discount: tradeDiscount,\r\n      discount: Discount,\r\n      SGST_rate: sgstpercent,\r\n      SGST: sgst,\r\n      CGST_rate: cgstpercent,\r\n      CGST: cgst,\r\n      IGST_rate: igstpercent,\r\n      IGST: igst,\r\n      cost: costperunit,\r\n      total_amount: totalamount,\r\n      expiry_date: expirydate,\r\n      mfd_date: manufacturingDate,\r\n      batch_no: batches,\r\n    }\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/purchase/entry/save`, Data).then((response) => {\r\n        setload(false)\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETPurchaseList()\r\n        setMedicineentriesArr()\r\n        setchannel()\r\n        setpo()\r\n        setinvoice()\r\n        setinvoicedate()\r\n        setvendorname()\r\n        setvendorid()\r\n        setload(false)\r\n        props.toggle_npef()\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n\r\n  }\r\n  const resetfields = async () => {\r\n    setitemname()\r\n    setitemid()\r\n    setbatchno()\r\n    setexpdate()\r\n    setmanufdate()\r\n    setmrp()\r\n    setrate()\r\n    setqty()\r\n    setfreeqty()\r\n    setdisc()\r\n    settrddisc()\r\n    setcgst()\r\n    setsgst()\r\n    setigst()\r\n    setcgstprcnt()\r\n    setsgstprcnt()\r\n    setigstprcnt()\r\n    setcpu()\r\n    settotalamt()\r\n    setloadsearch()\r\n  }\r\n  function confirmmessage(entries, vendor) {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Entry`,\r\n      `Do you surely want to add total ${entries.length} purchase ${entries.length <= 1 ? 'entry' : 'entries'} of Distributor ${vendor}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SavePurchase()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  function indexing(i) {\r\n    console.log(i)\r\n    if (tableindex == i) {\r\n      settableindex(-1)\r\n      Emptytableindex()\r\n    } else {\r\n      settableindex(i)\r\n      EditTableEntry(i)\r\n    }\r\n  }\r\n  function EditTableEntry(index) {\r\n    setitemid(MedicineentriesArr[index].Itemid)\r\n    setitemname(MedicineentriesArr[index].Itemname)\r\n    setbatchno(MedicineentriesArr[index].batchno)\r\n    setexpdate(MedicineentriesArr[index].expirydate)\r\n    setmanufdate(MedicineentriesArr[index].manufacturingDate)\r\n    setmrp(MedicineentriesArr[index].MRP)\r\n    setrate(MedicineentriesArr[index].Rate)\r\n    setqty(MedicineentriesArr[index].Qty)\r\n    setfreeqty(MedicineentriesArr[index].freeQty)\r\n    setdisc(MedicineentriesArr[index].Discount)\r\n    settrddisc(MedicineentriesArr[index].tradeDiscount)\r\n    setcgst(MedicineentriesArr[index].cgst)\r\n    setcgstprcnt(MedicineentriesArr[index].cgstper)\r\n    setsgst(MedicineentriesArr[index].sgst)\r\n    setsgstprcnt(MedicineentriesArr[index].sgstper)\r\n    setigst(MedicineentriesArr[index].igst)\r\n    setigstprcnt(MedicineentriesArr[index].igstper)\r\n    setcpu(MedicineentriesArr[index].costperunit)\r\n    settotalamt(MedicineentriesArr[index].totalamount)\r\n  }\r\n  function Emptytableindex() {\r\n\r\n    setitemid()\r\n    setitemname()\r\n    setbatchno()\r\n    setexpdate()\r\n    setmanufdate()\r\n    setmrp()\r\n    setrate()\r\n    setqty()\r\n    setfreeqty()\r\n    setdisc()\r\n    settrddisc()\r\n    setcgst()\r\n    setcgstprcnt()\r\n    setsgst()\r\n    setsgstprcnt()\r\n    setigst()\r\n    setigstprcnt()\r\n    setcpu()\r\n    settotalamt()\r\n\r\n  }\r\n  async function UpdateMedicines() {\r\n    for (let j = 0; j < MedicineentriesArr.length; j++) {\r\n      if (tableindex == j) {\r\n        MedicineentriesArr[j] = {\r\n          type: itemtype,\r\n          Itemid: itemid,\r\n          Itemname: itemname,\r\n          batchno: batchno,\r\n          expirydate: expdate,\r\n          manufacturingDate: manufdate,\r\n          MRP: mrp,\r\n          Rate: rate,\r\n          Qty: qty,\r\n          freeQty: freeqty,\r\n          Discount: disc,\r\n          tradeDiscount: trddisc,\r\n          sgstper: sgstprcnt,\r\n          sgst: sgst,\r\n          cgstper: cgstprcnt,\r\n          cgst: cgst,\r\n          igstper: igstprcnt,\r\n          igst: igst,\r\n          costperunit: cpu,\r\n          totalamount: totalamt\r\n        }\r\n        Notiflix.Notify.success(`Item Number ${tableindex + 1} Updated Successfully`)\r\n        Emptytableindex()\r\n        settableindex(-1)\r\n      }\r\n    }\r\n  }\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  let total = 0;\r\n  function Calculate() {\r\n    total = qty ? rate * qty : rate\r\n    // total = freeqty ? total - (rate * freeqty) : total\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    total = sgstprcnt ? Number(total) + Number((((total * sgstprcnt) / 100) + ((total * sgstprcnt) / 100))) : total\r\n    total = igstprcnt ? Number(total) + Number((total * Number(igstprcnt) / 100)) : total\r\n    total = total ? Math.round(parseFloat(total).toFixed(2)) : total\r\n    return total\r\n  }\r\n  let CostPerUnit = 0\r\n  function CalculateCPU() {\r\n    let newqty = Number(qty) + Number(freeqty)\r\n    CostPerUnit = Number(parseFloat(Calculate() / newqty))\r\n    // console.log(Calculate(), CostPerUnit, qty, freeqty)\r\n    CostPerUnit = parseFloat(CostPerUnit).toFixed(2)\r\n    return CostPerUnit\r\n  }\r\n  let GsT = 0\r\n  function CalculateGst() {\r\n    total = qty ? rate * qty : rate\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    GsT = sgstprcnt ? Number((((rate * sgstprcnt) / 100) + ((rate * sgstprcnt) / 100)) / 2) : GsT\r\n    GsT = parseFloat(GsT).toFixed(2)\r\n    return GsT\r\n  }\r\n  let IgsT = 0\r\n  function CalculateIGst() {\r\n    total = qty ? rate * qty : rate\r\n    total = disc ? total - (total * disc) / 100 : total\r\n    total = trddisc ? total - (total * trddisc) / 100 : total\r\n    IgsT = igstprcnt ? Number((rate * igstprcnt) / 100) : IgsT\r\n    IgsT = parseFloat(IgsT).toFixed(2)\r\n    return IgsT\r\n  }\r\n\r\n  useEffect(() => {\r\n    CalculateGst()\r\n    setsgst(CalculateGst())\r\n    setcgst(CalculateGst())\r\n  }, [sgstprcnt])\r\n\r\n  useEffect(() => {\r\n    CalculateIGst()\r\n    setigst(CalculateIGst())\r\n  }, [igstprcnt])\r\n  useEffect(() => {\r\n    settotalamt(Calculate())\r\n  }, [Calculate()])\r\n\r\n  useEffect(() => {\r\n    setcpu(CalculateCPU())\r\n  }, [CalculateCPU(), Calculate()])\r\n\r\n  // console.log(totalamt,cpu)\r\n  // console.log(sgst,cgst)\r\n  console.log(MedicineentriesArr, ClinicList)\r\n  console.log(clinicstatecode, vendorcode)\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid p-0 m-0\" style={{ zIndex: '2' }}>\r\n      <div className=\"container-fluid bg-seashell border border-2 border-top-0 border-start-0 border-end-0 \">\r\n        <div className=\"row p-0 m-0 p-2\">\r\n          <div className=\"col-1\">\r\n            <button type=\"button\" className=\"btn-close closebtn m-auto mt-2\" onClick={props.toggle_npef} aria-label=\"Close\" ></button>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <h5 className=\"text-center mt-2\"> New Purchase Entry </h5>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button disabled={MedicineentriesArr == undefined || MedicineentriesArr && MedicineentriesArr.length == 0 ? true : false} className=\"button button-charcoal\" onClick={() => { confirmmessage(MedicineentriesArr, vendorname) }}>Save All</button>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid p-0 m-0 entrydetails bg-pearl\" style={{ Height: '90vh' }}>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className={`col-${vendorid ? '8' : '12'} p-0 m-0`}>\r\n\r\n            <div className=\"row p-0 m-0 align-items-center\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"\" checked={channel == 1 ? true : false} value='1' onClick={(e) => { setchannel(e.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Pharmacy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">\r\n                    <input type=\"checkbox\" className=\"\" checked={channel == 2 ? true : false} value='2' onClick={(e) => { setchannel(e.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <span className=\"ms-0\">Clinic</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8 p-0 m-0\">\r\n              <div className=\"row p-0 m-0 gx-2 gy-1\">\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select PO</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder=\"Enter PO\" value={po ? po : ''} onChange={(e) => { setpo(e.target.value) }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Vendor</h6>\r\n                  <input className=\"form-control ms-2 rounded-1\" placeholder='Search Vendors' value={vendorname ? vendorname : ''} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setvendorcode() }} />\r\n                  <div ref={vendorsref} className='position-absolute ms-2 rounded-2 bg-pearl col-2' >\r\n                    {\r\n                      vendorsearch ? (\r\n                        loadvendors ? (\r\n                          <div className='rounded-2 p-1'>\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span> </div>\r\n                          </div>\r\n                        ) : (\r\n                          vendorsearch.length == 0 ? (\r\n                            <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                          ) : (\r\n                            vendorsearch.map((data, i) => (\r\n                              <div style={{ cursor: 'pointer' }} className={`p-0 p-1  bg-${((i % 2) == 0) ? 'pearl' : 'lightblue'} fs-6 `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); setvendorcode(data.state_code); filterclinic(); vendorsref.current.style.display = 'none'; }}>{data.entity_name}</div>\r\n                            ))\r\n                          )\r\n                        )\r\n                      ) : (<></>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Number</h6>\r\n                  <input type=\"text\" placeholder=\"Enter No.\" className=\"form-control ms-2 rounded-1\" value={invoice ? invoice : ''} onChange={(e) => { setinvoice(e.target.value) }} style={{ color: \"gray\" }} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                  <h6 className=\"p-0 m-0 ms-3 fw-bold\">Invoice Date</h6>\r\n                  <input type=\"date\" className=\"form-control ms-2 rounded-1\" value={invoicedate ? invoicedate : ''} onChange={(e) => { setinvoicedate(e.target.value) }} style={{ color: \"gray\" }} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row p-0 m-0 align-items-center mt-2\">\r\n                <div className=\"col-6 col-lg-5 col-md-5 p-0 m-0 align-self-center ms-1\">\r\n                  <button className=\"button button-charcoal m-0 p-0 py-1 px-4\"> <img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /> Medicine </button>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\" p-0 m-0 scroll scroll-y\" style={{ maxHeight: '50vh', Height: '50vh' }}>\r\n              <table className=\"table m-0 datatable text-center position-relative\">\r\n                <thead style={{ color: 'gray', fontWeight: '600' }}>\r\n                  <tr>\r\n                    <th>Edit</th>\r\n                    <th>Item ID</th>\r\n                    <th>Item Name</th>\r\n                    <th>batch No.</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>MRP</th>\r\n                    <th>Rate</th>\r\n                    <th>Total Disc</th>\r\n                    <th>Cost</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  MedicineentriesArr ? (\r\n                    <tbody style={{ Height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      {\r\n                        MedicineentriesArr.map((item, _key) => (\r\n                          <tr key={_key}>\r\n                            <td><input type='checkbox' checked={_key == tableindex ? true : false} onClick={() => { indexing(_key) }} className='bg-seashell' /></td>\r\n                            <td>{item.Itemid}</td>\r\n                            <td>{item.Itemname}</td>\r\n                            <td>{item.batchno}</td>\r\n                            <td>{item.expirydate}</td>\r\n                            <td>{item.MRP}</td>\r\n                            <td>{item.Rate}</td>\r\n                            <td>{Number(item.Discount) + Number(item.tradeDiscount)}</td>\r\n                            <td>{item.costperunit}</td>\r\n                            <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  ) : (\r\n                    MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                      <tbody className=\"position-relative\" style={{ height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                        <tr >\r\n                          <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ) : (\r\n                      <tbody className=\"position-relative\" style={{ height: '48vh', maxHeight: '48vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                        <tr className=\"\"  >\r\n                          <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    )\r\n\r\n                  )\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className={`col-4 m-0 p-0 scroll scroll-y border border-1 medicineinfosection d-${vendorid ? 'block' : 'none'} bg-seashell ps-2`} id='medicineinfosection' style={{ maxHeight: '81vh', Height: '81vh' }}>\r\n            <h5 className=\"mt-2\">Add Items</h5>\r\n            <div className=\"col-12\">\r\n              <div className=\" col-10 col-md-11\">\r\n                <div className='position-relative'>\r\n                  <label>Search Items </label>\r\n                  <input className='form-control bg-seashell' placeholder='Items' value={itemname ? itemname : ''} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemtype() }} />\r\n                  <div ref={medicinesref} className='position-absolute rounded-4 col-12' style={{ zIndex: '2' }}  >\r\n                    {\r\n                      itemsearch ? (\r\n                        loadsearch ? (\r\n                          <div className='rounded-2 p-1 bg-pearl'>\r\n                            Searching Please wait....\r\n                            <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                              <span className=\"sr-only\"> </span> </div>\r\n                          </div>\r\n                        ) : (\r\n                          itemsearch.length == 0 ? (\r\n                            <div className=\"bg-burntumber text-light rounded-2 p-1 text-wrap\">Oops! Not Avaliable</div>\r\n                          ) : (\r\n                            <div className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1 ? 'block' : 'none'}`}>\r\n                              <p className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 rounded-4 ps-2 `} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                              {\r\n                                itemsearch.map((data, i) => (\r\n                                  <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 text-wrap  bg-${((i % 2) == 0) ? '' : 'lightyellow'}`} name={data.id} onClick={(e) => { setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); setitemtype(data.vaccines_id ? 'v' : 'm'); medicinesref.current.style.display = 'none'; }}>{data.display_name ? data.display_name : data.name}</div>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          )\r\n                        )\r\n                      ) : (<></>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n                <label className=\"mb-2 pt-2\">Batch Number</label>\r\n                <input type=\"text\" max=\"10\" className=\"form-control bg-seashell batchnumber rounded-1\" id=\"inputEmail4\" placeholder=\"Batch Number\" value={batchno ? batchno : ''} onChange={(e) => setbatchno(e.target.value)} required />\r\n                <label className=\"pt-3 mb-2\">Expiry Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 expirydate\" value={expdate ? expdate : ''} onChange={(e) => { setexpdate(e.target.value) }} required />\r\n                <label className=\"pt-3 mb-2\">Manufacturing Date</label>\r\n                <input type=\"Date\" className=\"form-control bg-seashell reounded-1 manufacturingdate\" value={manufdate ? manufdate : ''} onChange={(e) => { setmanufdate(e.target.value) }} required />\r\n              </div>\r\n              <div className=\"col-12 form-group col-md-11 col-lg-11\">\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">MRP</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={mrp ? mrp : ''} onChange={(e) => { setmrp(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\"> Rate</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={rate ? rate : ''} onChange={(e) => { setrate(e.target.value); Calculate(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={qty ? qty : ''} onChange={(e) => { setqty(e.target.value); Calculate(rate, e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Free Qty</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={freeqty ? freeqty : ''} onChange={(e) => { setfreeqty(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Discount &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" value={disc ? disc : ''} onChange={(e) => { setdisc(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5 pb-3\">\r\n                    <label className=\"mb-2\">Trade Disc. &#40;%&#41;</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell rate rounded-1  m-auto\" placeholder=\"00\" value={trddisc ? trddisc : ''} onChange={(e) => { settrddisc(e.target.value) }} required />\r\n                  </div>\r\n                  <hr />\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'block' : 'none'}`}>\r\n                    <div className=\"row align-items-center p-0 m-0\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>SGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={sgst ? sgst : ''} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={sgstprcnt ? sgstprcnt : ''} onChange={(e) => { setsgstprcnt(e.target.value); setcgstprcnt(e.target.value); CalculateGst() }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'block' : 'none'}`}>\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2\">\r\n                        <h6>CGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" disabled={true} placeholder=\"00\" value={cgst ? cgst : sgst ? sgst : ''} required />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" disabled={true} placeholder=\"Rate\" value={cgstprcnt ? cgstprcnt : sgstprcnt ? sgstprcnt : ''} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`col-12 ps-2 py-2 d-${vendorcode == clinicstatecode ? 'none' : 'block'}`}>\r\n                    <div className=\"row p-0 m-0 align-items-center\">\r\n                      <div className=\"col-2 \">\r\n                        <h6>IGST</h6>\r\n                      </div>\r\n                      <div className=\"col-5\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"00\" disabled={true} value={CalculateIGst() ? CalculateIGst() : ''} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <input type=\"number\" max=\"10\" className=\"form-control bg-seashell mrp rounded-1  m-auto\" placeholder=\"Rate\" value={igstprcnt ? igstprcnt : ''} onChange={(e) => { setigstprcnt(e.target.value) }} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"col-12 form-group\">\r\n                <div className=\"row p-0 m-0 g-3\">\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Cost/Unit</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell costunit rounded-1\" placeholder=\"00\" disabled value={CalculateCPU() ? CalculateCPU() : ''} onChange={(e) => { setcpu(e.target.value) }} required />\r\n                  </div>\r\n                  <div className=\"col-5\">\r\n                    <label className=\"mb-2\">Total Amount</label>\r\n                    <input type=\"number\" max=\"10\" className=\"form-control bg-seashell totalamount rounded-1\" placeholder=\"00\" disabled value={Calculate() ? Calculate() : ''} onChange={(e) => { settotalamt(e.target.value) }} required />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-6 py-3 m-auto text-center\">\r\n                {\r\n                  tableindex == -1 || tableindex == undefined ? (\r\n                    <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={InsertMedicines} > Add </button>\r\n                  ) : (\r\n                    <button type=\"submit\" className=\"btn  button-charcoal done px-5\" onClick={UpdateMedicines} > Update </button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Purchaseordersection() {\r\n  let cartselect = [\"Pharmacy\", \"Clinic\"];\r\n  const [cartselectindex, setcartselectindex] = useState(0);\r\n  const [displayviewcart, setdisplayviewcart] = useState(\"none\");\r\n  const [displayitemdetails, setdisplayitemdetails] = useState(\"none\");\r\n  const _displayviewcart = () => {\r\n    if (displayviewcart === \"none\") {\r\n      setdisplayviewcart(\"block\");\r\n    }\r\n    if (displayviewcart === \"block\") {\r\n      setdisplayviewcart(\"none\");\r\n    }\r\n  }\r\n  const _displayitemdetails = () => {\r\n    if (displayitemdetails === \"none\") {\r\n      setdisplayitemdetails(\"block\");\r\n    }\r\n    if (displayitemdetails === \"block\") {\r\n      setdisplayitemdetails(\"none\");\r\n    }\r\n  }\r\n  const _selectedcart = (cardindex) => {\r\n    if (cardindex === 0) {\r\n      return <table className=\"table datatable text-center\"><thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>Item Name</th>\r\n          <th>Total Qty</th>\r\n          <th>Amount</th>\r\n          <th>Last Vendor</th>\r\n          <th>Add</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n        <tbody>\r\n          {<Pharmacystocktable />}\r\n        </tbody>\r\n      </table>\r\n    }\r\n    if (cardindex === 1) {\r\n      return <div className=\"\">{cardindex}</div>\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button viewcart button-charcoal position-absolute\" onClick={_displayviewcart}><img src={process.env.PUBLIC_URL + \"/images/cartwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />View Cart</button>\r\n      <div className={`container-fluid pt-2  p-0 m-0 cartform d-${displayviewcart} w-50 border1 rounded bg-seashell position-absolute text-center`} >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">Items in Cart</h5>\r\n        </div>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={_displayviewcart}></button>\r\n        <div className=\"pt-1\">\r\n          <div className=\"row g-0 justify-content-center\">\r\n            {\r\n              cartselect.map((e, i) => {\r\n                return (\r\n                  <button className={`col-2 p-0 m-0 button text-${i === cartselectindex ? \"light\" : \"dark\"} bg-${i === cartselectindex ? \"charcoal\" : \"seashell\"} rounded-0`} onClick={(a) => setcartselectindex(i)}>{e}</button>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"scroll scroll-y\">\r\n          {_selectedcart(cartselectindex)}\r\n        </div>\r\n        <div className=\"bg-pearl rounded\">\r\n          <div className=\"row p-3 justify-content-between\">\r\n            <div className=\"col-3\">\r\n              <select className=\"form-control bg-pearl\" style={{ color: 'gray' }}>\r\n                <option selected disabled defaultValue='Select Vendor' className=\"Selectvendor\" style={{ color: 'gray' }}>Select Vendor</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button className=\"button button-charcoal\">Create New PO</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`container-fluid pt-2  p-0 m-0 itemdetailsform d-${displayitemdetails} w-50 border1 rounded bg-seashell position-absolute text-center`} >\r\n        <div className=\"container-fluid  w-100 shadow-sm\">\r\n          <h5 className=\"text-dark fw-bold\">PO-14 Item Details</h5>\r\n        </div>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={_displayitemdetails}></button>\r\n        <div className=\"scroll scroll-y\">\r\n          {<POitemdetailsarray />}\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-lg text-center button-charcoal m-2\" onClick={_displayitemdetails}>Done</button>\r\n      </div>\r\n      <h3 className='ps-3'>Purchase Order List</h3>\r\n      <table className=\"table datatable text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>PO ID</th>\r\n            <th>Channel</th>\r\n            <th>Vendor</th>\r\n            <th>PO Date</th>\r\n            <th>Created By</th>\r\n            <th>Total Items</th>\r\n            <th>Amount</th>\r\n            <th>Approval Status</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {<Purchaseorderarray itemdetails={_displayitemdetails} />}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\nfunction POitemdetailssection() {\r\n  return (\r\n    <table className=\"table datatable text-center\"><thead>\r\n      <tr>\r\n        <th>No.</th>\r\n        <th>Item Name</th>\r\n        <th>Total Qty</th>\r\n        <th>Amount</th>\r\n        <th>Last Vendor</th>\r\n        <th>Add</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n      <tbody>\r\n        {<POitemdetailsarray />}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\nfunction PurchaseReturns() {\r\n  const currentDate = useContext(TodayDate)\r\n  const ClinicID = localStorage.getItem('ClinicId')\r\n  const url = useContext(URL)\r\n  const [pridw, setpridw] = useState(\"none\");\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [channel, setchannel] = useState(1)\r\n  const [fromdate, setfromdate] = useState()\r\n  const [todate, settodate] = useState()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [purchasereturnarr, setpurchasereturnarr] = useState([])\r\n  const [index, setindex] = useState()\r\n  const [nref, setnref] = useState(\"none\");\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [tabindex, settabindex] = useState()\r\n\r\n  function GETPurchaseReturns(i) {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setLoading(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/purchase/return?clinic_id=${ClinicID}&channel=${channel}&limit=25&offset=${i * 25}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n        setpurchasereturnarr(response.data.data)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setLoading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setLoading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.data.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GETPurchaseReturns()\r\n  }, [channel, fromdate, todate])\r\n\r\n  const toggle_pridw = () => {\r\n    if (pridw === \"none\") {\r\n      setpridw(\"block\");\r\n    }\r\n    if (pridw === \"block\") {\r\n      setpridw(\"none\");\r\n    }\r\n  };\r\n  const toggle_nref = () => {\r\n    if (nref === \"none\") {\r\n      setnref(\"block\");\r\n\r\n    }\r\n    if (nref === \"block\") {\r\n      setnref(\"none\");\r\n    }\r\n  };\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function getnextpages(e) {\r\n    GETPurchaseReturns(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GETPurchaseReturns(e.target.value - 1)\r\n  }\r\n  return (\r\n    <>\r\n      <button className=\"button addentrypurchase button-charcoal position-absolute\" onClick={toggle_nref}><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Entry Return</button>\r\n      <div classsName='p-0 m-0'>\r\n        <div className=\"row p-0 m-0 align-items-center justify-content-lg-between\">\r\n          <div className=\"col-3 col-md-2 col-lg-2 align-self-center text-center mb-2 text-charcoal fw-bolder fs-6\">Purchase Return </div>\r\n          <div className=\"col-6 col-xl-6 col-lg-7 col-md-auto align-self-center m-1 \">\r\n            <div className=\"row border-burntumber bg-pearl fw-bolder rounded-2 text-center justify-content-center \">\r\n              <div className=\"col-4\">\r\n                <select className='p-0 m-0 border-0 text-burntumber bg-pearl fw-bolder' value={channel ? channel : ''} onChange={(e) => { setchannel(e.target.value) }}>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='1'>Pharmacy</option>\r\n                  <option className='border-0 text-burntumber fw-bolder' value='2'>Consumables</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n                <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={fromdate ? fromdate : ''} onChange={(e) => { setfromdate(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-4 text-burntumber fw-bolder bg-pearl\">\r\n                <input type='date' className='p-0 m-0 border-0 bg-pearl text-burntumber fw-bolder ' value={todate ? todate : ''} onChange={(e) => { settodate(e.target.value) }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 col-lg-2 col-md-2 align-self-center\">\r\n            <ExportPurchaseEntry purchasereturnarr={purchasereturnarr} fromdate={reversefunction(fromdate)} todate={reversefunction(todate)} />\r\n          </div>\r\n        </div>\r\n        <div className='scroll scroll-y overflow-scroll p-0 m-0' style={{ minHeight: '57vh', height: '57vh' }}>\r\n          <table className=\"table text-center p-0 m-0\">\r\n            <thead className='p-0 m-0 align-middle'>\r\n              <tr>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>PR ID</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Distributor</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Date</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Return Amount</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>Inventory</th>\r\n                <th className='fw-bolder text-charcoal75' scope='col'>more</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              Loading ? (\r\n                <body className=' text-center' style={{ minHeight: '57vh' }}>\r\n                  <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <strong className='fs-5'>Getting Details please be Patient ...</strong>\r\n                      <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </tr>\r\n                </body>\r\n\r\n              ) : (\r\n                purchasereturnarr && purchasereturnarr.length != 0 ? (\r\n                  <tbody>\r\n                    {\r\n                      purchasereturnarr.map((item, i) => (\r\n                        <tr key={i} className={`bg-${((i % 2) == 0) ? 'seashell' : 'pearl'} align-middle`}>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>PR-{item.return_no}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.distributor && item.distributor != null && item.distributor.entity_name && item.distributor.entity_name != null ? item.distributor.entity_name : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.return_date ? reversefunction(item.return_date) : ''}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>{item.grand_total ? item.grand_total : 'N/A'}</td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'>\r\n                            {/* <button className='btn'><img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1\" /></button> */}\r\n                            <button className=\"btn\" onClick={() => { setindex(i); toggle_pridw() }}><img src={process.env.PUBLIC_URL + \"/images/archivebox.png\"} alt=\"displaying_image\" className=\"ms-1\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className='p-0 m-0 text-charcoal fw-bold'><button className=\"btn position-relative cursor-pointer more p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td>\r\n                          <td className={` position-absolute d-${i == index ? pridw : 'none'} border border-1 start-0 end-0 bg-seashell p-0 m-0`} style={{ Height: '90vh', top: '-7.15rem', zIndex: '2' }} >\r\n                            {\r\n                              i == index ? (\r\n                                <PRitemdetailssection purchasereturnarr={purchasereturnarr[i]} itembillid={\"PR-\" + item.return_no} toggle_pridw={toggle_pridw} />\r\n                              ) : (<></>)\r\n                            }\r\n                          </td>\r\n\r\n                        </tr>\r\n\r\n                      ))\r\n\r\n                    }\r\n\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '55vh' }}>\r\n                    <tr className=''>\r\n                      <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Purchase Returns</td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              )\r\n            }\r\n\r\n          </table>\r\n        </div>\r\n        <div className=\"container-fluid my-1\">\r\n          <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n            <button className=\"btn p-0 m-0 me-2 px-1 \" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n            <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n              {\r\n                pages ? (\r\n                  pages.map((page, i) => (\r\n                    <button className={`button ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}   shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { settabindex(i); GETPurchaseReturns(i) }} key={i}>{page}</button>\r\n                  ))\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )\r\n\r\n              }\r\n            </div>\r\n\r\n            <button className={`btn border-charcoal p-0 m-0 px-1 ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); console.log(e.target.value) }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className={`newreturnentrysection position-absolute bg-seashell border border-1 start-0 end-0  d-${nref}`} style={{ 'top': '-7.15rem', Height: '90vh' }}  >\r\n        {<NewPurchaseReturnentryform toggle_nref={toggle_nref} GETPurchaseReturns={GETPurchaseReturns} />}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction PRitemdetailssection(props) {\r\n  const [medicine, setmedicine] = useState('block')\r\n  const [vaccine, setvaccine] = useState('none')\r\n  const [index, setindex] = useState(0)\r\n  const Items = ['Medicine', 'Vaccine']\r\n  if (index == 0) {\r\n    if (medicine == 'none') {\r\n      setmedicine('block')\r\n      setvaccine('none')\r\n    }\r\n  }\r\n  if (index == 1) {\r\n    if (vaccine == 'none') {\r\n      setvaccine('block')\r\n      setmedicine('none')\r\n    }\r\n  }\r\n  const [Taxon, setTaxon] = useState(false)\r\n\r\n  function TotalTaxPercent(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  function TotalTaxRate(cgst, sgst, igst) {\r\n    if (cgst && sgst && igst !== null || undefined) {\r\n      return Number(cgst) + Number(sgst) + Number(igst)\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n\r\n  console.log(props.purchasereturnarr)\r\n  return (\r\n    <div className=\"container-fluid p-0 m-0 bg-seashell \">\r\n      <div className=\"container-fluid bg-seashell p-0 m-0 position-relative\">\r\n        <h5 className='text-center text-charcoal mt-3'>{props.itembillid} Purchase Return Item Details</h5>\r\n        <button type=\"button\" className=\"btn-close closebtn position-absolute end-0 me-2 \" onClick={props.toggle_pridw} aria-label=\"Close\"></button>\r\n        <div className=\"col-2 d-none\">\r\n          <div className=' position-relative searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n            <input type=\"text\" className=\" form-control d-inline PEsearch bg-seashell\" placeholder=\"Search PE\" />\r\n            <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='d-flex justify-content-center p-0 m-0 mt-3 mb-1'>\r\n        {\r\n          Items.map((data, i) => (\r\n\r\n            <button className={`button border-charcoal rounded-0 button-${i == index ? 'charcoal' : 'seashell'}`} onClick={() => { setindex(i) }}>{data}</button>\r\n\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-end me-5 \">\r\n        <input type='checkbox' className='' value={Taxon ? Taxon : ''} onChange={() => { Taxon == true ? setTaxon(false) : setTaxon(true) }} /><label>Show Tax Details</label>\r\n      </div>\r\n\r\n      <div className={`scroll bg-seashell scroll-y d-${medicine}`} style={{ minHeight: '70vh', maxHeight: '70vh' }}>\r\n\r\n        <table className=\"table datatable text-center bg-seashell\">\r\n          <thead>\r\n            <tr>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n              <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className='border p-0 m-0 px-1'>Total Tax</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n              <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n              <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            props.purchasereturnarr.purchase_medicines && props.purchasereturnarr.purchase_medicines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchasereturnarr.purchase_medicines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.medicine && item.medicine.name !== null ? item.medicine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-charcoal fw-bold text-center'>No Medicines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className={`scroll bg-seashell scroll-y d-${vaccine}`} style={{ minHeight: '70vh', maxHeight: '70vh' }}>\r\n\r\n        <table className=\"table datatable table-responsive text-center bg-seashell\"><thead>\r\n          <tr>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item ID</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Item Name</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Batch No.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Expiry Date</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>MRP in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Rate in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Disc%</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Trade Disc%</th>\r\n            <th colspan={Taxon == true ? '8' : '2'} scope='col-group' className={`border p-0 m-0 px-1`}>Total Tax</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Cost in Rs.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Qty.</th>\r\n            <th rowspan='2' className='border p-0 m-0 px-1'>Total in Rs.</th>\r\n\r\n          </tr>\r\n          <tr>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>CGST Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>SGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1 d-${Taxon == true ? '' : 'none'}`}>IGST in Rs.</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total%</th>\r\n            <th scope='col' className={`border p-0 m-0 px-1`}>Total in Rs.</th>\r\n          </tr>\r\n        </thead>\r\n          {\r\n            props.purchasereturnarr.purchase_vaccines && props.purchasereturnarr.purchase_vaccines.length !== 0 ? (\r\n              <tbody className='border align-items-center p-0 m-0'>\r\n                {\r\n                  props.purchasereturnarr.purchase_vaccines.map((item, _key) => (\r\n                    <tr className='border p-0 m-0 align-middle' key={_key}>\r\n                      <td className='border p-0 m-0 align-middle'>{item && item.id !== null ? item.id : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.vaccine && item.vaccine.name !== null ? item.vaccine.name : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.batch_no && item.batch_no != null ? item.batch_no : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.expiry_date && item.expiry_date != null ? reversefunction(item.expiry_date) : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.mrp ? item.mrp : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.rate ? item.rate : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.discount ? item.discount : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.trade_discount ? item.trade_discount : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST_rate ? item.SGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.SGST ? item.SGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST_rate ? item.CGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.CGST ? item.CGST : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST_rate ? item.IGST_rate : 'N/A'}</td>\r\n                      <td className={`border p-0 m-0 align-middle d-${Taxon == true ? '' : 'none'}`}>{item.IGST ? item.IGST : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxPercent(item.CGST_rate, item.SGST_rate, item.IGST_rate)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{TotalTaxRate(item.CGST, item.SGST, item.IGST)}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.cost ? item.cost : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.qty ? item.qty : 'N/A'}</td>\r\n                      <td className='border p-0 m-0 align-middle'>{item.total_amount ? item.total_amount : 'N/A'}</td>\r\n\r\n                    </tr>\r\n                  ))\r\n                }\r\n\r\n              </tbody>\r\n\r\n            ) : (\r\n              <body className='text-center p-0 m-0 border border-1 '>\r\n                <div className='position-absolute border-0 start-0 end-0 mx-3 p-2'>\r\n                  <p className=' text-center fw-bold'>No Vaccines Found</p>\r\n                </div>\r\n\r\n              </body>\r\n            )\r\n\r\n\r\n          }\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction NewPurchaseReturnentryform(props) {\r\n  const url = useContext(URL)\r\n  const ClinicId = localStorage.getItem('ClinicId')\r\n  const ClinicList = useContext(Clinic)\r\n  const medicinesref = useRef(null)\r\n  const vendorsref = useRef(null)\r\n\r\n  const [vendorname, setvendorname] = useState()\r\n  const [vendorid, setvendorid] = useState()\r\n  const [loadvendors, setloadvendors] = useState()\r\n  const [vendorsearch, setvendorsearch] = useState([''])\r\n  const [itemsearch, setitemsearch] = useState([''])\r\n  const [itemname, setitemname] = useState()\r\n  const [loadsearch, setloadsearch] = useState()\r\n  const [MedicineentriesArr, setMedicineentriesArr] = useState([])\r\n  const [load, setload] = useState()\r\n\r\n  const CalculateCost = (cost, currentstock, qtytotreturn) => {\r\n    let costing = 0;\r\n    if (cost && qtytotreturn && currentstock >= qtytotreturn) {\r\n      costing = 0\r\n      costing = Number(cost) * Number(qtytotreturn)\r\n      return costing.toFixed(2)\r\n    } else {\r\n      return costing\r\n    }\r\n  }\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n\r\n  }\r\n  async function InsertMedicines(data) {\r\n    let MedicineentriesObj = {\r\n      Itemid: data.id,\r\n      Type: data.type,\r\n      Item: data.item_name,\r\n      batchno: data.batch_no,\r\n      expirydate: data.expiry_date,\r\n      cost: data.cost,\r\n      totalcost: 0,\r\n      currentstock: data.current_stock,\r\n      qtytoReturn: 0,\r\n    }\r\n\r\n    if (MedicineentriesArr == undefined || MedicineentriesArr.length == 0) {\r\n      setMedicineentriesArr([MedicineentriesObj])\r\n    } else {\r\n      setMedicineentriesArr(prevState => [...prevState, MedicineentriesObj])\r\n    }\r\n  }\r\n  const searchmeds = async () => {\r\n    setloadsearch(true)\r\n    try {\r\n      await axios.get(`${url}/purchase/item/search/by/id?item=${itemname}&distributor_id=${vendorid}`).then((response) => {\r\n        console.log(response.data.data)\r\n        setitemsearch([response.data.data])\r\n        setloadsearch(false)\r\n        if (itemname.length >= 1) {\r\n          medicinesref.current.style.display = 'block';\r\n        } else {\r\n          medicinesref.current.style.display = 'none';\r\n        }\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  }\r\n  const searchvendors = async (search) => {\r\n    setloadvendors(true)\r\n    try {\r\n      await axios.get(`${url}/kyc/list?limit=10&offset=0&search=${search}`).then((response) => {\r\n        setvendorsearch(response.data.data)\r\n        setloadvendors(false)\r\n        if (search.length > 1) {\r\n          vendorsref.current.style.display = 'block';\r\n        } else {\r\n          vendorsref.current.style.display = 'none';\r\n        }\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          Notiflix.Notify.failure(error.response.data);\r\n          Notiflix.Notify.failure(error.response.status);\r\n          Notiflix.Notify.failure(error.response.headers);\r\n        }\r\n      })\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e);\r\n    }\r\n  }\r\n  const SaveReturnEntry = async () => {\r\n    let ProductId = []\r\n    let Totalamount = []\r\n    let quantity = []\r\n\r\n    let grosstotal = 0\r\n    for (let i = 0; i < MedicineentriesArr.length; i++) {\r\n      ProductId.push(MedicineentriesArr[i].Itemid ? `${MedicineentriesArr[i].Type}${MedicineentriesArr[i].Itemid}` : '')\r\n      Totalamount.push(MedicineentriesArr[i].totalcost ? MedicineentriesArr[i].totalcost : '')\r\n      quantity.push(MedicineentriesArr[i].qtytoReturn ? MedicineentriesArr[i].qtytoReturn : '')\r\n    }\r\n\r\n    Totalamount.forEach(item => {\r\n      grosstotal += Number(item)\r\n    })\r\n\r\n    var Data = {\r\n      distributor_id: vendorid,\r\n      pro_id: ProductId,\r\n      qty: quantity,\r\n      total_amount: Totalamount,\r\n      grand_total: grosstotal\r\n    }\r\n    console.log(Data)\r\n    setload(true)\r\n    try {\r\n      await axios.post(`${url}/purchase/return/save`, Data).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        props.GETPurchaseReturns()\r\n        setMedicineentriesArr()\r\n        setvendorname()\r\n        setvendorid()\r\n        setitemname()\r\n        setload(false)\r\n        props.toggle_nref()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setload(false)\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n  function confirmmessage() {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Save Purchase Return `,\r\n      `Do you surely want to add total ${MedicineentriesArr.length} Purchase ${MedicineentriesArr.length <= 1 ? 'Return ' : 'Returns'} of Distributor ${vendorname}  `,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SaveReturnEntry()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  async function DeleteMedicine(id) {\r\n    let obj = []\r\n    obj.push(MedicineentriesArr.filter(function (e) {\r\n      return e.Itemid !== id\r\n    }))\r\n    obj = obj.flat()\r\n    setMedicineentriesArr(obj)\r\n  }\r\n  function Grand() {\r\n    let c = 0\r\n    if (MedicineentriesArr && MedicineentriesArr.length > 0) {\r\n      MedicineentriesArr.map((data) => (\r\n        c += Number(data.totalcost)\r\n      ))\r\n    }\r\n    return c\r\n  }\r\n  return (\r\n    <div className=\"newpurchaseentryform p-0 m-0\">\r\n      <div className=\" p-0 m-0\">\r\n        <div className=\"container-fluid p-0 m-0 bg-seashell position-relative  \">\r\n          <h5 className=\"text-center mt-3\" style={{ color: \"var(--charcoal)\" }} >New Purchase Return Entry</h5>\r\n          <button type=\"button\" className=\"btn-close position-absolute end-0 closebtn me-2\" onClick={props.toggle_nref} aria-label=\"Close\" ></button>\r\n        </div>\r\n        <div className=\"container-fluid p-0 m-0 w-100 entrydetails bg-seashell\">\r\n          <div className=\"row p-0 m-0 justify-content-center\">\r\n            <div className=\"col-5\">\r\n              <h6 className=\"p-0 m-0 ms-3 fw-bold\">Select Distributor</h6>\r\n              <input className=\"form-control ms-2 rounded-1 bg-seashell\" placeholder='Search Vendors' value={vendorname ? vendorname : ''} onChange={(e) => { searchvendors(e.target.value); setvendorname(e.target.value); setvendorid(); setMedicineentriesArr([]) }} />\r\n              <div ref={vendorsref} className='position-absolute ms-2 rounded-2 bg-pearl col-2' style={{ display: 'none', zIndex: '1' }} >\r\n                {\r\n                  vendorsearch ? (\r\n                    loadvendors ? (\r\n                      <div className='rounded-2 p-1'>\r\n                        Searching Please wait....\r\n                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                          <span className=\"sr-only\"> </span> </div>\r\n                      </div>\r\n                    ) : (\r\n                      vendorsearch.length == 0 ? (\r\n                        <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                      ) : (\r\n                        vendorsearch.map((data, i) => (\r\n                          <div style={{ cursor: 'pointer' }} className={`p-0 p-1  bg-${((i % 2) == 0) ? 'pearl' : 'lightblue'} fs-6 `} name={data.id} onClick={(e) => { setvendorname(data.entity_name); setvendorid(data.id); vendorsref.current.style.display = 'none'; }}>{data.entity_name}</div>\r\n                        ))\r\n                      )\r\n                    )\r\n                  ) : (<div className='bg-seashell'></div>)\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <div className='position-relative'>\r\n                <h6 className=\"p-0 m-0 ms-3 fw-bold\">Product ID</h6>\r\n                <input className='form-control bg-seashell' placeholder='Product Id' value={itemname ? itemname : ''}\r\n                  onChange={(e) => {\r\n                    vendorid ? setitemname(e.target.value) : Notiflix.Notify.failure('Please Add Vendor First')\r\n                  }} />\r\n                <div ref={medicinesref} className='position-absolute rounded-2 bg-pearl col-12' style={{ zIndex: '1' }}>\r\n                  {\r\n                    itemsearch ? (\r\n                      loadsearch ? (\r\n                        <div className='rounded-2 p-1'>\r\n                          Searching Please wait....\r\n                          <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                            <span className=\"sr-only\"> </span> </div>\r\n                        </div>\r\n                      ) : (\r\n                        itemsearch.length == 0 ? (\r\n                          <div className=\"bg-burntumber text-light rounded-2 p-1\">Oops! Not Avaliable</div>\r\n                        ) : (\r\n                          itemsearch.map((data, i) => (\r\n                            <div style={{ cursor: 'pointer' }} className={`p-0 ps-1 shadow bg-${((i % 2) == 0) ? 'pearl' : 'lightyellow'} fs-6 `} name={data.id}\r\n                              onClick={(e) => {\r\n                                setitemname(data.item_name);\r\n                                InsertMedicines(data);\r\n                                medicinesref.current.style.display = 'none';\r\n                              }}>{data.item_name}</div>\r\n                          ))\r\n                        )\r\n                      )\r\n                    ) : (<div className='bg-seashell'></div>)\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-2 align-self-center \">\r\n              <p></p>\r\n              <button className='p-0 m-0 btn' onClick={searchmeds}><img src={process.env.PUBLIC_URL + 'images/search.png'} style={{ width: '1.8rem' }} /></button>\r\n            </div>\r\n          </div>\r\n          <div className=\" p-0 m-0 mt-2 scroll scroll-y\" style={{ Height: '65vh' }}>\r\n            <table className=\"table datatable text-center position-relative\">\r\n              <thead style={{ color: 'gray', fontWeight: '600' }}>\r\n                <tr>\r\n\r\n                  <th className='p-0 m-0 px-1'>Item ID</th>\r\n                  <th className='p-0 m-0 px-1'>Item Name</th>\r\n                  <th className='p-0 m-0 px-1'>batch No.</th>\r\n                  <th className='p-0 m-0 px-1'>Expiry Date</th>\r\n                  <th className='p-0 m-0 px-1'>Avl. Stock</th>\r\n                  <th className='p-0 m-0 px-1'>Qty to Return</th>\r\n                  <th className='p-0 m-0 px-1'>Purchase Rate/Unit</th>\r\n                  <th className='p-0 m-0 px-1'>Purchase Rate</th>\r\n                  <th className='p-0 m-0 px-1'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                MedicineentriesArr ? (\r\n                  <tbody style={{ maxHeight: '65vh', minHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                    {\r\n                      MedicineentriesArr.map((item, _key) => (\r\n                        <tr key={_key} className=''>\r\n                          <td>{item.Itemid}</td>\r\n                          <td>{item.Item}</td>\r\n                          <td>{item.batchno}</td>\r\n                          <td>{reversefunction(item.expirydate)}</td>\r\n                          <td>{item.currentstock}</td>\r\n                          <td className='p-0 m-0' style={{ 'width': '0px', 'height': '0px' }}>\r\n                            <input className='border border-1 rounded-1 w-25 text-center p-0 m-0 bg-seashell  mt-2' value={item.qtytoReturn ? item.qtytoReturn : ''}\r\n                              onChange={(e) => {\r\n                                e.target.value <= item.currentstock ? item.qtytoReturn = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\")\r\n                                item.totalcost = CalculateCost(item.cost, item.currentstock, e.target.value)\r\n                                setMedicineentriesArr(prevState => [...prevState])\r\n                              }} /></td>\r\n                          <td>{item.cost}</td>\r\n                          <td>{item.totalcost}</td>\r\n                          <td ><button onClick={() => { DeleteMedicine(item.Itemid); }} className='btn btn-sm button-burntumber'>Delete</button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                ) : (\r\n                  MedicineentriesArr && MedicineentriesArr.length == 0 ? (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\">No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody className=\"position-relative\" style={{ height: '65vh', maxHeight: '65vh', color: 'var(--charcoal)', fontWeight: '600' }}>\r\n                      <tr className=\"\"  >\r\n                        <td className=\"position-absolute start-0 end-0 top-0\" >No items Added</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )\r\n\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div className='col-12 position-absolute start-0 end-0 bottom-0 rounded-bottom text-center bg-pearl align-items-center border border-1 py-3'>\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Order Total </p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{Grand()}</h4>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <p className='text-charcoal75 p-0 m-0 fw-bolder card-title text-start ms-3'> Total Items</p>\r\n                <h4 className='text-charcoal  p-0 m-0 fw-bolder card-header text-start ps-3'>{MedicineentriesArr ? MedicineentriesArr.length : 0}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            {\r\n              load ? (\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button className='button button-charcoal px-5' onClick={confirmmessage}>Save Entry</button>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <div className=\"col-3 align-self-center\">\r\n            <button className='button button-pearl border-charcoal text-charcoal px-4' >Add To Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Purchasesection };\r\nexport { Purchaseordersection };\r\nexport { Purchaseentrysection };\r\nexport { POitemdetailssection };\r\nexport { PEitemdetailssection };\r\n\r\n\r\n//-------------------------------------------------------------------------Stock Info---------------------------------------------------------\r\n\r\nfunction Stocksection() {\r\n  let menu = [\"Vaccines\", \"Medicines\"];\r\n  const [menuindex, setmenuindex] = useState(0);\r\n  const _selectedmenu = (_menu) => {\r\n    if (_menu === 0) {\r\n      return <div className=\"\"><Stockvaccinesection /></div>\r\n    }\r\n    if (_menu === 1) {\r\n      return <div className=\"\"><Stockmedicinesection /></div>\r\n    }\r\n    return <div className='fs-2'>Nothing Selected</div>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <section className='stocksection pt-1'>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row gx-3\">\r\n            <div className='row m-0 p-0'>\r\n              {\r\n                menu.map((e, i) => {\r\n                  return (\r\n                    <div className=\"col-auto\">\r\n                      <button className={`btn btn-sm px-4 rounded-5 text-${i === menuindex ? \"light\" : \"dark\"} bg-${i === menuindex ? \"charcoal\" : \"seashell\"}`} onClick={(a) => setmenuindex(i)} >{e}</button>\r\n                    </div>\r\n                  )\r\n                }\r\n                )\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"tablesrender position-relative\">\r\n        <div className='container-fluid pt-3'>\r\n          <div className=\"scroll scroll-y\">\r\n            {_selectedmenu(menuindex)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nfunction Stockvaccinesection() {\r\n  const url = useContext(URL)\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [vaccineslist, setvaccineslist] = useState([])\r\n  const [load, setload] = useState()\r\n  const [searchname, setsearchname] = useState('')\r\n  const [index, setindex] = useState()\r\n  const [detailsform, setdetailsform] = useState('none')\r\n\r\n  const GetVaccines = async (i) => {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setload(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&limit=20&offset=${i * 10}`).then((response) => {\r\n        console.log(response.data.data.vaccines)\r\n        setvaccineslist(response.data.data.vaccines)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setload(false)\r\n      }).catch(function error(e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        // setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      // setload(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetVaccines()\r\n  }, [searchname])\r\n  async function getnextpages(e) {\r\n    GetVaccines(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GetVaccines(e.target.value - 1)\r\n  }\r\n\r\n  const CalculateBStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.current_stock)\r\n    ))\r\n    return total\r\n  }\r\n  const CalculateTStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.qty)\r\n    ))\r\n    return total\r\n  }\r\n  const GetStatus = (data) => {\r\n    let currentstock = 0\r\n    data.stock_info.map((item) => (\r\n      currentstock += Number(item.current_stock)\r\n    ))\r\n    if (currentstock <= data.alert_stock_count) {\r\n      return 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  let c = 0\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == 'none') {\r\n      setdetailsform('block')\r\n    }\r\n    if (detailsform === 'block') {\r\n      setdetailsform('none')\r\n      setindex()\r\n    }\r\n  }\r\n  return (\r\n    <div className='p-0 m-0 vaccinestockinfo'>\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className='position-absolute searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Vaccine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n      </div>\r\n      <div className=' text-start text-charcoal p-2 ms-5 fw-bold'>Vaccine Stock Info</div>\r\n      <div className='scroll scroll-y' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}>\r\n        <table className=\"table datatable text-center\" >\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>ID</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Vaccine Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>B.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>T.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Status</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'></th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n\r\n              </tr>\r\n            ) : (\r\n              vaccineslist == undefined || vaccineslist.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Vaccines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    vaccineslist.map((data, i) => (\r\n                      <tr className={`align-middle text-center`}>\r\n                        <td className=' text-charcoal fw-bold'>{data.id}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateBStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateTStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{\r\n                          GetStatus(data) == 1 ? (\r\n                            <img src={process.env.PUBLIC_URL + 'images/exclamation.png'} style={{ 'width': '1.5rem' }} />\r\n                          ) : (<></>)\r\n                        }</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                          <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                        </td>\r\n                        <td className={` bg-${index == i ? 'lightred' : ''} p-0 m-0 text-charcoal fw-bold`}>\r\n                          <button className='btn p-0 m-0' onClick={() => { setindex(i); toggle_detailsform() }}>\r\n                            <img src={process.env.PUBLIC_URL + 'images/archivebox.png'} style={{ 'width': '1.5rem' }} />\r\n                          </button>\r\n                        </td>\r\n                        {\r\n                          index == i ? (\r\n                            <td className={`stockdetailsfrom bg-white border border-1 col-lg-10 rounded-4 shadow p-0 col-md-10 col-sm-10 col-10 col-xl-6 d-${index == i ? detailsform : 'none'} position-absolute start-0 end-0 top-0`}>\r\n                              <VaccinesectionItemDetails toggle_detailsform={toggle_detailsform} name={vaccineslist[i].name} data={vaccineslist[i].stock_info} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid my-1\">\r\n        <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n\r\n          <button className=\"btn p-0 m-0 border-charcoal px-1 me-2\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n\r\n            {\r\n              pages ? (\r\n                pages.map((page, i) => (\r\n                  <button className={`button ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'} shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { GetVaccines(i) }} key={i}>{page}</button>\r\n                ))\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn p-0 m-0 border-charcoal px-1 ms-2 `} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction Stockmedicinesection() {\r\n  const url = useContext(URL)\r\n  const nextref = useRef()\r\n  const previousref = useRef()\r\n  const [nxtoffset, setnxtoffset] = useState(0)\r\n  const [prevoffset, setprevoffset] = useState(0)\r\n  const [pages, setpages] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\r\n  const [vaccineslist, setvaccineslist] = useState([])\r\n  const [load, setload] = useState()\r\n  const [searchname, setsearchname] = useState('')\r\n  const [index, setindex] = useState()\r\n  const [detailsform, setdetailsform] = useState('none')\r\n\r\n  const GetVaccines = async (i) => {\r\n    if (i == undefined) {\r\n      i = 0\r\n    }\r\n    setload(true)\r\n    if (i == 0 || i == undefined || nxtoffset == 0) {\r\n      previousref.current.disabled = true\r\n    } else {\r\n      previousref.current.disabled = false\r\n    }\r\n    try {\r\n      axios.get(`${url}/stock/list?search=${searchname}&limit=20&offset=${i * 10}`).then((response) => {\r\n        console.log(response.data.data.medicines)\r\n        setvaccineslist(response.data.data.medicines)\r\n        let nxt = Number(i) + 1\r\n        setnxtoffset(nxt)\r\n        if (i != 0) {\r\n          let prev = i--\r\n          setprevoffset(prev)\r\n        }\r\n        setload(false)\r\n      }).catch(function error(e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        // setload(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      // setload(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    GetVaccines()\r\n  }, [searchname])\r\n  async function getnextpages(e) {\r\n    GetVaccines(e.target.value)\r\n  }\r\n  async function getpreviouspages(e) {\r\n    GetVaccines(e.target.value - 1)\r\n  }\r\n\r\n  const CalculateBStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.current_stock)\r\n    ))\r\n    return total\r\n  }\r\n  const CalculateTStock = (data) => {\r\n    let total = 0\r\n    data.map((item) => (\r\n      total += Number(item.qty)\r\n    ))\r\n    return total\r\n  }\r\n  const GetStatus = (data) => {\r\n    let currentstock = 0\r\n    data.stock_info.map((item) => (\r\n      currentstock += Number(item.current_stock)\r\n    ))\r\n    if (currentstock <= data.alert_stock_count) {\r\n      return 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  let c = 0\r\n  const toggle_detailsform = () => {\r\n    if (detailsform == 'none') {\r\n      setdetailsform('block')\r\n    }\r\n    if (detailsform === 'block') {\r\n      setdetailsform('none')\r\n      setindex()\r\n    }\r\n  }\r\n  return (\r\n    <div className='p-0 m-0 vaccinestockinfo'>\r\n      {/* <button className=\"button exportstock button-charcoal position-absolute\"><img src={process.env.PUBLIC_URL + \"/images/addiconwhite.png\"} alt='displaying_image' className=\"img-fluid\" style={{ width: `1.5rem` }} />Export Stock</button> */}\r\n      <div className='position-absolute searchbutton' style={{ top: '0.25rem', right: '1rem' }}>\r\n        <input type=\"text\" className=\" form-control d-inline vaccinesearch bg-pearl\" placeholder=\"Medicine Name\" onChange={(e) => { setsearchname(e.target.value); }} />\r\n        <button className=\"btn p-0 m-0 bg-transparent border-0 position-absolute\" style={{ width: '2rem', right: '0', left: '0', top: '0.25rem' }}><img src={process.env.PUBLIC_URL + \"/images/search.png\"} alt=\"displaying_image\" className=\"img-fluid p-0 m-0\" /></button>\r\n      </div>\r\n      <div className='text-start ms-5 text-charcoal fw-bold p-2'>Medicine Stock Info</div>\r\n      <div className='scroll scroll-y p-0 m-0' style={{ 'height': '57vh', minHeight: '57vh', maxHeight: '57vh' }}>\r\n        <table className=\"table datatable text-center\" >\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>ID</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Medicine Name</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>B.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>T.Stock</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'>Status</th>\r\n              <th rowSpan='2' className='p-0 m-0 px-1 text-charcoal75 fw-bold'></th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n            load ? (\r\n              <tr className='p-0 m-0'>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n                <td className='placeholder-glow'><div className='placeholder col-12 p-0 m-0 w-100 px-1'>Loading..</div></td>\r\n              </tr>\r\n            ) : (\r\n              vaccineslist == undefined || vaccineslist.length == 0 ? (\r\n                <tbody className='' >\r\n                  <tr>\r\n                    <td className='position-absolute text-charcoal fw-bolder start-0 end-0'>No Vaccines Found</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                <tbody className=''>\r\n                  {\r\n                    vaccineslist.map((data, i) => (\r\n                      <tr className={`align-middle text-center`}>\r\n                        <td className=' text-charcoal fw-bold'>{data.id}</td>\r\n                        <td className=' text-charcoal fw-bold'>{data.name && data.name !== null ? data.name : ''}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateBStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{CalculateTStock(data.stock_info)}</td>\r\n                        <td className=' text-charcoal fw-bold'>{\r\n                          GetStatus(data) == 1 ? (\r\n                            <img src={process.env.PUBLIC_URL + 'images/exclamation.png'} style={{ 'width': '1.5rem' }} />\r\n                          ) : (<></>)\r\n                        }</td>\r\n                        <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                          <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                        </td>\r\n                        <td className={` bg-${index == i ? 'lightred' : ''} p-0 m-0 text-charcoal fw-bold`}>\r\n                          <button className='btn p-0 m-0' onClick={() => { setindex(i); toggle_detailsform() }}>\r\n                            <img src={process.env.PUBLIC_URL + 'images/archivebox.png'} style={{ 'width': '1.5rem' }} />\r\n                          </button>\r\n                        </td>\r\n                        {\r\n                          index == i ? (\r\n                            <td className={`stockdetailsfrom bg-white border border-1 col-lg-10 rounded-4 shadow p-0 col-md-10 col-sm-10 col-10 col-xl-6 d-${index == i ? detailsform : 'none'} position-absolute start-0 end-0 top-0`}>\r\n                              <MedicinesectionItemDetails toggle_detailsform={toggle_detailsform} name={vaccineslist[i].name} data={vaccineslist[i].stock_info} />\r\n                            </td>\r\n                          ) : (<></>)\r\n                        }\r\n                      </tr>\r\n\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              )\r\n\r\n            )\r\n          }\r\n        </table>\r\n      </div>\r\n      <div className=\"container-fluid my-1\">\r\n        <div className=\"d-flex justify-content-center p-0 m-0 text-center\">\r\n          <button className=\"button me-2 border-charcoal p-0 m-0 px-1\" ref={previousref} value={prevoffset} onClick={(e) => { getpreviouspages(e); }} style={{ marginTop: '0.15rem' }}>Previous</button>\r\n\r\n          <div className=\"col-auto col-xl-auto col-md-8 col-lg-8 col-sm-auto p-0 m-0\">\r\n\r\n            {\r\n              pages ? (\r\n                pages.map((page, i) => (\r\n                  <button className={`btn ms-2 button-${nxtoffset - 1 == i ? 'charcoal' : 'pearl'}  shadow-${nxtoffset - 1 == i ? 'lg' : 'none'}`} ref={nextref} value={page} id={page} onClick={(e) => { GetVaccines(i) }} key={i}>{page}</button>\r\n                ))\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n\r\n            }\r\n          </div>\r\n          <button className={`btn border-charcoal p-0 m-0 px-1 ms-2`} ref={nextref} value={nxtoffset} onClick={(e) => { getnextpages(e); }} style={{ marginTop: '0.15rem' }}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction VaccinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  return (\r\n    <div className=' p-0 m-0 position-relative bg-pearl rounded-4'>\r\n      <h6 className='text-center text-charcoal fw-bold pt-2'>{props.name}</h6>\r\n      <hr className='p-0 m-0' />\r\n      <button className='btn-close position-absolute end-0 top-0 p-1 m-1' onClick={props.toggle_detailsform}></button>\r\n      <div className='p-0 m-0 scroll'>\r\n        <table className='table text-center scroll'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Channel</th>\r\n              <th>Batch No.</th>\r\n              <th>Manuf. Date</th>\r\n              <th>Expiry Date</th>\r\n              <th>Avl Stock</th>\r\n              <th>MRP in Rs.</th>\r\n              <th>Cost in Rs.</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.data.map((Data) => (\r\n                <tr className='p-0 m-0 px-1'>\r\n                  <td className='p-0 m-0 px-1'>{Data.id ? 'v' + Data.id : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.channel == 1 ? 'Pharmacy' : 'Clinic'}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.batch_no ? Data.batch_no : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mfd_date ? reversefunction(Data.mfd_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.expiry_date ? reversefunction(Data.expiry_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.current_stock ? Data.current_stock : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mrp ? Data.mrp : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.cost ? Data.cost : ''}</td>\r\n                </tr>\r\n              ))\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nfunction MedicinesectionItemDetails(props) {\r\n  const reversefunction = (date) => {\r\n    if (date) {\r\n      date = date.split(\"-\").reverse().join(\"-\")\r\n      return date\r\n    }\r\n  }\r\n  return (\r\n    <div className=' p-0 m-0 position-relative bg-pearl rounded-4'>\r\n      <h6 className='text-center text-charcoal fw-bold pt-2'>{props.name}</h6>\r\n      <hr className='p-0 m-0' />\r\n      <button className='btn-close position-absolute end-0 top-0 p-1 m-1' onClick={props.toggle_detailsform}></button>\r\n      <div className='p-0 m-0 scroll'>\r\n        <table className='table text-center scroll'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Channel</th>\r\n              <th>Batch No.</th>\r\n              <th>Manuf. Date</th>\r\n              <th>Expiry Date</th>\r\n              <th>Avl Stock</th>\r\n              <th>MRP in Rs.</th>\r\n              <th>Cost in Rs.</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.data.map((Data) => (\r\n                <tr className='p-0 m-0 px-1'>\r\n                  <td className='p-0 m-0 px-1'>{Data.id ? 'm' + Data.id : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.channel == 1 ? 'Pharmacy' : 'Clinic'}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.batch_no ? Data.batch_no : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mfd_date ? reversefunction(Data.mfd_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.expiry_date ? reversefunction(Data.expiry_date) : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.current_stock ? Data.current_stock : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.mrp ? Data.mrp : ''}</td>\r\n                  <td className='p-0 m-0 px-1'>{Data.cost ? Data.cost : ''}</td>\r\n                </tr>\r\n              ))\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport { Stocksection };\r\n\r\n\r\n\r\n",[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\SelectedAppointments.jsx",["699","700","701","702","703","704","705","706","707","708","709"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Payments } from './Payments.jsx'\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport Notiflix from 'notiflix';\r\nimport { URL } from '../../index'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/appointment.css'\r\nimport { Bill } from './Bill'\r\n\r\nconst SelectedAppointments = (props) => {\r\n  const url = useContext(URL);\r\n  let adminid = localStorage.getItem('id')\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [d_form, setd_form] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [paymentindex, setpaymentindex] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n  const closeappointmentform = () => {\r\n\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      setd_form()\r\n    }\r\n  }\r\n  const toggle_payments = () => {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentindex()\r\n    }\r\n  }\r\n  const toggle_bill = () => {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n    if (billform === 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  const [tableindex, settableindex] = useState()\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Notiflix.Loading.circle('Updating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E'\r\n        }\r\n        )\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          props.fetchallAppointmentslist()\r\n          Notiflix.Loading.remove()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        alert(e)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  console.log(paymentindex)\r\n  return (\r\n    <>\r\n      {\r\n        props.isselectedLoading == true ? (\r\n          <div className='container position-absolute start-0 end-0'>\r\n            <h4>Hold on its loading</h4>\r\n            <div class=\"spinner-grow bg-danger col-2\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n\r\n          props.appointmentdata.length == 0 ? (\r\n            <div className=\"container text-charcoal fs-4 position-absolute start-0 end-0\">\r\n              <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n            </div>\r\n          ) : (\r\n\r\n            props.appointmentdata.map((data, key) => (\r\n              <tr id={key}>\r\n                <td>\r\n                  <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} onClick={(e) => { settableindex(key); openapppointmentform(); }} className=\"btn p-0 m-0\" />\r\n                </td>\r\n                <td>\r\n                  <select className={`py-1 fw-bold rounded-pill text-center button-${props.status_color(data.appointment_status)}`} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                    <option className=\"button\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                    <option className=\"button-lightred\" value='1'>Pending</option>\r\n                    <option className=\"button-lightblue\" value='2'>Booked</option>\r\n                    <option className=\"button-lightred\" value='3'>Cancelled</option>\r\n                    <option className=\"button-pearl\" value='4'>QR Generated</option>\r\n                    <option className=\"button-brandy\" value='5'>Checked_in</option>\r\n                    <option className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                    <option className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                    <option className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                    <option className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                    <option className=\"button-lightgreen\" value='10'>Completed</option>\r\n                  </select>\r\n                </td>\r\n                {/* <td><button className={`btn button-${props.status_color(data.appointment_status)} text-charcoal fw-bold rounded-5`}>{props.status(data.appointment_status)}</button></td> */}\r\n                <td>{data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                <td>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A'}</td>\r\n                <td>{data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"N/A\"}</td>\r\n                <td>{data.timeslot.date}</td>\r\n                <td>{props.tConvert(data.timeslot.time_from)}</td>\r\n                <td>{data.total_amount}</td>\r\n                <td><AmountPaid appointmentData={data} /></td>\r\n                <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                  <div className='vr rounded-2 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </td>\r\n                <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td>\r\n                <td>{data.follow_up_date ? data.follow_up_date : ''}</td>\r\n                <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td>\r\n                <td><div className=\"dropdown text-decoration-none bg-transparent\">\r\n                  <button className=\"btn btn-white dropdown-toggle text-decoration-none\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                  </button>\r\n                  <ul className=\"dropdown-menu text-decoration-none bg-white\" style={{ '-webkit-appearance': 'none', 'appearance': 'none' }}>\r\n                    <li  className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}>Bill</li>\r\n                    <li  className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setpaymentindex(key); toggle_payments(); }}>Payments</li>\r\n                    {/* <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li> */}\r\n                  </ul>\r\n                </div></td>\r\n                {\r\n                  tableindex == key ? (\r\n                    <td className={`UpdateAppointment d-${tableindex == key ? appointmentform : 'none'} position-absolute`} style={{ top: '-10rem' }}>\r\n                      <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}\r\n                        patientid={data.patient && data.patient.id !== null ? data.patient.id : 'N/A'} appointmentid={data.id && data.id !== null ? data.id : 'N/A'}\r\n                        closeappointmentform={closeappointmentform} doctorid={props.doctorid ? props.doctorid : 'N/A'}\r\n                        fetchapi={props.fetchapi}\r\n                        appointmentdoctorid={data.doctor.id}\r\n                        appointmentdate={data.appointment_date}\r\n                        appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  billindex == key ? (\r\n                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 top-0 col-sm-12 col-12 col-xl-6 border border-2 rounded-2 shadow position-absolute`} style={{ zIndex: '3020', marginTop: '6rem' }}>\r\n                      <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        toggle_bill={toggle_bill}\r\n                        patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        appointmentdata={props.getAppointments[key]}\r\n                        appointmentid={data.id}\r\n                        doctorfee={data.doctor.consulationFee} /></td>\r\n                  ) : (<></>)\r\n                }\r\n                {\r\n                  paymentindex == key ? (\r\n                    <td className={`top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-10 col-10 col-xl-6 rounded-2 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                      <Payments\r\n                        toggle_payments={toggle_payments}\r\n                        appointmentdata={props.appointmentdata[key]}\r\n                        fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                        patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                        patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                    </td>\r\n                  ) : (<></>)\r\n                }\r\n\r\n              </tr>\r\n            ))\r\n          )\r\n        )\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SelectedAppointments }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\AllAppointmentslist.jsx",["710","711","712","713","714","715","716","717","718","719","720","721"],[],"import React from 'react'\r\nimport { useState, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport AmountPaid from '../Today/AmountPaid'\r\nimport '../../../node_modules/bootstrap/js/dist/dropdown'\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport { Bill } from './Bill'\r\nimport '../../css/appointment.css'\r\nimport '../../css/bootstrap.css'\r\nimport '../../../node_modules/bootstrap/js/dist/dropdown'\r\nimport { Payments } from './Payments.jsx'\r\nimport Notiflix from 'notiflix';\r\n//COntext APIs\r\nimport { URL } from '../../index'\r\n\r\nconst AllAppointmentslist = (props) => {\r\n    const url = useContext(URL);\r\n    let adminid = localStorage.getItem('id')\r\n    const [appointmentform, setappointmentform] = useState(\"none\");\r\n    const [paymentsform, setpaymentsform] = useState('none')\r\n    const [paymentindex, setpaymentindex] = useState()\r\n    const [tableindex, settableindex] = useState()\r\n    const [billindex, setbillindex] = useState()\r\n    const [billform, setbillform] = useState('none')\r\n\r\n    const closeappointmentform = () => {\r\n        if (appointmentform === \"block\") {\r\n            setappointmentform(\"none\");\r\n            settableindex()\r\n        }\r\n    };\r\n    const openapppointmentform = () => {\r\n        if (appointmentform === \"none\") {\r\n            setappointmentform(\"block\");\r\n        }\r\n    }\r\n    const toggle_payments = () => {\r\n        if (paymentsform === 'none') {\r\n            setpaymentsform('block')\r\n        }\r\n        if (paymentsform === 'block') {\r\n            setpaymentsform('none')\r\n            setpaymentindex()\r\n        }\r\n    }\r\n    const toggle_bill = () => {\r\n        if (billform === 'none') {\r\n            setbillform('block')\r\n        }\r\n        if (billform === 'block') {\r\n            setbillform('none')\r\n            setbillindex()\r\n        }\r\n    }\r\n    const reversefunction = (date) => {\r\n        date = date.split(\"-\").reverse().join(\"-\")\r\n        return date\r\n    }\r\n    async function UpadteStatus(e) {\r\n        if (e.target.value && adminid && e.target.name) {\r\n            try {\r\n                Notiflix.Loading.circle('Updating Appointment Status', {\r\n                    backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                    svgColor: '#96351E'\r\n                }\r\n                )\r\n                await axios.post(`${url}/appointment/change/status`, {\r\n                    appointment_id: e.target.name,\r\n                    status: e.target.value,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    props.fetchallAppointmentslist()\r\n                    Notiflix.Loading.remove()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                Notiflix.Loading.remove()\r\n            }\r\n        } else {\r\n            Notiflix.Notify.alert('Please try Again')\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n    console.log(paymentindex)\r\n    return (\r\n        <>\r\n            {\r\n                props.isLoading == true ? (\r\n\r\n                    <div className='container position-absolute start-0 end-0' >\r\n                        <h4>Hold on its Loading</h4>\r\n                        <div className=\"spinner-grow bg-secondary col-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (props.getAppointments.length == 0 ? (\r\n\r\n                    <div className=\"container text-charcoal fs-4 position-absolute start-0 end-0\">\r\n                        <p className=\"p-0 m-0 text-charcoal75 fw-bolder mt-3\">No Appointments found for the selected Date & Doctor</p>\r\n                    </div>\r\n\r\n                ) : (\r\n\r\n                    props.getAppointments.map((data, key) => (\r\n                        <tr id={key} key={key} className='align-middle'>\r\n                            <td className={`bg-${tableindex == key ? 'lightyellow' : ''}`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} onClick={(e) => { openapppointmentform(); settableindex(key) }} className=\"btn p-0 m-0\" />\r\n                            </td>\r\n                            <td>\r\n                                <select className={`fw-bold py-1 rounded-pill text-center button-${props.status_color(data.appointment_status)}`} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                    <option className=\"button\" selected disabled>{props.status(data.appointment_status)}</option>\r\n                                    <option className=\"button-lightred\" value='1'>Pending</option>\r\n                                    <option className=\"button-lightblue\" value='2'>Booked</option>\r\n                                    <option className=\"button-lightred\" value='3'>Cancelled</option>\r\n                                    <option className=\"button-pearl\" value='4'>QR Generated</option>\r\n                                    <option className=\"button-brandy\" value='5'>Checked_in</option>\r\n                                    <option className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                                    <option className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                                    <option className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                                    <option className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                                    <option className=\"button-lightgreen\" value='10'>Completed</option>\r\n                                </select>\r\n                            </td>\r\n                            <td className='text-charcoal fw-bold'>{data.patient != null && data.patient.full_name != null ? data.patient.full_name : 'N/A'}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.doctor != null && data.doctor.doctor_name != null ? data.doctor.doctor_name : 'N/A'}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"N/A\"}</td>\r\n                            <td className='text-charcoal fw-bold'>{reversefunction(data.timeslot.date)}</td>\r\n                            <td className='text-charcoal fw-bold'>{props.tConvert(data.timeslot.time_from)}</td>\r\n                            <td className='text-charcoal fw-bold'>{data.total_amount}</td>\r\n                            <td className='text-charcoal fw-bold'><AmountPaid appointmentData={data} /></td>\r\n                            <td className='p-0 m-0 text-charcoal fw-bold align-items-center '>\r\n                                <div className='vr rounded-2 h-100 align-self-center py-3' style={{ padding: '1px' }}></div>\r\n                            </td>\r\n                            <td><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className='m-0 p-0' /> </td>\r\n                            <td>{reversefunction(data.follow_up_date ? data.follow_up_date : '')}</td>\r\n                            <td> <img src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} className=\"me-1 m-0 p-0\" /> </td>\r\n                            <td><div className=\"dropdown text-decoration-none\">\r\n                                <button className=\"btn btn-white dropdown-toggle text-decoration-none\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} />\r\n                                </button>\r\n                                <ul className=\"dropdown-menu text-decoration-none p-0 m-0\" style={{ '-webkit-appearance': 'none' }}>\r\n                                    <li className='dropdown-item d-flex border-bottom p-0 m-0 align-items-center' onClick={() => { setbillindex(key); toggle_bill() }}><img className='m-2 img-fluid' style={{ 'width': '1.8rem' }} src={process.env.PUBLIC_URL + 'images/bill.png'} />Bill</li>\r\n                                    <li className='dropdown-item d-flex  p-0 m-0 align-items-center' onClick={() => { setpaymentindex(key); toggle_payments(); }}><img className='m-2 img-fluid' style={{ 'width': '1.6rem' }} src={process.env.PUBLIC_URL + 'images/rupee.png'} />Payments</li>\r\n                                    {/* <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li> */}\r\n                                </ul>\r\n                            </div></td>\r\n                            {\r\n                                tableindex == key ? (\r\n                                    <td className={` d-${tableindex == key ? appointmentform : 'none'} bg-seashell col-lg-8 col-xl-6 col-md-8 col-sm-10 start-0 end-0  mx-auto top-0 border border-1 rounded-3 position-absolute`} style={{ zIndex: '3',marginTop:'10rem' }}>\r\n                                        <UpdateAppointment fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} closeappointmentform={closeappointmentform} doctorid={props.doctorid} fetchapi={props.fetchapi} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} />\r\n                                    </td>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                billindex == key ? (\r\n                                    <td className={`bill d-${billindex == key ? billform : 'none'} bg-seashell col-lg-8 col-md-10 start-0 mx-auto end-0 top-0 col-sm-12 col-10 col-xl-6 border border-2 rounded-2 shadow position-absolute`} style={{ zIndex: '3', marginTop: '6rem' }}>\r\n                                        <Bill fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            toggle_bill={toggle_bill}\r\n                                            patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            appointmentid={data.id}\r\n                                            doctorfee={data.doctor.consulationFee} /></td>\r\n                                ) : (<></>)\r\n                            }\r\n                            {\r\n                                paymentindex == key ? (\r\n                                    <td className={`top-0 start-0 end-0 mx-auto bg-seashell col-lg-6 col-md-8 col-sm-10 col-10 col-xl-6 rounded-2 border border-1 position-absolute shadow  d-${paymentindex == key ? paymentsform : 'none'}`} style={{ marginTop: '10rem' }}>\r\n                                        <Payments\r\n                                            toggle_payments={toggle_payments}\r\n                                            appointmentdata={props.getAppointments[key]}\r\n                                            fetchallAppointmentslist={props.fetchallAppointmentslist}\r\n                                            patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"}\r\n                                            patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                    </td>\r\n                                ) : (<></>)\r\n                            }\r\n\r\n                        </tr>\r\n                    ))\r\n                )\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport { AllAppointmentslist }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Doctors\\UpdateDoctor.jsx",[],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Dsr\\Appointments_Dsr.jsx",["722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Patients\\UpdatePatient.jsx",["746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n// import {useJsApiLoader, Autocomplete } from '@react-google-maps/api'\r\n\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete'\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\"\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\n\r\nconst UpdatePatient = (props) => {\r\n    const url = useContext(URL);\r\n    let adminid = localStorage.getItem('id')\r\n    const [fullname, setfullname] = useState()\r\n    const [countrycode, setcountrycode] = useState()\r\n    const [phonenumber, setphonenumber] = useState()\r\n    const [address, setaddress] = useState()\r\n    const [DOB, setDOB] = useState()\r\n    const [gender, setgender] = useState()\r\n    const [email, setemail] = useState()\r\n    const [pincode, setpincode] = useState()\r\n    const [place, setplace] = useState()\r\n    const [main, setmain] = useState()\r\n    const [relation, setrelation] = useState()\r\n    const [linkid, setlinkid] = useState()\r\n    const [lat, setlat] = useState()\r\n    const [lng, setlng] = useState()\r\n\r\n    const [mainaccount, setmainaccount] = useState([])\r\n    const [display, setdisplay] = useState(\"none\")\r\n    const [accountinput, setaccountinput] = useState()\r\n    const [displaymainaccount, setdisplaymainaccount] = useState('none')\r\n    const ismainref = useRef()\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    async function currentvalue() {\r\n        setgender(props.data.gender)\r\n        if (props.data.address[0] && props.data.address[0].address_line2) {\r\n            setaddress(props.data.address[0].address_line1 + props.data.address[0].address_line2)\r\n        } else if (props.data.address[0] && props.data.address[0].address_line1) {\r\n            setaddress(props.data.address[0].address_line1)\r\n        } else {\r\n            setaddress('Address not saved')\r\n        }\r\n        props.phonecountrycode ? setcountrycode(props.phonecountrycode) : setcountrycode()\r\n        props.PhoneNo ? setphonenumber(props.PhoneNo) : setphonenumber()\r\n        props.full_name ? setfullname(props.full_name) : setfullname('Not Saved Currently')\r\n        props.dob ? setDOB(props.dob) : setDOB()\r\n        props.pincode ? setpincode(props.pincode) : setpincode()\r\n        props.email ? setemail(props.email) : setemail('Not Saved Currently')\r\n        props.location ? setplace(props.location) : setplace()\r\n        props.main ? setmain(props.main) : setmain()\r\n        props.latitude ? setlat(props.latitude) : setlat()\r\n        props.longitude ? setlng(props.longitude) : setlng()\r\n        if (props.parent === null) {\r\n            ismainref.current.value = '1'\r\n            setmain('1')\r\n        } else {\r\n            ismainref.current.value = '2'\r\n            setmain('2')\r\n            setdisplay('block')\r\n            setrelation(props.relation)\r\n        }\r\n\r\n        if (props.data.parent) {\r\n            if (props.data.parent.full_name || props.data.parent.email) {\r\n                setaccountinput(props.data.parent.full_name + \" | \" + props.data.parent.id + \" | \" + props.data.parent.email)\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        currentvalue()\r\n    }, [props.patient_id])\r\n\r\n\r\n    const d = (e) => {\r\n        if (e.target.value == 1) {\r\n            setdisplay('none')\r\n        }\r\n        if (e.target.value == 2) {\r\n            setdisplay('flex')\r\n        }\r\n    }\r\n\r\n    const get_value = (e) => {\r\n        e.preventDefault()\r\n        setaccountinput(e.target.value)\r\n        setlinkid(e.target.name)\r\n        setdisplaymainaccount('none')\r\n    }\r\n\r\n    const searchmainaccount = (e) => {\r\n        setaccountinput(e.target.value)\r\n        axios.get(`${url}/patient/list?search=${accountinput}&limit=5&offset=0`).then((response) => {\r\n            setmainaccount(response.data.data)\r\n            console.log(response.data.data)\r\n        })\r\n        if (accountinput && accountinput.length > 1) {\r\n            setdisplaymainaccount('block');\r\n            setlinkid()\r\n        } else {\r\n            setdisplaymainaccount('none');\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(props.patientid, fullname, countrycode, phonenumber, DOB, gender, props.gender, email, address, pincode, props.location, place, main, adminid, props.linkid, props.relation)\r\n    async function UpdatePatient() {\r\n        console.log(props.patientid, fullname, countrycode, phonenumber, DOB, gender, email, address, pincode, props.location, place, main, adminid, props.linkid, props.relation)\r\n        try {\r\n            if (fullname && countrycode && phonenumber && DOB && email && address && pincode && main && adminid) {\r\n                await axios.post(`https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/api/connect/update/patient`, {\r\n                    patient_id: props.patientid,\r\n                    full_name: fullname,\r\n                    phone_country_code: countrycode,\r\n                    phone_number: phonenumber,\r\n                    dob: DOB,\r\n                    gender: gender,\r\n                    email: email,\r\n                    address: address,\r\n                    pin_code: pincode,\r\n                    location: props.location ? props.location : place,\r\n                    is_main: main,\r\n                    latitude: props.latitude ? props.latitude : lat,\r\n                    longitude: props.longitude ? props.longitude : lat,\r\n                    relation: main == 2 ? props.relation ? props.relation : relation : '',\r\n                    link_id: main == 2 ? props.linkid ? props.linkid : linkid : '',\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    Notiflix.Notify.success(response.data.message);\r\n                    props.getAllPatients(0)\r\n                    props.CloseUpdatePatient()\r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais');\r\n            }\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Patient Details`,\r\n            `Do you surely want to update ${props.data.full_name}'s Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdatePatient()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n    const [data, setData] = useState(\"\");\r\n    useEffect(() => {\r\n        data === \"\" ? setData(\"\") : setData(data);\r\n        setplace(data.label)\r\n    }, [data]);\r\n\r\n    if (place) {\r\n        geocodeByAddress(place).then(results => getLatLng(results[0])).then(({ lat, lng }) => { setlat(lat); setlng(lng) });\r\n    }\r\n    console.log(props.data)\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center mt-2 position-relative\">Update Patient Details </h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseUpdatePatient} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group col-10 m-auto py-3\">\r\n                    <label htmlFor=\"inputEmail4\" className=\"mb-2\">Enter Number</label>\r\n                    <div className=\"row m-0 p-0 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <select name=\"countryCode\" className=\"form-control\" value={countrycode ? countrycode : ''} onChange={(e) => { setcountrycode(e.target.value) }}>\r\n                                <option defaultValue='Country Code' >Country Code</option>\r\n                                <option data-countryCode=\"DZ\" value=\"213\">Algeria (+213)</option>\r\n                                <option data-countryCode=\"AD\" value=\"376\">Andorra (+376)</option>\r\n                                <option data-countryCode=\"AO\" value=\"244\">Angola (+244)</option>\r\n                                <option data-countryCode=\"AI\" value=\"1264\">Anguilla (+1264)</option>\r\n                                <option data-countryCode=\"AG\" value=\"1268\">Antigua &amp; Barbuda (+1268)</option>\r\n                                <option data-countryCode=\"AR\" value=\"54\">Argentina (+54)</option>\r\n                                <option data-countryCode=\"AM\" value=\"374\">Armenia (+374)</option>\r\n                                <option data-countryCode=\"AW\" value=\"297\">Aruba (+297)</option>\r\n                                <option data-countryCode=\"AU\" value=\"61\">Australia (+61)</option>\r\n                                <option data-countryCode=\"AT\" value=\"43\">Austria (+43)</option>\r\n                                <option data-countryCode=\"AZ\" value=\"994\">Azerbaijan (+994)</option>\r\n                                <option data-countryCode=\"BS\" value=\"1242\">Bahamas (+1242)</option>\r\n                                <option data-countryCode=\"BH\" value=\"973\">Bahrain (+973)</option>\r\n                                <option data-countryCode=\"BD\" value=\"880\">Bangladesh (+880)</option>\r\n                                <option data-countryCode=\"BB\" value=\"1246\">Barbados (+1246)</option>\r\n                                <option data-countryCode=\"BY\" value=\"375\">Belarus (+375)</option>\r\n                                <option data-countryCode=\"BE\" value=\"32\">Belgium (+32)</option>\r\n                                <option data-countryCode=\"BZ\" value=\"501\">Belize (+501)</option>\r\n                                <option data-countryCode=\"BJ\" value=\"229\">Benin (+229)</option>\r\n                                <option data-countryCode=\"BM\" value=\"1441\">Bermuda (+1441)</option>\r\n                                <option data-countryCode=\"BT\" value=\"975\">Bhutan (+975)</option>\r\n                                <option data-countryCode=\"BO\" value=\"591\">Bolivia (+591)</option>\r\n                                <option data-countryCode=\"BA\" value=\"387\">Bosnia Herzegovina (+387)</option>\r\n                                <option data-countryCode=\"BW\" value=\"267\">Botswana (+267)</option>\r\n                                <option data-countryCode=\"BR\" value=\"55\">Brazil (+55)</option>\r\n                                <option data-countryCode=\"BN\" value=\"673\">Brunei (+673)</option>\r\n                                <option data-countryCode=\"BG\" value=\"359\">Bulgaria (+359)</option>\r\n                                <option data-countryCode=\"BF\" value=\"226\">Burkina Faso (+226)</option>\r\n                                <option data-countryCode=\"BI\" value=\"257\">Burundi (+257)</option>\r\n                                <option data-countryCode=\"KH\" value=\"855\">Cambodia (+855)</option>\r\n                                <option data-countryCode=\"CM\" value=\"237\">Cameroon (+237)</option>\r\n                                <option data-countryCode=\"CA\" value=\"1\">Canada (+1)</option>\r\n                                <option data-countryCode=\"CV\" value=\"238\">Cape Verde Islands (+238)</option>\r\n                                <option data-countryCode=\"KY\" value=\"1345\">Cayman Islands (+1345)</option>\r\n                                <option data-countryCode=\"CF\" value=\"236\">Central African Republic (+236)</option>\r\n                                <option data-countryCode=\"CL\" value=\"56\">Chile (+56)</option>\r\n                                <option data-countryCode=\"CN\" value=\"86\">China (+86)</option>\r\n                                <option data-countryCode=\"CO\" value=\"57\">Colombia (+57)</option>\r\n                                <option data-countryCode=\"KM\" value=\"269\">Comoros (+269)</option>\r\n                                <option data-countryCode=\"CG\" value=\"242\">Congo (+242)</option>\r\n                                <option data-countryCode=\"CK\" value=\"682\">Cook Islands (+682)</option>\r\n                                <option data-countryCode=\"CR\" value=\"506\">Costa Rica (+506)</option>\r\n                                <option data-countryCode=\"HR\" value=\"385\">Croatia (+385)</option>\r\n                                <option data-countryCode=\"CU\" value=\"53\">Cuba (+53)</option>\r\n                                <option data-countryCode=\"CY\" value=\"90392\">Cyprus North (+90392)</option>\r\n                                <option data-countryCode=\"CY\" value=\"357\">Cyprus South (+357)</option>\r\n                                <option data-countryCode=\"CZ\" value=\"42\">Czech Republic (+42)</option>\r\n                                <option data-countryCode=\"DK\" value=\"45\">Denmark (+45)</option>\r\n                                <option data-countryCode=\"DJ\" value=\"253\">Djibouti (+253)</option>\r\n                                <option data-countryCode=\"DM\" value=\"1809\">Dominica (+1809)</option>\r\n                                <option data-countryCode=\"DO\" value=\"1809\">Dominican Republic (+1809)</option>\r\n                                <option data-countryCode=\"EC\" value=\"593\">Ecuador (+593)</option>\r\n                                <option data-countryCode=\"EG\" value=\"20\">Egypt (+20)</option>\r\n                                <option data-countryCode=\"SV\" value=\"503\">El Salvador (+503)</option>\r\n                                <option data-countryCode=\"GQ\" value=\"240\">Equatorial Guinea (+240)</option>\r\n                                <option data-countryCode=\"ER\" value=\"291\">Eritrea (+291)</option>\r\n                                <option data-countryCode=\"EE\" value=\"372\">Estonia (+372)</option>\r\n                                <option data-countryCode=\"ET\" value=\"251\">Ethiopia (+251)</option>\r\n                                <option data-countryCode=\"FK\" value=\"500\">Falkland Islands (+500)</option>\r\n                                <option data-countryCode=\"FO\" value=\"298\">Faroe Islands (+298)</option>\r\n                                <option data-countryCode=\"FJ\" value=\"679\">Fiji (+679)</option>\r\n                                <option data-countryCode=\"FI\" value=\"358\">Finland (+358)</option>\r\n                                <option data-countryCode=\"FR\" value=\"33\">France (+33)</option>\r\n                                <option data-countryCode=\"GF\" value=\"594\">French Guiana (+594)</option>\r\n                                <option data-countryCode=\"PF\" value=\"689\">French Polynesia (+689)</option>\r\n                                <option data-countryCode=\"GA\" value=\"241\">Gabon (+241)</option>\r\n                                <option data-countryCode=\"GM\" value=\"220\">Gambia (+220)</option>\r\n                                <option data-countryCode=\"GE\" value=\"7880\">Georgia (+7880)</option>\r\n                                <option data-countryCode=\"DE\" value=\"49\">Germany (+49)</option>\r\n                                <option data-countryCode=\"GH\" value=\"233\">Ghana (+233)</option>\r\n                                <option data-countryCode=\"GI\" value=\"350\">Gibraltar (+350)</option>\r\n                                <option data-countryCode=\"GR\" value=\"30\">Greece (+30)</option>\r\n                                <option data-countryCode=\"GL\" value=\"299\">Greenland (+299)</option>\r\n                                <option data-countryCode=\"GD\" value=\"1473\">Grenada (+1473)</option>\r\n                                <option data-countryCode=\"GP\" value=\"590\">Guadeloupe (+590)</option>\r\n                                <option data-countryCode=\"GU\" value=\"671\">Guam (+671)</option>\r\n                                <option data-countryCode=\"GT\" value=\"502\">Guatemala (+502)</option>\r\n                                <option data-countryCode=\"GN\" value=\"224\">Guinea (+224)</option>\r\n                                <option data-countryCode=\"GW\" value=\"245\">Guinea - Bissau (+245)</option>\r\n                                <option data-countryCode=\"GY\" value=\"592\">Guyana (+592)</option>\r\n                                <option data-countryCode=\"HT\" value=\"509\">Haiti (+509)</option>\r\n                                <option data-countryCode=\"HN\" value=\"504\">Honduras (+504)</option>\r\n                                <option data-countryCode=\"HK\" value=\"852\">Hong Kong (+852)</option>\r\n                                <option data-countryCode=\"HU\" value=\"36\">Hungary (+36)</option>\r\n                                <option data-countryCode=\"IS\" value=\"354\">Iceland (+354)</option>\r\n                                <option data-countryCode=\"IN\" value=\"91\">India (+91)</option>\r\n                                <option data-countryCode=\"ID\" value=\"62\">Indonesia (+62)</option>\r\n                                <option data-countryCode=\"IR\" value=\"98\">Iran (+98)</option>\r\n                                <option data-countryCode=\"IQ\" value=\"964\">Iraq (+964)</option>\r\n                                <option data-countryCode=\"IE\" value=\"353\">Ireland (+353)</option>\r\n                                <option data-countryCode=\"IL\" value=\"972\">Israel (+972)</option>\r\n                                <option data-countryCode=\"IT\" value=\"39\">Italy (+39)</option>\r\n                                <option data-countryCode=\"JM\" value=\"1876\">Jamaica (+1876)</option>\r\n                                <option data-countryCode=\"JP\" value=\"81\">Japan (+81)</option>\r\n                                <option data-countryCode=\"JO\" value=\"962\">Jordan (+962)</option>\r\n                                <option data-countryCode=\"KZ\" value=\"7\">Kazakhstan (+7)</option>\r\n                                <option data-countryCode=\"KE\" value=\"254\">Kenya (+254)</option>\r\n                                <option data-countryCode=\"KI\" value=\"686\">Kiribati (+686)</option>\r\n                                <option data-countryCode=\"KP\" value=\"850\">Korea North (+850)</option>\r\n                                <option data-countryCode=\"KR\" value=\"82\">Korea South (+82)</option>\r\n                                <option data-countryCode=\"KW\" value=\"965\">Kuwait (+965)</option>\r\n                                <option data-countryCode=\"KG\" value=\"996\">Kyrgyzstan (+996)</option>\r\n                                <option data-countryCode=\"LA\" value=\"856\">Laos (+856)</option>\r\n                                <option data-countryCode=\"LV\" value=\"371\">Latvia (+371)</option>\r\n                                <option data-countryCode=\"LB\" value=\"961\">Lebanon (+961)</option>\r\n                                <option data-countryCode=\"LS\" value=\"266\">Lesotho (+266)</option>\r\n                                <option data-countryCode=\"LR\" value=\"231\">Liberia (+231)</option>\r\n                                <option data-countryCode=\"LY\" value=\"218\">Libya (+218)</option>\r\n                                <option data-countryCode=\"LI\" value=\"417\">Liechtenstein (+417)</option>\r\n                                <option data-countryCode=\"LT\" value=\"370\">Lithuania (+370)</option>\r\n                                <option data-countryCode=\"LU\" value=\"352\">Luxembourg (+352)</option>\r\n                                <option data-countryCode=\"MO\" value=\"853\">Macao (+853)</option>\r\n                                <option data-countryCode=\"MK\" value=\"389\">Macedonia (+389)</option>\r\n                                <option data-countryCode=\"MG\" value=\"261\">Madagascar (+261)</option>\r\n                                <option data-countryCode=\"MW\" value=\"265\">Malawi (+265)</option>\r\n                                <option data-countryCode=\"MY\" value=\"60\">Malaysia (+60)</option>\r\n                                <option data-countryCode=\"MV\" value=\"960\">Maldives (+960)</option>\r\n                                <option data-countryCode=\"ML\" value=\"223\">Mali (+223)</option>\r\n                                <option data-countryCode=\"MT\" value=\"356\">Malta (+356)</option>\r\n                                <option data-countryCode=\"MH\" value=\"692\">Marshall Islands (+692)</option>\r\n                                <option data-countryCode=\"MQ\" value=\"596\">Martinique (+596)</option>\r\n                                <option data-countryCode=\"MR\" value=\"222\">Mauritania (+222)</option>\r\n                                <option data-countryCode=\"YT\" value=\"269\">Mayotte (+269)</option>\r\n                                <option data-countryCode=\"MX\" value=\"52\">Mexico (+52)</option>\r\n                                <option data-countryCode=\"FM\" value=\"691\">Micronesia (+691)</option>\r\n                                <option data-countryCode=\"MD\" value=\"373\">Moldova (+373)</option>\r\n                                <option data-countryCode=\"MC\" value=\"377\">Monaco (+377)</option>\r\n                                <option data-countryCode=\"MN\" value=\"976\">Mongolia (+976)</option>\r\n                                <option data-countryCode=\"MS\" value=\"1664\">Montserrat (+1664)</option>\r\n                                <option data-countryCode=\"MA\" value=\"212\">Morocco (+212)</option>\r\n                                <option data-countryCode=\"MZ\" value=\"258\">Mozambique (+258)</option>\r\n                                <option data-countryCode=\"MN\" value=\"95\">Myanmar (+95)</option>\r\n                                <option data-countryCode=\"NA\" value=\"264\">Namibia (+264)</option>\r\n                                <option data-countryCode=\"NR\" value=\"674\">Nauru (+674)</option>\r\n                                <option data-countryCode=\"NP\" value=\"977\">Nepal (+977)</option>\r\n                                <option data-countryCode=\"NL\" value=\"31\">Netherlands (+31)</option>\r\n                                <option data-countryCode=\"NC\" value=\"687\">New Caledonia (+687)</option>\r\n                                <option data-countryCode=\"NZ\" value=\"64\">New Zealand (+64)</option>\r\n                                <option data-countryCode=\"NI\" value=\"505\">Nicaragua (+505)</option>\r\n                                <option data-countryCode=\"NE\" value=\"227\">Niger (+227)</option>\r\n                                <option data-countryCode=\"NG\" value=\"234\">Nigeria (+234)</option>\r\n                                <option data-countryCode=\"NU\" value=\"683\">Niue (+683)</option>\r\n                                <option data-countryCode=\"NF\" value=\"672\">Norfolk Islands (+672)</option>\r\n                                <option data-countryCode=\"NP\" value=\"670\">Northern Marianas (+670)</option>\r\n                                <option data-countryCode=\"NO\" value=\"47\">Norway (+47)</option>\r\n                                <option data-countryCode=\"OM\" value=\"968\">Oman (+968)</option>\r\n                                <option data-countryCode=\"PW\" value=\"680\">Palau (+680)</option>\r\n                                <option data-countryCode=\"PA\" value=\"507\">Panama (+507)</option>\r\n                                <option data-countryCode=\"PG\" value=\"675\">Papua New Guinea (+675)</option>\r\n                                <option data-countryCode=\"PY\" value=\"595\">Paraguay (+595)</option>\r\n                                <option data-countryCode=\"PE\" value=\"51\">Peru (+51)</option>\r\n                                <option data-countryCode=\"PH\" value=\"63\">Philippines (+63)</option>\r\n                                <option data-countryCode=\"PL\" value=\"48\">Poland (+48)</option>\r\n                                <option data-countryCode=\"PT\" value=\"351\">Portugal (+351)</option>\r\n                                <option data-countryCode=\"PR\" value=\"1787\">Puerto Rico (+1787)</option>\r\n                                <option data-countryCode=\"QA\" value=\"974\">Qatar (+974)</option>\r\n                                <option data-countryCode=\"RE\" value=\"262\">Reunion (+262)</option>\r\n                                <option data-countryCode=\"RO\" value=\"40\">Romania (+40)</option>\r\n                                <option data-countryCode=\"RU\" value=\"7\">Russia (+7)</option>\r\n                                <option data-countryCode=\"RW\" value=\"250\">Rwanda (+250)</option>\r\n                                <option data-countryCode=\"SM\" value=\"378\">San Marino (+378)</option>\r\n                                <option data-countryCode=\"ST\" value=\"239\">Sao Tome &amp; Principe (+239)</option>\r\n                                <option data-countryCode=\"SA\" value=\"966\">Saudi Arabia (+966)</option>\r\n                                <option data-countryCode=\"SN\" value=\"221\">Senegal (+221)</option>\r\n                                <option data-countryCode=\"CS\" value=\"381\">Serbia (+381)</option>\r\n                                <option data-countryCode=\"SC\" value=\"248\">Seychelles (+248)</option>\r\n                                <option data-countryCode=\"SL\" value=\"232\">Sierra Leone (+232)</option>\r\n                                <option data-countryCode=\"SG\" value=\"65\">Singapore (+65)</option>\r\n                                <option data-countryCode=\"SK\" value=\"421\">Slovak Republic (+421)</option>\r\n                                <option data-countryCode=\"SI\" value=\"386\">Slovenia (+386)</option>\r\n                                <option data-countryCode=\"SB\" value=\"677\">Solomon Islands (+677)</option>\r\n                                <option data-countryCode=\"SO\" value=\"252\">Somalia (+252)</option>\r\n                                <option data-countryCode=\"ZA\" value=\"27\">South Africa (+27)</option>\r\n                                <option data-countryCode=\"ES\" value=\"34\">Spain (+34)</option>\r\n                                <option data-countryCode=\"LK\" value=\"94\">Sri Lanka (+94)</option>\r\n                                <option data-countryCode=\"SH\" value=\"290\">St. Helena (+290)</option>\r\n                                <option data-countryCode=\"KN\" value=\"1869\">St. Kitts (+1869)</option>\r\n                                <option data-countryCode=\"SC\" value=\"1758\">St. Lucia (+1758)</option>\r\n                                <option data-countryCode=\"SD\" value=\"249\">Sudan (+249)</option>\r\n                                <option data-countryCode=\"SR\" value=\"597\">Suriname (+597)</option>\r\n                                <option data-countryCode=\"SZ\" value=\"268\">Swaziland (+268)</option>\r\n                                <option data-countryCode=\"SE\" value=\"46\">Sweden (+46)</option>\r\n                                <option data-countryCode=\"CH\" value=\"41\">Switzerland (+41)</option>\r\n                                <option data-countryCode=\"SI\" value=\"963\">Syria (+963)</option>\r\n                                <option data-countryCode=\"TW\" value=\"886\">Taiwan (+886)</option>\r\n                                <option data-countryCode=\"TJ\" value=\"7\">Tajikstan (+7)</option>\r\n                                <option data-countryCode=\"TH\" value=\"66\">Thailand (+66)</option>\r\n                                <option data-countryCode=\"TG\" value=\"228\">Togo (+228)</option>\r\n                                <option data-countryCode=\"TO\" value=\"676\">Tonga (+676)</option>\r\n                                <option data-countryCode=\"TT\" value=\"1868\">Trinidad &amp; Tobago (+1868)</option>\r\n                                <option data-countryCode=\"TN\" value=\"216\">Tunisia (+216)</option>\r\n                                <option data-countryCode=\"TR\" value=\"90\">Turkey (+90)</option>\r\n                                <option data-countryCode=\"TM\" value=\"7\">Turkmenistan (+7)</option>\r\n                                <option data-countryCode=\"TM\" value=\"993\">Turkmenistan (+993)</option>\r\n                                <option data-countryCode=\"TC\" value=\"1649\">Turks &amp; Caicos Islands (+1649)</option>\r\n                                <option data-countryCode=\"TV\" value=\"688\">Tuvalu (+688)</option>\r\n                                <option data-countryCode=\"UG\" value=\"256\">Uganda (+256)</option>\r\n                                <option data-countryCode=\"GB\" value=\"44\">UK (+44)</option>\r\n                                <option data-countryCode=\"UA\" value=\"380\">Ukraine (+380)</option>\r\n                                <option data-countryCode=\"AE\" value=\"971\">United Arab Emirates (+971)</option>\r\n                                <option data-countryCode=\"UY\" value=\"598\">Uruguay (+598)</option>\r\n                                <option data-countryCode=\"US\" value=\"1\">USA (+1)</option>\r\n                                <option data-countryCode=\"UZ\" value=\"7\">Uzbekistan (+7)</option>\r\n                                <option data-countryCode=\"VU\" value=\"678\">Vanuatu (+678)</option>\r\n                                <option data-countryCode=\"VA\" value=\"379\">Vatican City (+379)</option>\r\n                                <option data-countryCode=\"VE\" value=\"58\">Venezuela (+58)</option>\r\n                                <option data-countryCode=\"VN\" value=\"84\">Vietnam (+84)</option>\r\n                                <option data-countryCode=\"VG\" value=\"84\">Virgin Islands - British (+1284)</option>\r\n                                <option data-countryCode=\"VI\" value=\"84\">Virgin Islands - US (+1340)</option>\r\n                                <option data-countryCode=\"WF\" value=\"681\">Wallis &amp; Futuna (+681)</option>\r\n                                <option data-countryCode=\"YE\" value=\"969\">Yemen (North)(+969)</option>\r\n                                <option data-countryCode=\"YE\" value=\"967\">Yemen (South)(+967)</option>\r\n                                <option data-countryCode=\"ZM\" value=\"260\">Zambia (+260)</option>\r\n                                <option data-countryCode=\"ZW\" value=\"263\">Zimbabwe (+263)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <input className=\"form-control patientnumber m-auto\" id=\"inputEmail4\" value={phonenumber ? phonenumber : ''} onChange={(e) => { setphonenumber(e.target.value) }} placeholder=\"Phone Number\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"inputEmail4\" className=\"pt-3 mb-2\"> Enter Name </label>\r\n                    <input type=\"text\" maxLength=\"50\" className=\"form-control m-auto patientname\" value={fullname ? fullname : ''} onChange={(e) => { setfullname(e.target.value) }} placeholder=\"Enter FirstName and LastName\" required />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 m-auto\">\r\n                    <p className=\"m-0 mb-2\">Gender</p>\r\n                    <div class=\"btn-group \" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} value='Male' name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Male' || gender == 'male' ? 'burntumber' : ''} bg-${gender == 'Male' || gender == 'male' ? 'burntumber' : 'seashell'} text-${gender == 'Male' || gender == 'male' ? 'light' : 'charcoal'}`} for=\"btnradio1\">Male</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} value='Female' name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Female' || gender == 'female' ? 'burntumber' : ''} bg-${gender == 'Female' || gender == 'female' ? 'burntumber' : 'seashell'} text-${gender == 'Female' || gender == 'female' ? 'light' : 'charcoal'}`} for=\"btnradio2\">Female</label>\r\n\r\n                        <input type=\"radio\" onClick={(e) => { setgender(e.target.value) }} className={`btn-check border-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} bg-${gender == 'Others' || gender == 'others' ? '' : 'burntumber'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} value='Others' name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" />\r\n                        <label className={`button rounded-0 shadow-0 border-${gender == 'Others' || gender == 'others' ? 'burntumber' : ''} bg-${gender == 'Others' || gender == 'others' ? 'burntumber' : 'seashell'} text-${gender == 'Others' || gender == 'others' ? 'light' : 'charcoal'}`} for=\"btnradio3\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\"> Enter Birth Date </label>\r\n                        <input type=\"date\" id=\"date\" className=\"form-control\" value={DOB ? DOB : ''} onChange={(e) => { setDOB(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\"> Add Email </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={email ? email : ''} placeholder=\"Email ID\" onChange={(e) => { setemail(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-10 pb-2 m-auto\">\r\n                    <label htmlFor=\"inputAddress\" className=\"mb-2\">Add Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value={address ? address : ''} placeholder=\"Location\" onChange={(e) => { setaddress(e.target.value) }} required />\r\n                </div>\r\n                <div className=\"row p-0 m-0 py-2\">\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputAddress\" className=\"\">Select Location</label>\r\n                        <GooglePlacesAutocomplete\r\n                            apiKey='AIzaSyC4wk5k8E6jKkpJClZlXZ8oavuPyi0AMVE'\r\n                            selectProps={{\r\n                                defaultInputValue: props.location ? props.location : data,\r\n                                onChange: setData,\r\n                                placeholder: \"Select Location\",\r\n                            }}\r\n                            onLoadFailed={(error) => {\r\n                                console.log(error);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-5 m-auto\">\r\n                        <label htmlFor=\"inputpincode\" className=\"\">Pin Code</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"inputpincode\" value={pincode ? pincode : ''} placeholder=\"pincode\" onChange={(e) => { setpincode(e.target.value) }} required />\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-11 m-auto\">\r\n                        <label htmlFor=\"date\" className=\"\">Is Main Account</label>\r\n                        <select className='form-control' ref={ismainref} onChange={(e) => { setmain(e.target.value); d(e); }}>\r\n                            <option value='1'>Yes</option>\r\n                            <option value='2'>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={`conatiner m-0 p-0 d-${display}`}>\r\n                        <div className='col-md-5 m-auto'>\r\n                            <label htmlFor=\"inputrelation\" className=\"\">Select Relation</label>\r\n                            <select className='form-control' value={relation ? relation : ''} onChange={(e) => { setrelation(e.target.value) }}>\r\n                                <option>Select Relation</option>\r\n                                <option value='Son'>Son</option>\r\n                                <option value='Daughter'>Daughter</option>\r\n                                <option value='Father'>Father</option>\r\n                                <option value='Mother'>Mother</option>\r\n                                <option value='Husband'>Husband</option>\r\n                                <option value='Wife'>Wife</option>\r\n                                <option value='Brother'>Brother</option>\r\n                                <option value='Sister'>Sister</option>\r\n                                <option value='Grand Father'>Grand Father</option>\r\n                                <option value='Grand Mother'>Grand Mother</option>\r\n                                <option value='Grand Child'>Grand Child</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-5 py-2 m-auto\">\r\n                            <label htmlFor=\"inputAddress\" className=\"\"> Select Main Account </label>\r\n                            <input type=\"text\" className=\"form-control position-relative\" id=\"inputAddress\" placeholder=\"Email ID\" value={accountinput ? accountinput : ''} onChange={searchmainaccount} />\r\n                            <div className={` d-${displaymainaccount} start-0 end-0 m-0 p-0 position-absolute searchinput`}>\r\n                                {\r\n                                    mainaccount.map((data) => (\r\n                                        <button className='col-12 fs-6 m-0 p-0 text-end border-0 bg-pearl text-charcoal border border-1 shadow' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name} | {data.id} | ({data.email ? data.email : 'email not found'})</button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                    <button className=\"btn button-burntumber\" onClick={confirmmessage} > Save Changes </button>\r\n                </div>\r\n                <div className=\"col-6 pb-2 m-auto text-center\">\r\n                    <button className=\"btn button-pearl \" onClick={currentvalue}>Set Previous</button>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { UpdatePatient }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Dsr\\Doctors_Dsr.jsx",["789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Dsr\\Pharmacy_Dsr.jsx",["809","810","811"],[],"import React, { useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport { URL } from '../../index'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/appointment.css'\r\nimport '../../css/dsr.css'\r\n\r\nconst Pharmacy_Dsr = (props) => {\r\n  const url = useContext(URL)\r\n  const [SaleEntryList, setSaleEntryList] = useState([])\r\n  const [load, setload] = useState()\r\n\r\n  const PharmacyList = async () => {\r\n    setload(true)\r\n    try {\r\n      await axios.get(`${url}/DSR/pharmacy?from=${props.fromdate}&to=${props.todate}`).then((response) => {\r\n        setSaleEntryList(response.data.data.pharmacy_sale_return)\r\n        setload(false)\r\n      })\r\n    } catch (e) {\r\n      setload(false)\r\n      Notiflix.Notify.failure(e.message)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    PharmacyList()\r\n  }, [props.fromdate, props.todate])\r\n  console.log(SaleEntryList)\r\n  let arr = [\r\n    {\r\n      id: 'c-102',\r\n      name: 'kabir',\r\n      Mobile: '9977665544',\r\n      Doctorname: 'Arushi Dudeja',\r\n      Date: '12-01-2023',\r\n      Time: '07:00 AM',\r\n      Payment: 'Cash-2000 Card-2000',\r\n      Amount: '1500',\r\n      Discount: '0',\r\n      Pending: '0',\r\n      Grand_total: '1500'\r\n    },\r\n    {\r\n      id: 'c-102',\r\n      name: 'kabir',\r\n      Mobile: '9977665544',\r\n      Doctorname: 'Arushi Dudeja',\r\n      Date: '12-01-2023',\r\n      Time: '07:00 AM',\r\n      Payment: 'Cash-2000 Card-2000',\r\n      Amount: '1500',\r\n      Discount: '0',\r\n      Pending: '0',\r\n      Grand_total: '1500'\r\n    },\r\n    {\r\n      id: 'c-102',\r\n      name: 'kabir',\r\n      Mobile: '9977665544',\r\n      Doctorname: 'Arushi Dudeja',\r\n      Date: '12-01-2023',\r\n      Time: '07:00 AM',\r\n      Payment: 'Cash-2000 Card-2000',\r\n      Amount: '1500',\r\n      Discount: '0',\r\n      Pending: '0',\r\n      Grand_total: '1500'\r\n    },\r\n    {\r\n      id: 'c-102',\r\n      name: 'kabir',\r\n      Mobile: '9977665544',\r\n      Doctorname: 'Arushi Dudeja',\r\n      Date: '12-01-2023',\r\n      Time: '07:00 AM',\r\n      Payment: 'Cash-2000 Card-2000',\r\n      Amount: '1500',\r\n      Discount: '0',\r\n      Pending: '0',\r\n      Grand_total: '1500'\r\n    }, {\r\n      id: 'c-102',\r\n      name: 'kabir',\r\n      Mobile: '9977665544',\r\n      Doctorname: 'Arushi Dudeja',\r\n      Date: '12-01-2023',\r\n      Time: '07:00 AM',\r\n      Payment: 'Cash-2000 Card-2000',\r\n      Amount: '1500',\r\n      Discount: '0',\r\n      Pending: '0',\r\n      Grand_total: '1500'\r\n    }\r\n  ]\r\n  const [Appointments, setAppointments] = useState(arr)\r\n\r\n\r\n  return (\r\n    <div className='Pharmacy_Dsrsection'>\r\n      <div>\r\n        <div className=\"row p-0 m-0 justify-content-between m-auto px-2 \">\r\n          <div className='col-lg-5 col-md-5 col-sm-5 col-5 CARD1 shadow-sm rounded-2' style={{ maxWidth: '25rem' }}>\r\n            <h6 className=\"text-burntumber ms-3 mt-2\">Payment Methods</h6>\r\n            <div className='row p-0 m-0'>\r\n              <div className='col-lg-4 mb-lg-2 col-md-4 text-start '>Cash:{' '}0</div>\r\n              <div className='col-lg-4 mb-lg-2 col-md-auto text-center'>Card:{' '}0</div>\r\n              <div className='col-lg-4 mb-lg-2 col-md-5 text-end'>WireTransfer:0</div>\r\n              <div className='col-lg-4 mb-lg-2 col-md-4 text-start'>PhonePay:{' '}0</div>\r\n              <div className='col-lg-4 mb-lg-2 col-md-auto text-center'>RazorPay:{' '}0</div>\r\n              <div className='col-lg-4 mb-lg-2 col-md-4 text-end'>Paytm{' '}0</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-5 col-md-5 col-sm-5 col-5 CARD2 shadow-sm rounded-2\" style={{ maxWidth: '25rem' }}>\r\n            <h6 className='text-brandy ms-3 mt-2'>Amounts</h6>\r\n            <div className='bg-lightyellow rounded-2'>\r\n              <p className='text-charcoal m-0 ps-3 fw-semibold border-bottom-burntumber p-0'>Recieved</p>\r\n              <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5 col-md-6 text-lg-start\">Advance Amount: {' '}0</div>\r\n                <div className=\"col-5 col-md-6 text-lg-end\">Pending Amount: {' '}0</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row m-0 p-0\">\r\n              <div className=\"col-6 col-md-7 text-lg-start\">Total Pending Amount: {' '}0</div>\r\n              <div className=\"col-4 col-md-4 text-lg-end \">Total:{' '}0</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-2 col-md-2 col-sm-2 col-2 CARD3 rounded-2\">\r\n            <h6 className='text-lightgreen mt-2'>Exports</h6>\r\n            <button className='button button-pearl border-bottom-lightgreen ms-lg-2'>CSV</button>\r\n            <button className='button button-pearl border-bottom-lightgreen ms-lg-2'>Excel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid maintable scroll scroll-y\">\r\n        <h5 className='my-2 text-charcoal75 fw-semibold ms-2 '>Sale Entries</h5>\r\n        <div className='container-fluid scroll scroll-y saleentries'>\r\n          <table className='table'>\r\n            <thead className='text-center'>\r\n              <tr>\r\n                <th rowspan='2' >Bill no.</th>\r\n                <th rowspan='2' >Name</th>\r\n                <th rowspan='2' >Mobile</th>\r\n                <th rowspan='2' >Doctor Name</th>\r\n                <th rowspan='2' >Bill Date</th>\r\n                <th colspan='7' scope='colgroup'>Payment Method</th>\r\n                <th rowspan='2' >Amount</th>\r\n                <th rowspan='2' >Discount</th>\r\n                <th rowspan='2' >Pending Amt.</th>\r\n                <th rowspan='2' >Return Date</th>\r\n                <th rowspan='2' > Grand Total</th>\r\n              </tr>\r\n              <tr>\r\n                <th className='bg-white' scope='col'>Cash</th>\r\n                <th className='bg-white' scope='col'>Card</th>\r\n                <th className='bg-white' scope='col'>Paytm</th>\r\n                <th className='bg-white' scope='col'>Phonepe</th>\r\n                <th className='bg-white' scope='col'>Razorpay</th>\r\n                <th className='bg-white' scope='col'>Wire-Transfer</th>\r\n                <th className='bg-white' scope='col'>Points</th>\r\n              </tr>\r\n            </thead>\r\n            {\r\n              load ? (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Loading.. Please Be Patient</td>\r\n                  </tr>\r\n                </tbody>\r\n              ) : (\r\n                SaleEntryList && SaleEntryList.length == 0 ? (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>No Sale Entries</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody className='text-center'>\r\n                    {\r\n                      SaleEntryList.map((data, i) => (\r\n                        <tr>\r\n                          <td key={i}>{data.sale_entry && data.sale_entry.bill_id !== null ? \"P-\" + data.sale_entry.bill_id : ''}</td>\r\n                          <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.full_name !== null ? data.sale_entry.patient.full_name : ''}</td>\r\n                          <td>{data.sale_entry && data.sale_entry.patient && data.sale_entry.patient.phone_number !== null ? data.sale_entry.patient.phone_number : ''}</td>\r\n                          <td>{data.sale_entry && data.sale_entry.doctor_name !== null ? data.sale_entry.doctor_name : ''}</td>\r\n                          <td>{data.sale_entry && data.sale_entry.bill_date !== null ? data.sale_entry.bill_date : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Cash : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Card : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Paytm : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Phonepe : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Razorpay : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details)['Wire-Transfer'] : ''}</td>\r\n                          <td>{data.sale_entry.payment_method_details && data.sale_entry.payment_method_details != null ? JSON.parse(data.sale_entry.payment_method_details).Points : ''}</td>\r\n                          <td>{data.sale_entry && data.sale_entry.grand_total !== null ? data.sale_entry.grand_total : ''}</td>\r\n                          <td>{data.Discount}</td>\r\n                          <td>{data.Pending}</td>\r\n                          <td>{data.return_date && data.return_date !== null ? data.return_date : ''}</td>\r\n                          <td>{data.grand_total && data.grand_total !== null ? data.grand_total : ''}</td>\r\n\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n\r\n                )\r\n              )\r\n            }\r\n          </table>\r\n        </div>\r\n        <h5 className='my-2 text-charcoal75 fw-semibold ms-2 '>Pending Payments Recieved</h5>\r\n        <div className='container-fluid scroll scroll-y pendingpayrecieve'>\r\n          <table className='table'>\r\n            <thead>\r\n              <tr>\r\n                <th>Bill no.</th>\r\n                <th>Name</th>\r\n                <th>Mobile</th>\r\n                <th>Doctor Name</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Payment Method</th>\r\n                <th>Amount</th>\r\n                <th>Discount</th>\r\n                <th>Pending Amt.</th>\r\n                <th> Grand Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                Appointments.map((data, i) => (\r\n                  <tr>\r\n                    <td key={i}>{data.id}</td>\r\n                    <td>{data.name}</td>\r\n                    <td>{data.Mobile}</td>\r\n                    <td>{data.Doctorname}</td>\r\n                    <td>{data.Date}</td>\r\n                    <td>{data.Time}</td>\r\n                    <td>{data.Payment}</td>\r\n                    <td>{data.Amount}</td>\r\n                    <td>{data.Discount}</td>\r\n                    <td>{data.Pending}</td>\r\n                    <td>{data.Grand_total}</td>\r\n                  </tr>\r\n                ))\r\n              }\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport { Pharmacy_Dsr }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\notiflix\\customconfirm.jsx",[],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\Payments.jsx",["812","813","814","815","816","817","818","819","820","821"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.fetchallAppointmentslist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            pendings.push(props.appointmentdata.pending_payments[j])\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n\r\n        for (let j = 0; j < props.appointmentdata.pending_payments.length; j++) {\r\n            if (props.appointmentdata.pending_payments[j].is_paid == 0) {\r\n                pendingid = props.appointmentdata.pending_payments[j].id\r\n            }\r\n\r\n        }\r\n\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.fetchallAppointmentslist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    // console.log(advancepaymentmethods)\r\n    console.log(props.appointmentdata)\r\n    return (\r\n        <div className='bg-seashell rounded-2'>\r\n            <h5 className='fs-4'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.toggle_payments}></button>\r\n            <hr />\r\n            <div className=\"row p-0 m-0 gx-2 justify-content-center\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n                        <div className=\"col-6 col-lg-4 col-md-6 col-xl-4 col-sm-6\">\r\n                            <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} border border-dark`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <hr />\r\n            <div className={`container-fluid p-0 m-0 text-center d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-2'>Advance Payment from {props.patientname}</h5>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n                            <div className='row align-items-center p-0 m-0'>\r\n                                <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                                <input className=' col-6 p-0 m-0 form-control w-50 text-center bg-seashell ' value={advancepaid.advnace_total} />\r\n                                <hr />\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-2'>Add Advance Payment</h5>\r\n                <label className='text-charcoal fw-bold'>Description</label>\r\n                <input type='text' className='form-control p-0 m-0 p-1 bg-seashell mb-3' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                <label className='text-charcoal fw-bold'>Select Payment Method</label>\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2  justify-content-center\">\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container-fluid text-center mt-2\">\r\n                    <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                </div>\r\n                <button className='button button-burntumber mt-4' onClick={AddadvancePaymentMethods}>Save</button>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} text-center`}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h5 className='fw-bolder text-burntumber'>Previous Paid Pending Payments</h5>\r\n                                <div className='p-0 m-0 scroll scroll-y'>\r\n                                    <table className=' p-0 m-0 table text-center'>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='border p-0 m-0 px-1' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Cash</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Card</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Paytm</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Phonepe</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Razorpay</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Wire-Transfer</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={` text-center d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='border'>{data.paid_amount}</td>\r\n                                                        <td className='border'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='border'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} text-center`}>\r\n                                            <h5 className='text-burntumber fw-bolder mt-2'>Pending Remains</h5>\r\n                                            <div className=' bg-danger text-light fw-bolder fs-5 text-center' >{Data.pending_amount}</div>\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={`text-center`}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-center\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                                <button className='button button-burntumber mt-4' onClick={UpdatePendingPayments}>Save</button>\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <div className='rounded-2 bg-lightgreen fw-bolder p-2'>No Pending Payments Found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\AmountPaid.jsx",["822","823","824"],[],"import React, { useState, useEffect } from 'react'\r\n\r\nconst AmountPaid = (props) => {\r\n\r\n    const [totalAmount, setTotalAmount] = useState(0)\r\n    const [paidpendingtotal,setpaidpending] =useState(0)\r\n    const calculate = () => {\r\n        var data = props.appointmentData;\r\n        if (data.payment_method != null) {\r\n            var payment = Object.values(JSON.parse(data.payment_method_details))\r\n            var val = 0;\r\n            for (let i = 0; i < payment.length; i++) {\r\n                var element = parseFloat(payment[i]);\r\n                val += element\r\n                setTotalAmount(val)\r\n            }\r\n        }\r\n    }\r\n    const CalculatePaidPendings=()=>{\r\n      let totalpaidpendings = []\r\n      let pendingtotal = 0\r\n      if(props.appointmentData.pending_payments && props.appointmentData.pending_payments!=null){\r\n        for(let i = 0;i<props.appointmentData.pending_payments.length;i++){\r\n            if(props.appointmentData.pending_payments[i].is_paid == 1){\r\n              totalpaidpendings.push(props.appointmentData.pending_payments[i].paid_amount!==null?props.appointmentData.pending_payments[i].paid_amount:0)\r\n            }\r\n        }\r\n      }\r\n\r\n   totalpaidpendings.forEach(item=>{\r\n    pendingtotal +=Number(item)\r\n   })\r\n   setpaidpending(pendingtotal)\r\n    }\r\n    useEffect(() => {\r\n      calculate()\r\n      CalculatePaidPendings()\r\n  }, [])\r\n\r\n    return (\r\n        totalAmount !=null ? (\r\n            totalAmount+paidpendingtotal == props.appointmentData.total_amount ? (<>\r\n            <button className=\"ms-1 btn btn-sm button-lightgreen fw-bold\">{Number(totalAmount)+Number(paidpendingtotal)} Done</button>\r\n                                    </>) : (<>\r\n                                      <button className=\"ms-1 btn btn-sm button-lightred fw-bold\">{Number(props.appointmentData.total_amount)-(Number(totalAmount)+Number(paidpendingtotal))} Pending</button>\r\n                                    </>)\r\n\r\n                                  ) : (\r\n                                    <button className=\"btn button-seashell p-0 m-0\" type=\"button\" disabled>\r\n                                      <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    </button>\r\n                                  )\r\n    \r\n    )\r\n}\r\n\r\nexport default AmountPaid","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\SelectedTimeAppointment.jsx",["825","826","827","828","829","830","831","832","833"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate,Clinic } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css'\r\n\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL);\r\n    const cliniclist=useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n  \r\n\r\n// Functions\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data)\r\n            setsearchload(false)\r\n        })\r\n    \r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block');\r\n        } else {\r\n            setdisplaysearchlist('none');\r\n        }\r\n    }\r\n    const get_value = (e) => {\r\n        setsearchinput(e.target.value)\r\n        setpatientid(e.target.name)\r\n        setdisplaysearchlist('none');\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && props.DoctorID && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: props.DoctorID,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message);\r\n                setload(false)\r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n// Functions\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <div className=\"col-12 p-0 mt-2\">\r\n    \r\n                <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control selectpatient col-10 position-relative\" value={searchinput ? searchinput : ''}  onChange={(e) => { searchpatient(e); }}  />\r\n                <div className={`col-8  d-${displaysearchlist} `} style={{ minHeight: '4rem' }}>\r\n                    {\r\n                        searchload ? (\r\n                            <p className=\"btn text-charcoal75 fs-6 p-0 m-0 ps-1\">Loading... </p>\r\n                        ) : (\r\n                            searchlist.length == 0 ? (\r\n                                <p className=\"text-danger btn fs-6 p-0 m-0\">Patient not found add as new to book appointments</p>\r\n                            ) : (\r\n                                searchlist.map((data) => (\r\n                                    <button className='col-12 d-block p-0 m-0 ms-1 border-0 bg-pearl text-charcoal text-start border border-1' name={data.id} value={data.full_name} onClick={get_value}>{data.full_name}  {data.phone_number}</button>\r\n                                )))\r\n\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n                <hr className='p-0 m-0 mt-1' />\r\n                <div className=\"col-12 text-center py-1\">\r\n                {\r\n                        cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className=\"radio form me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                 }\r\n                </div>\r\n                <div className=\"row p-0 m-0 text-center\">\r\n                    <div className=\"col-5 p-0 m-0\">\r\n                        <button className='button button-charcoal shadow'>{props.DoctorID}.{props.DoctorName}</button>\r\n                    </div>\r\n                    <div className=\"col-4 p-0 m-0\">\r\n                        <input type=\"date\" disabled value={APIDate} className=\"form-control selectdate\" />\r\n                    </div>\r\n                    <div className=\"col-3 p-0 m-0\">\r\n                        <button className='button-sm button-lightgreen'>{tConvert(props.selectedtime)}</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <hr className='p-0 m-0 mt-2' />{\r\n                    load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <button className=\"button button-burntumber\" onClick={BookAppointment}> Done </button>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\UpdateAppointment.jsx",["834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState()\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want yo update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center mt-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 form-control location bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <label key={i} className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className={`radio me-1 `} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12 bg-seashell\"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-burntumber' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'pearl' : 'lightgreen'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-burntumber m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                    <button className='btn px-5 button-burntumber' onClick={confirmmessage}>Done</button>\r\n                                </div>\r\n                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                    <button className=\"btn btn-light px-5 border border-2\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Bill.jsx",["858","859","860","861","862","863","864","865","866","867","868"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].other_charges.length; j++) {\r\n                    extracharges.push({\r\n                        description: props.appointmentdata[i].other_charges[j].description != null ? props.appointmentdata[i].other_charges[j].description : 'N/A',\r\n                        amount: props.appointmentdata[i].other_charges[j].total_amount != null ? props.appointmentdata[i].other_charges[j].total_amount : 0,\r\n                        discount: props.appointmentdata[i].other_charges[j].discount != null ? props.appointmentdata[i].other_charges[j].discount : 0,\r\n                        cgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n                        sgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n                        gross_amount: props.appointmentdata[i].other_charges[j].final_amount && props.appointmentdata[i].other_charges[j].final_amount !== null ? props.appointmentdata[i].other_charges[j].final_amount : '',\r\n                        id: props.appointmentdata[i].other_charges[j].id && props.appointmentdata[i].other_charges[j].id != null ? props.appointmentdata[i].other_charges[j].id : ''\r\n                    })\r\n\r\n                }\r\n                setaartasdiscount(props.appointmentdata[i].aartas_discount)\r\n                setdocdiscount(props.appointmentdata[i].doc_discount)\r\n                setconstext(props.appointmentdata[i].cons_text)\r\n            }\r\n        }\r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id && props.appointmentdata[i].payment_method_details) {\r\n                Payments.push(Object.keys(JSON.parse(props.appointmentdata[i].payment_method_details)))\r\n                amounts.push(Object.values(JSON.parse(props.appointmentdata[i].payment_method_details)))\r\n            }\r\n        }\r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    console.log(Total_Amount())\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell position-relative'>\r\n            <h5 className='text-charcoal mt-2 '>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2 ' onClick={() => { props.CloseBillForm() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start p-2 position-relative\">\r\n                                <h6 className='fw-bolder text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-1 me-4 text-cahrcoal fw-bolder'><input type='checkbox' checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell' value={AddConsAmt} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell' value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell'>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control bg-seashell' disabled value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell text-center' value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell text-center' value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell rounded-2 position-relative'>\r\n                                    <h6 className='p-1 text-charcoal fw-bolder'>ExtraCharges</h6>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0 text-center\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-3 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Description</label>\r\n                                                            <input className='form-control p-0 bg-seashell m-0 text-center' value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Amount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0 \">\r\n                                                            <label className='fw-bold text-charcoal75'>Discount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>FinalAmount</label>\r\n                                                            <input type='number' className='form-control  text-center bg-seashell p-0 m-0' value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>GST %</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='text-center fw-bold text-charcoal75'>Total </label>\r\n                                                            <input className=' form-control text-center bg-seashell p-0' value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                        </div>\r\n                                                        <div className=\"col-auto align-self-end\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n                                    <div className=\"container-fluid text-center mt-2\">\r\n                                        <button className='btn py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start \">\r\n                                <h6 className='fw-bolder text-charcoal'>Tax</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>SGST</label>\r\n                                        <input className='form-control bg-seashell' value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>CGST</label>\r\n                                        <input className='form-control bg-seashell' value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 text-center rounded-2 bg-lightyellow mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n                                    <div className='col-4 align-self-end'>\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Grand Total</label>\r\n                                        <input className='form-control text-success text-center border-0 fw-bolder p-0 fs-5 bg-seashell' value={Get_Grand_Total()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-center border-0 fw-bolder p-0 fs-5 bg-seashell' value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Consumables Amount</label>\r\n                                        <input className='form-control text-primary text-center border-0 fw-bolder p-0 fs-5 bg-seashell' />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative p-2\">\r\n                                <h6 className='text-charcoal fw-bolder'>Payments</h6>\r\n                                <div className=\"row justify-content-end p-0 m-0\">\r\n                                    <div className=\"col-6 text-end p-0 m-0\">\r\n                                        <div className=\"row text-end p-0 m-0\">\r\n                                            <span className=\"col-8 text-wrap text-end p-0 m-0 fw-bold\"> Total Amount: </span>\r\n                                            <span className=\"col-4 text-end align-self-end p-0 m-0 text-success fw-bold\"> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0} </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-6 text-center m-0 p-0'>\r\n                                        <div className=\"row text-center p-0 m-0\">\r\n                                            <p className=\"col-8 text-wrap text-center p-0 m-0 fw-bold\"> Return Amount: </p>\r\n                                            <p className=\"col-4 text-start align-self-end p-0 m-0 text-burntumber fw-bold\"> {Return_Amount()} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-end m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid pb-2\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0\">\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-burntumber' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-brandy' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Vitals.jsx",["869","870","871","872","873","874","875","876","877","878","879","880","881","882"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\nimport '../../css/bootstrap.css'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    // console.log(vitalid, vitalupdatevalue, appointmentvitalid, props.appointmentid, props.patientid)\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  // console.log(props.appointmentvitalslist)\r\n  return (\r\n    <div className='bg-seashell rounded-2 position-relative pb-4'>\r\n      <h5 className='p-1'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 m-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} style={{ width: '1.8rem' }} /></button>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '><h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6></div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-end p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='text-charcoal text-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto ms-2\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row p-0 m-0 justify-content-center\">\r\n              <div className=\"col-3 p-0 m-0\">\r\n                <select className='form-control p-0 border-0 text-end bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 rounded-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0\">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-1\"></div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\SelectedDoctorSlot.jsx",["883","884","885","886","887","888","889","890","891"],[],"import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList,Clinic } from '../../index'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id');\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n    const [docdate, setdocdate] = useState();\r\n    const [fromtime, setfromtime] = useState();\r\n    const [totime, settotime] = useState();\r\n    const [clinicid, setclinicid] = useState(clinicID);\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n            if (props.DoctorID && APIDate && fromtime && totime && clinicid && admin_id) {\r\n                Notiflix.Loading.pulse({\r\n                    backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                    svgColor: '#96351E'\r\n                })\r\n                await axios.post(`${url}/doctor/add/timeslots`, {\r\n                    doctor_id: props.DoctorID,\r\n                    date: APIDate,\r\n                    time_from: fromtime,\r\n                    time_to: totime,\r\n                    clinic_id: clinicid,\r\n                    admin_id: admin_id\r\n                }).then((response) => {\r\n                    Notiflix.Loading.remove();\r\n                    props.CloseAddQuickSlots()\r\n                    props.fetchapi()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais')\r\n            }\r\n        \r\n    }\r\n\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to add the selected Doctor Time Slots`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr />\r\n            <div className=\"col-12 text-center\">\r\n              {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className=\"radio form me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <button className='button button-charcoal shadow'>{props.DoctorName}</button>\r\n            </div>\r\n              <div className=\"col-6\">\r\n        <input type=\"date\" disabled className=\"form-control col-10\" value={APIDate}/>\r\n        </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex\">\r\n                <input type=\"time\" className=\"form-control\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                <div>_</div>\r\n                <input type=\"time\" className=\"form-control\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n            </div>\r\n\r\n\r\n            <hr />\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-burntumber px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Today\\Payments.jsx",["892","893","894","895","896","897","898","899","900","901","902","903"],[],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { URL } from '../../index'\r\nimport { useContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport '../../css/dashboard.css'\r\n\r\nconst Payments = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const [blocksindex, setblocksindex] = useState(0)\r\n    const blocks = ['Advance payments', 'Pending Payments']\r\n    //Pending Payments\r\n    const [pendingpayments, setpendingpayments] = useState([])\r\n    const [pendingpaymentmethods, setpendingpaymentmethods] = useState([])\r\n    //Advance Payments\r\n    const [advancepaymentmethods, setadvancepaymentmethods] = useState([])\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [Description, setDescription] = useState('')\r\n    const [advancepaid, setadvancepaid] = useState()\r\n    const [loadappoint, setloadappoint] = useState(false)\r\n    const advancepaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    const pendingpaymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setadvancepaid(response.data.data)\r\n            setloadadvancepayments(false)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n\r\n    async function AddadvancePaymentMethods() {\r\n        let amount = []\r\n        let paymentmethod = []\r\n        for (let j = 0; j < advancepaymentmethods.length; j++) {\r\n            paymentmethod.push(advancepaymentmethods[j].paymentmethod)\r\n            amount.push(advancepaymentmethods[j].amount)\r\n\r\n        }\r\n        let Data = {\r\n            patient_id: props.patientid,\r\n            admin_id: Number(adminid),\r\n            description: Description,\r\n            payment_method: paymentmethod,\r\n            payment_method_main: paymentmethod,\r\n            payment_method_details: amount\r\n        }\r\n        async function Payment() {\r\n            setloadadvancepayments(true)\r\n            await axios.post(`${url}/save/advance`, Data).then((response) => {\r\n                console.log(response)\r\n                props.Appointmentlist()\r\n                setadvancepaymentmethods([])\r\n                setDescription('')\r\n                AdvancePayments()\r\n                Notiflix.Notify.success(response.data.message)\r\n                setloadadvancepayments(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n\r\n    function DeleteadvancePaymentMethods(i) {\r\n        advancepaymentmethods.splice(i, i)\r\n    }\r\n    function DeletependingPaymentMethods(i) {\r\n        pendingpaymentmethods.splice(i, i)\r\n    }\r\n    async function ExistedPendingPayments() {\r\n        let pendings = []\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            if (props.appointmentid == props.appointmentdata[i].id) {\r\n                for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                    pendings.push(props.appointmentdata[i].pending_payments[j])\r\n                }\r\n            }\r\n\r\n        }\r\n        setpendingpayments(pendings)\r\n    }\r\n    useEffect(() => {\r\n        ExistedPendingPayments()\r\n    }, [])\r\n\r\n    async function UpdatePendingPayments() {\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        let pendingid = '';\r\n        for (let i = 0; i < props.appointmentdata.length; i++) {\r\n            for (let j = 0; j < props.appointmentdata[i].pending_payments.length; j++) {\r\n                if (props.appointmentid == props.appointmentdata[i].id) {\r\n                    if (props.appointmentdata[i].pending_payments[j].is_paid == 0) {\r\n                        pendingid = props.appointmentdata[i].pending_payments[j].id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let j = 0; j < pendingpaymentmethods.length; j++) {\r\n            console.log(pendingpaymentmethods[j])\r\n            Paymentmethod.push(pendingpaymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(pendingpaymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            admin_id: Number(adminid),\r\n            pending_id: pendingid\r\n        }\r\n        async function Payment() {\r\n            setloadappoint(true)\r\n            await axios.post(`${url}/appointment/save/pending/charges`, Data).then((response) => {\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.setsingleload(0)\r\n                setblocksindex(1)\r\n                setloadappoint(false)\r\n            })\r\n        }\r\n        Payment()\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date && date != null) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n    console.log(advancepaymentmethods)\r\n    return (\r\n        <div className=' p-0 m-0'>\r\n            <h5 className='fs-4'>{props.patientname} Payments Section</h5>\r\n            <button className='btn-close position-absolute end-0 p-2 top-0' onClick={props.ClosePaymentsForm}></button>\r\n            <div className=\"d-flex justify-content-center p-0 m-0 gx-2 mt-3\">\r\n                {\r\n                    blocks.map((Data, i) => (\r\n\r\n                        <button className={`button button-${i === blocksindex ? 'charcoal' : 'seashell'} border-charcoal rounded-0`} onClick={() => { setblocksindex(i) }}>{Data}</button>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className={`container-fluid p-0 m-0 text-center d-${blocksindex === 0 ? 'block' : 'none'}`}>\r\n                <h5 className='text-burntumber fw-bolder mt-3 mb-1'>Advance Payments from {props.patientname}</h5>\r\n                {\r\n                    loadadvancepayments || props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        advancepaid && advancepaid.advnace_total !== 0 ? (\r\n                            <div className='row align-items-center p-0 m-0'>\r\n                                <h6 className='text-charcoal col-6 fw-bold mt-2'>Advance Amount Balance</h6>\r\n                                <input className=' col-6 p-0 m-0 form-control w-50 text-center bg-seashell ' value={advancepaid.advnace_total} />\r\n                                <hr />\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className='bg-lightyellow text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                        )\r\n\r\n                    )\r\n                }\r\n                <hr/>\r\n                <h5 className='text-burntumber fw-bolder mb-3 mt-3'>Add Advance Payment</h5>\r\n                <label className='text-charcoal fw-bold'>Description</label>\r\n                <input type='text' className='form-control p-0 m-0 p-1 w-75 bg-seashell mb-3 mx-auto' value={Description ? Description : ''} onChange={(e) => setDescription(e.target.value)} />\r\n                <label className='text-charcoal fw-bold'>Select Payment Method</label>\r\n                {\r\n                    advancepaymentmethods.map((data, i) => (\r\n                        <div className=\"row p-0 m-0 mt-2  justify-content-center\">\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }}>\r\n                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                    <option value='Cash'>Cash</option>\r\n                                    <option value='Card'>Card</option>\r\n                                    <option value='Paytm'>Paytm</option>\r\n                                    <option value='Phonepe'>Phone Pe</option>\r\n                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                    <option value='Razorpay'>Razorpay</option>\r\n                                    <option value='Points'>Points</option>\r\n                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 ms-1\">\r\n                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setadvancepaymentmethods(prevState => [...prevState]) }} />\r\n                            </div>\r\n                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteadvancePaymentMethods(i); setadvancepaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className=\"container-fluid text-center mt-2\">\r\n                    <button className='btn py-0' onClick={() => setadvancepaymentmethods(prevState => [...prevState, advancepaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                </div>\r\n                <button className='button button-burntumber mt-4 mb-2' disabled={Description?false:true} onClick={AddadvancePaymentMethods}>Save</button>\r\n            </div>\r\n\r\n            <div className={`container-fluid p-0 m-0 d-${blocksindex === 1 ? 'block' : 'none'} text-center`}>\r\n                {\r\n                    pendingpayments && pendingpayments != null && pendingpayments.length != 0 ? (\r\n                        loadappoint ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <h5 className='fw-bolder text-burntumber'>Previous Paid Pending Payments</h5>\r\n                                <div className='p-0 m-0 scroll scroll-y'>\r\n                                    <table className=' p-0 m-0 table text-center'>\r\n                                        <thead className='p-0 m-0'>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Amount Paid</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Pending Date</th>\r\n                                                <th className='border p-0 m-0 px-1' rowspan='2'>Paid Date</th>\r\n                                                <th className='border p-0 m-0 px-1' colspan='7' scope='colgroup'>Payment Method</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Cash</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Card</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Paytm</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Phonepe</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Razorpay</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Wire-Transfer</th>\r\n                                                <th className='border p-0 m-0 px-1' scope='col'>Points</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                pendingpayments.map((data) => (\r\n                                                    <tr className={` text-center d-${data.is_paid == 1 ? '' : 'none'}`}>\r\n                                                        <td className='border'>{data.paid_amount}</td>\r\n                                                        <td className='border'>{reversefunction(data.pending_date)}</td>\r\n                                                        <td className='border'>{reversefunction(data.paid_date)}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Cash : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Card : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Paytm : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Phonepe : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Razorpay : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details)['Wire-Transfer'] : 'N/A'}</td>\r\n                                                        <td className='border'>{data.payment_method_details && data.payment_method_details != null ? JSON.parse(data.payment_method_details).Points : 'N/A'}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {\r\n                                    pendingpayments.map((Data) => (\r\n                                        <div className={`d-${Data.is_paid == 0 ? 'block' : 'none'} text-center`}>\r\n                                            <h5 className='text-burntumber fw-bolder mt-2'>Pending Remains</h5>\r\n                                            <div className=' bg-danger text-light fw-bolder fs-5 text-center' >{Data.pending_amount}</div>\r\n                                            {\r\n                                                pendingpaymentmethods.map((data, i) => (\r\n                                                    <div className={`text-center`}>\r\n                                                        <label className='text-charcoal fw-bold mt-3'>Select Payment Method to Pay Remaining pendings</label>\r\n                                                        <div className=\"row p-0 m-0 justify-content-center\">\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-5 p-0 m-0 \">\r\n                                                                <select className='form-control bg-seashell py-1' value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }}>\r\n                                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                                    <option value='Cash'>Cash</option>\r\n                                                                    <option value='Card'>Card</option>\r\n                                                                    <option value='Paytm'>Paytm</option>\r\n                                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                                    <option value='Points'>Points</option>\r\n                                                                    <option value='Adjust-Advance'>Adjust-Advance Cash</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"col-5 col-lg-5 col-md-5 col-sm-1 p-0 m-0 ms-1\">\r\n                                                                <input className='form-control bg-seashell py-1' value={data.amount} onChange={(e) => { data.amount = e.target.value; setpendingpaymentmethods(prevState => [...prevState]) }} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1 col-lg-1 col-md-1 col-sm-1 m-0 p-0 text-center\">\r\n                                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletependingPaymentMethods(i); setpendingpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2\">\r\n                                    <button className='btn py-0' onClick={() => setpendingpaymentmethods(prevState => [...prevState, pendingpaymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                                <button className='button button-burntumber mt-4 mb-2'  onClick={UpdatePendingPayments}>Save</button>\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <div className='rounded-2 bg-lightgreen fw-bolder p-2'>No Pending Payments Found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Payments }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\pharmacy\\Exports.jsx",["904","905","906","907","908","909","910","911"],[],"import React, { useState, useEffect } from 'react'\r\nimport { ExportExcel } from '../features/ExportExcel'\r\nconst ExportPurchaseEntry = (props) => {\r\n    const [ExportPurchaseEntry, setExportPurchaseEntry] = useState([])\r\n    const [ExportPurchaseEntry2, setExportPurchaseEntry2] = useState([])\r\n    const fileName = props.fromdate + '-' + props.todate +'Purchase Entry'\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    function TotalTaxPercent(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    function TotalTaxRate(cgst, sgst, igst) {\r\n        if (cgst && sgst && igst !== null || undefined) {\r\n            return Number(cgst) + Number(sgst) + Number(igst)\r\n        }\r\n    }\r\n    async function MakePurchaseEntryExport() {\r\n        if (props.purchaseentryarr.length !== 0) {\r\n     \r\n            var obj = []\r\n            for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n                var vendorsitems = props.purchaseentryarr[i].medicines.map(Data => ({\r\n                    'Type':'Medicine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST %': Data.CGST,\r\n                    'CGST Rs': Data.CGST_rate,\r\n                    'SGST %': Data.SGST,\r\n                    'SGST Rs': Data.SGST_rate,\r\n                    'IGST %': Data.IGST,\r\n                    'IGST Rs': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST, Data.SGST, Data.IGST),\r\n                    'Total Tax Rs': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Qty': Data.qty,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : ''\r\n                }))\r\n                obj.push(vendorsitems)\r\n\r\n            }\r\n            var obj2 = obj.flat()\r\n\r\n            var objvaccine = []\r\n            for (let i = 0; i < props.purchaseentryarr.length; i++) {\r\n                var vendorsitems = props.purchaseentryarr[i].vaccines.map(Data => ({\r\n                    'Type':'Vaccine',\r\n                    'PE ID': Data.purchase_entry.bill_id && Data.purchase_entry.bill_id != null ? \"PE-\" + Data.purchase_entry.bill_id : '',\r\n                    'Invoice No.': Data.purchase_entry.invoice_no && Data.purchase_entry.invoice_no != null ? Data.purchase_entry.invoice_no : '',\r\n                    'Bill Date': reversefunction(Data.purchase_entry.bill_date),\r\n                    'Distributor': Data.purchase_entry.distributor.entity_name,\r\n                    'GSTIN': Data.purchase_entry.distributor.GSTIN_no,\r\n                    'Item ID': Data.id != null ? Data.id : '',\r\n                    'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                    'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                    'ExpiryDate': Data.expiry_date !== null ? reversefunction(Data.expiry_date) : '',\r\n                    'MRP': Data.mrp != null ? Data.mrp : '',\r\n                    'Rate': Data.rate != null ? Data.rate : '',\r\n                    'Discount': Data.discount != null ? Data.discount : '',\r\n                    'Trade Disc.': Data.trade_discount != null ? Data.trade_discount : '',\r\n                    'CGST %': Data.CGST,\r\n                    'CGST Rs': Data.CGST_rate,\r\n                    'SGST %': Data.SGST,\r\n                    'SGST Rs': Data.SGST_rate,\r\n                    'IGST %': Data.IGST,\r\n                    'IGST Rs': Data.IGST_rate,\r\n                    'Total Tax %': TotalTaxPercent(Data.CGST, Data.SGST, Data.IGST),\r\n                    'Total Tax Rs': TotalTaxRate(Data.CGST_rate, Data.SGST_rate, Data.IGST_rate),\r\n                    'Cost Rs': Data.cost,\r\n                    'Qty': Data.qty,\r\n                    'Total Rs': Data.total_amount ? Data.total_amount : '',\r\n                    'HSN Code': Data.medicine && Data.medicine.hsn_code !== null ? Data.medicine.hsn_code : ''\r\n                }))\r\n                obj.push(vendorsitems)\r\n\r\n            }\r\n            var objj = objvaccine.flat()\r\n            var TotalExport = []\r\n            TotalExport.push(obj2)\r\n            TotalExport.push(objj)\r\n            TotalExport = TotalExport.flat()\r\n            setExportPurchaseEntry(TotalExport)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseEntryExport()\r\n        }\r\n        func()\r\n    }, [props.purchaseentryarr])\r\n    // console.log(props.purchaseentryarr)\r\n    return (\r\n        <>\r\n        <ExportExcel apiData={ExportPurchaseEntry} fileName={fileName} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { ExportPurchaseEntry }\r\n\r\n\r\nconst ExportSaleEntry=(props)=>{\r\n\r\n}\r\nexport{ExportSaleEntry}\r\nconst ExportSaleReturn =(props)=>{\r\n\r\n}\r\nexport {ExportSaleReturn}","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\UpdateAppointment.jsx",["912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933"],[],"import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [load, setload] = useState()\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        if (ApikeyDocTimeslots) {\r\n            for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n                if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                    timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n                }\r\n            }\r\n            setApiDocTimefrom(timefrom)\r\n            settrigger(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        props.fetchallAppointmentslist()\r\n                        props.closeappointmentform()\r\n                        setload(false)\r\n                        props.fetchapi()\r\n                        Notiflix.Notify.success(response.data.message);\r\n\r\n                    } else {\r\n                        setload(false)\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=' text-start position-relative p-0 m-0'>\r\n            <h5 className=\"text-center\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" disabled={load == true ? true : false} onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12 text-center\">\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <label key={i} className={`d-${clinicID == data.id ? 'block' : 'none'}`}><input type=\"checkbox\" className={`radio me-1 `} checked={clinicID == data.id ? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <hr className='p-0 m-0 my-1' />\r\n                <div className=\"row p-0 m-0 text-center ms-5\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" ref={dateref} className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-lg-3 col-3\">\r\n                        <label>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-burntumber' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'pearl' : 'lightgreen'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-burntumber m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {load ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className='btn px-5 button-burntumber' onClick={confirmmessage}>Done</button>\r\n                            </div>\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <button className=\"btn btn-light px-5 border border-2\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\Appointments\\Bill.jsx",["934","935","936","937","938","939","940","941","942"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL } from '../../index'\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nconst Bill = (props) => {\r\n    const url = useContext(URL)\r\n    const adminid = localStorage.getItem('id')\r\n    const Charges = {\r\n        description: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        gross_amount: 0,\r\n        id: ''\r\n    }\r\n    const paymentmethoddetails = {\r\n        paymentmethod: '',\r\n        amount: 0\r\n    }\r\n    //Advance payments\r\n    const [loadadvancepayments, setloadadvancepayments] = useState(false)\r\n    const [advancepayments, setadvancepayments] = useState()\r\n\r\n    //ExtraCharge\r\n    const [extrachargecount, setextrachargecount] = useState([])\r\n\r\n    //Bill\r\n    const [constext, setconstext] = useState('')\r\n    const [docdiscount, setdocdiscount] = useState(0)\r\n    const [coupondiscount, setcoupondiscount] = useState(0)\r\n    const [aartasdiscount, setaartasdiscount] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee)\r\n    const [SGST, setSGST] = useState()\r\n    const [CGST, setCGST] = useState()\r\n    const [paymentmethods, setpaymentmethods] = useState([])\r\n    const [load, setload] = useState()\r\n\r\n    async function AddExtraCharges() {\r\n        let extracharges = []\r\n\r\n           \r\n                for (let j = 0; j < props.appointmentdata.other_charges.length; j++) {\r\n                    extracharges.push({\r\n                        description: props.appointmentdata.other_charges[j].description != null ? props.appointmentdata.other_charges[j].description : 'N/A',\r\n                        amount: props.appointmentdata.other_charges[j].total_amount != null ? props.appointmentdata.other_charges[j].total_amount : 0,\r\n                        discount: props.appointmentdata.other_charges[j].discount != null ? props.appointmentdata.other_charges[j].discount : 0,\r\n                        cgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                        sgst: props.appointmentdata.other_charges[j] != null && props.appointmentdata.other_charges[j].gst_rate != null ? props.appointmentdata.other_charges[j].gst_rate / 2 : 0,\r\n                        gross_amount: props.appointmentdata.other_charges[j].final_amount && props.appointmentdata.other_charges[j].final_amount !== null ? props.appointmentdata.other_charges[j].final_amount : '',\r\n                        id: props.appointmentdata.other_charges[j].id && props.appointmentdata.other_charges[j].id != null ? props.appointmentdata.other_charges[j].id : ''\r\n                    })\r\n\r\n                }\r\n                setaartasdiscount(props.appointmentdata.aartas_discount)\r\n                setdocdiscount(props.appointmentdata.doc_discount)\r\n                setconstext(props.appointmentdata.cons_text)\r\n            \r\n        \r\n        setextrachargecount(extracharges)\r\n    }\r\n    async function AddPaymentMethods() {\r\n        let Payments = []\r\n        let amounts = []\r\n        let allamounts = []\r\n                Payments.push(Object.keys(JSON.parse(props.appointmentdata.payment_method_details)))\r\n                amounts.push(Object.values(JSON.parse(props.appointmentdata.payment_method_details)))\r\n            \r\n        \r\n        let paymentobj = []\r\n        let p = {\r\n            paymentmethod: '',\r\n            amount: 0\r\n        }\r\n        if (Payments[0]) {\r\n            for (let j = 0; j < Payments[0].length; j++) {\r\n                allamounts.push(p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n\r\n            }\r\n            setpaymentmethods(allamounts)\r\n        }\r\n\r\n        paymentmethods.push(paymentobj)\r\n    }\r\n    useEffect(() => {\r\n        AddExtraCharges()\r\n        AddPaymentMethods()\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     AddExtraCharges()\r\n    // }, [props.isLoading])\r\n\r\n    async function DeleteExtraCharges(i) {\r\n        if (extrachargecount[i].id) {\r\n            setextrachargecount([])\r\n            await axios.post(`${url}/appointment/delete/extra/charges`, {\r\n                id: extrachargecount[i].id\r\n            }).then((response) => {\r\n                setextrachargecount([])\r\n                extrachargecount.splice(i, i)\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n            })\r\n        } else {\r\n            extrachargecount.splice(i, i)\r\n        }\r\n\r\n    }\r\n    function DeletePaymentMethods(i) {\r\n        paymentmethods.splice(i, i)\r\n    }\r\n    function Calculate_gst(amount, discount, cgst, sgst) {\r\n        setextrachargecount(prevState => [...prevState]);\r\n        let AMOUNT = amount ? amount : 0\r\n        let DISCOUNT = discount ? discount : 0\r\n        let CGST = cgst ? cgst : 0\r\n        let SGST = sgst ? sgst : 0\r\n        let total = AMOUNT - DISCOUNT\r\n        CGST = (((CGST + SGST) * total) / 100)\r\n        total = total + CGST\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_total_Seperate_gsts() {\r\n        let grosstotal = []\r\n        let total = 0\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            grosstotal.push((Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2)\r\n        }\r\n        // console.log(grosstotal,total)\r\n        grosstotal.forEach(item => {\r\n            total += item\r\n        })\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Get_Grand_Total() {\r\n        let total = 0\r\n        let discounts = Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount)\r\n        extrachargecount.map((data) => (\r\n            total += Number(data.gross_amount)\r\n        ))\r\n        total = total + Number(AddConsAmt) - discounts\r\n        total = total.toFixed(2)\r\n        return total\r\n    }\r\n    function Total_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        if (paymentmethods && paymentmethods.length > 0) {\r\n            for (let i = 0; i < paymentmethods.length; i++) {\r\n                totalarr.push(Number(paymentmethods[i].amount))\r\n            }\r\n            totalarr.forEach(item => {\r\n                total += Number(item)\r\n            })\r\n            total = total.toFixed(2)\r\n            return total\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    function Return_Amount() {\r\n        let totalarr = []\r\n        let total = 0\r\n        let Advance = 0\r\n        for (let i = 0; i < paymentmethods.length; i++) {\r\n            totalarr.push(Number(paymentmethods[i].amount))\r\n        }\r\n        totalarr.forEach(item => {\r\n            total += item\r\n        })\r\n        if (total > Get_Grand_Total()) {\r\n            Advance = total - Get_Grand_Total()\r\n            return Advance\r\n        } else {\r\n            return Advance\r\n        }\r\n\r\n\r\n    }\r\n    async function SaveBill() {\r\n        let GrandTotal = Get_Grand_Total()\r\n        GrandTotal = Number(GrandTotal)\r\n        let Docfee = Number(props.doctorfee)\r\n        let DoctorDiscount = Number(docdiscount)\r\n        let AartasDiscount = Number(aartasdiscount)\r\n        let TotalCGST = Get_total_Seperate_gsts();\r\n        let TotalSGST = Get_total_Seperate_gsts()\r\n        let Description = []\r\n        let TotalAmount = []\r\n        let Discount = []\r\n        let Grossamount = []\r\n        let DiscountedAmount = []\r\n        let ids = []\r\n        let gstrate = [];\r\n        console.log(gstrate)\r\n        for (let i = 0; i < extrachargecount.length; i++) {\r\n            Description.push(extrachargecount[i].description)\r\n            TotalAmount.push(Number(extrachargecount[i].amount))\r\n            Discount.push(Number(extrachargecount[i].discount))\r\n            DiscountedAmount.push(Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))\r\n            if (extrachargecount[i].id) {\r\n                ids.push(Number(extrachargecount[i].id))\r\n            }\r\n            if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n                gstrate.push(Number(extrachargecount[i].cgst + extrachargecount[i].sgst))\r\n            } else {\r\n                gstrate.push(0)\r\n            }\r\n            Grossamount.push(extrachargecount[i].gross_amount)\r\n        }\r\n        let Paymentmethod = [];\r\n        let Paymentmethodsvalue = []\r\n        for (let j = 0; j < paymentmethods.length; j++) {\r\n            Paymentmethod.push(paymentmethods[j].paymentmethod)\r\n            Paymentmethodsvalue.push(Number(paymentmethods[j].amount))\r\n        }\r\n        let Data = {\r\n            appointment_id: props.appointmentid,\r\n            g_total_main: GrandTotal,\r\n            cons_fee: Docfee,\r\n            description: Description,\r\n            total_amount: TotalAmount,\r\n            discount: Discount,\r\n            amount: DiscountedAmount,\r\n            doc_dis: DoctorDiscount,\r\n            aartas_discount: AartasDiscount,\r\n            payment_method: Paymentmethod,\r\n            payment_method_main: Paymentmethod,\r\n            payment_method_details: Paymentmethodsvalue,\r\n            SGST: Number(TotalSGST),\r\n            CGST: Number(TotalCGST),\r\n            admin_id: Number(adminid),\r\n            cons_text: constext,\r\n            add_to_cart: AtC,\r\n            show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n            ot_id: ids,\r\n            gst_rate: gstrate,\r\n            final_amount: Grossamount\r\n        }\r\n        async function Payment() {\r\n            try {\r\n                setload(true)\r\n                await axios.post(`${url}/appointment/save/charges`, Data).then((response) => {\r\n                    props.Appointmentlist()\r\n                    props.setsingleload(0);\r\n                    setextrachargecount([])\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    setload(false)\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            }\r\n\r\n        }\r\n        Payment()\r\n    }\r\n    const confirmmessage = (e) => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(0)\r\n                SaveBill()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const AddtoCart = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Add Charges and Payments in Cart`,\r\n            `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                setAtC(1)\r\n            },\r\n            () => {\r\n                setAtC(0)\r\n\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    async function AdvancePayments() {\r\n        setloadadvancepayments(true)\r\n        axios.post(`${url}/advance/balance`, {\r\n            patient_id: props.patientid\r\n        }).then((response) => {\r\n            setloadadvancepayments(false)\r\n            setadvancepayments(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        AdvancePayments()\r\n    }, [])\r\n    return (\r\n        <div className='bg-seashell rounded-4 position-relative'>\r\n            <h5 className='text-burntumber fw-bold'>{props.patientname} Bill</h5>\r\n            <button className='btn btn-close position-absolute top-0 end-0 me-2' onClick={() => { props.toggle_bill() }}></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className='scroll'>\r\n                {\r\n                    props.isLoading ? (\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"container-fluid text-start p-2 position-relative\">\r\n                                <h6 className='fw-bolder text-charcoal'>Consultation</h6>\r\n                                <label className='position-absolute end-0 top-0 mt-1 me-4 text-cahrcoal fw-bolder'><input type='checkbox'disabled ={true} checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />Add Consultation Amount</label>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor's Consultation Charge</label>\r\n                                        <input className='form-control bg-seashell' disabled={true} value={AddConsAmt} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Consultation text</label>\r\n                                        <input className='form-control bg-seashell' disabled={true} value={constext ? constext : ''} onChange={(e) => setconstext(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Procedure</label>\r\n                                        <select className='form-control bg-seashell' disabled={true}>\r\n                                            <option>Procedures</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <h6 className='fw-bolder text-charcoal'>Discounts</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Coupon</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={coupondiscount ? coupondiscount : ''} onChange={(e) => setcoupondiscount(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Doctor</label>\r\n                                        <input className='form-control bg-seashell text-center'disabled ={true} value={docdiscount ? docdiscount : ''} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>Aartas</label>\r\n                                        <input className='form-control bg-seashell text-center' disabled ={true} value={aartasdiscount ? aartasdiscount : ''} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-fluid text-start p-2\">\r\n                                <div className='bg-seashell rounded-2 position-relative'>\r\n                                    <h6 className='p-1 text-charcoal fw-bolder'>ExtraCharges</h6>\r\n                                    {\r\n                                        props.isLoading ? (\r\n                                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                <div class=\"spinner-border\" role=\"status\">\r\n                                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            extrachargecount.map((data, i) => (\r\n                                                <div className=\"container-fluid p-0 m-0 text-center\">\r\n                                                    <div className=\"row p-0 m-0\">\r\n                                                        <div className=\"col-3 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Description</label>\r\n                                                            <input className='form-control p-0 bg-seashell m-0 text-center' disabled ={true} value={data.description ? data.description : ''} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>Amount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' disabled ={true} value={data.amount ? data.amount : ''} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst) }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0 \">\r\n                                                            <label className='fw-bold text-charcoal75'>Discount</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' value={data.discount ? data.discount : ''} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-2 m-0 p-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>FinalAmount</label>\r\n                                                            <input type='number' className='form-control  text-center bg-seashell p-0 m-0' disabled ={true} value={data.amount && data.discount ? data.amount - data.discount : ''} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='fw-bold text-charcoal75'>GST %</label>\r\n                                                            <input type='number' className='form-control text-center bg-seashell p-0 m-0' disabled ={true} value={data.cgst && data.sgst ? data.cgst + data.sgst : ''} onChange={(e) => { data.cgst = (e.target.value / 2); data.sgst = (e.target.value / 2); data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                                                        </div>\r\n                                                        <div className=\"col-1 p-0 m-0\">\r\n                                                            <label className='text-center fw-bold text-charcoal75'>Total </label>\r\n                                                            <input className=' form-control text-center bg-seashell p-0' disabled ={true} value={data.gross_amount ? data.gross_amount : ''} />\r\n                                                        </div>\r\n                                                        <div className=\"col-auto align-self-end d-none\">\r\n                                                            <button className='btn btn-sm p-0 m-0' onClick={() => { DeleteExtraCharges(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n\r\n                                    }\r\n                                    <div className=\"container-fluid text-center mt-2 d-none\">\r\n                                        <button className='btn py-0' onClick={() => setextrachargecount(prevState => [...prevState, Charges])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid text-start \">\r\n                                <h6 className='fw-bolder text-charcoal'>Tax</h6>\r\n                                <div className=\"row p-0 m-0\">\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>SGST</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={SGST ? SGST : Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className='text-charcoal75 fw-bold'>CGST</label>\r\n                                        <input className='form-control bg-seashell' disabled ={true} value={CGST ? CGST : Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-fluid p-2 text-center rounded-2 bg-lightyellow mt-2\">\r\n                                <div className=\"row text-center p-0 m-0 align-items-center\">\r\n                                    <div className='col-4 align-self-end'>\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Grand Total</label>\r\n                                        <input className='form-control text-success text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} value={Get_Grand_Total()} />\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Advance Amount Balance</label>\r\n                                        {\r\n                                            loadadvancepayments ? (\r\n                                                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                                    <div class=\"spinner-border\" role=\"status\">\r\n                                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                advancepayments ? (\r\n                                                    <input className='form-control text-lightgreen text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} value={advancepayments.advnace_total} />\r\n                                                ) : (\r\n                                                    <div className='bg-lightred text-center fw-bolder rounded-2 p-2'>No Advance Payments Found</div>\r\n                                                )\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 align-self-end\">\r\n                                        <label className=' fw-bolder text-charcoal text-wrap'>Consumables Amount</label>\r\n                                        <input className='form-control text-primary text-center border-0 fw-bolder p-0 fs-5 bg-seashell' disabled ={true} />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"container-fluid text-start position-relative p-2\">\r\n                                <h6 className='text-charcoal fw-bolder'>Payments</h6>\r\n                                <div className=\"row justify-content-end p-0 m-0\">\r\n                                    <div className=\"col-6 text-end p-0 m-0\">\r\n                                        <div className=\"row text-end p-0 m-0\">\r\n                                            <span className=\"col-8 text-wrap text-end p-0 m-0 fw-bold\"> Total Amount: </span>\r\n                                            <span className=\"col-4 text-end align-self-end p-0 m-0 text-success fw-bold\"> {paymentmethods && paymentmethods.length > 0 ? Total_Amount() : 0} </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-6 text-center m-0 p-0'>\r\n                                        <div className=\"row text-center p-0 m-0\">\r\n                                            <p className=\"col-8 text-wrap text-center p-0 m-0 fw-bold\"> Return Amount: </p>\r\n                                            <p className=\"col-4 text-start align-self-end p-0 m-0 text-burntumber fw-bold\"> {Return_Amount()} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    paymentmethods.map((data, i) => (\r\n                                        <div className=\"row p-0 m-0 justify-content-center m-2 ps-2\">\r\n                                            <div className=\"col-4 p-0 mx-2\">\r\n                                                <select className='form-control bg-seashell py-1' disabled ={true} value={data.paymentmethod} onChange={(e) => { data.paymentmethod = e.target.value; setpaymentmethods(prevState => [...prevState]) }}>\r\n                                                    <option className='text-charcoal75 fw-bolder'>Payment Method</option>\r\n                                                    <option value='Cash'>Cash</option>\r\n                                                    <option value='Card'>Card</option>\r\n                                                    <option value='Paytm'>Paytm</option>\r\n                                                    <option value='Phonepe'>Phone Pe</option>\r\n                                                    <option value='Wire-Transfer'>Wire Transfer</option>\r\n                                                    <option value='Razorpay'>Razorpay</option>\r\n                                                    <option value='Points'>Points</option>\r\n                                                    <option value='Adjust-Advance'>Adjust-Advance</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-4 p-0 m-0\">\r\n                                                <input className='form-control bg-seashell py-1' disabled ={true} value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods(prevState => [...prevState]) }} />\r\n                                            </div>\r\n                                            <div className=\"col-2 d-none\">\r\n                                                <button className='btn btn-sm p-0 m-0' onClick={() => { DeletePaymentMethods(i); setpaymentmethods(prevState => [...prevState]) }}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.5rem' }} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className=\"container-fluid text-center mt-2 d-none\">\r\n                                    <button className='btn py-0' onClick={() => setpaymentmethods(prevState => [...prevState, paymentmethoddetails])}><img src={process.env.PUBLIC_URL + '/images/add.png'} className='img-fluid' style={{ width: '2rem' }} /></button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <hr />\r\n                <div className=\"container-fluid pb-2 d-none\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row p-0 m-0\">\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-burntumber' onClick={confirmmessage}>Save</button>\r\n                                </div>\r\n                                <div className=\"col-6 justify-content-center\">\r\n                                    <button className='button button-brandy' onClick={AddtoCart}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Bill }","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\notiflix\\customnotify.jsx",["943"],[],"import React from 'react'\r\nimport Notiflix from 'notiflix'\r\n\r\nconst customnotify = () => {\r\n  return (\r\n      \r\nNotiflix.Notify.init({\r\n    width: '280px',\r\n    position: 'right-top',\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 1000,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade',\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic',\r\n    fontAwesomeIconSize: '34px',\r\n    success: {\r\n    background: '#95B3AB',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-success',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-check-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n    failure: {\r\n    background: '#ff5549',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-failure',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-times-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n    warning: {\r\n    background: '#eebf31',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-warning',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n    info: {\r\n    background: '#26c0d3',\r\n    textColor: '#fff',\r\n    childClassName: 'notiflix-notify-info',\r\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n    fontAwesomeClassName: 'fas fa-info-circle',\r\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n    backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n    })\r\n  )\r\n}\r\n\r\nexport  {customnotify}\r\n","C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\ExportExcel.jsx",[],[],"C:\\Users\\Aartas-WebDesign\\Desktop\\ConnectApp_React\\src\\components\\features\\notiflix\\customloading.jsx",["944"],[],{"ruleId":"945","severity":1,"message":"946","line":2,"column":17,"nodeType":"947","messageId":"948","endLine":2,"endColumn":27},{"ruleId":"949","severity":1,"message":"950","line":113,"column":6,"nodeType":"951","endLine":113,"endColumn":16,"suggestions":"952"},{"ruleId":"953","severity":1,"message":"954","line":123,"column":26,"nodeType":"955","messageId":"956","endLine":123,"endColumn":28},{"ruleId":"953","severity":1,"message":"954","line":128,"column":20,"nodeType":"955","messageId":"956","endLine":128,"endColumn":22},{"ruleId":"957","severity":1,"message":"958","line":130,"column":15,"nodeType":"959","endLine":130,"endColumn":141},{"ruleId":"957","severity":1,"message":"958","line":251,"column":15,"nodeType":"959","endLine":251,"endColumn":144},{"ruleId":"960","severity":1,"message":"961","line":258,"column":69,"nodeType":"959","endLine":258,"endColumn":151},{"ruleId":"953","severity":1,"message":"962","line":267,"column":214,"nodeType":"955","messageId":"956","endLine":267,"endColumn":216},{"ruleId":"953","severity":1,"message":"954","line":267,"column":262,"nodeType":"955","messageId":"956","endLine":267,"endColumn":264},{"ruleId":"963","severity":1,"message":"964","line":270,"column":25,"nodeType":"959","endLine":270,"endColumn":133},{"ruleId":"963","severity":1,"message":"964","line":276,"column":25,"nodeType":"959","endLine":276,"endColumn":108},{"ruleId":"953","severity":1,"message":"954","line":292,"column":106,"nodeType":"955","messageId":"956","endLine":292,"endColumn":108},{"ruleId":"963","severity":1,"message":"965","line":302,"column":58,"nodeType":"959","endLine":302,"endColumn":103},{"ruleId":"945","severity":1,"message":"966","line":4,"column":26,"nodeType":"947","messageId":"948","endLine":4,"endColumn":35},{"ruleId":"945","severity":1,"message":"967","line":6,"column":39,"nodeType":"947","messageId":"948","endLine":6,"endColumn":48},{"ruleId":"945","severity":1,"message":"968","line":9,"column":54,"nodeType":"947","messageId":"948","endLine":9,"endColumn":74},{"ruleId":"945","severity":1,"message":"969","line":11,"column":10,"nodeType":"947","messageId":"948","endLine":11,"endColumn":31},{"ruleId":"945","severity":1,"message":"970","line":67,"column":9,"nodeType":"947","messageId":"948","endLine":67,"endColumn":24},{"ruleId":"945","severity":1,"message":"971","line":117,"column":12,"nodeType":"947","messageId":"948","endLine":117,"endColumn":26},{"ruleId":"953","severity":1,"message":"954","line":248,"column":16,"nodeType":"955","messageId":"956","endLine":248,"endColumn":18},{"ruleId":"945","severity":1,"message":"972","line":278,"column":7,"nodeType":"947","messageId":"948","endLine":278,"endColumn":14},{"ruleId":"945","severity":1,"message":"973","line":288,"column":23,"nodeType":"947","messageId":"948","endLine":288,"endColumn":37},{"ruleId":"953","severity":1,"message":"962","line":369,"column":53,"nodeType":"955","messageId":"956","endLine":369,"endColumn":55},{"ruleId":"953","severity":1,"message":"954","line":371,"column":22,"nodeType":"955","messageId":"956","endLine":371,"endColumn":24},{"ruleId":"953","severity":1,"message":"954","line":394,"column":16,"nodeType":"955","messageId":"956","endLine":394,"endColumn":18},{"ruleId":"974","severity":1,"message":"975","line":445,"column":41,"nodeType":"976","messageId":"977","endLine":445,"endColumn":43},{"ruleId":"949","severity":1,"message":"978","line":460,"column":6,"nodeType":"951","endLine":460,"endColumn":8,"suggestions":"979"},{"ruleId":"949","severity":1,"message":"978","line":464,"column":6,"nodeType":"951","endLine":464,"endColumn":40,"suggestions":"980"},{"ruleId":"953","severity":1,"message":"954","line":485,"column":18,"nodeType":"955","messageId":"956","endLine":485,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":496,"column":18,"nodeType":"955","messageId":"956","endLine":496,"endColumn":20},{"ruleId":"953","severity":1,"message":"962","line":521,"column":20,"nodeType":"955","messageId":"956","endLine":521,"endColumn":22},{"ruleId":"981","severity":1,"message":"982","line":522,"column":20,"nodeType":"955","messageId":"983","endLine":522,"endColumn":21},{"ruleId":"953","severity":1,"message":"954","line":538,"column":129,"nodeType":"955","messageId":"956","endLine":538,"endColumn":131},{"ruleId":"945","severity":1,"message":"984","line":621,"column":17,"nodeType":"947","messageId":"948","endLine":621,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":627,"column":11,"nodeType":"955","messageId":"956","endLine":627,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":632,"column":11,"nodeType":"955","messageId":"956","endLine":632,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":632,"column":21,"nodeType":"955","messageId":"956","endLine":632,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":632,"column":47,"nodeType":"955","messageId":"956","endLine":632,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":643,"column":11,"nodeType":"955","messageId":"956","endLine":643,"endColumn":13},{"ruleId":"949","severity":1,"message":"985","line":651,"column":6,"nodeType":"951","endLine":651,"endColumn":8,"suggestions":"986"},{"ruleId":"949","severity":1,"message":"985","line":654,"column":6,"nodeType":"951","endLine":654,"endColumn":21,"suggestions":"987"},{"ruleId":"953","severity":1,"message":"962","line":751,"column":53,"nodeType":"955","messageId":"956","endLine":751,"endColumn":55},{"ruleId":"960","severity":1,"message":"961","line":754,"column":117,"nodeType":"959","endLine":754,"endColumn":207},{"ruleId":"953","severity":1,"message":"954","line":755,"column":31,"nodeType":"955","messageId":"956","endLine":755,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":758,"column":115,"nodeType":"955","messageId":"956","endLine":758,"endColumn":117},{"ruleId":"953","severity":1,"message":"954","line":795,"column":74,"nodeType":"955","messageId":"956","endLine":795,"endColumn":76},{"ruleId":"953","severity":1,"message":"954","line":795,"column":136,"nodeType":"955","messageId":"956","endLine":795,"endColumn":138},{"ruleId":"945","severity":1,"message":"984","line":825,"column":17,"nodeType":"947","messageId":"948","endLine":825,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":832,"column":11,"nodeType":"955","messageId":"956","endLine":832,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":838,"column":11,"nodeType":"955","messageId":"956","endLine":838,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":838,"column":21,"nodeType":"955","messageId":"956","endLine":838,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":838,"column":47,"nodeType":"955","messageId":"956","endLine":838,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":849,"column":11,"nodeType":"955","messageId":"956","endLine":849,"endColumn":13},{"ruleId":"949","severity":1,"message":"988","line":857,"column":6,"nodeType":"951","endLine":857,"endColumn":8,"suggestions":"989"},{"ruleId":"949","severity":1,"message":"988","line":860,"column":6,"nodeType":"951","endLine":860,"endColumn":21,"suggestions":"990"},{"ruleId":"953","severity":1,"message":"962","line":904,"column":51,"nodeType":"955","messageId":"956","endLine":904,"endColumn":53},{"ruleId":"960","severity":1,"message":"961","line":907,"column":116,"nodeType":"959","endLine":907,"endColumn":206},{"ruleId":"953","severity":1,"message":"954","line":908,"column":31,"nodeType":"955","messageId":"956","endLine":908,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":909,"column":102,"nodeType":"955","messageId":"956","endLine":909,"endColumn":104},{"ruleId":"960","severity":1,"message":"961","line":916,"column":64,"nodeType":"959","endLine":916,"endColumn":158},{"ruleId":"953","severity":1,"message":"954","line":942,"column":74,"nodeType":"955","messageId":"956","endLine":942,"endColumn":76},{"ruleId":"953","severity":1,"message":"954","line":942,"column":136,"nodeType":"955","messageId":"956","endLine":942,"endColumn":138},{"ruleId":"945","severity":1,"message":"991","line":965,"column":10,"nodeType":"947","messageId":"948","endLine":965,"endColumn":14},{"ruleId":"945","severity":1,"message":"992","line":965,"column":16,"nodeType":"947","messageId":"948","endLine":965,"endColumn":23},{"ruleId":"945","severity":1,"message":"993","line":969,"column":18,"nodeType":"947","messageId":"948","endLine":969,"endColumn":27},{"ruleId":"953","severity":1,"message":"954","line":973,"column":15,"nodeType":"955","messageId":"956","endLine":973,"endColumn":17},{"ruleId":"994","severity":1,"message":"995","line":974,"column":14,"nodeType":"959","messageId":"996","endLine":974,"endColumn":171},{"ruleId":"953","severity":1,"message":"954","line":976,"column":15,"nodeType":"955","messageId":"956","endLine":976,"endColumn":17},{"ruleId":"994","severity":1,"message":"997","line":977,"column":14,"nodeType":"959","messageId":"996","endLine":977,"endColumn":150},{"ruleId":"953","severity":1,"message":"954","line":979,"column":14,"nodeType":"955","messageId":"956","endLine":979,"endColumn":16},{"ruleId":"994","severity":1,"message":"998","line":980,"column":14,"nodeType":"959","messageId":"996","endLine":980,"endColumn":151},{"ruleId":"953","severity":1,"message":"954","line":994,"column":60,"nodeType":"955","messageId":"956","endLine":994,"endColumn":62},{"ruleId":"953","severity":1,"message":"954","line":994,"column":103,"nodeType":"955","messageId":"956","endLine":994,"endColumn":105},{"ruleId":"953","severity":1,"message":"954","line":1006,"column":75,"nodeType":"955","messageId":"956","endLine":1006,"endColumn":77},{"ruleId":"949","severity":1,"message":"999","line":33,"column":8,"nodeType":"951","endLine":33,"endColumn":26,"suggestions":"1000"},{"ruleId":"953","severity":1,"message":"954","line":54,"column":39,"nodeType":"955","messageId":"956","endLine":54,"endColumn":41},{"ruleId":"945","severity":1,"message":"1001","line":23,"column":12,"nodeType":"947","messageId":"948","endLine":23,"endColumn":21},{"ruleId":"949","severity":1,"message":"1002","line":35,"column":8,"nodeType":"951","endLine":35,"endColumn":10,"suggestions":"1003"},{"ruleId":"949","severity":1,"message":"1004","line":43,"column":7,"nodeType":"951","endLine":43,"endColumn":34,"suggestions":"1005"},{"ruleId":"953","severity":1,"message":"962","line":96,"column":61,"nodeType":"955","messageId":"956","endLine":96,"endColumn":63},{"ruleId":"953","severity":1,"message":"954","line":163,"column":40,"nodeType":"955","messageId":"956","endLine":163,"endColumn":42},{"ruleId":"953","severity":1,"message":"954","line":175,"column":58,"nodeType":"955","messageId":"956","endLine":175,"endColumn":60},{"ruleId":"953","severity":1,"message":"954","line":177,"column":58,"nodeType":"955","messageId":"956","endLine":177,"endColumn":60},{"ruleId":"953","severity":1,"message":"954","line":186,"column":36,"nodeType":"955","messageId":"956","endLine":186,"endColumn":38},{"ruleId":"953","severity":1,"message":"954","line":186,"column":59,"nodeType":"955","messageId":"956","endLine":186,"endColumn":61},{"ruleId":"953","severity":1,"message":"954","line":189,"column":47,"nodeType":"955","messageId":"956","endLine":189,"endColumn":49},{"ruleId":"953","severity":1,"message":"954","line":209,"column":64,"nodeType":"955","messageId":"956","endLine":209,"endColumn":66},{"ruleId":"953","severity":1,"message":"954","line":209,"column":171,"nodeType":"955","messageId":"956","endLine":209,"endColumn":173},{"ruleId":"953","severity":1,"message":"954","line":244,"column":45,"nodeType":"955","messageId":"956","endLine":244,"endColumn":47},{"ruleId":"953","severity":1,"message":"954","line":245,"column":93,"nodeType":"955","messageId":"956","endLine":245,"endColumn":95},{"ruleId":"953","severity":1,"message":"954","line":245,"column":120,"nodeType":"955","messageId":"956","endLine":245,"endColumn":122},{"ruleId":"953","severity":1,"message":"954","line":39,"column":18,"nodeType":"955","messageId":"956","endLine":39,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":43,"column":18,"nodeType":"955","messageId":"956","endLine":43,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":99,"column":32,"nodeType":"955","messageId":"956","endLine":99,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":100,"column":31,"nodeType":"955","messageId":"956","endLine":100,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":385,"column":130,"nodeType":"955","messageId":"956","endLine":385,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":385,"column":150,"nodeType":"955","messageId":"956","endLine":385,"endColumn":152},{"ruleId":"953","severity":1,"message":"954","line":385,"column":193,"nodeType":"955","messageId":"956","endLine":385,"endColumn":195},{"ruleId":"953","severity":1,"message":"954","line":385,"column":213,"nodeType":"955","messageId":"956","endLine":385,"endColumn":215},{"ruleId":"953","severity":1,"message":"954","line":385,"column":266,"nodeType":"955","messageId":"956","endLine":385,"endColumn":268},{"ruleId":"953","severity":1,"message":"954","line":385,"column":286,"nodeType":"955","messageId":"956","endLine":385,"endColumn":288},{"ruleId":"953","severity":1,"message":"954","line":386,"column":86,"nodeType":"955","messageId":"956","endLine":386,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":386,"column":106,"nodeType":"955","messageId":"956","endLine":386,"endColumn":108},{"ruleId":"953","severity":1,"message":"954","line":386,"column":149,"nodeType":"955","messageId":"956","endLine":386,"endColumn":151},{"ruleId":"953","severity":1,"message":"954","line":386,"column":169,"nodeType":"955","messageId":"956","endLine":386,"endColumn":171},{"ruleId":"953","severity":1,"message":"954","line":386,"column":222,"nodeType":"955","messageId":"956","endLine":386,"endColumn":224},{"ruleId":"953","severity":1,"message":"954","line":386,"column":242,"nodeType":"955","messageId":"956","endLine":386,"endColumn":244},{"ruleId":"953","severity":1,"message":"954","line":388,"column":130,"nodeType":"955","messageId":"956","endLine":388,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":388,"column":152,"nodeType":"955","messageId":"956","endLine":388,"endColumn":154},{"ruleId":"953","severity":1,"message":"954","line":388,"column":197,"nodeType":"955","messageId":"956","endLine":388,"endColumn":199},{"ruleId":"953","severity":1,"message":"954","line":388,"column":219,"nodeType":"955","messageId":"956","endLine":388,"endColumn":221},{"ruleId":"953","severity":1,"message":"954","line":388,"column":274,"nodeType":"955","messageId":"956","endLine":388,"endColumn":276},{"ruleId":"953","severity":1,"message":"954","line":388,"column":296,"nodeType":"955","messageId":"956","endLine":388,"endColumn":298},{"ruleId":"953","severity":1,"message":"954","line":389,"column":86,"nodeType":"955","messageId":"956","endLine":389,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":389,"column":108,"nodeType":"955","messageId":"956","endLine":389,"endColumn":110},{"ruleId":"953","severity":1,"message":"954","line":389,"column":153,"nodeType":"955","messageId":"956","endLine":389,"endColumn":155},{"ruleId":"953","severity":1,"message":"954","line":389,"column":175,"nodeType":"955","messageId":"956","endLine":389,"endColumn":177},{"ruleId":"953","severity":1,"message":"954","line":389,"column":230,"nodeType":"955","messageId":"956","endLine":389,"endColumn":232},{"ruleId":"953","severity":1,"message":"954","line":389,"column":252,"nodeType":"955","messageId":"956","endLine":389,"endColumn":254},{"ruleId":"953","severity":1,"message":"954","line":391,"column":130,"nodeType":"955","messageId":"956","endLine":391,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":391,"column":152,"nodeType":"955","messageId":"956","endLine":391,"endColumn":154},{"ruleId":"953","severity":1,"message":"954","line":391,"column":197,"nodeType":"955","messageId":"956","endLine":391,"endColumn":199},{"ruleId":"953","severity":1,"message":"954","line":391,"column":219,"nodeType":"955","messageId":"956","endLine":391,"endColumn":221},{"ruleId":"953","severity":1,"message":"954","line":391,"column":266,"nodeType":"955","messageId":"956","endLine":391,"endColumn":268},{"ruleId":"953","severity":1,"message":"954","line":391,"column":288,"nodeType":"955","messageId":"956","endLine":391,"endColumn":290},{"ruleId":"953","severity":1,"message":"954","line":392,"column":86,"nodeType":"955","messageId":"956","endLine":392,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":392,"column":108,"nodeType":"955","messageId":"956","endLine":392,"endColumn":110},{"ruleId":"953","severity":1,"message":"954","line":392,"column":153,"nodeType":"955","messageId":"956","endLine":392,"endColumn":155},{"ruleId":"953","severity":1,"message":"954","line":392,"column":175,"nodeType":"955","messageId":"956","endLine":392,"endColumn":177},{"ruleId":"953","severity":1,"message":"954","line":392,"column":230,"nodeType":"955","messageId":"956","endLine":392,"endColumn":232},{"ruleId":"953","severity":1,"message":"954","line":392,"column":252,"nodeType":"955","messageId":"956","endLine":392,"endColumn":254},{"ruleId":"945","severity":1,"message":"1006","line":2,"column":20,"nodeType":"947","messageId":"948","endLine":2,"endColumn":29},{"ruleId":"945","severity":1,"message":"1007","line":12,"column":9,"nodeType":"947","messageId":"948","endLine":12,"endColumn":16},{"ruleId":"945","severity":1,"message":"1008","line":51,"column":9,"nodeType":"947","messageId":"948","endLine":51,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":88,"column":32,"nodeType":"955","messageId":"956","endLine":88,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":99,"column":93,"nodeType":"955","messageId":"956","endLine":99,"endColumn":95},{"ruleId":"953","severity":1,"message":"954","line":117,"column":45,"nodeType":"955","messageId":"956","endLine":117,"endColumn":47},{"ruleId":"953","severity":1,"message":"954","line":117,"column":147,"nodeType":"955","messageId":"956","endLine":117,"endColumn":149},{"ruleId":"945","severity":1,"message":"1009","line":8,"column":9,"nodeType":"947","messageId":"948","endLine":8,"endColumn":22},{"ruleId":"945","severity":1,"message":"1010","line":31,"column":10,"nodeType":"947","messageId":"948","endLine":31,"endColumn":23},{"ruleId":"945","severity":1,"message":"1011","line":42,"column":10,"nodeType":"947","messageId":"948","endLine":42,"endColumn":16},{"ruleId":"945","severity":1,"message":"1012","line":58,"column":12,"nodeType":"947","messageId":"948","endLine":58,"endColumn":20},{"ruleId":"949","severity":1,"message":"1013","line":87,"column":6,"nodeType":"951","endLine":87,"endColumn":23,"suggestions":"1014"},{"ruleId":"953","severity":1,"message":"954","line":104,"column":18,"nodeType":"955","messageId":"956","endLine":104,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":115,"column":18,"nodeType":"955","messageId":"956","endLine":115,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":232,"column":18,"nodeType":"955","messageId":"956","endLine":232,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":275,"column":27,"nodeType":"955","messageId":"956","endLine":275,"endColumn":29},{"ruleId":"953","severity":1,"message":"954","line":277,"column":77,"nodeType":"955","messageId":"956","endLine":277,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":277,"column":123,"nodeType":"955","messageId":"956","endLine":277,"endColumn":125},{"ruleId":"953","severity":1,"message":"954","line":277,"column":173,"nodeType":"955","messageId":"956","endLine":277,"endColumn":175},{"ruleId":"953","severity":1,"message":"954","line":279,"column":35,"nodeType":"955","messageId":"956","endLine":279,"endColumn":37},{"ruleId":"953","severity":1,"message":"954","line":280,"column":62,"nodeType":"955","messageId":"956","endLine":280,"endColumn":64},{"ruleId":"953","severity":1,"message":"954","line":324,"column":28,"nodeType":"955","messageId":"956","endLine":324,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":335,"column":46,"nodeType":"955","messageId":"956","endLine":335,"endColumn":48},{"ruleId":"1015","severity":1,"message":"1016","line":369,"column":52,"nodeType":"959","messageId":"1017","endLine":369,"endColumn":248,"fix":"1018"},{"ruleId":"1015","severity":1,"message":"1016","line":370,"column":52,"nodeType":"959","messageId":"1017","endLine":370,"endColumn":252,"fix":"1019"},{"ruleId":"953","severity":1,"message":"954","line":373,"column":190,"nodeType":"955","messageId":"956","endLine":373,"endColumn":192},{"ruleId":"953","severity":1,"message":"954","line":379,"column":205,"nodeType":"955","messageId":"956","endLine":379,"endColumn":207},{"ruleId":"953","severity":1,"message":"954","line":384,"column":41,"nodeType":"955","messageId":"956","endLine":384,"endColumn":43},{"ruleId":"953","severity":1,"message":"954","line":385,"column":68,"nodeType":"955","messageId":"956","endLine":385,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":391,"column":201,"nodeType":"955","messageId":"956","endLine":391,"endColumn":203},{"ruleId":"945","severity":1,"message":"1020","line":443,"column":8,"nodeType":"947","messageId":"948","endLine":443,"endColumn":16},{"ruleId":"953","severity":1,"message":"954","line":450,"column":37,"nodeType":"955","messageId":"956","endLine":450,"endColumn":39},{"ruleId":"974","severity":1,"message":"975","line":454,"column":39,"nodeType":"976","messageId":"977","endLine":454,"endColumn":41},{"ruleId":"953","severity":1,"message":"962","line":481,"column":31,"nodeType":"955","messageId":"956","endLine":481,"endColumn":33},{"ruleId":"949","severity":1,"message":"950","line":516,"column":6,"nodeType":"951","endLine":516,"endColumn":23,"suggestions":"1021"},{"ruleId":"945","severity":1,"message":"1022","line":1,"column":8,"nodeType":"947","messageId":"948","endLine":1,"endColumn":13},{"ruleId":"945","severity":1,"message":"1023","line":2,"column":16,"nodeType":"947","messageId":"948","endLine":2,"endColumn":24},{"ruleId":"945","severity":1,"message":"1006","line":2,"column":25,"nodeType":"947","messageId":"948","endLine":2,"endColumn":34},{"ruleId":"945","severity":1,"message":"946","line":2,"column":35,"nodeType":"947","messageId":"948","endLine":2,"endColumn":45},{"ruleId":"945","severity":1,"message":"1024","line":3,"column":10,"nodeType":"947","messageId":"948","endLine":3,"endColumn":13},{"ruleId":"945","severity":1,"message":"1025","line":6,"column":8,"nodeType":"947","messageId":"948","endLine":6,"endColumn":16},{"ruleId":"945","severity":1,"message":"1026","line":7,"column":10,"nodeType":"947","messageId":"948","endLine":7,"endColumn":22},{"ruleId":"945","severity":1,"message":"1027","line":11,"column":50,"nodeType":"947","messageId":"948","endLine":11,"endColumn":67},{"ruleId":"945","severity":1,"message":"1028","line":11,"column":69,"nodeType":"947","messageId":"948","endLine":11,"endColumn":87},{"ruleId":"945","severity":1,"message":"1029","line":11,"column":109,"nodeType":"947","messageId":"948","endLine":11,"endColumn":127},{"ruleId":"945","severity":1,"message":"984","line":79,"column":17,"nodeType":"947","messageId":"948","endLine":79,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":111,"column":11,"nodeType":"955","messageId":"956","endLine":111,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":115,"column":11,"nodeType":"955","messageId":"956","endLine":115,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":115,"column":21,"nodeType":"955","messageId":"956","endLine":115,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":115,"column":47,"nodeType":"955","messageId":"956","endLine":115,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":126,"column":15,"nodeType":"955","messageId":"956","endLine":126,"endColumn":17},{"ruleId":"949","severity":1,"message":"1030","line":148,"column":6,"nodeType":"951","endLine":148,"endColumn":33,"suggestions":"1031"},{"ruleId":"953","severity":1,"message":"954","line":161,"column":18,"nodeType":"955","messageId":"956","endLine":161,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":172,"column":18,"nodeType":"955","messageId":"956","endLine":172,"endColumn":20},{"ruleId":"953","severity":1,"message":"962","line":259,"column":51,"nodeType":"955","messageId":"956","endLine":259,"endColumn":53},{"ruleId":"953","severity":1,"message":"954","line":263,"column":54,"nodeType":"955","messageId":"956","endLine":263,"endColumn":56},{"ruleId":"953","severity":1,"message":"954","line":272,"column":68,"nodeType":"955","messageId":"956","endLine":272,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":272,"column":135,"nodeType":"955","messageId":"956","endLine":272,"endColumn":137},{"ruleId":"953","severity":1,"message":"954","line":282,"column":65,"nodeType":"955","messageId":"956","endLine":282,"endColumn":67},{"ruleId":"953","severity":1,"message":"954","line":294,"column":70,"nodeType":"955","messageId":"956","endLine":294,"endColumn":72},{"ruleId":"953","severity":1,"message":"954","line":296,"column":31,"nodeType":"955","messageId":"956","endLine":296,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":302,"column":163,"nodeType":"955","messageId":"956","endLine":302,"endColumn":165},{"ruleId":"953","severity":1,"message":"954","line":304,"column":31,"nodeType":"955","messageId":"956","endLine":304,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":333,"column":84,"nodeType":"955","messageId":"956","endLine":333,"endColumn":86},{"ruleId":"953","severity":1,"message":"954","line":333,"column":138,"nodeType":"955","messageId":"956","endLine":333,"endColumn":140},{"ruleId":"945","severity":1,"message":"1032","line":374,"column":25,"nodeType":"947","messageId":"948","endLine":374,"endColumn":26},{"ruleId":"949","severity":1,"message":"1033","line":383,"column":6,"nodeType":"951","endLine":383,"endColumn":8,"suggestions":"1034"},{"ruleId":"949","severity":1,"message":"1035","line":441,"column":6,"nodeType":"951","endLine":441,"endColumn":24,"suggestions":"1036"},{"ruleId":"953","severity":1,"message":"954","line":461,"column":44,"nodeType":"955","messageId":"956","endLine":461,"endColumn":46},{"ruleId":"960","severity":1,"message":"961","line":499,"column":150,"nodeType":"959","endLine":499,"endColumn":259},{"ruleId":"960","severity":1,"message":"961","line":508,"column":13,"nodeType":"959","endLine":508,"endColumn":117},{"ruleId":"953","severity":1,"message":"954","line":544,"column":13,"nodeType":"955","messageId":"956","endLine":544,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":545,"column":18,"nodeType":"955","messageId":"956","endLine":545,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":550,"column":13,"nodeType":"955","messageId":"956","endLine":550,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":551,"column":17,"nodeType":"955","messageId":"956","endLine":551,"endColumn":19},{"ruleId":"1037","severity":1,"message":"1038","line":559,"column":22,"nodeType":"1039","messageId":"1040","endLine":559,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":559,"column":39,"nodeType":"1039","messageId":"1040","endLine":559,"endColumn":41},{"ruleId":"1037","severity":1,"message":"1038","line":565,"column":22,"nodeType":"1039","messageId":"1040","endLine":565,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":565,"column":39,"nodeType":"1039","messageId":"1040","endLine":565,"endColumn":41},{"ruleId":"953","severity":1,"message":"954","line":586,"column":86,"nodeType":"955","messageId":"956","endLine":586,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":599,"column":98,"nodeType":"955","messageId":"956","endLine":599,"endColumn":100},{"ruleId":"953","severity":1,"message":"954","line":615,"column":34,"nodeType":"955","messageId":"956","endLine":615,"endColumn":36},{"ruleId":"953","severity":1,"message":"954","line":619,"column":73,"nodeType":"955","messageId":"956","endLine":619,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":620,"column":73,"nodeType":"955","messageId":"956","endLine":620,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":621,"column":73,"nodeType":"955","messageId":"956","endLine":621,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":622,"column":73,"nodeType":"955","messageId":"956","endLine":622,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":623,"column":73,"nodeType":"955","messageId":"956","endLine":623,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":624,"column":73,"nodeType":"955","messageId":"956","endLine":624,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":642,"column":77,"nodeType":"955","messageId":"956","endLine":642,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":643,"column":77,"nodeType":"955","messageId":"956","endLine":643,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":644,"column":77,"nodeType":"955","messageId":"956","endLine":644,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":645,"column":77,"nodeType":"955","messageId":"956","endLine":645,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":646,"column":77,"nodeType":"955","messageId":"956","endLine":646,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":647,"column":77,"nodeType":"955","messageId":"956","endLine":647,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":680,"column":34,"nodeType":"955","messageId":"956","endLine":680,"endColumn":36},{"ruleId":"953","severity":1,"message":"954","line":684,"column":73,"nodeType":"955","messageId":"956","endLine":684,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":685,"column":73,"nodeType":"955","messageId":"956","endLine":685,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":686,"column":73,"nodeType":"955","messageId":"956","endLine":686,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":687,"column":73,"nodeType":"955","messageId":"956","endLine":687,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":688,"column":73,"nodeType":"955","messageId":"956","endLine":688,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":689,"column":73,"nodeType":"955","messageId":"956","endLine":689,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":706,"column":77,"nodeType":"955","messageId":"956","endLine":706,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":707,"column":77,"nodeType":"955","messageId":"956","endLine":707,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":708,"column":77,"nodeType":"955","messageId":"956","endLine":708,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":709,"column":77,"nodeType":"955","messageId":"956","endLine":709,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":710,"column":77,"nodeType":"955","messageId":"956","endLine":710,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":711,"column":77,"nodeType":"955","messageId":"956","endLine":711,"endColumn":79},{"ruleId":"945","severity":1,"message":"984","line":751,"column":17,"nodeType":"947","messageId":"948","endLine":751,"endColumn":25},{"ruleId":"945","severity":1,"message":"1041","line":752,"column":10,"nodeType":"947","messageId":"948","endLine":752,"endColumn":18},{"ruleId":"953","severity":1,"message":"954","line":755,"column":11,"nodeType":"955","messageId":"956","endLine":755,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":759,"column":11,"nodeType":"955","messageId":"956","endLine":759,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":759,"column":21,"nodeType":"955","messageId":"956","endLine":759,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":759,"column":47,"nodeType":"955","messageId":"956","endLine":759,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":771,"column":15,"nodeType":"955","messageId":"956","endLine":771,"endColumn":17},{"ruleId":"949","severity":1,"message":"1042","line":787,"column":6,"nodeType":"951","endLine":787,"endColumn":33,"suggestions":"1043"},{"ruleId":"953","severity":1,"message":"962","line":872,"column":55,"nodeType":"955","messageId":"956","endLine":872,"endColumn":57},{"ruleId":"953","severity":1,"message":"954","line":876,"column":63,"nodeType":"955","messageId":"956","endLine":876,"endColumn":65},{"ruleId":"953","severity":1,"message":"954","line":886,"column":68,"nodeType":"955","messageId":"956","endLine":886,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":888,"column":33,"nodeType":"955","messageId":"956","endLine":888,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":921,"column":76,"nodeType":"955","messageId":"956","endLine":921,"endColumn":78},{"ruleId":"953","severity":1,"message":"954","line":921,"column":128,"nodeType":"955","messageId":"956","endLine":921,"endColumn":130},{"ruleId":"945","severity":1,"message":"1044","line":956,"column":20,"nodeType":"947","messageId":"948","endLine":956,"endColumn":31},{"ruleId":"945","severity":1,"message":"1001","line":957,"column":10,"nodeType":"947","messageId":"948","endLine":957,"endColumn":19},{"ruleId":"945","severity":1,"message":"1045","line":957,"column":21,"nodeType":"947","messageId":"948","endLine":957,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":1010,"column":12,"nodeType":"955","messageId":"956","endLine":1010,"endColumn":14},{"ruleId":"953","severity":1,"message":"954","line":1013,"column":12,"nodeType":"955","messageId":"956","endLine":1013,"endColumn":14},{"ruleId":"953","severity":1,"message":"954","line":1064,"column":15,"nodeType":"955","messageId":"956","endLine":1064,"endColumn":17},{"ruleId":"949","severity":1,"message":"1046","line":1066,"column":6,"nodeType":"951","endLine":1066,"endColumn":16,"suggestions":"1047"},{"ruleId":"953","severity":1,"message":"954","line":1082,"column":20,"nodeType":"955","messageId":"956","endLine":1082,"endColumn":22},{"ruleId":"949","severity":1,"message":"1048","line":1112,"column":6,"nodeType":"951","endLine":1112,"endColumn":24,"suggestions":"1049"},{"ruleId":"953","severity":1,"message":"954","line":1137,"column":53,"nodeType":"955","messageId":"956","endLine":1137,"endColumn":55},{"ruleId":"945","severity":1,"message":"1050","line":1256,"column":7,"nodeType":"947","messageId":"948","endLine":1256,"endColumn":8},{"ruleId":"953","severity":1,"message":"954","line":1271,"column":72,"nodeType":"955","messageId":"956","endLine":1271,"endColumn":74},{"ruleId":"953","severity":1,"message":"954","line":1271,"column":211,"nodeType":"955","messageId":"956","endLine":1271,"endColumn":213},{"ruleId":"953","severity":1,"message":"954","line":1279,"column":147,"nodeType":"955","messageId":"956","endLine":1279,"endColumn":149},{"ruleId":"953","severity":1,"message":"954","line":1289,"column":89,"nodeType":"955","messageId":"956","endLine":1289,"endColumn":91},{"ruleId":"953","severity":1,"message":"954","line":1312,"column":26,"nodeType":"955","messageId":"956","endLine":1312,"endColumn":28},{"ruleId":"953","severity":1,"message":"954","line":1312,"column":49,"nodeType":"955","messageId":"956","endLine":1312,"endColumn":51},{"ruleId":"953","severity":1,"message":"954","line":1315,"column":35,"nodeType":"955","messageId":"956","endLine":1315,"endColumn":37},{"ruleId":"953","severity":1,"message":"954","line":1379,"column":34,"nodeType":"955","messageId":"956","endLine":1379,"endColumn":36},{"ruleId":"953","severity":1,"message":"954","line":1379,"column":64,"nodeType":"955","messageId":"956","endLine":1379,"endColumn":66},{"ruleId":"953","severity":1,"message":"954","line":1386,"column":114,"nodeType":"955","messageId":"956","endLine":1386,"endColumn":116},{"ruleId":"953","severity":1,"message":"954","line":1398,"column":47,"nodeType":"955","messageId":"956","endLine":1398,"endColumn":49},{"ruleId":"953","severity":1,"message":"954","line":1405,"column":108,"nodeType":"955","messageId":"956","endLine":1405,"endColumn":110},{"ruleId":"953","severity":1,"message":"954","line":1445,"column":39,"nodeType":"955","messageId":"956","endLine":1445,"endColumn":41},{"ruleId":"953","severity":1,"message":"954","line":1449,"column":126,"nodeType":"955","messageId":"956","endLine":1449,"endColumn":128},{"ruleId":"960","severity":1,"message":"961","line":1528,"column":109,"nodeType":"959","endLine":1528,"endColumn":195},{"ruleId":"945","severity":1,"message":"1051","line":1589,"column":9,"nodeType":"947","messageId":"948","endLine":1589,"endColumn":19},{"ruleId":"945","severity":1,"message":"1052","line":1590,"column":10,"nodeType":"947","messageId":"948","endLine":1590,"endColumn":18},{"ruleId":"945","severity":1,"message":"1053","line":1594,"column":10,"nodeType":"947","messageId":"948","endLine":1594,"endColumn":20},{"ruleId":"945","severity":1,"message":"1054","line":1594,"column":22,"nodeType":"947","messageId":"948","endLine":1594,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":1629,"column":28,"nodeType":"955","messageId":"956","endLine":1629,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":1629,"column":70,"nodeType":"955","messageId":"956","endLine":1629,"endColumn":72},{"ruleId":"953","severity":1,"message":"954","line":1769,"column":43,"nodeType":"955","messageId":"956","endLine":1769,"endColumn":45},{"ruleId":"953","severity":1,"message":"954","line":1773,"column":106,"nodeType":"955","messageId":"956","endLine":1773,"endColumn":108},{"ruleId":"960","severity":1,"message":"961","line":1792,"column":17,"nodeType":"959","endLine":1792,"endColumn":103},{"ruleId":"953","severity":1,"message":"954","line":1837,"column":67,"nodeType":"955","messageId":"956","endLine":1837,"endColumn":69},{"ruleId":"953","severity":1,"message":"954","line":1898,"column":13,"nodeType":"955","messageId":"956","endLine":1898,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":1899,"column":18,"nodeType":"955","messageId":"956","endLine":1899,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":1904,"column":13,"nodeType":"955","messageId":"956","endLine":1904,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":1905,"column":17,"nodeType":"955","messageId":"956","endLine":1905,"endColumn":19},{"ruleId":"1037","severity":1,"message":"1038","line":1913,"column":22,"nodeType":"1039","messageId":"1040","endLine":1913,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":1913,"column":39,"nodeType":"1039","messageId":"1040","endLine":1913,"endColumn":41},{"ruleId":"1037","severity":1,"message":"1038","line":1918,"column":22,"nodeType":"1039","messageId":"1040","endLine":1918,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":1918,"column":39,"nodeType":"1039","messageId":"1040","endLine":1918,"endColumn":41},{"ruleId":"953","severity":1,"message":"954","line":1948,"column":86,"nodeType":"955","messageId":"956","endLine":1948,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":1956,"column":119,"nodeType":"955","messageId":"956","endLine":1956,"endColumn":121},{"ruleId":"953","severity":1,"message":"954","line":1968,"column":32,"nodeType":"955","messageId":"956","endLine":1968,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":1973,"column":71,"nodeType":"955","messageId":"956","endLine":1973,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":1974,"column":71,"nodeType":"955","messageId":"956","endLine":1974,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":1975,"column":71,"nodeType":"955","messageId":"956","endLine":1975,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":1976,"column":71,"nodeType":"955","messageId":"956","endLine":1976,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":1977,"column":71,"nodeType":"955","messageId":"956","endLine":1977,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":1978,"column":71,"nodeType":"955","messageId":"956","endLine":1978,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":1996,"column":77,"nodeType":"955","messageId":"956","endLine":1996,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":1997,"column":77,"nodeType":"955","messageId":"956","endLine":1997,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":1998,"column":77,"nodeType":"955","messageId":"956","endLine":1998,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":1999,"column":77,"nodeType":"955","messageId":"956","endLine":1999,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2000,"column":77,"nodeType":"955","messageId":"956","endLine":2000,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2001,"column":77,"nodeType":"955","messageId":"956","endLine":2001,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2036,"column":32,"nodeType":"955","messageId":"956","endLine":2036,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":2043,"column":71,"nodeType":"955","messageId":"956","endLine":2043,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2044,"column":71,"nodeType":"955","messageId":"956","endLine":2044,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2045,"column":71,"nodeType":"955","messageId":"956","endLine":2045,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2046,"column":71,"nodeType":"955","messageId":"956","endLine":2046,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2047,"column":71,"nodeType":"955","messageId":"956","endLine":2047,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2048,"column":71,"nodeType":"955","messageId":"956","endLine":2048,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2067,"column":77,"nodeType":"955","messageId":"956","endLine":2067,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2068,"column":77,"nodeType":"955","messageId":"956","endLine":2068,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2069,"column":77,"nodeType":"955","messageId":"956","endLine":2069,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2070,"column":77,"nodeType":"955","messageId":"956","endLine":2070,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2071,"column":77,"nodeType":"955","messageId":"956","endLine":2071,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2072,"column":77,"nodeType":"955","messageId":"956","endLine":2072,"endColumn":79},{"ruleId":"945","severity":1,"message":"984","line":2176,"column":17,"nodeType":"947","messageId":"948","endLine":2176,"endColumn":25},{"ruleId":"945","severity":1,"message":"1041","line":2177,"column":10,"nodeType":"947","messageId":"948","endLine":2177,"endColumn":18},{"ruleId":"953","severity":1,"message":"954","line":2180,"column":11,"nodeType":"955","messageId":"956","endLine":2180,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":2184,"column":11,"nodeType":"955","messageId":"956","endLine":2184,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":2184,"column":21,"nodeType":"955","messageId":"956","endLine":2184,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":2184,"column":47,"nodeType":"955","messageId":"956","endLine":2184,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":2194,"column":15,"nodeType":"955","messageId":"956","endLine":2194,"endColumn":17},{"ruleId":"949","severity":1,"message":"1055","line":2210,"column":6,"nodeType":"951","endLine":2210,"endColumn":33,"suggestions":"1056"},{"ruleId":"953","severity":1,"message":"962","line":2287,"column":61,"nodeType":"955","messageId":"956","endLine":2287,"endColumn":63},{"ruleId":"953","severity":1,"message":"954","line":2291,"column":63,"nodeType":"955","messageId":"956","endLine":2291,"endColumn":65},{"ruleId":"953","severity":1,"message":"954","line":2294,"column":103,"nodeType":"955","messageId":"956","endLine":2294,"endColumn":105},{"ruleId":"953","severity":1,"message":"954","line":2301,"column":68,"nodeType":"955","messageId":"956","endLine":2301,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":2303,"column":33,"nodeType":"955","messageId":"956","endLine":2303,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":2336,"column":85,"nodeType":"955","messageId":"956","endLine":2336,"endColumn":87},{"ruleId":"953","severity":1,"message":"954","line":2336,"column":138,"nodeType":"955","messageId":"956","endLine":2336,"endColumn":140},{"ruleId":"953","severity":1,"message":"954","line":2362,"column":13,"nodeType":"955","messageId":"956","endLine":2362,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":2363,"column":18,"nodeType":"955","messageId":"956","endLine":2363,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":2368,"column":13,"nodeType":"955","messageId":"956","endLine":2368,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":2369,"column":17,"nodeType":"955","messageId":"956","endLine":2369,"endColumn":19},{"ruleId":"1037","severity":1,"message":"1038","line":2377,"column":22,"nodeType":"1039","messageId":"1040","endLine":2377,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":2377,"column":39,"nodeType":"1039","messageId":"1040","endLine":2377,"endColumn":41},{"ruleId":"1037","severity":1,"message":"1038","line":2382,"column":22,"nodeType":"1039","messageId":"1040","endLine":2382,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":2382,"column":39,"nodeType":"1039","messageId":"1040","endLine":2382,"endColumn":41},{"ruleId":"953","severity":1,"message":"954","line":2403,"column":86,"nodeType":"955","messageId":"956","endLine":2403,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":2412,"column":96,"nodeType":"955","messageId":"956","endLine":2412,"endColumn":98},{"ruleId":"953","severity":1,"message":"954","line":2425,"column":32,"nodeType":"955","messageId":"956","endLine":2425,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":2432,"column":71,"nodeType":"955","messageId":"956","endLine":2432,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2433,"column":71,"nodeType":"955","messageId":"956","endLine":2433,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2434,"column":71,"nodeType":"955","messageId":"956","endLine":2434,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2435,"column":71,"nodeType":"955","messageId":"956","endLine":2435,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2436,"column":71,"nodeType":"955","messageId":"956","endLine":2436,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2437,"column":71,"nodeType":"955","messageId":"956","endLine":2437,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2456,"column":77,"nodeType":"955","messageId":"956","endLine":2456,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2457,"column":77,"nodeType":"955","messageId":"956","endLine":2457,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2458,"column":77,"nodeType":"955","messageId":"956","endLine":2458,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2459,"column":77,"nodeType":"955","messageId":"956","endLine":2459,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2460,"column":77,"nodeType":"955","messageId":"956","endLine":2460,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2461,"column":77,"nodeType":"955","messageId":"956","endLine":2461,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2497,"column":32,"nodeType":"955","messageId":"956","endLine":2497,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":2504,"column":71,"nodeType":"955","messageId":"956","endLine":2504,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2505,"column":71,"nodeType":"955","messageId":"956","endLine":2505,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2506,"column":71,"nodeType":"955","messageId":"956","endLine":2506,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2507,"column":71,"nodeType":"955","messageId":"956","endLine":2507,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2508,"column":71,"nodeType":"955","messageId":"956","endLine":2508,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2509,"column":71,"nodeType":"955","messageId":"956","endLine":2509,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":2528,"column":77,"nodeType":"955","messageId":"956","endLine":2528,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2529,"column":77,"nodeType":"955","messageId":"956","endLine":2529,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2530,"column":77,"nodeType":"955","messageId":"956","endLine":2530,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2531,"column":77,"nodeType":"955","messageId":"956","endLine":2531,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2532,"column":77,"nodeType":"955","messageId":"956","endLine":2532,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2533,"column":77,"nodeType":"955","messageId":"956","endLine":2533,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":2607,"column":28,"nodeType":"955","messageId":"956","endLine":2607,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":2658,"column":30,"nodeType":"955","messageId":"956","endLine":2658,"endColumn":32},{"ruleId":"953","severity":1,"message":"954","line":2658,"column":72,"nodeType":"955","messageId":"956","endLine":2658,"endColumn":74},{"ruleId":"953","severity":1,"message":"954","line":2857,"column":20,"nodeType":"955","messageId":"956","endLine":2857,"endColumn":22},{"ruleId":"953","severity":1,"message":"954","line":2911,"column":22,"nodeType":"955","messageId":"956","endLine":2911,"endColumn":24},{"ruleId":"949","severity":1,"message":"1057","line":2990,"column":6,"nodeType":"951","endLine":2990,"endColumn":17,"suggestions":"1058"},{"ruleId":"949","severity":1,"message":"1059","line":2995,"column":6,"nodeType":"951","endLine":2995,"endColumn":17,"suggestions":"1060"},{"ruleId":"949","severity":1,"message":"1061","line":2998,"column":6,"nodeType":"951","endLine":2998,"endColumn":19,"suggestions":"1062"},{"ruleId":"949","severity":1,"message":"1063","line":2998,"column":7,"nodeType":"1064","endLine":2998,"endColumn":18},{"ruleId":"949","severity":1,"message":"1065","line":3002,"column":6,"nodeType":"951","endLine":3002,"endColumn":35,"suggestions":"1066"},{"ruleId":"949","severity":1,"message":"1063","line":3002,"column":7,"nodeType":"1064","endLine":3002,"endColumn":21},{"ruleId":"949","severity":1,"message":"1063","line":3002,"column":23,"nodeType":"1064","endLine":3002,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":3030,"column":54,"nodeType":"955","messageId":"956","endLine":3030,"endColumn":56},{"ruleId":"1037","severity":1,"message":"1067","line":3030,"column":67,"nodeType":"1039","messageId":"1040","endLine":3030,"endColumn":69},{"ruleId":"1037","severity":1,"message":"1067","line":3030,"column":89,"nodeType":"1039","messageId":"1040","endLine":3030,"endColumn":91},{"ruleId":"953","severity":1,"message":"954","line":3030,"column":118,"nodeType":"955","messageId":"956","endLine":3030,"endColumn":120},{"ruleId":"953","severity":1,"message":"954","line":3044,"column":74,"nodeType":"955","messageId":"956","endLine":3044,"endColumn":76},{"ruleId":"953","severity":1,"message":"954","line":3054,"column":74,"nodeType":"955","messageId":"956","endLine":3054,"endColumn":76},{"ruleId":"953","severity":1,"message":"954","line":3081,"column":47,"nodeType":"955","messageId":"956","endLine":3081,"endColumn":49},{"ruleId":"953","severity":1,"message":"954","line":3085,"column":101,"nodeType":"955","messageId":"956","endLine":3085,"endColumn":103},{"ruleId":"953","severity":1,"message":"954","line":3131,"column":70,"nodeType":"955","messageId":"956","endLine":3131,"endColumn":72},{"ruleId":"953","severity":1,"message":"954","line":3146,"column":69,"nodeType":"955","messageId":"956","endLine":3146,"endColumn":71},{"ruleId":"953","severity":1,"message":"954","line":3182,"column":45,"nodeType":"955","messageId":"956","endLine":3182,"endColumn":47},{"ruleId":"953","severity":1,"message":"954","line":3189,"column":116,"nodeType":"955","messageId":"956","endLine":3189,"endColumn":118},{"ruleId":"953","severity":1,"message":"954","line":3238,"column":68,"nodeType":"955","messageId":"956","endLine":3238,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":3251,"column":68,"nodeType":"955","messageId":"956","endLine":3251,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":3264,"column":68,"nodeType":"955","messageId":"956","endLine":3264,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":3295,"column":30,"nodeType":"955","messageId":"956","endLine":3295,"endColumn":32},{"ruleId":"953","severity":1,"message":"954","line":3295,"column":50,"nodeType":"955","messageId":"956","endLine":3295,"endColumn":52},{"ruleId":"945","severity":1,"message":"984","line":3459,"column":17,"nodeType":"947","messageId":"948","endLine":3459,"endColumn":25},{"ruleId":"945","severity":1,"message":"1041","line":3460,"column":10,"nodeType":"947","messageId":"948","endLine":3460,"endColumn":18},{"ruleId":"953","severity":1,"message":"954","line":3463,"column":11,"nodeType":"955","messageId":"956","endLine":3463,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":3467,"column":11,"nodeType":"955","messageId":"956","endLine":3467,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":3467,"column":21,"nodeType":"955","messageId":"956","endLine":3467,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":3467,"column":47,"nodeType":"955","messageId":"956","endLine":3467,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":3477,"column":15,"nodeType":"955","messageId":"956","endLine":3477,"endColumn":17},{"ruleId":"949","severity":1,"message":"1068","line":3493,"column":6,"nodeType":"951","endLine":3493,"endColumn":33,"suggestions":"1069"},{"ruleId":"953","severity":1,"message":"962","line":3575,"column":63,"nodeType":"955","messageId":"956","endLine":3575,"endColumn":65},{"ruleId":"953","severity":1,"message":"954","line":3579,"column":63,"nodeType":"955","messageId":"956","endLine":3579,"endColumn":65},{"ruleId":"953","severity":1,"message":"954","line":3588,"column":68,"nodeType":"955","messageId":"956","endLine":3588,"endColumn":70},{"ruleId":"953","severity":1,"message":"954","line":3590,"column":33,"nodeType":"955","messageId":"956","endLine":3590,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":3623,"column":76,"nodeType":"955","messageId":"956","endLine":3623,"endColumn":78},{"ruleId":"953","severity":1,"message":"954","line":3623,"column":130,"nodeType":"955","messageId":"956","endLine":3623,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":3648,"column":13,"nodeType":"955","messageId":"956","endLine":3648,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":3649,"column":18,"nodeType":"955","messageId":"956","endLine":3649,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":3654,"column":13,"nodeType":"955","messageId":"956","endLine":3654,"endColumn":15},{"ruleId":"953","severity":1,"message":"954","line":3655,"column":17,"nodeType":"955","messageId":"956","endLine":3655,"endColumn":19},{"ruleId":"1037","severity":1,"message":"1038","line":3663,"column":22,"nodeType":"1039","messageId":"1040","endLine":3663,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":3663,"column":39,"nodeType":"1039","messageId":"1040","endLine":3663,"endColumn":41},{"ruleId":"1037","severity":1,"message":"1038","line":3668,"column":22,"nodeType":"1039","messageId":"1040","endLine":3668,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1038","line":3668,"column":39,"nodeType":"1039","messageId":"1040","endLine":3668,"endColumn":41},{"ruleId":"953","severity":1,"message":"954","line":3697,"column":77,"nodeType":"955","messageId":"956","endLine":3697,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3705,"column":96,"nodeType":"955","messageId":"956","endLine":3705,"endColumn":98},{"ruleId":"953","severity":1,"message":"954","line":3721,"column":34,"nodeType":"955","messageId":"956","endLine":3721,"endColumn":36},{"ruleId":"953","severity":1,"message":"954","line":3728,"column":73,"nodeType":"955","messageId":"956","endLine":3728,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":3729,"column":73,"nodeType":"955","messageId":"956","endLine":3729,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":3730,"column":73,"nodeType":"955","messageId":"956","endLine":3730,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":3731,"column":73,"nodeType":"955","messageId":"956","endLine":3731,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":3732,"column":73,"nodeType":"955","messageId":"956","endLine":3732,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":3733,"column":73,"nodeType":"955","messageId":"956","endLine":3733,"endColumn":75},{"ruleId":"953","severity":1,"message":"954","line":3752,"column":77,"nodeType":"955","messageId":"956","endLine":3752,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3753,"column":77,"nodeType":"955","messageId":"956","endLine":3753,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3754,"column":77,"nodeType":"955","messageId":"956","endLine":3754,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3755,"column":77,"nodeType":"955","messageId":"956","endLine":3755,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3756,"column":77,"nodeType":"955","messageId":"956","endLine":3756,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3757,"column":77,"nodeType":"955","messageId":"956","endLine":3757,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3794,"column":32,"nodeType":"955","messageId":"956","endLine":3794,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":3801,"column":71,"nodeType":"955","messageId":"956","endLine":3801,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":3802,"column":71,"nodeType":"955","messageId":"956","endLine":3802,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":3803,"column":71,"nodeType":"955","messageId":"956","endLine":3803,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":3804,"column":71,"nodeType":"955","messageId":"956","endLine":3804,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":3805,"column":71,"nodeType":"955","messageId":"956","endLine":3805,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":3806,"column":71,"nodeType":"955","messageId":"956","endLine":3806,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":3825,"column":77,"nodeType":"955","messageId":"956","endLine":3825,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3826,"column":77,"nodeType":"955","messageId":"956","endLine":3826,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3827,"column":77,"nodeType":"955","messageId":"956","endLine":3827,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3828,"column":77,"nodeType":"955","messageId":"956","endLine":3828,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3829,"column":77,"nodeType":"955","messageId":"956","endLine":3829,"endColumn":79},{"ruleId":"953","severity":1,"message":"954","line":3830,"column":77,"nodeType":"955","messageId":"956","endLine":3830,"endColumn":79},{"ruleId":"945","severity":1,"message":"1070","line":3861,"column":9,"nodeType":"947","messageId":"948","endLine":3861,"endColumn":17},{"ruleId":"945","severity":1,"message":"1071","line":3862,"column":9,"nodeType":"947","messageId":"948","endLine":3862,"endColumn":19},{"ruleId":"953","severity":1,"message":"954","line":3906,"column":28,"nodeType":"955","messageId":"956","endLine":3906,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":3906,"column":70,"nodeType":"955","messageId":"956","endLine":3906,"endColumn":72},{"ruleId":"953","severity":1,"message":"954","line":4060,"column":43,"nodeType":"955","messageId":"956","endLine":4060,"endColumn":45},{"ruleId":"953","severity":1,"message":"954","line":4064,"column":97,"nodeType":"955","messageId":"956","endLine":4064,"endColumn":99},{"ruleId":"953","severity":1,"message":"954","line":4089,"column":43,"nodeType":"955","messageId":"956","endLine":4089,"endColumn":45},{"ruleId":"953","severity":1,"message":"954","line":4093,"column":106,"nodeType":"955","messageId":"956","endLine":4093,"endColumn":108},{"ruleId":"960","severity":1,"message":"961","line":4111,"column":68,"nodeType":"959","endLine":4111,"endColumn":154},{"ruleId":"953","severity":1,"message":"954","line":4156,"column":67,"nodeType":"955","messageId":"956","endLine":4156,"endColumn":69},{"ruleId":"945","severity":1,"message":"984","line":4275,"column":17,"nodeType":"947","messageId":"948","endLine":4275,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":4283,"column":11,"nodeType":"955","messageId":"956","endLine":4283,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":4287,"column":11,"nodeType":"955","messageId":"956","endLine":4287,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":4287,"column":21,"nodeType":"955","messageId":"956","endLine":4287,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":4287,"column":47,"nodeType":"955","messageId":"956","endLine":4287,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":4298,"column":15,"nodeType":"955","messageId":"956","endLine":4298,"endColumn":17},{"ruleId":"949","severity":1,"message":"1072","line":4314,"column":6,"nodeType":"951","endLine":4314,"endColumn":18,"suggestions":"1073"},{"ruleId":"945","severity":1,"message":"1050","line":4347,"column":7,"nodeType":"947","messageId":"948","endLine":4347,"endColumn":8},{"ruleId":"953","severity":1,"message":"954","line":4349,"column":21,"nodeType":"955","messageId":"956","endLine":4349,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":4389,"column":28,"nodeType":"955","messageId":"956","endLine":4389,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":4389,"column":64,"nodeType":"955","messageId":"956","endLine":4389,"endColumn":66},{"ruleId":"953","severity":1,"message":"954","line":4405,"column":43,"nodeType":"955","messageId":"956","endLine":4405,"endColumn":45},{"ruleId":"960","severity":1,"message":"961","line":4406,"column":29,"nodeType":"959","endLine":4406,"endColumn":122},{"ruleId":"953","severity":1,"message":"954","line":4412,"column":53,"nodeType":"955","messageId":"956","endLine":4412,"endColumn":55},{"ruleId":"960","severity":1,"message":"961","line":4414,"column":29,"nodeType":"959","endLine":4414,"endColumn":121},{"ruleId":"953","severity":1,"message":"954","line":4418,"column":33,"nodeType":"955","messageId":"956","endLine":4418,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":4419,"column":164,"nodeType":"955","messageId":"956","endLine":4419,"endColumn":166},{"ruleId":"953","severity":1,"message":"954","line":4446,"column":74,"nodeType":"955","messageId":"956","endLine":4446,"endColumn":76},{"ruleId":"953","severity":1,"message":"954","line":4446,"column":126,"nodeType":"955","messageId":"956","endLine":4446,"endColumn":128},{"ruleId":"945","severity":1,"message":"984","line":4466,"column":17,"nodeType":"947","messageId":"948","endLine":4466,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":4474,"column":11,"nodeType":"955","messageId":"956","endLine":4474,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":4478,"column":11,"nodeType":"955","messageId":"956","endLine":4478,"endColumn":13},{"ruleId":"953","severity":1,"message":"954","line":4478,"column":21,"nodeType":"955","messageId":"956","endLine":4478,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":4478,"column":47,"nodeType":"955","messageId":"956","endLine":4478,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":4489,"column":15,"nodeType":"955","messageId":"956","endLine":4489,"endColumn":17},{"ruleId":"949","severity":1,"message":"1072","line":4505,"column":6,"nodeType":"951","endLine":4505,"endColumn":18,"suggestions":"1074"},{"ruleId":"945","severity":1,"message":"1050","line":4538,"column":7,"nodeType":"947","messageId":"948","endLine":4538,"endColumn":8},{"ruleId":"953","severity":1,"message":"954","line":4540,"column":21,"nodeType":"955","messageId":"956","endLine":4540,"endColumn":23},{"ruleId":"953","severity":1,"message":"954","line":4579,"column":28,"nodeType":"955","messageId":"956","endLine":4579,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":4579,"column":64,"nodeType":"955","messageId":"956","endLine":4579,"endColumn":66},{"ruleId":"953","severity":1,"message":"954","line":4595,"column":43,"nodeType":"955","messageId":"956","endLine":4595,"endColumn":45},{"ruleId":"960","severity":1,"message":"961","line":4596,"column":29,"nodeType":"959","endLine":4596,"endColumn":122},{"ruleId":"953","severity":1,"message":"954","line":4602,"column":53,"nodeType":"955","messageId":"956","endLine":4602,"endColumn":55},{"ruleId":"960","severity":1,"message":"961","line":4604,"column":29,"nodeType":"959","endLine":4604,"endColumn":121},{"ruleId":"953","severity":1,"message":"954","line":4608,"column":33,"nodeType":"955","messageId":"956","endLine":4608,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":4609,"column":164,"nodeType":"955","messageId":"956","endLine":4609,"endColumn":166},{"ruleId":"953","severity":1,"message":"954","line":4635,"column":71,"nodeType":"955","messageId":"956","endLine":4635,"endColumn":73},{"ruleId":"953","severity":1,"message":"954","line":4635,"column":124,"nodeType":"955","messageId":"956","endLine":4635,"endColumn":126},{"ruleId":"953","severity":1,"message":"954","line":4681,"column":62,"nodeType":"955","messageId":"956","endLine":4681,"endColumn":64},{"ruleId":"953","severity":1,"message":"954","line":4732,"column":62,"nodeType":"955","messageId":"956","endLine":4732,"endColumn":64},{"ruleId":"945","severity":1,"message":"1006","line":2,"column":20,"nodeType":"947","messageId":"948","endLine":2,"endColumn":29},{"ruleId":"945","severity":1,"message":"1011","line":17,"column":10,"nodeType":"947","messageId":"948","endLine":17,"endColumn":16},{"ruleId":"953","severity":1,"message":"954","line":95,"column":33,"nodeType":"955","messageId":"956","endLine":95,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":105,"column":40,"nodeType":"955","messageId":"956","endLine":105,"endColumn":42},{"ruleId":"960","severity":1,"message":"961","line":114,"column":19,"nodeType":"959","endLine":114,"endColumn":198},{"ruleId":"953","severity":1,"message":"954","line":156,"column":30,"nodeType":"955","messageId":"956","endLine":156,"endColumn":32},{"ruleId":"953","severity":1,"message":"954","line":157,"column":70,"nodeType":"955","messageId":"956","endLine":157,"endColumn":72},{"ruleId":"953","severity":1,"message":"954","line":169,"column":29,"nodeType":"955","messageId":"956","endLine":169,"endColumn":31},{"ruleId":"953","severity":1,"message":"954","line":170,"column":56,"nodeType":"955","messageId":"956","endLine":170,"endColumn":58},{"ruleId":"953","severity":1,"message":"954","line":181,"column":32,"nodeType":"955","messageId":"956","endLine":181,"endColumn":34},{"ruleId":"953","severity":1,"message":"954","line":182,"column":190,"nodeType":"955","messageId":"956","endLine":182,"endColumn":192},{"ruleId":"953","severity":1,"message":"954","line":99,"column":33,"nodeType":"955","messageId":"956","endLine":99,"endColumn":35},{"ruleId":"953","severity":1,"message":"954","line":107,"column":51,"nodeType":"955","messageId":"956","endLine":107,"endColumn":53},{"ruleId":"953","severity":1,"message":"954","line":117,"column":61,"nodeType":"955","messageId":"956","endLine":117,"endColumn":63},{"ruleId":"960","severity":1,"message":"961","line":118,"column":33,"nodeType":"959","endLine":118,"endColumn":211},{"ruleId":"960","severity":1,"message":"961","line":153,"column":168,"nodeType":"959","endLine":153,"endColumn":280},{"ruleId":"960","severity":1,"message":"961","line":154,"column":163,"nodeType":"959","endLine":154,"endColumn":276},{"ruleId":"953","severity":1,"message":"954","line":159,"column":44,"nodeType":"955","messageId":"956","endLine":159,"endColumn":46},{"ruleId":"953","severity":1,"message":"954","line":160,"column":69,"nodeType":"955","messageId":"956","endLine":160,"endColumn":71},{"ruleId":"953","severity":1,"message":"954","line":166,"column":43,"nodeType":"955","messageId":"956","endLine":166,"endColumn":45},{"ruleId":"953","severity":1,"message":"954","line":167,"column":72,"nodeType":"955","messageId":"956","endLine":167,"endColumn":74},{"ruleId":"953","severity":1,"message":"954","line":178,"column":46,"nodeType":"955","messageId":"956","endLine":178,"endColumn":48},{"ruleId":"953","severity":1,"message":"954","line":179,"column":206,"nodeType":"955","messageId":"956","endLine":179,"endColumn":208},{"ruleId":"945","severity":1,"message":"1075","line":5,"column":10,"nodeType":"947","messageId":"948","endLine":5,"endColumn":19},{"ruleId":"974","severity":1,"message":"975","line":31,"column":54,"nodeType":"976","messageId":"977","endLine":31,"endColumn":56},{"ruleId":"949","severity":1,"message":"1076","line":52,"column":6,"nodeType":"951","endLine":52,"endColumn":8,"suggestions":"1077"},{"ruleId":"949","severity":1,"message":"1076","line":55,"column":6,"nodeType":"951","endLine":55,"endColumn":52,"suggestions":"1078"},{"ruleId":"945","severity":1,"message":"1079","line":77,"column":10,"nodeType":"947","messageId":"948","endLine":77,"endColumn":18},{"ruleId":"945","severity":1,"message":"1080","line":77,"column":20,"nodeType":"947","messageId":"948","endLine":77,"endColumn":31},{"ruleId":"953","severity":1,"message":"962","line":86,"column":24,"nodeType":"955","messageId":"956","endLine":86,"endColumn":26},{"ruleId":"953","severity":1,"message":"962","line":102,"column":24,"nodeType":"955","messageId":"956","endLine":102,"endColumn":26},{"ruleId":"953","severity":1,"message":"962","line":117,"column":25,"nodeType":"955","messageId":"956","endLine":117,"endColumn":27},{"ruleId":"953","severity":1,"message":"962","line":132,"column":28,"nodeType":"955","messageId":"956","endLine":132,"endColumn":30},{"ruleId":"953","severity":1,"message":"962","line":147,"column":26,"nodeType":"955","messageId":"956","endLine":147,"endColumn":28},{"ruleId":"953","severity":1,"message":"962","line":162,"column":27,"nodeType":"955","messageId":"956","endLine":162,"endColumn":29},{"ruleId":"953","severity":1,"message":"962","line":177,"column":32,"nodeType":"955","messageId":"956","endLine":177,"endColumn":34},{"ruleId":"953","severity":1,"message":"962","line":190,"column":30,"nodeType":"955","messageId":"956","endLine":190,"endColumn":32},{"ruleId":"953","severity":1,"message":"962","line":205,"column":30,"nodeType":"955","messageId":"956","endLine":205,"endColumn":32},{"ruleId":"953","severity":1,"message":"954","line":219,"column":57,"nodeType":"955","messageId":"956","endLine":219,"endColumn":59},{"ruleId":"953","severity":1,"message":"962","line":224,"column":32,"nodeType":"955","messageId":"956","endLine":224,"endColumn":34},{"ruleId":"953","severity":1,"message":"962","line":242,"column":30,"nodeType":"955","messageId":"956","endLine":242,"endColumn":32},{"ruleId":"945","severity":1,"message":"1081","line":250,"column":12,"nodeType":"947","messageId":"948","endLine":250,"endColumn":29},{"ruleId":"953","severity":1,"message":"962","line":257,"column":20,"nodeType":"955","messageId":"956","endLine":257,"endColumn":22},{"ruleId":"981","severity":1,"message":"982","line":258,"column":20,"nodeType":"955","messageId":"983","endLine":258,"endColumn":21},{"ruleId":"974","severity":1,"message":"975","line":278,"column":49,"nodeType":"976","messageId":"977","endLine":278,"endColumn":51},{"ruleId":"953","severity":1,"message":"954","line":279,"column":24,"nodeType":"955","messageId":"956","endLine":279,"endColumn":26},{"ruleId":"953","severity":1,"message":"954","line":421,"column":37,"nodeType":"955","messageId":"956","endLine":421,"endColumn":39},{"ruleId":"945","severity":1,"message":"1082","line":29,"column":12,"nodeType":"947","messageId":"948","endLine":29,"endColumn":15},{"ruleId":"945","severity":1,"message":"1083","line":37,"column":14,"nodeType":"947","messageId":"948","endLine":37,"endColumn":35},{"ruleId":"949","severity":1,"message":"1084","line":79,"column":8,"nodeType":"951","endLine":79,"endColumn":26,"suggestions":"1085"},{"ruleId":"953","severity":1,"message":"954","line":83,"column":28,"nodeType":"955","messageId":"956","endLine":83,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":86,"column":28,"nodeType":"955","messageId":"956","endLine":86,"endColumn":30},{"ruleId":"953","severity":1,"message":"954","line":132,"column":36,"nodeType":"955","messageId":"956","endLine":132,"endColumn":38},{"ruleId":"953","severity":1,"message":"954","line":133,"column":35,"nodeType":"955","messageId":"956","endLine":133,"endColumn":37},{"ruleId":"953","severity":1,"message":"954","line":416,"column":130,"nodeType":"955","messageId":"956","endLine":416,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":416,"column":150,"nodeType":"955","messageId":"956","endLine":416,"endColumn":152},{"ruleId":"953","severity":1,"message":"954","line":416,"column":193,"nodeType":"955","messageId":"956","endLine":416,"endColumn":195},{"ruleId":"953","severity":1,"message":"954","line":416,"column":213,"nodeType":"955","messageId":"956","endLine":416,"endColumn":215},{"ruleId":"953","severity":1,"message":"954","line":416,"column":266,"nodeType":"955","messageId":"956","endLine":416,"endColumn":268},{"ruleId":"953","severity":1,"message":"954","line":416,"column":286,"nodeType":"955","messageId":"956","endLine":416,"endColumn":288},{"ruleId":"953","severity":1,"message":"954","line":417,"column":86,"nodeType":"955","messageId":"956","endLine":417,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":417,"column":106,"nodeType":"955","messageId":"956","endLine":417,"endColumn":108},{"ruleId":"953","severity":1,"message":"954","line":417,"column":149,"nodeType":"955","messageId":"956","endLine":417,"endColumn":151},{"ruleId":"953","severity":1,"message":"954","line":417,"column":169,"nodeType":"955","messageId":"956","endLine":417,"endColumn":171},{"ruleId":"953","severity":1,"message":"954","line":417,"column":222,"nodeType":"955","messageId":"956","endLine":417,"endColumn":224},{"ruleId":"953","severity":1,"message":"954","line":417,"column":242,"nodeType":"955","messageId":"956","endLine":417,"endColumn":244},{"ruleId":"953","severity":1,"message":"954","line":419,"column":130,"nodeType":"955","messageId":"956","endLine":419,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":419,"column":152,"nodeType":"955","messageId":"956","endLine":419,"endColumn":154},{"ruleId":"953","severity":1,"message":"954","line":419,"column":197,"nodeType":"955","messageId":"956","endLine":419,"endColumn":199},{"ruleId":"953","severity":1,"message":"954","line":419,"column":219,"nodeType":"955","messageId":"956","endLine":419,"endColumn":221},{"ruleId":"953","severity":1,"message":"954","line":419,"column":274,"nodeType":"955","messageId":"956","endLine":419,"endColumn":276},{"ruleId":"953","severity":1,"message":"954","line":419,"column":296,"nodeType":"955","messageId":"956","endLine":419,"endColumn":298},{"ruleId":"953","severity":1,"message":"954","line":420,"column":86,"nodeType":"955","messageId":"956","endLine":420,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":420,"column":108,"nodeType":"955","messageId":"956","endLine":420,"endColumn":110},{"ruleId":"953","severity":1,"message":"954","line":420,"column":153,"nodeType":"955","messageId":"956","endLine":420,"endColumn":155},{"ruleId":"953","severity":1,"message":"954","line":420,"column":175,"nodeType":"955","messageId":"956","endLine":420,"endColumn":177},{"ruleId":"953","severity":1,"message":"954","line":420,"column":230,"nodeType":"955","messageId":"956","endLine":420,"endColumn":232},{"ruleId":"953","severity":1,"message":"954","line":420,"column":252,"nodeType":"955","messageId":"956","endLine":420,"endColumn":254},{"ruleId":"953","severity":1,"message":"954","line":422,"column":130,"nodeType":"955","messageId":"956","endLine":422,"endColumn":132},{"ruleId":"953","severity":1,"message":"954","line":422,"column":152,"nodeType":"955","messageId":"956","endLine":422,"endColumn":154},{"ruleId":"953","severity":1,"message":"954","line":422,"column":197,"nodeType":"955","messageId":"956","endLine":422,"endColumn":199},{"ruleId":"953","severity":1,"message":"954","line":422,"column":219,"nodeType":"955","messageId":"956","endLine":422,"endColumn":221},{"ruleId":"953","severity":1,"message":"954","line":422,"column":266,"nodeType":"955","messageId":"956","endLine":422,"endColumn":268},{"ruleId":"953","severity":1,"message":"954","line":422,"column":288,"nodeType":"955","messageId":"956","endLine":422,"endColumn":290},{"ruleId":"953","severity":1,"message":"954","line":423,"column":86,"nodeType":"955","messageId":"956","endLine":423,"endColumn":88},{"ruleId":"953","severity":1,"message":"954","line":423,"column":108,"nodeType":"955","messageId":"956","endLine":423,"endColumn":110},{"ruleId":"953","severity":1,"message":"954","line":423,"column":153,"nodeType":"955","messageId":"956","endLine":423,"endColumn":155},{"ruleId":"953","severity":1,"message":"954","line":423,"column":175,"nodeType":"955","messageId":"956","endLine":423,"endColumn":177},{"ruleId":"953","severity":1,"message":"954","line":423,"column":230,"nodeType":"955","messageId":"956","endLine":423,"endColumn":232},{"ruleId":"953","severity":1,"message":"954","line":423,"column":252,"nodeType":"955","messageId":"956","endLine":423,"endColumn":254},{"ruleId":"949","severity":1,"message":"1086","line":31,"column":6,"nodeType":"951","endLine":31,"endColumn":36,"suggestions":"1087"},{"ruleId":"953","severity":1,"message":"954","line":47,"column":65,"nodeType":"955","messageId":"956","endLine":47,"endColumn":67},{"ruleId":"953","severity":1,"message":"954","line":48,"column":70,"nodeType":"955","messageId":"956","endLine":48,"endColumn":72},{"ruleId":"953","severity":1,"message":"954","line":60,"column":65,"nodeType":"955","messageId":"956","endLine":60,"endColumn":67},{"ruleId":"945","severity":1,"message":"1088","line":64,"column":43,"nodeType":"947","messageId":"948","endLine":64,"endColumn":54},{"ruleId":"953","severity":1,"message":"962","line":78,"column":57,"nodeType":"955","messageId":"956","endLine":78,"endColumn":59},{"ruleId":"953","severity":1,"message":"954","line":80,"column":38,"nodeType":"955","messageId":"956","endLine":80,"endColumn":40},{"ruleId":"953","severity":1,"message":"962","line":83,"column":47,"nodeType":"955","messageId":"956","endLine":83,"endColumn":49},{"ruleId":"953","severity":1,"message":"962","line":85,"column":54,"nodeType":"955","messageId":"956","endLine":85,"endColumn":56},{"ruleId":"953","severity":1,"message":"962","line":85,"column":193,"nodeType":"955","messageId":"956","endLine":85,"endColumn":195},{"ruleId":"953","severity":1,"message":"962","line":90,"column":54,"nodeType":"955","messageId":"956","endLine":90,"endColumn":56},{"ruleId":"953","severity":1,"message":"962","line":90,"column":199,"nodeType":"955","messageId":"956","endLine":90,"endColumn":201},{"ruleId":"953","severity":1,"message":"954","line":101,"column":47,"nodeType":"955","messageId":"956","endLine":101,"endColumn":49},{"ruleId":"949","severity":1,"message":"1089","line":134,"column":6,"nodeType":"951","endLine":134,"endColumn":42,"suggestions":"1090"},{"ruleId":"981","severity":1,"message":"982","line":218,"column":42,"nodeType":"955","messageId":"983","endLine":218,"endColumn":43},{"ruleId":"953","severity":1,"message":"954","line":294,"column":35,"nodeType":"955","messageId":"956","endLine":294,"endColumn":37},{"ruleId":"953","severity":1,"message":"954","line":294,"column":56,"nodeType":"955","messageId":"956","endLine":294,"endColumn":58},{"ruleId":"953","severity":1,"message":"954","line":308,"column":62,"nodeType":"955","messageId":"956","endLine":308,"endColumn":64},{"ruleId":"953","severity":1,"message":"954","line":345,"column":25,"nodeType":"955","messageId":"956","endLine":345,"endColumn":27},{"ruleId":"953","severity":1,"message":"954","line":345,"column":60,"nodeType":"955","messageId":"956","endLine":345,"endColumn":62},{"ruleId":"949","severity":1,"message":"1091","line":29,"column":6,"nodeType":"951","endLine":29,"endColumn":36,"suggestions":"1092"},{"ruleId":"945","severity":1,"message":"1093","line":97,"column":24,"nodeType":"947","messageId":"948","endLine":97,"endColumn":39},{"ruleId":"953","severity":1,"message":"954","line":173,"column":55,"nodeType":"955","messageId":"956","endLine":173,"endColumn":57},{"ruleId":"949","severity":1,"message":"1094","line":43,"column":8,"nodeType":"951","endLine":43,"endColumn":10,"suggestions":"1095"},{"ruleId":"949","severity":1,"message":"1096","line":91,"column":8,"nodeType":"951","endLine":91,"endColumn":10,"suggestions":"1097"},{"ruleId":"953","severity":1,"message":"954","line":99,"column":67,"nodeType":"955","messageId":"956","endLine":99,"endColumn":69},{"ruleId":"960","severity":1,"message":"961","line":200,"column":178,"nodeType":"959","endLine":200,"endColumn":287},{"ruleId":"960","severity":1,"message":"961","line":206,"column":149,"nodeType":"959","endLine":206,"endColumn":253},{"ruleId":"953","severity":1,"message":"962","line":213,"column":90,"nodeType":"955","messageId":"956","endLine":213,"endColumn":92},{"ruleId":"953","severity":1,"message":"954","line":245,"column":99,"nodeType":"955","messageId":"956","endLine":245,"endColumn":101},{"ruleId":"953","severity":1,"message":"954","line":265,"column":75,"nodeType":"955","messageId":"956","endLine":265,"endColumn":77},{"ruleId":"960","severity":1,"message":"961","line":290,"column":210,"nodeType":"959","endLine":290,"endColumn":319},{"ruleId":"960","severity":1,"message":"961","line":301,"column":165,"nodeType":"959","endLine":301,"endColumn":269},{"ruleId":"953","severity":1,"message":"954","line":24,"column":66,"nodeType":"955","messageId":"956","endLine":24,"endColumn":68},{"ruleId":"949","severity":1,"message":"1098","line":38,"column":6,"nodeType":"951","endLine":38,"endColumn":8,"suggestions":"1099"},{"ruleId":"953","severity":1,"message":"954","line":42,"column":42,"nodeType":"955","messageId":"956","endLine":42,"endColumn":44},{"ruleId":"945","severity":1,"message":"1006","line":1,"column":27,"nodeType":"947","messageId":"948","endLine":1,"endColumn":36},{"ruleId":"945","severity":1,"message":"1100","line":4,"column":10,"nodeType":"947","messageId":"948","endLine":4,"endColumn":21},{"ruleId":"945","severity":1,"message":"967","line":4,"column":28,"nodeType":"947","messageId":"948","endLine":4,"endColumn":37},{"ruleId":"945","severity":1,"message":"1044","line":20,"column":22,"nodeType":"947","messageId":"948","endLine":20,"endColumn":33},{"ruleId":"945","severity":1,"message":"1101","line":21,"column":12,"nodeType":"947","messageId":"948","endLine":21,"endColumn":16},{"ruleId":"945","severity":1,"message":"1102","line":55,"column":11,"nodeType":"947","messageId":"948","endLine":55,"endColumn":24},{"ruleId":"953","severity":1,"message":"954","line":91,"column":47,"nodeType":"955","messageId":"956","endLine":91,"endColumn":49},{"ruleId":"953","severity":1,"message":"954","line":106,"column":57,"nodeType":"955","messageId":"956","endLine":106,"endColumn":59},{"ruleId":"953","severity":1,"message":"954","line":106,"column":159,"nodeType":"955","messageId":"956","endLine":106,"endColumn":161},{"ruleId":"945","severity":1,"message":"1103","line":11,"column":11,"nodeType":"947","messageId":"948","endLine":11,"endColumn":19},{"ruleId":"945","severity":1,"message":"1104","line":19,"column":12,"nodeType":"947","messageId":"948","endLine":19,"endColumn":23},{"ruleId":"945","severity":1,"message":"1105","line":19,"column":25,"nodeType":"947","messageId":"948","endLine":19,"endColumn":39},{"ruleId":"945","severity":1,"message":"1106","line":20,"column":12,"nodeType":"947","messageId":"948","endLine":20,"endColumn":22},{"ruleId":"945","severity":1,"message":"1107","line":20,"column":24,"nodeType":"947","messageId":"948","endLine":20,"endColumn":37},{"ruleId":"945","severity":1,"message":"1108","line":21,"column":12,"nodeType":"947","messageId":"948","endLine":21,"endColumn":29},{"ruleId":"945","severity":1,"message":"1109","line":21,"column":31,"nodeType":"947","messageId":"948","endLine":21,"endColumn":51},{"ruleId":"945","severity":1,"message":"1110","line":22,"column":12,"nodeType":"947","messageId":"948","endLine":22,"endColumn":21},{"ruleId":"945","severity":1,"message":"1111","line":22,"column":23,"nodeType":"947","messageId":"948","endLine":22,"endColumn":35},{"ruleId":"945","severity":1,"message":"1044","line":24,"column":22,"nodeType":"947","messageId":"948","endLine":24,"endColumn":33},{"ruleId":"945","severity":1,"message":"1001","line":27,"column":12,"nodeType":"947","messageId":"948","endLine":27,"endColumn":21},{"ruleId":"945","severity":1,"message":"1045","line":27,"column":23,"nodeType":"947","messageId":"948","endLine":27,"endColumn":35},{"ruleId":"949","severity":1,"message":"1002","line":42,"column":8,"nodeType":"951","endLine":42,"endColumn":10,"suggestions":"1112"},{"ruleId":"949","severity":1,"message":"1113","line":89,"column":8,"nodeType":"951","endLine":89,"endColumn":11,"suggestions":"1114"},{"ruleId":"949","severity":1,"message":"1115","line":89,"column":9,"nodeType":"1116","endLine":89,"endColumn":10},{"ruleId":"949","severity":1,"message":"1117","line":93,"column":8,"nodeType":"951","endLine":93,"endColumn":17,"suggestions":"1118"},{"ruleId":"953","severity":1,"message":"962","line":128,"column":122,"nodeType":"955","messageId":"956","endLine":128,"endColumn":124},{"ruleId":"953","severity":1,"message":"954","line":188,"column":40,"nodeType":"955","messageId":"956","endLine":188,"endColumn":42},{"ruleId":"953","severity":1,"message":"954","line":199,"column":40,"nodeType":"955","messageId":"956","endLine":199,"endColumn":42},{"ruleId":"953","severity":1,"message":"954","line":210,"column":99,"nodeType":"955","messageId":"956","endLine":210,"endColumn":101},{"ruleId":"953","severity":1,"message":"954","line":217,"column":69,"nodeType":"955","messageId":"956","endLine":217,"endColumn":71},{"ruleId":"953","severity":1,"message":"954","line":217,"column":169,"nodeType":"955","messageId":"956","endLine":217,"endColumn":171},{"ruleId":"953","severity":1,"message":"954","line":265,"column":45,"nodeType":"955","messageId":"956","endLine":265,"endColumn":47},{"ruleId":"953","severity":1,"message":"954","line":266,"column":90,"nodeType":"955","messageId":"956","endLine":266,"endColumn":92},{"ruleId":"953","severity":1,"message":"954","line":45,"column":37,"nodeType":"955","messageId":"956","endLine":45,"endColumn":39},{"ruleId":"953","severity":1,"message":"954","line":70,"column":37,"nodeType":"955","messageId":"956","endLine":70,"endColumn":39},{"ruleId":"945","severity":1,"message":"1032","line":82,"column":33,"nodeType":"947","messageId":"948","endLine":82,"endColumn":34},{"ruleId":"949","severity":1,"message":"1119","line":93,"column":8,"nodeType":"951","endLine":93,"endColumn":10,"suggestions":"1120"},{"ruleId":"953","severity":1,"message":"954","line":244,"column":39,"nodeType":"955","messageId":"956","endLine":244,"endColumn":41},{"ruleId":"949","severity":1,"message":"1094","line":315,"column":8,"nodeType":"951","endLine":315,"endColumn":10,"suggestions":"1121"},{"ruleId":"953","severity":1,"message":"954","line":333,"column":180,"nodeType":"955","messageId":"956","endLine":333,"endColumn":182},{"ruleId":"960","severity":1,"message":"961","line":411,"column":190,"nodeType":"959","endLine":411,"endColumn":299},{"ruleId":"960","severity":1,"message":"961","line":420,"column":144,"nodeType":"959","endLine":420,"endColumn":248},{"ruleId":"960","severity":1,"message":"961","line":508,"column":180,"nodeType":"959","endLine":508,"endColumn":289},{"ruleId":"960","severity":1,"message":"961","line":514,"column":151,"nodeType":"959","endLine":514,"endColumn":255},{"ruleId":"945","severity":1,"message":"1006","line":1,"column":27,"nodeType":"947","messageId":"948","endLine":1,"endColumn":36},{"ruleId":"953","severity":1,"message":"954","line":28,"column":24,"nodeType":"955","messageId":"956","endLine":28,"endColumn":26},{"ruleId":"953","severity":1,"message":"954","line":86,"column":29,"nodeType":"955","messageId":"956","endLine":86,"endColumn":31},{"ruleId":"953","severity":1,"message":"954","line":104,"column":19,"nodeType":"955","messageId":"956","endLine":104,"endColumn":21},{"ruleId":"953","severity":1,"message":"954","line":111,"column":21,"nodeType":"955","messageId":"956","endLine":111,"endColumn":23},{"ruleId":"960","severity":1,"message":"961","line":122,"column":98,"nodeType":"959","endLine":122,"endColumn":186},{"ruleId":"953","severity":1,"message":"954","line":131,"column":46,"nodeType":"955","messageId":"956","endLine":131,"endColumn":48},{"ruleId":"953","severity":1,"message":"954","line":144,"column":60,"nodeType":"955","messageId":"956","endLine":144,"endColumn":62},{"ruleId":"953","severity":1,"message":"954","line":148,"column":23,"nodeType":"955","messageId":"956","endLine":148,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":149,"column":64,"nodeType":"955","messageId":"956","endLine":149,"endColumn":66},{"ruleId":"953","severity":1,"message":"954","line":165,"column":48,"nodeType":"955","messageId":"956","endLine":165,"endColumn":50},{"ruleId":"953","severity":1,"message":"954","line":169,"column":23,"nodeType":"955","messageId":"956","endLine":169,"endColumn":25},{"ruleId":"953","severity":1,"message":"954","line":170,"column":52,"nodeType":"955","messageId":"956","endLine":170,"endColumn":54},{"ruleId":"960","severity":1,"message":"961","line":176,"column":53,"nodeType":"959","endLine":176,"endColumn":199},{"ruleId":"945","severity":1,"message":"1006","line":2,"column":20,"nodeType":"947","messageId":"948","endLine":2,"endColumn":29},{"ruleId":"945","severity":1,"message":"1122","line":13,"column":11,"nodeType":"947","messageId":"948","endLine":13,"endColumn":18},{"ruleId":"945","severity":1,"message":"1123","line":17,"column":12,"nodeType":"947","messageId":"948","endLine":17,"endColumn":29},{"ruleId":"945","severity":1,"message":"1124","line":17,"column":31,"nodeType":"947","messageId":"948","endLine":17,"endColumn":51},{"ruleId":"945","severity":1,"message":"1125","line":18,"column":12,"nodeType":"947","messageId":"948","endLine":18,"endColumn":19},{"ruleId":"945","severity":1,"message":"1126","line":18,"column":21,"nodeType":"947","messageId":"948","endLine":18,"endColumn":31},{"ruleId":"945","severity":1,"message":"1044","line":21,"column":22,"nodeType":"947","messageId":"948","endLine":21,"endColumn":33},{"ruleId":"953","severity":1,"message":"954","line":77,"column":45,"nodeType":"955","messageId":"956","endLine":77,"endColumn":47},{"ruleId":"953","severity":1,"message":"954","line":77,"column":147,"nodeType":"955","messageId":"956","endLine":77,"endColumn":149},{"ruleId":"949","severity":1,"message":"1094","line":42,"column":8,"nodeType":"951","endLine":42,"endColumn":10,"suggestions":"1127"},{"ruleId":"953","severity":1,"message":"954","line":84,"column":37,"nodeType":"955","messageId":"956","endLine":84,"endColumn":39},{"ruleId":"949","severity":1,"message":"1096","line":95,"column":8,"nodeType":"951","endLine":95,"endColumn":10,"suggestions":"1128"},{"ruleId":"953","severity":1,"message":"954","line":103,"column":41,"nodeType":"955","messageId":"956","endLine":103,"endColumn":43},{"ruleId":"953","severity":1,"message":"954","line":104,"column":78,"nodeType":"955","messageId":"956","endLine":104,"endColumn":80},{"ruleId":"960","severity":1,"message":"961","line":203,"column":178,"nodeType":"959","endLine":203,"endColumn":287},{"ruleId":"960","severity":1,"message":"961","line":209,"column":149,"nodeType":"959","endLine":209,"endColumn":253},{"ruleId":"953","severity":1,"message":"962","line":216,"column":90,"nodeType":"955","messageId":"956","endLine":216,"endColumn":92},{"ruleId":"953","severity":1,"message":"954","line":248,"column":99,"nodeType":"955","messageId":"956","endLine":248,"endColumn":101},{"ruleId":"953","severity":1,"message":"954","line":268,"column":75,"nodeType":"955","messageId":"956","endLine":268,"endColumn":77},{"ruleId":"960","severity":1,"message":"961","line":293,"column":210,"nodeType":"959","endLine":293,"endColumn":319},{"ruleId":"960","severity":1,"message":"961","line":304,"column":165,"nodeType":"959","endLine":304,"endColumn":269},{"ruleId":"945","severity":1,"message":"1129","line":5,"column":12,"nodeType":"947","messageId":"948","endLine":5,"endColumn":32},{"ruleId":"945","severity":1,"message":"1130","line":5,"column":34,"nodeType":"947","messageId":"948","endLine":5,"endColumn":57},{"ruleId":"1037","severity":1,"message":"1038","line":15,"column":26,"nodeType":"1039","messageId":"1040","endLine":15,"endColumn":28},{"ruleId":"1037","severity":1,"message":"1038","line":15,"column":43,"nodeType":"1039","messageId":"1040","endLine":15,"endColumn":45},{"ruleId":"1037","severity":1,"message":"1038","line":20,"column":26,"nodeType":"1039","messageId":"1040","endLine":20,"endColumn":28},{"ruleId":"1037","severity":1,"message":"1038","line":20,"column":43,"nodeType":"1039","messageId":"1040","endLine":20,"endColumn":45},{"ruleId":"1131","severity":1,"message":"1132","line":64,"column":21,"nodeType":"947","messageId":"1133","endLine":64,"endColumn":33},{"ruleId":"949","severity":1,"message":"1134","line":108,"column":8,"nodeType":"951","endLine":108,"endColumn":32,"suggestions":"1135"},{"ruleId":"945","severity":1,"message":"1103","line":10,"column":11,"nodeType":"947","messageId":"948","endLine":10,"endColumn":19},{"ruleId":"945","severity":1,"message":"1104","line":18,"column":12,"nodeType":"947","messageId":"948","endLine":18,"endColumn":23},{"ruleId":"945","severity":1,"message":"1105","line":18,"column":25,"nodeType":"947","messageId":"948","endLine":18,"endColumn":39},{"ruleId":"945","severity":1,"message":"1106","line":19,"column":12,"nodeType":"947","messageId":"948","endLine":19,"endColumn":22},{"ruleId":"945","severity":1,"message":"1107","line":19,"column":24,"nodeType":"947","messageId":"948","endLine":19,"endColumn":37},{"ruleId":"945","severity":1,"message":"1108","line":20,"column":12,"nodeType":"947","messageId":"948","endLine":20,"endColumn":29},{"ruleId":"945","severity":1,"message":"1109","line":20,"column":31,"nodeType":"947","messageId":"948","endLine":20,"endColumn":51},{"ruleId":"945","severity":1,"message":"1110","line":21,"column":12,"nodeType":"947","messageId":"948","endLine":21,"endColumn":21},{"ruleId":"945","severity":1,"message":"1111","line":21,"column":23,"nodeType":"947","messageId":"948","endLine":21,"endColumn":35},{"ruleId":"945","severity":1,"message":"1044","line":23,"column":22,"nodeType":"947","messageId":"948","endLine":23,"endColumn":33},{"ruleId":"949","severity":1,"message":"1002","line":37,"column":8,"nodeType":"951","endLine":37,"endColumn":10,"suggestions":"1136"},{"ruleId":"949","severity":1,"message":"1113","line":87,"column":8,"nodeType":"951","endLine":87,"endColumn":11,"suggestions":"1137"},{"ruleId":"949","severity":1,"message":"1115","line":87,"column":9,"nodeType":"1116","endLine":87,"endColumn":10},{"ruleId":"949","severity":1,"message":"1117","line":91,"column":8,"nodeType":"951","endLine":91,"endColumn":17,"suggestions":"1138"},{"ruleId":"953","severity":1,"message":"962","line":126,"column":122,"nodeType":"955","messageId":"956","endLine":126,"endColumn":124},{"ruleId":"953","severity":1,"message":"954","line":184,"column":40,"nodeType":"955","messageId":"956","endLine":184,"endColumn":42},{"ruleId":"953","severity":1,"message":"954","line":195,"column":40,"nodeType":"955","messageId":"956","endLine":195,"endColumn":42},{"ruleId":"953","severity":1,"message":"954","line":205,"column":118,"nodeType":"955","messageId":"956","endLine":205,"endColumn":120},{"ruleId":"953","severity":1,"message":"954","line":212,"column":69,"nodeType":"955","messageId":"956","endLine":212,"endColumn":71},{"ruleId":"953","severity":1,"message":"954","line":212,"column":169,"nodeType":"955","messageId":"956","endLine":212,"endColumn":171},{"ruleId":"953","severity":1,"message":"954","line":261,"column":45,"nodeType":"955","messageId":"956","endLine":261,"endColumn":47},{"ruleId":"953","severity":1,"message":"954","line":262,"column":90,"nodeType":"955","messageId":"956","endLine":262,"endColumn":92},{"ruleId":"945","severity":1,"message":"1032","line":80,"column":33,"nodeType":"947","messageId":"948","endLine":80,"endColumn":34},{"ruleId":"949","severity":1,"message":"1119","line":91,"column":8,"nodeType":"951","endLine":91,"endColumn":10,"suggestions":"1139"},{"ruleId":"953","severity":1,"message":"954","line":241,"column":39,"nodeType":"955","messageId":"956","endLine":241,"endColumn":41},{"ruleId":"949","severity":1,"message":"1094","line":312,"column":8,"nodeType":"951","endLine":312,"endColumn":10,"suggestions":"1140"},{"ruleId":"953","severity":1,"message":"954","line":330,"column":196,"nodeType":"955","messageId":"956","endLine":330,"endColumn":198},{"ruleId":"960","severity":1,"message":"961","line":408,"column":190,"nodeType":"959","endLine":408,"endColumn":299},{"ruleId":"960","severity":1,"message":"961","line":417,"column":144,"nodeType":"959","endLine":417,"endColumn":248},{"ruleId":"960","severity":1,"message":"961","line":505,"column":180,"nodeType":"959","endLine":505,"endColumn":289},{"ruleId":"960","severity":1,"message":"961","line":511,"column":151,"nodeType":"959","endLine":511,"endColumn":255},{"ruleId":"945","severity":1,"message":"1141","line":1,"column":8,"nodeType":"947","messageId":"948","endLine":1,"endColumn":13},{"ruleId":"945","severity":1,"message":"1141","line":1,"column":8,"nodeType":"947","messageId":"948","endLine":1,"endColumn":13},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchapi'. Either include it or remove the dependency array.","ArrayExpression",["1142"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'websocket' is defined but never used.","'Doctorapi' is defined but never used.","'PEitemdetailssection' is defined but never used.","'Newpurchaseentryarray' is defined but never used.","'toggleaddoption' is assigned a value but never used.","'inactivelogout' is defined but never used.","'weekday' is assigned a value but never used.","'setdoctorindex' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'fetchallAppointmentslist'. Either include it or remove the dependency array.",["1143"],["1144"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'setpages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllPatients'. Either include it or remove the dependency array.",["1145"],["1146"],"React Hook useEffect has a missing dependency: 'getAllDoctors'. Either include it or remove the dependency array.",["1147"],["1148"],"'type' is assigned a value but never used.","'settype' is assigned a value but never used.","'setclinic' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Appointments_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Doctors_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pharmacy_Dsr must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'searchpatient'. Either include it or remove the dependency array.",["1149"],"'ischecked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ClinicList'. Either include it or remove the dependency array.",["1150"],"React Hook useEffect has a missing dependency: 'setfromsearch'. Either include it or remove the dependency array.",["1151"],"'useEffect' is defined but never used.","'APIDate' is assigned a value but never used.","'toggledoctorform' is assigned a value but never used.","'customloading' is defined but never used.","'appointmentid' is assigned a value but never used.","'d_form' is assigned a value but never used.","'ArraySum' is defined but never used.","React Hook useEffect has a missing dependency: 'Appointmentlist'. Either include it or remove the dependency array.",["1152"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1153","text":"1154"},{"range":"1155","text":"1154"},"'doctorid' is assigned a value but never used.",["1156"],"'axios' is defined but never used.","'useState' is defined but never used.","'URL' is defined but never used.","'Notiflix' is defined but never used.","'customnotify' is defined but never used.","'Stockvaccinearray' is defined but never used.","'Stockmedicinearray' is defined but never used.","'PEitemdetailsarray' is defined but never used.","React Hook useEffect has a missing dependency: 'GETSalesList'. Either include it or remove the dependency array.",["1157"],"'p' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AddPaymentMethods'. Either include it or remove the dependency array.",["1158"],"React Hook useEffect has a missing dependency: 'CalPrevTotal'. Either include it or remove the dependency array.",["1159"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'tabindex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETSaleReturns'. Either include it or remove the dependency array.",["1160"],"'setclinicid' is assigned a value but never used.","'setischecked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Doclist'. Either include it or remove the dependency array.",["1161"],"React Hook useEffect has a missing dependency: 'CalGrandttl'. Either include it or remove the dependency array.",["1162"],"'c' is assigned a value but never used.","'vendorsref' is assigned a value but never used.","'billname' is assigned a value but never used.","'itemsearch' is assigned a value but never used.","'setitemsearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GETPurchaseList'. Either include it or remove the dependency array.",["1163"],"React Hook useEffect has a missing dependency: 'CalculateGst'. Either include it or remove the dependency array.",["1164"],"React Hook useEffect has a missing dependency: 'CalculateIGst'. Either include it or remove the dependency array.",["1165"],"React Hook useEffect has a missing dependency: 'Calculate'. Either include it or remove the dependency array.",["1166"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'CalculateCPU'. Either include it or remove the dependency array.",["1167"],"Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","React Hook useEffect has a missing dependency: 'GETPurchaseReturns'. Either include it or remove the dependency array.",["1168"],"'ClinicId' is assigned a value but never used.","'ClinicList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetVaccines'. Either include it or remove the dependency array.",["1169"],["1170"],"'TodayDate' is defined but never used.","React Hook useEffect has a missing dependency: 'DSR_All_Appointments'. Either include it or remove the dependency array.",["1171"],["1172"],"'payments' is assigned a value but never used.","'setpayments' is assigned a value but never used.","'CountAppointments' is defined but never used.","'lng' is assigned a value but never used.","'capitalizeFirstLetter' is defined but never used.","React Hook useEffect has a missing dependency: 'currentvalue'. Either include it or remove the dependency array.",["1173"],"React Hook useEffect has a missing dependency: 'GetDoctors'. Either include it or remove the dependency array.",["1174"],"'doctorstime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DoctorwiseTable'. Either include it or remove the dependency array.",["1175"],"React Hook useEffect has a missing dependency: 'PharmacyList'. Either include it or remove the dependency array.",["1176"],"'setAppointments' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AdvancePayments'. Either include it or remove the dependency array.",["1177"],"React Hook useEffect has a missing dependency: 'ExistedPendingPayments'. Either include it or remove the dependency array.",["1178"],"React Hook useEffect has missing dependencies: 'CalculatePaidPendings' and 'calculate'. Either include them or remove the dependency array.",["1179"],"'DoctorsList' is defined but never used.","'time' is assigned a value but never used.","'gettime_value' is assigned a value but never used.","'colorref' is assigned a value but never used.","'searchinput' is assigned a value but never used.","'setsearchinput' is assigned a value but never used.","'searchlist' is assigned a value but never used.","'setsearchlist' is assigned a value but never used.","'displaysearchlist' is assigned a value but never used.","'setdisplaysearchlist' is assigned a value but never used.","'patientid' is assigned a value but never used.","'setpatientid' is assigned a value but never used.",["1180"],"React Hook useEffect has missing dependencies: 'getCurrentTimeslots' and 'props.appointmentdate'. Either include them or remove the dependency array.",["1181"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'getCurrentTimefrom'. Either include it or remove the dependency array.",["1182"],"React Hook useEffect has missing dependencies: 'AddExtraCharges' and 'AddPaymentMethods'. Either include them or remove the dependency array.",["1183"],["1184"],"'Doctors' is assigned a value but never used.","'adddoctorfortoday' is assigned a value but never used.","'setadddoctorfortoday' is assigned a value but never used.","'docdate' is assigned a value but never used.","'setdocdate' is assigned a value but never used.",["1185"],["1186"],"'ExportPurchaseEntry2' is assigned a value but never used.","'setExportPurchaseEntry2' is assigned a value but never used.","no-redeclare","'vendorsitems' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'MakePurchaseEntryExport'. Either include it or remove the dependency array.",["1187"],["1188"],["1189"],["1190"],["1191"],["1192"],"'React' is defined but never used.",{"desc":"1193","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},{"desc":"1207","fix":"1208"},{"desc":"1209","fix":"1210"},{"desc":"1211","fix":"1212"},{"desc":"1213","fix":"1214"},[16869,16869]," rel=\"noreferrer\"",[17236,17236],{"desc":"1215","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1235","fix":"1236"},{"desc":"1237","fix":"1238"},{"desc":"1239","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1241","fix":"1243"},{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1250","fix":"1251"},{"desc":"1252","fix":"1253"},{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},{"desc":"1258","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1209","fix":"1262"},{"desc":"1263","fix":"1264"},{"desc":"1265","fix":"1266"},{"desc":"1267","fix":"1268"},{"desc":"1256","fix":"1269"},{"desc":"1256","fix":"1270"},{"desc":"1258","fix":"1271"},{"desc":"1272","fix":"1273"},{"desc":"1209","fix":"1274"},{"desc":"1263","fix":"1275"},{"desc":"1265","fix":"1276"},{"desc":"1267","fix":"1277"},{"desc":"1256","fix":"1278"},"Update the dependencies array to be: [ClinicId, fetchapi]",{"range":"1279","text":"1280"},"Update the dependencies array to be: [fetchallAppointmentslist]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [doctorid, fetchallAppointmentslist, fromdate, todate, type]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [getAllPatients]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [getAllPatients, patientsearch]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [getAllDoctors]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [Doctorssearch, getAllDoctors]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [props.searchtext, searchpatient]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [ClinicList]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [props.patientidfromsearch, setfromsearch]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [Appointmentlist, props._selected]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [fetchapi, props._selected]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [GETSalesList, channel, fromdate, todate]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [AddPaymentMethods]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [CalPrevTotal, previouspayments]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [GETSaleReturns, channel, fromdate, todate]",{"range":"1309","text":"1310"},"Update the dependencies array to be: [Doclist, doctorid]",{"range":"1311","text":"1312"},"Update the dependencies array to be: [CalGrandttl, SelectedProducts]",{"range":"1313","text":"1314"},"Update the dependencies array to be: [GETPurchaseList, channel, fromdate, todate]",{"range":"1315","text":"1316"},"Update the dependencies array to be: [CalculateGst, sgstprcnt]",{"range":"1317","text":"1318"},"Update the dependencies array to be: [CalculateIGst, igstprcnt]",{"range":"1319","text":"1320"},"Update the dependencies array to be: [Calculate]",{"range":"1321","text":"1322"},"Update the dependencies array to be: [CalculateCPU]",{"range":"1323","text":"1324"},"Update the dependencies array to be: [GETPurchaseReturns, channel, fromdate, todate]",{"range":"1325","text":"1326"},"Update the dependencies array to be: [GetVaccines, searchname]",{"range":"1327","text":"1328"},{"range":"1329","text":"1328"},"Update the dependencies array to be: [DSR_All_Appointments]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [DSR_All_Appointments, props.doctorid, props.fromdate, props.todate]",{"range":"1332","text":"1333"},"Update the dependencies array to be: [currentvalue, props.patient_id]",{"range":"1334","text":"1335"},"Update the dependencies array to be: [GetDoctors, props.fromdate, props.todate]",{"range":"1336","text":"1337"},"Update the dependencies array to be: [props.fromdate, props.todate, load, DoctorwiseTable]",{"range":"1338","text":"1339"},"Update the dependencies array to be: [PharmacyList, props.fromdate, props.todate]",{"range":"1340","text":"1341"},"Update the dependencies array to be: [AdvancePayments]",{"range":"1342","text":"1343"},"Update the dependencies array to be: [ExistedPendingPayments]",{"range":"1344","text":"1345"},"Update the dependencies array to be: [CalculatePaidPendings, calculate]",{"range":"1346","text":"1347"},{"range":"1348","text":"1296"},"Update the dependencies array to be: [getCurrentTimeslots, props.appointmentdate]",{"range":"1349","text":"1350"},"Update the dependencies array to be: [getCurrentTimefrom, trigger]",{"range":"1351","text":"1352"},"Update the dependencies array to be: [AddExtraCharges, AddPaymentMethods]",{"range":"1353","text":"1354"},{"range":"1355","text":"1343"},{"range":"1356","text":"1343"},{"range":"1357","text":"1345"},"Update the dependencies array to be: [MakePurchaseEntryExport, props.purchaseentryarr]",{"range":"1358","text":"1359"},{"range":"1360","text":"1296"},{"range":"1361","text":"1350"},{"range":"1362","text":"1352"},{"range":"1363","text":"1354"},{"range":"1364","text":"1343"},[4097,4107],"[ClinicId, fetchapi]",[20352,20354],"[fetchallAppointmentslist]",[20417,20451],"[doctorid, fetchallAppointmentslist, fromdate, todate, type]",[27709,27711],"[getAllPatients]",[27762,27777],"[getAllPatients, patientsearch]",[35952,35954],"[getAllDoctors]",[36004,36019],"[Doctorssearch, getAllDoctors]",[1213,1231],"[props.searchtext, searchpatient]",[1416,1418],"[ClinicList]",[1619,1646],"[props.patientidfromsearch, setfromsearch]",[3161,3178],"[Appointmentlist, props._selected]",[24146,24163],"[fetchapi, props._selected]",[4970,4997],"[GETSalesList, channel, fromdate, todate]",[18015,18017],"[AddPaymentMethods]",[19628,19646],"[CalPrevTotal, previouspayments]",[38899,38926],"[GETSaleReturns, channel, fromdate, todate]",[51570,51580],"[Doclist, doctorid]",[52546,52564],"[CalGrandttl, SelectedProducts]",[105388,105415],"[GETPurchaseList, channel, fromdate, todate]",[141603,141614],"[CalculateGst, sgstprcnt]",[141696,141707],"[CalculateIGst, igstprcnt]",[141766,141779],"[Calculate]",[141838,141867],"[CalculateCPU]",[167727,167754],"[GETPurchaseReturns, channel, fromdate, todate]",[207946,207958],"[GetVaccines, searchname]",[216727,216739],[1911,1913],"[DSR_All_Appointments]",[1970,2016],"[DSR_All_Appointments, props.doctorid, props.fromdate, props.todate]",[3428,3446],"[currentvalue, props.patient_id]",[1113,1143],"[GetDoctors, props.fromdate, props.todate]",[5367,5403],"[props.fromdate, props.todate, load, DoctorwiseTable]",[866,896],"[PharmacyList, props.fromdate, props.todate]",[1576,1578],"[AdvancePayments]",[3262,3264],"[ExistedPendingPayments]",[1380,1382],"[CalculatePaidPendings, calculate]",[1598,1600],[3191,3194],"[getCurrentTimeslots, props.appointmentdate]",[3259,3268],"[getCurrentTimefrom, trigger]",[4432,4434],"[AddExtraCharges, AddPaymentMethods]",[12052,12054],[1536,1538],[3408,3410],[5894,5918],"[MakePurchaseEntryExport, props.purchaseentryarr]",[1548,1550],[3217,3220],[3285,3294],[4046,4048],[11633,11635]]