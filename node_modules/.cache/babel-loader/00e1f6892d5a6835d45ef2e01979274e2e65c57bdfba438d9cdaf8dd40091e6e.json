{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aartas-WebDesign\\\\Desktop\\\\ConnectApp_React\\\\connect_app\\\\FrontEnd\\\\src\\\\components\\\\pharmacy\\\\Exports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ExportExcel } from '../features/ExportExcel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportPurchaseEntry = props => {\n  _s();\n  const [ExportPurchaseEntry, setExportPurchaseEntry] = useState([]);\n  const [ExportPurchaseEntry2, setExportPurchaseEntry2] = useState([]);\n  const fileName = 'purchase';\n  async function MakePurchaseEntryExport() {\n    if (props.purchaseentryarr.length !== 0) {\n      const vendors = await props.purchaseentryarr.map(data => ({\n        \"PE ID\": \"PE-\" + data.bill_id,\n        \"PO ID\": data.purchase_order_id != null ? data.purchase_order_id : '',\n        'Channel': data.channel == 1 ? 'Pharmacy' : 'Consumables',\n        'Invoice No.': data.invoice_no != null ? data.invoice_no : '',\n        'Bill Date': data.bill_date != null ? data.bill_date : '',\n        'Bill Total': data.bill_total != null ? data.bill_total : ''\n      }));\n      var obj = [];\n      for (let i = 0; i < props.purchaseentryarr.length; i++) {\n        var vendorsitems = props.purchaseentryarr[i].medicines.map(Data => ({\n          'Item ID': Data.id != null ? Data.id : '',\n          'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\n          'Batch No.': Data.batch_no != null ? Data.batch_no : '',\n          'ExpiryDate': Data.expiry_date !== null ? Data.expiry_date : '',\n          'MRP': Data.mrp != null ? Data.mrp : '',\n          'Rate': Data.rate != null ? Data.rate : ''\n        }));\n        obj.push(vendorsitems);\n      }\n      var copyobj = obj.copyWithin(0, 1, obj.length);\n      setExportPurchaseEntry(vendors);\n      setExportPurchaseEntry2(obj);\n      console.log(copyobj);\n    }\n  }\n  useEffect(() => {\n    async function func() {\n      await MakePurchaseEntryExport();\n    }\n    func();\n  }, []);\n  // console.log(props.purchaseentryarr)\n  console.log(ExportPurchaseEntry, ExportPurchaseEntry2);\n  return /*#__PURE__*/_jsxDEV(ExportExcel, {\n    apiData: ExportPurchaseEntry2,\n    fileName: fileName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ExportPurchaseEntry, \"wmkwy/kawiNDBqG+cxij8KnSrqE=\");\n_c = ExportPurchaseEntry;\nexport { ExportPurchaseEntry };\nvar _c;\n$RefreshReg$(_c, \"ExportPurchaseEntry\");","map":{"version":3,"names":["React","useState","useEffect","ExportExcel","ExportPurchaseEntry","props","setExportPurchaseEntry","ExportPurchaseEntry2","setExportPurchaseEntry2","fileName","MakePurchaseEntryExport","purchaseentryarr","length","vendors","map","data","bill_id","purchase_order_id","channel","invoice_no","bill_date","bill_total","obj","i","vendorsitems","medicines","Data","id","medicine","name","batch_no","expiry_date","mrp","rate","push","copyobj","copyWithin","console","log","func"],"sources":["C:/Users/Aartas-WebDesign/Desktop/ConnectApp_React/connect_app/FrontEnd/src/components/pharmacy/Exports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ExportExcel } from '../features/ExportExcel'\r\nconst ExportPurchaseEntry = (props) => {\r\n    const [ExportPurchaseEntry, setExportPurchaseEntry] = useState([])\r\n    const [ExportPurchaseEntry2, setExportPurchaseEntry2] = useState([])\r\n    const fileName = 'purchase'\r\n    async function MakePurchaseEntryExport() {\r\n        if (props.purchaseentryarr.length !== 0) {\r\n            const vendors = await props.purchaseentryarr.map(data => (\r\n             \r\n                {\r\n                    \"PE ID\": \"PE-\" + data.bill_id,\r\n                    \"PO ID\": data.purchase_order_id != null ? data.purchase_order_id : '',\r\n                    'Channel': data.channel == 1 ? 'Pharmacy' : 'Consumables',\r\n                    'Invoice No.': data.invoice_no != null ? data.invoice_no : '',\r\n                    'Bill Date': data.bill_date != null ? data.bill_date : '',\r\n                    'Bill Total': data.bill_total != null ? data.bill_total : '',\r\n\r\n                }\r\n            ))\r\n            var obj= []\r\n                for (let i=0;i<props.purchaseentryarr.length;i++){\r\n                  var vendorsitems =  props.purchaseentryarr[i].medicines.map(Data => ({\r\n                        'Item ID': Data.id != null ? Data.id : '',\r\n                        'Item Name': Data.medicine && Data.medicine.name && Data.medicine.name != null ? Data.medicine.name : '',\r\n                        'Batch No.': Data.batch_no != null ? Data.batch_no : '',\r\n                        'ExpiryDate': Data.expiry_date !== null ? Data.expiry_date : '',\r\n                        'MRP': Data.mrp != null ? Data.mrp : '',\r\n                        'Rate': Data.rate != null ? Data.rate : ''\r\n                    }))\r\n                    obj.push(vendorsitems)\r\n                }\r\n  \r\n                var copyobj =    obj.copyWithin(0,1,obj.length)\r\n                \r\n            setExportPurchaseEntry(vendors)\r\n            setExportPurchaseEntry2(obj)\r\n            console.log(copyobj)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function func() {\r\n            await MakePurchaseEntryExport()\r\n        }\r\n        func()\r\n    }, [])\r\n    // console.log(props.purchaseentryarr)\r\n    console.log(ExportPurchaseEntry,ExportPurchaseEntry2)\r\n    return (\r\n        <ExportExcel apiData={ExportPurchaseEntry2} fileName={fileName} />\r\n    )\r\n}\r\n\r\nexport { ExportPurchaseEntry }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}