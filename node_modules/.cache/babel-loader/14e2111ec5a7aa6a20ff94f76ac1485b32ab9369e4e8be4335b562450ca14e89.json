{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aartas-WebDesign\\\\Desktop\\\\ConnectApp_React\\\\connect_app\\\\FrontEnd\\\\src\\\\components\\\\features\\\\ExportExcel.jsx\";\nimport React from 'react';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportExcel = _ref => {\n  let {\n    apiData,\n    fileName,\n    SheetName\n  } = _ref;\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button button-lightgreen py-1 fw-bold ms-lg-2\",\n    onClick: e => exportToCSV(apiData, fileName, SheetName),\n    children: \"Excel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ExportExcel;\nexport { ExportExcel };\nvar _c;\n$RefreshReg$(_c, \"ExportExcel\");","map":{"version":3,"names":["React","FileSaver","XLSX","ExportExcel","apiData","fileName","SheetName","fileType","fileExtension","exportToCSV","ws","utils","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","write","bookType","type","Blob","saveAs","e"],"sources":["C:/Users/Aartas-WebDesign/Desktop/ConnectApp_React/connect_app/FrontEnd/src/components/features/ExportExcel.jsx"],"sourcesContent":["import React from 'react'\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nconst ExportExcel = ({ apiData, fileName,SheetName }) => {\r\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n\r\n    const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <button className='button button-lightgreen py-1 fw-bold ms-lg-2'onClick={(e) => exportToCSV(apiData, fileName,SheetName)}>Excel</button>\r\n  );\r\n}\r\n\r\nexport  {ExportExcel}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC;AAC7B,MAAMC,WAAW,GAAG,QAAqC;EAAA,IAApC;IAAEC,OAAO;IAAEC,QAAQ;IAACC;EAAU,CAAC;EAChD,MAAMC,QAAQ,GAAG,iFAAiF;EAClG,MAAMC,aAAa,GAAG,OAAO;EAE7B,MAAMC,WAAW,GAAG,CAACL,OAAO,EAAEC,QAAQ,KAAK;IAC3C,MAAMK,EAAE,GAAGR,IAAI,CAACS,KAAK,CAACC,aAAa,CAACR,OAAO,CAAC;IAC5C,MAAMS,EAAE,GAAG;MAAEC,MAAM,EAAE;QAAEC,IAAI,EAAEL;MAAG,CAAC;MAAEM,UAAU,EAAE,CAAC,MAAM;IAAE,CAAC;IACzD,MAAMC,WAAW,GAAGf,IAAI,CAACgB,KAAK,CAACL,EAAE,EAAE;MAAEM,QAAQ,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IACvE,MAAML,IAAI,GAAG,IAAIM,IAAI,CAAC,CAACJ,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAEb;IAAS,CAAC,CAAC;IACxDN,SAAS,CAACqB,MAAM,CAACP,IAAI,EAAEV,QAAQ,GAAGG,aAAa,CAAC;EAClD,CAAC;EAED,oBACE;IAAQ,SAAS,EAAC,+CAA+C;IAAA,OAAO,EAAGe,CAAC,IAAKd,WAAW,CAACL,OAAO,EAAEC,QAAQ,EAACC,SAAS,CAAE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAe;AAE7I,CAAC;AAAA,KAfKH,WAAW;AAiBjB,SAASA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}