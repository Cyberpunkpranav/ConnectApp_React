{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aartas-WebDesign\\\\Desktop\\\\ConnectApp_React\\\\connect_app\\\\FrontEnd\\\\src\\\\components\\\\Appointments\\\\UpdateAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index';\nimport Notiflix from 'notiflix';\nimport '../../css/bootstrap.css';\nimport '../../css/appointment.css';\nimport { customconfirm } from '../features/notiflix/customconfirm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateAppointment = props => {\n  _s();\n  const colorref = useRef(null);\n  const clinicID = localStorage.getItem('ClinicId');\n  let adminid = localStorage.getItem('id');\n  const url = useContext(URL);\n  const DocApi = useContext(Doctorapi);\n  const Doclist = useContext(DoctorsList);\n  const TodayDoctors = useContext(TodayDocs);\n  const [cliniclist, setcliniclist] = useState([]);\n  const [searchinput, setsearchinput] = useState();\n  const [searchlist, setsearchlist] = useState([]);\n  const [displaysearchlist, setdisplaysearchlist] = useState('none');\n  const [patientid, setpatientid] = useState();\n  const [doctorid, setdoctorid] = useState();\n  const [clinicid, setclinicid] = useState(clinicID);\n  const [time, settime] = useState();\n  const [timeindex, settimeindex] = useState();\n  const [load, setload] = useState();\n  const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState();\n  const [ApiDocTimefrom, setApiDocTimefrom] = useState();\n  function ClinicList() {\n    axios.get(`${url}/clinic/list`).then(response => {\n      setcliniclist(response.data.data);\n    });\n  }\n  useEffect(() => {\n    ClinicList();\n  }, []);\n  function tConvert(time) {\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n    if (time.length > 1) {\n      time = time.slice(1);\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\n      time[0] = +time[0] % 12 || 12;\n    }\n    return time.join('');\n  }\n  const dateref = useRef();\n  const docref = useRef();\n  const [trigger, settrigger] = useState(false);\n  async function getCurrentTimeslots() {\n    setdoctorid(props.appointmentdoctorid);\n    dateref.current.value = '';\n    docref.current.value = props.appointmentdoctorid;\n    let Timeslots = [];\n    setApikeyDocTimeslots([]);\n    for (let i = 0; i < DocApi.length; i++) {\n      if (DocApi[i].id === Number(props.appointmentdoctorid)) {\n        Timeslots.push(DocApi[i].month_timeslots);\n      }\n    }\n    setApikeyDocTimeslots(Timeslots);\n    settrigger(true);\n  }\n  async function getCurrentTimefrom() {\n    setApiDocTimefrom();\n    let timefrom = [];\n    for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\n      if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\n        timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status]);\n      }\n    }\n    setApiDocTimefrom(timefrom);\n    settrigger(false);\n  }\n  useEffect(() => {\n    getCurrentTimeslots();\n    dateref.current.value = props.appointmentdate;\n  }, [1]);\n  useEffect(() => {\n    getCurrentTimefrom();\n  }, [trigger]);\n  const gettime_value = e => {\n    e.preventDefault();\n    settime(e.target.value);\n  };\n  async function getTimeslots(e) {\n    setdoctorid(e.target.value);\n    dateref.current.value = '';\n    let Timeslots = [];\n    setApikeyDocTimeslots([]);\n    for (let i = 0; i < DocApi.length; i++) {\n      if (DocApi[i].id === Number(e.target.value)) {\n        Timeslots.push(DocApi[i].month_timeslots);\n      }\n    }\n    setApikeyDocTimeslots(Timeslots);\n  }\n  async function getTimefrom(e) {\n    setApiDocTimefrom([]);\n    let timefrom = [];\n    for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\n      if (ApikeyDocTimeslots[0][j].date === e.target.value) {\n        timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status]);\n      }\n    }\n    setApiDocTimefrom(timefrom);\n  }\n  function UpdateAppointment(e) {\n    if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\n      try {\n        // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\n        setload(true);\n        axios.post(`${url}/update/appointment`, {\n          appointment_id: props.appointmentid,\n          doctor_id: doctorid,\n          clinic_id: clinicid,\n          timeslot_id: time,\n          patient_id: props.patientid,\n          admin_id: adminid\n        }).then(response => {\n          if (response) {\n            props.fetchallAppointmentslist();\n            props.closeappointmentform();\n            setload(false);\n            props.fetchapi();\n            Notiflix.Notify.success(response.data.message);\n          } else {\n            setload(false);\n            Notiflix.Notify.alert('Failed to Update');\n          }\n        });\n      } catch (e) {\n        alert(e);\n        setload(false);\n      }\n    } else {\n      Notiflix.Notify.warning('Please Fill all Detais');\n      setload(false);\n    }\n  }\n  const confirmmessage = e => {\n    e.preventDefault();\n    customconfirm();\n    Notiflix.Confirm.show(`Update Appointment Details`, `Do you surely want to update ${props.patientname} Appointment Details`, 'Yes', 'No', () => {\n      UpdateAppointment();\n    }, () => {\n      return 0;\n    }, {});\n  };\n  const HighlightOptions = response => {\n    for (let k = 0; k < TodayDoctors.length; k++) {\n      if (TodayDoctors[k][0] !== undefined) {\n        if (TodayDoctors[k][0] == response) {\n          return 'charcoal';\n        }\n      }\n    }\n  };\n  const Avaliablemessage = response => {\n    for (let k = 0; k < TodayDoctors.length; k++) {\n      if (TodayDoctors[k][0] !== undefined) {\n        if (TodayDoctors[k][0] == response) {\n          return '(Aval today) ';\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-seashell text-start rounded-2 shadow position-relative p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center\",\n      children: [\"Update \", props.patientname, \" Appointment Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn-close closebtn position-absolute\",\n      \"aria-label\": \"Close\",\n      disabled: load == true ? true : false,\n      onClick: props.closeappointmentform\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 bg-seashell  border-0\",\n        children: cliniclist.map((data, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `d-${clinicID == data.id ? 'block' : 'none'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: `radio me-1 `,\n              checked: clinicID == data.id ? true : false,\n              name: data.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 100\n            }, this), \" \", data.title, \" \", data.address]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-0 m-0 text-center ms-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selected Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"col-10 form-control selectdoctor bg-seashell\",\n              ref: docref,\n              onChange: getTimeslots,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                defaultValue: \"Select Doctor bg-seashell\",\n                children: \"Select Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), TodayDoctors ? Doclist.map((data, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                className: ` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`,\n                name: HighlightOptions(data[0]) ? 'Currently Avaliable' : '',\n                selected: data[0] === props.appointmentdoctorid ? true : false,\n                value: data[0],\n                children: [data[0], \".\", data[1], \" \", Avaliablemessage(data[0])]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-auto m-0 p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"\",\n            children: \"Selected Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ref: dateref,\n              className: \"form-control selectdate\",\n              onChange: getTimefrom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 col-lg-3 col-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selected Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button button-burntumber\",\n              disabled: true,\n              children: props.appointmenttime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"m-0 mb-2\",\n        children: \"Select another Time Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll align-items-center justify-content-around col-12\",\n        children: ApiDocTimefrom ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [ApiDocTimefrom.map((data, key) => data[2] == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `button-sm button-${timeindex == key ? 'pearl' : 'lightgreen'}  m-1`,\n            id: key,\n            value: data[0],\n            onClick: e => {\n              gettime_value(e);\n              settimeindex(key);\n            },\n            children: tConvert(data[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: true,\n            className: \"button-sm button-burntumber m-1\",\n            id: key,\n            value: data[0],\n            children: tConvert(data[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm done m-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/addicon.png\",\n              alt: \"displaying_image\",\n              className: \"mb-1 me-1\",\n              style: {\n                width: \"1.2rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this), \" Time Slot\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 rounded\",\n          children: \"Choose Doctor and Date to get Time Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-0 p-0\",\n        children: load ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 py-2 pb-2 m-auto text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"spinner-border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 py-2 pb-2 m-auto text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn px-5 button-burntumber\",\n              onClick: confirmmessage,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 py-2 pb-2 m-auto text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light px-5 border border-2\",\n              onClick: getCurrentTimeslots,\n              children: \"Set Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateAppointment, \"zNpFpf9CC+356p9jw6yR3h6bucA=\");\n_c = UpdateAppointment;\nexport { UpdateAppointment };\nvar _c;\n$RefreshReg$(_c, \"UpdateAppointment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","axios","DoctorsList","URL","Doctorapi","TodayDocs","Notiflix","customconfirm","UpdateAppointment","props","colorref","clinicID","localStorage","getItem","adminid","url","DocApi","Doclist","TodayDoctors","cliniclist","setcliniclist","searchinput","setsearchinput","searchlist","setsearchlist","displaysearchlist","setdisplaysearchlist","patientid","setpatientid","doctorid","setdoctorid","clinicid","setclinicid","time","settime","timeindex","settimeindex","load","setload","ApikeyDocTimeslots","setApikeyDocTimeslots","ApiDocTimefrom","setApiDocTimefrom","ClinicList","get","then","response","data","tConvert","toString","match","length","slice","join","dateref","docref","trigger","settrigger","getCurrentTimeslots","appointmentdoctorid","current","value","Timeslots","i","id","Number","push","month_timeslots","getCurrentTimefrom","timefrom","j","date","appointmentdate","time_from","booking_status","gettime_value","e","preventDefault","target","getTimeslots","getTimefrom","appointmentid","post","appointment_id","doctor_id","clinic_id","timeslot_id","patient_id","admin_id","fetchallAppointmentslist","closeappointmentform","fetchapi","Notify","success","message","alert","warning","confirmmessage","Confirm","show","patientname","HighlightOptions","k","undefined","Avaliablemessage","map","title","address","appointmenttime","key","width"],"sources":["C:/Users/Aartas-WebDesign/Desktop/ConnectApp_React/connect_app/FrontEnd/src/components/Appointments/UpdateAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n        let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const[load,setload]=useState()\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                // console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid))\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                            props.fetchallAppointmentslist()\r\n                            props.closeappointmentform()\r\n                            setload(false)\r\n                            props.fetchapi()\r\n                        Notiflix.Notify.success(response.data.message);\r\n\r\n                    } else {\r\n                        setload(false)\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                alert(e)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n                if(TodayDoctors[k][0]!==undefined){\r\n                    if (TodayDoctors[k][0] == response) {\r\n                        return 'charcoal'\r\n                    }\r\n                }\r\n           \r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n                if(TodayDoctors[k][0]!==undefined){\r\n                    if (TodayDoctors[k][0] == response) {\r\n                        return '(Aval today) '\r\n                    }\r\n                }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <section className='bg-seashell text-start rounded-2 shadow position-relative p-2'>\r\n            <h5 className=\"text-center\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" disabled={load==true?true:false} onClick={props.closeappointmentform} ></button>\r\n            <hr />\r\n            <div className=\"col-12\">\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <>\r\n                                <label key={i} className={`d-${clinicID==data.id?'block':'none'}`}><input type=\"checkbox\" className={`radio me-1 `} checked={clinicID==data.id? true : false} name={data.id} /> {data.title} {data.address}</label>\r\n                                <br /></>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 text-center ms-5\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0])?'pearl':HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0])?'Currently Avaliable':''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>{data[0]}.{data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto m-0 p-0\">\r\n                        <label className=\"\">Selected Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" ref={dateref} className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-lg-3 col-3\">\r\n                        <label>Selected Time</label>\r\n                        <div className=\"col-12\">\r\n                            <button className='button button-burntumber' disabled >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'pearl' : 'lightgreen'}  m-1`} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-burntumber m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {load ? (\r\n                                  <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                  <div class=\"spinner-border\" role=\"status\">\r\n                                      <span class=\"visually-hidden\">Loading...</span>\r\n                                  </div>\r\n                              </div>\r\n                    ):(\r\n                        <>\r\n                        <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <button className='btn px-5 button-burntumber' onClick={confirmmessage}>Done</button>\r\n                    </div>\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"btn btn-light px-5 border border-2\" onClick={getCurrentTimeslots}>Set Previous</button>\r\n                    </div>\r\n                    </>\r\n                    )\r\n                \r\n                    }\r\n               \r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}