{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aartas-WebDesign\\\\Desktop\\\\ConnectApp_React\\\\connect_app\\\\FrontEnd\\\\src\\\\components\\\\Appointments\\\\UpdateAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { DoctorsList, URL, Doctorapi } from '../../index';\nimport Notiflix from 'notiflix';\nimport '../../css/bootstrap.css';\nimport '../../css/appointment.css';\nimport { customconfirm } from '../features/notiflix/customconfirm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateAppointment = props => {\n  _s();\n  const colorref = useRef(null);\n  const url = useContext(URL);\n  const DocApi = useContext(Doctorapi);\n  const Doclist = useContext(DoctorsList);\n  const [cliniclist, setcliniclist] = useState([]);\n  const [searchinput, setsearchinput] = useState();\n  const [searchlist, setsearchlist] = useState([]);\n  const [displaysearchlist, setdisplaysearchlist] = useState('none');\n  const [patientid, setpatientid] = useState();\n  const [doctorid, setdoctorid] = useState();\n  const [clinicid, setclinicid] = useState();\n  const [time, settime] = useState();\n  const [timeindex, settimeindex] = useState(0);\n  const [ischecked, setischecked] = useState();\n  let adminid = localStorage.getItem('id');\n  function ClinicList() {\n    axios.get(`${url}/clinic/list`).then(response => {\n      setcliniclist(response.data.data);\n    });\n  }\n  useEffect(() => {\n    ClinicList();\n  }, []);\n  function tConvert(time) {\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n    if (time.length > 1) {\n      time = time.slice(1);\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\n      time[0] = +time[0] % 12 || 12;\n    }\n    return time.join('');\n  }\n  const gettime_value = e => {\n    e.preventDefault();\n    settime(e.target.value);\n  };\n  const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState();\n  const [ApiDocTimefrom, setApiDocTimefrom] = useState();\n  function getTimeslots(e) {\n    e.preventDefault();\n    setdoctorid(e.target.value);\n    let Timeslots = [];\n    setApikeyDocTimeslots([]);\n    for (let i = 0; i < DocApi.length; i++) {\n      if (DocApi[i].id === Number(e.target.value)) {\n        Timeslots.push(DocApi[i].month_timeslots);\n      }\n    }\n    setApikeyDocTimeslots(Timeslots);\n  }\n  function getTimefrom(e) {\n    e.preventDefault();\n    let timefrom = [];\n    for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\n      if (ApikeyDocTimeslots[0][j].date === e.target.value) {\n        timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status]);\n      }\n    }\n    setApiDocTimefrom(timefrom);\n  }\n  function resetform(e) {\n    e.preventDefault();\n    setsearchinput();\n    setpatientid();\n    setdoctorid();\n    setclinicid();\n    setischecked();\n  }\n  function UpdateAppointment(e) {\n    if (props.appointmentid && doctorid && clinicid && time && adminid) {\n      console.log(props.appointmentid, Number(doctorid), Number(clinicid), Number(time), Number(adminid), Number(props.patientid));\n      axios.post(`${url}/update/appointment`, {\n        appointment_id: props.appointmentid,\n        doctor_id: doctorid,\n        clinic_id: clinicid,\n        timeslot_id: time,\n        patient_id: props.patientid,\n        admin_id: adminid\n      }).then(response => {\n        if (response) {\n          Notiflix.Notify.success(response.data.message);\n          console.log(response);\n          resetform();\n        } else {\n          Notiflix.Notify.alert('Failed to Update');\n        }\n      });\n    } else {\n      Notiflix.Notify.warning('Please Fill all Detais');\n    }\n  }\n  const confirmmessage = e => {\n    e.preventDefault();\n    customconfirm();\n    Notiflix.Confirm.show(`Update Appointment Details`, `Do you surely want yo update ${props.patientname} Appointment Details`, 'Yes', 'No', () => {\n      UpdateAppointment();\n    }, () => {\n      return 0;\n    }, {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-seashell col-10 m-lg-auto position-relative rounded-5 p-2 border-1 shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center mt-2\",\n      children: [\"Update \", props.patientname, \" Appointment Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn-close closebtn position-absolute\",\n      \"aria-label\": \"Close\",\n      onClick: props.toggleappointmentform\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"col-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 form-control location bg-seashell  border-0\",\n        children: cliniclist.map(data => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"radio form me-1\",\n              checked: ischecked,\n              name: data.id,\n              onClick: e => {\n                setclinicid(e.target.name);\n                setischecked(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 40\n            }, this), \" \", data.title, \" \", data.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-0 m-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"col-10 form-control selectdoctor\",\n              onChange: getTimeslots,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                defaultValue: \"Select Doctor\",\n                children: \"Select Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), Doclist.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"text-charcoal\",\n                value: data[0],\n                children: [data[0], \".\", data[1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"\",\n            children: \"Select Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control selectdate\",\n              onChange: getTimefrom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"m-0 mb-2\",\n        children: \"Select Time Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll align-items-center justify-content-around col-12\",\n        children: ApiDocTimefrom ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [ApiDocTimefrom.map((data, key) => data[2] == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `button-sm button-${key = timeindex ? 'pearl' : 'lightgreen'} m-1`,\n            id: key,\n            value: data[0],\n            onClick: e => {\n              gettime_value(e);\n              settimeindex(key);\n            },\n            children: tConvert(data[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: true,\n            className: \"button-sm button-burntumber m-1\",\n            id: key,\n            value: data[0],\n            children: tConvert(data[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm done m-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/addicon.png\",\n              alt: \"displaying_image\",\n              className: \"mb-1 me-1\",\n              style: {\n                width: \"1.2rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), \" Time Slot\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 rounded\",\n          children: \"Choose Doctor and Date to get Time Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 py-2 pb-2 m-auto text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn button-burntumber\",\n          onClick: confirmmessage,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 pb-2 m-auto text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light px-5\",\n          onClick: resetform,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateAppointment, \"ZcIV+uXsRXFaTxGc0aXZicAbQF8=\");\n_c = UpdateAppointment;\nexport { UpdateAppointment };\nvar _c;\n$RefreshReg$(_c, \"UpdateAppointment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useContext","DoctorsList","URL","Doctorapi","Notiflix","customconfirm","UpdateAppointment","props","colorref","url","DocApi","Doclist","cliniclist","setcliniclist","searchinput","setsearchinput","searchlist","setsearchlist","displaysearchlist","setdisplaysearchlist","patientid","setpatientid","doctorid","setdoctorid","clinicid","setclinicid","time","settime","timeindex","settimeindex","ischecked","setischecked","adminid","localStorage","getItem","ClinicList","get","then","response","data","tConvert","toString","match","length","slice","join","gettime_value","e","preventDefault","target","value","ApikeyDocTimeslots","setApikeyDocTimeslots","ApiDocTimefrom","setApiDocTimefrom","getTimeslots","Timeslots","i","id","Number","push","month_timeslots","getTimefrom","timefrom","j","date","time_from","booking_status","resetform","appointmentid","console","log","post","appointment_id","doctor_id","clinic_id","timeslot_id","patient_id","admin_id","Notify","success","message","alert","warning","confirmmessage","Confirm","show","patientname","toggleappointmentform","map","name","title","address","key","width"],"sources":["C:/Users/Aartas-WebDesign/Desktop/ConnectApp_React/connect_app/FrontEnd/src/components/Appointments/UpdateAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect,useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DoctorsList, URL, Doctorapi } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/bootstrap.css';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState()\r\n    const [time, settime] = useState()\r\n    const[timeindex,settimeindex] =useState(0)\r\n    const[ischecked,setischecked] = useState()\r\n    let adminid = localStorage.getItem('id')\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n        \r\n    }\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n    function getTimeslots(e) {\r\n        e.preventDefault()\r\n        setdoctorid(e.target.value)\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n    function getTimefrom(e) {\r\n        e.preventDefault()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n       \r\n    }\r\n\r\n    function resetform(e) {\r\n        e.preventDefault()\r\n        setsearchinput()\r\n        setpatientid()\r\n        setdoctorid()\r\n        setclinicid()\r\n        setischecked()\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n\r\n            if (props.appointmentid && doctorid && clinicid && time && adminid) {\r\n                   console.log(props.appointmentid,Number(doctorid),Number(clinicid),Number(time),Number(adminid),Number(props.patientid))\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id:doctorid,\r\n                    clinic_id:clinicid,\r\n                    timeslot_id:time,\r\n                    patient_id :props.patientid,\r\n                    admin_id: adminid\r\n                }).then((response) => {\r\n                    if(response){\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        console.log(response)\r\n                        resetform() \r\n                    }else{\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                    }\r\n               \r\n                })\r\n            } else {\r\n                Notiflix.Notify.warning('Please Fill all Detais');\r\n            }\r\n           \r\n    }\r\n    const confirmmessage=(e)=>{\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want yo update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n            );\r\n    }\r\n    return (    \r\n        <section className='bg-seashell col-10 m-lg-auto position-relative rounded-5 p-2 border-1 shadow-lg '>\r\n            <h5 className=\"text-center mt-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.toggleappointmentform} ></button>\r\n            <hr />\r\n            <form className=\"col-12\">\r\n                {/* <label className=\"m-0 mb-2\">Name of the Patient </label>\r\n                <input type=\"text\" className=\"form-control selectpatient col-10 position-relative\" value={props.patientname}   /> */}\r\n\r\n                {/* <hr /> */}\r\n                <label>Select Location</label>\r\n                <div className=\"col-12 form-control location bg-seashell  border-0\" >\r\n                    {\r\n                        cliniclist.map((data) => (\r\n                            <>\r\n                                <label><input type=\"checkbox\" className=\"radio form me-1\" checked={ischecked} name={data.id} onClick={(e) => { setclinicid(e.target.name); setischecked(true);}} /> {data.title} {data.address}</label>\r\n                                <br /></>   \r\n                        ))\r\n                    }\r\n                </div>\r\n                {/* <hr /> */}\r\n                <div className=\"row p-0 m-0\">\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor\" onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor\" >Select Doctor</option>\r\n                                {\r\n                                    Doclist.map((data) => (\r\n                                        <option className='text-charcoal' value={data[0]}>{data[0]}.{data[1]}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"\">Select Date</label>\r\n                        <div className=\"col-12\"><input type=\"date\" className=\"form-control selectdate\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <p className=\"m-0 mb-2\">Select Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12\">\r\n                    {ApiDocTimefrom ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data,key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${key= timeindex ?'pearl':'lightgreen'} m-1`} id={key} value={data[0]} onClick={(e)=>{gettime_value(e);settimeindex(key)}}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-burntumber m-1\" id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded'>Choose Doctor and Date to get Time Slots</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                    {/* <button type=\"button\"  data-bs-toggle=\"modal\" data-bs-target={`#staticBackdrop${props.key}`} className=\"btn done px-5\" onClick={BookAppointment}> Done </button> */}\r\n                <button className='btn button-burntumber' onClick={confirmmessage} >Done</button>\r\n                </div>\r\n                <div className=\"col-6 pb-2 m-auto text-center\">\r\n                    <button className=\"btn btn-light px-5\" onClick={resetform}>Reset</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}