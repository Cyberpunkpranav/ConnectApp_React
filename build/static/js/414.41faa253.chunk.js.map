{"version":3,"file":"static/js/414.41faa253.chunk.js","mappings":"8VAQMA,EAAoB,SAACC,IACNC,EAAAA,EAAAA,QAAO,MAAxB,IACMC,EAAWC,aAAaC,QAAQ,YAClCC,EAAUF,aAAaC,QAAQ,MAC7BE,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,GAASF,EAAAA,EAAAA,YAAWG,EAAAA,IACpBC,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,IACrBC,GAAeN,EAAAA,EAAAA,YAAWO,EAAAA,IAChCC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAgCL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCT,EAAAA,EAAAA,UAASd,GAASwB,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3CE,EAAQD,EAAA,GACfE,GAD4BF,EAAA,IACJV,EAAAA,EAAAA,aAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA3BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkChB,EAAAA,EAAAA,YAAUiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAArCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkCpB,EAAAA,EAAAA,YAAUqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAC5CE,GADgBD,EAAA,GAAcA,EAAA,IACNrB,EAAAA,EAAAA,aAAUuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA3BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAGpBG,GAAoD1B,EAAAA,EAAAA,YAAU2B,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAAvDE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,GAA4C9B,EAAAA,EAAAA,YAAU+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAA/CE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAYxC,SAASG,EAASpB,GASd,OAPAA,EAAOA,EAAKqB,WAAWC,MAAM,6CAA+C,CAACtB,IAEpEuB,OAAS,KACdvB,EAAOA,EAAKwB,MAAM,IACb,IAAMxB,EAAK,GAAK,GAAK,OAAS,OACnCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAExBA,EAAKyB,KAAK,GACrB,EAdAC,EAAAA,EAAAA,YAAU,WAJNC,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,iBAAgBqD,MAAK,SAACC,GAClCxC,EAAcwC,EAASC,KAAKA,KAChC,GAIJ,GAAG,IAcH,IAAMC,GAAU7D,EAAAA,EAAAA,UACV8D,GAAS9D,EAAAA,EAAAA,UACf+D,GAA8BhD,EAAAA,EAAAA,WAAS,GAAMiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAAtCE,GAAOD,EAAA,GAAEE,GAAUF,EAAA,GAEQ,SAAAG,KAajC,OAbiCA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAlC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMI,IALAtD,EAAYxB,EAAM+E,qBAClBjB,EAAQkB,QAAQC,MAAQ,GACxBlB,EAAOiB,QAAQC,MAAQjF,EAAM+E,oBACzBN,EAAY,GAChB5B,EAAsB,IACb6B,EAAI,EAAGA,EAAIjE,EAAO4C,OAAQqB,IAC3BjE,EAAOiE,GAAGQ,KAAOC,OAAOnF,EAAM+E,sBAC9BN,EAAUW,KAAK3E,EAAOiE,GAAGW,iBAGjCxC,EAAsB4B,GACtBN,IAAW,GAAK,wBAAAS,EAAAU,OAAA,GAAAd,EAAA,MACnBe,MAAA,KAAAC,UAAA,CACgC,SAAAC,KAUhC,OAVgCA,IAAApB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAmB,IAAA,IAAAC,EAAAC,EAAA,OAAAtB,EAAAA,EAAAA,KAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAGI,IAFA7B,IACI0C,EAAW,GACNC,EAAI,EAAGA,EAAIhD,EAAmB,GAAGS,OAAQuC,IAC1ChD,EAAmB,GAAGgD,GAAGE,OAAS9F,EAAM+F,iBACxCJ,EAASP,KAAK,CAACxC,EAAmB,GAAGgD,GAAGV,GAAItC,EAAmB,GAAGgD,GAAGI,UAAWpD,EAAmB,GAAGgD,GAAGK,iBAGjHhD,EAAkB0C,GAClBxB,IAAW,GAAM,wBAAA0B,EAAAP,OAAA,GAAAI,EAAA,MACpBH,MAAA,KAAAC,UAAA,EAGDhC,EAAAA,EAAAA,YAAU,YA7BmC,WAEXY,GAAAmB,MAAC,KAADC,UAAA,CA4B9BU,GACApC,EAAQkB,QAAQC,MAAQjF,EAAM+F,eAClC,GAAG,CAAC,KAEJvC,EAAAA,EAAAA,YAAU,YAnBT,WACgCiC,GAAAF,MAAC,KAADC,UAAA,CAmB7BW,EACJ,GAAG,CAACjC,KAQuB,SAAAkC,KAW1B,OAX0BA,IAAA/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA3B,SAAA8B,EAA4BC,GAAC,IAAA7B,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAKzB,IAJAtD,EAAY8E,EAAEE,OAAOvB,OACrBnB,EAAQkB,QAAQC,MAAQ,GACpBR,EAAY,GAChB5B,EAAsB,IACb6B,EAAI,EAAGA,EAAIjE,EAAO4C,OAAQqB,IAC3BjE,EAAOiE,GAAGQ,KAAOC,OAAOmB,EAAEE,OAAOvB,QACjCR,EAAUW,KAAK3E,EAAOiE,GAAGW,iBAGjCxC,EAAsB4B,GAAU,wBAAA8B,EAAAjB,OAAA,GAAAe,EAAA,MACnCd,MAAA,KAAAC,UAAA,CAGyB,SAAAiB,KAUzB,OAVyBA,IAAApC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAmC,EAA2BJ,GAAC,IAAAX,EAAAC,EAAA,OAAAtB,EAAAA,EAAAA,KAAAK,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAGxB,IAFA7B,EAAkB,IACd0C,EAAW,GACNC,EAAI,EAAGA,EAAIhD,EAAmB,GAAGS,OAAQuC,IAC1ChD,EAAmB,GAAGgD,GAAGE,OAASQ,EAAEE,OAAOvB,OAC3CU,EAASP,KAAK,CAACxC,EAAmB,GAAGgD,GAAGV,GAAItC,EAAmB,GAAGgD,GAAGI,UAAWpD,EAAmB,GAAGgD,GAAGK,iBAGjHhD,EAAkB0C,GAAS,wBAAAgB,EAAArB,OAAA,GAAAoB,EAAA,MAE9BnB,MAAA,KAAAC,UAAA,CAED,SAASzF,GAAkBuG,GACvB,GAAItG,EAAM4G,eAAiBrF,GAAYI,GAAYG,GAAQzB,GAA8B,MAAnBL,EAAM6G,WAAwC,GAAnB7G,EAAM6G,UACnG,IACIpE,GAAQ,GACRgB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,uBAAuB,CACpCwG,eAAgB9G,EAAM4G,cACtBG,UAAWxF,EACXyF,UAAWrF,EACXsF,YAAanF,EACboF,WAAYlH,EAAM6G,UAClBM,SAAU9G,IAEXsD,MAAK,SAACC,GACDA,GACI5D,EAAM+E,qBAGN/E,EAAMoH,2BAFNpH,EAAMqH,WAKVC,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtC9E,GAAQ,KAER6E,IAAAA,OAAAA,MAAsB,oBACtB7E,GAAQ,GAGhB,GACJ,CAAE,MAAO6D,GACLgB,IAAAA,OAAAA,MAAsBhB,EAAEiB,SACxB9E,GAAQ,EACZ,MAEA6E,IAAAA,OAAAA,QAAwB,0BACxB7E,GAAQ,EAEhB,CAEA,IAmBM+E,GAAmB,SAAC5D,GACtB,IAAK,IAAI6D,EAAI,EAAGA,EAAI5G,EAAawC,OAAQoE,IACrC,QAA2BC,IAAvB7G,EAAa4G,GAAG,IACZ5G,EAAa4G,GAAG,IAAM7D,EACtB,MAAO,UAMvB,EACM+D,GAAmB,SAAC/D,GACtB,IAAK,IAAI6D,EAAI,EAAGA,EAAI5G,EAAawC,OAAQoE,IACrC,QAA2BC,IAAvB7G,EAAa4G,GAAG,IACZ5G,EAAa4G,GAAG,IAAM7D,EACtB,MAAO,eAMvB,EAuCA,OACIgE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBC,SAAA,CAAC,UAAQ9H,EAAM+H,YAAY,2BAC1DC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAU,uCAAuCK,SAAkB,GAAR1F,EAA6B,aAAW,QAAQ2F,QAASnI,EAAMoI,wBAChJJ,EAAAA,EAAAA,KAAA,MAAIH,UAAU,aACdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0CAAyCC,SAEhD3G,EAAWkH,KAAI,SAACxE,EAAMa,GAAC,OACnBsD,EAAAA,EAAAA,KAAA,OAAaH,UAAS,KAAAnE,OAAOxD,GAAY2D,EAAKqB,GAAK,QAAU,OAAM,mCAAkC4C,UACjGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EACxCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBC,UAClCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAYS,IAA8B,uBAAwBC,MAAO,CAAEC,MAAO,eAErGZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAA0CU,MAAO,CAAEE,cAAe,OAAQX,SAAA,CACpFjE,EAAK6E,MAAM,IAAE7E,EAAK8E,eANrBjE,EASJ,OAKlBkD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACpCE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,UAAUU,MAAO,CAAEE,cAAe,OAAQX,SAAC,qBAC5DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,SAAQC,UACnBF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,yEAAyEe,IAAK7E,EAAQ8E,SA7K/H,SAG0BC,GAAA,OAAA1C,GAAAb,MAAC,KAADC,UAAA,EA0K4HsC,SAAA,EAC3HE,EAAAA,EAAAA,KAAA,UAAQe,aAAa,4BAA2BjB,SAAE,kBAE9CjH,EACIF,EAAQ0H,KAAI,SAACxE,EAAMa,GAAC,OAChBkD,EAAAA,EAAAA,MAAA,UAAQC,UAAS,SAAAnE,OAAW8D,GAAiB3D,EAAK,IAAM,QAAU2D,GAAiB3D,EAAK,IAAG,QAAAH,OAAO8D,GAAiB3D,EAAK,IAAM2D,GAAiB3D,EAAK,IAAM,YAAcmF,KAAMxB,GAAiB3D,EAAK,IAAM,sBAAwB,GAAIoF,SAAUpF,EAAK,KAAO7D,EAAM+E,oBAAoCE,MAAOpB,EAAK,GAAGiE,SAAA,CAAC,OAAKjE,EAAK,GAAG,IAAE8D,GAAiB9D,EAAK,MAAa,KAG5WmE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,qBASzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EACzCE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,UAAUU,MAAO,CAAEE,cAAe,OAAQX,SAAC,mBAC5DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gCAA+BC,UAACE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOW,IAAK9E,EAAS+D,UAAU,qDAAqDgB,SAlLlK,SAGyBK,GAAA,OAAAzC,GAAAlB,MAAC,KAADC,UAAA,UAkLVoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,0BAAyBC,SAAC,mBAC3CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BC,UACxCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,iEAAiEU,MAAO,CAAEE,cAAe,OAAQX,SAAG9H,EAAMmJ,2BAKxInB,EAAAA,EAAAA,KAAA,KAAGH,UAAU,6BAA6BU,MAAO,CAAEE,cAAe,OAAQX,SAAC,8BAC3EE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,+DAA8DC,SACxE9E,GAA4C,IAA1BA,EAAeK,QAC9BuE,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,CAEQ9E,EAAeqF,KAAI,SAACxE,EAAMwF,GAAG,OACd,GAAXxF,EAAK,IACDmE,EAAAA,EAAAA,KAAA,UAAQH,UAAS,oBAAAnE,OAAsBxB,GAAamH,EAAM,WAAa,mBAAkB,oCAAoCd,MAAO,CAAEE,cAAe,OAASvD,GAAImE,EAAKpE,MAAOpB,EAAK,GAAIsE,QAAS,SAAC7B,IArN/M,SAACA,GACnBA,EAAEgD,iBACFvH,EAAQuE,EAAEE,OAAOvB,MACrB,CAkN6OsE,CAAcjD,GAAInE,EAAakH,EAAK,EAAEvB,SAAE5E,EAASW,EAAK,OAE/PmE,EAAAA,EAAAA,KAAA,UAAQE,UAAQ,EAACL,UAAU,sEAAsEU,MAAO,CAAEE,cAAe,OAASvD,GAAImE,EAAKpE,MAAOpB,EAAK,GAAGiE,SAAE5E,EAASW,EAAK,KAC7K,KAGT+D,EAAAA,EAAAA,MAAA,UAAQC,UAAU,6BAA4BC,SAAA,EAC1CE,EAAAA,EAAAA,KAAA,OAAKM,IAAI,sBAAsBkB,IAAI,mBAAmB3B,UAAU,YAAYU,MAAO,CAAEC,MAAO,YAAc,oBAIlHR,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kDAAiDC,SAAC,+BAIzEE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaC,SAEpBtF,GACIwF,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UAC/CE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACrCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAItCF,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACIE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAA0BC,UACrCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,sBAAsBM,QA1KjD,SAAC7B,GACpBA,EAAEgD,kBACFK,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,6BAAD,gCAAA5D,OAEe1D,EAAM+H,YAAW,wBACjD,MACA,MACA,WACIhI,IAEJ,IACA,WACI,OAAO,CACX,GACA,CACA,EAER,EAwJgG+H,SAAC,cAGrEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAA0BC,UACrCE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAU,sBAAsBK,SAAkB,GAAR1F,EAA6B,aAAW,QAAQ2F,QAASnI,EAAMoI,qBAAqBN,SAAE,uBAY1L,EClVM8B,G,QAA0B,SAAC5J,GAE7B,IAAMM,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBqJ,GAAatJ,EAAAA,EAAAA,YAAWuJ,GACxBvI,GAAWhB,EAAAA,EAAAA,YAAWwJ,GAGtB5I,IAFeZ,EAAAA,EAAAA,YAAWO,EAAAA,KAChBP,EAAAA,EAAAA,YAAWK,EAAAA,KACRL,EAAAA,EAAAA,YAAWyJ,EAAAA,KACxBC,GAAU1J,EAAAA,EAAAA,YAAW2J,EAAAA,IACrB7J,EAAUF,aAAaC,QAAQ,MAC/BF,EAAWC,aAAaC,QAAQ,YAEtCW,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCoJ,EAAWlJ,EAAA,GAAEmJ,EAAcnJ,EAAA,GAClCI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCgJ,EAAU/I,EAAA,GAAEgJ,EAAahJ,EAAA,GAChCG,GAAkDT,EAAAA,EAAAA,UAAS,QAAOU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3D8I,EAAiB7I,EAAA,GAAE8I,EAAoB9I,EAAA,GAC9CE,GAAkCZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAArCiF,EAAShF,EAAA,GAAE4I,EAAY5I,EAAA,GAC9BG,GAAgChB,EAAAA,EAAAA,UAASd,GAAS+B,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA3CL,EAAQM,EAAA,GACfG,GAD4BH,EAAA,IACJjB,EAAAA,EAAAA,aAAUqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAClCE,GADWD,EAAA,GAASA,EAAA,IACgBrB,EAAAA,EAAAA,WAAS,IAAMuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA5CoI,EAAUnI,EAAA,GAAEoI,EAAapI,EAAA,GAChCG,GAAwB1B,EAAAA,EAAAA,YAAU2B,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA3BF,EAAIG,EAAA,GAAEF,EAAOE,EAAA,GAkBQ,SAAAiI,IAa3B,OAb2BA,GAAAvG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAsG,EAA6BvE,GAAC,OAAAhC,EAAAA,EAAAA,KAAAK,MAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,OAEI,OAD9B6F,GAAc,GACdP,EAAe9D,EAAEE,OAAOvB,OAAM6F,EAAAhG,KAAA,EACxBrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,yBAAAoD,OAAwByG,EAAW,sBAAqBxG,MAAK,SAACC,GAChF0G,EAAc1G,EAASC,KAAKA,KAAKkH,eACjCJ,GAAc,EAClB,IAAE,OAEER,GAAeA,EAAY9G,OAAS,EACpCmH,EAAqB,SAErBA,EAAqB,QACxB,wBAAAM,EAAAxF,OAAA,GAAAuF,EAAA,MACJtF,MAAA,KAAAC,UAAA,CA6BD,OACIoC,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,2BAA0BC,SAAA,CAAC,0BAAsBE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,uCAAsCC,SArD7H,SAAkBhG,GAOd,OANAA,EAAOA,EAAKqB,WAAWC,MAAM,6CAA+C,CAACtB,IACpEuB,OAAS,KACdvB,EAAOA,EAAKwB,MAAM,IACb,IAAMxB,EAAK,GAAK,GAAK,OAAS,OACnCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAExBA,EAAKyB,KAAK,GACrB,CA6C+HL,CAASlD,EAAMgL,oBACtIhD,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAU,kDAAkDK,SAAkB,GAAR1F,EAA6B,aAAW,QAAQ2F,QAAS,SAAC7B,GAAQtG,EAAMiL,yBAA0B,KAC9LjD,EAAAA,EAAAA,KAAA,MAAIH,UAAU,kBACdG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iFAAgFC,SAEvF3G,EAAWkH,KAAI,SAACxE,EAAMa,GAAC,OACnBkD,EAAAA,EAAAA,MAAA,SAAOC,UAAS,KAAAnE,OAAOxD,GAAY2D,EAAKqB,GAAK,QAAU,QAAS4C,SAAA,EAC5DE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,uBAAwBT,UAAU,wBAAuB,IAAEhE,EAAK6E,MAAM,IAAE7E,EAAK8E,UAAgB,OAIhJf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EAClBE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOiD,YAAY,sCAAsCrD,UAAU,iCAAiC5C,MAAOkF,GAA4B,GAAItB,SAAU,SAACvC,IA1DjL,SAC2BwC,GAAA8B,EAAArF,MAAC,KAADC,UAAA,CAyD8J2F,CAAc7E,EAAG,KAC3L0B,EAAAA,EAAAA,KAAA,OAAKH,UAAS,6BAAAnE,OAA+B6G,EAAiB,yCAAyChC,MAAO,CAAE6C,OAAQ,GAAItD,SAEpH4C,GACI1C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oEAAmEC,SAAC,qBAEpEJ,IAAf2C,GAAiD,GAArBA,EAAWhH,QACnC2E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wDAAuDC,SAAC,uBAEvEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uCAAsCC,SAE7CuC,EAAWhC,KAAI,SAACxE,EAAMa,GAAC,OACnBkD,EAAAA,EAAAA,MAAA,OAAKW,MAAO,CAAE8C,OAAQ,WAAaxD,UAAS,sFAAyFmB,KAAMnF,EAAKqB,GAAID,MAAOpB,EAAKyH,UAAWnD,QAAS,YAvD9M,SAACtE,GACfuG,EAAevG,EAAKyH,WACpBb,EAAa5G,EAAKqB,IAClBsF,EAAqB,OACzB,CAmDwOe,CAAU1H,EAAM,EAAEiE,SAAA,CAAEjE,EAAKyH,UAAU,KAACtD,EAAAA,EAAAA,KAAA,QAAMH,UAAU,0BAAyBC,SAAEjE,EAAK2H,iBAA0B,YAW1UxD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,EAC7DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sDAAqDC,SAAA,CAAC,OAAK+B,MAC1E7B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wCAAuCC,SAlGlD,SAAChC,GACrB,GAAIA,EAEA,OADAA,EAAOA,EAAK2F,MAAM,KAAKC,UAAUnI,KAAK,IAG9C,CA6F6EoI,CAAgB1B,aAOjFzH,GACIwF,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UAC/CE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACrCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAItCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gDAA+CC,UAC1DE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,yBAAyBM,QA5E/D,WACI1F,GAAQ,GACJoE,GAAatF,GAAYI,GAAY3B,EAAM4L,eAAe,IAAMvL,EAChEoD,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,oBAAoB,CACjC4G,WAAYL,EACZE,UAAWxF,EACXyF,UAAWrF,EACXsF,YAAajH,EAAM4L,eAAe,GAClCzE,SAAU9G,IACXsD,MAAK,SAACC,GACL0D,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtC9E,GAAQ,GACRzC,EAAMiL,0BACNjL,EAAMqH,UACV,KAEAC,IAAAA,OAAAA,QAAwB,0BACxB7E,GAAQ,GAEhB,EAyDwFqF,SAAC,eAU7F,GC/IM+D,EAAwB,SAAC7L,GAC3B,IAAMM,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjByJ,GAAU1J,EAAAA,EAAAA,YAAW2J,EAAAA,IACrBL,GAAatJ,EAAAA,EAAAA,YAAWuJ,GACxBvI,GAAWhB,EAAAA,EAAAA,YAAWwJ,GAEtB5I,IADUZ,EAAAA,EAAAA,YAAWK,EAAAA,KACRL,EAAAA,EAAAA,YAAWyJ,EAAAA,KACxB7C,EAAWhH,aAAaC,QAAQ,MAChCF,EAAWC,aAAaC,QAAQ,YACtCW,GAAkDC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAC5DM,GADwBJ,EAAA,GAAsBA,EAAA,IAChBD,EAAAA,EAAAA,aAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GACxCI,GADcH,EAAA,GAAYA,EAAA,IACMN,EAAAA,EAAAA,aAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCqK,EAAQpK,EAAA,GAAEqK,EAAWrK,EAAA,GAC5BE,GAA4BZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA/BoK,EAAMnK,EAAA,GAAEoK,EAASpK,EAAA,GACxBG,GAAgChB,EAAAA,EAAAA,UAASd,GAAS+B,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA3CL,EAAQM,EAAA,GAAaA,EAAA,GAAsB,SAEnC4J,IAAqB,OAAAK,EAAA3G,MAAC,KAADC,UAAA,UAAA0G,IAwBnC,OAxBmCA,GAAA7H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAApC,SAAAsG,IAAA,OAAAvG,EAAAA,EAAAA,KAAAK,MAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,YAEQvD,GAAY0I,GAAW6B,GAAYE,GAAUrK,GAAYwF,GAAQ,CAAA2D,EAAAhG,KAAA,QAI/D,OAHFwC,IAAAA,QAAAA,MAAuB,CACnB6E,gBAAiB,yBACjBC,SAAU,YACZtB,EAAAhG,KAAA,EACIrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,yBAAyB,CAC5CyG,UAAWxF,EACXuE,KAAMmE,EACNjE,UAAW8F,EACXO,QAASL,EACThF,UAAWrF,EACXwF,SAAUA,IACXxD,MAAK,SAACC,GACL0D,IAAAA,QAAAA,SACAtH,EAAMsM,qBACNtM,EAAMqH,WACNC,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QAC1C,IAAE,OAAAuD,EAAAhG,KAAA,eAEFwC,IAAAA,OAAAA,QAAwB,0BAAyB,wBAAAwD,EAAAxF,OAAA,GAAAuF,EAAA,MAGxDtF,MAAA,KAAAC,UAAA,CAyBD,OAEIoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EACxCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,mBAAkBC,SAAC,yBACjCE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAU,uCAAuC,aAAW,QAAQM,QAASnI,EAAMsM,sBACzGtE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,aACdG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6BAA4BC,SAEnC3G,EAAWkH,KAAI,SAACxE,EAAMa,GAAC,OACnBkD,EAAAA,EAAAA,MAAA,SAAOC,UAAS,KAAAnE,OAAOxD,GAAY2D,EAAKqB,GAAK,QAAU,OAAM,cAAa4C,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,yBAA2BzE,EAAK6E,MAAM,IAAE7E,EAAK8E,UAAgB,OAKvLf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACjDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUC,UACrBE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,mCAAkCC,SAAE+B,OAE1D7B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUC,UACrBE,EAAAA,EAAAA,KAAA,OAAKC,KAAK,OAAOC,UAAQ,EAACL,UAAU,uDAAsDC,SA1BlF,SAAChC,GACrB,GAAIA,EAEA,OADAA,EAAOA,EAAK2F,MAAM,KAAKC,UAAUnI,KAAK,IAG9C,CAqB6GoI,CAAgB1B,WAGrHrC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCC,SAAA,EACpDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UAClBE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOJ,UAAU,2CAA2C5C,MAAO6G,GAAsB,GAAIjD,SAAU,SAACvC,GAAQyF,EAAYzF,EAAEE,OAAOvB,MAAO,OAE5J+C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUC,SAAC,OAC1BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UAClBE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOJ,UAAU,2CAA2C5C,MAAO+G,GAAkB,GAAInD,SAAU,SAACvC,GAAQ2F,EAAU3F,EAAEE,OAAOvB,MAAO,UAI1J+C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UAC/CE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,8BAA8BM,QAzDrC,YACnBwB,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,qBAAD,oDAAA5D,OAEmCmG,GACpD,MACA,MACA,WACIgC,GACJ,IACA,WACI,OAAO,CACX,GACA,CACA,EAER,EAyCoF/D,SAAE,eAI1F,ECvGMyE,EAAkB,SAACvM,GACvB,IAAMM,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBH,EAAUF,aAAaC,QAAQ,MAC/BoM,GAASjM,EAAAA,EAAAA,YAAWkM,EAAAA,IAC1B1L,GAA8BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC2L,EAAOzL,EAAA,GAAE0L,EAAU1L,EAAA,GAC1BI,GAAoCL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCuL,EAAUtL,EAAA,GAAEuL,EAAavL,EAAA,GAChCG,GAAoCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvCqL,EAAUpL,EAAA,GAAEqL,EAAarL,EAAA,GAChCE,GAAgDZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAnDoL,EAAgBnL,EAAA,GAAEoL,EAAmBpL,EAAA,GAC5CG,GAAoChB,EAAAA,EAAAA,UAAS,GAAEiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAxCkL,EAAUjL,EAAA,GAAEkL,EAAalL,EAAA,GAChCG,GAAkCpB,EAAAA,EAAAA,UAAS,QAAOqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA3CgL,EAAS/K,EAAA,GAAEgL,EAAYhL,EAAA,GAC9BC,GAAsCtB,EAAAA,EAAAA,UAAS,SAAQuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAhDgL,EAAW/K,EAAA,GAAEgL,EAAchL,EAAA,GAOlC,SAASiL,EAAUd,GACjB,IAAIe,EACJ,IAAK,IAAIC,KAAKlB,EACRA,EAAOkB,GAAGxI,IAAMwH,IAClBe,EAAIjB,EAAOkB,GAAGC,MAGlB,OAAOF,CACT,CACwB,SAAAG,IAwBvB,OAxBuBA,GAAAvJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAsG,IAAA,OAAAvG,EAAAA,EAAAA,KAAAK,MAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,OACqB,GAAnBiI,GAAc,GAAKjC,EAAAjG,KAAA,IAEb6H,GAAWE,GAAc5M,EAAM4G,eAAiB5G,EAAM6G,WAAS,CAAAiE,EAAAhG,KAAA,eAAAgG,EAAAhG,KAAA,EAC3DrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,gBAAgB,CACrCuN,UAAWnB,EACXzH,MAAO2H,EACP9F,eAAgB9G,EAAM4G,cACtBM,WAAYlH,EAAM6G,YACjBlD,MAAK,SAACC,GACPkK,IACA9N,EAAM+N,qBAAqB/N,EAAM4G,eACjCU,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SA1B5CsF,IACAF,IACAqB,IA0BMjB,GAAc,EAChB,IAAE,OAAAjC,EAAAhG,KAAA,eAEFwC,IAAAA,OAAAA,QAAwB,2BACxByF,GAAc,GAAM,OAAAjC,EAAAhG,KAAA,iBAAAgG,EAAAjG,KAAA,GAAAiG,EAAAmD,GAAAnD,EAAA,SAGtBxD,IAAAA,OAAAA,MAAsBwD,EAAAmD,GAAE1G,SACxBwF,GAAc,GAAM,yBAAAjC,EAAAxF,OAAA,GAAAuF,EAAA,oBAEvBtF,MAAA,KAAAC,UAAA,CAEyB,SAAA0I,IAoBzB,OApByBA,GAAA7J,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAC,EAA2BkI,EAASyB,GAAkB,OAAA7J,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,IAE9C6H,GAAWM,GAAoBmB,GAAsBnO,EAAM4G,eAAiB5G,EAAM6G,WAAS,CAAAjC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACvFrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,gBAAgB,CACrCuN,UAAWnB,EACXzH,MAAO+H,EACPlG,eAAgB9G,EAAM4G,cACtBM,WAAYlH,EAAM6G,UAClBuH,OAAQD,IACPxK,MAAK,SAACC,GACP5D,EAAM+N,qBAAqB/N,EAAM4G,eACjCoH,IACA1G,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QACxC,IAAE,OAAA3C,EAAAE,KAAA,eAEFwC,IAAAA,OAAAA,QAAwB,2BAA0B,OAAA1C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAqJ,GAAArJ,EAAA,SAGpD0C,IAAAA,OAAAA,MAAsB1C,EAAAqJ,GAAE1G,SAAQ,yBAAA3C,EAAAU,OAAA,GAAAd,EAAA,kBAEnC0J,EAAA3I,MAAA,KAAAC,UAAA,CACyB,SAAA6I,IAgBzB,OAhByBA,GAAAhK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAmB,EAA2BgH,GAAO,OAAApI,EAAAA,EAAAA,KAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,WAC5B4H,EAAQ,CAAD7G,EAAAf,KAAA,eAAAe,EAAAf,KAAA,EACHrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,kBAAkB,CACvC4E,GAAIwH,IACH/I,MAAK,SAACC,GACgB,KAAnBA,EAAS0K,OACXhH,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SAEtCD,IAAAA,OAAAA,MAAsB,wBAExBtH,EAAM+N,qBAAqB/N,EAAM4G,cACnC,IAAE,OAAAf,EAAAf,KAAA,eAEFwC,IAAAA,OAAAA,MAAsB,kCAAiC,wBAAAzB,EAAAP,OAAA,GAAAI,EAAA,KAG1D2I,EAAA9I,MAAA,KAAAC,UAAA,CAaD,SAASwI,IACY,QAAfV,IACFC,EAAe,SACfF,EAAa,QACbF,IAEJ,CAAC,SACcW,IAAY,OAAAS,EAAAhJ,MAAC,KAADC,UAAA,UAAA+I,IAoB1B,OApB0BA,GAAAlK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA3B,SAAA8B,IAAA,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAOQ,OAPRyB,EAAA1B,KAAA,EAEM2J,EAAAA,QAAAA,OAAe,+BAAgC,CAC7CrC,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WACjBnI,EAAAzB,KAAA,EACIrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,8BAA8B,CACnDwG,eAAgB9G,EAAM4G,cACtB0H,OAAQ,EACRnH,SAAU9G,IACTsD,MAAK,SAACC,GACP5D,EAAM2O,kBACNH,EAAAA,QAAAA,QACF,IAAE,OAAAjI,EAAAzB,KAAA,eAAAyB,EAAA1B,KAAA,EAAA0B,EAAA0H,GAAA1H,EAAA,SAEFe,IAAAA,OAAAA,QAAwBf,EAAA0H,GAAE1G,SAAQ,wBAAAhB,EAAAjB,OAAA,GAAAe,EAAA,mBAGvCd,MAAA,KAAAC,UAAA,CACD,OACEoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wHAAuHC,SAAA,EACpIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,CAAE9H,EAAM+H,YAAY,cAC/DC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,yDAAyDK,WAAUlI,EAAM8M,WAA2B3E,QAASnI,EAAM4O,eACrI5G,EAAAA,EAAAA,KAAA,UAAQH,UAAU,wDAAwDM,QA7C9E,WACEnI,EAAM+N,qBAAqB/N,EAAM4G,eACjCoH,GACF,EA0C+FlG,UAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,sBAAuBT,UAAU,YAAYU,MAAO,CAAEC,MAAO,iBAG1LxI,EAAM8M,YACJ9E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACvCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,mBAII,GAAtC9H,EAAM6O,sBAAsBxL,QAC1B2E,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAtB,UACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uDAAsDC,UACnEE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,4CAA2CC,SAAC,wBAI9D9H,EAAM6O,sBAAsBxG,KAAI,SAACxE,EAAMa,GAAC,OACtCsD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAS,6CAA+CC,SAAA,EAC3DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UACpBE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,oEAAoE5C,MAAOpB,EAAKqB,GAAKrB,EAAKqB,GAAK,GAAG4C,UAClHE,EAAAA,EAAAA,KAAA,UAAQ/C,MAAOpB,EAAKqB,GAAG4C,SAAEjE,EAAKiL,MAAMpG,aAGxCV,EAAAA,EAAAA,KAAA,OAAKH,UAAS,uBAAAnE,OAAyBgB,GAAKwI,EAAaI,EAAc,SAAUxF,UAC/EE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,6CAA6CK,UAAQ,EAACjD,MAAOpB,EAAKoB,UAGnFP,GAAKwI,GACHlF,EAAAA,EAAAA,KAAA,OAAKH,UAAS,uBAAAnE,OAAyBgB,GAAKwI,EAAaE,EAAY,QAAStF,UAC5EE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,6CAA6CgB,SAAU,SAACvC,GAAC,OAAK2G,EAAoB3G,EAAEE,OAAOvB,MAAM,OAEjH+C,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,KAGPpB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,SAE1BjE,EAAKiL,MAAM5J,IACT8C,EAAAA,EAAAA,KAAA,KAAGH,UAAU,uDAAsDC,SAAE0F,EAAU3J,EAAKiL,MAAM5J,OAE1F8C,EAAAA,EAAAA,KAAA,KAAGH,UAAU,8CAA6CC,SAAC,YAKjEE,EAAAA,EAAAA,KAAA,OAAKH,UAAS,WAAAnE,OAAagB,GAAKwI,EAAaI,EAAc,SAAUxF,UACnEE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,gCAAgC5C,MAAOpB,EAAKqB,GAAIiD,QAAS,WAtF1E,QAAbiF,IACFC,EAAa,SACbE,EAAe,QACfN,KAmFkHE,EAAczI,EAAG,EAAEoD,SAAC,WAGxHpD,GAAKwI,GACHlF,EAAAA,EAAAA,KAAA,OAAKH,UAAS,WAAAnE,OAAagB,GAAKwI,EAAaE,EAAY,QAAStF,UAChEE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,gCAAgCM,QAAS,YAzIhF,SAEyBW,EAAAI,GAAAgF,EAAA3I,MAAC,KAADC,UAAA,CAuI+DuJ,CAAYlL,EAAKiL,MAAM5J,GAAIrB,EAAKqB,GAAI,EAAE4C,SAAC,YAEzGE,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,KAEPpB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,UAC5BE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,cAAaC,UAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,qBAAsBT,UAAU,YAAYU,MAAO,CAAEC,MAAO,UAAYL,QAAS,kBAxHrK,SACyB6G,GAAA,OAAAX,EAAA9I,MAAC,KAADC,UAAA,CAuHkJyJ,CAAYpL,EAAKqB,GAAG,YAG9K,KAOd8C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBC,SAEjCgF,GACE9E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACvCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAIlCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,oDAAoD5C,MAAOyH,GAAoB,GAAI7D,SAAU,SAACvC,GAAQqG,EAAWrG,EAAEE,OAAOvB,MAAO,EAAE6C,SAAA,EACnJE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBAEN0E,EAAOnE,KAAI,SAACxE,GAAI,OACdmE,EAAAA,EAAAA,KAAA,UAAQ/C,MAAOpB,EAAKqB,GAAG4C,SAAEjE,EAAK6E,OAAe,UAKrDV,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UACpBE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,6GAA6G5C,MAAO2H,GAA0B,GAAI/D,SAAU,SAACvC,GAAQuG,EAAcvG,EAAEE,OAAOvB,MAAO,OAEtN+C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBC,SAE3B4E,GACE1E,EAAAA,EAAAA,KAAA,KAAGH,UAAU,oCAAmCC,SAAE0F,EAAUd,MAE5D1E,EAAAA,EAAAA,KAAA,KAAGH,UAAU,oCAAmCC,SAAC,YAIvDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,SAElBgF,GACE9E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACvCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAIlCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,6BAA6BM,QA1NhE,WACuB,OAAAyF,EAAArI,MAAC,KAADC,UAAA,EAyN4DsC,SAAC,WAKzEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,UAC9BE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,eAAeU,MAAO,CAAC2G,QAAQ,KAAKpH,UAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,qBAAsBT,UAAU,YAAYU,MAAO,CAAEC,MAAO,sBAS9JR,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6BAA4BC,UACzCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,iCAAiCM,QAASnI,EAAM4O,YAAY9G,SAAC,aAKvF,E,8BCzQMqH,EAAiB,SAACnP,IACHC,EAAAA,EAAAA,QAAO,OACLM,EAAAA,EAAAA,YAAWyJ,EAAAA,IAD9B,IAEM1J,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBG,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,IACrBV,EAAWC,aAAaC,QAAQ,YAChCgP,GAAenP,EAAAA,EAAAA,QAAO,MACtBoP,GAAapP,EAAAA,EAAAA,QAAO,MAG1Bc,IAFsBd,EAAAA,EAAAA,QAAO,OACZA,EAAAA,EAAAA,QAAO,OACce,EAAAA,EAAAA,aAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAChDM,GADkBJ,EAAA,GAAgBA,EAAA,IACFD,EAAAA,EAAAA,aAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAQD,EAAA,GACfG,GAD4BH,EAAA,IACQN,EAAAA,EAAAA,aAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3B6N,GAAF5N,EAAA,GAAeA,EAAA,IAChCE,GAAsCZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAChDI,GADkBH,EAAA,GAAgBA,EAAA,IACFb,EAAAA,EAAAA,UAASd,IAAS+B,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAClDI,GADeH,EAAA,GAAaA,EAAA,IACMjB,EAAAA,EAAAA,aAAUqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAC5CE,GADgBD,EAAA,GAAcA,EAAA,IACVrB,EAAAA,EAAAA,UAAS,IAAEuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAC/BI,GADSH,EAAA,GAAOA,EAAA,IACMvB,EAAAA,EAAAA,UAAS,IAAE2B,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GACjCI,GADUH,EAAA,GAAQA,EAAA,IACM3B,EAAAA,EAAAA,aAAU+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAA3BN,EAAIO,EAAA,GAAEN,EAAOM,EAAA,GACpBiB,GAAoChD,EAAAA,EAAAA,WAAS,GAAMiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GACnDuL,GADiBtL,EAAA,GAAeA,EAAA,IACAjD,EAAAA,EAAAA,UAAS,KAAGwO,GAAAtO,EAAAA,EAAAA,GAAAqO,EAAA,GAA3BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,GAAoC1O,EAAAA,EAAAA,UAAS,IAAG2O,GAAAzO,EAAAA,EAAAA,GAAAwO,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgC9O,EAAAA,EAAAA,UAAS,IAAG+O,GAAA7O,EAAAA,EAAAA,GAAA4O,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgClP,EAAAA,EAAAA,YAAUmP,GAAAjP,EAAAA,EAAAA,GAAAgP,EAAA,GAAnCE,EAAQD,EAAA,GAAEE,GAAWF,EAAA,GAC5BG,IAAgCtP,EAAAA,EAAAA,YAAUuP,IAAArP,EAAAA,EAAAA,GAAAoP,GAAA,GAAnCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAA4B1P,EAAAA,EAAAA,YAAU2P,IAAAzP,EAAAA,EAAAA,GAAAwP,GAAA,GAA/BE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAgD9P,EAAAA,EAAAA,UAAS,IAAG+P,IAAA7P,EAAAA,EAAAA,GAAA4P,GAAA,GAArDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAoClQ,EAAAA,EAAAA,YAAUmQ,IAAAjQ,EAAAA,EAAAA,GAAAgQ,GAAA,GAAvCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAsCtQ,EAAAA,EAAAA,YAAUuQ,IAAArQ,EAAAA,EAAAA,GAAAoQ,GAAA,GAAzCE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAoC1Q,EAAAA,EAAAA,YAAU2Q,IAAAzQ,EAAAA,EAAAA,GAAAwQ,GAAA,GAAvCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAoB9Q,EAAAA,EAAAA,UAAS,QAAO+Q,IAAA7Q,EAAAA,EAAAA,GAAA4Q,GAAA,GACpCE,IADSD,GAAA,GAAOA,GAAA,IACoB/Q,EAAAA,EAAAA,UAAShB,EAAMiS,gBAAgBC,cAAgBlS,EAAMiS,gBAAgBC,cAAgB,KAAGC,IAAAjR,EAAAA,EAAAA,GAAA8Q,GAAA,GAArHI,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAoCtR,EAAAA,EAAAA,WAAS,GAAMuR,IAAArR,EAAAA,EAAAA,GAAAoR,GAAA,GAA5CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAkC1R,EAAAA,EAAAA,WAAS,GAAM2R,IAAAzR,EAAAA,EAAAA,GAAAwR,GAAA,GAA1CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAkB9R,EAAAA,EAAAA,YAAU+R,IAAA7R,EAAAA,EAAAA,GAAA4R,GAAA,GAArBpO,GAACqO,GAAA,GAAEC,GAAID,GAAA,GAERpH,GAAkB,SAAC7F,GACrB,GAAIA,EAEA,OADAA,EAAOA,EAAK2F,MAAM,KAAKC,UAAUnI,KAAK,IAI9C,EAEI0P,GAAI,CACHC,aAAa,GACbC,KAAK,GACLC,UAAU,GACVC,KAAK,GACLC,UAAU,GACVC,KAAK,GACLC,UAAU,GACVC,SAAS,GACTC,QAAQ,GACRC,KAAK,GACLC,cAAc,GACdC,SAAS,GACTC,YAAc,GACdC,SAAS,GACT7O,GAAG,GACH8O,cAAc,GACdC,YAAY,GACZC,SAAS,GACTC,IAAI,GACJC,IAAI,GACJC,KAAK,GACLC,aAAa,IAKZC,GAAU,eAAAC,GAAAnQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOiQ,GAAM,OAAAnQ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAA8P,OAAA,SACzB,IAAIC,QAAO,eAAAC,GAAAvQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsG,EAAMgK,EAAQC,GAAM,IAAAC,EAAA,OAAAzQ,EAAAA,EAAAA,KAAAK,MAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,OAKZ,OALYgG,EAAAjG,KAAA,EAE/BgM,KACApB,IACIsF,EAAY,GAChBlD,IAAc,GAAK/G,EAAAhG,KAAA,EACbrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,uBAAAoD,OAAsB+Q,EAAM,iBAAA/Q,OAAgBxD,IAAYyD,MAAK,SAACC,GAChFmR,EAAYnR,EAASC,KAAKA,KAAKkR,UAAYnR,EAASC,KAAKA,KAAKkR,UAAY,QAE1DrN,GAAZ8I,IAAyBA,GAASnN,OAAS,EAC3C+L,EAAapK,QAAQuD,MAAMyM,QAAU,QAErC5F,EAAapK,QAAQuD,MAAMyM,QAAU,OAG7CH,EAAQE,EACR,IAAE,OAAAjK,EAAAhG,KAAA,gBAAAgG,EAAAjG,KAAA,EAAAiG,EAAAmD,GAAAnD,EAAA,SAEFxD,IAAAA,OAAAA,QAAwBwD,EAAAmD,GAAE1G,SAC1BuN,EAAMhK,EAAAmD,IAAG,QAEW,OAFXnD,EAAAjG,KAAA,GAETgN,IAAc,GAAM/G,EAAAmK,OAAA,6BAAAnK,EAAAxF,OAAA,GAAAuF,EAAA,wBAE3B,gBAAA3B,EAAA8F,GAAA,OAAA4F,EAAArP,MAAA,KAAAC,UAAA,EAvBiB,KAuBhB,wBAAAZ,EAAAU,OAAA,GAAAd,EAAA,KACL,gBAzBmBsE,GAAA,OAAA0L,EAAAjP,MAAA,KAAAC,UAAA,KAyBnB,SACkB0P,GAAMC,GAAA,OAAAC,GAAA7P,MAAC,KAADC,UAAA,UAAA4P,KA4CpB,OA5CoBA,IAAA/Q,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAArB,SAAA8Q,EAAsBN,GAAW,OAAFzQ,EAAAA,EAAAA,KAAAK,MAAA,SAAA2Q,GAAE,cAAFA,EAAAzQ,KAAAyQ,EAAAxQ,MAAE,KAAF,SAAAwQ,EAAAZ,OAAA,SACpB,IAAIC,SAAQ,SAACE,EAASC,GACzB,IAAIS,EAAM,GACV,IACI,IAAI,IAAI7Q,EAAE,EAAEA,EAAEqQ,EAAU1R,OAAOqB,IAC3B,IAAI,IAAIkB,EAAE,EAAEA,EAAEmP,EAAUrQ,GAAG8Q,WAAWnS,OAAOuC,IACM,GAA5CmP,EAAUrQ,GAAG8Q,WAAW5P,GAAGoO,gBAC1Bf,GAAI,CACAC,aAAa6B,EAAUrQ,GAAGwO,aAC1BC,KAAK4B,EAAUrQ,GAAG8Q,WAAW5P,GAAGuN,KAChCC,UAAU2B,EAAUrQ,GAAG8Q,WAAW5P,GAAGwN,UACrCC,KAAK0B,EAAUrQ,GAAG8Q,WAAW5P,GAAGyN,KAChCC,UAAUyB,EAAUrQ,GAAG8Q,WAAW5P,GAAG0N,UACrCC,KAAKwB,EAAUrQ,GAAG8Q,WAAW5P,GAAG2N,KAChCC,UAAUuB,EAAUrQ,GAAG8Q,WAAW5P,GAAG4N,UACrCC,SAASsB,EAAUrQ,GAAG8Q,WAAW5P,GAAG6N,SACpCC,QAAQqB,EAAUrQ,GAAG8Q,WAAW5P,GAAG8N,QACnCC,KAAKoB,EAAUrQ,GAAG8Q,WAAW5P,GAAG+N,KAChCC,cAAcmB,EAAUrQ,GAAG8Q,WAAW5P,GAAGgO,cACzCC,SAASkB,EAAUrQ,GAAG8Q,WAAW5P,GAAGiO,SACpCC,YAAciB,EAAUrQ,GAAG8Q,WAAW5P,GAAGkO,YACzCC,SAASgB,EAAUrQ,GAAG8Q,WAAW5P,GAAGmO,SACpC7O,GAAG6P,EAAUrQ,GAAG8Q,WAAW5P,GAAGV,GAC9B8O,cAAce,EAAUrQ,GAAG8Q,WAAW5P,GAAGoO,cACzCC,YAAYc,EAAUrQ,GAAGQ,GACzBgP,SAASa,EAAUrQ,GAAG8Q,WAAW5P,GAAGsO,SACpCC,IAAIY,EAAUrQ,GAAG8Q,WAAW5P,GAAGuO,IAC/BC,IAAIW,EAAUrQ,GAAG8Q,WAAW5P,GAAGwO,IAC/BC,KAAKU,EAAUrQ,GAAG8Q,WAAW5P,GAAGyO,KAChCC,aAAaS,EAAUrQ,GAAG8Q,WAAW5P,GAAG0O,cAE5CiB,EAAInQ,KAAK6N,KAIrB4B,EAAQU,EACZ,CAAC,MAAMjP,GACHgB,IAAAA,OAAAA,QAAwBhB,EAAEiB,SAC1BuN,EAAOxO,EACX,CAAC,QACGuJ,EAAc0F,EAElB,CACJ,KAAE,wBAAAD,EAAAhQ,OAAA,GAAA+P,EAAA,MACL9P,MAAA,KAAAC,UAAA,CACkB,SAAAiQ,KAShB,OATgBA,IAAApR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAnB,SAAAmR,EAAoBjB,GAAM,OAAAnQ,EAAAA,EAAAA,KAAAK,MAAA,SAAAgR,GAAA,cAAAA,EAAA9Q,KAAA8Q,EAAA7Q,MAAA,cAAA6Q,EAAA9Q,KAAA,EAAA8Q,EAAA7Q,KAAA,EAEDyP,GAAWE,GAAQ,KAAD,EACnCS,GADQS,EAAAC,MACKjS,MAAK,SAACkS,GACfhG,EAAcgG,EAClB,IAAEF,EAAA7Q,KAAA,gBAAA6Q,EAAA9Q,KAAA,EAAA8Q,EAAA1H,GAAA0H,EAAA,SAEFrO,IAAAA,OAAAA,QAAwBqO,EAAA1H,GAAE1G,SAAQ,yBAAAoO,EAAArQ,OAAA,GAAAoQ,EAAA,mBAEvCnQ,MAAA,KAAAC,UAAA,CAEH,IAAMsQ,GAAa,eAAAC,GAAA1R,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmB,EAAO+O,GAAM,OAAAnQ,EAAAA,EAAAA,KAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,YAC3B2P,EAAOpR,OAAS,GAAC,CAAAwC,EAAAf,KAAA,SACA,OAAjBuL,IAAY,GAAKxK,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEPrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,iCAAAoD,OAAgC+Q,IAAU9Q,MAAK,SAACC,GAClEyM,IAAY,GACZJ,EAAY,CAACrM,EAASC,KAAKA,MAC/B,IAAE,OAAAgC,EAAAf,KAAA,gBAAAe,EAAAhB,KAAA,EAAAgB,EAAAoI,GAAApI,EAAA,SAEFwK,IAAY,GACZ/I,IAAAA,OAAAA,QAAwBzB,EAAAoI,GAAE1G,SAAQ,yBAAA1B,EAAAP,OAAA,GAAAI,EAAA,kBAG7C,gBAbkBsQ,GAAA,OAAAD,EAAAxQ,MAAA,KAAAC,UAAA,KA+BnB,SAASyQ,GAAe7B,EAAK8B,EAAKC,GAC9B,IAAIxC,EAAOuC,EAIX,OAHI/Q,OAAOgR,GAAWhR,OAAOwO,IACzBrM,IAAAA,OAAAA,QAAwB,0CAEvB8M,EAEa,GAAPA,EACP8B,EAAM/Q,OAAO+Q,GAIbvC,GADAA,EAAOxO,OAAO+Q,GAAO/Q,OAAOiP,IAChBgC,QAAQ,GANb,CAUf,CAmCA,SAASC,GAAYxS,GACjB,IAAIyS,EAAiB,CACjBC,UAAW1S,EAAKqB,GAChB+C,KAAM,IACNuO,QAAS3S,EAAKqP,aAAerP,EAAKqP,aAAe,GACjDuD,MAAO5S,EAAK4P,SACZiD,OAAQ7S,EAAKiQ,YACb6C,SAAU9S,EAAK+P,cACfgD,UAAW,EACX/C,SAAU,EACVF,KAAM9P,EAAK8P,KACXkD,QAAShT,EAAKsQ,IACd2C,SAAUjT,EAAKsQ,IACf4C,IAAK5R,OAAOtB,EAAKuP,WAAajO,OAAOtB,EAAK2P,WAAarO,OAAOtB,EAAKyP,WACnE0D,SAAUnT,EAAKsQ,KAIfnD,IAA+C,GAA3BA,GAAiB3N,OACrC4N,GAAoB,CAACqF,IAErBrF,IAAoB,SAAAgG,GAAS,SAAAvT,QAAAwT,EAAAA,EAAAA,GAAQD,GAAS,CAAEX,GAAc,GAGtE,CAC4B,SAAAa,KAO3B,OAP2BA,IAAA9S,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAA6S,EAA6BC,GAAK,IAAApE,EAAA,OAAA3O,EAAAA,EAAAA,KAAAK,MAAA,SAAA2S,GAAA,cAAAA,EAAAzS,KAAAyS,EAAAxS,MAAA,QAC1BmO,EAAM,IACN7N,KAAK4L,GAAiBkE,QAAO,SAAU5O,GACvC,OAAOA,EAAEmQ,QAAUY,CACvB,KACApE,EAAMA,EAAIsE,OACVtG,GAAoBgC,GAAI,wBAAAqE,EAAAhS,OAAA,GAAA8R,EAAA,KAC3BD,GAAA5R,MAAA,KAAAC,UAAA,CACoC,SAAAgS,KAgDpC,OAhDoCA,IAAAnT,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAArC,SAAAkT,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA1D,EAAA2D,EAAAC,EAAAC,EAAAC,EAAA,OAAA3T,EAAAA,EAAAA,KAAAK,MAAA,SAAAuT,GAAA,cAAAA,EAAArT,KAAAqT,EAAApT,MAAA,OASI,IARI4S,EAAa,GACbC,EAAc,GACdC,EAAW,GACXC,EAAgB,GAChB1D,EAAM,GACN2D,EAAM,GACNC,EAAc,GAETrT,EAAI,EAAGA,EAAIsM,GAAiB3N,OAAQqB,IACzCgT,EAAWtS,KAAK4L,GAAiBtM,GAAGuD,KAAO+I,GAAiBtM,GAAG6R,WAC/DoB,EAAYvS,KAAK4L,GAAiBtM,GAAGkS,WACrCgB,EAASxS,KAAK4L,GAAiBtM,GAAGmP,UAClCgE,EAAczS,KAAK4L,GAAiBtM,GAAGoS,UACvC3C,EAAI/O,KAAK4L,GAAiBtM,GAAGmS,SAC7BiB,EAAI1S,KAAK4L,GAAiBtM,GAAGqS,KAC7BgB,EAAY3S,KAAK4L,GAAiBtM,GAAGsS,UAY5B,OAVTiB,EAAO,CACPE,OAAQT,EACRtD,IAAKuD,EACL9D,SAAU+D,EACVQ,SAAUP,EACVQ,SAAUlE,EACV4C,IAAKe,EACLxD,aAAcyD,EACdjR,eAAgB9G,EAAM4G,eAE1BnE,GAAQ,GAAKyV,EAAArT,KAAA,GAAAqT,EAAApT,KAAA,GAEHrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,oBAAoB2X,GAAMtU,MAAK,SAACC,GACnDnB,GAAQ,GACoB,GAAxBmB,EAASC,KAAKyK,QACdgK,KACAhR,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtCvH,EAAM2O,kBACNsC,GAAoB,KAEpB3J,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QAE9C,IAAGgR,OAAM,SAAejS,GACpBgB,IAAAA,OAAAA,QAAwBhB,EAAEiB,SAC1B9E,GAAQ,EACZ,IAAE,QAAAyV,EAAApT,KAAA,iBAAAoT,EAAArT,KAAA,GAAAqT,EAAAjK,GAAAiK,EAAA,UAEF5Q,IAAAA,OAAAA,QAAwB4Q,EAAAjK,GAAE1G,SAC1B9E,GAAQ,GAAM,yBAAAyV,EAAA5S,OAAA,GAAAmS,EAAA,qBAErBlS,MAAA,KAAAC,UAAA,CACD,SAASgT,MACL7O,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,kBAAD,mCAAA5D,OAEkBsN,GAAiB3N,OAAM,UAAAK,OAASsN,GAAiB3N,QAAU,EAAI,QAAU,UAAS,MACrH,MACA,MACA,YAzDP,WACoCmU,GAAAjS,MAAC,KAADC,UAAA,CAyDzBiT,EACJ,IACA,WACI,OAAO,CACX,GACA,CACA,EAER,EAtKAjV,EAAAA,EAAAA,YAAU,WACN7C,EAAQ0H,KAAI,SAACxE,GAAI,OACbA,EAAK,IAAMtC,EAAW+N,EAAczL,EAAK,IAAM,EAAE,GAEzD,GAAG,CAACtC,KAwDJiC,EAAAA,EAAAA,YAAU,YA1BV,WACI,IAAIkV,EAAM,EACV1H,GAAiB3I,KAAI,SAACxE,GAAI,OACtB6U,GAAOvT,OAAOtB,EAAKmT,SAAS,IAEhC3F,GAAcqH,EAAItC,QAAQ,GAC9B,CAqBIuC,EACJ,GAAG,CAAC3H,MACJxN,EAAAA,EAAAA,YAAU,YAtBV,WACI,IAAIkV,EAAM,EACV1Y,EAAM4Y,mBAAmBvQ,KAAI,SAACxE,GAAI,OAC9B6U,GAAOvT,OAAOtB,EAAKyQ,aAAa,IAEpC7C,GAAeiH,EAAItC,QAAQ,GAC/B,CAiBIyC,EACJ,GAAG,CAAC7Y,EAAM4Y,qBAuHV,IAOMN,GAAU,eAAAQ,GAAAzU,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8B,IAAA,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAEO,OAFPyB,EAAA1B,KAAA,EAEXgO,IAAa,GAAKtM,EAAAzB,KAAA,EACZrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,uBAAuB,CAC1CwG,eAAgB9G,EAAM4G,cACtBmS,MAAO3G,KACRzO,MAAK,SAACC,GACL0D,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtCvH,EAAM2O,kBACNkE,IAAa,EACjB,IAAE,OAAAtM,EAAAzB,KAAA,gBAAAyB,EAAA1B,KAAA,EAAA0B,EAAA0H,GAAA1H,EAAA,SAEFsM,IAAa,GACbvL,IAAAA,OAAAA,QAAwBf,EAAA0H,GAAEpK,KAAK0D,SAAQ,yBAAAhB,EAAAjB,OAAA,GAAAe,EAAA,kBAE9C,kBAfe,OAAAyS,EAAAvT,MAAA,KAAAC,UAAA,KAgBVwT,GAAgB,eAAAC,GAAA5U,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmC,EAAOwS,GAAE,OAAA5U,EAAAA,EAAAA,KAAAK,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OACX,OAAnB2N,IAAc,GAAK9L,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAETrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,sBAAsB,CACzC4E,GAAIgU,IACLvV,MAAK,SAACC,GACL6O,IAAc,GACdzS,EAAM2O,kBACNrH,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QAC1C,IAAE,OAAAZ,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,EAAA8B,EAAAsH,GAAAtH,EAAA,SAEF8L,IAAc,GACdnL,IAAAA,OAAAA,QAAwBX,EAAAsH,GAAEpK,KAAK0D,SAAQ,yBAAAZ,EAAArB,OAAA,GAAAoB,EAAA,kBAE9C,gBAdqByS,GAAA,OAAAF,EAAA1T,MAAA,KAAAC,UAAA,KAgBtB,OACIoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qHAAqH,SAAQ,CAAEuR,OAAQ,QAAStR,SAAA,EAC3JF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+CAA8CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,qDAAoDC,SAAA,CAAE9H,EAAM+H,YAAY,mBACtFC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,gEAAgEK,WAAU1F,EAAqB2F,QAASnI,EAAMqZ,wBAGpIzR,EAAAA,EAAAA,MAAA,OAAKC,UAAS,0CAA4CC,SAAA,EACtDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gCAA+BC,UAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACnDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACpCE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,uDAAuDK,SAAU0J,GAAY1G,YAAY,iBACtGjG,MAAOuL,IAAsB,GAC7B3H,SAAU,SAACvC,GACPmK,GAAYnK,EAAEE,OAAOvB,OAvQpD,SACkBqU,GAAA7D,GAAAlQ,MAAC,KAADC,UAAA,CAuQa+T,CAAKjT,EAAEE,OAAOvB,MAClB,KAEJ+C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mCAAkCC,UAC7CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAqBU,MAAO,CAAEC,MAAO,QAASV,UACzDE,EAAAA,EAAAA,KAAA,OAAKY,IAAKwG,EAAcvH,UAAU,+CAA+CU,MAAO,CAAEiR,MAAO,cAAepO,OAAQ,IAAKqO,UAAW,QAAS3R,SAEzI8H,EACIgC,IACIhK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,CAAC,6BAEpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAyBU,MAAO,CAAEC,MAAO,OAAQ4Q,OAAQ,QAAU1P,KAAK,SAAQ5B,SAAA,EAC3FE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,UAASC,SAAC,MAAQ,UAG5B,GAAd8J,IAA4C,GAArBhC,EAAWvM,QAC9B2E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAwCC,SAAC,yBAExDF,EAAAA,EAAAA,MAAA,OAAKC,UAAS,4CAAAnE,OAA8CkM,GAAcA,EAAWvM,OAAS,EAAI,QAAU,QAASyE,SAAA,EACjHF,EAAAA,EAAAA,MAAA,KAAGC,UAAS,8CAAiDU,MAAO,CAAEmR,SAAU,UAAW5R,SAAA,CAAE8H,EAAWvM,OAAO,qBAE3GuM,EAAWvH,KAAI,SAACxE,EAAMa,GAAC,OAC3EkD,EAAAA,EAAAA,MAAA,OAAKW,MAAO,CAAE8C,OAAQ,UAAWmO,MAAO,SAAW3R,UAAS,MAAAnE,OAAUgB,EAAI,GAAM,EAAK,QAAU,WAAU,kDACzGyD,QAAS,SAAC7B,GAAQmJ,EAAY5L,GAAOwS,GAAYxS,GAAO4M,KAAeI,KAAYzB,EAAapK,QAAQuD,MAAMyM,QAAQ,MAAM,EAAElN,SAAA,EACrHjE,EAAKqP,aAAerP,EAAKqP,cAAiC,OAAGlL,EAAAA,EAAAA,KAAA,QAAMH,UAAU,uBAAsBC,SAAEjE,EAAK4P,SAAS5P,EAAK4P,SAAS,KAAU,KAACzL,EAAAA,EAAAA,KAAA,QAAMH,UAAU,OAAMC,SAAEjE,EAAK+P,cAAc/P,EAAK+P,cAAc,oBAAoB,OAAgB,QAMlN5L,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0BAOxCG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iEAAgEC,SAAC,UAChFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACvBE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,+FAA+F5C,MAAO2L,IAAkB,GAAI1F,YAAY,eACzJrC,SAAU,SAACvC,GAAQwP,GAAcxP,EAAEE,OAAOvB,OAAQ4L,GAAUvK,EAAEE,OAAOvB,OAAQoK,EAAWrK,QAAQuD,MAAMyM,QAAU,OAAQ,KACpHhN,EAAAA,EAAAA,KAAA,OAAKY,IAAKyG,EAAYxH,UAAU,mCAAmCU,MAAO,CAAEiR,MAAO,cAAepO,OAAQ,KAAMtD,SAExGkI,EACII,GACIxI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,CAAC,6BAEpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAyBU,MAAO,CAAEC,MAAO,OAAQ4Q,OAAQ,QAAU1P,KAAK,SAAQ5B,SAAA,EAC3FE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,UAASC,SAAC,MAAQ,UAG9B,GAAZsI,GAAwC,GAAnBJ,EAAS3M,QAC1B2E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAwCC,SAAC,wBAExDkI,EAAS3H,KAAI,SAACxE,EAAMa,GAAC,OACjBsD,EAAAA,EAAAA,KAAA,OAAKO,MAAO,CAAE8C,OAAQ,UAAWmO,MAAO,eAAiB3R,UAAS,kCAAAnE,OAAsCgB,EAAI,GAAM,EAAK,QAAU,YAC7HyD,QAAS,SAAC7B,GACNuK,GAAUhN,EAAKoE,KAAOpE,EAAKqB,IAC3BmR,GAAYxS,GACZwL,EAAWrK,QAAQuD,MAAMyM,QAAU,MACvC,EAAElN,SAAEjE,EAAK8V,UAAY9V,EAAK8V,UAAY,IAAS,KAI9D3R,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAOxCD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oCAEfG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAAkBU,MAAO,CAAE6Q,OAAQ,QAAStR,UACvDF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOC,SAAA,EACpBE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,MAAA,MAAIC,UAAS,GAAKC,SAAA,EACdE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,aACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,eACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,cACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,iBACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,eACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,iBACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,gBACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,SACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,UACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,cACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,uBACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,kBACjBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,GAAEC,SAAC,gBAIrBkJ,IAAgD,IAA5BA,GAAiB3N,QACjC2E,EAAAA,EAAAA,KAAA,SAAOH,UAAU,mBAAkBC,SAE3BkJ,GAAiB3I,KAAI,SAACxE,GAAI,OACtB+D,EAAAA,EAAAA,MAAA,MAAIC,UAAS,mBAAAnE,OAAqByB,OAAOtB,EAAKiT,UAAY3R,OAAOtB,EAAK8P,MAAQ,aAAe,IAAK7L,SAAA,EAC9FF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKjE,EAAKoE,KAAMpE,EAAK0S,cACrBvO,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAK2S,WACVxO,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAK4S,SACVzO,EAAAA,EAAAA,KAAA,MAAAF,SAAK6D,GAAgB9H,EAAK6S,WAC1B1O,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAK8S,YAEV/O,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,kEACb5C,MAAOpB,EAAK+S,UAAY/S,EAAK+S,UAAY,GACzC/N,SAAU,SAACvC,GACPA,EAAEE,OAAOvB,OAASpB,EAAK8S,SAAW9S,EAAK+S,UAAYtQ,EAAEE,OAAOvB,MAAQqC,IAAAA,OAAAA,QAAwB,2DAC5FzD,EAAKmT,SAAWf,GAAepS,EAAK+S,UAAW/S,EAAKiT,UACpD7F,IAAoB,SAAAgG,GAAS,OAAAC,EAAAA,EAAAA,GAAQD,EAAS,GAClD,IAAK,QAEbrP,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,kEACb5C,MAAOpB,EAAKgQ,SAAWhQ,EAAKgQ,SAAW,GACvChL,SAAU,SAACvC,GA7VnE,IAAwB6N,EAAKyF,EA8V+B/V,EAAKgQ,SAAWvN,EAAEE,OAAOvB,MACzBpB,EAAKiT,UA/VzC3C,EA+VmEtQ,EAAKgT,SA/VnE+C,EA+V4EtT,EAAEE,OAAOvB,QAzVnGE,OAAOgP,GAAShP,OAAOgP,GAAOhP,OAAOyU,GAAS,KACzCxD,QAAQ,GAJbjR,OAAOgP,IA6VsCtQ,EAAKmT,SAAWf,GAAepS,EAAK+S,UAAWzR,OAAOtB,EAAKiT,UAAW3R,OAAOtB,EAAK8P,OAClF1C,IAAoB,SAAAgG,GAAS,OAAAC,EAAAA,EAAAA,GAAQD,EAAS,GAClD,IAAK,QACbrP,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKgT,YACXjP,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAK8P,SACX3L,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAKkT,IAAM,OAChBnP,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKiT,aACXlP,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKmT,aACXhP,EAAAA,EAAAA,KAAA,MAAAF,UAAIE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,oBAAqBT,UAAU,YAAYM,QAAS,YAlR1I,SAC2B0R,GAAA1C,GAAA5R,MAAC,KAADC,UAAA,CAiRuHsU,CAAcjW,EAAK4S,MAAO,QAC5H,MAKjBzW,EAAM4Y,oBAAyD,GAAnC5Y,EAAM4Y,mBAAmBvV,QACjD2E,EAAAA,EAAAA,KAAA,SAAOH,UAAU,sBAAqBC,UACtCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBC,UAC/BE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,0DAAyDC,SAAC,8BAK7EE,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAMPpJ,EAAM4Y,oBAAyD,GAAnC5Y,EAAM4Y,mBAAmBvV,QACjD2E,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,KAEApB,EAAAA,EAAAA,KAAA,SAAOH,UAAU,gCAA+BC,SAExC9H,EAAM4Y,mBAAmBvQ,KAAI,SAACxE,EAAMwF,GAAG,OACnCzB,EAAAA,EAAAA,MAAA,MAAIC,UAAS,mBAAAnE,OAAqByB,OAAOtB,EAAKiT,UAAY3R,OAAOtB,EAAK8P,MAAQ,aAAe,IAAK7L,SAAA,EAC9FF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,IAAEjE,EAAKkW,uBACX/R,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAKmW,SAAS9G,gBACnBlL,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAKoW,gBAAgBxG,YAC1BzL,EAAAA,EAAAA,KAAA,MAAAF,SAAK6D,GAAgB9H,EAAKoW,gBAAgBnG,gBAC1C9L,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAF,SAAKjE,EAAKuQ,OACVxM,EAAAA,EAAAA,MAAA,MAAIC,UAAU,0BAAyBC,SAAA,CAAEjE,EAAKgQ,SAAS,QACvDjM,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKwU,aACXzQ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKoW,gBAAgBtG,SAC3B3L,EAAAA,EAAAA,KAAA,MAAAF,SAAK3C,OAAOtB,EAAKuP,WAAajO,OAAOtB,EAAK2P,WAAarO,OAAOtB,EAAKyP,WAAa,OAChF1L,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKuU,aACXxQ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,SAAEjE,EAAKyQ,iBACXtM,EAAAA,EAAAA,KAAA,MAAAF,SAEQ0K,IAAc9N,IAAK2E,GACfrB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uDAAuD6B,KAAK,SAAS,cAAY,UAEhG1B,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,oBAAqBT,UAAU,YAAYM,QAAS,WAAQ6K,GAAK3J,GAAM2P,GAAiBnV,EAAKqB,GAAI,QAI/I,eASrC0C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYU,MAAO,CAAE6Q,OAAQ,OAAQc,cAAe,QAASpS,SAAA,EACxEE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,iCAAgCC,SAAC,gBAE3C8K,IACI5K,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAwCC,UACnDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACrCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAItCE,EAAAA,EAAAA,KAAA,YAAUH,UAAU,4BAA4B5C,MAAOmN,IAA0B,GAAIvJ,SAAU,SAACvC,GAAC,OAAK+L,GAAc/L,EAAEE,OAAOvB,MAAM,EAAEsD,MAAO,CAAEC,MAAO,OAAQ4Q,OAAQ,iBAOrLpR,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6HAA4HC,UACvIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACnEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBC,UAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,kDAAiDC,SAAC,kBAE3DkJ,IAA+C,GAA3BA,GAAiB3N,QACjCuE,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACIF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sDAAqDC,SAAA,CAAC,SAAE0J,OACrE5J,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gDAA+CC,SAAA,CAAC,UAAGsJ,UAGnEpJ,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,KAETpB,EAAAA,EAAAA,KAAA,MAAIH,UAAU,4BACdD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sDAAqDC,SAAA,CAAC,UAAG3C,OAAOiM,IAAcjM,OAAOqM,KAAc4E,QAAQ,UAM7HxO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,kDAAiDC,SAAC,iBAG3DkJ,IAA+C,GAA3BA,GAAiB3N,QACjCuE,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACIE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,sDAAqDC,SAAE9H,EAAM4Y,oBAAsB5Y,EAAM4Y,mBAAmBvV,OAASrD,EAAM4Y,mBAAmBvV,OAAS,KACpKuE,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gDAA+CC,SAAA,CAAC,IAAEkJ,IAAoBA,GAAiB3N,OAAS2N,GAAiB3N,OAAS,SAE1I2E,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,KAETpB,EAAAA,EAAAA,KAAA,MAAIH,UAAU,uBACdG,EAAAA,EAAAA,KAAA,MAAIH,UAAU,uDAAsDC,SAAE9H,EAAM4Y,oBAAsB5Y,EAAM4Y,mBAAmBvV,QAAU2N,IAAoBA,GAAiB3N,OAAS2N,GAAiB3N,OAASrD,EAAM4Y,mBAAmBvV,OAAS,aAI3P2E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBC,UAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,SAE3C8K,IACI5K,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAwCC,UACnDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACrCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAItCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,mCAAmCM,QAAS,YAjU9FwB,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,kBAAD,gDAGjB,MACA,MACA,WACIgR,IACJ,IACA,WACI,OAAO,CACX,GACA,CACA,EAoToH,EAAExQ,SAAC,kBAIvGE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,SAE3CtF,GACIwF,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAwCC,UACnDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACrCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAItCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,mCAAmCM,QAAS,WAAQqQ,IAAiB,EAAE1Q,SAAC,2BAclI,E,wCC5pBA,SAASqS,EAAena,GAEtB,IAAMM,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjB4Z,GAAY7Z,EAAAA,EAAAA,YAAW2J,EAAAA,IACvBmQ,GAAa9Z,EAAAA,EAAAA,YAAW+Z,EAAAA,IACxBja,EAAUF,aAAaC,QAAQ,MAC/Bma,EAAWpa,aAAaC,QAAQ,YAEtCW,GAA8CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDkR,EAAehR,EAAA,GAAEuZ,EAAkBvZ,EAAA,GAC1CI,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCoZ,EAAUnZ,EAAA,GAAEoZ,EAAapZ,EAAA,GAChCG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CkZ,EAASjZ,EAAA,GAAEkZ,EAAYlZ,EAAA,GAC9BE,GAAoCZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAvCiZ,EAAUhZ,EAAA,GAAEiZ,EAAajZ,EAAA,GAChCG,GAA8ChB,EAAAA,EAAAA,UAAS,QAAOiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAvD+Y,EAAe9Y,EAAA,GAAE+Y,EAAkB/Y,EAAA,GAC1CG,GAAoDpB,EAAAA,EAAAA,UAAS,QAAOqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA7D6Y,EAAkB5Y,EAAA,GAAE6Y,EAAqB7Y,EAAA,GAChDC,GAA0CtB,EAAAA,EAAAA,YAAUuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA9B6Y,IAAF5Y,EAAA,GAAkBA,EAAA,IACtCG,IAAkC1B,EAAAA,EAAAA,YAAU2B,IAAAzB,EAAAA,EAAAA,GAAAwB,GAAA,GAArCR,GAASS,GAAA,GAAER,GAAYQ,GAAA,GAC9BG,IAAkC9B,EAAAA,EAAAA,YAAU+B,IAAA7B,EAAAA,EAAAA,GAAA4B,GAAA,GAArCsY,GAASrY,GAAA,GAAEsY,GAAYtY,GAAA,GAC9BiB,IAAgDhD,EAAAA,EAAAA,YAAUiD,IAAA/C,EAAAA,EAAAA,GAAA8C,GAAA,GAAnDsX,GAAgBrX,GAAA,GAAEsX,GAAmBtX,GAAA,GAC5CsL,IAA0CvO,EAAAA,EAAAA,UAAS,QAAOwO,IAAAtO,EAAAA,EAAAA,GAAAqO,GAAA,GAAnDiM,GAAahM,GAAA,GAAEiM,GAAgBjM,GAAA,GACtCE,IAAoC1O,EAAAA,EAAAA,UAAS,QAAO2O,IAAAzO,EAAAA,EAAAA,GAAAwO,GAAA,GAA7CgM,GAAU/L,GAAA,GAAEgM,GAAahM,GAAA,GAChCG,IAAsC9O,EAAAA,EAAAA,UAAS,QAAO+O,IAAA7O,EAAAA,EAAAA,GAAA4O,GAAA,GAA/C8L,GAAW7L,GAAA,GAAE8L,GAAc9L,GAAA,GAClCG,IAAoClP,EAAAA,EAAAA,YAAUmP,IAAAjP,EAAAA,EAAAA,GAAAgP,GAAA,GAAvChD,GAAUiD,GAAA,GAAEhD,GAAagD,GAAA,GAChCG,IAA0DtP,EAAAA,EAAAA,UAAS,IAAGuP,IAAArP,EAAAA,EAAAA,GAAAoP,GAAA,GAA/DzB,GAAqB0B,GAAA,GAAEuL,GAAwBvL,GAAA,GACtDG,IAAoC1P,EAAAA,EAAAA,YAAU2P,IAAAzP,EAAAA,EAAAA,GAAAwP,GAAA,GAAvC5D,GAAU6D,GAAA,GAAE5D,GAAa4D,GAAA,GAChCG,IAAkC9P,EAAAA,EAAAA,YAAU+P,IAAA7P,EAAAA,EAAAA,GAAA4P,GAAA,GAArCiL,GAAShL,GAAA,GAAEiL,GAAYjL,GAAA,GAC9BG,IAAgClQ,EAAAA,EAAAA,UAAS,QAAOmQ,IAAAjQ,EAAAA,EAAAA,GAAAgQ,GAAA,GAAzC+K,GAAQ9K,GAAA,GAAE+K,GAAW/K,GAAA,GAC5BG,IAA0CtQ,EAAAA,EAAAA,YAAUuQ,IAAArQ,EAAAA,EAAAA,GAAAoQ,GAAA,GAA7C6K,GAAa5K,GAAA,GAAE6K,GAAgB7K,GAAA,GACtCG,IAAkC1Q,EAAAA,EAAAA,YAAU2Q,IAAAzQ,EAAAA,EAAAA,GAAAwQ,GAAA,GAArC2K,GAAS1K,GAAA,GAAE2K,GAAY3K,GAAA,GAC9BG,IAAwC9Q,EAAAA,EAAAA,UAAS,QAAO+Q,IAAA7Q,EAAAA,EAAAA,GAAA4Q,GAAA,GAAjDyK,GAAYxK,GAAA,GAAEyK,GAAezK,GAAA,GACpCC,IAA4BhR,EAAAA,EAAAA,YAAUmR,IAAAjR,EAAAA,EAAAA,GAAA8Q,GAAA,GAAvByK,IAAFtK,GAAA,GAAWA,GAAA,IACxBG,IAAwBtR,EAAAA,EAAAA,UAAS,QAAOuR,IAAArR,EAAAA,EAAAA,GAAAoR,GAAA,GAAjCoK,GAAInK,GAAA,GAAEoK,GAAOpK,GAAA,GACpBG,IAAwB1R,EAAAA,EAAAA,YAAU2R,IAAAzR,EAAAA,EAAAA,GAAAwR,GAAA,GAA5BkK,GAAMjK,GAAA,GAACkK,GAASlK,GAAA,GACtBG,IAAwB9R,EAAAA,EAAAA,YAAU+R,IAAA7R,EAAAA,EAAAA,GAAA4R,GAAA,GAA5BgK,GAAM/J,GAAA,GAACgK,GAAShK,GAAA,GACtBiK,IAAmDhc,EAAAA,EAAAA,UAAS,IAAGic,IAAA/b,EAAAA,EAAAA,GAAA8b,GAAA,GAAxDE,GAAkBD,GAAA,GAACE,GAAqBF,GAAA,GAEzC7U,GAAuB,WACH,UAApB2S,IACFC,EAAmB,QACnBF,IAEJ,EAiBC,SACcnM,KAAe,OAAAyO,GAAA7X,MAAC,KAADC,UAAA,UAAA4X,KAe7B,OAf6BA,IAAA/Y,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAAmC,IAAA,OAAApC,EAAAA,EAAAA,KAAAK,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAOI,OANF8V,GAAa,GACbpM,EAAAA,QAAAA,KAAa,kBAAmB,CAC9BrC,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WACjB/H,EAAA7B,KAAA,EACIrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,gCAAAoD,OAA+B6W,EAAQ,eAAA7W,OAAc1D,EAAMqd,SAASrd,EAAMsd,WAAW,GAAE,eAAA5Z,OAAc0W,EAAS,aAAA1W,OAAY0W,IAAazW,MAAK,SAACC,GACjK4W,EAAmB5W,EAASC,KAAKA,WAA6B6D,GAArB9D,EAASC,KAAKA,KAAmBD,EAASC,KAAKA,KAAM,GAEhG,IAAE,OACF+W,GAAa,GACbpM,EAAAA,QAAAA,SACAkM,EAAc,GAAE,wBAAA/T,EAAArB,OAAA,GAAAoB,EAAA,MACjBnB,MAAA,KAAAC,UAAA,CAC6B,SAAA+X,KAe7B,OAf6BA,IAAAlZ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAA8Q,IAAA,OAAA/Q,EAAAA,EAAAA,KAAAK,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,OAOI,OANF8V,GAAa,GACbpM,EAAAA,QAAAA,KAAa,kBAAmB,CAC9BrC,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WACjB4G,EAAAxQ,KAAA,EACIrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,gCAAAoD,OAA+B6W,EAAQ,eAAA7W,OAAc0W,EAAS,aAAA1W,OAAY0W,IAAazW,MAAK,SAACC,GACjH5D,EAAMwd,qBAAqB5Z,EAASC,KAAKA,WAA6B6D,GAArB9D,EAASC,KAAKA,KAAmBD,EAASC,KAAKA,KAAM,GAExG,IAAE,OACF+W,GAAa,GACbpM,EAAAA,QAAAA,SACAkM,EAAc,GAAE,wBAAApF,EAAAhQ,OAAA,GAAA+P,EAAA,MACjB9P,MAAA,KAAAC,UAAA,CAQD,SAAStC,GAASpB,GAOhB,OANAA,EAAOA,EAAKqB,WAAWC,MAAM,6CAA+C,CAACtB,IACpEuB,OAAS,KAChBvB,EAAOA,EAAKwB,MAAM,IACb,IAAMxB,EAAK,GAAK,GAAK,OAAS,OACnCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAEtBA,EAAKyB,KAAK,GACnB,EAfAC,EAAAA,EAAAA,YAAU,YAjBT,WAC6B+Z,GAAAhY,MAAC,KAADC,UAAA,CAiB5BiY,EACF,GAAE,KACFja,EAAAA,EAAAA,YAAU,WACRmL,IACF,GAAG,CAAC3O,EAAMsd,YAWV,IAAII,GAAQ,CAAC,CAAC,EAAG,YAAa,CAAC,EAAG,aAAc,CAAC,EAAG,YAAa,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAE,YAAa,CAAC,EAAG,eAAgB,CAAC,EAAG,cAAe,CAAC,EAAG,eAAgB,CAAC,GAAI,eAE9K,SAASpP,GAAOqP,GACd,IAAIrP,EACJ,QAAuB5G,GAApBwV,IAAiCA,GAAmB7Z,OAAO,EAC5D,IAAK,IAAIqB,EAAI,EAAGA,EAAIwY,GAAmB7Z,OAAQqB,IAC7C,GAAIiZ,GAAUT,GAAmBxY,GAAGQ,GAAI,CACtCoJ,EAAS4O,GAAmBxY,GAAGgE,MAC/B,KACF,CAIJ,OAAO4F,CACT,CACA,SAASsP,GAAaD,GAEpB,IADA,IAAIC,EACKhY,EAAI,EAAGA,EAAI8X,GAAMra,OAAQuC,IAChC,GAAI+X,GAAUD,GAAM9X,GAAG,GAAI,CACzBgY,EAAeF,GAAM9X,GAAG,GACxB,KACF,CAEF,OAAOgY,CACT,CAC2B,SAAArP,KA6B1B,OA7B0BA,IAAAlK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA3B,SAAAmR,EAA4BpP,GAAC,OAAAhC,EAAAA,EAAAA,KAAAK,MAAA,SAAAgR,GAAA,cAAAA,EAAA9Q,KAAA8Q,EAAA7Q,MAAA,YACvBwB,EAAEE,OAAOvB,OAAS5E,GAAWiG,EAAEE,OAAOwC,MAAI,CAAA2M,EAAA7Q,KAAA,SAOxC,OAPwC6Q,EAAA9Q,KAAA,EAE1C2J,EAAAA,QAAAA,OAAe,+BAAgC,CAC7CrC,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WACjBiH,EAAA7Q,KAAA,EACIrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,8BAA8B,CACnDwG,eAAgBR,EAAEE,OAAOwC,KACzBsF,OAAQhI,EAAEE,OAAOvB,MACjBkC,SAAU9G,IACTsD,MAAK,SAACC,GACP4K,EAAAA,QAAAA,SACAG,KACA3O,EAAMqH,WACNC,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QACxC,IAAGgR,OAAM,SAACjS,GACRkI,EAAAA,QAAAA,SACAlH,IAAAA,OAAAA,QAAwBhB,EAAEiB,QAC5B,IAAE,OAAAoO,EAAA7Q,KAAA,gBAAA6Q,EAAA9Q,KAAA,EAAA8Q,EAAA1H,GAAA0H,EAAA,SAEFnH,EAAAA,QAAAA,SACAlH,IAAAA,OAAAA,QAAwBqO,EAAA1H,GAAE1G,SAAQ,QAAAoO,EAAA7Q,KAAA,iBAGpCwC,IAAAA,OAAAA,MAAsB,oBAAmB,yBAAAqO,EAAArQ,OAAA,GAAAoQ,EAAA,mBAE5CnQ,MAAA,KAAAC,UAAA,CACD,IAGMyF,GAA0B,WAC9BiQ,EAAsB,QACtB/Y,IACF,EAkBA,SAASyM,KACY,UAAf8M,KACFC,GAAc,QACdxO,KAEJ,CAAC,SAEcY,GAAoB7E,GAAA,OAAA2U,GAAAtY,MAAC,KAADC,UAAA,CASnC,SAAAqY,KAHC,OAGDA,IAAAxZ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MATA,SAAA6S,EAAoClS,GAAE,OAAAZ,EAAAA,EAAAA,KAAAK,MAAA,SAAA2S,GAAA,cAAAA,EAAAzS,KAAAyS,EAAAxS,MAAA,OACjB,OAAnBiI,IAAc,GAAKuK,EAAAxS,KAAA,EACbrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,4CAAAoD,OAA2CwB,IAAMvB,MAAK,SAACC,GAC3EkY,GAAyBlY,EAASC,KAAKA,KAAK2I,QAC5CO,IAAc,EAChB,IAAE,wBAAAuK,EAAAhS,OAAA,GAAA8R,EAAA,MACH7R,MAAA,KAAAC,UAAA,CAI6B,SAAAsY,KAmB7B,OAnB6BA,IAAAzZ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAAkT,EAA+BzO,EAAM9D,GAAE,OAAAZ,EAAAA,EAAAA,KAAAK,MAAA,SAAAuT,GAAA,cAAAA,EAAArT,KAAAqT,EAAApT,MAAA,OAMnC,OALFwC,IAAAA,QAAAA,KAAsB,UAAW,CAC/B6E,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WACjBwJ,EAAArT,KAAA,EAAAqT,EAAApT,KAAA,EAEMrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,wBAAwB,CAC7CwG,eAAgB5B,EAChBiC,SAAU9G,IACTsD,MAAK,SAACC,GACP0D,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QAAQjE,MAAM,GAAI,GAAK,OAAS0F,GACtE1B,IAAAA,QAAAA,QACF,IAAE,OAAA4Q,EAAApT,KAAA,gBAAAoT,EAAArT,KAAA,EAAAqT,EAAAjK,GAAAiK,EAAA,SAEF5Q,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwB4Q,EAAAjK,GAAE1G,SAAQ,yBAAA2Q,EAAA5S,OAAA,GAAAmS,EAAA,mBAErClS,MAAA,KAAAC,UAAA,CAED,IAAMgT,GAAiB,SAACxP,EAAM9D,IAC5ByE,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,gBAAD,8BAAA5D,OAEWsF,GAC9B,MACA,MACA,YAhCH,SAI6BgG,EAAAmG,GAAA2I,GAAAvY,MAAC,KAADC,UAAA,CA6BxBuY,CAAgB/U,EAAM9D,EACxB,IACA,WACE,OAAO,CACT,GACA,CACA,EAEJ,EASA,SAAS8Y,KACS,SAAZ/B,KACFC,GAAY,QACZF,KAEJ,CACA,SAASiC,KACc,SAAjB1B,IACFC,GAAgB,QAEpB,CACA,SAAS0B,KACc,UAAjB3B,KACFC,GAAgB,QAChBJ,KAEJ,CACA,SAAS+B,KACc,UAAjB5B,KACFC,GAAgB,QAChBF,KAEJ,CACA,IAAM8B,GAAa,eAAA5J,GAAAnQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsG,EAAO3F,GAAE,OAAAZ,EAAAA,EAAAA,KAAAK,MAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,OAC7BwC,IAAAA,QAAAA,OAAwB,kBAAmB,CACzC6E,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WAEnB,IACEjL,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,qBAAqB,CACpCwG,eAAgB5B,EAChBiC,SAAU9G,IACTsD,MAAK,SAACC,GACP0D,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtCoH,KACA0P,OAAOC,KAAK1a,EAASC,KAAKA,KAAK0a,SAAU,SAAU,aACrD,IAAGhG,OAAM,SAACjS,GACRgB,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwBhB,EAAEiB,QAC5B,GACF,CAAE,MAAOjB,GACPgB,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwBhB,EAAEiB,QAE5B,CAAC,wBAAAuD,EAAAxF,OAAA,GAAAuF,EAAA,KACF,gBAzBkByO,GAAA,OAAA9E,EAAAjP,MAAA,KAAAC,UAAA,KA0BbgZ,GAAqB,eAAA5J,GAAAvQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOU,GAAE,OAAAZ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOnC,OAPmCF,EAAAC,KAAA,EAErCyC,IAAAA,QAAAA,OAAwB,0BAA2B,CACjD6E,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WACjB9J,EAAAE,KAAA,EACMrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,cAAc,CACnCwG,eAAgB5B,IACfvB,MAAK,SAACC,GACP0D,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtC8W,OAAOC,KAAK1a,EAASC,KAAKA,KAAK4a,iBAAkB,SAAU,cACzD9P,IACJ,IAAG4J,OAAM,SAACjS,GACRgB,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwBhB,EAAEiB,QAC5B,IAAE,OAAA3C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAqJ,GAAArJ,EAAA,SAEF0C,IAAAA,QAAAA,SACAA,IAAAA,OAAAA,QAAwB1C,EAAAqJ,GAAE1G,SAAQ,yBAAA3C,EAAAU,OAAA,GAAAd,EAAA,kBAGrC,gBAxB0BwR,GAAA,OAAApB,EAAArP,MAAA,KAAAC,UAAA,KA0BrBkZ,GAAgB,eAAA3I,GAAA1R,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmB,EAAOR,EAAIyZ,EAAOC,GAAK,IAAAC,EAAA,OAAAva,EAAAA,EAAAA,KAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAE9C,GADI+Z,EAAYD,OACHlX,GAATiX,GAA+B,MAATA,EACxBrX,IAAAA,OAAAA,QAAwB,iEACnB,CACLA,IAAAA,QAAAA,OAAwB,4BAA6B,CACnD6E,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WAEnB,IACEjL,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,uBAAuB,CACtCwG,eAAgB5B,EAChB4Z,WAAYD,EACZ1X,SAAU9G,IACTsD,MAAK,SAACC,GAEP0D,IAAAA,OAAAA,QAAwB,GAAD5D,OAAIE,EAASC,KAAK0D,SAAO7D,OAAgB,GAAbmb,EAAiB,qBAAuB,0BAC3FvX,IAAAA,QAAAA,QACF,GACF,CAAE,MAAOhB,GACPgB,IAAAA,OAAAA,QAAwBhB,EAAEiB,SAC1BD,IAAAA,QAAAA,QACF,CACF,CAAC,wBAAAzB,EAAAP,OAAA,GAAAI,EAAA,KAEF,gBA3BqBmU,EAAAV,EAAA4F,GAAA,OAAAhJ,EAAAxQ,MAAA,KAAAC,UAAA,KAkDhBwZ,GAAW,eAAAlG,GAAAzU,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8B,EAAOnB,EAAIyZ,EAAOC,GAAK,IAAAC,EAAA,OAAAva,EAAAA,EAAAA,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAEzC,GADI+Z,EAAYD,OACHlX,GAATiX,GAA+B,MAATA,EACxBrX,IAAAA,OAAAA,QAAwB,4DACnB,CACLA,IAAAA,QAAAA,OAAwB,sBAAuB,CAC7C6E,gBAAiB,yBACjBC,SAAU,UACVqC,aAAc,UACdC,gBAAiB,WAEnB,IACEjL,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,kBAAkB,CACjCwG,eAAgB5B,EAChB+Z,WAAY,EACZC,UAAWL,IACVlb,MAAK,SAACC,GAEP0D,IAAAA,OAAAA,QAAwB,GAAD5D,OAAIE,EAASC,KAAK0D,SAAO7D,OAAgB,GAAbmb,EAAiB,qBAAuB,0BAC3FvX,IAAAA,QAAAA,QACF,GACF,CAAE,MAAOhB,GACPgB,IAAAA,OAAAA,QAAwBhB,EAAEiB,SAC1BD,IAAAA,QAAAA,QACF,CACF,CAAC,wBAAAf,EAAAjB,OAAA,GAAAe,EAAA,KAEF,gBA3BgB8Y,EAAAC,EAAAC,GAAA,OAAAvG,EAAAvT,MAAA,KAAAC,UAAA,KA8CX6T,GAAoB,WACJ,SAAhBuC,IACFC,GAAe,SAEG,UAAhBD,KACFC,GAAe,QACfN,KAGJ,EACM+D,GAAc,WACL,SAAT5C,IACFC,GAAQ,SAEG,UAATD,KACFC,GAAQ,QACRtB,KAEJ,EAKKkE,GAAqB,WAC1B1C,IACA,EACM2C,GAAqB,WACzBzC,IACF,EACwB,SAAA0C,KAKrB,OALqBA,IAAApb,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAtB,SAAAmb,IAAA,IAAA7b,EAAA,OAAAS,EAAAA,EAAAA,KAAAK,MAAA,SAAAgb,GAAA,cAAAA,EAAA9a,KAAA8a,EAAA7a,MAAA,eACyB4C,GAApBwV,IAA4D,GAA3BA,GAAmB7Z,OAAS,CAAAsc,EAAA7a,KAAA,eAAA6a,EAAA7a,KAAA,GAC3C8a,EAAAA,EAAAA,MAAoB,OAAjC/b,EAAI8b,EAAA/J,KACVuH,GAAsBtZ,GAAK,wBAAA8b,EAAAra,OAAA,GAAAoa,EAAA,MAE9Bna,MAAA,KAAAC,UAAA,CAKH,OAJEhC,EAAAA,EAAAA,YAAU,YAPX,WACuBic,GAAAla,MAAA,KAAAC,UAAA,CAOpBqa,EACF,KAGA7X,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAtB,UACEF,EAAAA,EAAAA,MAAA,WAAS1C,GAAG,qBAAoB4C,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,WAASH,UAAU,kBAAiBC,UAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaC,UAC1BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mBAAkBC,UAC/BE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6CAA4CC,SAAC,4BAE7DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,cAAaC,UAC7BE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,sBAAuBkB,IAAI,mBAAmBrB,QA/SrG,WACwB,SAAlBqT,IACFC,GAAiB,QAErB,OA6SkBzT,EAAAA,EAAAA,KAAA,OAAKH,UAAS,KAAAnE,OAAO8X,GAAa,6IAA6IjT,MAAO,CAAE6C,OAAQ,OAAQ0U,SAAU,QAASC,SAAU,SAAUjY,UAC7OE,EAAAA,EAAAA,KAAC6D,EAAqB,CAACS,mBA7S3C,WACwB,UAAlBkP,IACFC,GAAiB,OAErB,EAySmFpU,SAAUrH,EAAMqH,SAAU2Y,UAAWhgB,EAAMggB,UAAWC,SAAUjgB,EAAMigB,SAAUC,WAAYlgB,EAAMkgB,0BAM3KlY,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iDAAgDC,SAE3D9H,EAAMqd,SAASrd,EAAMsd,WAAW,GAAGjV,KAAI,SAACxE,EAAMa,GAAC,OAClC,GAAXb,EAAK,IACH+D,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,UAAQH,UAAS,oBAAAnE,OAAsBxB,IAAawC,EAAI,WAAa,mBAAkB,oCAAoC6D,MAAO,CAAEE,cAAe,OAASN,QAAS,SAAC7B,GAnUxL4U,EAAsB,SAmUqM/Y,GAAauC,EAAG,EAAEoD,SAAU5E,GAASW,EAAK,KAAlBa,GAE/NxC,IAAawC,GACXsD,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAtB,UAIEE,EAAAA,EAAAA,KAAA,OAAKH,UAAS,KAAAnE,OAAOxB,IAAawC,EAAIuW,EAAqB,OAAM,sJAAsJ1S,MAAO,CAAE4X,IAAK,WAAYrY,UAC/OE,EAAAA,EAAAA,KAAC4B,EAAuB,CAACvC,SAAUrH,EAAMqH,SAAU4D,wBAAyBA,GAAyB+U,UAAWhgB,EAAMggB,UAAW9d,UAAWA,GAAW8I,aAAcnH,EAAK,GAAI+H,eAAgB/H,EAAK,UAIvMmE,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,QAMNpB,EAAAA,EAAAA,KAAA,UAAQE,UAAQ,EAACL,UAAU,uEAA+EU,MAAO,CAAEE,cAAe,OAAQX,SAAE5E,GAASW,EAAK,KAAnDa,EACxG,YAQXkD,EAAAA,EAAAA,MAAA,WAASC,UAAU,qCAAoCC,SAAA,EACrDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sCAAqCC,UAClDE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6CAA4CC,SAAC,oBAE7DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2DAA2DU,MAAO,CAAE6X,UAAW,OAAQ3G,UAAW,OAAQ4G,OAAQ,OAAQvY,UACvIF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,mBAAkBC,SAAA,EACjCE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,gDAAgDU,MAAO,CAAEmR,SAAU,WAAY5R,SAAA,EAC3FE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,gCAA+BC,SAAC,YAC9CE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,gCAA+BC,SAAC,cAC9CE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,+BAA8BC,SAAC,UAC7CE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oBAAmBC,SAAC,aAClCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oCAAmCC,SAAC,YAClDE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oBAAmBC,SAAC,aAClCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,gCAA+BC,SAAC,YAC9CE,EAAAA,EAAAA,KAAA,MAAIH,UAAS,mCAAAnE,OAAqC2W,EAAWiG,yBAA2B,GAAK,QAASxY,SAAC,UACvGE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,gCAA+BC,SAAC,iBAC9CE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,gCAA+BC,SAAC,cAIlC,GAAd2S,GACEzS,EAAAA,EAAAA,KAAA,SAAOH,UAAU,kBAAiBC,UAChCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,kEAAiEC,UAC7EE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,gFAMlBG,EAAAA,EAAAA,KAAA,SAAAF,SAEImK,QAAsCvK,IAAnBuK,GAA0D,GAA1BA,EAAgB5O,QACjE2E,EAAAA,EAAAA,KAAA,MAAAF,UAAIE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,0FAAyFC,SAAC,4BAEhHmK,EAAgB5J,KAAI,SAACxE,EAAMa,GAAC,OAC1BkD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcC,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,MAAIH,UAAS,WAAAnE,OAAamX,IAAenW,EAAI,cAAgB,GAAE,iBAAgBoD,UAC7EE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,cAAsBM,QAAS,SAAC7B,GA5fpD,SAApByU,IACFC,EAAmB,SACnByB,IAAU,IA0fgG3B,EAAcpW,GAAIyW,GAAiBtX,EAAKqB,GAAI,EAAE4C,UAC9HE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,wBAAyBkB,IAAI,mBAAmB3B,UAAU,aAAiBnD,IAD3EA,MAIvCsD,EAAAA,EAAAA,KAAA,MAAIH,UAAU,0BAA0BU,MAAO,CAAEE,cAAe,OAAQX,SAAEjE,EAAK0c,QAAU,KAAK1c,EAAK0c,QAAQ,MAC3GvY,EAAAA,EAAAA,KAAA,MAAIH,UAAU,0BAA0BU,MAAO,CAAEE,cAAe,OAAQX,SAAE5E,GAASW,EAAK2c,SAASxa,cACjGgC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,QAAOC,UACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAcU,MAAO,CAAEC,MAAO,eAAgBV,SAAA,EAC3DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,CACnDjE,EAAK4c,SAAqC,OAA3B5c,EAAK4c,QAAQnV,UAAqBzH,EAAK4c,QAAQnV,UAAoB,MAAuB,MAAhBzH,EAAK4c,SAAsD,GAAnC5c,EAAK4c,QAAQC,qBAA0B1Y,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAyBS,IAA8B,sBAAuBC,MAAO,CAACoY,MAAM,SAAU,OAEhR3Y,EAAAA,EAAAA,KAAA,SAAOH,UAAU,2CAA2CU,MAAO,CAAEE,cAAe,OAAQX,SACzFjE,EAAK4c,SAAuC,MAA7B5c,EAAK4c,QAAQjV,aAAuB3H,EAAK4c,QAAQjV,aAAuB,cAK9FxD,EAAAA,EAAAA,KAAA,MAAIH,UAAU,mBAAkBC,UAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAoBC,UACjCE,EAAAA,EAAAA,KAAA,OAAKH,UAAS,kCAAAnE,OAAoCka,GAAa/Z,EAAK+b,oBAAmB,aAAarX,MAAO,CAAE6Q,OAAQ,OAAQ5Q,MAAO,aAEtIR,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,UAAQM,SAAyC,GAA/BmS,EAAWuG,iBAAsC/Y,UAAS,8CAAiDmB,KAAMnF,EAAKqB,GAAI2D,SAAU,SAACvC,IA3btL,SAC0BwC,GAAAyF,GAAAhJ,MAAC,KAADC,UAAA,CA0boKsI,CAAaxH,EAAG,EAAEwB,SAAA,EAC/KE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,UAAUoB,UAAQ,EAACf,UAAQ,EAAAJ,SAAEwG,GAAOzK,EAAK+b,sBAEzD1C,IAAsBA,GAAmB7Z,OAAS,GAAK6Z,GAAmB7U,KAAI,SAACxE,GAAI,OACjFmE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,UAAU5C,MAAOpB,EAAKqB,GAAG4C,SAAEjE,EAAK6E,OAAe,eAS7Ed,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA+BU,MAAO,CAAEmR,SAAU,UAAWjR,cAAe,OAAQX,SAAA,CAAC,SAChGjE,EAAKyQ,iBAET1M,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,4CAA4CM,QAAS,WAAQmU,GAAa5X,GAAIuZ,IAAoB,EAAEnW,UACpHE,EAAAA,EAAAA,KAAC6Y,EAAAA,EAAU,CAACC,gBAAiBjd,EAAMkd,MAAOrc,EAAGiK,gBAAiBA,OAG9D0N,IAAa3X,GACXkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,sKAAAnE,OAAwK2Y,IAAa3X,EAAI6X,GAAe,QAASzU,UAC5NE,EAAAA,EAAAA,KAACgZ,EAAAA,EAAQ,CAAC9C,kBAAmBC,GAAoBpW,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAI1E,cAAe/C,EAAKqB,GAAI2B,UAAWhD,EAAK4c,SAA8B,MAAnB5c,EAAK4c,QAAQvb,GAAarB,EAAK4c,QAAQvb,GAAK,GAAIyJ,gBAAiBA,GAAiB+L,cAAeA,EAAeC,UAAWA,EAAW1I,gBAAiBA,EAAiBoK,UAAWA,WAG3XrU,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,WAIXpB,EAAAA,EAAAA,KAAA,MAAIH,UAAS,wBAAAnE,OAA0BwJ,KAAexI,EAAI,cAAgB,IAAKoD,UAACE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,cAAcM,QAAS,WAAQgF,GAAczI,GAzapJ,SAAfgX,IACFC,GAAc,SAwayK5N,GAAqBlK,EAAKqB,GAAI,EAAE4C,UAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,qBAAsBkB,IAAI,0BAC/P5B,EAAAA,EAAAA,MAAA,MAAIC,UAAS,uBAAAnE,OAAyB2W,EAAWiG,yBAA2B,GAAK,OAAM,QAAA5c,OAAOqY,KAAcrX,EAAI,cAAgB,IAAKoD,SAAA,CAAC,KAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,mBAAoBH,QAAS,WAAQ6T,GAAatX,GA3WnO,SAAbuX,IACFC,GAAY,QA0W0P,EAAG1S,IAAI,mBAAmB3B,UAAU,SAAS,SAC7RG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,yBAAAnE,OAA2B4X,KAAqB5W,EAAI,cAAgB,IAAKoD,UACpFF,EAAAA,EAAAA,MAAA,UAAQC,UAAS,mDAAAnE,OAAqD4X,KAAqB5W,EAAI,cAAgB,eAAgBoD,SAAA,EAC7HE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,sBAAuBH,QAAS,WAAQoT,GAAoB7W,GAAI2U,IAAqB,EAAG7P,IAAI,mBAAmB3B,UAAU,UAC5JG,EAAAA,EAAAA,KAAA,QAAMyB,MAAK,gGAAmGlB,MAAO,CAAE6C,OAAQ,IAAK+U,IAAK,OAAQrY,SAC9ImK,EAAgBvN,GAAGuc,cAAc5d,eAIxC2E,EAAAA,EAAAA,KAAA,MAAIH,UAAU,cAAaC,UACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,iEAAiEI,KAAK,SAAS,iBAAe,WAAW,gBAAc,QAAOH,UAC9IE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,mBAAoBkB,IAAI,mBAAmB3B,UAAU,iBAE1FD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA8BU,MAAO,CAAE,qBAAsB,OAAQ,WAAc,OAAQC,MAAO,cAAe4Q,OAAQ,eAAgBtR,SAAA,EACrJF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iFAAiFM,QAAS,kBAxLlHjD,EAwLoIrB,EAAKqB,GAvL7J/E,aAAa+gB,QAAQ,gBAAgBhc,QACrCmZ,OAAOC,KAAK,qBAAqB,UAFd,IAACpZ,CAwL4I,EAAC4C,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,sBAAuBkB,IAAI,qBAAoB,wBAChP5B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iFAAiFM,QAAS,WAAQqW,GAAsB3a,EAAKqB,GAAI,EAAE4C,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,kBAAmBkB,IAAI,qBAAqB,6BAC3P5B,EAAAA,EAAAA,MAAA,MAAIC,UAAS,KAAAnE,OAA+B,MAAxBG,EAAKsd,kBAAwB,OAAO,GAAE,mFAAmFhZ,QAAS,WAAM0U,GAAUnY,EAAE,EAAEoD,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,wBAAyBkB,IAAI,qBAAoB,wBACzR5B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iFAAiFM,QAAS,WAAQiW,GAAcva,EAAKqB,GAAI,EAAE4C,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,kBAAmBkB,IAAI,qBAAqB,qBACnP5B,EAAAA,EAAAA,MAAA,MAAIC,UAAS,KAAAnE,OAAuB,MAAhBG,EAAKud,UAAgB,OAAO,GAAE,mFAAmFjZ,QAAS,WAAQ4U,GAAUrY,EAAG,EAAEoD,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,wBAAyBkB,IAAI,qBAAqB,iBACrR5B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iFAAiFM,QAAS,WApRvG,IAACjD,EAAIyZ,EAAJzZ,EAoRuIrB,EAAKqB,GApRxIyZ,EAoR4I9a,EAAK4c,QAAQjV,cAlR7L7B,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,yBAAD,+BAGnB,0BACA,8BAEA,WACEoX,GAAiBxZ,EAAIyZ,EAAO,EAC9B,IACA,WACED,GAAiBxZ,EAAIyZ,EAAO,EAC9B,GAIA,CACA,EAiQyM,EAAE7W,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,uBAAwBkB,IAAI,qBAAqB,yBAC9R5B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iFAAiFM,QAAS,WAnOtG,IAACjD,EAAIyZ,EAAJzZ,EAmOuIrB,EAAKqB,GAnOxIyZ,EAmO4I9a,EAAK4c,QAAQjV,cAjO9L7B,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,yBAAD,+BAGnB,0BACA,8BACA,WACE0X,GAAY9Z,EAAIyZ,EAAO,EACzB,IACA,WACEK,GAAY9Z,EAAIyZ,EAAO,EACzB,GACA,CACA,EAoN0M,EAAE7W,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAqBS,IAA8B,sBAAuBkB,IAAI,qBAAsB,kBACpS5B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iFAAiFM,QAAS,WAAQmX,KAAejE,GAAa3W,EAAG,EAAEoD,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,uBAAyBkB,IAAI,qBAAqB,oBACjQ5B,EAAAA,EAAAA,MAAA,MAAIC,UAAS,yEAAAnE,OAA2E2W,EAAWiG,yBAA2B,OAAS,QAAUnY,QAAS,WAAQiU,GAAiB1X,GAAIuZ,IAAoB,EAAEnW,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,oBAAsBT,UAAU,iBAAiB2B,IAAI,qBAAqB,eAC3T5B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,mEAAmEM,QAAS,kBAAMqQ,GAAe3U,EAAK4c,QAAQnV,UAAWzH,EAAKqB,GAAG,EAAC4C,SAAA,EAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBS,IAA8B,sBAAuBkB,IAAI,qBAAoB,2BAIjQqR,IAAenW,GACbkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,sIAAAnE,OAAwImX,GAAcnW,EAAIqW,EAAkB,OAAM,sBAAqBjT,UAClNE,EAAAA,EAAAA,KAACjI,EAAiB,CAACsH,SAAUrH,EAAMqH,SAAUD,yBAA0BpH,EAAMoH,yBAA0BW,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAIzE,UAA2B,MAAhBhD,EAAK4c,SAAsC,MAAnB5c,EAAK4c,QAAQvb,GAAarB,EAAK4c,QAAQvb,GAAK,GAAI0B,cAAe/C,EAAKqB,GAAI+V,mBAAoBA,EAAoB7S,qBAAsBA,GAAsB7G,SAAUvB,EAAMuB,SAAUwD,oBAAqBlB,EAAKwd,OAAOnc,GAAIa,gBAAiBlC,EAAKyd,iBAAkBnY,gBAAiBjG,GAASW,EAAK2c,SAASxa,mBAEzhBgC,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAGL8D,KAAexI,GACbkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,uCAAAnE,OAAyCwJ,IAAcxI,EAAIgX,GAAa,QAAUnT,MAAO,CAAE6C,OAAQ,KAAMtD,UACpHE,EAAAA,EAAAA,KAACuE,EAAe,CAACwB,qBAAsBA,GAAsBY,gBAAiBA,GAAiBC,YAAaA,GAAa7G,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAI1E,cAAe/C,EAAKqB,GAAI2J,sBAAuBA,GAAuB/B,WAAYA,GAAYjG,UAAWhD,EAAK4c,SAA8B,MAAnB5c,EAAK4c,QAAQvb,GAAarB,EAAK4c,QAAQvb,GAAK,WAElY8C,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAGL2S,IAAarX,GACXkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAEfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,UAAAnE,OAAYqY,IAAarX,EAAIuX,GAAW,OAAM,uHAAuH1T,MAAO,CAAE6C,OAAQ,IAAIgO,OAAO,QAAStR,UACrNE,EAAAA,EAAAA,KAACuZ,EAAAA,EAAI,CAACla,SAAUrH,EAAMqH,SAAU2W,cAAeA,GAAenX,UAAWhD,EAAK4c,SAA8B,MAAnB5c,EAAK4c,QAAQvb,GAAarB,EAAK4c,QAAQvb,GAAK,GAAIsG,aAAgC,MAAhB3H,EAAK4c,SAAgD,MAA7B5c,EAAK4c,QAAQjV,aAAuB3H,EAAK4c,QAAQjV,aAAe,GAAIzD,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAIqD,gBAAiBA,GAAiB+L,cAAeA,EAAeC,UAAWA,EAAW1C,KAAMpU,EAAMoO,gBAAiBA,EAAiBrL,cAAe/C,EAAKqB,GAAIsc,UAAW3d,EAAKwd,OAAOI,eAAgBxF,SAAUA,WAEtiBjU,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAGL+S,KAAkBzX,GAChBkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,4IAAAnE,OAA8IyY,IAAiBzX,EAAI6X,GAAe,QAAUhU,MAAO,CAAE6C,OAAQ,KAAMtD,UAC9NE,EAAAA,EAAAA,KAACgZ,EAAAA,EAAQ,CAAC9C,kBAAmBA,GAAmBnW,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAI1E,cAAe/C,EAAKqB,GAAI2B,UAAWhD,EAAK4c,SAA8B,MAAnB5c,EAAK4c,QAAQvb,GAAarB,EAAK4c,QAAQvb,GAAK,GAAIyJ,gBAAiBA,GAAiB+L,cAAeA,EAAeC,UAAWA,EAAW1I,gBAAiBA,UAE9VjK,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAGLkS,IAAoB5W,GAClBkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,kEAAAnE,OAAoE4X,IAAoB5W,EAAIkX,GAAc,OAAM,KAAKrT,MAAO,CAAE6C,OAAQ,IAAKgO,OAAQ,QAAStR,UACvKE,EAAAA,EAAAA,KAACmH,EAAc,CAAC8C,gBAAiBA,EAAgBvN,GAAIiK,gBAAiBA,GAAiBiK,mBAAoB3G,EAAgBvN,GAAGuc,cAAcvV,UAAW3D,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAI1E,cAAe/C,EAAKqB,GAAImU,kBAAmBA,WAGtSrR,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAGLgS,IAAa1W,GACXkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,sJAAAnE,OAAwJ0X,IAAa1W,EAAI0W,GAAY,QAAU7S,MAAO,CAAE6C,OAAQ,IAAKgO,OAAQ,QAAStR,UACjPE,EAAAA,EAAAA,KAAC0Z,EAAAA,GAAa,CAAC7d,KAAMA,EAAMoc,SAAUjgB,EAAMigB,SAAUC,WAAYlgB,EAAMkgB,WAAY9E,UAAWA,GAAWkE,YAAaA,GAAavX,YAA6B,MAAhBlE,EAAK4c,SAA6C,MAA1B5c,EAAK4c,QAAQnV,UAAoBzH,EAAK4c,QAAQnV,UAAY,GAAIzE,UAAWhD,EAAK4c,SAA8B,MAAnB5c,EAAK4c,QAAQvb,GAAarB,EAAK4c,QAAQvb,GAAK,WAG9S8C,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAILwT,IAAUlY,GACRkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACAE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,uJAAAnE,OAAyJkZ,IAAUlY,EAAIkY,GAAS,QAAUrU,MAAO,CAAE6C,OAAQ,IAAKgO,OAAQ,QAAStR,UAC9OE,EAAAA,EAAAA,KAAC2Z,EAAAA,EAAY,CAACC,cAAe/d,EAAKsd,kBAAmB5B,mBAAoBA,WAGxEvX,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,IAGH0T,IAAUpY,GACRkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACAE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cACfG,EAAAA,EAAAA,KAAA,MAAIH,UAAS,sJAAAnE,OAAwJoZ,IAAUpY,EAAIoY,GAAS,QAAUvU,MAAO,CAAE6C,OAAQ,IAAKgO,OAAQ,QAAStR,UAC7OE,EAAAA,EAAAA,KAAC6Z,EAAAA,EAAc,CAACC,KAAMje,EAAKud,UAAW5B,mBAAoBA,WAGzDxX,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,MAEF,kBAa/B,CAGA,SAAS2Y,EAAS/hB,GAChB,IAAMM,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBwhB,GAAazhB,EAAAA,EAAAA,YAAW0hB,EAAAA,IACxBC,GAAU3hB,EAAAA,EAAAA,YAAWyJ,EAAAA,IAC3BmY,GAAkCnhB,EAAAA,EAAAA,YAAUohB,GAAAlhB,EAAAA,EAAAA,GAAAihB,EAAA,GAArCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BvhB,EAAAA,EAAAA,UAAS,IAAGwhB,GAAAthB,EAAAA,EAAAA,GAAAqhB,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtB,SAASG,EAAKC,EAAOC,GACnBD,EAAQA,EAAMnX,MAAM,KACpBoX,EAAMA,EAAIpX,MAAM,KAChB,IAAIqX,EAAY,IAAIC,KAAK,EAAG,EAAG,EAAGH,EAAM,GAAIA,EAAM,GAAI,GAElDD,EADU,IAAII,KAAK,EAAG,EAAG,EAAGF,EAAI,GAAIA,EAAI,GAAI,GAC7BG,UAAYF,EAAUE,UACrCC,EAAQC,KAAKC,MAAMR,EAAO,IAAO,GAAK,IAC1CA,GAAgB,IAARM,EAAe,GAAK,GAC5B,IAAIG,EAAUF,KAAKC,MAAMR,EAAO,IAAO,IAIvC,OAHIM,EAAQ,IACVA,GAAgB,KAED,GAATA,GAAeA,GAAS,EAAI,IAAM,IAAMA,EAAQ,OAAU,KAAOG,GAAW,EAAI,IAAM,IAAMA,EAAU,MAChH,CAEA,SAASlgB,EAASpB,GAShB,OAPAA,EAAOA,EAAKqB,WAAWC,MAAM,6CAA+C,CAACtB,IAEpEuB,OAAS,KAChBvB,EAAOA,EAAKwB,MAAM,IACb,IAAMxB,EAAK,GAAK,GAAK,OAAS,OACnCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAEtBA,EAAKyB,KAAK,GACnB,CACA,IAAA8f,GAA4BriB,EAAAA,EAAAA,UAAS,IAAGsiB,GAAApiB,EAAAA,EAAAA,GAAAmiB,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACxBG,GAAgCziB,EAAAA,EAAAA,YAAU0iB,GAAAxiB,EAAAA,EAAAA,GAAAuiB,EAAA,GAArC9I,EAAS+I,EAAA,GAAE9I,EAAY8I,EAAA,GAC5BC,GAAgC3iB,EAAAA,EAAAA,WAAS,GAAM4iB,GAAA1iB,EAAAA,EAAAA,GAAAyiB,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBjiB,EAAWxB,aAAaC,QAAQ,YAAY,SAEjCiH,IAAQ,OAAA0c,EAAAxe,MAAC,KAADC,UAAA,UAAAue,IAYtB,OAZsBA,GAAA1f,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAvB,SAAAyf,IAAA,OAAA1f,EAAAA,EAAAA,KAAAK,MAAA,SAAAsf,GAAA,cAAAA,EAAApf,KAAAof,EAAAnf,MAAA,OACqB,OAAnB8V,GAAa,GAAMqJ,EAAAnf,KAAA,EACbrB,EAAAA,EAAAA,IAAU,GAADC,OAAIpD,EAAG,uCAAAoD,OAAsC1D,EAAMkkB,MAAK,eAAAxgB,OAAc/B,IAAYgC,MAAK,SAACC,GAEpE,GAA7BA,EAASC,KAAKA,KAAKR,QAIrBmgB,EAAW5f,EAASC,KAAKA,KAAK6H,WAH9BkP,GAAa,EAMjB,IAAE,wBAAAqJ,EAAA3e,OAAA,GAAA0e,EAAA,MACHze,MAAA,KAAAC,UAAA,CACD,IAAA2e,GAA+CnjB,EAAAA,EAAAA,WAAS,GAAMojB,GAAAljB,EAAAA,EAAAA,GAAAijB,EAAA,GAAvDE,EAAgBD,EAAA,GAAEE,EAAkBF,EAAA,GAC3CG,GAAoCvjB,EAAAA,EAAAA,UAAS,KAAIwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAA1CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAEJ,SAAAG,IA4B3B,OA5B2BA,GAAAtgB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAqgB,IAAA,IAAAvkB,EAAA,OAAAiE,EAAAA,EAAAA,KAAAK,MAAA,SAAAkgB,GAAA,cAAAA,EAAAhgB,KAAAggB,EAAA/f,MAAA,OAE2C,GADzCgf,GAAa,GACTzjB,EAAUF,aAAaC,QAAQ,QAC/BuB,GAAY8iB,GAAczkB,EAAMkkB,OAAS7jB,GAAO,CAAAwkB,EAAA/f,KAAA,gBAAA+f,EAAAhgB,KAAA,EAAAggB,EAAA/f,KAAA,EAE1CrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,sBAAsB,CAC3C0G,UAAWrF,EACXmjB,QAASL,EACT1d,UAAW/G,EAAMkkB,MACjB/c,SAAU9G,IACTsD,MAAK,SAACC,GACPkgB,GAAa,GACbxc,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SACtCya,GAEF,IAAE,cAAA6C,EAAA/f,KAAA,EACIuC,IAAW,KAAD,EAAAwd,EAAA/f,KAAA,iBAAA+f,EAAAhgB,KAAA,GAAAggB,EAAA5W,GAAA4W,EAAA,SAGhBvd,IAAAA,OAAAA,QAAwBud,EAAA5W,GAAE1G,SAE1Buc,GAAa,GAAM,QAAAe,EAAA/f,KAAA,iBAIrBwC,IAAAA,OAAAA,MAAsB,2BACtBwc,GAAa,GAAM,yBAAAe,EAAAvf,OAAA,GAAAsf,EAAA,oBAEtBrf,MAAA,KAAAC,UAAA,UAEcuf,EAAWC,GAAA,OAAAC,EAAA1f,MAAC,KAADC,UAAA,UAAAyf,IAqBzB,OArByBA,GAAA5gB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAA2gB,EAA2BrhB,GAAI,IAAAxD,EAAA8kB,EAAA,OAAA7gB,EAAAA,EAAAA,KAAAK,MAAA,SAAAygB,GAAA,cAAAA,EAAAvgB,KAAAugB,EAAAtgB,MAAA,OAGT,OAFhBzE,EAAUF,aAAaC,QAAQ,MACnCkkB,GAAmB,GACfa,EAASthB,EAAKqB,GAAEkgB,EAAAvgB,KAAA,EAAAugB,EAAAtgB,KAAA,EAEZrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,oBAAoB,CACzC6G,SAAU9G,EACV8kB,OAAQA,IACPxhB,MAAK,SAACC,GACP0D,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,SAEtCya,GACF,IAAE,cAAAoD,EAAAtgB,KAAA,EACIuC,IAAW,KAAD,EAChBid,GAAmB,GAAMc,EAAAtgB,KAAA,iBAAAsgB,EAAAvgB,KAAA,GAAAugB,EAAAnX,GAAAmX,EAAA,SAGzB9d,IAAAA,OAAAA,QAAwB8d,EAAAnX,GAAE1G,SAC1B+c,GAAmB,GAAO,yBAAAc,EAAA9f,OAAA,GAAA4f,EAAA,oBAG7B3f,MAAA,KAAAC,UAAA,CAaD,OAZAhC,EAAAA,EAAAA,YAAU,WACR6D,GACF,GAAG,CAACrH,EAAMsd,aAEV9Z,EAAAA,EAAAA,YAAU,WACR,IAAK,IAAIkB,EAAI,EAAGA,EAAIwd,EAAQ7e,OAAQqB,IAC9Bwd,EAAQxd,GAAGQ,IAAMC,OAAOxD,IAC1B+gB,EAASR,EAAQxd,GAAG+d,MAI1B,GAAG,CAAC9gB,KAEFiG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFC,SAAA,EAC9FE,EAAAA,EAAAA,KAAA,OAAK9C,GAAG,WAAW2C,UAAS,KAAAnE,OAAOiX,EAAY,OAAS,eAAgB7S,UACtEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAyC3C,GAAG,QAAO4C,UAChEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,sCAAqCC,SAAC,UACnDE,EAAAA,EAAAA,KAAA,UAAQa,SAAU,SAACvC,GAAQoe,EAAcpe,EAAEE,OAAOvB,MAAO,EAAG4C,UAAU,+FAA+F3C,GAAG,cAAa4C,SAGjL2a,EAAMpa,KAAI,SAACxE,GAAI,OACbmE,EAAAA,EAAAA,KAAA,UAAQ/C,MAAOpB,EAAKqB,GAAG4C,SAAEjE,EAAKwhB,aAAqB,MAOvDxB,GACE7b,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uDAAuD6B,KAAK,SAAS,cAAY,UAEhG1B,EAAAA,EAAAA,KAAA,UAAQH,UAAU,8BAA8BM,QAvFd,WAEtB,OAAAwc,EAAApf,MAAC,KAADC,UAAA,EAqF2DsC,UAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAYS,IAA8B,+BAS3IqS,GAEE3S,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6CAA6C,cAAY,OAAOU,MAAO,CAAEC,MAAO,QAAS8c,WAAY,UAAWpL,cAAe,WAAYpS,UACxJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,uCAChBG,EAAAA,EAAAA,KAAA,QAAMH,UAAU,uCAChBG,EAAAA,EAAAA,KAAA,QAAMH,UAAU,2CAIpB0b,EAAQlb,KAAI,SAACxE,EAAMa,GAAC,OAClBsD,EAAAA,EAAAA,KAAA,OAAK9C,GAAG,sBAA8B2C,UAAU,oBAAmBC,UACjEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wCAAwC3C,GAAG,QAAO4C,UAC/DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,oDAAoDU,MAAO,CAAEmR,SAAU,WAAY5R,SAAC,UACjGE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,iDAAiD3C,GAAG,aAAY4C,SAC3EjE,EAAKihB,UAGNT,GAAoB3f,IAAM2d,GACxBra,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uDAAuD6B,KAAK,SAAS,cAAY,UAEhG9B,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EAEpDE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,OAAOJ,UAAU,2DAA2DU,MAAO,CAAEmR,SAAU,WAAY5R,SAAGjE,EAAK0hB,WAAcriB,EAASW,EAAK0hB,YAAc,MAC1Kvd,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAyBU,MAAO,CAAEid,QAAS,SAAU1d,SAAC,OACrEE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,OAAOJ,UAAU,yDAAyDU,MAAO,CAAEmR,SAAU,WAAY5R,SAAGjE,EAAK4hB,YAAeviB,EAASW,EAAK4hB,aAAe,WAI5Kzd,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaC,SAExBjE,EAAK4hB,aACHzd,EAAAA,EAAAA,KAAA,OAAK9C,GAAG,WAAW2C,UAAU,6DAA6DkB,aAAa,GAAGR,MAAO,CAAEmR,SAAU,WAAY5R,SAAEjE,EAAK4hB,YAAc9C,EAAK9e,EAAK0hB,WAAY1hB,EAAK4hB,aAAe,MAExMzd,EAAAA,EAAAA,KAAA,UAAQH,UAAU,0BAA0B5C,MAAOpB,EAAKqB,GAAIiD,QAAS,SAAC7B,GAAQye,EAAYlhB,GAAOye,EAAa5d,EAAG,EAAEoD,UAACE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,GAAGS,IAA8B,mBAAoBH,QAAS,SAAC7B,GAAQye,EAAYze,GAAIgc,EAAa5d,EAAG,mBA1B3NA,EA2C7B,MASlB,C,kCCn7BMoF,GAAa4b,EAAAA,EAAAA,iBACb3b,GAAW2b,EAAAA,EAAAA,iBA4IjB,MA3IA,SAAuB1lB,IACTO,EAAAA,EAAAA,YAAWC,EAAAA,IAAvB,IACM6Z,GAAa9Z,EAAAA,EAAAA,YAAW+Z,EAAAA,IAC9BvZ,GAA4BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhC4kB,EAAM1kB,EAAA,GAAE2kB,EAAS3kB,EAAA,GACxBI,GAA4BL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCwkB,EAAMvkB,EAAA,GAAEwkB,EAASxkB,EAAA,GACxBG,GAAgCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCwe,EAAQve,EAAA,GAAEqkB,EAAWrkB,EAAA,GAC5BE,GAAoCZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAvCse,EAAUre,EAAA,GAAEmkB,EAAankB,EAAA,GAChCG,GAAkChB,EAAAA,EAAAA,YAAUiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAArCge,EAAS/d,EAAA,GAAEgkB,EAAYhkB,EAAA,GAC9BG,GAAsCpB,EAAAA,EAAAA,UAAS,CAAC,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA5C8jB,EAAW7jB,EAAA,GAClBC,GADkCD,EAAA,IACErB,EAAAA,EAAAA,UAAS,SAAOuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA7C6jB,EAAU5jB,EAAA,GAAE6jB,EAAa7jB,EAAA,GAE1B8jB,EAAmB,WACJ,SAAfF,IACFP,EAAU,GACVQ,EAAc,UAEG,UAAfD,IACFP,EAAU,GACVQ,EAAc,QAElB,GAEA,WACE,IAAK,IAAIxgB,EAAI,EAAGA,EAAIsgB,EAAY7iB,SAC1B6iB,EAAYI,SAAST,GADajgB,IAIpCsgB,EAAY9gB,KAAKygB,EAGvB,CACAU,GAEA,IAAMC,EAA+B,SAACC,GACpC,IAAIC,EAAe,GACnB,QAA4Bhf,GAAzB1H,EAAM2mB,iBACP,IAAI,IAAI/gB,EAAE,EAAEA,EAAE5F,EAAM2mB,iBAAiBtjB,OAAOuC,IACvC6gB,GAASzmB,EAAM2mB,iBAAiB/gB,GAAGmB,WACpC2f,EAAathB,KAAKpF,EAAM2mB,iBAAiB/gB,IAIjD,OAAO8gB,EAAarjB,MACtB,EAGE,OACEuE,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yDAAwDC,UACrEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DC,SAAA,CAEtE9H,EAAM2a,WACJ/S,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAyBU,MAAO,CAAEC,MAAO,OAAQ4Q,OAAQ,QAAU1P,KAAK,SAAQ5B,SAAA,EAC7FE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,YAAiB,QACnCD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAuBU,MAAO,CAAEC,MAAO,SAAU4Q,OAAQ,UAAY1P,KAAK,SAAQ5B,SAAA,EAC/FE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,YAAiB,OAAO,OAE5C7H,EAAMqd,SAAShV,KAAI,SAACxE,EAAMa,GAAC,OACzBkD,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAA0BC,UACvCF,EAAAA,EAAAA,MAAA,UAAgBC,UAAS,wEAAAnE,OAA0EgB,IAAMmhB,EAAS,QAAU,uBAAsB,YAAAniB,OAAWgB,IAAMmhB,EAAS,WAAa,QAAO,YAAAniB,OAAWgB,IAAMmhB,EAAS,YAAc,QACtOtd,MAAO,CAAEmR,SAAU,UACnBkN,UAAWliB,IAAMmhB,EACjBgB,QAAS,WAAQd,EAAYliB,EAAK,IAAKmiB,EAAcniB,EAAK,IAAKoiB,EAAapiB,EAAK,GAAI,EACrFoB,MAAK,GAAAvB,OAAKG,EAAK,GAAE,KAAAH,OAAIG,EAAK,IAAMsE,QAAS,SAAC2e,GAAQhB,EAAUphB,GAAIqhB,EAAYliB,EAAK,IAAKmiB,EAAcniB,EAAK,GAAK,EAAEiE,SAAA,QAAApE,OAASG,EAAK,KAAK+D,EAAAA,EAAAA,MAAA,QAAMC,UAAU,8BAA6BC,SAAA,CAAE0e,EAA8B3iB,EAAK,IAAI,IAAyB,IAAvBkjB,EAAAA,EAAAA,GAAaljB,EAAK,KAAOmE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,eAAcC,UAACE,EAAAA,EAAAA,KAAA,OAAKM,IAA4B,sBAAuBT,UAAU,oBAAoBU,MAAO,CAACC,MAAM,eAAoBR,EAAAA,EAAAA,KAAA,cAAqB,MAJrZtD,MAMfsD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sCAAsCU,MAAO,CAAEid,QAAS,aACtE,KAGTxd,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUC,UACvBE,EAAAA,EAAAA,KAAA,UAAQH,UAAS,+BAAkC3C,GAAG,eAAeiD,QAASke,EAAiBve,UAC7FE,EAAAA,EAAAA,KAAA,OAAKM,IAA8B,sBAAuBkB,IAAI,+BAMtExB,EAAAA,EAAAA,KAAA,WAASH,UAAU,gDAA+CC,SAE9D9H,EAAMwO,SACJxG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBC,UACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EACpEE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,gBAAeC,SAAC,oBAClCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAyC6B,KAAK,SAAS,cAAY,cAKxF1J,EAAMqd,UAAqC,GAAzBrd,EAAMqd,SAASha,OAC/B6iB,EAAY7d,KAAI,SAACxE,EAAMa,GAAC,OACtBb,GAAQgiB,GACNje,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAS,kBAAAnE,OAAgD,GAA5B2W,EAAW2M,cAAqB,GAAK,QAASlf,UAC9EE,EAAAA,EAAAA,KAAC+Z,EAAQ,CAACmC,MAAOlkB,EAAMqd,SAASwI,GAAQ,GAAIvI,UAAWuI,OAEzD7d,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcC,UAI3BE,EAAAA,EAAAA,KAAC8B,EAAWmd,SAAQ,CAAChiB,MAAOib,EAAWpY,UACrCE,EAAAA,EAAAA,KAAC+B,EAASkd,SAAQ,CAAChiB,MAAOgb,EAASnY,UACrCE,EAAAA,EAAAA,KAACmS,EAAc,CAACkD,SAAUrd,EAAMqd,SAAU4C,SAAUA,EAAUC,WAAYA,EAAa5C,UAAWuI,EAAQxe,SAAUrH,EAAMqH,SAAU2Y,UAAWA,EAAWxC,qBAAsBxd,EAAMwd,+BAVhL9Y,IAgBVsD,EAAAA,EAAAA,KAAA,SACD,KAGHA,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EACpEE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,kBAAiBC,SAAC,oBACpCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAyC6B,KAAK,SAAS,cAAY,gBAMlF,GAAVic,GACE3d,EAAAA,EAAAA,KAAA,OAAKH,UAAS,0DAAAnE,OAA4DyiB,EAAU,oFAAoF5d,MAAO,CAAE6C,OAAQ,IAAK8b,UAAW,UAAWpf,UAC1ME,EAAAA,EAAAA,KAAC8B,EAAWmd,SAAQ,CAAChiB,MAAOib,EAAWpY,UACnCE,EAAAA,EAAAA,KAAC+B,EAASkd,SAAQ,CAAChiB,MAAOgb,EAASnY,UAC/CE,EAAAA,EAAAA,KAACmf,EAAAA,EAAa,CAACd,iBAAkBA,EAAkBe,gBAAiB,kBAAmB/f,SAAUrH,EAAMqH,kBAKzGW,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,MAOV,C,6JCjJM+d,EAAgB,SAACnnB,GACrB,IAAMM,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,IAEjB6mB,IADU9mB,EAAAA,EAAAA,YAAW2J,EAAAA,KACX3J,EAAAA,EAAAA,YAAWK,EAAAA,KACrBC,GAAeN,EAAAA,EAAAA,YAAWO,EAAAA,IAC1BK,GAAaZ,EAAAA,EAAAA,YAAWyJ,EAAAA,IACxB9J,EAAWC,aAAaC,QAAQ,YACtCW,GAAkDC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDumB,EAAiBrmB,EAAA,GAAEsmB,EAAoBtmB,EAAA,GAC9CI,GAA8BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCmmB,EAAOlmB,EAAA,GAAEmmB,EAAUnmB,EAAA,GAC1BG,GAAgCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCqK,EAAQpK,EAAA,GAAEqK,EAAWrK,EAAA,GAC5BE,GAA4BZ,EAAAA,EAAAA,YAAUa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA/BoK,EAAMnK,EAAA,GAAEoK,EAASpK,EAAA,GACxBG,GAAwBhB,EAAAA,EAAAA,YAAUiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA3BQ,EAAIP,EAAA,GAAEQ,EAAOR,EAAA,GAEhBkF,EAAWhH,aAAaC,QAAQ,MACJ,SAAAsnB,IAsB/B,OAtB+BA,GAAArjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAhC,SAAAsG,EAAiCvE,GAAC,OAAAhC,EAAAA,EAAAA,KAAAK,MAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,YAE5BwiB,GAAqBE,GAAW1b,GAAYE,GAAU9L,GAAYiH,GAAQ,CAAA2D,EAAAhG,KAAA,QAC/D,OAAbrC,GAAQ,GAAKqI,EAAAhG,KAAA,EACPrB,EAAAA,EAAAA,KAAW,GAADC,OAAIpD,EAAG,yBAAyB,CAC9CyG,UAAWugB,EACXxhB,KAAM0hB,EACNxhB,UAAW8F,EACXO,QAASL,EACThF,UAAW9G,EACXiH,SAAUA,IACTxD,MAAK,SAACC,GACP5D,EAAMqmB,mBACNsB,IACAllB,GAAQ,GACRzC,EAAMqH,WACNC,IAAAA,OAAAA,QAAwB1D,EAASC,KAAK0D,QACxC,IAAE,OAAAuD,EAAAhG,KAAA,eAEFwC,IAAAA,OAAAA,QAAwB,0BACxB7E,GAAQ,GAAM,wBAAAqI,EAAAxF,OAAA,GAAAuF,EAAA,MAEjBtF,MAAA,KAAAC,UAAA,CAGD,IAAApD,GAAoCpB,EAAAA,EAAAA,UAAS,QAAOqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAW9CulB,GAXWtlB,EAAA,GAAeA,EAAA,GAWd,WAChBklB,IACAE,IACA1b,IACAE,GACF,GAoBMtE,EAAmB,SAAC/D,GACxB,IAAK,IAAI6D,EAAI,EAAGA,EAAI5G,EAAawC,OAAQoE,IACvC,QAA2BC,IAAvB7G,EAAa4G,GAAG,IACd5G,EAAa4G,GAAG,IAAM7D,EACxB,MAAO,iBAKf,EACA,OAEEgE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,2BAA0BC,SAAC,kBACzCE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAU,uCAAuCK,SAAkB,GAAR1F,EAA6B,aAAW,QAAQ2F,QAASnI,EAAMqmB,oBAChJre,EAAAA,EAAAA,KAAA,UACAJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,OAAMC,SAAC,YACxBF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,mCAAmC5C,MAAOqiB,GAAwC,GAAIze,SAAU,SAACvC,GAAQihB,EAAqBjhB,EAAEE,OAAOvB,MAAO,EAAE6C,SAAA,EAChKE,EAAAA,EAAAA,KAAA,UAAQe,aAAa,gBAAejB,SAAC,kBAEnCuf,EAAQhf,KAAI,SAACxE,GAAI,OACf+D,EAAAA,EAAAA,MAAA,UAAQ3C,MAAOpB,EAAK,GAAGiE,SAAA,CAAC,OAAKjE,EAAK,GAAI,IAAK8D,EAAiB9D,EAAK,MAAa,WAKtFmE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAOH,UAAU,OAAMC,SAAC,YAExBE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,SAAQC,SAEnB3G,EAAWkH,KAAI,SAACxE,EAAMa,GAAC,OACrBkD,EAAAA,EAAAA,MAAA,SAAOC,UAAS,KAAAnE,OAAOxD,GAAY2D,EAAKqB,GAAK,QAAU,OAAM,oBAAmB4C,SAAA,EAACE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWJ,UAAU,8BAA8B+f,QAAS1nB,GAAY2D,EAAKqB,KAAqB,IAAErB,EAAK6E,MAAM,IAAE7E,EAAK8E,UAAgB,OAKzOX,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAOH,UAAU,OAAMC,SAAC,UACxBE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,SAAQC,UAACE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOJ,UAAU,sBAAsB5C,MAAOuiB,GAAoB,GAAI3e,SAAU,SAACvC,GAAQmhB,EAAWnhB,EAAEE,OAAOvB,MAAO,OACxJ+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAAF,SAAQ,eACRE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,SAAQC,UAACE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOJ,UAAU,sBAAsB5C,MAAO6G,GAAsB,GAAIjD,SAAU,SAACvC,GAAQyF,EAAYzF,EAAEE,OAAOvB,MAAO,OAC3J+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAAF,SAAO,aACPE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,SAAQC,UAACE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOJ,UAAU,sBAAsB5C,MAAO+G,GAAkB,GAAInD,SAAU,SAACvC,GAAQ2F,EAAU3F,EAAEE,OAAOvB,MAAO,OACrJ+C,EAAAA,EAAAA,KAAA,SAEExF,GACEwF,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iBAAiBC,KAAK,SAAQ5B,UACvCE,EAAAA,EAAAA,KAAA,QAAMyB,MAAM,kBAAiB3B,SAAC,oBAIlCF,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qCAAoCC,UACjDE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAU,8BAA8BM,QA7EnD,SAAC7B,GACtBA,EAAEgD,kBACFK,EAAAA,EAAAA,KACArC,IAAAA,QAAAA,KAAsB,wBAAD,iDAGnB,MACA,MACA,YAnDsC,SACVwB,GAAA4e,EAAAniB,MAAC,KAADC,UAAA,CAmD1BqiB,EACF,IACA,WACE,OAAO,CACT,GACA,CACA,EAEJ,EA4DkG/f,SAAE,cAE1FE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gCAA+BC,UAC5CE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,2BAA2BM,QAASwf,EAAU7f,SAAC,iBAO/E,C","sources":["components/Today/UpdateAppointment.jsx","components/Appointments/SelectedTimeAppointment.jsx","components/Today/SelectedDoctorSlot.jsx","components/Today/Vitals.jsx","components/Today/AddConsumables.jsx","components/Today/Doctor.jsx","components/App/Clinic.jsx","components/Today/AddDoctorSlot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const confirmmessageforCancel = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Cancel Appointment`,\r\n            `Do you surely want to Cancel ${props.patientname}'s Appointment`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                CancelAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const CancelAppointment = async () => {\r\n        try {\r\n            await axios.post('http://aartas-qaapp-as.azurewebsites.net/aartas_redev/public/api/cancel/appointment', {\r\n                appointment_id: props.appointmentid\r\n            }).then((response) => {\r\n                \r\n                if (response.status == true) {\r\n                    props.fetchallAppointmentslist()\r\n                    props.fetchapi()\r\n                } else {\r\n                    Notiflix.Notify.failure(\"Cannot Cancel Appointment.Please try again.\")\r\n                }\r\n\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center p-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell border-0 p-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-end text-charcoal `}>\r\n                                <div className=\"row p-0 m-0 align-items-end\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img className='img-fluid' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold text-wrap mb-2\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal rounded-1 bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>Dr. {data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\" border-0 col-12 bg-seashell \"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell rounded-1 border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal50 fw-bold'>Selected Time</label>\r\n                        <div className=\"col-12 p-0 m-0 selectedtime\">\r\n                            <button className='button button-charcoal50-outline rounded-1 fw-bold shadow-none' style={{ letterSpacing: '1px' }} >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <p className=\"m-0 mt-2 fw-bold ps-2 pt-2\" style={{ letterSpacing: '1px' }}>Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ps-2\">\r\n                    {ApiDocTimefrom && ApiDocTimefrom.length !== 0 ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} px-3 py-2 rounded-1 fw-bold m-1`} style={{ letterSpacing: '1px' }} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline rounded-1 px-3 py-2 m-1 fw-bold\" style={{ letterSpacing: '1px' }} id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded fw-bold text-burntumber bg-lightred'>No Time Slots Available</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button className='btn button-charcoal' onClick={confirmmessage}>Update</button>\r\n                                </div>\r\n\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button type=\"button\" className=\"button button-pearl\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} >Cancel</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate, Clinic, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix'\r\n\r\nimport '../../css/dashboard.css'\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const Doclist = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n\r\n    // Functions\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time]\r\n        if (time.length > 1) {\r\n            time = time.slice(1)\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM '\r\n            time[0] = +time[0] % 12 || 12\r\n        }\r\n        return time.join('')\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block')\r\n        } else {\r\n            setdisplaysearchlist('none')\r\n        }\r\n    }\r\n    const get_value = (data) => {\r\n        setsearchinput(data.full_name)\r\n        setpatientid(data.id)\r\n        setdisplaysearchlist('none')\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && doctorid && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                setload(false)\r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n            setload(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment  at <span className=' text-charcoal fw-bold border-0 fs-6'>{tConvert(props.selectedtime)}</span></h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute top-0 mt-2\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <hr className='p-0 m-0 mb-1' />\r\n            <div className=\" text-start p-0 m-0 ms-3 clinics align-items-end mb-2 fw-bold text-burntumber \">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}>\r\n                            <img src={process.env.PUBLIC_URL + '/images/location.png'} className=' align-self-center '/> {data.title} {data.address}</label>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control bg-pearl border-0\" value={searchinput ? searchinput : ''} onChange={(e) => { searchpatient(e) }} />\r\n                    <div className={`col-6 position-absolute d-${displaysearchlist} bg-pearl rounded-2 shadow mt-1 pb-2 `} style={{ zIndex: 3 }}>\r\n                        {\r\n                            searchload ? (\r\n                                <div className=\" col-12 text-charcoal75 p-0 m-0 py-2 fw-bold text-start ps-2 mt-1\">Loading... </div>\r\n                            ) : (\r\n                                searchlist !== undefined && searchlist.length == 0 ? (\r\n                                    <div className=\"text-burntumber col-12 p-0 m-0 fw-bold mt-1 ps-2 pt-1\">Patient not found</div>\r\n                                ) : (\r\n                                    <div className='mt-1 searchresult bg-pearl  col-12  ' >\r\n                                        {\r\n                                            searchlist.map((data, i) => (\r\n                                                <div style={{ cursor: 'pointer' }} className={`col-12 d-block p-2 fw-bold text-charcoal text-start border-bottom align-self-center`} name={data.id} value={data.full_name} onClick={() => { get_value(data) }}>{data.full_name} <span className='fw-bold text-burntumber'>{data.phone_number}</span></div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"d-flex p-0 m-0 text-start justify-content-around\">\r\n                        <div className='button button-charcoal50-outline align-self-center '> Dr.{doctorname}</div>\r\n                        <div className=\"button button-charcoal50-outline ms-3\" >{reversefunction(APIDate)}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                load ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"col-6 donebutton py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"button button-charcoal\" onClick={BookAppointment}> Done </button>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState()\r\n    const [docdate, setdocdate] = useState()\r\n    const [fromtime, setfromtime] = useState()\r\n    const [totime, settotime] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n        if (doctorid && APIDate && fromtime && totime && clinicid && admin_id) {\r\n            Notiflix.Loading.pulse({\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E'\r\n            })\r\n            await axios.post(`${url}/doctor/add/timeslots`, {\r\n                doctor_id: doctorid,\r\n                date: APIDate,\r\n                time_from: fromtime,\r\n                time_to: totime,\r\n                clinic_id: clinicid,\r\n                admin_id: admin_id\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                props.CloseAddQuickSlots()\r\n                props.fetchapi()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Doctor Slot`,\r\n            `Do you surely want to add more Time Slots of Dr. ${doctorname}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        )\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center pt-1\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 text-center clinics\">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'} img-fluid`}><img src={process.env.PUBLIC_URL + '/images/location.png'} />{data.title} {data.address}</label>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row mt-2 justify-content-center gx-2\">\r\n                <div className=\"col-auto\">\r\n                    <button className='button button-charcoal50-outline'>{doctorname}</button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div type=\"date\" disabled className=\"form-control col-10 button button-charcoal50-outline\" >{reversefunction(APIDate)}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 mt-2 justify-content-center\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                </div>\r\n                <div className='col-auto'>-</div>\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }","import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          UpadteStatus()\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  async function UpadteStatus() {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: props.appointmentid,\r\n          status: 6,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          props.Appointmentlist()\r\n          Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n\r\n  }\r\n  return (\r\n    <div className='container-fluid col-lg-10 col-md-11 px-0 col-sm-12 col-12 col-xl-10 bg-seashell rounded-2 position-relative pb-4 pt-0'>\r\n      <div className=\"shadow-sm pt-2 pb-2\">\r\n      <h5 className='text-center p-0 m-0 fw-bold'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2 pt-3' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 mt-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} className='img-fluid' style={{ width: '1.2rem' }} /></button>\r\n      </div>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '>\r\n                <h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid mt-2\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row justify-content-end align-items-center\">\r\n              <div className=\"col-3\">\r\n                <select className='form-control p-0 border-0 text-center bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0 \">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center p-0 m-0'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center p-0 m-0'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-auto me-5\">\r\n              <button className='btn p-0 m-0 ' style={{opacity:'0'}}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }}/></button>\r\n\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <div className=\"container text-center mt-3\">\r\n        <button className='button button-charcoal mx-auto' onClick={props.CloseVitals}>Done</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","import { URL, TodayDate, DoctorsList, Clinic, Permissions } from '../../index';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport React, { useState, useRef, useContext, useEffect, useMemo } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport axios from 'axios'\r\n\r\n\r\nconst AddConsumables = (props) => {\r\n    const tableref = useRef(null)\r\n    const cliniclist = useContext(Clinic)\r\n    const url = useContext(URL)\r\n    const Doclist = useContext(DoctorsList)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const medicinesref = useRef(null)\r\n    const medbyidref = useRef(null);\r\n    const patientaddref = useRef(null)\r\n    const stockref = useRef(null)\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [doctorname, setdoctorname] = useState()\r\n    const [otherdoctor, setotherdoctor] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [ischecked, setischecked] = useState()\r\n    const [Dc, setDc] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [products, setproducts] = useState([])\r\n    const [itemsearch, setitemsearch] = useState([])\r\n    const [itembyid, setitembyid] = useState([])\r\n    const [loadbyId, setloadbyId] = useState()\r\n    const [itemname, setitemname] = useState()\r\n    const [itemid, setitemid] = useState()\r\n    const [SelectedProducts, setSelectedProducts] = useState([])\r\n    const [Grandtotal, setGrandtotal] = useState()\r\n    const [Grandtotal2, setGrandtotal2] = useState()\r\n    const [loadsearch, setloadsearch] = useState()\r\n    const [ce, setce] = useState('none')\r\n    const [nursenotes, setnursenotes] = useState(props.appointmentdata.nursing_notes ? props.appointmentdata.nursing_notes : '')\r\n    const [deleteload, setdeleteload] = useState(false)\r\n    const [loadnotes, setloadnotes] = useState(false)\r\n    const [i, seti] = useState()\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n  \r\n    let obj={\r\n         display_name:'',\r\n         CGST:'',\r\n         CGST_rate:'',\r\n         IGST:'',\r\n         IGST_rate:'',\r\n         SGST:'',\r\n         SGST_rate:'',\r\n         batch_no:'',\r\n         channel:'',\r\n         cost:'',\r\n         current_stock:'',\r\n         discount:\"\",\r\n         expiry_date : \"\",\r\n         free_qty:'',\r\n         id:'',\r\n         is_consumable:'',\r\n         medicine_id:'',\r\n         mfd_date:'',\r\n         mrp:'',\r\n         qty:'',\r\n         rate:'',\r\n         total_amount:''\r\n\r\n    }\r\n\r\n\r\n    const searchmeds = async (search) => {\r\n    return new Promise(async(resolve,reject)=>{\r\n        try {\r\n            setitemid()\r\n            setproducts()\r\n            let medicines = []\r\n            setloadsearch(true)\r\n            await axios.get(`${url}/stock/list?search=${search}&location_id=${clinicID}`).then((response) => {\r\n                medicines = response.data.data.medicines ? response.data.data.medicines : []\r\n\r\n                if (itemname != undefined && itemname.length > 0) {\r\n                    medicinesref.current.style.display = 'block';\r\n                } else {\r\n                    medicinesref.current.style.display = 'none';\r\n                }\r\n            //  filter(medicines) \r\n            resolve(medicines)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message)\r\n            reject(e)\r\n        } finally{\r\n            setloadsearch(false)\r\n        }\r\n    })\r\n}\r\n    async function filter(medicines){\r\n        return new Promise((resolve, reject) => {\r\n            let arr = []\r\n            try{\r\n                for(let i=0;i<medicines.length;i++){\r\n                    for(let j=0;j<medicines[i].stock_info.length;j++){\r\n                        if(medicines[i].stock_info[j].is_consumable == 1){\r\n                            obj={\r\n                                display_name:medicines[i].display_name,\r\n                                CGST:medicines[i].stock_info[j].CGST,\r\n                                CGST_rate:medicines[i].stock_info[j].CGST_rate,\r\n                                IGST:medicines[i].stock_info[j].IGST,\r\n                                IGST_rate:medicines[i].stock_info[j].IGST_rate,\r\n                                SGST:medicines[i].stock_info[j].SGST,\r\n                                SGST_rate:medicines[i].stock_info[j].SGST_rate,\r\n                                batch_no:medicines[i].stock_info[j].batch_no,\r\n                                channel:medicines[i].stock_info[j].channel,\r\n                                cost:medicines[i].stock_info[j].cost,\r\n                                current_stock:medicines[i].stock_info[j].current_stock,\r\n                                discount:medicines[i].stock_info[j].discount,\r\n                                expiry_date : medicines[i].stock_info[j].expiry_date,\r\n                                free_qty:medicines[i].stock_info[j].free_qty,\r\n                                id:medicines[i].stock_info[j].id,\r\n                                is_consumable:medicines[i].stock_info[j].is_consumable,\r\n                                medicine_id:medicines[i].id,\r\n                                mfd_date:medicines[i].stock_info[j].mfd_date,\r\n                                mrp:medicines[i].stock_info[j].mrp,\r\n                                qty:medicines[i].stock_info[j].qty,\r\n                                rate:medicines[i].stock_info[j].rate,\r\n                                total_amount:medicines[i].stock_info[j].total_amount\r\n                           }\r\n                            arr.push(obj)\r\n                        }\r\n                    }\r\n                }\r\n                resolve(arr)\r\n            }catch(e){\r\n                Notiflix.Notify.failure(e.message)\r\n                reject(e)\r\n            }finally{\r\n                setitemsearch(arr)\r\n        \r\n            }\r\n        })\r\n    }\r\n    async function main(search) {\r\n        try {\r\n          const data = await searchmeds(search);\r\n            filter(data).then((manipulatedData)=>{\r\n                setitemsearch(manipulatedData);\r\n            }) \r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n      }\r\n      \r\n    const searchmedbyId = async (search) => {\r\n        if (search.length > 0) {\r\n            setloadbyId(true)\r\n            try {\r\n                await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n                    setloadbyId(false)\r\n                    setitembyid([response.data.data])\r\n                })\r\n            } catch (e) {\r\n                setloadbyId(false)\r\n                Notiflix.Notify.failure(e.message)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Doclist.map((data) => (\r\n            data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n        ))\r\n    }, [doctorid])\r\n\r\n    function CalSellingCost(mrp, disc) {\r\n        let cost = mrp\r\n        if (!disc) {\r\n            cost = Number(mrp)\r\n            return cost\r\n        } else {\r\n            cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n    }\r\n    function CalTotalAmount(qty, cst, realcst) {\r\n        let cost = cst\r\n        if (Number(realcst) > Number(cost)) {\r\n            Notiflix.Notify.failure('Selling Cost should not less than Cost')\r\n        }\r\n        if (!qty) {\r\n            return 0\r\n        } else if (qty == 1) {\r\n            cst = Number(cst)\r\n            return cst\r\n        } else {\r\n            cost = Number(cst) * Number(qty)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n\r\n    }\r\n    function CalGrandttl() {\r\n        let ttl = 0\r\n        SelectedProducts.map((data) => (\r\n            ttl += Number(data.totalamt)\r\n        ))\r\n        setGrandtotal(ttl.toFixed(2))\r\n    }\r\n    function CalGrandttl2() {\r\n        let ttl = 0\r\n        props.existedconsumables.map((data) => (\r\n            ttl += Number(data.total_amount)\r\n        ))\r\n        setGrandtotal2(ttl.toFixed(2))\r\n    }\r\n    function CaltotalDiscount(data) {\r\n        let total = 0\r\n        if (data) {\r\n            data.forEach(item => {\r\n                total += Number(item.discount)\r\n            })\r\n            return total\r\n        } else {\r\n            return total\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        CalGrandttl()\r\n    }, [SelectedProducts])\r\n    useEffect(() => {\r\n        CalGrandttl2()\r\n    }, [props.existedconsumables])\r\n\r\n\r\n    function AddProducts(data) {\r\n        let ProductDetails = {\r\n            productid: data.id,\r\n            type: 'm',\r\n            product: data.display_name ? data.display_name : '',\r\n            batch: data.batch_no,\r\n            expiry: data.expiry_date,\r\n            quantity: data.current_stock,\r\n            qtytoSale: 1,\r\n            discount: 0,\r\n            cost: data.cost,\r\n            mainmrp: data.mrp,\r\n            disccost: data.mrp,\r\n            gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n            totalamt: data.mrp\r\n\r\n        }\r\n\r\n        if (SelectedProducts && SelectedProducts.length == 0) {\r\n            setSelectedProducts([ProductDetails])\r\n        } else {\r\n            setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n        }\r\n\r\n    }\r\n    async function DeleteProduct(Batch) {\r\n        let obj = []\r\n        obj.push(SelectedProducts.filter(function (e) {\r\n            return e.batch !== Batch\r\n        }))\r\n        obj = obj.flat()\r\n        setSelectedProducts(obj)\r\n    }\r\n    async function SubmitConsumabaleEntry() {\r\n        let productids = [];\r\n        let proquantity = [];\r\n        let Discount = [];\r\n        let discountonmrp = [];\r\n        let mrp = [];\r\n        let GST = [];\r\n        let Totalamount = []\r\n\r\n        for (let i = 0; i < SelectedProducts.length; i++) {\r\n            productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n            proquantity.push(SelectedProducts[i].qtytoSale)\r\n            Discount.push(SelectedProducts[i].discount)\r\n            discountonmrp.push(SelectedProducts[i].disccost)\r\n            mrp.push(SelectedProducts[i].mainmrp)\r\n            GST.push(SelectedProducts[i].gst)\r\n            Totalamount.push(SelectedProducts[i].totalamt)\r\n        }\r\n        let Data = {\r\n            pro_id: productids,\r\n            qty: proquantity,\r\n            discount: Discount,\r\n            disc_mrp: discountonmrp,\r\n            main_mrp: mrp,\r\n            gst: GST,\r\n            total_amount: Totalamount,\r\n            appointment_id: props.appointmentid,\r\n        }\r\n        setload(true)\r\n        try {\r\n            await axios.post(`${url}/save/consumable`, Data).then((response) => {\r\n                setload(false)\r\n                if (response.data.status == true) {\r\n                    NurseNotes()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    props.Appointmentlist()\r\n                    setSelectedProducts([])\r\n                } else {\r\n                    Notiflix.Notify.warning(response.data.message)\r\n                }\r\n            }).catch(function error(e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            setload(false)\r\n        }\r\n    }\r\n    function confirmmessage() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                SubmitConsumabaleEntry()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    function confirmmessage2() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to save the following Note`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NurseNotes()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const toggle_consumables_existed = () => {\r\n        if (ce === 'none') {\r\n            setce('block')\r\n        }\r\n        if (ce === 'block') {\r\n        }\r\n    }\r\n    const NurseNotes = async () => {\r\n        try {\r\n            setloadnotes(true)\r\n            await axios.post(`${url}/save/nursing/notes`, {\r\n                appointment_id: props.appointmentid,\r\n                notes: nursenotes\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n                setloadnotes(false)\r\n            })\r\n        } catch (e) {\r\n            setloadnotes(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const RemoveConsumable = async (ID) => {\r\n        setdeleteload(true)\r\n        try {\r\n            await axios.post(`${url}/remove/consumable`, {\r\n                id: ID\r\n            }).then((response) => {\r\n                setdeleteload(false)\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } catch (e) {\r\n            setdeleteload(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid bg-seashell rounded-2 px-0 position-relative mx-auto col-lg-11 col-md-11 col-sm-11 col-11 col-xl-9\" style-={{ height: '70vh' }}>\r\n            <div className='position-relative mb-3 text-center shadow-sm'>\r\n                <h5 className='text-start text-charcoal text-center fw-bold py-2 '>{props.patientname} Consumables</h5>\r\n                <button className='btn btn-close position-absolute p-1 m-0 end-0 top-0 me-2 pt-4' disabled={load ? true : false} onClick={props.toggleConsumables}></button>\r\n            </div>\r\n\r\n            <div className={`container-fluid text-start p-0 m-0 mt-3`}>\r\n                <div className=\"col-12 justify-content-center\">\r\n                    <div className=\"row p-0 m-0 my-2 justify-content-start\">\r\n                        <div className=\"col-4 position-relative\">\r\n                            <input className='form-control bg-seashell fw-bold p-2 border-charcoal' disabled={loadsearch} placeholder='Search by Name'\r\n                                value={itemname ? itemname : ''}\r\n                                onChange={(e)=>{\r\n                                    setitemname(e.target.value)\r\n                                    main(e.target.value)\r\n                                }}\r\n                                 />\r\n                            <div className=\"position-absolute mt-1 bg-raffia\">\r\n                                <div className=\"position-relative \" style={{ width: '30vh' }}>\r\n                                    <div ref={medicinesref} className='position-absolute scroll scroll-y rounded-1 ' style={{ Width: 'max-content', zIndex: '1', maxHeight: '40vh' }} >\r\n                                        {\r\n                                            itemsearch ? (\r\n                                                loadsearch ? (\r\n                                                    <div className='rounded-1 p-1 bg-pearl'>\r\n                                                        Searching Please wait....\r\n                                                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                            <span className=\"sr-only\"> </span> </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    loadsearch == false && itemsearch.length == 0 ? (\r\n                                                        <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                                    ) : (\r\n                                                        <div className={`rounded-1 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                                                            <p className={`text-start m-1 fw-bold text-charcoal75 ms-1`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                                                            {\r\n                                                                itemsearch.map((data, i) => (\r\n            <div style={{ cursor: 'pointer', Width: '10rem' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-1 py-3 fw-bold border-bottom text-charcoal `} \r\n            onClick={(e) => { setproducts(data); AddProducts(data); setitemname(); setitemid();medicinesref.current.style.display='none'}}>\r\n                    {data.display_name ? data.display_name : data.display_name} | <span className='text-burntumber mx-2'>{data.batch_no?data.batch_no:''}</span>|<span className='ms-2'>{data.current_stock?data.current_stock+' stocks avaliable':''}</span></div>\r\n                                                                ))\r\n                                                            }\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                            ) : (<div className='bg-seashell'></div>)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-auto text-burntumber text-center fw-bold align-self-center'> OR </div>\r\n                        <div className=\"col-4 \">\r\n                        <input className='form-control bg-seashell border border-1 rounded-2 text-charcoal p-2 fw-bold border-charcoal' value={itemid ? itemid : ''} placeholder='Search by ID' \r\n                        onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = 'block' }} />\r\n                            <div ref={medbyidref} className='position-absolute rounded-1 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                                {\r\n                                    itembyid ? (\r\n                                        loadbyId ? (\r\n                                            <div className='rounded-1 p-1 bg-pearl'>\r\n                                                Searching Please wait....\r\n                                                <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                    <span className=\"sr-only\"> </span> </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            loadbyId == false && itembyid.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                            ) : (\r\n                                                itembyid.map((data, i) => (\r\n                                                    <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 p-1 rounded-pill shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'}`}\r\n                                                        onClick={(e) => {\r\n                                                            setitemid(data.type + data.id);\r\n                                                            AddProducts(data)\r\n                                                            medbyidref.current.style.display = 'none';\r\n                                                        }}>{data.item_name ? data.item_name : ''}</div>\r\n                                                ))\r\n                                            )\r\n                                        )\r\n                                    ) : (<div className='bg-seashell'></div>)\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 m-0 p-0\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    </div>\r\n                    <div className='scroll scroll-y' style={{ height: '40vh' }}>\r\n                        <table className='table'>\r\n                            <thead className=' bg-seashell position-sticky top-0'>\r\n                                <tr className={``}>\r\n                                    <th className=''>Item ID</th>\r\n                                    <th className=''>Item Name</th>\r\n                                    <th className=''>BatchNo.</th>\r\n                                    <th className=''>Expiry Date</th>\r\n                                    <th className=''>Avl.Stock</th>\r\n                                    <th className=''>Qty To Sale</th>\r\n                                    <th className=''>Discount %</th>\r\n                                    <th className=''>MRP</th>\r\n                                    <th className=''>Cost</th>\r\n                                    <th className=''>GST Rate</th>\r\n                                    <th className=''>Selling Cost/Unit</th>\r\n                                    <th className=''>Total Amount</th>\r\n                                    <th className=''>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {\r\n                                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                                    <tbody className='p-0 m-0 bg-pearl'>\r\n                                        {\r\n                                            SelectedProducts.map((data) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>{data.type}{data.productid}</td>\r\n                                                    <td>{data.product}</td>\r\n                                                    <td>{data.batch}</td>\r\n                                                    <td>{reversefunction(data.expiry)}</td>\r\n                                                    <td>{data.quantity}</td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                                                            onChange={(e) => {\r\n                                                                e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost);\r\n                                                                setSelectedProducts(prevState => [...prevState])\r\n                                                            }} /> </td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.discount ? data.discount : ''}\r\n                                                            onChange={(e) => {\r\n                                                                data.discount = e.target.value;\r\n                                                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost))\r\n                                                                setSelectedProducts(prevState => [...prevState]);\r\n                                                            }} /> </td>\r\n                                                    <td>₹{data.mainmrp}</td>\r\n                                                    <td>₹{data.cost}</td>\r\n                                                    <td>{data.gst + '%'}</td>\r\n                                                    <td>₹{data.disccost}</td>\r\n                                                    <td>₹{data.totalamt}</td>\r\n                                                    <td><img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { DeleteProduct(data.batch) }} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                ) : (\r\n                                    props.existedconsumables && props.existedconsumables.length == 0?(\r\n                                        <tbody className='p-0 m-0 bg-seashell'>\r\n                                        <tr className='p-0 m-0 text-center'>\r\n                                            <td className='position-absolute text-charcoal75 fw-bold start-0 end-0'>No Consumabels Added</td>\r\n                                        </tr>\r\n\r\n\r\n                                    </tbody>\r\n                                    ):(<></>)\r\n\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                props.existedconsumables && props.existedconsumables.length == 0 ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <tbody className='position-relative bg-seashell'>\r\n                                        {\r\n                                            props.existedconsumables.map((data, key) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>m{data.medicies_stocks_id}</td>\r\n                                                    <td>{data.medicine.display_name}</td>\r\n                                                    <td>{data.medicine_stocks.batch_no}</td>\r\n                                                    <td>{reversefunction(data.medicine_stocks.expiry_date)}</td>\r\n                                                    <td></td>\r\n                                                    <td>{data.qty}</td>\r\n                                                    <td className='text-start p-0 m-0 ps-4'>{data.discount} </td>\r\n                                                    <td>₹{data.main_mrp}</td>\r\n                                                    <td>₹{data.medicine_stocks.cost}</td>\r\n                                                    <td>{Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate) + \"%\"}</td>\r\n                                                    <td>₹{data.disc_mrp}</td>\r\n                                                    <td>₹{data.total_amount}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            deleteload && i == key ? (\r\n                                                                <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                                            ) : (\r\n                                                                <img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { seti(key); RemoveConsumable(data.id) }} />\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{ height: '30vh', paddingBottom: '10vh' }}>\r\n                    <h6 className='fw-bold p-0 m-0 ps-0 ms-0 my-2'>Nurse notes</h6>\r\n                    {\r\n                        loadnotes ? (\r\n                            <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <textarea className='col-12 form-control w-100' value={nursenotes ? nursenotes : ''} onChange={(e) => setnursenotes(e.target.value)} style={{ width: '95vh', height: '10vh' }}></textarea>\r\n\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-start bg-pearl align-items-center rounded-bottom'>\r\n                <div className=\"row p-0 m-0 align-items-center justify-content-between\">\r\n                    <div className=\"col-6 col-md-4\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Order Total </p>\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>₹{Grandtotal2}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+₹{Grandtotal}</p>\r\n                                        </>\r\n\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1 ps-3' />\r\n                                <h6 className='text-charcoal fw-bolder card-header text-start ms-2'>₹{(Number(Grandtotal) + Number(Grandtotal2)).toFixed(2)}</h6>\r\n                            </div>\r\n                            {/* <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n                            </div> */}\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Total Items</p>\r\n\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length ? props.existedconsumables.length : 0}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+{SelectedProducts && SelectedProducts.length ? SelectedProducts.length : 0}</p>\r\n                                        </>\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1' />\r\n                                <h6 className='text-charcoal  fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length || SelectedProducts && SelectedProducts.length ? SelectedProducts.length + props.existedconsumables.length : 0}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-8\">\r\n                        <div className=\"row p-0 m-0 justify-content-end \">\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    loadnotes ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-seashell px-5 me-2' onClick={() => { confirmmessage2() }}>Save Notes</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    load ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-charcoal px-5 me-2' onClick={() => { confirmmessage() }}>Save All</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport { AddConsumables }","import React, { createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport AmountPaid from './AmountPaid';\r\nimport { URL, TodayDate, Clinic, Permissions,Fetch_function } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport '../../css/dashboard.css'\r\nimport { SelectedTimeAppointment } from '../Appointments/SelectedTimeAppointment'\r\nimport { AddSelectedDoctorSlot } from './SelectedDoctorSlot'\r\nimport { Vitalsoperation } from \"./Vitals\";\r\nimport { Payments } from \"./Payments\";  \r\nimport { Bill } from \"./Bill\";\r\nimport { AddConsumables } from \"./AddConsumables\";\r\nimport { SaleEntryForm } from '../pharmacy/pharmacy';\r\nimport {Prescription} from './prescription';\r\nimport { Generated_bill } from \"./generated_bill\";\r\nimport { appointment_status } from \"./fetch_apis\";\r\n\r\n\r\nfunction DoctorSchedule(props) { \r\n  //Global Variables\r\n  const url = useContext(URL)\r\n  const todayDate = useContext(TodayDate)\r\n  const permission = useContext(Permissions)\r\n  const adminid = localStorage.getItem('id')\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  //Use States\r\n  const [appointmentdata, setappointmentdata] = useState([]);\r\n  const [singleload, setsingleload] = useState(0)\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [tableindex, settableindex] = useState()\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [addappointmentform, setaddappointmentform] = useState('none')\r\n  const [appointmentid, setappointmentid] = useState()\r\n  const [timeindex, settimeindex] = useState()\r\n  const [saleindex, setsaleindex] = useState()\r\n  const [consumablesindex, setconsumablesindex] = useState()\r\n  const [addquickslots, setaddquickslots] = useState('none')\r\n  const [vitalsform, setvitalsform] = useState('none')\r\n  const [consumables, setconsumables] = useState('none')\r\n  const [vitalindex, setvitalindex] = useState()\r\n  const [appointmentvitalslist, setappointmentvitalslist] = useState([])\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [paymentsindex, setpaymentsindex] = useState()\r\n  const [paymentsi, setpaymentsi] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [d_form, setd_form] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const[pindex,setpindex]=useState()\r\n  const[bindex,setbindex]=useState()\r\n  const [status_appointment,setstatus_appointment] = useState([])\r\n  // for UpdateAppointment\r\n  const closeappointmentform = () => {\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  };\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n\r\n  function ArraySum(arr) {\r\n    if (arr.length > 0) {\r\n      let sum = arr.reduce((accumulator, value) => {\r\n        return accumulator + value;\r\n      }, 0);\r\n      return sum;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  async function Appointmentlist() {\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?clinic_id=${ClinicId}&doctor_id=${props.todayDoc[props._selected][0]}&from_date=${todayDate}&to_date=${todayDate}`).then((response) => {\r\n      setappointmentdata(response.data.data && response.data.data !=undefined ? response.data.data :[]);\r\n      // setappointmentdata([]);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  async function AllAppointments(){\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?clinic_id=${ClinicId}&from_date=${todayDate}&to_date=${todayDate}`).then((response) => {\r\n      props.get_appointment_data(response.data.data && response.data.data !=undefined ? response.data.data :[])\r\n      // setappointmentdata([]);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  useEffect(()=>{\r\n    AllAppointments()\r\n  },[])\r\n  useEffect(() => {\r\n    Appointmentlist();\r\n  }, [props._selected]);\r\n\r\n  function tConvert(time) {\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    } \r\n    return time.join('');\r\n  }\r\n  let array = [[1, 'lightred'], [2, 'lightblue'], [3, 'lightred'], [4, 'light'], [5, 'brandy'], [6,'lightred'], [7, 'lightyellow'], [8, 'lightgreen'], [9, 'lightyellow'], [10, 'lightgreen']]\r\n\r\n  function status(number) {\r\n    let status\r\n    if(status_appointment!=undefined && status_appointment.length>0){\r\n      for (let i = 0; i < status_appointment.length; i++) {\r\n        if (number == status_appointment[i].id) {\r\n          status = status_appointment[i].title\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][1]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Loading.remove()\r\n          Appointmentlist()\r\n          props.fetchapi()\r\n          Notiflix.Notify.success(response.data.message)\r\n        }).catch((e)=>{\r\n          Loading.remove()\r\n          Notiflix.Notify.failure(e.message)\r\n        })\r\n      } catch (e) {\r\n        Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  const openAddApppointmentform = () => {\r\n    setaddappointmentform('block')\r\n  }\r\n  const closeAddAppointmentform = () => {\r\n    setaddappointmentform('none')\r\n    settimeindex()\r\n  }\r\n  function OpenAddQuickSlots() {\r\n    if (addquickslots === 'none') {\r\n      setaddquickslots('block')\r\n    }\r\n  }\r\n  function CloseAddQuickSlots() {\r\n    if (addquickslots === 'block') {\r\n      setaddquickslots('none')\r\n    }\r\n  }\r\n\r\n  //Vitals Section\r\n  function OpenVitals() {\r\n    if (vitalsform === 'none') {\r\n      setvitalsform('block')\r\n    }\r\n  }\r\n  function CloseVitals() {\r\n    if (vitalsform === 'block') {\r\n      setvitalsform('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n\r\n  async function GetAppointmentVitals(id) {\r\n    setloadvitals(true)\r\n    await axios.get(`${url}/appointment/vitals/list?appointment_id=${id}`).then((response) => {\r\n      setappointmentvitalslist(response.data.data.vitals)\r\n      setloadvitals(false)\r\n    })\r\n  }\r\n  //Vitals Section \r\n\r\n  //Send Notification\r\n  async function SendNotifcation(name, id) {\r\n    Notiflix.Loading.dots('Sending', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.3rem'\r\n    })\r\n    try {\r\n      await axios.post(`${url}/appointment/call/in`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message.slice(0, -1) + ' to ' + name)\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n  }\r\n\r\n  const confirmmessage = (name, id) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Call Patient `,\r\n      `Do you surely want to call ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SendNotifcation(name, id)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  //Send Notification\r\n\r\n  //Bill\r\n  function OpenBillForm() {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n  }\r\n  function CloseBillForm() {\r\n    if (billform == 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function OpenPaymentsForm() {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n  }\r\n  function ClosePaymentsForm() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsindex()\r\n    }\r\n  }\r\n  function ClosePaymentsForm2() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsi()\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.success(response.data.message)\r\n        Appointmentlist()\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n      }).catch((e)=>{\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    try {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n      await axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.success(response.data.message)\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n          Appointmentlist()\r\n      }).catch((e)=>{\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n\r\n    }\r\n  }\r\n\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      // 'Cancel',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      // () => {\r\n      //   return 0\r\n      // },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const toggleConsumables = () => {\r\n    if (consumables === 'none') {\r\n      setconsumables('block')\r\n    }\r\n    if (consumables === 'block') {\r\n      setconsumables('none')\r\n      setconsumablesindex()\r\n    }\r\n\r\n  }\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n      setsaleindex()\r\n    }\r\n  }\r\n  const togglecamera = (id)=>{\r\n    localStorage.setItem('appointmentid',id)\r\n    window.open('/scan/prescription','_blank')\r\n  }\r\n const toggle_ScannedPres = ()=>{\r\n  setpindex()\r\n  }\r\n  const toggle_Scannedbill = ()=>{\r\n    setbindex()\r\n  }\r\n    async function getdata (){\r\n      if(status_appointment!=undefined && status_appointment.length==0){\r\n        const data = await appointment_status()\r\n        setstatus_appointment(data)\r\n       }\r\n    }\r\n    useEffect(()=>{\r\n      getdata()\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <section id=\"doctorscheduledata\">\r\n        <section className=\"timeslotsection\">\r\n          <div className=\"container-fluid p-0 m-0 ps-1 \">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\" col-12 p-0 m-0 align-items-center\">\r\n                <div className=\"row align-items-center p-0 m-0 mt-3 mb-2 ms-0\">\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <h6 className=\"p-0 m-0 text-charcoal fw-bolder text-start\">Time Slots Avaliable</h6>\r\n                  </div>\r\n                  <div className=\"col-2 ps-1\">\r\n                    <button className=\"btn m-0 p-0\">\r\n                      <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" onClick={OpenAddQuickSlots} />\r\n                    </button>\r\n                    <div className={`d-${addquickslots} rounded-1 quickdocslots bg-seashell shadow col-lg-6 col-md-8 col-sm-12 col-12 col-xl-4 position-absolute end-0 start-0 top-0 m-auto mt-3`} style={{ zIndex: '3010', minWidth: '10rem', maxWidth: '30rem' }}>\r\n                      <AddSelectedDoctorSlot CloseAddQuickSlots={CloseAddQuickSlots} fetchapi={props.fetchapi} DocClinic={props.DocClinic} DoctorID={props.DoctorID} DoctorName={props.DoctorName} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"scroll timeslots col-12 justify-content-around\">\r\n              {\r\n                props.todayDoc[props._selected][3].map((data, i) => (\r\n                  data[1] == 0 ? (\r\n                    <>\r\n                      <button className={`button-sm button-${timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1 px-3 py-2 fw-bold rounded-1`} style={{ letterSpacing: '1px' }} onClick={(e) => { openAddApppointmentform(); settimeindex(i) }} key={i}>{tConvert(data[0])}</button>\r\n                      {\r\n                        timeindex == i ? (\r\n                          <>\r\n                            {/* \r\n                            <div className='backdrop'>\r\n                            </div> */}\r\n                            <div className={`d-${timeindex == i ? addappointmentform : 'none'} col-lg-8 col-md-10 col-sm-12 col-12 col-xl-6 shadow quickappointment position-absolute m-auto start-0 end-0 bg-seashell rounded-4 border border-1`} style={{ top: '-3.8rem' }}>\r\n                              <SelectedTimeAppointment fetchapi={props.fetchapi} closeAddAppointmentform={closeAddAppointmentform} DocClinic={props.DocClinic} timeindex={timeindex} selectedtime={data[0]} selectedtimeID={data[2]} />\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <></>\r\n                        )\r\n                      }\r\n\r\n                    </>\r\n                  ) : (\r\n                    <button disabled className=\" button-sm button-charcoal50-outline m-1 px-3 py-2 rounded-1 fw-bold\" key={i} style={{ letterSpacing: '1px' }}>{tConvert(data[0])}</button>\r\n                  )\r\n                ))\r\n\r\n              }\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"allappointmentsection p-0 m-0 ms-1\">\r\n          <div className=\"col-auto m-0 p-0 align-items-center\">\r\n            <h6 className=\"p-0 ms-1 text-charcoal fw-bolder mt-3 mb-2\">Appointments</h6>\r\n          </div>\r\n          <div className=\" scroll scroll-y align-content-center align-items-center\" style={{ minHeight: '70vh', maxHeight: '70vh', Height: '70h' }}>\r\n            <table className=\"table text-start\">\r\n              <thead className=\"p-0 m-0 px-2 bg-pearl\">\r\n                <tr className=\"p-0 m-0 position-sticky text-charcoal75 top-0\" style={{ fontSize: '0.75rem' }}>\r\n                  <th className=\"border-0 bg-pearl text-center\">Update</th>\r\n                  <th className=\"border-0 bg-pearl text-center\">Bill no.</th>\r\n                  <th className=\"border-0 bg-pearl text-start\">Time</th>\r\n                  <th className=\"border-0 bg-pearl\">Patient</th>\r\n                  <th className=\"border-0 bg-pearl text-start px-3\">Status</th>\r\n                  <th className=\"border-0 bg-pearl\"> Amount</th>\r\n                  <th className=\"text-center border-0 bg-pearl\">Vitals</th>\r\n                  <th className={`text-center border-0 bg-pearl d-${permission.appointment_charges_edit ? '' : 'none'}`}>Bill</th>\r\n                  <th className=\"border-0 bg-pearl text-center\">Consumables</th>\r\n                  <th className=\"border-0 bg-pearl text-center\">more</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                singleload == 0 ? (\r\n                  <tbody className=\"scroll scroll-y\"  >\r\n                    <tr className=' position-relative text-burntumber fs-3 mt-1 text-center m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-burntumber fs-3 mt-1 text-center'>\r\n\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>\r\n                    {\r\n                      appointmentdata && appointmentdata !==undefined && appointmentdata.length == 0 ? (\r\n                        <tr><button className=\"text-center position-absolute border-0 text-charcoal fw-bold px-5 start-0 end-0 mx-auto\">No Appointments Found</button></tr>\r\n                      ) : (\r\n                        appointmentdata.map((data, i) => (\r\n                          <tr className='align-middle'>\r\n                            <td className={`py-0 bg-${tableindex === i ? 'lightyellow' : ''}  text-center`}>\r\n                              <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { openapppointmentform(); settableindex(i); setappointmentid(data.id) }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" key={i} />\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"py-0 text-start fw-bold\" style={{ letterSpacing: '1px' }}>{data.bill_id ? 'C-'+data.bill_id:''}</td>\r\n                            <td className=\"py-0 text-start fw-bold\" style={{ letterSpacing: '1px' }}>{tConvert(data.timeslot.time_from)}</td>\r\n                            <td className=\"py-0 \">\r\n                              <div className=\"row p-0 m-0\" style={{ width: 'fit-content' }}>\r\n                                <div className=\"col-12 p-0 m-0 fw-bold align-self-end\">\r\n                                  {data.patient ? data.patient.full_name !== null ? data.patient.full_name : 'N/A' : 'N/A'}{data.patient != null && data.patient.is_profile_verified ==1 ? <img className=\"p-0 m-0 me-4 img-fluid\" src={process.env.PUBLIC_URL + 'images/verified.png'} style={{scale:'0.8'}}/>:'' }\r\n                                </div>\r\n                                <small className=\"col-auto p-0 m-0 text-burntumber fw-bold\" style={{ letterSpacing: '1px' }}>\r\n                                  {data.patient ? data.patient.phone_number != null ? data.patient.phone_number : 'N/A' : 'N/A'}\r\n                                </small>\r\n                              </div>\r\n                            </td>\r\n\r\n                            <td className=\" text-start pe-5\">\r\n                              <div className=\"row p-0 m-0 align-items-center\">\r\n                                <div className=\"col-1 p-0 m-0 me-2\">\r\n                                  <div className={`rounded-circle border-1 button-${status_color(data.appointment_status)} fontmain`} style={{ height: '12px', width: '12px' }}></div>\r\n                                </div>\r\n                                <div className=\"col-5 p-0 m-0\">\r\n                                  <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent border-0 text-start fw-bold `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                    <option className=\"fw-bold\" selected disabled>{status(data.appointment_status)}</option>\r\n                                    {\r\n                                      status_appointment && status_appointment.length > 0 && status_appointment.map((data)=>(\r\n                                        <option className=\"fw-bold\" value={data.id}>{data.title}</option>\r\n                                      ))\r\n                                    }\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n\r\n                            {/* <td className=\"py-0\" style={{ fontSize: '0.75rem' }}>{data.total_amount}</td> */}\r\n                            <td className=\"py-0 text-start\">\r\n                              <div className=\"col p-0 m-0 fw-bold fontmain\" style={{ fontSize: '0.75rem', letterSpacing: '1px' }}>\r\n                                ₹{data.total_amount}\r\n                              </div>\r\n                              <div className=\"col p-0 m-0 text-start\">\r\n                                <button className=\"button-sm p-0 m-0 bg-transparent border-0\" onClick={() => { setpaymentsi(i); OpenPaymentsForm(); }}>\r\n                                  <AmountPaid appointmentData={data} index={i} Appointmentlist={Appointmentlist} />\r\n                                </button>\r\n                                {\r\n                                  paymentsi == i ? (\r\n                                    <>\r\n                                      <div className=\"backdrop\"></div>\r\n                                      <td className={`payments bg-seashell shadow-sm start-0 end-0 top-0 p-0 m-0 mx-auto border border-1 rounded-1 col-lg-6 col-md-10 col-sm-12 col-12 mt-2 col-xl-6 position-absolute d-${paymentsi == i ? paymentsform : 'none'}`} >\r\n                                        <Payments ClosePaymentsForm={ClosePaymentsForm2} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} paymentsi={paymentsi} /></td>\r\n                                    </>\r\n\r\n                                  ) : (<></>)\r\n                                }\r\n                              </div>\r\n                            </td>\r\n                            <td className={` text-center py-0 bg-${vitalindex === i ? 'lightyellow' : ''}`}><button className=\"btn p-0 m-0\" onClick={() => { setvitalindex(i); OpenVitals(); GetAppointmentVitals(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" /></button></td>\r\n                            <td className={` text-center py-0 d-${permission.appointment_charges_edit ? '' : 'none'} bg-${billindex === i ? 'lightyellow' : ''}`}> <img src={process.env.PUBLIC_URL + \"/images/bill.png\"} onClick={() => { setbillindex(i); OpenBillForm(); }} alt=\"displaying_image\" className=\"me-1\" />  </td>\r\n                            <td className={` text-center py-0  bg-${consumablesindex === i ? 'lightyellow' : ''}`}>\r\n                              <button className={`button-sm border-0 p-0 m-0 position-relative bg-${consumablesindex === i ? 'lightyellow' : 'transparent'}`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/bandage.png\"} onClick={() => { setconsumablesindex(i); toggleConsumables(); }} alt=\"displaying_image\" className=\"me-1\" />\r\n                                <span class={` position-absolute start-75 translate-middle badge p-0 m-0 text-burntumber fw-bold rounded-2 `} style={{ zIndex: '2', top: \"10%\" }}>\r\n                                  {appointmentdata[i].medicine_used.length}\r\n                                </span>\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              <div className=\"dropdown d-inline-block \">\r\n                                <button className=\"button p-0 m-0 bg-transparent border-0 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                  <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" className=\"img-fluid\" />\r\n                                </button>\r\n                                <ul className=\"dropdown-menu shadow-sm p-2\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content', height: 'fit-content' }}>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() =>togglecamera(data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/new_tab.png\"} alt=\"displaying_image\"/>Scan Prescription</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Prescription</li>\r\n                                  <li className={`d-${data.prescription_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() =>{setpindex(i)}}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\"/>View Prescription</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Bill</li>\r\n                                  <li className={`d-${data.bill_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() => { setbindex(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" /> View Bill</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" /> Send on Whats App</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\"  />Send on SMS</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { toggle_nsef(); setsaleindex(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/medicine.png\"}  alt=\"displaying_image\" />Buy Medicines</li>\r\n                                  <li className={`dropdown-item fw-bold border-bottom p-0 m-0 align-items-center p-2  d-${permission.appointment_charges_edit ? 'flex' : 'none'}`} onClick={() => { setpaymentsindex(i); OpenPaymentsForm(); }}><img src={process.env.PUBLIC_URL + \"/images/rupee.png\"}  className='me-2 img-fluid' alt=\"displaying_image\" />Payments</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 p-0 m-0 align-items-center\" onClick={() => confirmmessage(data.patient.full_name, data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/speaker.png\"} alt=\"displaying_image\"/> Call Patient</li>\r\n                                </ul>\r\n                              </div></td>\r\n                            {\r\n                              tableindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`updateappointment shadow-sm border-0 rounded-1 bg-seashell mt-2 start-0 end-0 top-0 col-lg-8 col-md-10 col-sm-11 col-11 col-xl-5 d-${tableindex == i ? appointmentform : 'none'} position-absolute`}>\r\n                                    <UpdateAppointment fetchapi={props.fetchapi} fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} addappointmentform={addappointmentform} closeappointmentform={closeappointmentform} doctorid={props.doctorid} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              vitalindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`vitals position-absolute border-0 d-${vitalindex == i ? vitalsform : 'none'}`} style={{ zIndex: '4' }}>\r\n                                    <Vitalsoperation GetAppointmentVitals={GetAppointmentVitals} Appointmentlist={Appointmentlist} CloseVitals={CloseVitals} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} appointmentvitalslist={appointmentvitalslist} loadvitals={loadvitals} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              billindex == i ? (\r\n                                <>\r\n                                  <div className='backdrop'>\r\n                                  </div>\r\n                                  <td className={`bill d-${billindex == i ? billform : 'none'} start-0 end-0 mx-auto top-0 border-0 position-absolute p-0 m-0 col-lg-10 col-md-10 col-sm-11 col-11 mt-2 col-xl-6 `} style={{ zIndex: '4',height:'70vh' }}>\r\n                                    <Bill fetchapi={props.fetchapi} CloseBillForm={CloseBillForm} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} phone_number = {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} Data={data} appointmentdata={appointmentdata} appointmentid={data.id} doctorfee={data.doctor.consulationFee} billform={billform} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              paymentsindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`payments start-0 end-0 top-0 position-absolute bg-seashell mx-auto rounded-2 p-0 m-0 col-lg-8 col-md-10 col-sm-11 col-11 mt-2 col-xl-6 d-${paymentsindex == i ? paymentsform : 'none'}`} style={{ zIndex: '4' }}>\r\n                                    <Payments ClosePaymentsForm={ClosePaymentsForm} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              consumablesindex == i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`consumables mx-auto  position-absolute top-0 start-0 end-0   d-${consumablesindex == i ? consumables : 'none'} `} style={{ zIndex: '4', height: '70vh' }} >\r\n                                    <AddConsumables appointmentdata={appointmentdata[i]} Appointmentlist={Appointmentlist} existedconsumables={appointmentdata[i].medicine_used.reverse()} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} toggleConsumables={toggleConsumables} />\r\n                                  </td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              saleindex == i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${saleindex == i ? saleindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                    <SaleEntryForm data={data} DoctorID={props.DoctorID} DoctorName={props.DoctorName} saleindex={saleindex} toggle_nsef={toggle_nsef} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                  </td>\r\n                                </>\r\n                              ) : (<></>)\r\n\r\n                            }\r\n                            {\r\n                              pindex == i ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-8 col-lg-10 col-md-11 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${pindex == i ? pindex : 'none'}`} style={{ zIndex: '4', height: \"80vh\" }}  >\r\n                                <Prescription prescriptions={data.prescription_file} toggle_ScannedPres={toggle_ScannedPres}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>)\r\n                            }\r\n                                     {\r\n                              bindex == i ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${bindex == i ? bindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                <Generated_bill bill={data.bill_file} toggle_Scannedbill={toggle_Scannedbill}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>) \r\n                            }\r\n                          </tr>\r\n\r\n                        )))}\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}\r\nexport { DoctorSchedule };\r\n\r\nfunction Timecard(props) {\r\n  const url = useContext(URL);\r\n  const fetch_func = useContext(Fetch_function)\r\n  const clinics = useContext(Clinic)\r\n  const [cardindex, setcardindex] = useState()\r\n  const [rooms, setrooms] = useState([])\r\n  function diff(start, end) {\r\n    start = start.split(\":\");\r\n    end = end.split(\":\");\r\n    var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    var diff = endDate.getTime() - startDate.getTime();\r\n    var hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    var minutes = Math.floor(diff / 1000 / 60);\r\n    if (hours < 0)\r\n      hours = hours + 24;\r\n\r\n    return (hours != 0 ? ((hours <= 9 ? \"0\" : \"\") + hours + \"hrs \") : \"\") + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins'\r\n  }\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let [doctime, setdoctime] = useState([]);\r\n  let [isLoading, setisLoading] = useState();\r\n  let [startload, setstartload] = useState(false)\r\n\r\n  let clinicid = localStorage.getItem('ClinicId');\r\n\r\n  async function fetchapi() {\r\n    setisLoading(true);\r\n    await axios.get(`${url}/todays/doctor/time/list?doctor_id=${props.docid}&clinic_id=${clinicid}`).then((response) => {\r\n      \r\n      if (response.data.data.length == 0) {\r\n        setisLoading(false);\r\n      }\r\n      else {\r\n        setdoctime(response.data.data.reverse());\r\n        setisLoading(false);\r\n      }\r\n    })\r\n  }\r\n  const [refreshtimeslots, setrefreshtimeslot] = useState(false);\r\n  const [roomnumber, setroomnumber] = useState('1');\r\n\r\n  async function starttimeslot() {\r\n    setstartload(true)\r\n    let adminid = localStorage.getItem('id');\r\n    if (clinicid && roomnumber && props.docid && adminid) {\r\n      try {\r\n        await axios.post(`${url}/doctor/start/time`, {\r\n          clinic_id: clinicid,\r\n          room_id: roomnumber,\r\n          doctor_id: props.docid,\r\n          admin_id: adminid,\r\n        }).then((response) => {\r\n          setstartload(false)\r\n          Notiflix.Notify.success(response.data.message)\r\n          fetch_func()\r\n          // timer_notify(props.docid)\r\n        })\r\n        await fetchapi();\r\n\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n\r\n        setstartload(false)\r\n\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please fill all details')\r\n      setstartload(false)\r\n    }\r\n  }\r\n\r\n  async function endtimeslot(data) {\r\n    let adminid = localStorage.getItem('id');\r\n    setrefreshtimeslot(true);\r\n    let log_id = data.id;\r\n    try {\r\n      await axios.post(`${url}/doctor/end/time`, {\r\n        admin_id: adminid,\r\n        log_id: log_id\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        // timer_notify(props.docid)\r\n        fetch_func()\r\n      })\r\n      await fetchapi();\r\n      setrefreshtimeslot(false)\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setrefreshtimeslot(false);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [props._selected]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < clinics.length; i++) {\r\n      if (clinics[i].id == Number(clinicid)) {\r\n        setrooms(clinics[i].rooms)\r\n      }\r\n    }\r\n\r\n  }, [clinicid])\r\n  return (\r\n    <div className=\"scroll room_timecards align-items-center align-content-center my-auto mb-2 ms-2\">\r\n      <div id=\"cardslot\" className={`d-${isLoading ? 'none' : 'inline-flex'}`}>\r\n        <div className=\"card card1 p-0 m-0 text-start border-0\" id=\"card1\" >\r\n          <div className=\"card-body p-0 m-0\">\r\n            <div className=\"d-flex align-items-center ms-3\">\r\n              <p className=\" m-0 p-0 text-charcoal fw-bold me-2\">Room</p>\r\n              <select onChange={(e) => { setroomnumber(e.target.value) }} className=\"form-control bg-charcoal25 text-charcoal my-1 mx-2 p-0 py-2 px-3 w-auto text-center border-0\" id=\"clinicroom1\">\r\n                {\r\n\r\n                  rooms.map((data) => (\r\n                    <option value={data.id}>{data.room_number}</option>\r\n                  ))\r\n\r\n\r\n                }\r\n              </select>\r\n              {\r\n                startload ? (\r\n                  <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                ) : (\r\n                  <button className=\"btn playbutton p-0 m-0 mx-2\" onClick={starttimeslot}><img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'images/play.png'}  /></button>\r\n                )\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ? (\r\n\r\n          <div className=\"card bg-pearl text-center ms-3 bg-seashell\" aria-hidden=\"true\" style={{ width: '18rem', paddingTop: '0.76rem', paddingBottom: '0.76rem' }}>\r\n            <div className=\" text-start placeholder-glow gx-2\">\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-2 ms-2 text-start\"></span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          doctime.map((data, i) => (\r\n            <div id=\"cardslot text-start\" key={i} className=\"d-inline-flex m-1\">\r\n              <div className=\"card p-0 m-0 py-1 text-start border-0\" id=\"card1\">\r\n                <div className=\"card-body p-0 m-0\">\r\n                  <div className=\"d-flex text-start align-items-center p-0 m-0 \">\r\n                    <p className=\" p-0 m-0  ms-2 text-charcoal75 fw-bold me-1 ps-2 \" style={{ fontSize: '0.75rem' }}>Room</p>\r\n                    <h5 className=\"text-burntumber fw-semibold my-1 me-2 border-0\" id=\"clinicroom\">\r\n                      {data.room_id}\r\n                    </h5>\r\n                    {\r\n                      refreshtimeslots && i === cardindex ? (\r\n                        <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"d-flex p-0 m-0 justify-content-center\">\r\n\r\n                            <button type=\"text\" className=\"btn fromtime p-0 m-0 float-end text-charcoal text-center\" style={{ fontSize: '0.75rem' }}>{(data.login_time) ? tConvert(data.login_time) : ''}</button>\r\n                            <div className='mx-1 align-self-center' style={{ padding: '0.9px' }}>-</div>\r\n                            <button type=\"text\" className=\"btn totime p-0 m-0 text-charcoal float-end text-center\" style={{ fontSize: '0.75rem' }}>{(data.logout_time) ? tConvert(data.logout_time) : '__'}</button>\r\n\r\n                          </div>\r\n\r\n                          <div className=\"d-flex mx-2\">\r\n                            {\r\n                              data.logout_time ? (\r\n                                <div id=\"totalhrs\" className=\" p-0 m-0 timediff text-burntumber fw-bold text-center pe-2\" defaultValue=\"\" style={{ fontSize: '0.75rem' }}>{data.logout_time ? diff(data.login_time, data.logout_time) : ''}</div>\r\n                              ) : (\r\n                                <button className=\"btn p-0 m-0 pausebutton\" value={data.id} onClick={(e) => { endtimeslot(data); setcardindex(i) }}><img className=\"\" src={process.env.PUBLIC_URL + 'images/pause.png'} onClick={(e) => { endtimeslot(e); setcardindex(i) }} /></button>\r\n\r\n                              )\r\n                            }\r\n\r\n\r\n                          </div>\r\n\r\n                        </>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n          ))\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\nexport { Timecard }\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext, createContext } from \"react\";\r\n// import { w3cwebsocket as websocket } from 'websocket'\r\nimport { Timecard, DoctorSchedule } from '../Today/Doctor'\r\nimport { timer_notify } from '../features/timer_notify';\r\n//Context APIs\r\nimport { Permissions,URL } from '../../index'\r\n//Components\r\nimport '../features/timeout_notifications';\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\n//css\r\nimport '../../css/dashboard.css'\r\n\r\nconst DOCTORNAME = createContext()\r\nconst DOCTORID = createContext()\r\nfunction Doctorsection(props) {\r\n  const url = useContext(URL)\r\n  const permission = useContext(Permissions)\r\n  const [Docval, setDocval] = useState(0)\r\n  const [Doctor, setDoctor] = useState(0)\r\n  const [DoctorID, setDoctorID] = useState()\r\n  const [DoctorName, setDoctorName] = useState()\r\n  const [DocClinic, setDocClinic] = useState()\r\n  const [doctorindex, setdoctorindex] = useState([0])\r\n  const [doctorform, setdoctorform] = useState(\"none\");\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setDocval(1)\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setDocval(0)\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  function getindexes() {\r\n    for (let j = 0; j < doctorindex.length; j++) {\r\n      if (doctorindex.includes(Doctor)) {\r\n        break;\r\n      } else {\r\n        doctorindex.push(Doctor)\r\n      }\r\n    }\r\n  }\r\n  getindexes()\r\n\r\n  const doctor_wise_appointment_count= (doc_id)=>{\r\n    let appointments = []\r\n    if(props.appointment_data !=undefined){\r\n      for(let j=0;j<props.appointment_data.length;j++){\r\n        if(doc_id== props.appointment_data[j].doctor_id){\r\n          appointments.push(props.appointment_data[j])\r\n        }\r\n  }\r\n}\r\n  return appointments.length\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid doctorsection p-0 m-0 mt-1 ps-1 scroll\">\r\n        <div className=\" hstack gap-3 d-flex p-0 m-0 py-1 ps-1 align-items-center\">\r\n          {\r\n            props.isLoading ? (\r\n              <div className='col-3'>\r\n                <div className=\"spinner-border my-auto\" style={{ width: \"2rem\", height: \"2rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div>\r\n                <div className=\"spinner-grow my-auto\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div> </div>\r\n            ) : (\r\n              props.todayDoc.map((data, i) => (\r\n                <>\r\n                  <div className='col-auto doctors p-0 m-0'>\r\n                    <button key={i} className={` button rounded-1 p-0 m-0 py-1 px-3 btn-sm col-auto shadow-none text-${i === Doctor ? 'light' : 'charcoal75 fw-bolder'} button-${i === Doctor ? \"charcoal\" : \"pearl\"} border-${i === Doctor ? 'secondary' : 'none'}`}\r\n                      style={{ fontSize: '0.9rem' }}\r\n                      autoFocus={i === Doctor ? true : false}\r\n                      onFocus={() => { setDoctorID(data[0]); setDoctorName(data[1]); setDocClinic(data[2]) }}\r\n                      value={`${data[0]}.${data[1]}`} onClick={(a) => { setDoctor(i); setDoctorID(data[0]); setDoctorName(data[1]); }}>{`Dr. ${data[1]}`}<span className='ms-2 px-1 text-lightyellow '>{doctor_wise_appointment_count(data[0])} {timer_notify(data[0])==1?<span className='m-0 p-0 ms-2'><img src={process.env.PUBLIC_URL+'/images/time_on.png'} className='img-fluid p-0 m-0' style={{width:'0.8rem'}}/></span>:<span></span>}</span> </button>\r\n                  </div>\r\n                  <div className='vr rounded-1 h-75 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            )}\r\n          <div className='col-auto'>\r\n            <button className={`btn bg-transparent border-0 `} id=\"adddoctorbtn\" onClick={toggledoctorform} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <section className=\"patientsection p-0 m-0 ps-1 position-relative\">\r\n        {\r\n          props.Loading ? (\r\n            <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-charcoal\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n\r\n          ) : (\r\n            props.todayDoc && props.todayDoc.length != 0 ? (\r\n              doctorindex.map((data, i) => (\r\n                data == Doctor ? (\r\n                  <div key={i}>\r\n                    <div className={`p-0 m-0 my-2 d-${permission.dashboard_all == 1 ? '' : 'none'}`}>\r\n                      <Timecard docid={props.todayDoc[Doctor][0]} _selected={Doctor} />\r\n                    </div>\r\n                    <div className=\"p-0 m-0 my-2\">\r\n{/* \r\n                    DoctorID={DoctorID} DoctorName={DoctorName} */}\r\n\r\n                      <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n                      <DoctorSchedule todayDoc={props.todayDoc} DoctorID={DoctorID} DoctorName={DoctorName}  _selected={Doctor} fetchapi={props.fetchapi} DocClinic={DocClinic} get_appointment_data={props.get_appointment_data}   />\r\n                        </DOCTORID.Provider>    \r\n                      </DOCTORNAME.Provider>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )\r\n              ))\r\n            ) : (\r\n              <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-burntumber\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </section>\r\n      {\r\n        Docval == 1 ? (\r\n          <div className={`col-lg-5 col-md-6 col-sm-12 col-12 doctorinfosection d-${doctorform} me-lg-2 top-0  me-md-2 rounded-4 border bg-seashell shadow-sm position-absolute`} style={{ zIndex: '2', marginTop: '5.1rem' }} >\r\n                    <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n            <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop4'} fetchapi={props.fetchapi} />\r\n            </DOCTORID.Provider>    \r\n            </DOCTORNAME.Provider>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n\r\n    </>\r\n  );\r\n\r\n}\r\nexport default Doctorsection\r\nexport { DOCTORNAME, DOCTORID }","import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs, Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2 fw-bold'>\r\n      <h5 className=\"text-center mt-2 fw-bold\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <label className='ps-1'>Doctor</label>\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>Dr. {data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className=\"radio form-check-input me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label >Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"button button-pearl px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }"],"names":["UpdateAppointment","props","useRef","clinicID","localStorage","getItem","adminid","url","useContext","URL","DocApi","Doctorapi","Doclist","DoctorsList","TodayDoctors","TodayDocs","_useState","useState","_useState2","_slicedToArray","cliniclist","setcliniclist","_useState3","_useState4","doctorid","setdoctorid","_useState5","_useState6","clinicid","_useState7","_useState8","time","settime","_useState9","_useState10","timeindex","settimeindex","_useState11","_useState12","_useState13","_useState14","load","setload","_useState15","_useState16","ApikeyDocTimeslots","setApikeyDocTimeslots","_useState17","_useState18","ApiDocTimefrom","setApiDocTimefrom","tConvert","toString","match","length","slice","join","useEffect","axios","concat","then","response","data","dateref","docref","_useState19","_useState20","trigger","settrigger","_getCurrentTimeslots","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","Timeslots","i","wrap","_context2","prev","next","appointmentdoctorid","current","value","id","Number","push","month_timeslots","stop","apply","arguments","_getCurrentTimefrom","_callee3","timefrom","j","_context3","date","appointmentdate","time_from","booking_status","getCurrentTimeslots","getCurrentTimefrom","_getTimeslots","_callee4","e","_context4","target","_getTimefrom","_callee5","_context5","appointmentid","patientid","appointment_id","doctor_id","clinic_id","timeslot_id","patient_id","admin_id","fetchallAppointmentslist","fetchapi","Notiflix","message","HighlightOptions","k","undefined","Avaliablemessage","_jsxs","className","children","patientname","_jsx","type","disabled","onClick","closeappointmentform","map","src","style","width","letterSpacing","title","address","ref","onChange","_x","defaultValue","name","selected","_x2","appointmenttime","_Fragment","key","preventDefault","gettime_value","alt","class","role","customconfirm","SelectedTimeAppointment","doctorname","DOCTORNAME","DOCTORID","Clinic","APIDate","TodayDate","searchinput","setsearchinput","searchlist","setsearchlist","displaysearchlist","setdisplaysearchlist","setpatientid","searchload","setsearchload","_searchpatient","_callee","_context","patients_list","selectedtime","closeAddAppointmentform","placeholder","searchpatient","zIndex","cursor","full_name","get_value","phone_number","split","reverse","reversefunction","selectedtimeID","AddSelectedDoctorSlot","fromtime","setfromtime","totime","settotime","_AddSelectedDoctorSlot","backgroundColor","svgColor","time_to","CloseAddQuickSlots","Vitalsoperation","vitals","Vitals","vitalid","setvitalid","vitalvalue","setvitalvalue","loadvitals","setloadvitals","vitalupdatevalue","setvitalupdatevalue","vitalindex","setvitalindex","savevital","setsavevital","updatevital","setupdatevital","Vitalunit","v","x","unit","_AddVitals","vitals_id","UpadteStatus","GetAppointmentVitals","OpenUpdateVital","t0","_UpdateVital","appointmentvitalid","old_id","_DeleteVital","status","_UpadteStatus","Loading","messageColor","messageFontSize","Appointmentlist","CloseVitals","appointmentvitalslist","vital","UpdateVital","_x3","DeleteVital","opacity","AddConsumables","medicinesref","medbyidref","setdoctorname","_useState21","_useState22","setproducts","_useState23","_useState24","itemsearch","setitemsearch","_useState25","_useState26","itembyid","setitembyid","_useState27","_useState28","loadbyId","setloadbyId","_useState29","_useState30","itemname","setitemname","_useState31","_useState32","itemid","setitemid","_useState33","_useState34","SelectedProducts","setSelectedProducts","_useState35","_useState36","Grandtotal","setGrandtotal","_useState37","_useState38","Grandtotal2","setGrandtotal2","_useState39","_useState40","loadsearch","setloadsearch","_useState41","_useState42","_useState43","appointmentdata","nursing_notes","_useState44","nursenotes","setnursenotes","_useState45","_useState46","deleteload","setdeleteload","_useState47","_useState48","loadnotes","setloadnotes","_useState49","_useState50","seti","obj","display_name","CGST","CGST_rate","IGST","IGST_rate","SGST","SGST_rate","batch_no","channel","cost","current_stock","discount","expiry_date","free_qty","is_consumable","medicine_id","mfd_date","mrp","qty","rate","total_amount","searchmeds","_ref","search","abrupt","Promise","_ref2","resolve","reject","medicines","display","finish","filter","_x4","_filter","_callee6","_context6","arr","stock_info","_main","_callee7","_context7","sent","manipulatedData","searchmedbyId","_ref3","_x6","CalTotalAmount","cst","realcst","toFixed","AddProducts","ProductDetails","productid","product","batch","expiry","quantity","qtytoSale","mainmrp","disccost","gst","totalamt","prevState","_toConsumableArray","_DeleteProduct","_callee8","Batch","_context8","flat","_SubmitConsumabaleEntry","_callee9","productids","proquantity","Discount","discountonmrp","GST","Totalamount","_i2","Data","_context9","pro_id","disc_mrp","main_mrp","NurseNotes","catch","confirmmessage","SubmitConsumabaleEntry","ttl","CalGrandttl","existedconsumables","CalGrandttl2","_ref4","notes","RemoveConsumable","_ref5","ID","_x8","height","toggleConsumables","_x5","main","Width","maxHeight","fontSize","item_name","disc","_x7","DeleteProduct","medicies_stocks_id","medicine","medicine_stocks","paddingBottom","DoctorSchedule","todayDate","permission","Permissions","ClinicId","setappointmentdata","singleload","setsingleload","isLoading","setisLoading","tableindex","settableindex","appointmentform","setappointmentform","addappointmentform","setaddappointmentform","setappointmentid","saleindex","setsaleindex","consumablesindex","setconsumablesindex","addquickslots","setaddquickslots","vitalsform","setvitalsform","consumables","setconsumables","setappointmentvitalslist","billindex","setbillindex","billform","setbillform","paymentsindex","setpaymentsindex","paymentsi","setpaymentsi","paymentsform","setpaymentsform","setd_form","nsef","setnsef","pindex","setpindex","bindex","setbindex","_useState51","_useState52","status_appointment","setstatus_appointment","_Appointmentlist","todayDoc","_selected","_AllAppointments","get_appointment_data","AllAppointments","array","number","status_color","_GetAppointmentVitals","_SendNotifcation","SendNotifcation","CloseBillForm","OpenPaymentsForm","ClosePaymentsForm","ClosePaymentsForm2","Generate_Bill","window","open","bill_url","Generate_Prescription","prescription_pdf","Send_On_WhatsApp","phone","check","checkpres","check_pres","_x9","Send_On_SMS","check_bill","check_pre","_x10","_x11","_x12","toggle_nsef","toggle_ScannedPres","toggle_Scannedbill","_getdata","_callee10","_context10","appointment_status","getdata","minWidth","maxWidth","DocClinic","DoctorID","DoctorName","top","minHeight","Height","appointment_charges_edit","bill_id","timeslot","patient","is_profile_verified","scale","appointment_edit","AmountPaid","appointmentData","index","Payments","medicine_used","setItem","prescription_file","bill_file","doctor","appointment_date","Bill","doctorfee","consulationFee","SaleEntryForm","Prescription","prescriptions","Generated_bill","bill","Timecard","fetch_func","Fetch_function","clinics","_useState53","_useState54","cardindex","setcardindex","_useState55","_useState56","rooms","setrooms","diff","start","end","startDate","Date","getTime","hours","Math","floor","minutes","_useState57","_useState58","doctime","setdoctime","_useState59","_useState60","_useState61","_useState62","startload","setstartload","_fetchapi","_callee11","_context11","docid","_useState63","_useState64","refreshtimeslots","setrefreshtimeslot","_useState65","_useState66","roomnumber","setroomnumber","_starttimeslot","_callee12","_context12","room_id","endtimeslot","_x13","_endtimeslot","_callee13","log_id","_context13","room_number","paddingTop","login_time","padding","logout_time","createContext","Docval","setDocval","Doctor","setDoctor","setDoctorID","setDoctorName","setDocClinic","doctorindex","doctorform","setdoctorform","toggledoctorform","includes","getindexes","doctor_wise_appointment_count","doc_id","appointments","appointment_data","autoFocus","onFocus","a","timer_notify","dashboard_all","Provider","marginTop","AddDoctorSlot","staticBackdrop4","Doctors","adddoctorfortoday","setadddoctorfortoday","docdate","setdocdate","_AddDoctorForToday","resetform","checked","AddDoctorForToday"],"sourceRoot":""}