{"version":3,"file":"static/js/609.b90e79cd.chunk.js","mappings":"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","sources":["components/features/camera.jsx"],"sourcesContent":["import React, {useRef,useCallback, useState,useEffect} from \"react\";\r\nimport Notiflix from \"notiflix\";\r\nimport {ReactCrop } from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport '../../css/bootstrap.css'\r\nimport Webcam from 'react-webcam'\r\n\r\n  \r\n  const Camera = (props) => {\r\n    const [imagestate,setimagestate]=useState('')\r\n\r\n    const webcamRef = useRef(null);\r\n    const imgRef = useRef(null);\r\n    const[imgroll,setimgroll]=useState('none')\r\n    const [editor,seteditor] =useState('none')\r\n    const [imagearr,setimagearr] = useState([])\r\n    const [editindex, seteditindex] = useState(0)\r\n    const [image,setimage]=useState()\r\n    const [flip,setflip] =useState('environment')\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    const videoConstraints = {\r\n      width:width,\r\n      height: height,\r\n      facingMode: flip\r\n    };\r\n    const capture = useCallback(  \r\n      () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        if(imagearr.length>0){\r\n            setimagearr(imageSrc)\r\n            Notiflix.Notify.info('Photo Captured')\r\n            toggleGallery()\r\n        }else{\r\n            setimagearr((prevState)=>[...prevState,imageSrc])\r\n            Notiflix.Notify.info('Photo Captured')\r\n            toggleGallery()\r\n        }\r\n      },\r\n      [webcamRef]\r\n    );\r\n    \r\n    const toggleGallery = ()=>{\r\n        if(imgroll=='block'){\r\n            setimgroll('none')\r\n          \r\n        }\r\n        if(imgroll == 'none'){\r\n    \r\n            setimgroll('block')\r\n        }\r\n    }\r\n    \r\n    const toggleedit=()=>{\r\n    if(editor=='none'){\r\n      seteditor('')\r\n    }\r\n    if(editor==''){\r\n      seteditor('none')\r\n    }\r\n    }\r\n    const [src, setSrc] = useState(null);\r\n    // const[croppedimg,setcroppedimg]=useState()\r\n    const [crop, setCrop] = useState({   unit: '%',\r\n    x: 25,\r\n    y: 25,\r\n    width: 100,\r\n    height:100 });\r\n    const [completedCrop, setCompletedCrop] = useState(null);\r\n    const imageRef = useRef(null);\r\n    \r\n    const onSelectFile = (e) => {\r\n      setSrc(imagearr[editindex])\r\n    };\r\n    const createImageRef = (src) => {\r\n      const img = new Image();\r\n      img.src = src;\r\n      img.onload = () => {\r\n        imageRef.current = img;\r\n      };\r\n    };\r\n    useEffect(() => {\r\n      if (src) {\r\n        createImageRef(src);\r\n      }\r\n    }, [src]);\r\n    \r\n    const getCroppedImg = (image, crop, fileName) => {\r\n      const canvas = document.createElement('canvas');\r\n      const scaleX = image.naturalWidth / image.width;\r\n      const scaleY = image.naturalHeight / image.height;\r\n      canvas.width = crop.width;\r\n      canvas.height = crop.height;\r\n      const ctx = canvas.getContext('2d');\r\n    \r\n      ctx.drawImage(\r\n        image,\r\n        crop.x * scaleX,\r\n        crop.y * scaleY,\r\n        crop.width * scaleX,\r\n        crop.height * scaleY,\r\n        0,\r\n        0,\r\n        crop.width,\r\n        crop.height\r\n      );\r\n    \r\n      return new Promise((resolve, reject) => {\r\n        canvas.toBlob((blob) => {\r\n          if (!blob) {\r\n            // Reject if the blob is null\r\n            console.error('Canvas is empty');\r\n            return;\r\n          }\r\n          blob.name = fileName;\r\n          window.URL.revokeObjectURL(src);\r\n          const imageUrl = window.URL.createObjectURL(blob);\r\n          resolve(imageUrl);\r\n        }, 'image/jpeg');\r\n      });\r\n    };\r\n    const makeClientCrop = async (crop) => {\r\n      if ( imageRef.current && crop.width && crop.height) {\r\n        toggleedit()\r\n        setCompletedCrop()\r\n        // props.togglecamera()\r\n        const croppedImageUrl = await getCroppedImg(\r\n          imageRef.current,\r\n          crop,\r\n          'prescription.jpeg'\r\n        );\r\n        // You can do something with the cropped image URL, like displaying it or saving it.\r\n        // console.log(croppedImageUrl);\r\n        setimage(croppedImageUrl)\r\n        setimagestate('block')\r\n      }\r\n    };\r\n    //   console.log(width)\r\n    // Notiflix.Notify.info(`${width},${height}`)  \r\n    return (\r\n      <>\r\n\r\n          <div className={` p-0 position-absolute top-0 start-0`} style={{zIndex:'10'}} >\r\n            {/* <div className=\"btn-close position-absolute top-0 end-0 \" style={{zIndex:'11'}} onClick={()=>{togglecamera()}}></div> */}\r\n              <div className=\"col-12\">\r\n              <Webcam audio={false} ref={webcamRef} screenshotFormat=\"image/jpeg\" mirrored={false} videoConstraints={videoConstraints} />\r\n              </div>\r\n              <div className=\"col-12 bg-charcoal\">\r\n                <div className=\"row p-0 m-0 justify-content-between align-items-center position-relative\">\r\n                  <div className=\"col-3\">\r\n                  <button className=\"border-0 justify-content-start cameraroll button button-pearl p-0 m-0 \"onClick={()=>{toggleGallery()}}>\r\n            {\r\n                imgroll=='none'?(   \r\n                    <img src={process.env.PUBLIC_URL+'/images/gallery.png'} className=\"img-fluid bg-charcoal75 px-2 py-1 rounded-top mb-1\" style={{width:'2rem'}}/>\r\n                ):(\r\n                    <img src={process.env.PUBLIC_URL+'/images/bottom.png'} className=\"img-fluid bg-seashell px-2 py-1 rounded-top mb-1\"/>\r\n                )\r\n            }\r\n          </button>\r\n            <div className={`container position-absolute cameraroll scroll bg-charcoal25 ms-2 d-${imgroll}`}style={{flexDirection:'horizontal',minHeight:'fit-content',zIndex:'10',top:'-5rem'}}> \r\n            {\r\n                imagearr? imagearr.map((data,i)=>(\r\n                    <img src={data} className=\"img-fluid\" onClick={()=>{toggleedit();seteditindex(i);onSelectFile()}} style={{width:'5rem'}}/>\r\n\r\n                )):''\r\n            }\r\n            </div>\r\n                  </div>\r\n                  <div className=\"col-6 align-items-center d-flex justify-content-center\">\r\n                  <img className=\"img-fluid bg-lightyellow rounded-2\" onClick={()=>{capture()}} style={{width:'4rem'}} src={process.env.PUBLIC_URL + '/images/camera_click.png'}/>\r\n                  </div>\r\n                  <div className=\"col-3 d-flex justify-content-center\">\r\n                  <button className=\"button button-pearl border-0 cameraroll p-0 m-0\" onClick={()=>{flip=='user'?setflip('environment'):setflip('user')}}><img src={process.env.PUBLIC_URL+'/images/flip.png'} className=\"img-fluid bg-charcoal75 px-2 py-1 rounded-top mb-1\" style={{width:'1.8rem'}}/></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n      {/* cropper */}\r\n      {\r\n        webcamRef.current ? (\r\n          <div className={`d-${editor} container position-absolute top-0 bg-pearl shadow-sm`} style={{zIndex:'15',height:height,width:width}}>\r\n          <button className=\"position-absolute end-0 bg-seashell50 p-2 btn-close\" style={{zIndex:'18'}} onClick={()=>{toggleedit()}}></button>\r\n        <div className=\"mt-0 position-absolute start-0 end-0 mx-auto\">\r\n          <ReactCrop crop={crop} onChange={(c) => setCrop(c)} onComplete={(c) => setCompletedCrop(c)} >\r\n            <img src={src} className=\"img-fluid\" style={{width:`${webcamRef.current.video.videoWidth}px`}}/>\r\n          </ReactCrop>\r\n      </div>    \r\n      {/* height:`${webcamRef.current.video.videoHeight}px`, */}\r\n      </div>\r\n        ):(\r\n          <></>\r\n        )\r\n      }\r\n\r\n      {/* cropper */}\r\n  </div>\r\n        {completedCrop && (\r\n        <div className=\"position-absolute top-0 mt-4 ms-2\" style={{zIndex:'15'}}>\r\n          <button className=\"button button-charcoal text-light border border-light\" onClick={() => makeClientCrop(completedCrop)}>Save</button>\r\n        </div>\r\n      )}\r\n      {\r\n      image ?(\r\n        <div className={`position-absolute top-0 start-0 mx-auto end-0 bg-lightyellow d-${imagestate}`} style={{height:height,width:width,zIndex:'20'}} >\r\n          <div className=\"position-relative justify-content-center\">\r\n          <button className=\"btn-close position-absolute top-0 end-0\"onClick={()=>{setimagestate('none')}}></button>\r\n          <img src={image} className=\"img-fluid\" style={{width:crop.width,height:crop.height}}/>\r\n          </div>\r\n    \r\n        </div>\r\n      ):(<></>)\r\n      } \r\n      </>\r\n    );\r\n  }\r\n  export default Camera"],"names":["props","_useState","useState","_useState2","_slicedToArray","imagestate","setimagestate","webcamRef","useRef","_useState3","_useState4","imgroll","setimgroll","_useState5","_useState6","editor","seteditor","_useState7","_useState8","imagearr","setimagearr","_useState9","_useState10","editindex","seteditindex","_useState11","_useState12","image","setimage","_useState13","_useState14","flip","setflip","width","window","innerWidth","height","innerHeight","videoConstraints","facingMode","capture","useCallback","imageSrc","current","getScreenshot","length","Notiflix","toggleGallery","prevState","concat","_toConsumableArray","toggleedit","_useState15","_useState16","src","setSrc","_useState17","unit","x","y","_useState18","crop","setCrop","_useState19","_useState20","completedCrop","setCompletedCrop","imageRef","useEffect","img","Image","onload","createImageRef","getCroppedImg","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","Promise","resolve","reject","toBlob","blob","name","URL","revokeObjectURL","imageUrl","createObjectURL","console","error","makeClientCrop","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","croppedImageUrl","wrap","_context","prev","next","sent","stop","_x","apply","arguments","_jsxs","_Fragment","children","className","style","zIndex","_jsx","Webcam","audio","ref","screenshotFormat","mirrored","onClick","flexDirection","minHeight","top","map","data","i","ReactCrop","onChange","c","onComplete","video","videoWidth"],"sourceRoot":""}