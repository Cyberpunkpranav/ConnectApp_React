{"version":3,"file":"static/js/414.02c089c7.chunk.js","mappings":"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","sources":["components/Today/UpdateAppointment.jsx","components/Appointments/SelectedTimeAppointment.jsx","components/Today/SelectedDoctorSlot.jsx","components/Today/Vitals.jsx","components/Today/AddConsumables.jsx","components/Today/Doctor.jsx","components/App/Clinic.jsx","components/Today/AddDoctorSlot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const confirmmessageforCancel = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Cancel Appointment`,\r\n            `Do you surely want to Cancel ${props.patientname}'s Appointment`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                CancelAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const CancelAppointment = async () => {\r\n        try {\r\n            await axios.post('http://aartas-qaapp-as.azurewebsites.net/aartas_redev/public/api/cancel/appointment', {\r\n                appointment_id: props.appointmentid\r\n            }).then((response) => {\r\n                \r\n                if (response.status == true) {\r\n                    props.fetchallAppointmentslist()\r\n                    props.fetchapi()\r\n                } else {\r\n                    Notiflix.Notify.failure(\"Cannot Cancel Appointment.Please try again.\")\r\n                }\r\n\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center p-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell border-0 p-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-end text-charcoal `}>\r\n                                <div className=\"row p-0 m-0 align-items-end\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img className='img-fluid' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold text-wrap mb-2\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal rounded-1 bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>Dr. {data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\" border-0 col-12 bg-seashell \"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell rounded-1 border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal50 fw-bold'>Selected Time</label>\r\n                        <div className=\"col-12 p-0 m-0 selectedtime\">\r\n                            <button className='button button-charcoal50-outline rounded-1 fw-bold shadow-none' style={{ letterSpacing: '1px' }} >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <p className=\"m-0 mt-2 fw-bold ps-2 pt-2\" style={{ letterSpacing: '1px' }}>Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ps-2\">\r\n                    {ApiDocTimefrom && ApiDocTimefrom.length !== 0 ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} px-3 py-2 rounded-1 fw-bold m-1`} style={{ letterSpacing: '1px' }} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline rounded-1 px-3 py-2 m-1 fw-bold\" style={{ letterSpacing: '1px' }} id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded fw-bold text-burntumber bg-lightred'>No Time Slots Available</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button className='btn button-charcoal' onClick={confirmmessage}>Update</button>\r\n                                </div>\r\n\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button type=\"button\" className=\"button button-pearl\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} >Cancel</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate, Clinic, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix'\r\n\r\nimport '../../css/dashboard.css'\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const Doclist = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n\r\n    // Functions\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time]\r\n        if (time.length > 1) {\r\n            time = time.slice(1)\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM '\r\n            time[0] = +time[0] % 12 || 12\r\n        }\r\n        return time.join('')\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block')\r\n        } else {\r\n            setdisplaysearchlist('none')\r\n        }\r\n    }\r\n    const get_value = (data) => {\r\n        setsearchinput(data.full_name)\r\n        setpatientid(data.id)\r\n        setdisplaysearchlist('none')\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && doctorid && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                setload(false)\r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n            setload(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment  at <span className=' text-charcoal fw-bold border-0 fs-6'>{tConvert(props.selectedtime)}</span></h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute top-0 mt-2\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <hr className='p-0 m-0 mb-1' />\r\n            <div className=\" text-start p-0 m-0 ms-3 clinics align-items-end mb-2 fw-bold text-burntumber \">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}>\r\n                            <img src={process.env.PUBLIC_URL + '/images/location.png'} className=' align-self-center '/> {data.title} {data.address}</label>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control bg-pearl border-0\" value={searchinput ? searchinput : ''} onChange={(e) => { searchpatient(e) }} />\r\n                    <div className={`col-6 position-absolute d-${displaysearchlist} bg-pearl rounded-2 shadow mt-1 pb-2 `} style={{ zIndex: 3 }}>\r\n                        {\r\n                            searchload ? (\r\n                                <div className=\" col-12 text-charcoal75 p-0 m-0 py-2 fw-bold text-start ps-2 mt-1\">Loading... </div>\r\n                            ) : (\r\n                                searchlist !== undefined && searchlist.length == 0 ? (\r\n                                    <div className=\"text-burntumber col-12 p-0 m-0 fw-bold mt-1 ps-2 pt-1\">Patient not found</div>\r\n                                ) : (\r\n                                    <div className='mt-1 searchresult bg-pearl  col-12  ' >\r\n                                        {\r\n                                            searchlist.map((data, i) => (\r\n                                                <div style={{ cursor: 'pointer' }} className={`col-12 d-block p-2 fw-bold text-charcoal text-start border-bottom align-self-center`} name={data.id} value={data.full_name} onClick={() => { get_value(data) }}>{data.full_name} <span className='fw-bold text-burntumber'>{data.phone_number}</span></div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"d-flex p-0 m-0 text-start justify-content-around\">\r\n                        <div className='button button-charcoal50-outline align-self-center '> Dr.{doctorname}</div>\r\n                        <div className=\"button button-charcoal50-outline ms-3\" >{reversefunction(APIDate)}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                load ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"col-6 donebutton py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"button button-charcoal\" onClick={BookAppointment}> Done </button>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState()\r\n    const [docdate, setdocdate] = useState()\r\n    const [fromtime, setfromtime] = useState()\r\n    const [totime, settotime] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n        if (doctorid && APIDate && fromtime && totime && clinicid && admin_id) {\r\n            Notiflix.Loading.pulse({\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E'\r\n            })\r\n            await axios.post(`${url}/doctor/add/timeslots`, {\r\n                doctor_id: doctorid,\r\n                date: APIDate,\r\n                time_from: fromtime,\r\n                time_to: totime,\r\n                clinic_id: clinicid,\r\n                admin_id: admin_id\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                props.CloseAddQuickSlots()\r\n                props.fetchapi()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Doctor Slot`,\r\n            `Do you surely want to add more Time Slots of Dr. ${doctorname}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        )\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center pt-1\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 text-center clinics\">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'} img-fluid`}><img src={process.env.PUBLIC_URL + '/images/location.png'} />{data.title} {data.address}</label>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row mt-2 justify-content-center gx-2\">\r\n                <div className=\"col-auto\">\r\n                    <button className='button button-charcoal50-outline'>{doctorname}</button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div type=\"date\" disabled className=\"form-control col-10 button button-charcoal50-outline\" >{reversefunction(APIDate)}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 mt-2 justify-content-center\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                </div>\r\n                <div className='col-auto'>-</div>\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }","import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const adminid = localStorage.getItem('id')\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          UpadteStatus()\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  async function UpadteStatus() {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: props.appointmentid,\r\n          status: 6,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          props.Appointmentlist()\r\n          Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n\r\n  }\r\n  return (\r\n    <div className='container-fluid col-lg-10 col-md-11 px-0 col-sm-12 col-12 col-xl-10 bg-seashell rounded-2 position-relative pb-4 pt-0'>\r\n      <div className=\"shadow-sm pt-2 pb-2\">\r\n      <h5 className='text-center p-0 m-0 fw-bold'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2 pt-3' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 mt-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} className='img-fluid' style={{ width: '1.2rem' }} /></button>\r\n      </div>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '>\r\n                <h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid mt-2\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row justify-content-end align-items-center\">\r\n              <div className=\"col-3\">\r\n                <select className='form-control p-0 border-0 text-center bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0 \">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center p-0 m-0'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center p-0 m-0'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-auto me-5\">\r\n              <button className='btn p-0 m-0 ' style={{opacity:'0'}}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }}/></button>\r\n\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <div className=\"container text-center mt-3\">\r\n        <button className='button button-charcoal mx-auto' onClick={props.CloseVitals}>Done</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","import { URL, TodayDate, DoctorsList, Clinic, Permissions } from '../../index';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport React, { useState, useRef, useContext, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport axios from 'axios'\r\n\r\n\r\nconst AddConsumables = (props) => {\r\n    const tableref = useRef(null)\r\n    const cliniclist = useContext(Clinic)\r\n    const url = useContext(URL)\r\n    const Doclist = useContext(DoctorsList)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const medicinesref = useRef(null)\r\n    const medbyidref = useRef(null);\r\n    const patientaddref = useRef(null)\r\n    const stockref = useRef(null)\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [doctorname, setdoctorname] = useState()\r\n    const [otherdoctor, setotherdoctor] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [ischecked, setischecked] = useState()\r\n    const [Dc, setDc] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [products, setproducts] = useState([])\r\n    const [itemsearch, setitemsearch] = useState([])\r\n    const [itembyid, setitembyid] = useState([])\r\n    const [loadbyId, setloadbyId] = useState()\r\n    const [itemname, setitemname] = useState()\r\n    const [itemid, setitemid] = useState()\r\n    const [SelectedProducts, setSelectedProducts] = useState([])\r\n    const [Grandtotal, setGrandtotal] = useState()\r\n    const [Grandtotal2, setGrandtotal2] = useState()\r\n    const [loadsearch, setloadsearch] = useState()\r\n    const [ce, setce] = useState('none')\r\n    const [nursenotes, setnursenotes] = useState(props.appointmentdata.nursing_notes ? props.appointmentdata.nursing_notes : '')\r\n    const [deleteload, setdeleteload] = useState(false)\r\n    const [loadnotes, setloadnotes] = useState(false)\r\n    const [i, seti] = useState()\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    const searchmeds = async (search) => {\r\n        setloadsearch(true)\r\n        try {\r\n            await axios.get(`${url}/stock/list?search=${search}&location_id=${clinicID}`).then((response) => {\r\n                let medicines = []\r\n                let vaccines = []\r\n                let items = []\r\n                medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n                vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n                items = medicines.concat(vaccines)\r\n                items = items.flat()\r\n                setitemsearch(items)\r\n                setloadsearch(false)\r\n                if (search.length > 1) {\r\n                    medicinesref.current.style.display = 'block';\r\n                } else {\r\n                    medicinesref.current.style.display = 'none';\r\n                }\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const searchmedbyId = async (search) => {\r\n        if (search.length > 0) {\r\n            setloadbyId(true)\r\n            try {\r\n                await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n                    setloadbyId(false)\r\n                    setitembyid([response.data.data])\r\n                })\r\n            } catch (e) {\r\n                setloadbyId(false)\r\n                Notiflix.Notify.failure(e.message)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Doclist.map((data) => (\r\n            data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n        ))\r\n    }, [doctorid])\r\n    \r\n    function CalSellingCost(mrp, disc) {\r\n        let cost = mrp\r\n        if (!disc) {\r\n            cost = Number(mrp)\r\n            return cost\r\n        } else {\r\n            cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n    }\r\n    function CalTotalAmount(qty, cst, realcst) {\r\n        let cost = cst\r\n        if (Number(realcst) > Number(cost)) {\r\n            Notiflix.Notify.failure('Selling Cost should not less than Cost')\r\n        }\r\n        if (!qty) {\r\n            return 0\r\n        } else if (qty == 1) {\r\n            cst = Number(cst)\r\n            return cst\r\n        } else {\r\n            cost = Number(cst) * Number(qty)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n\r\n    }\r\n    function CalGrandttl() {\r\n        let ttl = 0\r\n        SelectedProducts.map((data) => (\r\n            ttl += Number(data.totalamt)\r\n        ))\r\n        setGrandtotal(ttl.toFixed(2))\r\n    }\r\n    function CalGrandttl2() {\r\n        let ttl = 0\r\n        props.existedconsumables.map((data) => (\r\n            ttl += Number(data.total_amount)\r\n        ))\r\n        setGrandtotal2(ttl.toFixed(2))\r\n    }\r\n    function CaltotalDiscount(data) {\r\n        let total = 0\r\n        if (data) {\r\n            data.forEach(item => {\r\n                total += Number(item.discount)\r\n            })\r\n            return total\r\n        } else {\r\n            return total\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        CalGrandttl()\r\n    }, [SelectedProducts])\r\n    useEffect(() => {\r\n        CalGrandttl2()\r\n    }, [props.existedconsumables])\r\n    // useEffect(() => {\r\n    //     setnursenotes()\r\n    // }, [])\r\n    function AddProducts(data) {\r\n        let T = ''\r\n        if (data.vaccine_brand_id) {\r\n            T = 'v'\r\n        } else {\r\n            T = 'm'\r\n        }\r\n        let ProductDetails = {\r\n            productid: data.id,\r\n            type: data.type ? data.type : T,\r\n            product: data.item_name ? data.item_name : itemname,\r\n            batch: data.batch_no,\r\n            expiry: data.expiry_date,\r\n            quantity: data.current_stock,\r\n            qtytoSale: 1,\r\n            discount: 0,\r\n            cost: data.cost,\r\n            mainmrp: data.mrp,\r\n            disccost: data.mrp,\r\n            gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n            totalamt: data.mrp\r\n\r\n        }\r\n\r\n        if (SelectedProducts && SelectedProducts.length == 0) {\r\n            setSelectedProducts([ProductDetails])\r\n        } else {\r\n            setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n        }\r\n\r\n    }\r\n    async function DeleteProduct(Batch) {\r\n        let obj = []\r\n        obj.push(SelectedProducts.filter(function (e) {\r\n            return e.batch !== Batch\r\n        }))\r\n        obj = obj.flat()\r\n        setSelectedProducts(obj)\r\n    }\r\n    async function SubmitConsumabaleEntry() {\r\n        let productids = [];\r\n        let proquantity = [];\r\n        let Discount = [];\r\n        let discountonmrp = [];\r\n        let mrp = [];\r\n        let GST = [];\r\n        let Totalamount = []\r\n\r\n        for (let i = 0; i < SelectedProducts.length; i++) {\r\n            productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n            proquantity.push(SelectedProducts[i].qtytoSale)\r\n            Discount.push(SelectedProducts[i].discount)\r\n            discountonmrp.push(SelectedProducts[i].disccost)\r\n            mrp.push(SelectedProducts[i].mainmrp)\r\n            GST.push(SelectedProducts[i].gst)\r\n            Totalamount.push(SelectedProducts[i].totalamt)\r\n        }\r\n        let Data = {\r\n            pro_id: productids,\r\n            qty: proquantity,\r\n            discount: Discount,\r\n            disc_mrp: discountonmrp,\r\n            main_mrp: mrp,\r\n            gst: GST,\r\n            total_amount: Totalamount,\r\n            appointment_id: props.appointmentid,\r\n        }\r\n        setload(true)\r\n        try {\r\n            await axios.post(`${url}/save/consumable`, Data).then((response) => {\r\n                setload(false)\r\n                if (response.data.status == true) {\r\n                    NurseNotes()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    props.Appointmentlist()\r\n                    setSelectedProducts([])\r\n                } else {\r\n                    Notiflix.Notify.warning(response.data.message)\r\n                }\r\n            }).catch(function error(e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            setload(false)\r\n        }\r\n    }\r\n    function confirmmessage() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                SubmitConsumabaleEntry()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    function confirmmessage2() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to save the following Note`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NurseNotes()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const toggle_consumables_existed = () => {\r\n        if (ce === 'none') {\r\n            setce('block')\r\n        }\r\n        if (ce === 'block') {\r\n        }\r\n    }\r\n    const NurseNotes = async () => {\r\n        try {\r\n            setloadnotes(true)\r\n            await axios.post(`${url}/save/nursing/notes`, {\r\n                appointment_id: props.appointmentid,\r\n                notes: nursenotes\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n                setloadnotes(false)\r\n            })\r\n        } catch (e) {\r\n            setloadnotes(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const RemoveConsumable = async (ID) => {\r\n        setdeleteload(true)\r\n        try {\r\n            await axios.post(`${url}/remove/consumable`, {\r\n                id: ID\r\n            }).then((response) => {\r\n                setdeleteload(false)\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } catch (e) {\r\n            setdeleteload(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid bg-seashell rounded-2 px-0 position-relative mx-auto col-lg-11 col-md-11 col-sm-11 col-11 col-xl-9\" style-={{ height: '70vh' }}>\r\n            <div className='position-relative mb-3 text-center shadow-sm'>\r\n                <h5 className='text-start text-charcoal text-center fw-bold py-2 '>{props.patientname} Consumables</h5>\r\n                <button className='btn btn-close position-absolute p-1 m-0 end-0 top-0 me-2 pt-4' disabled={load ? true : false} onClick={props.toggleConsumables}></button>\r\n            </div>\r\n\r\n            <div className={`container-fluid text-start p-0 m-0 mt-3`}>\r\n                <div className=\"col-12 justify-content-center\">\r\n                    <div className=\"row p-0 m-0 my-2 justify-content-start\">\r\n                        <div className=\"col-4 position-relative\">\r\n                            <input className='form-control bg-seashell fw-bold p-2 border-charcoal' placeholder='Search by Name'\r\n                                value={itemname ? itemname : ''}\r\n                                onChange={(e) => {\r\n                                    searchmeds(e.target.value);\r\n                                    setitemname(e.target.value);\r\n                                    setitemid();\r\n                                    setproducts();\r\n                                    stockref.current.style.dispzzzlay = 'none'\r\n                                }} />\r\n                            <div className=\"position-absolute mt-1 bg-raffia\">\r\n                                <div className=\"position-relative \" style={{ width: '30vh' }}>\r\n                                    <div ref={medicinesref} className='position-absolute scroll scroll-y rounded-1 ' style={{ Width: 'max-content', zIndex: '1', maxHeight: '40vh' }} >\r\n                                        {\r\n                                            itemsearch ? (\r\n                                                loadsearch ? (\r\n                                                    <div className='rounded-1 p-1 bg-pearl'>\r\n                                                        Searching Please wait....\r\n                                                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                            <span className=\"sr-only\"> </span> </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    loadsearch == false && itemsearch.length == 0 ? (\r\n                                                        <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                                    ) : (\r\n                                                        <div className={`rounded-1 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                                                            <p className={`text-start m-1 fw-bold text-charcoal75 ms-1`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                                                            {\r\n                                                                itemsearch.map((data, i) => (\r\n                                                                    <div style={{ cursor: 'pointer', Width: '10rem' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-1 py-3 fw-bold border-bottom text-charcoal `}\r\n                                                                        onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = 'block' }}>{data.display_name ? data.display_name : data.name}<span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span></div>\r\n                                                                ))\r\n                                                            }\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                            ) : (<div className='bg-seashell'></div>)\r\n                                        }\r\n                                    </div>\r\n                                    <div ref={stockref} className={`position-absolute start-100 bg-pearl px-3 scroll scroll-y align-self-center rounded-1 border border-1 p-1 d-${products && products.stock_info && products.stock_info !== undefined ? 'block' : 'none'}`} style={{ marginTop: '0rem', zIndex: '2', 'width': '22vh', 'min-width': '30vh', 'height': '40vh' }}>\r\n                                        <p className={`text-start m-1 fw-bold text-charcoal75`} style={{ fontSize: '0.8rem' }}>{products && products.stock_info !== undefined ? products.stock_info.length : ''} Batch Stocks</p>\r\n                                        {\r\n                                            products && products.length !== 0 ? (\r\n                                                products && products.stock_info.length == 0 ? (\r\n                                                    <div className='text-white bg-burntumber p-2'>Oops ! Not Available</div>\r\n                                                ) : (\r\n                                                    products.stock_info.map((data, i) => (\r\n                                                        <div style={{ cursor: 'pointer', marginTop: '2%' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} border-bottom p-2`}\r\n                                                            onClick={\r\n                                                                () => {\r\n                                                                    AddProducts(data);\r\n                                                                    setitemname();\r\n                                                                    setitemid();\r\n                                                                    setproducts();\r\n                                                                    setitemsearch()\r\n                                                                }}>\r\n                                                            <h6 className='text-start m-0 p-0 fw-bold text-wrap'>{itemname}</h6>\r\n                                                            <p className='p-0 m-0 px-1'>BatchNo. - <span className='fw-bold'>{data.batch_no && data.batch_no !== null ? data.batch_no : ''}</span></p>\r\n                                                            <p className='p-0 m-0 px-1'>Stock - <span className='fw-bold'>{data.current_stock && data.current_stock ? data.current_stock : ''}</span></p>\r\n                                                            <p className='p-0 m-0 px-1'>Expiry Date - <span className='fw-bold'>{data.expiry_date ? reversefunction(data.expiry_date) : ''}</span></p>\r\n                                                        </div>\r\n                                                    ))\r\n                                                )\r\n\r\n\r\n                                            ) : (\r\n                                                <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-auto text-burntumber text-center fw-bold align-self-center'> OR </div>\r\n                        <div className=\"col-4 \">\r\n                            <input className='form-control bg-seashell border border-1 rounded-2 text-charcoal p-2 fw-bold border-charcoal' value={itemid ? itemid : ''} placeholder='Search by ID' onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = 'block' }} />\r\n                            <div ref={medbyidref} className='position-absolute rounded-1 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                                {\r\n                                    itembyid ? (\r\n                                        loadbyId ? (\r\n                                            <div className='rounded-1 p-1 bg-pearl'>\r\n                                                Searching Please wait....\r\n                                                <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                    <span className=\"sr-only\"> </span> </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            loadbyId == false && itembyid.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                            ) : (\r\n                                                itembyid.map((data, i) => (\r\n                                                    <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 p-1 rounded-pill shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'}`}\r\n                                                        onClick={(e) => {\r\n                                                            setitemid(data.type + data.id);\r\n                                                            AddProducts(data)\r\n                                                            medbyidref.current.style.display = 'none';\r\n                                                        }}>{data.item_name ? data.item_name : ''}</div>\r\n                                                ))\r\n                                            )\r\n                                        )\r\n                                    ) : (<div className='bg-seashell'></div>)\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 m-0 p-0\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    </div>\r\n                    <div className='scroll scroll-y' style={{ height: '40vh' }}>\r\n                        <table className='table'>\r\n                            <thead className=' bg-seashell position-sticky top-0'>\r\n                                <tr className={``}>\r\n                                    <th className=''>Item ID</th>\r\n                                    <th className=''>Item Name</th>\r\n                                    <th className=''>BatchNo.</th>\r\n                                    <th className=''>Expiry Date</th>\r\n                                    <th className=''>Avl.Stock</th>\r\n                                    <th className=''>Qty To Sale</th>\r\n                                    <th className=''>Discount %</th>\r\n                                    <th className=''>MRP</th>\r\n                                    <th className=''>Cost</th>\r\n                                    <th className=''>GST Rate</th>\r\n                                    <th className=''>Selling Cost/Unit</th>\r\n                                    <th className=''>Total Amount</th>\r\n                                    <th className=''>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {\r\n                                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                                    <tbody className='p-0 m-0 bg-pearl'>\r\n                                        {\r\n                                            SelectedProducts.map((data) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>{data.type}{data.productid}</td>\r\n                                                    <td>{data.product}</td>\r\n                                                    <td>{data.batch}</td>\r\n                                                    <td>{reversefunction(data.expiry)}</td>\r\n                                                    <td>{data.quantity}</td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                                                            onChange={(e) => {\r\n                                                                e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost);\r\n                                                                setSelectedProducts(prevState => [...prevState])\r\n                                                            }} /> </td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.discount ? data.discount : ''}\r\n                                                            onChange={(e) => {\r\n                                                                data.discount = e.target.value;\r\n                                                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost))\r\n                                                                setSelectedProducts(prevState => [...prevState]);\r\n                                                            }} /> </td>\r\n                                                    <td>₹{data.mainmrp}</td>\r\n                                                    <td>₹{data.cost}</td>\r\n                                                    <td>{data.gst + '%'}</td>\r\n                                                    <td>₹{data.disccost}</td>\r\n                                                    <td>₹{data.totalamt}</td>\r\n                                                    <td><img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { DeleteProduct(data.batch) }} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                ) : (\r\n                                    props.existedconsumables && props.existedconsumables.length == 0?(\r\n                                        <tbody className='p-0 m-0 bg-seashell'>\r\n                                        <tr className='p-0 m-0 text-center'>\r\n                                            <td className='position-absolute text-charcoal75 fw-bold start-0 end-0'>No Consumabels Added</td>\r\n                                        </tr>\r\n\r\n\r\n                                    </tbody>\r\n                                    ):(<></>)\r\n\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                props.existedconsumables && props.existedconsumables.length == 0 ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <tbody className='position-relative bg-seashell'>\r\n                                        {\r\n                                            props.existedconsumables.map((data, key) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>m{data.medicies_stocks_id}</td>\r\n                                                    <td>{data.medicine.display_name}</td>\r\n                                                    <td>{data.medicine_stocks.batch_no}</td>\r\n                                                    <td>{reversefunction(data.medicine_stocks.expiry_date)}</td>\r\n                                                    <td></td>\r\n                                                    <td>{data.qty}</td>\r\n                                                    <td className='text-start p-0 m-0 ps-4'>{data.discount} </td>\r\n                                                    <td>₹{data.main_mrp}</td>\r\n                                                    <td>₹{data.medicine_stocks.cost}</td>\r\n                                                    <td>{Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate) + \"%\"}</td>\r\n                                                    <td>₹{data.disc_mrp}</td>\r\n                                                    <td>₹{data.total_amount}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            deleteload && i == key ? (\r\n                                                                <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                                            ) : (\r\n                                                                <img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { seti(key); RemoveConsumable(data.id) }} />\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{ height: '30vh', paddingBottom: '10vh' }}>\r\n                    <h6 className='fw-bold p-0 m-0 ps-0 ms-0 my-2'>Nurse notes</h6>\r\n                    {\r\n                        loadnotes ? (\r\n                            <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <textarea className='col-12 form-control w-100' value={nursenotes ? nursenotes : ''} onChange={(e) => setnursenotes(e.target.value)} style={{ width: '95vh', height: '10vh' }}></textarea>\r\n\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-start bg-pearl align-items-center rounded-bottom'>\r\n                <div className=\"row p-0 m-0 align-items-center justify-content-between\">\r\n                    <div className=\"col-6 col-md-4\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Order Total </p>\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>₹{Grandtotal2}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+₹{Grandtotal}</p>\r\n                                        </>\r\n\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1 ps-3' />\r\n                                <h6 className='text-charcoal fw-bolder card-header text-start ms-2'>₹{(Number(Grandtotal) + Number(Grandtotal2)).toFixed(2)}</h6>\r\n                            </div>\r\n                            {/* <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n                            </div> */}\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Total Items</p>\r\n\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length ? props.existedconsumables.length : 0}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+{SelectedProducts && SelectedProducts.length ? SelectedProducts.length : 0}</p>\r\n                                        </>\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1' />\r\n                                <h6 className='text-charcoal  fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length || SelectedProducts && SelectedProducts.length ? SelectedProducts.length + props.existedconsumables.length : 0}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-8\">\r\n                        <div className=\"row p-0 m-0 justify-content-end \">\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    loadnotes ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-seashell px-5 me-2' onClick={() => { confirmmessage2() }}>Save Notes</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    load ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-charcoal px-5 me-2' onClick={() => { confirmmessage() }}>Save All</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport { AddConsumables }","import React, { createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport AmountPaid from './AmountPaid';\r\nimport { URL, TodayDate, Clinic, Permissions,Fetch_function } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport '../../css/dashboard.css'\r\nimport { SelectedTimeAppointment } from '../Appointments/SelectedTimeAppointment'\r\nimport { AddSelectedDoctorSlot } from './SelectedDoctorSlot'\r\nimport { Vitalsoperation } from \"./Vitals\";\r\nimport { Payments } from \"./Payments\";  \r\nimport { Bill } from \"./Bill\";\r\nimport { AddConsumables } from \"./AddConsumables\";\r\nimport { SaleEntryForm } from '../pharmacy/pharmacy';\r\nimport {Prescription} from './prescription';\r\nimport { Generated_bill } from \"./generated_bill\";\r\nimport { appointment_status } from \"./fetch_apis\";\r\n\r\n\r\nfunction DoctorSchedule(props) { \r\n  //Global Variables\r\n  const url = useContext(URL)\r\n  const todayDate = useContext(TodayDate)\r\n  const permission = useContext(Permissions)\r\n  const adminid = localStorage.getItem('id')\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  //Use States\r\n  const [appointmentdata, setappointmentdata] = useState([]);\r\n  const [singleload, setsingleload] = useState(0)\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [tableindex, settableindex] = useState()\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [addappointmentform, setaddappointmentform] = useState('none')\r\n  const [appointmentid, setappointmentid] = useState()\r\n  const [timeindex, settimeindex] = useState()\r\n  const [saleindex, setsaleindex] = useState()\r\n  const [consumablesindex, setconsumablesindex] = useState()\r\n  const [addquickslots, setaddquickslots] = useState('none')\r\n  const [vitalsform, setvitalsform] = useState('none')\r\n  const [consumables, setconsumables] = useState('none')\r\n  const [vitalindex, setvitalindex] = useState()\r\n  const [appointmentvitalslist, setappointmentvitalslist] = useState([])\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [paymentsindex, setpaymentsindex] = useState()\r\n  const [paymentsi, setpaymentsi] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [d_form, setd_form] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  const[pindex,setpindex]=useState()\r\n  const[bindex,setbindex]=useState()\r\n  const [status_appointment,setstatus_appointment] = useState([])\r\n  // for UpdateAppointment\r\n  const closeappointmentform = () => {\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  };\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n\r\n  function ArraySum(arr) {\r\n    if (arr.length > 0) {\r\n      let sum = arr.reduce((accumulator, value) => {\r\n        return accumulator + value;\r\n      }, 0);\r\n      return sum;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  async function Appointmentlist() {\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?clinic_id=${ClinicId}&doctor_id=${props.todayDoc[props._selected][0]}&from_date=${todayDate}&to_date=${todayDate}`).then((response) => {\r\n      setappointmentdata(response.data.data && response.data.data !=undefined ? response.data.data :[]);\r\n      // setappointmentdata([]);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  async function AllAppointments(){\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?clinic_id=${ClinicId}&from_date=${todayDate}&to_date=${todayDate}`).then((response) => {\r\n      props.get_appointment_data(response.data.data && response.data.data !=undefined ? response.data.data :[])\r\n      // setappointmentdata([]);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  useEffect(()=>{\r\n    AllAppointments()\r\n  },[])\r\n  useEffect(() => {\r\n    Appointmentlist();\r\n  }, [props._selected]);\r\n\r\n  function tConvert(time) {\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    } \r\n    return time.join('');\r\n  }\r\n  let array = [[1, 'lightred'], [2, 'lightblue'], [3, 'lightred'], [4, 'light'], [5, 'brandy'], [6,'lightred'], [7, 'lightyellow'], [8, 'lightgreen'], [9, 'lightyellow'], [10, 'lightgreen']]\r\n\r\n  function status(number) {\r\n    let status\r\n    if(status_appointment!=undefined && status_appointment.length>0){\r\n      for (let i = 0; i < status_appointment.length; i++) {\r\n        if (number == status_appointment[i].id) {\r\n          status = status_appointment[i].title\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][1]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Appointmentlist()\r\n          Loading.remove()\r\n          props.fetchapi()\r\n          Notiflix.Notify.success(response.data.message)\r\n        }).catch((e)=>{\r\n          Loading.remove()\r\n          Notiflix.Notify.failure(e.message)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  const openAddApppointmentform = () => {\r\n    setaddappointmentform('block')\r\n  }\r\n  const closeAddAppointmentform = () => {\r\n    setaddappointmentform('none')\r\n    settimeindex()\r\n  }\r\n  function OpenAddQuickSlots() {\r\n    if (addquickslots === 'none') {\r\n      setaddquickslots('block')\r\n    }\r\n  }\r\n  function CloseAddQuickSlots() {\r\n    if (addquickslots === 'block') {\r\n      setaddquickslots('none')\r\n    }\r\n  }\r\n\r\n  //Vitals Section\r\n  function OpenVitals() {\r\n    if (vitalsform === 'none') {\r\n      setvitalsform('block')\r\n    }\r\n  }\r\n  function CloseVitals() {\r\n    if (vitalsform === 'block') {\r\n      setvitalsform('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n\r\n  async function GetAppointmentVitals(id) {\r\n    setloadvitals(true)\r\n    await axios.get(`${url}/appointment/vitals/list?appointment_id=${id}`).then((response) => {\r\n      setappointmentvitalslist(response.data.data.vitals)\r\n      setloadvitals(false)\r\n    })\r\n  }\r\n  //Vitals Section \r\n\r\n  //Send Notification\r\n  async function SendNotifcation(name, id) {\r\n    Notiflix.Loading.dots('Sending', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.3rem'\r\n    })\r\n    try {\r\n      await axios.post(`${url}/appointment/call/in`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message.slice(0, -1) + ' to ' + name)\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n  }\r\n\r\n  const confirmmessage = (name, id) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Call Patient `,\r\n      `Do you surely want to call ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SendNotifcation(name, id)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  //Send Notification\r\n\r\n  //Bill\r\n  function OpenBillForm() {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n  }\r\n  function CloseBillForm() {\r\n    if (billform == 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function OpenPaymentsForm() {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n  }\r\n  function ClosePaymentsForm() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsindex()\r\n    }\r\n  }\r\n  function ClosePaymentsForm2() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsi()\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.success(response.data.message)\r\n        Appointmentlist()\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n      }).catch((e)=>{\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    try {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n      await axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.success(response.data.message)\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n          Appointmentlist()\r\n      }).catch((e)=>{\r\n        Notiflix.Loading.remove()\r\n        Notiflix.Notify.failure(e.message)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.failure(e.message)\r\n\r\n    }\r\n  }\r\n\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      // 'Cancel',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      // () => {\r\n      //   return 0\r\n      // },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const toggleConsumables = () => {\r\n    if (consumables === 'none') {\r\n      setconsumables('block')\r\n    }\r\n    if (consumables === 'block') {\r\n      setconsumables('none')\r\n      setconsumablesindex()\r\n    }\r\n\r\n  }\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n      setsaleindex()\r\n    }\r\n  }\r\n  const togglecamera = (id)=>{\r\n    localStorage.setItem('appointmentid',id)\r\n    window.open('/scan/prescription','_blank')\r\n  }\r\n const toggle_ScannedPres = ()=>{\r\n  setpindex()\r\n  }\r\n  const toggle_Scannedbill = ()=>{\r\n    setbindex()\r\n  }\r\n    async function getdata (){\r\n      if(status_appointment!=undefined && status_appointment.length==0){\r\n        const data = await appointment_status()\r\n        setstatus_appointment(data)\r\n       }\r\n    }\r\n    useEffect(()=>{\r\n      getdata()\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <section id=\"doctorscheduledata\">\r\n        <section className=\"timeslotsection\">\r\n          <div className=\"container-fluid p-0 m-0 ps-1 \">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\" col-12 p-0 m-0 align-items-center\">\r\n                <div className=\"row align-items-center p-0 m-0 mt-3 mb-2 ms-0\">\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <h6 className=\"p-0 m-0 text-charcoal fw-bolder text-start\">Time Slots Avaliable</h6>\r\n                  </div>\r\n                  <div className=\"col-2 ps-1\">\r\n                    <button className=\"btn m-0 p-0\">\r\n                      <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" onClick={OpenAddQuickSlots} />\r\n                    </button>\r\n                    <div className={`d-${addquickslots} rounded-1 quickdocslots bg-seashell shadow col-lg-6 col-md-8 col-sm-12 col-12 col-xl-4 position-absolute end-0 start-0 top-0 m-auto mt-3`} style={{ zIndex: '3010', minWidth: '10rem', maxWidth: '30rem' }}>\r\n                      <AddSelectedDoctorSlot CloseAddQuickSlots={CloseAddQuickSlots} fetchapi={props.fetchapi} DocClinic={props.DocClinic} DoctorID={props.DoctorID} DoctorName={props.DoctorName} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"scroll timeslots col-12 justify-content-around\">\r\n              {\r\n                props.todayDoc[props._selected][3].map((data, i) => (\r\n                  data[1] == 0 ? (\r\n                    <>\r\n                      <button className={`button-sm button-${timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1 px-3 py-2 fw-bold rounded-1`} style={{ letterSpacing: '1px' }} onClick={(e) => { openAddApppointmentform(); settimeindex(i) }} key={i}>{tConvert(data[0])}</button>\r\n                      {\r\n                        timeindex == i ? (\r\n                          <>\r\n                            {/* \r\n                            <div className='backdrop'>\r\n                            </div> */}\r\n                            <div className={`d-${timeindex == i ? addappointmentform : 'none'} col-lg-8 col-md-10 col-sm-12 col-12 col-xl-6 shadow quickappointment position-absolute m-auto start-0 end-0 bg-seashell rounded-4 border border-1`} style={{ top: '-3.8rem' }}>\r\n                              <SelectedTimeAppointment fetchapi={props.fetchapi} closeAddAppointmentform={closeAddAppointmentform} DocClinic={props.DocClinic} timeindex={timeindex} selectedtime={data[0]} selectedtimeID={data[2]} />\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <></>\r\n                        )\r\n                      }\r\n\r\n                    </>\r\n                  ) : (\r\n                    <button disabled className=\" button-sm button-charcoal50-outline m-1 px-3 py-2 rounded-1 fw-bold\" key={i} style={{ letterSpacing: '1px' }}>{tConvert(data[0])}</button>\r\n                  )\r\n                ))\r\n\r\n              }\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"allappointmentsection p-0 m-0 ms-1\">\r\n          <div className=\"col-auto m-0 p-0 align-items-center\">\r\n            <h6 className=\"p-0 ms-1 text-charcoal fw-bolder mt-3 mb-2\">Appointments</h6>\r\n          </div>\r\n          <div className=\" scroll scroll-y align-content-center align-items-center\" style={{ minHeight: '70vh', maxHeight: '70vh', Height: '70h' }}>\r\n            <table className=\"table text-start\">\r\n              <thead className=\"p-0 m-0 px-2 bg-pearl\">\r\n                <tr className=\"p-0 m-0 position-sticky text-charcoal75 top-0\" style={{ fontSize: '0.75rem' }}>\r\n                  <th className=\"border-0 bg-pearl text-center\">Update</th>\r\n                  <th className=\"border-0 bg-pearl text-center\">Bill no.</th>\r\n                  <th className=\"border-0 bg-pearl text-start\">Time</th>\r\n                  <th className=\"border-0 bg-pearl\">Patient</th>\r\n                  <th className=\"border-0 bg-pearl text-start px-3\">Status</th>\r\n                  <th className=\"border-0 bg-pearl\"> Amount</th>\r\n                  <th className=\"text-center border-0 bg-pearl\">Vitals</th>\r\n                  <th className={`text-center border-0 bg-pearl d-${permission.appointment_charges_edit ? '' : 'none'}`}>Bill</th>\r\n                  <th className=\"border-0 bg-pearl text-center\">Consumables</th>\r\n                  <th className=\"border-0 bg-pearl text-center\">more</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                singleload == 0 ? (\r\n                  <tbody className=\"scroll scroll-y\"  >\r\n                    <tr className=' position-relative text-burntumber fs-3 mt-1 text-center m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-burntumber fs-3 mt-1 text-center'>\r\n\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>\r\n                    {\r\n                      appointmentdata && appointmentdata !==undefined && appointmentdata.length == 0 ? (\r\n                        <tr><button className=\"text-center position-absolute border-0 text-charcoal fw-bold px-5 start-0 end-0 mx-auto\">No Appointments Found</button></tr>\r\n                      ) : (\r\n                        appointmentdata.map((data, i) => (\r\n                          <tr className='align-middle'>\r\n                            <td className={`py-0 bg-${tableindex === i ? 'lightyellow' : ''}  text-center`}>\r\n                              <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { openapppointmentform(); settableindex(i); setappointmentid(data.id) }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" key={i} />\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"py-0 text-start fw-bold\" style={{ letterSpacing: '1px' }}>{data.bill_id ? 'C-'+data.bill_id:''}</td>\r\n                            <td className=\"py-0 text-start fw-bold\" style={{ letterSpacing: '1px' }}>{tConvert(data.timeslot.time_from)}</td>\r\n                            <td className=\"py-0 \">\r\n                              <div className=\"row p-0 m-0\" style={{ width: 'fit-content' }}>\r\n                                <div className=\"col-12 p-0 m-0 fw-bold align-self-end\">\r\n                                  {data.patient ? data.patient.full_name !== null ? data.patient.full_name : 'N/A' : 'N/A'}{data.patient != null && data.patient.is_profile_verified ==1 ? <img className=\"p-0 m-0 me-4 img-fluid\" src={process.env.PUBLIC_URL + 'images/verified.png'} style={{scale:'0.8'}}/>:'' }\r\n                                </div>\r\n                                <small className=\"col-auto p-0 m-0 text-burntumber fw-bold\" style={{ letterSpacing: '1px' }}>\r\n                                  {data.patient ? data.patient.phone_number != null ? data.patient.phone_number : 'N/A' : 'N/A'}\r\n                                </small>\r\n                              </div>\r\n                            </td>\r\n\r\n                            <td className=\" text-start pe-5\">\r\n                              <div className=\"row p-0 m-0 align-items-center\">\r\n                                <div className=\"col-1 p-0 m-0 me-2\">\r\n                                  <div className={`rounded-circle border-1 button-${status_color(data.appointment_status)} fontmain`} style={{ height: '12px', width: '12px' }}></div>\r\n                                </div>\r\n                                <div className=\"col-5 p-0 m-0\">\r\n                                  <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent border-0 text-start fw-bold `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                    <option className=\"fw-bold\" selected disabled>{status(data.appointment_status)}</option>\r\n                                    {\r\n                                      status_appointment && status_appointment.length > 0 && status_appointment.map((data)=>(\r\n                                        <option className=\"fw-bold\" value={data.id}>{data.title}</option>\r\n                                      ))\r\n                                    }\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n\r\n                            {/* <td className=\"py-0\" style={{ fontSize: '0.75rem' }}>{data.total_amount}</td> */}\r\n                            <td className=\"py-0 text-start\">\r\n                              <div className=\"col p-0 m-0 fw-bold fontmain\" style={{ fontSize: '0.75rem', letterSpacing: '1px' }}>\r\n                                ₹{data.total_amount}\r\n                              </div>\r\n                              <div className=\"col p-0 m-0 text-start\">\r\n                                <button className=\"button-sm p-0 m-0 bg-transparent border-0\" onClick={() => { setpaymentsi(i); OpenPaymentsForm(); }}>\r\n                                  <AmountPaid appointmentData={data} index={i} Appointmentlist={Appointmentlist} />\r\n                                </button>\r\n                                {\r\n                                  paymentsi == i ? (\r\n                                    <>\r\n                                      <div className=\"backdrop\"></div>\r\n                                      <td className={`payments bg-seashell shadow-sm start-0 end-0 top-0 p-0 m-0 mx-auto border border-1 rounded-1 col-lg-6 col-md-10 col-sm-12 col-12 mt-2 col-xl-6 position-absolute d-${paymentsi == i ? paymentsform : 'none'}`} >\r\n                                        <Payments ClosePaymentsForm={ClosePaymentsForm2} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} paymentsi={paymentsi} /></td>\r\n                                    </>\r\n\r\n                                  ) : (<></>)\r\n                                }\r\n                              </div>\r\n                            </td>\r\n                            <td className={` text-center py-0 bg-${vitalindex === i ? 'lightyellow' : ''}`}><button className=\"btn p-0 m-0\" onClick={() => { setvitalindex(i); OpenVitals(); GetAppointmentVitals(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" /></button></td>\r\n                            <td className={` text-center py-0 d-${permission.appointment_charges_edit ? '' : 'none'} bg-${billindex === i ? 'lightyellow' : ''}`}> <img src={process.env.PUBLIC_URL + \"/images/bill.png\"} onClick={() => { setbillindex(i); OpenBillForm(); }} alt=\"displaying_image\" className=\"me-1\" />  </td>\r\n                            <td className={` text-center py-0  bg-${consumablesindex === i ? 'lightyellow' : ''}`}>\r\n                              <button className={`button-sm border-0 p-0 m-0 position-relative bg-${consumablesindex === i ? 'lightyellow' : 'transparent'}`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/bandage.png\"} onClick={() => { setconsumablesindex(i); toggleConsumables(); }} alt=\"displaying_image\" className=\"me-1\" />\r\n                                <span class={` position-absolute start-75 translate-middle badge p-0 m-0 text-burntumber fw-bold rounded-2 `} style={{ zIndex: '2', top: \"10%\" }}>\r\n                                  {appointmentdata[i].medicine_used.length}\r\n                                </span>\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              <div className=\"dropdown d-inline-block \">\r\n                                <button className=\"button p-0 m-0 bg-transparent border-0 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                  <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" className=\"img-fluid\" />\r\n                                </button>\r\n                                <ul className=\"dropdown-menu shadow-sm p-2\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content', height: 'fit-content' }}>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() =>togglecamera(data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/new_tab.png\"} alt=\"displaying_image\"/>Scan Prescription</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Prescription</li>\r\n                                  <li className={`d-${data.prescription_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() =>{setpindex(i)}}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\"/>View Prescription</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Bill</li>\r\n                                  <li className={`d-${data.bill_file==null?'none':''} dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center`} onClick={() => { setbindex(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" /> View Bill</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" /> Send on Whats App</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\"  />Send on SMS</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { toggle_nsef(); setsaleindex(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/medicine.png\"}  alt=\"displaying_image\" />Buy Medicines</li>\r\n                                  <li className={`dropdown-item fw-bold border-bottom p-0 m-0 align-items-center p-2  d-${permission.appointment_charges_edit ? 'flex' : 'none'}`} onClick={() => { setpaymentsindex(i); OpenPaymentsForm(); }}><img src={process.env.PUBLIC_URL + \"/images/rupee.png\"}  className='me-2 img-fluid' alt=\"displaying_image\" />Payments</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 p-0 m-0 align-items-center\" onClick={() => confirmmessage(data.patient.full_name, data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/speaker.png\"} alt=\"displaying_image\"/> Call Patient</li>\r\n                                </ul>\r\n                              </div></td>\r\n                            {\r\n                              tableindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`updateappointment shadow-sm border-0 rounded-1 bg-seashell mt-2 start-0 end-0 top-0 col-lg-8 col-md-10 col-sm-11 col-11 col-xl-5 d-${tableindex == i ? appointmentform : 'none'} position-absolute`}>\r\n                                    <UpdateAppointment fetchapi={props.fetchapi} fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} addappointmentform={addappointmentform} closeappointmentform={closeappointmentform} doctorid={props.doctorid} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              vitalindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`vitals position-absolute border-0 d-${vitalindex == i ? vitalsform : 'none'}`} style={{ zIndex: '4' }}>\r\n                                    <Vitalsoperation GetAppointmentVitals={GetAppointmentVitals} Appointmentlist={Appointmentlist} CloseVitals={CloseVitals} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} appointmentvitalslist={appointmentvitalslist} loadvitals={loadvitals} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              billindex == i ? (\r\n                                <>\r\n                                  <div className='backdrop'>\r\n                                  </div>\r\n                                  <td className={`bill d-${billindex == i ? billform : 'none'} start-0 end-0 mx-auto top-0 border-0 position-absolute p-0 m-0 col-lg-10 col-md-10 col-sm-11 col-11 mt-2 col-xl-6 `} style={{ zIndex: '4',height:'70vh' }}>\r\n                                    <Bill fetchapi={props.fetchapi} CloseBillForm={CloseBillForm} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} phone_number = {data.patient != null && data.patient.phone_number != null ? data.patient.phone_number : \"\"} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} Data={data} appointmentdata={appointmentdata} appointmentid={data.id} doctorfee={data.doctor.consulationFee} billform={billform} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              paymentsindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`payments start-0 end-0 top-0 position-absolute bg-seashell mx-auto rounded-2 p-0 m-0 col-lg-8 col-md-10 col-sm-11 col-11 mt-2 col-xl-6 d-${paymentsindex == i ? paymentsform : 'none'}`} style={{ zIndex: '4' }}>\r\n                                    <Payments ClosePaymentsForm={ClosePaymentsForm} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              consumablesindex == i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`consumables mx-auto  position-absolute top-0 start-0 end-0   d-${consumablesindex == i ? consumables : 'none'} `} style={{ zIndex: '4', height: '70vh' }} >\r\n                                    <AddConsumables appointmentdata={appointmentdata[i]} Appointmentlist={Appointmentlist} existedconsumables={appointmentdata[i].medicine_used.reverse()} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} toggleConsumables={toggleConsumables} />\r\n                                  </td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              saleindex == i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${saleindex == i ? saleindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                    <SaleEntryForm data={data} DoctorID={props.DoctorID} DoctorName={props.DoctorName} saleindex={saleindex} toggle_nsef={toggle_nsef} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                  </td>\r\n                                </>\r\n                              ) : (<></>)\r\n\r\n                            }\r\n                            {\r\n                              pindex == i ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-8 col-lg-10 col-md-11 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${pindex == i ? pindex : 'none'}`} style={{ zIndex: '4', height: \"80vh\" }}  >\r\n                                <Prescription prescriptions={data.prescription_file} toggle_ScannedPres={toggle_ScannedPres}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>)\r\n                            }\r\n                                     {\r\n                              bindex == i ? (\r\n                                <>\r\n                                <div className=\"backdrop\"></div>\r\n                                <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${bindex == i ? bindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                <Generated_bill bill={data.bill_file} toggle_Scannedbill={toggle_Scannedbill}/>\r\n                                </td>\r\n                                </>\r\n                              ):(<></>) \r\n                            }\r\n                          </tr>\r\n\r\n                        )))}\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}\r\nexport { DoctorSchedule };\r\n\r\nfunction Timecard(props) {\r\n  const url = useContext(URL);\r\n  const fetch_func = useContext(Fetch_function)\r\n  const clinics = useContext(Clinic)\r\n  const [cardindex, setcardindex] = useState()\r\n  const [rooms, setrooms] = useState([])\r\n  function diff(start, end) {\r\n    start = start.split(\":\");\r\n    end = end.split(\":\");\r\n    var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    var diff = endDate.getTime() - startDate.getTime();\r\n    var hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    var minutes = Math.floor(diff / 1000 / 60);\r\n    if (hours < 0)\r\n      hours = hours + 24;\r\n\r\n    return (hours != 0 ? ((hours <= 9 ? \"0\" : \"\") + hours + \"hrs \") : \"\") + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins'\r\n  }\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let [doctime, setdoctime] = useState([]);\r\n  let [isLoading, setisLoading] = useState();\r\n  let [startload, setstartload] = useState(false)\r\n\r\n  let clinicid = localStorage.getItem('ClinicId');\r\n\r\n  async function fetchapi() {\r\n    setisLoading(true);\r\n    await axios.get(`${url}/todays/doctor/time/list?doctor_id=${props.docid}&clinic_id=${clinicid}`).then((response) => {\r\n      \r\n      if (response.data.data.length == 0) {\r\n        setisLoading(false);\r\n      }\r\n      else {\r\n        setdoctime(response.data.data.reverse());\r\n        setisLoading(false);\r\n      }\r\n    })\r\n  }\r\n  const [refreshtimeslots, setrefreshtimeslot] = useState(false);\r\n  const [roomnumber, setroomnumber] = useState('1');\r\n\r\n  async function starttimeslot() {\r\n    setstartload(true)\r\n    let adminid = localStorage.getItem('id');\r\n    if (clinicid && roomnumber && props.docid && adminid) {\r\n      try {\r\n        await axios.post(`${url}/doctor/start/time`, {\r\n          clinic_id: clinicid,\r\n          room_id: roomnumber,\r\n          doctor_id: props.docid,\r\n          admin_id: adminid,\r\n        }).then((response) => {\r\n          setstartload(false)\r\n          Notiflix.Notify.success(response.data.message)\r\n          fetch_func()\r\n          // timer_notify(props.docid)\r\n        })\r\n        await fetchapi();\r\n\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n\r\n        setstartload(false)\r\n\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please fill all details')\r\n      setstartload(false)\r\n    }\r\n  }\r\n\r\n  async function endtimeslot(data) {\r\n    let adminid = localStorage.getItem('id');\r\n    setrefreshtimeslot(true);\r\n    let log_id = data.id;\r\n    try {\r\n      await axios.post(`${url}/doctor/end/time`, {\r\n        admin_id: adminid,\r\n        log_id: log_id\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n        // timer_notify(props.docid)\r\n        fetch_func()\r\n      })\r\n      await fetchapi();\r\n      setrefreshtimeslot(false)\r\n\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setrefreshtimeslot(false);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [props._selected]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < clinics.length; i++) {\r\n      if (clinics[i].id == Number(clinicid)) {\r\n        setrooms(clinics[i].rooms)\r\n      }\r\n    }\r\n\r\n  }, [clinicid])\r\n  return (\r\n    <div className=\"scroll room_timecards align-items-center align-content-center my-auto mb-2 ms-2\">\r\n      <div id=\"cardslot\" className={`d-${isLoading ? 'none' : 'inline-flex'}`}>\r\n        <div className=\"card card1 p-0 m-0 text-start border-0\" id=\"card1\" >\r\n          <div className=\"card-body p-0 m-0\">\r\n            <div className=\"d-flex align-items-center ms-3\">\r\n              <p className=\" m-0 p-0 text-charcoal fw-bold me-2\">Room</p>\r\n              <select onChange={(e) => { setroomnumber(e.target.value) }} className=\"form-control bg-charcoal25 text-charcoal my-1 mx-2 p-0 py-2 px-3 w-auto text-center border-0\" id=\"clinicroom1\">\r\n                {\r\n\r\n                  rooms.map((data) => (\r\n                    <option value={data.id}>{data.room_number}</option>\r\n                  ))\r\n\r\n\r\n                }\r\n              </select>\r\n              {\r\n                startload ? (\r\n                  <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                ) : (\r\n                  <button className=\"btn playbutton p-0 m-0 mx-2\" onClick={starttimeslot}><img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'images/play.png'}  /></button>\r\n                )\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ? (\r\n\r\n          <div className=\"card bg-pearl text-center ms-3 bg-seashell\" aria-hidden=\"true\" style={{ width: '18rem', paddingTop: '0.76rem', paddingBottom: '0.76rem' }}>\r\n            <div className=\" text-start placeholder-glow gx-2\">\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-2 ms-2 text-start\"></span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          doctime.map((data, i) => (\r\n            <div id=\"cardslot text-start\" key={i} className=\"d-inline-flex m-1\">\r\n              <div className=\"card p-0 m-0 py-1 text-start border-0\" id=\"card1\">\r\n                <div className=\"card-body p-0 m-0\">\r\n                  <div className=\"d-flex text-start align-items-center p-0 m-0 \">\r\n                    <p className=\" p-0 m-0  ms-2 text-charcoal75 fw-bold me-1 ps-2 \" style={{ fontSize: '0.75rem' }}>Room</p>\r\n                    <h5 className=\"text-burntumber fw-semibold my-1 me-2 border-0\" id=\"clinicroom\">\r\n                      {data.room_id}\r\n                    </h5>\r\n                    {\r\n                      refreshtimeslots && i === cardindex ? (\r\n                        <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"d-flex p-0 m-0 justify-content-center\">\r\n\r\n                            <button type=\"text\" className=\"btn fromtime p-0 m-0 float-end text-charcoal text-center\" style={{ fontSize: '0.75rem' }}>{(data.login_time) ? tConvert(data.login_time) : ''}</button>\r\n                            <div className='mx-1 align-self-center' style={{ padding: '0.9px' }}>-</div>\r\n                            <button type=\"text\" className=\"btn totime p-0 m-0 text-charcoal float-end text-center\" style={{ fontSize: '0.75rem' }}>{(data.logout_time) ? tConvert(data.logout_time) : '__'}</button>\r\n\r\n                          </div>\r\n\r\n                          <div className=\"d-flex mx-2\">\r\n                            {\r\n                              data.logout_time ? (\r\n                                <div id=\"totalhrs\" className=\" p-0 m-0 timediff text-burntumber fw-bold text-center pe-2\" defaultValue=\"\" style={{ fontSize: '0.75rem' }}>{data.logout_time ? diff(data.login_time, data.logout_time) : ''}</div>\r\n                              ) : (\r\n                                <button className=\"btn p-0 m-0 pausebutton\" value={data.id} onClick={(e) => { endtimeslot(data); setcardindex(i) }}><img className=\"\" src={process.env.PUBLIC_URL + 'images/pause.png'} onClick={(e) => { endtimeslot(e); setcardindex(i) }} /></button>\r\n\r\n                              )\r\n                            }\r\n\r\n\r\n                          </div>\r\n\r\n                        </>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n          ))\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\nexport { Timecard }\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext, createContext } from \"react\";\r\n// import { w3cwebsocket as websocket } from 'websocket'\r\nimport { Timecard, DoctorSchedule } from '../Today/Doctor'\r\nimport { timer_notify } from '../features/timer_notify';\r\n//Context APIs\r\nimport { Permissions,URL } from '../../index'\r\n//Components\r\nimport '../features/timeout_notifications';\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\n//css\r\nimport '../../css/dashboard.css'\r\n\r\n// setInterval(Timeout_notification,60000)\r\nconst DOCTORNAME = createContext()\r\nconst DOCTORID = createContext()\r\nfunction Doctorsection(props) {\r\n  const url = useContext(URL)\r\n  const permission = useContext(Permissions)\r\n  const [Docval, setDocval] = useState(0)\r\n  const [Doctor, setDoctor] = useState(0)\r\n  const [DoctorID, setDoctorID] = useState()\r\n  const [DoctorName, setDoctorName] = useState()\r\n  const [DocClinic, setDocClinic] = useState()\r\n  const [doctorindex, setdoctorindex] = useState([0])\r\n  const [doctorform, setdoctorform] = useState(\"none\");\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setDocval(1)\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setDocval(0)\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  function getindexes() {\r\n    for (let j = 0; j < doctorindex.length; j++) {\r\n      if (doctorindex.includes(Doctor)) {\r\n        break;\r\n      } else {\r\n        doctorindex.push(Doctor)\r\n      }\r\n    }\r\n  }\r\n  getindexes()\r\n\r\n  const doctor_wise_appointment_count= (doc_id)=>{\r\n    let appointments = []\r\n    if(props.appointment_data !=undefined){\r\n      for(let j=0;j<props.appointment_data.length;j++){\r\n        if(doc_id== props.appointment_data[j].doctor_id){\r\n          appointments.push( props.appointment_data[j])\r\n        }\r\n  }\r\n}\r\n  return appointments.length\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid doctorsection p-0 m-0 mt-1 ps-1 scroll\">\r\n        <div className=\" hstack gap-3 d-flex p-0 m-0 py-1 ps-1 align-items-center\">\r\n          {\r\n            props.isLoading ? (\r\n              <div className='col-3'>\r\n                <div className=\"spinner-border my-auto\" style={{ width: \"2rem\", height: \"2rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div>\r\n                <div className=\"spinner-grow my-auto\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div> </div>\r\n            ) : (\r\n              props.todayDoc.map((data, i) => (\r\n                <>\r\n                  <div className='col-auto doctors p-0 m-0'>\r\n                    <button key={i} className={` button rounded-1 p-0 m-0 py-1 px-3 btn-sm col-auto shadow-none text-${i === Doctor ? 'light' : 'charcoal75 fw-bolder'} button-${i === Doctor ? \"charcoal\" : \"pearl\"} border-${i === Doctor ? 'secondary' : 'none'}`}\r\n                      style={{ fontSize: '0.9rem' }}\r\n                      autoFocus={i === Doctor ? true : false}\r\n                      onFocus={() => { setDoctorID(data[0]); setDoctorName(data[1]); setDocClinic(data[2]) }}\r\n                      value={`${data[0]}.${data[1]}`} onClick={(a) => { setDoctor(i); setDoctorID(data[0]); setDoctorName(data[1]); }}>{`Dr. ${data[1]}`}<span className='ms-2 px-1 text-lightyellow '>{doctor_wise_appointment_count(data[0])} {timer_notify(data[0])==1?<span className='m-0 p-0 ms-2'><img src={process.env.PUBLIC_URL+'/images/time_on.png'} className='img-fluid p-0 m-0' style={{width:'0.8rem'}}/></span>:<span></span>}</span> </button>\r\n                  </div>\r\n                  <div className='vr rounded-1 h-75 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            )}\r\n          <div className='col-auto'>\r\n            <button className={`btn bg-transparent border-0 `} id=\"adddoctorbtn\" onClick={toggledoctorform} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <section className=\"patientsection p-0 m-0 ps-1 position-relative\">\r\n        {\r\n          props.Loading ? (\r\n            <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-charcoal\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n\r\n          ) : (\r\n            props.todayDoc && props.todayDoc.length != 0 ? (\r\n              doctorindex.map((data, i) => (\r\n                data == Doctor ? (\r\n                  <div key={i}>\r\n                    <div className={`p-0 m-0 my-2 d-${permission.dashboard_all == 1 ? '' : 'none'}`}>\r\n                      <Timecard docid={props.todayDoc[Doctor][0]} _selected={Doctor} />\r\n                    </div>\r\n                    <div className=\"p-0 m-0 my-2\">\r\n{/* \r\n                    DoctorID={DoctorID} DoctorName={DoctorName} */}\r\n\r\n                      <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n                      <DoctorSchedule todayDoc={props.todayDoc} DoctorID={DoctorID} DoctorName={DoctorName}  _selected={Doctor} fetchapi={props.fetchapi} DocClinic={DocClinic} get_appointment_data={props.get_appointment_data}   />\r\n                        </DOCTORID.Provider>    \r\n                      </DOCTORNAME.Provider>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )\r\n              ))\r\n            ) : (\r\n              <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-burntumber\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </section>\r\n      {\r\n        Docval == 1 ? (\r\n          <div className={`col-lg-5 col-md-6 col-sm-12 col-12 doctorinfosection d-${doctorform} me-lg-2 top-0  me-md-2 rounded-4 border bg-seashell shadow-sm position-absolute`} style={{ zIndex: '2', marginTop: '5.1rem' }} >\r\n                    <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n            <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop4'} fetchapi={props.fetchapi} />\r\n            </DOCTORID.Provider>    \r\n            </DOCTORNAME.Provider>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n\r\n    </>\r\n  );\r\n\r\n}\r\nexport default Doctorsection\r\nexport { DOCTORNAME, DOCTORID }","import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs, Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2 fw-bold'>\r\n      <h5 className=\"text-center mt-2 fw-bold\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <label className='ps-1'>Doctor</label>\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>Dr. {data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className=\"radio form-check-input me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label >Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"button button-pearl px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }"],"names":["UpdateAppointment","props","useRef","clinicID","localStorage","getItem","adminid","url","useContext","URL","DocApi","Doctorapi","Doclist","DoctorsList","TodayDoctors","TodayDocs","_useState","useState","_useState2","_slicedToArray","cliniclist","setcliniclist","_useState3","_useState4","doctorid","setdoctorid","_useState5","_useState6","clinicid","_useState7","_useState8","time","settime","_useState9","_useState10","timeindex","settimeindex","_useState11","_useState12","_useState13","_useState14","load","setload","_useState15","_useState16","ApikeyDocTimeslots","setApikeyDocTimeslots","_useState17","_useState18","ApiDocTimefrom","setApiDocTimefrom","tConvert","toString","match","length","slice","join","useEffect","axios","concat","then","response","data","dateref","docref","_useState19","_useState20","trigger","settrigger","_getCurrentTimeslots","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","Timeslots","i","wrap","_context2","prev","next","appointmentdoctorid","current","value","id","Number","push","month_timeslots","stop","apply","arguments","_getCurrentTimefrom","_callee3","timefrom","j","_context3","date","appointmentdate","time_from","booking_status","getCurrentTimeslots","getCurrentTimefrom","_getTimeslots","_callee4","e","_context4","target","_getTimefrom","_callee5","_context5","appointmentid","patientid","appointment_id","doctor_id","clinic_id","timeslot_id","patient_id","admin_id","fetchallAppointmentslist","fetchapi","Notiflix","message","HighlightOptions","k","undefined","Avaliablemessage","_jsxs","className","children","patientname","_jsx","type","disabled","onClick","closeappointmentform","map","src","style","width","letterSpacing","title","address","ref","onChange","_x","defaultValue","name","selected","_x2","appointmenttime","_Fragment","key","preventDefault","gettime_value","alt","class","role","customconfirm","SelectedTimeAppointment","doctorname","DOCTORNAME","DOCTORID","Clinic","APIDate","TodayDate","searchinput","setsearchinput","searchlist","setsearchlist","displaysearchlist","setdisplaysearchlist","setpatientid","searchload","setsearchload","_searchpatient","_callee","_context","patients_list","selectedtime","closeAddAppointmentform","placeholder","searchpatient","zIndex","cursor","full_name","get_value","phone_number","split","reverse","reversefunction","selectedtimeID","AddSelectedDoctorSlot","fromtime","setfromtime","totime","settotime","_AddSelectedDoctorSlot","backgroundColor","svgColor","time_to","CloseAddQuickSlots","Vitalsoperation","vitals","Vitals","vitalid","setvitalid","vitalvalue","setvitalvalue","loadvitals","setloadvitals","vitalupdatevalue","setvitalupdatevalue","vitalindex","setvitalindex","savevital","setsavevital","updatevital","setupdatevital","Vitalunit","v","x","unit","_AddVitals","vitals_id","UpadteStatus","GetAppointmentVitals","OpenUpdateVital","t0","_UpdateVital","appointmentvitalid","old_id","_DeleteVital","status","_UpadteStatus","Loading","messageColor","messageFontSize","Appointmentlist","CloseVitals","appointmentvitalslist","vital","UpdateVital","_x3","DeleteVital","opacity","AddConsumables","medicinesref","medbyidref","stockref","setdoctorname","_useState21","_useState22","products","setproducts","_useState23","_useState24","itemsearch","setitemsearch","_useState25","_useState26","itembyid","setitembyid","_useState27","_useState28","loadbyId","setloadbyId","_useState29","_useState30","itemname","setitemname","_useState31","_useState32","itemid","setitemid","_useState33","_useState34","SelectedProducts","setSelectedProducts","_useState35","_useState36","Grandtotal","setGrandtotal","_useState37","_useState38","Grandtotal2","setGrandtotal2","_useState39","_useState40","loadsearch","setloadsearch","_useState41","_useState42","_useState43","appointmentdata","nursing_notes","_useState44","nursenotes","setnursenotes","_useState45","_useState46","deleteload","setdeleteload","_useState47","_useState48","loadnotes","setloadnotes","_useState49","_useState50","seti","searchmeds","_ref","search","medicines","vaccines","items","flat","display","searchmedbyId","_ref2","CalTotalAmount","qty","cst","realcst","cost","toFixed","AddProducts","T","vaccine_brand_id","ProductDetails","productid","product","item_name","batch","batch_no","expiry","expiry_date","quantity","current_stock","qtytoSale","discount","mainmrp","mrp","disccost","gst","CGST_rate","SGST_rate","IGST_rate","totalamt","prevState","_toConsumableArray","_DeleteProduct","Batch","obj","filter","_SubmitConsumabaleEntry","_callee6","productids","proquantity","Discount","discountonmrp","GST","Totalamount","_i","Data","_context6","pro_id","disc_mrp","main_mrp","total_amount","NurseNotes","catch","confirmmessage","SubmitConsumabaleEntry","ttl","CalGrandttl","existedconsumables","CalGrandttl2","_ref3","notes","RemoveConsumable","_ref4","ID","_x4","height","toggleConsumables","dispzzzlay","Width","maxHeight","fontSize","display_name","stock_info","marginTop","disc","DeleteProduct","medicies_stocks_id","medicine","medicine_stocks","paddingBottom","DoctorSchedule","todayDate","permission","Permissions","ClinicId","setappointmentdata","singleload","setsingleload","isLoading","setisLoading","tableindex","settableindex","appointmentform","setappointmentform","addappointmentform","setaddappointmentform","setappointmentid","saleindex","setsaleindex","consumablesindex","setconsumablesindex","addquickslots","setaddquickslots","vitalsform","setvitalsform","consumables","setconsumables","setappointmentvitalslist","billindex","setbillindex","billform","setbillform","paymentsindex","setpaymentsindex","paymentsi","setpaymentsi","paymentsform","setpaymentsform","setd_form","nsef","setnsef","pindex","setpindex","bindex","setbindex","_useState51","_useState52","status_appointment","setstatus_appointment","_Appointmentlist","todayDoc","_selected","_AllAppointments","get_appointment_data","AllAppointments","array","number","status_color","_callee7","_context7","_GetAppointmentVitals","_callee8","_context8","_SendNotifcation","_callee9","_context9","SendNotifcation","CloseBillForm","OpenPaymentsForm","ClosePaymentsForm","ClosePaymentsForm2","Generate_Bill","window","open","bill_url","_x5","Generate_Prescription","prescription_pdf","_x6","Send_On_WhatsApp","phone","check","checkpres","check_pres","_x7","_x8","_x9","Send_On_SMS","check_bill","check_pre","_x10","_x11","_x12","toggle_nsef","toggle_ScannedPres","toggle_Scannedbill","_getdata","_callee10","_context10","appointment_status","sent","getdata","minWidth","maxWidth","DocClinic","DoctorID","DoctorName","top","minHeight","Height","appointment_charges_edit","bill_id","timeslot","patient","is_profile_verified","scale","appointment_edit","AmountPaid","appointmentData","index","Payments","medicine_used","setItem","prescription_file","bill_file","doctor","appointment_date","Bill","doctorfee","consulationFee","SaleEntryForm","Prescription","prescriptions","Generated_bill","bill","Timecard","fetch_func","Fetch_function","clinics","_useState53","_useState54","cardindex","setcardindex","_useState55","_useState56","rooms","setrooms","diff","start","end","startDate","Date","getTime","hours","Math","floor","minutes","_useState57","_useState58","doctime","setdoctime","_useState59","_useState60","_useState61","_useState62","startload","setstartload","_fetchapi","_callee11","_context11","docid","_useState63","_useState64","refreshtimeslots","setrefreshtimeslot","_useState65","_useState66","roomnumber","setroomnumber","_starttimeslot","_callee12","_context12","room_id","endtimeslot","_x13","_endtimeslot","_callee13","log_id","_context13","room_number","paddingTop","login_time","padding","logout_time","createContext","Docval","setDocval","Doctor","setDoctor","setDoctorID","setDoctorName","setDocClinic","doctorindex","doctorform","setdoctorform","toggledoctorform","includes","getindexes","doctor_wise_appointment_count","doc_id","appointments","appointment_data","autoFocus","onFocus","a","timer_notify","dashboard_all","Provider","AddDoctorSlot","staticBackdrop4","Doctors","adddoctorfortoday","setadddoctorfortoday","docdate","setdocdate","_AddDoctorForToday","resetform","checked","AddDoctorForToday"],"sourceRoot":""}