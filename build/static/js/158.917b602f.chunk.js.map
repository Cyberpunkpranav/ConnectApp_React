{"version":3,"file":"static/js/158.917b602f.chunk.js","mappings":"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","sources":["components/Reports/pharmacy/openingstock.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\n\r\nconst OpeningStock = () => {\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const clinic = useContext(Clinic)\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const OpeningStockref = useRef();\r\n    const [Location_Id, setLocation_Id] = useState()\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [openingstockarr, setopeningstockarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    };\r\n\r\n    function GetPages() {\r\n        setLoading(true);\r\n        try {\r\n            axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                .then((response) => {\r\n                    setpagecount(response.data.data.count);\r\n                    setpages(Math.round(response.data.data.count / 10) + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((e) => {\r\n                    Notiflix.Notify.warning(e.message);\r\n                    setLoading(false);\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function GETOpeningStock(Data) {\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=10&offset=0&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        ;\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setopeningstockarr(dataarr.flat());\r\n                        setLoading(false);\r\n                    }).catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report?location_id=${Location_Id}&limit=25&offset=${Data.selected * 10}&from_date=${fromdate ? fromdate : currentDate}&to_date=${todate ? todate : fromdate ? fromdate : currentDate}`).then((response) => {\r\n                    ;\r\n                    setopeningstockarr(response.data.data.medicine);\r\n                    setLoading(false);\r\n                })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetPages();\r\n    }, [Location_Id, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETOpeningStock();\r\n    }, [pagecount]);\r\n\r\n    const parentArray = Object.keys(openingstockarr).map(key => ({\r\n        id: key,\r\n        ...openingstockarr[key]\r\n    }));\r\n    return (\r\n        <>\r\n            <h2 className=\" ms-3 text-charcoal fw-bolder mt-4\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? \"Opening Stocks\" : \"Opening Stock\"}{\" \"}  </h2>\r\n\r\n            <div className=\"row p-0 m-0 ms-2 mt-2\">\r\n            <div className=\"col-auto p-0 m-0 text-center fw-bolder bg-seashell rounded-2 align-self-center me-2 text-center \">\r\n                            <select className=\"fw-bold button button-seashell text-burntumber text-center border-0\" onChange={(e) => { setLocation_Id(e.target.value) }} style={{cursor:'pointer'}}>\r\n                                <option value=\"Choose Location\">Choose Location</option>\r\n                                {\r\n                                    clinic.map((data) => (\r\n                                        <option value={data.id}>{data.title}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n     \r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">-</div>\r\n            <div className=\"col-auto p-0 m-0  text-charcoal text-center fw-bolder bg-seashell\">\r\n              <input type=\"date\" className=\"button button-seashell rounded-0 text-charcoal text-center bg-seashell fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n            </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto p-0 m-0 export ms-xl-5 ms-lg-0 \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockReports`}\r\n                        sheet=\"StockReports\"\r\n                        currentTableRef={OpeningStockref.current}\r\n                    >\r\n                        <button className='button button-seashell  fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={OpeningStockref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item ID </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Item Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Stock Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Party </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Batch </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Stock Qty </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Rate </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Total </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody\r\n                            className=\"text-center\"\r\n                            style={{ minHeight: \"55vh\", height: \"55vh\" }}\r\n                        >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : openingstockarr && openingstockarr.length != 0 ? (\r\n                        <tbody>\r\n                            {parentArray.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\">{item.id != undefined ? item.id : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.item_name != undefined ? item.item_name : ''}</td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.distributor != undefined ? item.distributor : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.batch != undefined ? item.batch : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.opening_qty != undefined ? item.opening_qty : ''}</td>\r\n                                    <td className=\"text-charcoal fw-bold\">{item.rate != undefined ? Number(item.rate).toFixed(2) : ''} </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> {item.rate != undefined && item.opening_qty != undefined ? (Number(item.opening_qty) * Number(item.rate)).toFixed(2) : ''}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Opening Stocks </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETOpeningStock}\r\n                    containerClassName={\r\n                        \"pagination scroll align-self-center align-items-center\"\r\n                    }\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\r\n                        \"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"\r\n                    }\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpeningStock "],"names":["useContext","Permissions","currentDate","TodayDate","clinic","Clinic","url","localStorage","getItem","URL","OpeningStockref","useRef","_useState","useState","_useState2","_slicedToArray","Location_Id","setLocation_Id","_useState3","_useState4","fromdate","setfromdate","_useState5","_useState6","todate","settodate","_useState7","_useState8","Loading","setLoading","_useState9","_useState10","openingstockarr","setopeningstockarr","_useState11","_useState12","pages","setpages","_useState13","_useState14","pagecount","setpagecount","reversefunction","date","split","reverse","join","GETOpeningStock","Data","undefined","selected","axios","concat","then","response","medicines","vaccines","dataarr","medicinearr","Object","keys","data","medicine","map","key","_objectSpread","medicine_id","push","vaccinearr","vaccine","vaccine_id","flat","catch","e","Notiflix","message","useEffect","count","Math","round","GetPages","parentArray","id","_jsxs","_Fragment","children","className","style","width","_jsx","onChange","target","value","cursor","title","type","placeholder","DownloadTableExcel","filename","sheet","currentTableRef","current","minHeight","height","maxHeight","ref","class","fontSize","role","length","item","i","item_name","distributor","batch","opening_qty","rate","Number","toFixed","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}