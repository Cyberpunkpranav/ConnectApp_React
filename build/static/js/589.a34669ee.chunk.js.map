{"version":3,"file":"static/js/589.a34669ee.chunk.js","mappings":"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","sources":["components/Today/UpdateAppointment.jsx","components/Appointments/SelectedTimeAppointment.jsx","components/Today/SelectedDoctorSlot.jsx","components/Today/Vitals.jsx","components/Today/Bill.jsx","components/Today/AddConsumables.jsx","components/Today/Doctor.jsx","components/App/Clinic.jsx","components/Today/AddDoctorSlot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { DoctorsList, URL, Doctorapi, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport '../../css/appointment.css';\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n\r\nconst UpdateAppointment = (props) => {\r\n    const colorref = useRef(null)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    let adminid = localStorage.getItem('id')\r\n    const url = useContext(URL);\r\n    const DocApi = useContext(Doctorapi)\r\n    const Doclist = useContext(DoctorsList)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const [cliniclist, setcliniclist] = useState([])\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [timeindex, settimeindex] = useState()\r\n    const [ischecked, setischecked] = useState()\r\n    const [load, setload] = useState()\r\n\r\n\r\n    const [ApikeyDocTimeslots, setApikeyDocTimeslots] = useState()\r\n    const [ApiDocTimefrom, setApiDocTimefrom] = useState();\r\n\r\n\r\n    function ClinicList() {\r\n        axios.get(`${url}/clinic/list`).then((response) => {\r\n            setcliniclist(response.data.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        ClinicList()\r\n    }, [])\r\n\r\n    function tConvert(time) {\r\n\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            time = time.slice(1);\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n            time[0] = +time[0] % 12 || 12;\r\n        }\r\n        return time.join('');\r\n    }\r\n\r\n    const dateref = useRef()\r\n    const docref = useRef()\r\n    const [trigger, settrigger] = useState(false)\r\n\r\n    async function getCurrentTimeslots() {\r\n        setdoctorid(props.appointmentdoctorid)\r\n        dateref.current.value = ''\r\n        docref.current.value = props.appointmentdoctorid\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(props.appointmentdoctorid)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n        settrigger(true)\r\n    }\r\n    async function getCurrentTimefrom() {\r\n        setApiDocTimefrom()\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === props.appointmentdate) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n        settrigger(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentTimeslots()\r\n        dateref.current.value = props.appointmentdate;\r\n    }, [1])\r\n\r\n    useEffect(() => {\r\n        getCurrentTimefrom()\r\n    }, [trigger])\r\n\r\n    const gettime_value = (e) => {\r\n        e.preventDefault()\r\n        settime(e.target.value)\r\n    }\r\n\r\n\r\n    async function getTimeslots(e) {\r\n        setdoctorid(e.target.value)\r\n        dateref.current.value = '';\r\n        let Timeslots = [];\r\n        setApikeyDocTimeslots([])\r\n        for (let i = 0; i < DocApi.length; i++) {\r\n            if (DocApi[i].id === Number(e.target.value)) {\r\n                Timeslots.push(DocApi[i].month_timeslots)\r\n            }\r\n        }\r\n        setApikeyDocTimeslots(Timeslots)\r\n    }\r\n\r\n\r\n    async function getTimefrom(e) {\r\n        setApiDocTimefrom([])\r\n        let timefrom = []\r\n        for (let j = 0; j < ApikeyDocTimeslots[0].length; j++) {\r\n            if (ApikeyDocTimeslots[0][j].date === e.target.value) {\r\n                timefrom.push([ApikeyDocTimeslots[0][j].id, ApikeyDocTimeslots[0][j].time_from, ApikeyDocTimeslots[0][j].booking_status])\r\n            }\r\n        }\r\n        setApiDocTimefrom(timefrom)\r\n\r\n    }\r\n\r\n    function UpdateAppointment(e) {\r\n        if (props.appointmentid && doctorid && clinicid && time && adminid && props.patientid != null && props.patientid != 0) {\r\n            try {\r\n                setload(true)\r\n                axios.post(`${url}/update/appointment`, {\r\n                    appointment_id: props.appointmentid,\r\n                    doctor_id: doctorid,\r\n                    clinic_id: clinicid,\r\n                    timeslot_id: time,\r\n                    patient_id: props.patientid,\r\n                    admin_id: adminid\r\n\r\n                }).then((response) => {\r\n                    if (response) {\r\n                        if (props.appointmentdoctorid) {\r\n                            props.fetchapi()\r\n                        } else {\r\n                            props.fetchallAppointmentslist()\r\n                            props.fetchapi()\r\n                        }\r\n                        Notiflix.Notify.success(response.data.message);\r\n                        setload(false)\r\n                    } else {\r\n                        Notiflix.Notify.alert('Failed to Update')\r\n                        setload(false)\r\n                    }\r\n\r\n                })\r\n            } catch (e) {\r\n                Notiflix.Notify.alert(e.message)\r\n                setload(false)\r\n            }\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais');\r\n            setload(false)\r\n        }\r\n    }\r\n\r\n    const confirmmessage = (e) => {\r\n        e.preventDefault()\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Appointment Details`,\r\n            `Do you surely want to update ${props.patientname} Appointment Details`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                UpdateAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const HighlightOptions = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return 'charcoal'\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const Avaliablemessage = (response) => {\r\n        for (let k = 0; k < TodayDoctors.length; k++) {\r\n            if (TodayDoctors[k][0] !== undefined) {\r\n                if (TodayDoctors[k][0] == response) {\r\n                    return '(Aval today) '\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const confirmmessageforCancel = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Cancel Appointment`,\r\n            `Do you surely want to Cancel ${props.patientname}'s Appointment`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                CancelAppointment()\r\n\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const CancelAppointment = async () => {\r\n        try {\r\n            await axios.post('http://aartas-qaapp-as.azurewebsites.net/aartas_redev/public/api/cancel/appointment', {\r\n                appointment_id: props.appointmentid\r\n            }).then((response) => {\r\n                \r\n                if (response.status == true) {\r\n                    props.fetchallAppointmentslist()\r\n                    props.fetchapi()\r\n                } else {\r\n                    Notiflix.Notify.failure(\"Cannot Cancel Appointment.Please try again.\")\r\n                }\r\n\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='p-0 m-0 text-start'>\r\n            <h5 className=\"text-center p-2\">Update {props.patientname} Appointment Details</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 ps-1\">\r\n                <div className=\"col-12 clinics bg-seashell border-0 p-2\" >\r\n                    {\r\n                        cliniclist.map((data, i) => (\r\n                            <div key={i} className={`d-${clinicID == data.id ? 'block' : 'none'} align-items-end text-charcoal `}>\r\n                                <div className=\"row p-0 m-0 align-items-end\">\r\n                                    <div className=\"col-auto p-0 m-0 me-1\">\r\n                                        <img className='img-fluid' src={process.env.PUBLIC_URL + '/images/location.png'} style={{ width: '1.3rem' }} />\r\n                                    </div>\r\n                                    <div className=\"col-auto p-0 m-0 fw-bold text-wrap mb-2\" style={{ letterSpacing: '1px' }}>\r\n                                        {data.title} {data.address}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"row p-0 m-0 mt-2 pe-2\">\r\n                    <div className=\"col-md-4 col-sm-4 col-4\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Doctor</label>\r\n                        <div className=\"col-12\">\r\n                            <select className=\"col-10 form-control selectdoctor border-charcoal rounded-1 bg-seashell\" ref={docref} onChange={getTimeslots}>\r\n                                <option defaultValue=\"Select Doctor bg-seashell\" >Select Doctor</option>\r\n                                {\r\n                                    TodayDoctors ? (\r\n                                        Doclist.map((data, i) => (\r\n                                            <option className={` text-${HighlightOptions(data[0]) ? 'pearl' : HighlightOptions(data[0])} bg-${HighlightOptions(data[0]) ? HighlightOptions(data[0]) : 'seashell'}`} name={HighlightOptions(data[0]) ? 'Currently Avaliable' : ''} selected={data[0] === props.appointmentdoctorid ? true : false} value={data[0]}>Dr. {data[1]} {Avaliablemessage(data[0])}</option>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>Loading</div>\r\n                                    )\r\n\r\n\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-auto col-auto m-0 p-0\">\r\n                        <label className=\"fw-bold\" style={{ letterSpacing: '1px' }}>Selected Date</label>\r\n                        <div className=\" border-0 col-12 bg-seashell \"><input type=\"date\" ref={dateref} className=\"form-control bg-seashell rounded-1 border-charcoal\" onChange={getTimefrom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-3 col-lg-3 col-3\">\r\n                        <label className='text-charcoal50 fw-bold'>Selected Time</label>\r\n                        <div className=\"col-12 p-0 m-0 selectedtime\">\r\n                            <button className='button button-charcoal50-outline rounded-1 fw-bold shadow-none' style={{ letterSpacing: '1px' }} >{props.appointmenttime}</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <p className=\"m-0 mt-2 fw-bold ps-2 pt-2\" style={{ letterSpacing: '1px' }}>Select another Time Slot</p>\r\n                <div className=\"scroll align-items-center justify-content-around col-12 ps-2\">\r\n                    {ApiDocTimefrom && ApiDocTimefrom.length !== 0 ? (\r\n                        <>\r\n                            {\r\n                                ApiDocTimefrom.map((data, key) => (\r\n                                    data[2] == 0 ? (\r\n                                        <button className={`button-sm button-${timeindex == key ? 'charcoal' : 'charcoal-outline'} px-3 py-2 rounded-1 fw-bold m-1`} style={{ letterSpacing: '1px' }} id={key} value={data[0]} onClick={(e) => { gettime_value(e); settimeindex(key) }}>{tConvert(data[1])}</button>\r\n                                    ) : (\r\n                                        <button disabled className=\"button-sm button-charcoal50-outline rounded-1 px-3 py-2 m-1 fw-bold\" style={{ letterSpacing: '1px' }} id={key} value={data[0]}>{tConvert(data[1])}</button>\r\n                                    )\r\n                                ))\r\n                            }\r\n                            <button className=\"btn btn-sm done m-1 d-none\">\r\n                                <img src=\"/images/addicon.png\" alt=\"displaying_image\" className=\"mb-1 me-1\" style={{ width: \"1.2rem\" }} /> Time Slot\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className='p-2 rounded fw-bold text-burntumber bg-lightred'>No Time Slots Available</div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"row m-0 p-0\">\r\n                    {\r\n                        load ? (\r\n                            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button className='btn button-charcoal' onClick={confirmmessage}>Update</button>\r\n                                </div>\r\n\r\n                                <div className=\"col-6 m-auto text-center\">\r\n                                    <button type=\"button\" className=\"button button-pearl\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.closeappointmentform} >Cancel</button>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport { UpdateAppointment }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\nimport { DoctorsList, URL, Doctorapi, TodayDate, Clinic, TodayDocs } from '../../index'\r\nimport Notiflix from 'notiflix'\r\n\r\nimport '../../css/dashboard.css'\r\nconst SelectedTimeAppointment = (props) => {\r\n    //Global Variable\r\n    const url = useContext(URL)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const TodayDoctors = useContext(TodayDocs)\r\n    const Doclist = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const APIDate = useContext(TodayDate)\r\n    const adminid = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    //Local UseStates\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [searchlist, setsearchlist] = useState([])\r\n    const [displaysearchlist, setdisplaysearchlist] = useState('none')\r\n    const [patientid, setpatientid] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [time, settime] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [load, setload] = useState()\r\n\r\n    // Functions\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n    function tConvert(time) {\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time]\r\n        if (time.length > 1) {\r\n            time = time.slice(1)\r\n            time[3] = +time[0] < 12 ? ' AM ' : ' PM '\r\n            time[0] = +time[0] % 12 || 12\r\n        }\r\n        return time.join('')\r\n    }\r\n    async function searchpatient(e) {\r\n        setsearchload(true)\r\n        setsearchinput(e.target.value)\r\n        await axios.get(`${url}/patient/list?search=${searchinput}&limit=5&offset=0`).then((response) => {\r\n            setsearchlist(response.data.data.patients_list)\r\n            setsearchload(false)\r\n        })\r\n\r\n        if (searchinput && searchinput.length > 1) {\r\n            setdisplaysearchlist('block')\r\n        } else {\r\n            setdisplaysearchlist('none')\r\n        }\r\n    }\r\n    const get_value = (data) => {\r\n        setsearchinput(data.full_name)\r\n        setpatientid(data.id)\r\n        setdisplaysearchlist('none')\r\n    }\r\n    const gettime_value = (e) => {\r\n        settime(APIDate)\r\n    }\r\n    function BookAppointment() {\r\n        setload(true)\r\n        if (patientid && doctorid && clinicid && props.selectedtimeID[0] && adminid) {\r\n            axios.post(`${url}/add/appointment`, {\r\n                patient_id: patientid,\r\n                doctor_id: doctorid,\r\n                clinic_id: clinicid,\r\n                timeslot_id: props.selectedtimeID[0],\r\n                admin_id: adminid\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                setload(false)\r\n                props.closeAddAppointmentform()\r\n                props.fetchapi()\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n            setload(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h5 className=\"text-center m-0 p-0 mt-2\">Quick Appointment  at <span className=' text-charcoal fw-bold border-0 fs-6'>{tConvert(props.selectedtime)}</span></h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute top-0 mt-2\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={(e) => { props.closeAddAppointmentform() }} ></button>\r\n            <hr className='p-0 m-0 mb-1' />\r\n            <div className=\" text-start p-0 m-0 ms-3 clinics align-items-end mb-2 fw-bold text-burntumber \">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'}`}>\r\n                            <img src={process.env.PUBLIC_URL + '/images/location.png'} className=' align-self-center '/> {data.title} {data.address}</label>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row p-0 m-0\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"text\" placeholder='Search Patient using Number or Name' className=\"form-control bg-pearl border-0\" value={searchinput ? searchinput : ''} onChange={(e) => { searchpatient(e) }} />\r\n                    <div className={`col-6 position-absolute d-${displaysearchlist} bg-pearl rounded-2 shadow mt-1 pb-2 `} style={{ zIndex: 3 }}>\r\n                        {\r\n                            searchload ? (\r\n                                <div className=\" col-12 text-charcoal75 p-0 m-0 py-2 fw-bold text-start ps-2 mt-1\">Loading... </div>\r\n                            ) : (\r\n                                searchlist !== undefined && searchlist.length == 0 ? (\r\n                                    <div className=\"text-burntumber col-12 p-0 m-0 fw-bold mt-1 ps-2 pt-1\">Patient not found</div>\r\n                                ) : (\r\n                                    <div className='mt-1 searchresult bg-pearl  col-12  ' >\r\n                                        {\r\n                                            searchlist.map((data, i) => (\r\n                                                <div style={{ cursor: 'pointer' }} className={`col-12 d-block p-2 fw-bold text-charcoal text-start border-bottom align-self-center`} name={data.id} value={data.full_name} onClick={() => { get_value(data) }}>{data.full_name} <span className='fw-bold text-burntumber'>{data.phone_number}</span></div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"d-flex p-0 m-0 text-start justify-content-around\">\r\n                        <div className='button button-charcoal50-outline align-self-center '> Dr.{doctorname}</div>\r\n                        <div className=\"button button-charcoal50-outline ms-3\" >{reversefunction(APIDate)}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                load ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"col-6 donebutton py-2 pb-2 m-auto text-center\">\r\n                        <button className=\"button button-charcoal\" onClick={BookAppointment}> Done </button>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport { SelectedTimeAppointment }","import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, Clinic } from '../../index'\r\nimport { DOCTORNAME, DOCTORID } from '../../components/App/Clinic'\r\n\r\nconst AddSelectedDoctorSlot = (props) => {\r\n    const url = useContext(URL)\r\n    const APIDate = useContext(TodayDate)\r\n    const doctorname = useContext(DOCTORNAME)\r\n    const doctorid = useContext(DOCTORID)\r\n    const Doctors = useContext(DoctorsList)\r\n    const cliniclist = useContext(Clinic)\r\n    const admin_id = localStorage.getItem('id')\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const [adddoctorfortoday, setadddoctorfortoday] = useState()\r\n    const [docdate, setdocdate] = useState()\r\n    const [fromtime, setfromtime] = useState()\r\n    const [totime, settotime] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n\r\n    async function AddSelectedDoctorSlot() {\r\n\r\n        if (doctorid && APIDate && fromtime && totime && clinicid && admin_id) {\r\n            Notiflix.Loading.pulse({\r\n                backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n                svgColor: '#96351E'\r\n            })\r\n            await axios.post(`${url}/doctor/add/timeslots`, {\r\n                doctor_id: doctorid,\r\n                date: APIDate,\r\n                time_from: fromtime,\r\n                time_to: totime,\r\n                clinic_id: clinicid,\r\n                admin_id: admin_id\r\n            }).then((response) => {\r\n                Notiflix.Loading.remove()\r\n                props.CloseAddQuickSlots()\r\n                props.fetchapi()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } else {\r\n            Notiflix.Notify.warning('Please Fill all Detais')\r\n        }\r\n\r\n    }\r\n    const confirmmessage = () => {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Update Doctor Slot`,\r\n            `Do you surely want to add more Time Slots of Dr. ${doctorname}`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                AddSelectedDoctorSlot()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        )\r\n    }\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container position-relative'>\r\n            <h5 className=\"text-center pt-1\">Quick Add TimeSlots</h5>\r\n            <button type=\"button\" className=\"btn-close closebtn position-absolute\" aria-label=\"Close\" onClick={props.CloseAddQuickSlots} ></button>\r\n            <hr className='p-0 m-0' />\r\n            <div className=\"col-12 text-center clinics\">\r\n                {\r\n                    cliniclist.map((data, i) => (\r\n                        <label className={`d-${clinicID == data.id ? 'block' : 'none'} img-fluid`}><img src={process.env.PUBLIC_URL + '/images/location.png'} />{data.title} {data.address}</label>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"row mt-2 justify-content-center gx-2\">\r\n                <div className=\"col-auto\">\r\n                    <button className='button button-charcoal50-outline'>{doctorname}</button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <div type=\"date\" disabled className=\"form-control col-10 button button-charcoal50-outline\" >{reversefunction(APIDate)}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row p-0 m-0 mt-2 justify-content-center\">\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} />\r\n                </div>\r\n                <div className='col-auto'>-</div>\r\n                <div className=\"col-5\">\r\n                    <input type=\"time\" className=\"form-control bg-seashell border-charcoal\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <button className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { AddSelectedDoctorSlot }","import React, { useState, useEffect, useContext } from 'react'\r\nimport { URL, Vitals } from '../../index'\r\n\r\nimport '../../css/dashboard.css'\r\nimport axios from 'axios'\r\nimport Notiflix from 'notiflix'\r\n\r\n\r\nconst Vitalsoperation = (props) => {\r\n  const url = useContext(URL)\r\n  const vitals = useContext(Vitals)\r\n  const [vitalid, setvitalid] = useState()\r\n  const [vitalvalue, setvitalvalue] = useState()\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [vitalupdatevalue, setvitalupdatevalue] = useState()\r\n  const [vitalindex, setvitalindex] = useState(0)\r\n  const [savevital, setsavevital] = useState('none')\r\n  const [updatevital, setupdatevital] = useState('block')\r\n  function resetfields() {\r\n    setvitalvalue()\r\n    setvitalid()\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function Vitalunit(vitalid) {\r\n    let v;\r\n    for (let x in vitals) {\r\n      if (vitals[x].id == vitalid) {\r\n        v = vitals[x].unit\r\n      }\r\n    }\r\n    return v\r\n  }\r\n  async function AddVitals() {\r\n    setloadvitals(true)\r\n    try {\r\n      if (vitalid && vitalvalue && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalvalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          Notiflix.Notify.success(response.data.message)\r\n          resetfields()\r\n          setloadvitals(false)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n        setloadvitals(false)\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n      setloadvitals(false)\r\n    }\r\n  }\r\n\r\n  async function UpdateVital(vitalid, appointmentvitalid) {\r\n    try {\r\n      if (vitalid && vitalupdatevalue && appointmentvitalid && props.appointmentid && props.patientid) {\r\n        await axios.post(`${url}/save/vitals`, {\r\n          vitals_id: vitalid,\r\n          value: vitalupdatevalue,\r\n          appointment_id: props.appointmentid,\r\n          patient_id: props.patientid,\r\n          old_id: appointmentvitalid\r\n        }).then((response) => {\r\n          props.GetAppointmentVitals(props.appointmentid)\r\n          OpenUpdateVital();\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } else {\r\n        Notiflix.Notify.warning('Please Fill all Details')\r\n      }\r\n    } catch (e) {\r\n      Notiflix.Notify.alert(e.message)\r\n    }\r\n  }\r\n  async function DeleteVital(vitalid) {\r\n    if (vitalid) {\r\n      await axios.post(`${url}/remove/vitals`, {\r\n        id: vitalid\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          Notiflix.Notify.success(response.data.message)\r\n        } else {\r\n          Notiflix.Notify.alert('Something Went Wrong')\r\n        }\r\n        props.GetAppointmentVitals(props.appointmentid)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.alert('Delete Failed Please Try again')\r\n    }\r\n\r\n  }\r\n  function refresh() {\r\n    props.GetAppointmentVitals(props.appointmentid)\r\n    OpenUpdateVital()\r\n  }\r\n\r\n  function OpenSaveVital() {\r\n    if (savevital == 'none') {\r\n      setsavevital('block')\r\n      setupdatevital('none')\r\n      setvitalupdatevalue()\r\n    }\r\n  }\r\n  function OpenUpdateVital() {\r\n    if (updatevital == 'none') {\r\n      setupdatevital('block')\r\n      setsavevital('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n  return (\r\n    <div className='container-fluid col-lg-10 col-md-11 col-sm-12 col-12 col-xl-10 bg-seashell rounded-2 position-relative pb-4 pt-2'>\r\n      <h5 className='p-1 text-center'>{props.patientname} Vitals</h5>\r\n      <button className=' btn-close position-absolute top-0 end-0 m-1 me-2 pt-3' disabled={props.loadvitals ? true : false} onClick={props.CloseVitals}></button>\r\n      <button className='btn p-0 m-0 position-absolute top-0 start-0 ms-2 mt-1' onClick={refresh}><img src={process.env.PUBLIC_URL + '/images/refresh.png'} className='img-fluid' style={{ width: '1.2rem' }} /></button>\r\n      {\r\n        props.loadvitals ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          props.appointmentvitalslist.length == 0 ? (\r\n            <>\r\n              <div className='bg-lightred p-2 mb-2 text-center align-items-center '>\r\n                <h6 className='text-center text-charcoal-75 fw-bold mb-0'>No Vitals Added</h6>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            props.appointmentvitalslist.map((data, i) => (\r\n              <div className='container-fluid'>\r\n                <div className={`row justify-content-end align-items-center`}>\r\n                  <div className=\"col-3\">\r\n                    <select className='form-control text-center border border-1 p-0 border-0 bg-seashell' value={data.id ? data.id : ''}>\r\n                      <option value={data.id}>{data.vital.title}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={`col-2 text-center d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <input className='form-control bg-seashell text-center py-0 ' disabled value={data.value} />\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 text-center d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <input className='form-control bg-seashell text-center py-0 ' onChange={(e) => setvitalupdatevalue(e.target.value)} />\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n\r\n                  <div className=\"col-1 p-0 m-0\">\r\n                    {\r\n                      data.vital.id ? (\r\n                        <p className='p-0 m-0  text-charcoal text-center align-self-center'>{Vitalunit(data.vital.id)}</p>\r\n                      ) : (\r\n                        <p className='text-charcoal text-center align-self-center'>Unit</p>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                  <div className={`col-2 d-${i == vitalindex ? updatevital : 'block'}`}>\r\n                    <button className='button py-0 button-lightbrown' value={data.id} onClick={() => { OpenSaveVital(); setvitalindex(i) }}>Edit</button>\r\n                  </div>\r\n                  {\r\n                    i == vitalindex ? (\r\n                      <div className={`col-2 d-${i == vitalindex ? savevital : 'none'}`}>\r\n                        <button className='button py-0 button-lightgreen' onClick={() => { UpdateVital(data.vital.id, data.id) }}>Save</button>\r\n                      </div>\r\n                    ) : (<></>)\r\n                  }\r\n                  <div className=\"col-auto me-5\">\r\n                    <button className='btn p-0 m-0'><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }} onClick={() => DeleteVital(data.id)} /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))\r\n          )\r\n\r\n        )\r\n      }\r\n      <div className=\"container-fluid mt-2\">\r\n        {\r\n          loadvitals ? (\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row justify-content-end align-items-center\">\r\n              <div className=\"col-3\">\r\n                <select className='form-control p-0 border-0 text-center bg-seashell' value={vitalid ? vitalid : ''} onChange={(e) => { setvitalid(e.target.value) }}>\r\n                  <option>Select Vitals</option>\r\n                  {\r\n                    vitals.map((data) => (\r\n                      <option value={data.id}>{data.title}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <input className='form-control bg-seashell text-center p-0 border-start-0 border-end-0 border-top-0 border-bottom-burntumber' value={vitalvalue ? vitalvalue : ''} onChange={(e) => { setvitalvalue(e.target.value) }} />\r\n              </div>\r\n              <div className=\"col-1 p-0 m-0 \">\r\n                {\r\n                  vitalid ? (\r\n                    <p className='text-charcoal text-center p-0 m-0'>{Vitalunit(vitalid)}</p>\r\n                  ) : (\r\n                    <p className='text-charcoal text-center p-0 m-0'>Unit</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {\r\n                  loadvitals ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button className='btn py-0 button-burntumber' onClick={AddVitals}>Add</button>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n              <div className=\"col-auto me-5\">\r\n              <button className='btn p-0 m-0 ' style={{opacity:'0'}}><img src={process.env.PUBLIC_URL + '/images/delete.png'} className='img-fluid' style={{ width: '1.3rem' }}/></button>\r\n\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n      <div className=\"container text-center mt-3\">\r\n        <button className='button button-charcoal mx-auto' onClick={props.CloseVitals}>Done</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Vitalsoperation }","import React, { useState, useEffect, useContext, useRef,useCallback,useDebounceEffect } from \"react\";\r\nimport { URL } from \"../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport \"../../css/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport {ReactCrop } from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport '../../css/bootstrap.css'\r\nimport Webcam from 'react-webcam'\r\n\r\nconst Bill = (props) => {\r\n  const url = useContext(URL);\r\n  const adminid = localStorage.getItem(\"id\");\r\n  const Charges = {\r\n    description: \"\",\r\n    amount: 0,\r\n    discount: 0,\r\n    cgst: 0,\r\n    sgst: 0,\r\n    gross_amount: 0,\r\n    id: \"\",\r\n  };\r\n  const paymentmethoddetails = {\r\n    paymentmethod: \"\",\r\n    amount: 0,\r\n  };\r\n  //Advance payments\r\n  const [loadadvancepayments, setloadadvancepayments] = useState(false);\r\n  const [advancepayments, setadvancepayments] = useState();\r\n\r\n  //ExtraCharge\r\n  const [extrachargecount, setextrachargecount] = useState([{\r\n    description: \"\",\r\n    amount: 0,\r\n    discount: 0,\r\n    cgst: 0,\r\n    sgst: 0,\r\n    gross_amount: 0,\r\n    id: \"\",\r\n  }]);\r\n\r\n  //Bill\r\n  const [constext, setconstext] = useState(\"\");\r\n  const [docdiscount, setdocdiscount] = useState(0);\r\n  const [coupondiscount, setcoupondiscount] = useState(0);\r\n  const [aartasdiscount, setaartasdiscount] = useState(0);\r\n  const [AtC, setAtC] = useState(0);\r\n  const [AddConsAmt, setAddConsAmt] = useState(props.doctorfee);\r\n  const [SGST, setSGST] = useState();\r\n  const [CGST, setCGST] = useState();\r\n  const [paymentmethods, setpaymentmethods] = useState([{\r\n    paymentmethod: \"\",\r\n    amount: '',\r\n  }]);\r\n  const [load, setload] = useState();\r\n  const [ischecked, setischecked] = useState();\r\n\r\n\r\n  async function AddExtraCharges() {\r\n    let extracharges = [];\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id) {\r\n        for ( let j = 0; j < props.appointmentdata[i].other_charges.length; j++ ) {\r\n          extracharges.push({\r\n            description: props.appointmentdata[i].other_charges[j].description != null ? props.appointmentdata[i].other_charges[j].description : \"N/A\",\r\n            amount: props.appointmentdata[i].other_charges[j].total_amount != null ? props.appointmentdata[i].other_charges[j].total_amount : 0,\r\n            discount: props.appointmentdata[i].other_charges[j].discount != null ? props.appointmentdata[i].other_charges[j].discount : 0,\r\n            cgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0, sgst: props.appointmentdata[i].other_charges[j] != null && props.appointmentdata[i].other_charges[j].gst_rate != null ? props.appointmentdata[i].other_charges[j].gst_rate / 2 : 0,\r\n            gross_amount: props.appointmentdata[i].other_charges[j].final_amount && props.appointmentdata[i].other_charges[j].final_amount !== null ? props.appointmentdata[i].other_charges[j].final_amount : \"\",\r\n            id: props.appointmentdata[i].other_charges[j].id && props.appointmentdata[i].other_charges[j].id != null ? props.appointmentdata[i].other_charges[j].id : \"\",\r\n          });\r\n        }\r\n        setaartasdiscount(props.appointmentdata[i].aartas_discount);\r\n        setdocdiscount(props.appointmentdata[i].doc_discount);\r\n        setconstext(props.appointmentdata[i].cons_text);\r\n      }\r\n    }\r\n    if(extracharges.length>0){\r\n      setextrachargecount(extracharges);\r\n    }else{\r\n      setextrachargecount([Charges])\r\n    }\r\n  }\r\n  async function AddPaymentMethods() {\r\n    let Payments = [];\r\n    let amounts = [];\r\n    let allamounts = [];\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id && props.appointmentdata[i].payment_method_details) {\r\n        Payments.push(Object.keys(JSON.parse(props.appointmentdata[i].payment_method_details)));\r\n        amounts.push(Object.values(JSON.parse(props.appointmentdata[i].payment_method_details)));\r\n      }\r\n    }\r\n    let paymentobj = [];\r\n    let p = {\r\n      paymentmethod: \"\",\r\n      amount: 0,\r\n    };\r\n    if (Payments[0]) {\r\n      for (let j = 0; j < Payments[0].length; j++) {\r\n        allamounts.push(\r\n          (p = { paymentmethod: Payments[0][j], amount: amounts[0][j] })\r\n        );\r\n      }\r\n      if(allamounts.length>0){\r\n        setpaymentmethods(allamounts);\r\n      }else{\r\n        setpaymentmethods([paymentmethoddetails]);\r\n      }\r\n    \r\n    }\r\n\r\n    // paymentmethods.push(paymentobj);\r\n  }\r\n\r\n  useEffect(() => {\r\n    AddExtraCharges()\r\n    AddPaymentMethods();\r\n  }, [props.billform])\r\n\r\n  useEffect(() => {\r\n      AddExtraCharges()\r\n  }, [])\r\n\r\n  async function DeleteExtraCharges(i) {\r\n    if (extrachargecount[i].id) {\r\n      setextrachargecount([]);\r\n      await axios\r\n        .post(`${url}/appointment/delete/extra/charges`, {\r\n          id: extrachargecount[i].id,\r\n        })\r\n        .then((response) => {\r\n          setextrachargecount([]);\r\n          extrachargecount.splice(i, i);\r\n          Notiflix.Notify.success(response.data.message);\r\n          props.Appointmentlist();\r\n        });\r\n    } else {\r\n      extrachargecount.splice(i, i);\r\n    }\r\n  }\r\n  function DeletePaymentMethods(i) {\r\n    paymentmethods.splice(i, i);\r\n  }\r\n  function Calculate_gst(amount, discount, cgst, sgst) {\r\n    setextrachargecount((prevState) => [...prevState]);\r\n    let AMOUNT = amount ? amount : 0;\r\n    let DISCOUNT = discount ? discount : 0;\r\n    let CGST = cgst ? cgst : 0;\r\n    let SGST = sgst ? sgst : 0;\r\n    let total = AMOUNT - DISCOUNT;\r\n    CGST = ((CGST + SGST) * total) / 100;\r\n    total = total + CGST;\r\n    total = total.toFixed(2);\r\n    return total;\r\n  }\r\n  function Get_total_Seperate_gsts() {\r\n    let grosstotal = [];\r\n    let total = 0;\r\n    for (let i = 0; i < extrachargecount.length; i++) {\r\n      grosstotal.push( (Number(extrachargecount[i].gross_amount) - (Number(extrachargecount[i].amount) - Number(extrachargecount[i].discount))) / 2);\r\n    }\r\n    grosstotal.forEach((item) => {\r\n      total += item;\r\n    });\r\n    total = total.toFixed(2);\r\n    return total;\r\n  }\r\n  function Get_Grand_Total() {\r\n    let total = 0;\r\n    let discounts =\r\n      Number(aartasdiscount) + Number(docdiscount) + Number(coupondiscount);\r\n    extrachargecount.map((data) => (total += Number(data.gross_amount)));\r\n    total = total + Number(AddConsAmt) - discounts;\r\n    total = total.toFixed(2);\r\n    // if (Addcons == true) {\r\n    //   total = Number(total) + Number(ConsumableAmount())\r\n    // } else {\r\n    //   total = total\r\n    // }\r\n    return total;\r\n  }\r\n  function Total_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      for (let i = 0; i < paymentmethods.length; i++) {\r\n        if(paymentmethods[i].amount){\r\n          totalarr.push(Number(paymentmethods[i].amount));\r\n        }\r\n      }\r\n      totalarr.forEach((item) => {\r\n        total += Number(item);\r\n      });\r\n      total = total.toFixed(2)\r\n      return total;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  function Return_Amount() {\r\n    let totalarr = [];\r\n    let total = 0;\r\n    let Advance = 0;\r\n    for (let i = 0; i < paymentmethods.length; i++) {\r\n      totalarr.push(Number(paymentmethods[i].amount));\r\n    }\r\n    totalarr.forEach((item) => {\r\n      total += item;\r\n    });\r\n    if (total > Get_Grand_Total()) {\r\n      Advance = total - Get_Grand_Total();\r\n      return Advance;\r\n    } else {\r\n      return Advance;\r\n    }\r\n  }\r\n  async function SaveBill() {\r\n    let GrandTotal = Get_Grand_Total();\r\n    GrandTotal = Number(GrandTotal);\r\n    let Docfee = Number(props.doctorfee);\r\n    let DoctorDiscount = Number(docdiscount);\r\n    let AartasDiscount = Number(aartasdiscount);\r\n    let TotalCGST = Get_total_Seperate_gsts();\r\n    let TotalSGST = Get_total_Seperate_gsts();\r\n    let Description = [];\r\n    let TotalAmount = [];\r\n    let Discount = [];\r\n    let Grossamount = [];\r\n    let DiscountedAmount = [];\r\n    let ids = [];\r\n    let gstrate = [];\r\n    for (let i = 0; i < extrachargecount.length; i++) {\r\n      Description.push(extrachargecount[i].description);\r\n      TotalAmount.push(Number(extrachargecount[i].amount));\r\n      Discount.push(Number(extrachargecount[i].discount));\r\n      DiscountedAmount.push(\r\n        Number(extrachargecount[i].amount) -\r\n        Number(extrachargecount[i].discount)\r\n      );\r\n      if (extrachargecount[i].id) {\r\n        ids.push(Number(extrachargecount[i].id));\r\n      }\r\n      if (extrachargecount[i].cgst && extrachargecount[i].sgst) {\r\n        gstrate.push(\r\n          Number(extrachargecount[i].cgst + extrachargecount[i].sgst)\r\n        );\r\n      } else {\r\n        gstrate.push(0);\r\n      }\r\n      Grossamount.push(extrachargecount[i].gross_amount);\r\n    }\r\n    let Paymentmethod = [];\r\n    let Paymentmethodsvalue = [];\r\n    for (let j = 0; j < paymentmethods.length; j++) {\r\n      Paymentmethod.push(paymentmethods[j].paymentmethod);\r\n      Paymentmethodsvalue.push(Number(paymentmethods[j].amount));\r\n    }\r\n    let Data = {\r\n      appointment_id: props.appointmentid,\r\n      g_total_main: GrandTotal,\r\n      cons_fee: Docfee,\r\n      description: Description,\r\n      total_amount: TotalAmount,\r\n      discount: Discount,\r\n      amount: DiscountedAmount,\r\n      doc_dis: DoctorDiscount,\r\n      aartas_discount: AartasDiscount,\r\n      payment_method: Paymentmethod,\r\n      payment_method_main: Paymentmethod,\r\n      payment_method_details: Paymentmethodsvalue,\r\n      SGST: Number(TotalSGST),\r\n      CGST: Number(TotalCGST),\r\n      admin_id: Number(adminid),\r\n      cons_text: constext,\r\n      add_to_cart: AtC,\r\n      show_cons_fee: AddConsAmt == props.doctorfee ? 1 : 0,\r\n      ot_id: ids,\r\n      gst_rate: gstrate,\r\n      final_amount: Grossamount,\r\n    };\r\n    async function Payment() {\r\n      try {\r\n        setload(true);\r\n        await axios\r\n          .post(`${url}/appointment/save/charges`, Data)\r\n          .then((response) => {\r\n            props.Appointmentlist();          \r\n            console.log(response)\r\n            if(response.data.status == true){\r\n              setload(false);\r\n              toggleStage3()\r\n              toggleStage4()\r\n              Notiflix.Notify.success(response.data.message);  \r\n            }else{\r\n              setload(false);\r\n              Notiflix.Notify.failure(response.data.message);  \r\n            }\r\n               \r\n            \r\n            // props.CloseBillForm();\r\n          });\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message);\r\n        setload(false);\r\n      }\r\n    }\r\n    Payment();\r\n    toggleStage3()\r\n    toggleStage4()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments`,\r\n      `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()}`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(0);\r\n        SaveBill();\r\n      },\r\n      () => {\r\n        return 0;\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  const AddtoCart = async () => {\r\n    customconfirm();\r\n    Notiflix.Confirm.show(\r\n      `Add Charges and Payments in Cart`,\r\n      `Do you surely want to add the following Charges and Payments with Grand Total ${Get_Grand_Total()} in Cart`,\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        setAtC(1);\r\n        SaveBill();\r\n      },\r\n      () => {\r\n        setAtC(0);\r\n        SaveBill();\r\n      },\r\n      {}\r\n    );\r\n  };\r\n  async function AdvancePayments() {\r\n    setloadadvancepayments(true);\r\n    axios\r\n      .post(`${url}/advance/balance`, {\r\n        patient_id: props.patientid,\r\n      })\r\n      .then((response) => {\r\n        if(response.data.status==true){\r\n          setadvancepayments(response.data.data);\r\n          setloadadvancepayments(false);\r\n        }else{\r\n          Notiflix.Notify.failure(response.data.message)\r\n          setloadadvancepayments(false);\r\n        }\r\n\r\n      });\r\n  }\r\n  const ConsumableAmount = () => {\r\n    let consumables_amount = []\r\n    let Total = 0;\r\n    for (let i = 0; i < props.appointmentdata.length; i++) {\r\n      if (props.appointmentid == props.appointmentdata[i].id) {\r\n        for (let j = 0; j < props.appointmentdata[i].medicine_used.length; j++) {\r\n          consumables_amount.push(props.appointmentdata[i].medicine_used[j].total_amount)\r\n        }\r\n      }\r\n    }\r\n\r\n    consumables_amount.forEach((data) => (\r\n      Total += data\r\n    ))\r\n    Total = Total.toFixed(2)\r\n    return Total\r\n  }\r\n  useEffect(() => {\r\n    AdvancePayments();\r\n    ConsumableAmount();\r\n  }, []);\r\n  const [stage1, setstage1] = useState('block')\r\n  const toggleStage1 = () => {\r\n    if (stage1 == 'block') {\r\n      setstage1('none')\r\n    }\r\n    if (stage1 == 'none') {\r\n      setstage1('block')\r\n    }\r\n  }\r\n  const [stage2, setstage2] = useState('none')\r\n  const toggleStage2 = () => {\r\n    if (stage2 == 'block') {\r\n      setstage2('none')\r\n    }\r\n    if (stage2 == 'none') {\r\n      setstage2('block')\r\n    }\r\n  }\r\n  const [stage3, setstage3] = useState('none')\r\n\r\n  const toggleStage3 = () => {\r\n    if (stage3 == 'none') {\r\n      setstage3('block')\r\n    }\r\n    if (stage3 == 'block') {\r\n      setstage3('none')\r\n    }\r\n  }\r\n\r\n  const [stage4, setstage4] = useState('none')\r\n  const toggleStage4 = () => {\r\n    if (stage4 == 'none') {\r\n      setstage4('block')\r\n    }\r\n    if (stage4 == 'block') {\r\n      setstage4('none')\r\n    }\r\n  }\r\n  const Go_Back = () => {\r\n    if (stage2 === 'block') {\r\n      toggleStage2()\r\n      toggleStage1()\r\n    }\r\n    if (stage3 === 'block') {\r\n      toggleStage3()\r\n      toggleStage2()\r\n    }\r\n    if (stage4 === 'block') {\r\n      toggleStage4()\r\n      toggleStage3()\r\n    }\r\n  }\r\n    \r\n  function AddMethods() {\r\n    if (paymentmethods && paymentmethods.length > 0) {\r\n      setpaymentmethods((prevState) => [...prevState, paymentmethoddetails]);\r\n    } else {\r\n      setpaymentmethods([paymentmethoddetails]);\r\n    }\r\n  }\r\n  function AddCharges() {\r\n    if (extrachargecount && extrachargecount.length > 0) {\r\n      setextrachargecount((prevState) => [...prevState, Charges]);\r\n    } else {\r\n      setextrachargecount([Charges]);\r\n    }\r\n  }\r\n\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        if(response.data.status == true){\r\n          Notiflix.Notify.success(response.data.message)\r\n          Notiflix.Loading.remove()\r\n          window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n        }else{\r\n          Notiflix.Notify.failure(response.data.message)\r\n          Notiflix.Loading.remove()\r\n        }    \r\n\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        if(response.data.status == true){\r\n          Notiflix.Notify.success(response.data.message)\r\n          Notiflix.Loading.remove()\r\n          window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n        }else{\r\n          Notiflix.Notify.failure(response.data.message)\r\n          Notiflix.Loading.remove()\r\n        }\r\n\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          if(response.data.status == true){\r\n            Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n            Notiflix.Loading.remove()\r\n          }else{\r\n            Notiflix.Notify.failure(response.data.message)\r\n            Notiflix.Loading.remove()\r\n          }\r\n\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          if(response.data.status == true){\r\n            Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n            Notiflix.Loading.remove()\r\n          }else{\r\n            Notiflix.Notify.failure(response.data.message)\r\n            Notiflix.Loading.remove()\r\n          }\r\n    \r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n\r\nconst [videoconstraint,setvideoconstraint] = useState('none')\r\nconst togglecamera = ()=>{\r\n  if(videoconstraint =='block'){\r\n    setvideoconstraint('none')\r\n  }\r\n  if(videoconstraint =='none'){\r\n    // setimagearr([])\r\n    setvideoconstraint('block')\r\n    window.open('/scan/prescription','_blank')\r\n  }\r\n  \r\n}\r\n// const webcamRef = useRef(null);\r\n// const imgRef = useRef(null);\r\n// const[imgroll,setimgroll]=useState('none')\r\n// const [editor,seteditor] =useState('none')\r\n// const [imagearr,setimagearr] = useState([])\r\n// const [editindex, seteditindex] = useState(0)\r\n// const [image,setimage]=useState()\r\n// const [flip,setflip] =useState('environment')\r\n// const videoConstraints = {\r\n//   // width: 600,\r\n//   // height: 800,\r\n//   facingMode: flip\r\n// };\r\n// const capture = useCallback(  \r\n//   () => {\r\n//     const imageSrc = webcamRef.current.getScreenshot();\r\n//     if(imagearr.length>0){\r\n//         setimagearr(imageSrc)\r\n//         Notiflix.Notify.info('Photo Captured')\r\n//         toggleGallery()\r\n//     }else{\r\n//         setimagearr((prevState)=>[...prevState,imageSrc])\r\n//         Notiflix.Notify.info('Photo Captured')\r\n//         toggleGallery()\r\n//     }\r\n//   },\r\n//   [webcamRef]\r\n// );\r\n\r\n// const toggleGallery = ()=>{\r\n//     if(imgroll=='block'){\r\n//         setimgroll('none')\r\n      \r\n//     }\r\n//     if(imgroll == 'none'){\r\n\r\n//         setimgroll('block')\r\n//     }\r\n// }\r\n\r\n// const toggleedit=()=>{\r\n// if(editor=='none'){\r\n//   seteditor('')\r\n// }\r\n// if(editor==''){\r\n//   seteditor('none')\r\n// }\r\n// }\r\n// const [src, setSrc] = useState(null);\r\n// // const[croppedimg,setcroppedimg]=useState()\r\n// const [crop, setCrop] = useState({   unit: '%',\r\n// x: 25,\r\n// y: 25,\r\n// width: 100,\r\n// height:100 });\r\n// const [completedCrop, setCompletedCrop] = useState(null);\r\n// const imageRef = useRef(null);\r\n\r\n// const onSelectFile = (e) => {\r\n//   setSrc(imagearr[editindex])\r\n// };\r\n// const createImageRef = (src) => {\r\n//   const img = new Image();\r\n//   img.src = src;\r\n//   img.onload = () => {\r\n//     imageRef.current = img;\r\n//   };\r\n// };\r\n// useEffect(() => {\r\n//   if (src) {\r\n//     createImageRef(src);\r\n//   }\r\n// }, [src]);\r\n\r\n// const getCroppedImg = (image, crop, fileName) => {\r\n//   const canvas = document.createElement('canvas');\r\n//   const scaleX = image.naturalWidth / image.width;\r\n//   const scaleY = image.naturalHeight / image.height;\r\n//   canvas.width = crop.width;\r\n//   canvas.height = crop.height;\r\n//   const ctx = canvas.getContext('2d');\r\n\r\n//   ctx.drawImage(\r\n//     image,\r\n//     crop.x * scaleX,\r\n//     crop.y * scaleY,\r\n//     crop.width * scaleX,\r\n//     crop.height * scaleY,\r\n//     0,\r\n//     0,\r\n//     crop.width,\r\n//     crop.height\r\n//   );\r\n\r\n//   return new Promise((resolve, reject) => {\r\n//     canvas.toBlob((blob) => {\r\n//       if (!blob) {\r\n//         // Reject if the blob is null\r\n//         console.error('Canvas is empty');\r\n//         return;\r\n//       }\r\n//       blob.name = fileName;\r\n//       window.URL.revokeObjectURL(src);\r\n//       const imageUrl = window.URL.createObjectURL(blob);\r\n//       resolve(imageUrl);\r\n//     }, 'image/jpeg');\r\n//   });\r\n// };\r\n// const makeClientCrop = async (crop) => {\r\n//   if ( imageRef.current && crop.width && crop.height) {\r\n//     toggleedit()\r\n//     setCompletedCrop()\r\n//     togglecamera()\r\n//     const croppedImageUrl = await getCroppedImg(\r\n//       imageRef.current,\r\n//       crop,\r\n//       'prescription.jpeg'\r\n//     );\r\n//     // You can do something with the cropped image URL, like displaying it or saving it.\r\n//     // console.log(croppedImageUrl);\r\n//     setimage(croppedImageUrl)\r\n//   }\r\n// };\r\n\r\nreturn (\r\n    <>\r\n    <div className=\" position-relative rounded-2 bg-seashell\" style={{minHeight:'100%'}}>\r\n    <div className=\"shadow-sm\">\r\n      <h5 className=\"text-center fw-bold py-2\">{props.patientname} Bill</h5>\r\n      <button className={`btn btn-back position-absolute start-0 top-0 ms-2 d-${stage1 == 'block' ? 'none' : 'block'}`} onClick={() => { Go_Back() }}   ></button>\r\n      <button className=\"btn btn-close position-absolute end-0 top-0 me-2\" onClick={() => { props.CloseBillForm(); }}  ></button>\r\n    </div>\r\n    <div className={`stage1 d-${stage1}`}>\r\n               <div className=\"px-4 pt-4\">\r\n               <label className=\" text-charcoal fw-bolder mt-2 mb-3\">\r\n                 <input className=\"form-check-input me-1 \" type=\"checkbox\" checked={AddConsAmt} onClick={AddConsAmt == props.doctorfee ? () => setAddConsAmt(0) : () => setAddConsAmt(props.doctorfee)} />\r\n                 Add Consultation Amount\r\n               </label>\r\n               <div className=\"row p-0 m-0 justify-content-between\">\r\n                 <div className=\"col-4 ps-0 \">\r\n                   <label className=\"text-charcoal75 fw-bold\"> Doctor's Consultation Charge </label>\r\n                   <input className=\"form-control bg-seashell fw-bold\" disabled={true} value={AddConsAmt} />\r\n                 </div>\r\n                 <div className=\"col-8 pe-0 \">\r\n                   <label className=\"text-charcoal75 fw-bold\"> Consultation text </label>\r\n                   <input className=\"form-control bg-seashell fw-bold\" value={constext ? constext : \"\"} onChange={(e) => setconstext(e.target.value)} />\r\n                 </div>\r\n               </div>\r\n               <div className=\"mt-5 text-start\">\r\n                <h5 className=\"fw-bolder text-charcoal\">Discounts</h5>\r\n                <div className=\"row p-0 m-0\">\r\n                  <div className=\"col-4 ps-0\">\r\n                    <label className=\"text-charcoal75 fw-bold\">Coupon</label>\r\n                    <input\r\n                      className=\"form-control fw-bold text-charcoal text-start\"\r\n                      disabled={true}\r\n                      value={coupondiscount ? coupondiscount : \"\"}\r\n                      onChange={(e) => setcoupondiscount(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <label className=\"text-charcoal75 fw-bold\">Doctor</label>\r\n                    <input className=\"form-control bg-seashell fw-bold text-charcoal text-start\" value={docdiscount ? docdiscount : \"\"} onChange={(e) => setdocdiscount(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <label className=\"text-charcoal75 fw-bold\">Aartas</label>\r\n                    <input className=\"form-control bg-seashell fw-bold text-charcoal text-start\" value={aartasdiscount ? aartasdiscount : \"\"} onChange={(e) => setaartasdiscount(e.target.value)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n               </div>\r\n               \r\n        \r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 justify-content-between \">\r\n                <div className=\"col-4 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0  bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                  <button className=\"button button-charcoal \" onClick={()=>{toggleStage1();toggleStage2();}} >Extra Charges </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={`stage2 d-${stage2} scroll`}>\r\n                <div className=\"container-fluid text-start p-2\">\r\n                <div className=\"bg-seashell position-relative\">\r\n                  <div className=\"row p-0 m-0 align-items-center mb-2\">\r\n                    <div className=\"col-auto p-0 m-0 ps-2 pe-1\">\r\n                      <h5 className=\" p-0 m-0 text-charcoal fw-bolder\"> Extra Charges </h5>\r\n                    </div>\r\n                    {/* <div className=\"col-auto p-0 m-0\">\r\n                      <button className=\"btn p-0 m-0 py-0\" onClick={() =>AddCharges()} >\r\n                        <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" />\r\n                      </button>\r\n                    </div> */}\r\n                  </div>\r\n                  {props.isLoading ? (\r\n                    <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                      <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    extrachargecount.map((data, i) => (\r\n                      <div className=\"container-fluid p-0 m-0\">\r\n                        <div className=\"row p-0 m-0 align-items-center\">\r\n                          <div className=\"col-10\">\r\n                          <div className=\"row p-0 m-0\">\r\n                          <div className=\"col-8 ps-0 ms-0\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\"> Description </label>\r\n                            <input className=\"form-control bg-seashell m-0 text-start fw-bold \" value={data.description ? data.description : \"\"} onChange={(e) => { data.description = e.target.value; Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\">\r\n                              Amount\r\n                            </label>\r\n                            <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.amount ? data.amount : \"\"} onChange={(e) => { data.amount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          </div>\r\n                          <div className=\"row p-0 m-0 mt-1\">\r\n                          <div className=\"col-4 ms-0 ps-0\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\">\r\n                              Discount ₹\r\n                            </label>\r\n                            <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.discount ? data.discount : \"\"} onChange={(e) => { data.discount = e.target.value; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <label className=\"fw-bold text-charcoal75 text-start ps-1\"> GST % </label>\r\n                            <input type=\"number\" className=\"form-control text-start bg-seashell m-0 fw-bold \" value={data.cgst && data.sgst ? data.cgst + data.sgst : \"\"} onChange={(e) => { data.cgst = e.target.value / 2; data.sgst = e.target.value / 2; data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                          </div>\r\n                          <div className=\"col-4 p-0 align-self-end \">\r\n                            <div className=\"row p-0 m-0 \">\r\n                              <div className=\"col-6 p-0 m-0 fw-bold text-charcoal75 text-end\"> Amount: </div>\r\n                              <input type=\"number\" className=\"col-6 p-0 border-0 text-start bg-seashell m-0 ps-1 fw-bold text-burntumber\" style={{ letterSpacing: \"1px\" }} value={data.amount && data.discount ? data.amount - data.discount : \"\"} onChange={(e) => { data.gross_amount = Calculate_gst(data.amount, data.discount, data.cgst, data.sgst); }} />\r\n                            </div>\r\n                            <div className=\"row p-0 m-0\">\r\n                              <div className=\"col-6 p-0 m-0 fw-bold text-charcoal75 text-end\"> incl. gst: </div>\r\n                              <input className=\"col-6 p-0 border-0 m-0 text-start bg-seashell ps-1 fw-bold text-burntumber\" style={{ letterSpacing: \"1px\" }} value={data.gross_amount ? data.gross_amount : \"\"} />\r\n                            </div>\r\n                          </div>\r\n                          </div>\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                            <button className={`btn btn-sm p-0 m-0 d-${i==0?'none':'block'}`} onClick={() => { DeleteExtraCharges(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className=\"img-fluid p-0 m-0\" style={{width:'1.5rem'}} />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n           \r\n                      </div>\r\n                    ))\r\n                  )}\r\n                               <div className={`container-fluid text-center mt-2  `}>    \r\n                        <button className=\"btn p-0 m-0 py-0\" onClick={() =>AddCharges()} >\r\n                        <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{width:'1.8rem'}} />\r\n                      </button>\r\n            </div>\r\n                 \r\n                </div>\r\n              </div>\r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 \">\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                <label className=\"fw-bolder text-charcoal text-wrap text-start\"><small>SGST</small> </label>\r\n                <input className=\"form-control rounded-1 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" disabled value={SGST ? SGST : \"₹\" +Get_total_Seperate_gsts()} onChange={(e) => setSGST(e.target.value)} />\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                <label className=\"fw-bolder text-charcoal text-wrap text-start\"><small>CGST</small></label>\r\n                <input className=\"form-control rounded-1 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" disabled value={CGST ? CGST : \"₹\" + Get_total_Seperate_gsts()} onChange={(e) => setCGST(e.target.value)} />\r\n                </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\" col-3 d-flex justify-content-end ps-2\">\r\n                  <button className=\"button button-charcoal \" onClick={()=>{toggleStage2();toggleStage3();}} > Payments </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={`stage3 d-${stage3} scroll`}>\r\n\r\n            <div className=\" text-start position-relative px-3\">\r\n            <h5 className=\"text-charcoal fw-bolder text-start ps-1\">Payments</h5>\r\n            {\r\n              paymentmethods && paymentmethods !== undefined ? (\r\n                paymentmethods.map((data, i) =>\r\n                    <>\r\n                      <div className=\" mt-4\">\r\n                        <div className=\"row p-0 m-0 align-items-center\">\r\n                          <div className=\"col-10 ps-0\">\r\n                            <h6 className=\"text-charcoal75 fw-bold\">Enter Amount</h6>\r\n                            <input type=\"number\" placeholder=\"₹00\" value={data.amount} onChange={(e) => { data.amount = e.target.value; setpaymentmethods((prevState) => [...prevState]); }} className=\"form-control rounded-1 fw-bold text-charocoal75 bg-seashell w-25 border-2\" />\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                            <button className={`btn btn-sm p-0 m-0 d-${i == 0 ? 'none' : 'block'}`} onClick={() => { DeletePaymentMethods(i); setpaymentmethods((prevState) => [...prevState]); }} >\r\n                              <img src={process.env.PUBLIC_URL + \"/images/minus.png\"} className=\"img-fluid\" style={{ width: \"1.5rem\" }}/>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div >\r\n                      <h6 className=\"text-charcoal75 fw-bold mt-2\">Select Payment Method</h6>\r\n                      <div className=\"d-flex flex-horizontal mt-2 scroll\" style={{minHeight:'min-content'}}>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Cash'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Cash' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Cash' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Cash</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Points'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Points' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Points' />\r\n                        <span>\r\n                        <h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Points<div className=\" text-success fw-bold\">{props.Data.patient.reward_points !=undefined  && props.Data.patient.reward_points.points_total!=undefined && props.Data.patient.reward_points.points_total !=null ? props.Data.patient.reward_points.points_total :0}</div></h6>\r\n                        </span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Adjust-Advance'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Adjust-Advance' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Adjust-Advance' />\r\n                        <span>\r\n                        <h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Adjust-Advance                {\r\n                      loadadvancepayments ? (\r\n                        <div className=\" py-2 pb-2 m-auto text-center\">\r\n                          <div class=\"spinner-border spinner-border-sm\" role=\"status\" >\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                        </div>\r\n                      ) : advancepayments ? (\r\n                        <div className=\"text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell\">\r\n                          {\"₹\" + advancepayments.advnace_total}\r\n                        </div>\r\n                      ) : (\r\n                        // <input className='form-control text-success text-start border-0 rounded-1 fw-bolder p-0  bg-seashell' value= />\r\n                        <div className=\"text-success fw-bold\"> 0 </div>\r\n                      )}</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Card'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Card' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Card' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Card</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Paytm'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Paytm' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Paytm' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Paytm</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Phonepe'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Phonepe' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Phonepe' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Phonepe</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Razorpay'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Razorpay' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Razorpay' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Razorpay</h6></span>\r\n                        <input type=\"checkbox\" className=\"form-check-input p-2 mt-1\" onChange={() => { data.paymentmethod = 'Wire-Transfer'; setpaymentmethods((prevState) => [...prevState]); }} checked={'Wire-Transfer' == data.paymentmethod ? true : false} onClick={(e) => { ischecked != undefined ? setischecked() : setischecked(e.target.value); }} value='Wire-Transfer' /><span><h6 className=\"d-block text-charcoal fw-bold pt-1 ms-2 me-5\">Wire-Transfer</h6></span>\r\n                      </div>\r\n                    </>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )\r\n            }\r\n            <div className={`container-fluid text-center mt-2  `}>    \r\n                  <button className=\"btn py-0\" onClick={AddMethods}>\r\n                    <img src={process.env.PUBLIC_URL + \"/images/add.png\"} className=\"img-fluid\" style={{ width: \"1.8rem\" }} />\r\n                  </button>\r\n            </div>\r\n          </div>\r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 \">\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start\">\r\n                <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Amount Recieved</label>\r\n                  <div className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0 bg-pearl\"> {paymentmethods && paymentmethods.length > 0 ? \"₹\" + Total_Amount() : \"₹\" + 0} </div>\r\n                </div>\r\n                <div className=\"col-3 align-self-end text-start fw-bolder text-charcoal text-wrap text-start \">\r\n                 Extra Amount\r\n                 <div className=\"toolTip\">\r\n                 {\r\n                  Return_Amount() > 0 ?(\r\n                    <img src={process.env.PUBLIC_URL+'/images/info.png'} className=\"p-0 m-0 ms-2 img-fluid toolTip\" style={{width:'1rem'}}/>\r\n                  ):(<></>)\r\n                 }\r\n                <span className=\"tooltiptext\">Click to save it as Advance Payment</span>\r\n              </div>\r\n      \r\n                <div className=\"form-control rounded-1 fs-6 text-success text-start border-0 fw-bolder p-0 bg-pearl\">{Return_Amount() > 0 ? `+ ₹${Return_Amount()}` : \"₹\"+0} </div>\r\n                  </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                  <button className=\"button button-charcoal\" onClick={()=>{confirmmessage();}}> Bill & Prescription </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={`stage4 d-${stage4} scroll`}>\r\n        <div className=\"container px-3\">\r\n        <h5 className=\"text-charcoal fw-bold mb-3\">Bill & Prescription</h5>\r\n          <button className=\"button button-charcoal\" onClick={()=>{togglecamera()}}>Scan Prescription</button>\r\n          {/* <div className=\"row d-none mt-2 p-0 m-0 justify-content-start align-items-center\">\r\n          <div className={`d-${videoconstraint} p-0 position-absolute top-0 start-0`} style={{zIndex:'10'}} >\r\n            <div className=\"btn-close position-absolute top-0 end-0 \" style={{zIndex:'11'}} onClick={()=>{togglecamera()}}></div>\r\n            <div className=\"position-relative bg-pearl d-flex justify-content-center\">\r\n            <Webcam audio={false} ref={webcamRef} screenshotFormat=\"image/jpeg\" mirrored={false} videoConstraints={videoConstraints} />\r\n            <img className=\"img-fluid position-absolute start-0 end-0 mx-auto bottom-0 mb-5\" onClick={()=>{capture()}} style={{width:'4rem'}} src={process.env.PUBLIC_URL + '/images/camera_click.png'}/>\r\n            <div className=\"position-absolute bottom-0 justify-content-center \" >\r\n        <button className=\"border-0 justify-content-start cameraroll bg-transparent p-0 m-0 \"onClick={()=>{toggleGallery()}}>\r\n            {\r\n                imgroll=='none'?(   \r\n                    <img src={process.env.PUBLIC_URL+'/images/gallery.png'} className=\"img-fluid bg-charcoal75 px-2 py-1 rounded-top mb-1\" style={{width:'2rem'}}/>\r\n                ):(\r\n                    <img src={process.env.PUBLIC_URL+'/images/bottom.png'} className=\"img-fluid bg-seashell px-2 py-1 rounded-top mb-1\"/>\r\n                )\r\n            }\r\n          </button>\r\n        <div className={`container cameraroll scroll bg-charcoal25 ms-2 mb-2 d-${imgroll}`}style={{flexDirection:'horizontal',minHeight:'fit-content'}}> \r\n            {\r\n                imagearr? imagearr.map((data,i)=>(\r\n                    <img src={data} className=\"img-fluid\" onClick={()=>{toggleedit();seteditindex(i);onSelectFile()}} style={{width:'5rem'}}/>\r\n\r\n                )):''\r\n            }\r\n            </div>\r\n        </div>\r\n        <button className=\" border-0 cameraroll bg-transparent p-0 m-0 position-absolute bottom-0 end-0\" onClick={()=>{flip=='user'?setflip('environment'):setflip('user')}}><img src={process.env.PUBLIC_URL+'/images/flip.png'} className=\"img-fluid bg-charcoal75 px-2 py-1 rounded-top mb-1\" style={{width:'1.8rem'}}/></button>\r\n      </div>\r\n\r\n      {\r\n        webcamRef.current ? (\r\n          <div className={`d-${editor} container position-absolute bg-pearl mx-auto start-0 top-0 end-0 rounded-2 shadow-sm`} style={{zIndex:'15',left:'0vh',top:'0'}}>\r\n          <button className=\"position-absolute end-0 bg-seashell50 p-2 btn-close\" style={{zIndex:'18'}} onClick={()=>{toggleedit()}}></button>\r\n        <div className=\"mt-0 position-absolute start-0 end-0 mx-auto\">\r\n          <ReactCrop crop={crop} onChange={(c) => setCrop(c)} onComplete={(c) => setCompletedCrop(c)} >\r\n            <img src={src} className=\"img-fluid\" style={{height:`${webcamRef.current.video.videoHeight}px`,width:`${webcamRef.current.video.videoWidth}px`}}/>\r\n          </ReactCrop>\r\n      </div>    \r\n             \r\n      </div>\r\n        ):(\r\n          <></>\r\n        )\r\n      }\r\n\r\n\r\n  </div>\r\n        {completedCrop && (\r\n        <div className=\"position-absolute top-0 mt-4 ms-2\" style={{zIndex:'15'}}>\r\n          <button className=\"btn text-light border border-light\" onClick={() => makeClientCrop(completedCrop)}>Save</button>\r\n        </div>\r\n      )}\r\n      {\r\n      image ?(\r\n        <div><img src={image} className=\"img-fluid\" style={{width:crop.width,height:crop.height}}/></div>\r\n      ):(<></>)\r\n      }\r\n\r\n         \r\n          <h6 className=\"fw-bold text-charcoal75 ps-0 ms-0\">Generate Bill & Prescription</h6>\r\n            <div className=\"col-auto ps-0 ms-0\">\r\n            <button className=\"button button-charcoal px-4\" onClick={()=>{Generate_Bill(props.appointmentid)}}>Bill</button>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n            <div className='vr rounded-1 align-self-center' style={{ padding: '0.8px' }}></div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n            <button className=\"button button-charcoal\" onClick={()=>{Generate_Prescription(props.appointmentid)}}>Prescription</button>\r\n            </div>\r\n          </div> */}\r\n                    <h6 className=\"fw-bold text-charcoal75 ps-0 ms-0\">Generate Bill & Prescription</h6>\r\n            <div className=\"col-auto ps-0 ms-0\">\r\n            <button className=\"button button-charcoal px-4\" onClick={()=>{Generate_Bill(props.appointmentid)}}>Bill</button>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n            <div className='vr rounded-1 align-self-center' style={{ padding: '0.8px' }}></div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n            <button className=\"button button-charcoal\" onClick={()=>{Generate_Prescription(props.appointmentid)}}>Prescription</button>\r\n            </div>\r\n          <div className=\"row p-0 m-0 mt-4\">\r\n            <h6 className=\"fw-bold text-charcoal75 ms-0 ps-0\">Send Bill and Prescription</h6>\r\n            <div className=\"row ps-0 ms-0\">\r\n              <div className=\"col-12 ms-0 ps-0 mt-2\">\r\n                <div className=\"row ps-0 ms-0\">\r\n                <h6 className=\"ms-0 ps-0 text-charcoal fw-bold\">On WhatsApp <span className=\"ms-2 text-success\">{props.Data.whatsapp_sent==1?'(Already Sent on Whats App)':''}</span></h6>\r\n                  <div className=\"col-6 ms-0 ps-0\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{Send_On_WhatsApp(props.appointmentid, props.Data.patient.phone_number, 0)}}><img src={process.env.PUBLIC_URL+'/images/whatsapp.png'} className=\"img-fluid\" style={{width:'1.5rem'}}/>Bill</button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{Send_On_WhatsApp(props.appointmentid, props.Data.patient.phone_number, 1)}}><img src={process.env.PUBLIC_URL+'/images/whatsapp.png'} className=\"img-fluid\" style={{width:'1.5rem'}}/>Bill with Prescription</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 ms-0 ps-0 mt-2\">\r\n              <div className=\"row ps-0 ms-0\">\r\n                <h6 className=\"ms-0 ps-0 text-charcoal fw-bold\">On SMS</h6>\r\n                  <div className=\"col-6 ms-0 ps-0\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{Send_On_SMS(props.appointmentid, props.Data.patient.phone_number, 0)}}><img src={process.env.PUBLIC_URL+'/images/message.png'} className=\"img-fluid\" style={{width:'1.2rem'}}/>Bill</button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                  <button className=\"btn border-0 p-0 m-0 fw-bold\" onClick={()=>{ Send_On_SMS(props.appointmentid, props.Data.patient.phone_number, 1)}}><img src={process.env.PUBLIC_URL+'/images/message.png'} className=\"img-fluid\" style={{width:'1.2rem'}}/>Bill with Prescription</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      <div className=\"w-100 position-absolute bottom-0 bg-pearl py-2 bottom_bar\">\r\n      {\r\n      load ? (\r\n              <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row p-0 m-0 text-center align-items-center mt-1 justify-content-between \">\r\n                <div className=\"col-4 align-self-end text-start\">\r\n                  <label className=\" fw-bolder text-charcoal text-wrap text-start\"> Grand Total </label>\r\n                  <input className=\"form-control rounded-1 fs-6 text-burntumber text-start border-0 fw-bolder p-0  bg-pearl\" value={\"₹\" + Get_Grand_Total()} />\r\n                </div>\r\n                {/* <div className=\"col-6 d-flex justify-content-end\">\r\n                  <button className=\"button button-pearl\" onClick={AddtoCart}>\r\n                    Add to Cart\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"col-sm-auto col-2 d-flex justify-content-start ps-2\">\r\n                  <button className=\"button button-charcoal \" onClick={()=>{props.setsingleload(0);props.Appointmentlist();props.CloseBillForm()}} > Done </button>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n  </div >\r\n  </>\r\n  );\r\n};\r\n\r\nexport { Bill };\r\n","import { URL, TodayDate, DoctorsList, Clinic, Permissions } from '../../index';\r\nimport { customconfirm } from '../features/notiflix/customconfirm';\r\nimport React, { useState, useRef, useContext, useEffect } from 'react'\r\nimport Notiflix from 'notiflix'\r\nimport axios from 'axios'\r\n\r\n\r\nconst AddConsumables = (props) => {\r\n    const tableref = useRef(null)\r\n    const cliniclist = useContext(Clinic)\r\n    const url = useContext(URL)\r\n    const Doclist = useContext(DoctorsList)\r\n    const clinicID = localStorage.getItem('ClinicId')\r\n    const medicinesref = useRef(null)\r\n    const medbyidref = useRef(null);\r\n    const patientaddref = useRef(null)\r\n    const stockref = useRef(null)\r\n    const [searchinput, setsearchinput] = useState()\r\n    const [doctorid, setdoctorid] = useState()\r\n    const [doctorname, setdoctorname] = useState()\r\n    const [otherdoctor, setotherdoctor] = useState()\r\n    const [clinicid, setclinicid] = useState(clinicID)\r\n    const [ischecked, setischecked] = useState()\r\n    const [Dc, setDc] = useState(0)\r\n    const [AtC, setAtC] = useState(0)\r\n    const [load, setload] = useState()\r\n    const [searchload, setsearchload] = useState(false)\r\n    const [products, setproducts] = useState([])\r\n    const [itemsearch, setitemsearch] = useState([])\r\n    const [itembyid, setitembyid] = useState([])\r\n    const [loadbyId, setloadbyId] = useState()\r\n    const [itemname, setitemname] = useState()\r\n    const [itemid, setitemid] = useState()\r\n    const [SelectedProducts, setSelectedProducts] = useState([])\r\n    const [Grandtotal, setGrandtotal] = useState()\r\n    const [Grandtotal2, setGrandtotal2] = useState()\r\n    const [loadsearch, setloadsearch] = useState()\r\n    const [ce, setce] = useState('none')\r\n    const [nursenotes, setnursenotes] = useState(props.appointmentdata.nursing_notes ? props.appointmentdata.nursing_notes : '')\r\n    const [deleteload, setdeleteload] = useState(false)\r\n    const [loadnotes, setloadnotes] = useState(false)\r\n    const [i, seti] = useState()\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\")\r\n            return date\r\n        }\r\n\r\n    }\r\n    const searchmeds = async (search) => {\r\n        setloadsearch(true)\r\n        try {\r\n            await axios.get(`${url}/stock/list?search=${search}`).then((response) => {\r\n                let medicines = []\r\n                let vaccines = []\r\n                let items = []\r\n                medicines.push(response.data.data.medicines ? response.data.data.medicines : [])\r\n                vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : [])\r\n                items = medicines.concat(vaccines)\r\n                items = items.flat()\r\n                setitemsearch(items)\r\n                setloadsearch(false)\r\n                if (search.length > 1) {\r\n                    medicinesref.current.style.display = 'block';\r\n                } else {\r\n                    medicinesref.current.style.display = 'none';\r\n                }\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const searchmedbyId = async (search) => {\r\n        if (search.length > 0) {\r\n            setloadbyId(true)\r\n            try {\r\n                await axios.get(`${url}/sale/item/search/by/id?item=${search}`).then((response) => {\r\n                    setloadbyId(false)\r\n                    setitembyid([response.data.data])\r\n                })\r\n            } catch (e) {\r\n                setloadbyId(false)\r\n                Notiflix.Notify.failure(e.message)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Doclist.map((data) => (\r\n            data[0] == doctorid ? setdoctorname(data[1]) : ''\r\n        ))\r\n    }, [doctorid])\r\n    function CalSellingCost(mrp, disc) {\r\n        let cost = mrp\r\n        if (!disc) {\r\n            cost = Number(mrp)\r\n            return cost\r\n        } else {\r\n            cost = Number(mrp) - ((Number(mrp) * Number(disc)) / 100)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n    }\r\n    function CalTotalAmount(qty, cst, realcst) {\r\n        let cost = cst\r\n        if (Number(realcst) > Number(cost)) {\r\n            Notiflix.Notify.failure('Selling Cost should not less than Cost')\r\n        }\r\n        if (!qty) {\r\n            return 0\r\n        } else if (qty == 1) {\r\n            cst = Number(cst)\r\n            return cst\r\n        } else {\r\n            cost = Number(cst) * Number(qty)\r\n            cost = cost.toFixed(2)\r\n            return cost\r\n        }\r\n\r\n    }\r\n    function CalGrandttl() {\r\n        let ttl = 0\r\n        SelectedProducts.map((data) => (\r\n            ttl += Number(data.totalamt)\r\n        ))\r\n        setGrandtotal(ttl.toFixed(2))\r\n    }\r\n    function CalGrandttl2() {\r\n        let ttl = 0\r\n        props.existedconsumables.map((data) => (\r\n            ttl += Number(data.total_amount)\r\n        ))\r\n        setGrandtotal2(ttl.toFixed(2))\r\n    }\r\n    function CaltotalDiscount(data) {\r\n        let total = 0\r\n        if (data) {\r\n            data.forEach(item => {\r\n                total += Number(item.discount)\r\n            })\r\n            return total\r\n        } else {\r\n            return total\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        CalGrandttl()\r\n    }, [SelectedProducts])\r\n    useEffect(() => {\r\n        CalGrandttl2()\r\n    }, [props.existedconsumables])\r\n    // useEffect(() => {\r\n    //     setnursenotes()\r\n    // }, [])\r\n    function AddProducts(data) {\r\n        let T = ''\r\n        if (data.vaccine_brand_id) {\r\n            T = 'v'\r\n        } else {\r\n            T = 'm'\r\n        }\r\n        let ProductDetails = {\r\n            productid: data.id,\r\n            type: data.type ? data.type : T,\r\n            product: data.item_name ? data.item_name : itemname,\r\n            batch: data.batch_no,\r\n            expiry: data.expiry_date,\r\n            quantity: data.current_stock,\r\n            qtytoSale: 1,\r\n            discount: 0,\r\n            cost: data.cost,\r\n            mainmrp: data.mrp,\r\n            disccost: data.mrp,\r\n            gst: Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate),\r\n            totalamt: data.mrp\r\n\r\n        }\r\n\r\n        if (SelectedProducts && SelectedProducts.length == 0) {\r\n            setSelectedProducts([ProductDetails])\r\n        } else {\r\n            setSelectedProducts(prevState => [...prevState, ProductDetails])\r\n        }\r\n\r\n    }\r\n    async function DeleteProduct(Batch) {\r\n        let obj = []\r\n        obj.push(SelectedProducts.filter(function (e) {\r\n            return e.batch !== Batch\r\n        }))\r\n        obj = obj.flat()\r\n        setSelectedProducts(obj)\r\n    }\r\n    async function SubmitConsumabaleEntry() {\r\n        let productids = [];\r\n        let proquantity = [];\r\n        let Discount = [];\r\n        let discountonmrp = [];\r\n        let mrp = [];\r\n        let GST = [];\r\n        let Totalamount = []\r\n\r\n        for (let i = 0; i < SelectedProducts.length; i++) {\r\n            productids.push(SelectedProducts[i].type + SelectedProducts[i].productid)\r\n            proquantity.push(SelectedProducts[i].qtytoSale)\r\n            Discount.push(SelectedProducts[i].discount)\r\n            discountonmrp.push(SelectedProducts[i].disccost)\r\n            mrp.push(SelectedProducts[i].mainmrp)\r\n            GST.push(SelectedProducts[i].gst)\r\n            Totalamount.push(SelectedProducts[i].totalamt)\r\n        }\r\n        let Data = {\r\n            pro_id: productids,\r\n            qty: proquantity,\r\n            discount: Discount,\r\n            disc_mrp: discountonmrp,\r\n            main_mrp: mrp,\r\n            gst: GST,\r\n            total_amount: Totalamount,\r\n            appointment_id: props.appointmentid,\r\n        }\r\n        setload(true)\r\n        try {\r\n            await axios.post(`${url}/save/consumable`, Data).then((response) => {\r\n                setload(false)\r\n                if (response.data.status == true) {\r\n                    NurseNotes()\r\n                    Notiflix.Notify.success(response.data.message)\r\n                    props.Appointmentlist()\r\n                    setSelectedProducts([])\r\n                } else {\r\n                    Notiflix.Notify.warning(response.data.message)\r\n                }\r\n            }).catch(function error(e) {\r\n                Notiflix.Notify.failure(e.message)\r\n                setload(false)\r\n            })\r\n        } catch (e) {\r\n            Notiflix.Notify.failure(e.message)\r\n            setload(false)\r\n        }\r\n    }\r\n    function confirmmessage() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to add total ${SelectedProducts.length} Sale ${SelectedProducts.length <= 1 ? 'entry' : 'entries'}  `,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                SubmitConsumabaleEntry()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    function confirmmessage2() {\r\n        customconfirm()\r\n        Notiflix.Confirm.show(\r\n            `Save Sale Entry`,\r\n            `Do you surely want to save the following Note`,\r\n            'Yes',\r\n            'No',\r\n            () => {\r\n                NurseNotes()\r\n            },\r\n            () => {\r\n                return 0\r\n            },\r\n            {\r\n            },\r\n        );\r\n    }\r\n    const toggle_consumables_existed = () => {\r\n        if (ce === 'none') {\r\n            setce('block')\r\n        }\r\n        if (ce === 'block') {\r\n        }\r\n    }\r\n    const NurseNotes = async () => {\r\n        try {\r\n            setloadnotes(true)\r\n            await axios.post(`${url}/save/nursing/notes`, {\r\n                appointment_id: props.appointmentid,\r\n                notes: nursenotes\r\n            }).then((response) => {\r\n                Notiflix.Notify.success(response.data.message)\r\n                props.Appointmentlist()\r\n                setloadnotes(false)\r\n            })\r\n        } catch (e) {\r\n            setloadnotes(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    const RemoveConsumable = async (ID) => {\r\n        setdeleteload(true)\r\n        try {\r\n            await axios.post(`${url}/remove/consumable`, {\r\n                id: ID\r\n            }).then((response) => {\r\n                setdeleteload(false)\r\n                props.Appointmentlist()\r\n                Notiflix.Notify.success(response.data.message)\r\n            })\r\n        } catch (e) {\r\n            setdeleteload(false)\r\n            Notiflix.Notify.warning(e.data.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid bg-seashell rounded-2 position-relative mx-auto col-lg-11 col-md-11 col-sm-11 col-11 col-xl-9\" style-={{ height: '70vh' }}>\r\n            <div className='position-relative mb-3 pt-2'>\r\n                <h5 className='text-start text-charcoal fw-bold '>{props.patientname} Consumables</h5>\r\n                <button className='btn btn-close position-absolute p-1 m-0 end-0 top-0 me-2 pt-4' disabled={load ? true : false} onClick={props.toggleConsumables}></button>\r\n            </div>\r\n\r\n            <div className={`container-fluid text-start p-0 m-0 mt-3`}>\r\n                <div className=\"col-12 justify-content-center\">\r\n                    <div className=\"row p-0 m-0 my-2 justify-content-start\">\r\n                        <div className=\"col-4 position-relative\">\r\n                            <input className='form-control bg-seashell fw-bold p-2 border-charcoal' placeholder='Search by Name'\r\n                                value={itemname ? itemname : ''}\r\n                                onChange={(e) => {\r\n                                    searchmeds(e.target.value);\r\n                                    setitemname(e.target.value);\r\n                                    setitemid();\r\n                                    setproducts();\r\n                                    stockref.current.style.dispzzzlay = 'none'\r\n                                }} />\r\n                            <div className=\"position-absolute mt-1 bg-raffia\">\r\n                                <div className=\"position-relative \" style={{ width: '30vh' }}>\r\n                                    <div ref={medicinesref} className='position-absolute scroll scroll-y rounded-1 ' style={{ Width: 'max-content', zIndex: '1', maxHeight: '40vh' }} >\r\n                                        {\r\n                                            itemsearch ? (\r\n                                                loadsearch ? (\r\n                                                    <div className='rounded-1 p-1 bg-pearl'>\r\n                                                        Searching Please wait....\r\n                                                        <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                            <span className=\"sr-only\"> </span> </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    loadsearch == false && itemsearch.length == 0 ? (\r\n                                                        <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                                    ) : (\r\n                                                        <div className={`rounded-1 border border-1 bg-pearl p-1 d-${itemsearch && itemsearch.length > 0 ? 'block' : 'none'}`}>\r\n                                                            <p className={`text-start m-1 fw-bold text-charcoal75 ms-1`} style={{ fontSize: '0.8rem' }}>{itemsearch.length} Search Results</p>\r\n                                                            {\r\n                                                                itemsearch.map((data, i) => (\r\n                                                                    <div style={{ cursor: 'pointer', Width: '10rem' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} p-1 py-3 fw-bold border-bottom text-charcoal `}\r\n                                                                        onClick={(e) => { setproducts(data); setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); stockref.current.style.display = 'block' }}>{data.display_name ? data.display_name : data.name}<span className='text-burntumber fw-bold rounded-2 px-1'>{data && data.stock_info !== undefined ? data.stock_info.length : \"\"} stocks</span></div>\r\n                                                                ))\r\n                                                            }\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                            ) : (<div className='bg-seashell'></div>)\r\n                                        }\r\n                                    </div>\r\n                                    <div ref={stockref} className={`position-absolute start-100 bg-pearl px-3 scroll scroll-y align-self-center rounded-1 border border-1 p-1 d-${products && products.stock_info && products.stock_info !== undefined ? 'block' : 'none'}`} style={{ marginTop: '0rem', zIndex: '2', 'width': '22vh', 'min-width': '30vh', 'height': '40vh' }}>\r\n                                        <p className={`text-start m-1 fw-bold text-charcoal75`} style={{ fontSize: '0.8rem' }}>{products && products.stock_info !== undefined ? products.stock_info.length : ''} Batch Stocks</p>\r\n                                        {\r\n                                            products && products.length !== 0 ? (\r\n                                                products && products.stock_info.length == 0 ? (\r\n                                                    <div className='text-white bg-burntumber p-2'>Oops ! Not Available</div>\r\n                                                ) : (\r\n                                                    products.stock_info.map((data, i) => (\r\n                                                        <div style={{ cursor: 'pointer', marginTop: '2%' }} className={`bg-${((i % 2) == 0) ? 'pearl' : 'seashell'} border-bottom p-2`}\r\n                                                            onClick={\r\n                                                                () => {\r\n                                                                    AddProducts(data);\r\n                                                                    setitemname();\r\n                                                                    setitemid();\r\n                                                                    setproducts();\r\n                                                                    setitemsearch()\r\n                                                                }}>\r\n                                                            <h6 className='text-start m-0 p-0 fw-bold text-wrap'>{itemname}</h6>\r\n                                                            <p className='p-0 m-0 px-1'>BatchNo. - <span className='fw-bold'>{data.batch_no && data.batch_no !== null ? data.batch_no : ''}</span></p>\r\n                                                            <p className='p-0 m-0 px-1'>Stock - <span className='fw-bold'>{data.current_stock && data.current_stock ? data.current_stock : ''}</span></p>\r\n                                                            <p className='p-0 m-0 px-1'>Expiry Date - <span className='fw-bold'>{data.expiry_date ? reversefunction(data.expiry_date) : ''}</span></p>\r\n                                                        </div>\r\n                                                    ))\r\n                                                )\r\n\r\n\r\n                                            ) : (\r\n                                                <div className=\"bg-seashell p-2\">Not Avaliable</div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-auto text-burntumber text-center fw-bold align-self-center'> OR </div>\r\n                        <div className=\"col-4 \">\r\n                            <input className='form-control bg-seashell border border-1 rounded-2 text-charcoal p-2 fw-bold border-charcoal' value={itemid ? itemid : ''} placeholder='Search by ID' onChange={(e) => { searchmedbyId(e.target.value); setitemid(e.target.value); medbyidref.current.style.display = 'block' }} />\r\n                            <div ref={medbyidref} className='position-absolute rounded-1 mt-1' style={{ Width: 'max-content', zIndex: '2' }} >\r\n                                {\r\n                                    itembyid ? (\r\n                                        loadbyId ? (\r\n                                            <div className='rounded-1 p-1 bg-pearl'>\r\n                                                Searching Please wait....\r\n                                                <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                    <span className=\"sr-only\"> </span> </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            loadbyId == false && itembyid.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1\">Oops! Not Avaliable</div>\r\n                                            ) : (\r\n                                                itembyid.map((data, i) => (\r\n                                                    <div style={{ cursor: 'pointer', Width: 'max-content' }} className={`p-0 p-1 rounded-pill shadow bg-${((i % 2) == 0) ? 'pearl' : 'seashell'}`}\r\n                                                        onClick={(e) => {\r\n                                                            setitemid(data.type + data.id);\r\n                                                            AddProducts(data)\r\n                                                            medbyidref.current.style.display = 'none';\r\n                                                        }}>{data.item_name ? data.item_name : ''}</div>\r\n                                                ))\r\n                                            )\r\n                                        )\r\n                                    ) : (<div className='bg-seashell'></div>)\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 m-0 p-0\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    </div>\r\n                    <div className='scroll scroll-y' style={{ height: '40vh' }}>\r\n                        <table className='table'>\r\n                            <thead className=' bg-seashell position-sticky top-0'>\r\n                                <tr className={``}>\r\n                                    <th className=''>Item ID</th>\r\n                                    <th className=''>Item Name</th>\r\n                                    <th className=''>BatchNo.</th>\r\n                                    <th className=''>Expiry Date</th>\r\n                                    <th className=''>Avl.Stock</th>\r\n                                    <th className=''>Qty To Sale</th>\r\n                                    <th className=''>Discount %</th>\r\n                                    <th className=''>MRP</th>\r\n                                    <th className=''>Cost</th>\r\n                                    <th className=''>GST Rate</th>\r\n                                    <th className=''>Selling Cost/Unit</th>\r\n                                    <th className=''>Total Amount</th>\r\n                                    <th className=''>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {\r\n                                SelectedProducts && SelectedProducts.length !== 0 ? (\r\n                                    <tbody className='p-0 m-0 bg-pearl'>\r\n                                        {\r\n                                            SelectedProducts.map((data) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>{data.type}{data.productid}</td>\r\n                                                    <td>{data.product}</td>\r\n                                                    <td>{data.batch}</td>\r\n                                                    <td>{reversefunction(data.expiry)}</td>\r\n                                                    <td>{data.quantity}</td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.qtytoSale ? data.qtytoSale : ''}\r\n                                                            onChange={(e) => {\r\n                                                                e.target.value <= data.quantity ? data.qtytoSale = e.target.value : Notiflix.Notify.failure(\"Quantity Cannot be Greater then Current Stock Available\");\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, data.disccost);\r\n                                                                setSelectedProducts(prevState => [...prevState])\r\n                                                            }} /> </td>\r\n\r\n                                                    <td>\r\n                                                        <input className='border border-1 rounded-1 w-50 py-1 p-0 text-center bg-seashell'\r\n                                                            value={data.discount ? data.discount : ''}\r\n                                                            onChange={(e) => {\r\n                                                                data.discount = e.target.value;\r\n                                                                data.disccost = CalSellingCost(data.mainmrp, e.target.value);\r\n                                                                data.totalamt = CalTotalAmount(data.qtytoSale, Number(data.disccost), Number(data.cost))\r\n                                                                setSelectedProducts(prevState => [...prevState]);\r\n                                                            }} /> </td>\r\n                                                    <td>₹{data.mainmrp}</td>\r\n                                                    <td>₹{data.cost}</td>\r\n                                                    <td>{data.gst + '%'}</td>\r\n                                                    <td>₹{data.disccost}</td>\r\n                                                    <td>₹{data.totalamt}</td>\r\n                                                    <td><img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { DeleteProduct(data.batch) }} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                ) : (\r\n                                    props.existedconsumables && props.existedconsumables.length == 0?(\r\n                                        <tbody className='p-0 m-0 bg-seashell'>\r\n                                        <tr className='p-0 m-0 text-center'>\r\n                                            <td className='position-absolute text-charcoal75 fw-bold start-0 end-0'>No Consumabels Added</td>\r\n                                        </tr>\r\n\r\n\r\n                                    </tbody>\r\n                                    ):(<></>)\r\n\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                props.existedconsumables && props.existedconsumables.length == 0 ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <tbody className='position-relative bg-seashell'>\r\n                                        {\r\n                                            props.existedconsumables.map((data, key) => (\r\n                                                <tr className={`align-middle bg-${Number(data.disccost) < Number(data.cost) ? 'lightred50' : ''}`}>\r\n                                                    <td>m{data.medicies_stocks_id}</td>\r\n                                                    <td>{data.medicine.display_name}</td>\r\n                                                    <td>{data.medicine_stocks.batch_no}</td>\r\n                                                    <td>{reversefunction(data.medicine_stocks.expiry_date)}</td>\r\n                                                    <td></td>\r\n                                                    <td>{data.qty}</td>\r\n                                                    <td className='text-start p-0 m-0 ps-4'>{data.discount} </td>\r\n                                                    <td>₹{data.main_mrp}</td>\r\n                                                    <td>₹{data.medicine_stocks.cost}</td>\r\n                                                    <td>{Number(data.CGST_rate) + Number(data.SGST_rate) + Number(data.IGST_rate) + \"%\"}</td>\r\n                                                    <td>₹{data.disc_mrp}</td>\r\n                                                    <td>₹{data.total_amount}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            deleteload && i == key ? (\r\n                                                                <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                                                            ) : (\r\n                                                                <img src={process.env.PUBLIC_URL + 'images/delete.png'} className='img-fluid' onClick={() => { seti(key); RemoveConsumable(data.id) }} />\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                )\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{ height: '30vh', paddingBottom: '10vh' }}>\r\n                    <h6 className='fw-bold p-0 m-0 ps-0 ms-0 my-2'>Nurse notes</h6>\r\n                    {\r\n                        loadnotes ? (\r\n                            <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                <div class=\"spinner-border\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <textarea className='col-12 form-control w-100' value={nursenotes ? nursenotes : ''} onChange={(e) => setnursenotes(e.target.value)} style={{ width: '95vh', height: '10vh' }}></textarea>\r\n\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className='col-12 position-absolute start-0 end-0 bottom-0 py-3 border border-1 text-start bg-pearl align-items-center rounded-bottom'>\r\n                <div className=\"row p-0 m-0 align-items-center justify-content-between\">\r\n                    <div className=\"col-6 col-md-4\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Order Total </p>\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>₹{Grandtotal2}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+₹{Grandtotal}</p>\r\n                                        </>\r\n\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1 ps-3' />\r\n                                <h6 className='text-charcoal fw-bolder card-header text-start ms-2'>₹{(Number(Grandtotal) + Number(Grandtotal2)).toFixed(2)}</h6>\r\n                            </div>\r\n                            {/* <div className=\"col-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start ms-3'> Discount %</p>\r\n                                <h4 className='text-charcoal  fw-bolder card-header text-start ps-3'>{CaltotalDiscount(SelectedProducts)}</h4>\r\n                            </div> */}\r\n                            <div className=\"col-5 ms-3\">\r\n                                <p className='text-charcoal75 fw-bolder card-title text-start'> Total Items</p>\r\n\r\n                                {\r\n                                    SelectedProducts && SelectedProducts.length != 0 ? (\r\n                                        <>\r\n                                            <p className='text-charcoal fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length ? props.existedconsumables.length : 0}</p>\r\n                                            <p className='text-success fw-bolder card-header text-start'>+{SelectedProducts && SelectedProducts.length ? SelectedProducts.length : 0}</p>\r\n                                        </>\r\n                                    ) : (<></>)\r\n                                }\r\n                                <hr className='p-0 m-0 py-1 mt-1' />\r\n                                <h6 className='text-charcoal  fw-bolder card-header text-start ms-2'>{props.existedconsumables && props.existedconsumables.length || SelectedProducts && SelectedProducts.length ? SelectedProducts.length + props.existedconsumables.length : 0}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-8\">\r\n                        <div className=\"row p-0 m-0 justify-content-end \">\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    loadnotes ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-seashell px-5 me-2' onClick={() => { confirmmessage2() }}>Save Notes</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-auto p-0 m-0 align-self-center\">\r\n                                {\r\n                                    load ? (\r\n                                        <div className=\"col-6 py-2 pb-2 me-3 m-auto text-start\">\r\n                                            <div class=\"spinner-border\" role=\"status\">\r\n                                                <span class=\"visually-hidden\">Loading...</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button className='button button-charcoal px-5 me-2' onClick={() => { confirmmessage() }}>Save All</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport { AddConsumables }","import React, { createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport AmountPaid from './AmountPaid';\r\nimport { URL, TodayDate, Clinic, Permissions } from '../../index'\r\nimport Notiflix from 'notiflix';\r\nimport { customconfirm } from \"../features/notiflix/customconfirm\";\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport { UpdateAppointment } from './UpdateAppointment'\r\nimport '../../css/dashboard.css'\r\nimport { SelectedTimeAppointment } from '../Appointments/SelectedTimeAppointment'\r\nimport { AddSelectedDoctorSlot } from './SelectedDoctorSlot'\r\nimport { Vitalsoperation } from \"./Vitals\";\r\nimport { Payments } from \"./Payments\";\r\nimport { Bill } from \"./Bill\";\r\nimport { AddConsumables } from \"./AddConsumables\";\r\nimport { SaleEntryForm } from '../pharmacy/pharmacy';\r\n\r\n\r\nfunction DoctorSchedule(props) { \r\n  //Global Variables\r\n  const url = useContext(URL)\r\n  const Date = useContext(TodayDate)\r\n  const permission = useContext(Permissions)\r\n  const adminid = localStorage.getItem('id')\r\n  const ClinicId = localStorage.getItem(\"ClinicId\");\r\n  //Use States\r\n  const [appointmentdata, setappointmentdata] = useState([]);\r\n  const [singleload, setsingleload] = useState(0)\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [tableindex, settableindex] = useState()\r\n  const [appointmentform, setappointmentform] = useState(\"none\");\r\n  const [addappointmentform, setaddappointmentform] = useState('none')\r\n  const [appointmentid, setappointmentid] = useState()\r\n  const [timeindex, settimeindex] = useState()\r\n  const [saleindex, setsaleindex] = useState()\r\n  const [consumablesindex, setconsumablesindex] = useState()\r\n  const [addquickslots, setaddquickslots] = useState('none')\r\n  const [vitalsform, setvitalsform] = useState('none')\r\n  const [consumables, setconsumables] = useState('none')\r\n  const [vitalindex, setvitalindex] = useState()\r\n  const [appointmentvitalslist, setappointmentvitalslist] = useState([])\r\n  const [loadvitals, setloadvitals] = useState()\r\n  const [billindex, setbillindex] = useState()\r\n  const [billform, setbillform] = useState('none')\r\n  const [paymentsindex, setpaymentsindex] = useState()\r\n  const [paymentsi, setpaymentsi] = useState()\r\n  const [paymentsform, setpaymentsform] = useState('none')\r\n  const [d_form, setd_form] = useState()\r\n  const [nsef, setnsef] = useState(\"none\");\r\n  // for UpdateAppointment\r\n  const closeappointmentform = () => {\r\n    if (appointmentform === \"block\") {\r\n      setappointmentform(\"none\");\r\n      settableindex()\r\n    }\r\n  };\r\n  const openapppointmentform = () => {\r\n    if (appointmentform === \"none\") {\r\n      setappointmentform(\"block\");\r\n      setd_form(true)\r\n    }\r\n  }\r\n\r\n  function ArraySum(arr) {\r\n    if (arr.length > 0) {\r\n      let sum = arr.reduce((accumulator, value) => {\r\n        return accumulator + value;\r\n      }, 0);\r\n      return sum;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  async function Appointmentlist() {\r\n    setisLoading(true);\r\n    Loading.dots('Getting Details', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    await axios.get(`${url}/appointment/list?clinic_id=${ClinicId}&doctor_id=${props.todayDoc[props._selected][0]}&from_date=${Date}&to_date=${Date}`).then((response) => {\r\n      setappointmentdata(response.data.data && response.data.data !=undefined ? response.data.data :[]);\r\n      // setappointmentdata([]);\r\n    })\r\n    setisLoading(false);\r\n    Loading.remove()\r\n    setsingleload(1)\r\n  }\r\n  useEffect(() => {\r\n    Appointmentlist();\r\n  }, [props._selected]);\r\n\r\n  function tConvert(time) {\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let array = [[1, 'Pending', 'lightred'], [2, 'Booked', 'lightblue'], [3, 'Cancelled', 'lightred'], [4, 'QR Generated', 'light'], [5, 'Checked_in', 'brandy'], [6, 'Vitals Done', 'lightred'], [7, 'In_apppointment', 'lightyellow'], [8, 'Payment done', 'lightgreen'], [9, 'Unattained', 'lightyellow'], [10, 'Completed', 'lightgreen']]\r\n  function status(number) {\r\n    let status\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (number == array[i][0]) {\r\n        status = array[i][1]\r\n        break;\r\n      }\r\n    }\r\n    return status\r\n  }\r\n  function status_color(number) {\r\n    let status_color;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (number == array[j][0]) {\r\n        status_color = array[j][2]\r\n        break;\r\n      }\r\n    }\r\n    return status_color\r\n  }\r\n  async function UpadteStatus(e) {\r\n    if (e.target.value && adminid && e.target.name) {\r\n      try {\r\n        Loading.circle('Upadating Appointment Status', {\r\n          backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n          svgColor: '#96351E',\r\n          messageColor: '#96351E',\r\n          messageFontSize: '1.5rem'\r\n        })\r\n        await axios.post(`${url}/appointment/change/status`, {\r\n          appointment_id: e.target.name,\r\n          status: e.target.value,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          Appointmentlist()\r\n          Loading.remove()\r\n          props.fetchapi()\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please try Again')\r\n    }\r\n  }\r\n  const openAddApppointmentform = () => {\r\n    setaddappointmentform('block')\r\n  }\r\n  const closeAddAppointmentform = () => {\r\n    setaddappointmentform('none')\r\n    settimeindex()\r\n  }\r\n  function OpenAddQuickSlots() {\r\n    if (addquickslots === 'none') {\r\n      setaddquickslots('block')\r\n    }\r\n  }\r\n  function CloseAddQuickSlots() {\r\n    if (addquickslots === 'block') {\r\n      setaddquickslots('none')\r\n    }\r\n  }\r\n\r\n  //Vitals Section\r\n  function OpenVitals() {\r\n    if (vitalsform === 'none') {\r\n      setvitalsform('block')\r\n    }\r\n  }\r\n  function CloseVitals() {\r\n    if (vitalsform === 'block') {\r\n      setvitalsform('none')\r\n      setvitalindex()\r\n    }\r\n  }\r\n\r\n  async function GetAppointmentVitals(id) {\r\n    setloadvitals(true)\r\n    await axios.get(`${url}/appointment/vitals/list?appointment_id=${id}`).then((response) => {\r\n      setappointmentvitalslist(response.data.data.vitals)\r\n      setloadvitals(false)\r\n    })\r\n  }\r\n  //Vitals Section \r\n\r\n  //Send Notification\r\n  async function SendNotifcation(name, id) {\r\n    Notiflix.Loading.dots('Sending', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.3rem'\r\n    })\r\n    try {\r\n      await axios.post(`${url}/appointment/call/in`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message.slice(0, -1) + ' to ' + name)\r\n        Notiflix.Loading.remove()\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Loading.remove()\r\n      Notiflix.Notify.warning(e.message)\r\n    }\r\n\r\n  }\r\n  const confirmmessage = (name, id) => {\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Call Patient `,\r\n      `Do you surely want to call ${name}`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        SendNotifcation(name, id)\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  //Send Notification\r\n\r\n  //Bill\r\n  function OpenBillForm() {\r\n    if (billform === 'none') {\r\n      setbillform('block')\r\n    }\r\n  }\r\n  function CloseBillForm() {\r\n    if (billform == 'block') {\r\n      setbillform('none')\r\n      setbillindex()\r\n    }\r\n  }\r\n  function OpenPaymentsForm() {\r\n    if (paymentsform === 'none') {\r\n      setpaymentsform('block')\r\n    }\r\n  }\r\n  function ClosePaymentsForm() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsindex()\r\n    }\r\n  }\r\n  function ClosePaymentsForm2() {\r\n    if (paymentsform === 'block') {\r\n      setpaymentsform('none')\r\n      setpaymentsi()\r\n    }\r\n  }\r\n  const Generate_Bill = async (id) => {\r\n    Notiflix.Loading.circle('Generating Bill', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/appointment/bill`, {\r\n        appointment_id: id,\r\n        admin_id: adminid\r\n      }).then((response) => {\r\n        \r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.bill_url, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Generate_Prescription = async (id) => {\r\n    Notiflix.Loading.circle('Generating Prescription', {\r\n      backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n      svgColor: '#96351E',\r\n      messageColor: '#96351E',\r\n      messageFontSize: '1.5rem'\r\n    })\r\n    try {\r\n      axios.post(`${url}/swift/pdf`, {\r\n        appointment_id: id,\r\n      }).then((response) => {\r\n        \r\n        Notiflix.Notify.success(response.data.message)\r\n        Notiflix.Loading.remove()\r\n        window.open(response.data.data.prescription_pdf, '_blank', 'noreferrer');\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      Notiflix.Loading.remove()\r\n    }\r\n  }\r\n  const Send_On_WhatsApp = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on WhatsApp')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on Whats App', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/whatsapp`, {\r\n          appointment_id: id,\r\n          check_pres: checkpres,\r\n          admin_id: adminid\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      // 'Cancel',\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_WhatsApp(id, phone, 0)\r\n      },\r\n      // () => {\r\n      //   return 0\r\n      // },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const Send_On_SMS = async (id, phone, check) => {\r\n    let checkpres = check\r\n    if (phone == undefined || phone == null) {\r\n      Notiflix.Notify.failure('Please Add a Phone Number to send the message on SMS')\r\n    } else {\r\n      Notiflix.Loading.circle('Sending Bill on SMS', {\r\n        backgroundColor: 'rgb(242, 242, 242,0.5)',\r\n        svgColor: '#96351E',\r\n        messageColor: '#96351E',\r\n        messageFontSize: '1.5rem'\r\n      })\r\n      try {\r\n        axios.post(`${url}/send/bill/sms`, {\r\n          appointment_id: id,\r\n          check_bill: 1,\r\n          check_pre: checkpres,\r\n        }).then((response) => {\r\n          \r\n          Notiflix.Notify.success(`${response.data.message}${checkpres == 1 ? ' with Prescription' : ' without Prescription'}`)\r\n          Notiflix.Loading.remove()\r\n        })\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n        Notiflix.Loading.remove()\r\n      }\r\n    }\r\n\r\n  }\r\n  const Confirm_For_Prescription2 = (id, phone) => {\r\n\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Choose Option to Send `,\r\n      `Do you want to send the Bill`,\r\n      'With the Prescription ?',\r\n      'Without the Prescription ?',\r\n      () => {\r\n        Send_On_SMS(id, phone, 1)\r\n      },\r\n      () => {\r\n        Send_On_SMS(id, phone, 0)\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n  const toggleConsumables = () => {\r\n    if (consumables === 'none') {\r\n      setconsumables('block')\r\n    }\r\n    if (consumables === 'block') {\r\n      setconsumables('none')\r\n      setconsumablesindex()\r\n    }\r\n\r\n  }\r\n  const toggle_nsef = () => {\r\n    if (nsef === 'none') {\r\n      setnsef('block')\r\n    }\r\n    if (nsef === 'block') {\r\n      setnsef('none')\r\n      setsaleindex()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section id=\"doctorscheduledata\">\r\n        <section className=\"timeslotsection\">\r\n          <div className=\"container-fluid p-0 m-0 ps-1 \">\r\n            <div className=\"row p-0 m-0\">\r\n              <div className=\" col-12 p-0 m-0 align-items-center\">\r\n                <div className=\"row align-items-center p-0 m-0 mt-3 mb-2 ms-0\">\r\n                  <div className=\"col-auto p-0 m-0\">\r\n                    <h6 className=\"p-0 m-0 text-charcoal fw-bolder text-start\">Time Slots Avaliable</h6>\r\n                  </div>\r\n                  <div className=\"col-2 ps-1\">\r\n                    <button className=\"btn m-0 p-0\">\r\n                      <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" onClick={OpenAddQuickSlots} />\r\n                    </button>\r\n                    <div className={`d-${addquickslots} rounded-1 quickdocslots bg-seashell shadow col-lg-6 col-md-8 col-sm-12 col-12 col-xl-4 position-absolute end-0 start-0 top-0 m-auto mt-3`} style={{ zIndex: '3010', minWidth: '10rem', maxWidth: '30rem' }}>\r\n                      <AddSelectedDoctorSlot CloseAddQuickSlots={CloseAddQuickSlots} fetchapi={props.fetchapi} DocClinic={props.DocClinic} DoctorID={props.DoctorID} DoctorName={props.DoctorName} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"scroll timeslots col-12 justify-content-around\">\r\n              {\r\n                props.todayDoc[props._selected][3].map((data, i) => (\r\n                  data[1] == 0 ? (\r\n                    <>\r\n                      <button className={`button-sm button-${timeindex == i ? 'charcoal' : 'charcoal-outline'} m-1 px-3 py-2 fw-bold rounded-1`} style={{ letterSpacing: '1px' }} onClick={(e) => { openAddApppointmentform(); settimeindex(i) }} key={i}>{tConvert(data[0])}</button>\r\n                      {\r\n                        timeindex == i ? (\r\n                          <>\r\n                            {/* \r\n                            <div className='backdrop'>\r\n                            </div> */}\r\n                            <div className={`d-${timeindex == i ? addappointmentform : 'none'} col-lg-8 col-md-10 col-sm-12 col-12 col-xl-6 shadow quickappointment position-absolute m-auto start-0 end-0 bg-seashell rounded-4 border border-1`} style={{ top: '-3.8rem' }}>\r\n                              <SelectedTimeAppointment fetchapi={props.fetchapi} closeAddAppointmentform={closeAddAppointmentform} DocClinic={props.DocClinic} timeindex={timeindex} selectedtime={data[0]} selectedtimeID={data[2]} />\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <></>\r\n                        )\r\n                      }\r\n\r\n                    </>\r\n                  ) : (\r\n                    <button disabled className=\" button-sm button-charcoal50-outline m-1 px-3 py-2 rounded-1 fw-bold\" key={i} style={{ letterSpacing: '1px' }}>{tConvert(data[0])}</button>\r\n                  )\r\n\r\n                ))\r\n\r\n              }\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"allappointmentsection p-0 m-0 ms-1\">\r\n          <div className=\"col-auto m-0 p-0 align-items-center\">\r\n            <h6 className=\"p-0 ms-1 text-charcoal fw-bolder mt-3 mb-2\">Appointments</h6>\r\n          </div>\r\n          <div className=\" scroll scroll-y align-content-center align-items-center\" style={{ minHeight: '50vh', maxHeight: '50vh', Height: '50h' }}>\r\n            <table className=\"table text-start\">\r\n              <thead className=\"p-0 m-0 px-2 bg-pearl\">\r\n                <tr className=\"p-0 m-0 position-sticky text-charcoal75 top-0\" style={{ fontSize: '0.75rem' }}>\r\n                  <th className=\"border-0 bg-pearl text-center\" key={0}>Update</th>\r\n                  <th className=\"border-0 bg-pearl text-start\" key={3}>Time</th>\r\n                  <th className=\"border-0 bg-pearl\" key={2}>Patient</th>\r\n                  <th className=\"border-0 bg-pearl text-start px-3\" key={1}>Status</th>\r\n                  <th className=\"border-0 bg-pearl\" key={4}> Amount</th>\r\n                  <th className=\"text-center border-0 bg-pearl\" key={6}>Vitals</th>\r\n                  <th className={`text-center border-0 bg-pearl d-${permission.appointment_charges_edit ? '' : 'none'}`} key={7}>Bill</th>\r\n                  <th className=\"border-0 bg-pearl text-center\" key={9}>Consumables</th>\r\n                  <th className=\"border-0 bg-pearl text-center\" key={9}>more</th>\r\n                </tr>\r\n              </thead>\r\n              {\r\n                singleload == 0 ? (\r\n                  <tbody className=\"scroll scroll-y\"  >\r\n                    <tr className=' position-relative text-burntumber fs-3 mt-1 text-center m-auto'>\r\n                      <td className=' position-absolute start-0 end-0 text-burntumber fs-3 mt-1 text-center'>\r\n\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>\r\n                    {\r\n                      appointmentdata && appointmentdata !==undefined && appointmentdata.length == 0 ? (\r\n                        <tr><button className=\"text-center position-absolute border-0 text-charcoal fw-bold px-5 start-0 end-0 mx-auto\">No Appointments Found</button></tr>\r\n                      ) : (\r\n                        appointmentdata.map((data, i) => (\r\n                          <tr className='align-middle'>\r\n                            <td className={`py-0 bg-${tableindex === i ? 'lightyellow' : ''}  text-center`}>\r\n                              <button className=\"btn m-0 p-0\" key={i} onClick={(e) => { openapppointmentform(); settableindex(i); setappointmentid(data.id) }}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} alt=\"displaying_image\" className=\"img-fluid\" key={i} />\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"py-0 text-start fw-bold\" style={{ letterSpacing: '1px' }}>{tConvert(data.timeslot.time_from)}</td>\r\n                            <td className=\"py-0 \">\r\n                              <div className=\"row p-0 m-0\" style={{ width: 'fit-content' }}>\r\n                                <div className=\"col-12 p-0 m-0 fw-bold align-self-end\">\r\n                                  {data.patient ? data.patient.full_name !== null ? data.patient.full_name : 'N/A' : 'N/A'}{data.patient != null && data.patient.is_profile_verified ==1 ? <img className=\"p-0 m-0 me-4 img-fluid\" src={process.env.PUBLIC_URL + 'images/verified.png'} style={{scale:'0.8'}}/>:'' }\r\n                                </div>\r\n                                <small className=\"col-auto p-0 m-0 text-burntumber fw-bold\" style={{ letterSpacing: '1px' }}>\r\n                                  {data.patient ? data.patient.phone_number != null ? data.patient.phone_number : 'N/A' : 'N/A'}\r\n                                </small>\r\n                              </div>\r\n                            </td>\r\n\r\n                            <td className=\" text-start pe-5\">\r\n                              <div className=\"row p-0 m-0 align-items-center\">\r\n                                <div className=\"col-1 p-0 m-0 me-2\">\r\n                                  <div className={`rounded-circle border-1 button-${status_color(data.appointment_status)} fontmain`} style={{ height: '12px', width: '12px' }}></div>\r\n                                </div>\r\n                                <div className=\"col-5 p-0 m-0\">\r\n                                  <select disabled={permission.appointment_edit == 1 ? false : true} className={`bg-transparent border-0 text-start fw-bold `} name={data.id} onChange={(e) => { UpadteStatus(e) }}>\r\n                                    <option className=\"fw-bold\" selected disabled>{status(data.appointment_status)}</option>\r\n                                    <option key={0} className=\"button-lightred\" value='1'>Pending</option>\r\n                                    <option key={1} className=\"button-lightblue\" value='2'>Booked</option>\r\n                                    <option key={2} className=\"button-lightred\" value='3'>Cancelled</option>\r\n                                    <option key={3} className=\"button-pearl\" value='4'>QR Generated</option>\r\n                                    <option key={4} className=\"button-brandy\" value='5'>Checked_in</option>\r\n                                    <option key={5} className=\"button-lightred\" value='6'>Vitals Done</option>\r\n                                    <option key={6} className=\"button-lightyellow\" value='7'>In_apppointment</option>\r\n                                    <option key={7} className=\"button-lightgreen\" value='8'>Payment done</option>\r\n                                    <option key={8} className=\"button-lightyellow\" value='9'>Unattained</option>\r\n                                    <option key={9} className=\"button-lightgreen\" value='10'>Completed</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n\r\n                            {/* <td className=\"py-0\" style={{ fontSize: '0.75rem' }}>{data.total_amount}</td> */}\r\n                            <td className=\"py-0 text-start\">\r\n                              <div className=\"col p-0 m-0 fw-bold fontmain\" style={{ fontSize: '0.75rem', letterSpacing: '1px' }}>\r\n                                ₹{data.total_amount}\r\n                              </div>\r\n                              <div className=\"col p-0 m-0 text-start\">\r\n                                <button className=\"button-sm p-0 m-0 bg-transparent border-0\" onClick={() => { setpaymentsi(i); OpenPaymentsForm(); }}>\r\n                                  <AmountPaid appointmentData={data} index={i} Appointmentlist={Appointmentlist} />\r\n                                </button>\r\n                                {\r\n                                  paymentsi == i ? (\r\n                                    <>\r\n                                      <div className=\"backdrop\"></div>\r\n                                      <td className={`payments bg-seashell shadow-sm start-0 end-0 top-0 mx-auto border border-1 rounded-1 col-lg-6 col-md-10 col-sm-12 col-12 mt-2 col-xl-6 position-absolute px-5 py-2 d-${paymentsi == i ? paymentsform : 'none'}`} >\r\n                                        <Payments ClosePaymentsForm={ClosePaymentsForm2} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} paymentsi={paymentsi} /></td>\r\n                                    </>\r\n\r\n                                  ) : (<></>)\r\n                                }\r\n                              </div>\r\n                            </td>\r\n                            <td className={` text-center py-0 bg-${vitalindex === i ? 'lightyellow' : ''}`}><button className=\"btn p-0 m-0\" onClick={() => { setvitalindex(i); OpenVitals(); GetAppointmentVitals(data.id) }}><img src={process.env.PUBLIC_URL + \"/images/vitals.png\"} alt=\"displaying_image\" /></button></td>\r\n                            <td className={` text-center py-0 d-${permission.appointment_charges_edit ? '' : 'none'} bg-${billindex === i ? 'lightyellow' : ''}`}> <img src={process.env.PUBLIC_URL + \"/images/bill.png\"} onClick={() => { setbillindex(i); OpenBillForm(); }} alt=\"displaying_image\" className=\"me-1\" />  </td>\r\n                            <td className={` text-center py-0  bg-${consumablesindex === i ? 'lightyellow' : ''}`}>\r\n                              <button className={`button-sm border-0 p-0 m-0 position-relative bg-${consumablesindex === i ? 'lightyellow' : 'transparent'}`}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/bandage.png\"} onClick={() => { setconsumablesindex(i); toggleConsumables(); }} alt=\"displaying_image\" className=\"me-1\" />\r\n                                <span class={` position-absolute start-75 translate-middle badge p-0 m-0 text-burntumber fw-bold rounded-2 `} style={{ zIndex: '2', top: \"10%\" }}>\r\n                                  {appointmentdata[i].medicine_used.length}\r\n                                </span>\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              <div className=\"dropdown d-inline-block \">\r\n                                <button className=\"button p-0 m-0 bg-transparent border-0 fw-bold dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                  <img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" className=\"img-fluid\" />\r\n                                </button>\r\n                                <ul className=\"dropdown-menu shadow-sm p-2 scroll\" style={{ '-webkit-appearance': 'none', 'appearance': 'none', width: 'max-content', height: '40vh' }}>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => confirmmessage(data.patient.full_name, data.id)}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/speaker.png\"} alt=\"displaying_image\"/> Call Patient</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Bill(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Bill</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Generate_Prescription(data.id) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/pdf.png\"} alt=\"displaying_image\" /> Generate Prescription</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/whatsapp.png\"} alt=\"displaying_image\" /> Send on Whats App</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { Confirm_For_Prescription2(data.id, data.patient.phone_number) }}><img className='m-2 img-fluid ms-2' src={process.env.PUBLIC_URL + \"/images/message.png\"} alt=\"displaying_image\"  />Send on SMS</li>\r\n                                  <li className=\"dropdown-item fw-bold d-flex border-1 border-bottom p-0 m-0 align-items-center\" onClick={() => { toggle_nsef(); setsaleindex(i) }}><img className='m-2 img-fluid' src={process.env.PUBLIC_URL + \"/images/medicine.png\"}  alt=\"displaying_image\" />Buy Medicines</li>\r\n                                  <li className={`dropdown-item fw-bold p-0 m-0 align-items-center p-2  d-${permission.appointment_charges_edit ? 'flex' : 'none'}`} onClick={() => { setpaymentsindex(i); OpenPaymentsForm(); }}><img src={process.env.PUBLIC_URL + \"/images/rupee.png\"}  className='me-2 img-fluid' alt=\"displaying_image\" />Payments</li>\r\n                                </ul>\r\n                              </div></td>\r\n                            {\r\n                              tableindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`updateappointment shadow-sm border-0 rounded-1 bg-seashell mt-2 start-0 end-0 top-0 col-lg-8 col-md-10 col-sm-11 col-11 col-xl-5 d-${tableindex == i ? appointmentform : 'none'} position-absolute`}>\r\n                                    <UpdateAppointment fetchapi={props.fetchapi} fetchallAppointmentslist={props.fetchallAppointmentslist} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient != null && data.patient.id != null ? data.patient.id : \"\"} appointmentid={data.id} addappointmentform={addappointmentform} closeappointmentform={closeappointmentform} doctorid={props.doctorid} appointmentdoctorid={data.doctor.id} appointmentdate={data.appointment_date} appointmenttime={tConvert(data.timeslot.time_from)} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              vitalindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`vitals position-absolute border-0 d-${vitalindex == i ? vitalsform : 'none'}`} style={{ zIndex: '4' }}>\r\n                                    <Vitalsoperation GetAppointmentVitals={GetAppointmentVitals} CloseVitals={CloseVitals} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} appointmentvitalslist={appointmentvitalslist} loadvitals={loadvitals} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              billindex == i ? (\r\n                                <>\r\n                                  <div className='backdrop'>\r\n                                  </div>\r\n                                  <td className={`bill d-${billindex == i ? billform : 'none'} start-0 end-0 mx-auto top-0 border-0 position-absolute p-0 m-0 col-lg-8 col-md-10 col-sm-11 col-11 mt-2 col-xl-6 `} style={{ zIndex: '4',height:'60vh' }}>\r\n                                    <Bill fetchapi={props.fetchapi} CloseBillForm={CloseBillForm} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} Data={data} appointmentdata={appointmentdata} appointmentid={data.id} doctorfee={data.doctor.consulationFee} billform={billform} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              paymentsindex === i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`payments start-0 end-0 top-0 position-absolute bg-seashell mx-auto rounded-2 pt-2 px-2 p-0 m-0 col-lg-8 col-md-10 col-sm-11 col-11 mt-2 col-xl-6 d-${paymentsindex == i ? paymentsform : 'none'}`} style={{ zIndex: '4' }}>\r\n                                    <Payments ClosePaymentsForm={ClosePaymentsForm} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} Appointmentlist={Appointmentlist} setsingleload={setsingleload} isLoading={isLoading} appointmentdata={appointmentdata} /></td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              consumablesindex == i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`consumables mx-auto  position-absolute top-0 start-0 end-0   d-${consumablesindex == i ? consumables : 'none'} `} style={{ zIndex: '4', height: '70vh' }} >\r\n                                    <AddConsumables appointmentdata={appointmentdata[i]} Appointmentlist={Appointmentlist} existedconsumables={appointmentdata[i].medicine_used.reverse()} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} appointmentid={data.id} toggleConsumables={toggleConsumables} />\r\n                                  </td>\r\n                                </>\r\n                              ) : (<></>)\r\n                            }\r\n                            {\r\n                              saleindex == i ? (\r\n                                <>\r\n                                  <div className=\"backdrop\"></div>\r\n                                  <td className={`saleentryform mx-auto col-xl-6 col-lg-8 col-md-10 p-0 m-0 position-absolute bg-seashell shadow-sm top-0 border border-1 rounded-1 start-0 end-0  d-${saleindex == i ? saleindex : 'none'}`} style={{ zIndex: '4', height: \"70vh\" }}  >\r\n                                    <SaleEntryForm data={data} DoctorID={props.DoctorID} DoctorName={props.DoctorName} saleindex={saleindex} toggle_nsef={toggle_nsef} patientname={data.patient != null && data.patient.full_name != null ? data.patient.full_name : \"\"} patientid={data.patient && data.patient.id != null ? data.patient.id : \"\"} />\r\n                                  </td>\r\n                                </>\r\n                              ) : (<></>)\r\n\r\n                            }\r\n                          </tr>\r\n\r\n                        )))}\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}\r\nexport { DoctorSchedule };\r\n\r\nfunction Timecard(props) {\r\n  const url = useContext(URL);\r\n  const clinics = useContext(Clinic)\r\n  const [cardindex, setcardindex] = useState()\r\n  const [rooms, setrooms] = useState([])\r\n  function diff(start, end) {\r\n    start = start.split(\":\");\r\n    end = end.split(\":\");\r\n    var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    var diff = endDate.getTime() - startDate.getTime();\r\n    var hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    var minutes = Math.floor(diff / 1000 / 60);\r\n    if (hours < 0)\r\n      hours = hours + 24;\r\n\r\n    return (hours != 0 ? ((hours <= 9 ? \"0\" : \"\") + hours + \"hrs \") : \"\") + (minutes <= 9 ? \"0\" : \"\") + minutes + 'mins'\r\n  }\r\n\r\n  function tConvert(time) {\r\n\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      time = time.slice(1);\r\n      time[3] = +time[0] < 12 ? ' AM ' : ' PM ';\r\n      time[0] = +time[0] % 12 || 12;\r\n    }\r\n    return time.join('');\r\n  }\r\n  let [doctime, setdoctime] = useState([]);\r\n  let [isLoading, setisLoading] = useState();\r\n  let [startload, setstartload] = useState(false)\r\n\r\n  let clinicid = localStorage.getItem('ClinicId');\r\n\r\n  async function fetchapi() {\r\n    setisLoading(true);\r\n    await axios.get(`${url}/todays/doctor/time/list?doctor_id=${props.docid}&clinic_id=${clinicid}`).then((response) => {\r\n      \r\n      if (response.data.data.length == 0) {\r\n        setisLoading(false);\r\n      }\r\n      else {\r\n        setdoctime(response.data.data.reverse());\r\n        setisLoading(false);\r\n      }\r\n    })\r\n  }\r\n  const [refreshtimeslots, setrefreshtimeslot] = useState(false);\r\n  const [roomnumber, setroomnumber] = useState('1');\r\n\r\n  async function starttimeslot() {\r\n    setstartload(true)\r\n    let adminid = localStorage.getItem('id');\r\n    if (clinicid && roomnumber && props.docid && adminid) {\r\n      try {\r\n        await axios.post(`${url}/doctor/start/time`, {\r\n          clinic_id: clinicid,\r\n          room_id: roomnumber,\r\n          doctor_id: props.docid,\r\n          admin_id: adminid,\r\n        }).then((response) => {\r\n          setstartload(false)\r\n          Notiflix.Notify.success(response.data.message)\r\n        })\r\n        await fetchapi();\r\n\r\n      } catch (e) {\r\n        Notiflix.Notify.failure(e.message)\r\n\r\n        setstartload(false)\r\n\r\n      }\r\n    } else {\r\n      Notiflix.Notify.alert('Please fill all details')\r\n      setstartload(false)\r\n    }\r\n  }\r\n\r\n  async function endtimeslot(data) {\r\n    let adminid = localStorage.getItem('id');\r\n    setrefreshtimeslot(true);\r\n    let log_id = data.id;\r\n    try {\r\n      await axios.post(`${url}/doctor/end/time`, {\r\n        admin_id: adminid,\r\n        log_id: log_id\r\n      }).then((response) => {\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n      await fetchapi();\r\n      setrefreshtimeslot(false)\r\n    } catch (e) {\r\n      Notiflix.Notify.failure(e.message)\r\n      setrefreshtimeslot(false);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchapi();\r\n  }, [props._selected]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < clinics.length; i++) {\r\n      if (clinics[i].id == Number(clinicid)) {\r\n        setrooms(clinics[i].rooms)\r\n      }\r\n    }\r\n\r\n  }, [clinicid])\r\n  return (\r\n    <div className=\"scroll room_timecards align-items-center align-content-center my-auto mb-2 ms-2\">\r\n      <div id=\"cardslot\" className={`d-${isLoading ? 'none' : 'inline-flex'}`}>\r\n        <div className=\"card card1 p-0 m-0 text-start border-0\" id=\"card1\" >\r\n          <div className=\"card-body p-0 m-0\">\r\n            <div className=\"d-flex align-items-center ms-3\">\r\n              <p className=\" m-0 p-0 text-charcoal fw-bold me-2\">Room</p>\r\n              <select onChange={(e) => { setroomnumber(e.target.value) }} className=\"form-control bg-charcoal25 text-charcoal my-1 mx-2 p-0 py-2 px-3 w-auto text-center border-0\" id=\"clinicroom1\">\r\n                {\r\n\r\n                  rooms.map((data) => (\r\n                    <option value={data.id}>{data.room_number}</option>\r\n                  ))\r\n\r\n\r\n                }\r\n              </select>\r\n              {\r\n                startload ? (\r\n                  <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                ) : (\r\n                  <button className=\"btn playbutton p-0 m-0 mx-2\" onClick={starttimeslot}><img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'images/play.png'}  /></button>\r\n                )\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ? (\r\n\r\n          <div className=\"card bg-pearl text-center ms-3 bg-seashell\" aria-hidden=\"true\" style={{ width: '18rem', paddingTop: '0.76rem', paddingBottom: '0.76rem' }}>\r\n            <div className=\" text-start placeholder-glow gx-2\">\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-4 ms-2 text-start\"></span>\r\n              <span className=\"placeholder col-2 ms-2 text-start\"></span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          doctime.map((data, i) => (\r\n            <div id=\"cardslot text-start\" key={i} className=\"d-inline-flex m-1\">\r\n              <div className=\"card p-0 m-0 py-1 text-start border-0\" id=\"card1\">\r\n                <div className=\"card-body p-0 m-0\">\r\n                  <div className=\"d-flex text-start align-items-center p-0 m-0 \">\r\n                    <p className=\" p-0 m-0  ms-2 text-charcoal75 fw-bold me-1 ps-2 \" style={{ fontSize: '0.75rem' }}>Room</p>\r\n                    <h5 className=\"text-burntumber fw-semibold my-1 me-2 border-0\" id=\"clinicroom\">\r\n                      {data.room_id}\r\n                    </h5>\r\n                    {\r\n                      refreshtimeslots && i === cardindex ? (\r\n                        <div className=\"text-charcoal spinner-border spinner-border-sm me-2 \" role=\"status\" aria-hidden=\"true\" ></div>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"d-flex p-0 m-0 justify-content-center\">\r\n\r\n                            <button type=\"text\" className=\"btn fromtime p-0 m-0 float-end text-charcoal text-center\" style={{ fontSize: '0.75rem' }}>{(data.login_time) ? tConvert(data.login_time) : ''}</button>\r\n                            <div className='mx-1 align-self-center' style={{ padding: '0.9px' }}>-</div>\r\n                            <button type=\"text\" className=\"btn totime p-0 m-0 text-charcoal float-end text-center\" style={{ fontSize: '0.75rem' }}>{(data.logout_time) ? tConvert(data.logout_time) : '__'}</button>\r\n\r\n                          </div>\r\n\r\n                          <div className=\"d-flex mx-2\">\r\n                            {\r\n                              data.logout_time ? (\r\n                                <div id=\"totalhrs\" className=\" p-0 m-0 timediff text-burntumber fw-bold text-center pe-2\" defaultValue=\"\" style={{ fontSize: '0.75rem' }}>{data.logout_time ? diff(data.login_time, data.logout_time) : ''}</div>\r\n                              ) : (\r\n                                <button className=\"btn p-0 m-0 pausebutton\" value={data.id} onClick={(e) => { endtimeslot(data); setcardindex(i) }}><img className=\"\" src={process.env.PUBLIC_URL + 'images/pause.png'} onClick={(e) => { endtimeslot(e); setcardindex(i) }} /></button>\r\n\r\n                              )\r\n                            }\r\n\r\n\r\n                          </div>\r\n\r\n                        </>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n          ))\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\nexport { Timecard }\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState, useEffect, useContext, createContext } from \"react\";\r\n// import { w3cwebsocket as websocket } from 'websocket'\r\nimport { Timecard, DoctorSchedule } from '../Today/Doctor'\r\n//Context APIs\r\nimport { Permissions } from '../../index'\r\n//Components\r\nimport { AddDoctorSlot } from '../Today/AddDoctorSlot'\r\n//css\r\nimport '../../css/dashboard.css'\r\n\r\nconst DOCTORNAME = createContext()\r\nconst DOCTORID = createContext()\r\nfunction Doctorsection(props) {\r\n  const permission = useContext(Permissions)\r\n  const [Docval, setDocval] = useState(0)\r\n  const [Doctor, setDoctor] = useState(0)\r\n  const [DoctorID, setDoctorID] = useState()\r\n  const [DoctorName, setDoctorName] = useState()\r\n  const [DocClinic, setDocClinic] = useState()\r\n  const [doctorindex, setdoctorindex] = useState([0])\r\n  const [doctorform, setdoctorform] = useState(\"none\");\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setDocval(1)\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setDocval(0)\r\n      setdoctorform(\"none\");\r\n    }\r\n  };\r\n\r\n  function getindexes() {\r\n    for (let j = 0; j < doctorindex.length; j++) {\r\n      if (doctorindex.includes(Doctor)) {\r\n        break;\r\n      } else {\r\n        doctorindex.push(Doctor)\r\n      }\r\n    }\r\n  }\r\n  getindexes()\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid doctorsection p-0 m-0 mt-1 ps-1 scroll\">\r\n        <div className=\" hstack gap-3 d-flex p-0 m-0 py-1 ps-1 align-items-center\">\r\n          {\r\n            props.isLoading ? (\r\n              <div className='col-3'>\r\n                <div className=\"spinner-border my-auto\" style={{ width: \"2rem\", height: \"2rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div>\r\n                <div className=\"spinner-grow my-auto\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} role=\"status\" >\r\n                  <span className=\"sr-only\"></span> </div> </div>\r\n            ) : (\r\n              props.todayDoc.map((data, i) => (\r\n                <>\r\n                  <div className='col-auto doctors p-0 m-0'>\r\n                    <button key={i} className={` button rounded-1 p-0 m-0 py-1 px-3 btn-sm col-auto shadow-none text-${i === Doctor ? 'light' : 'charcoal75 fw-bolder'} button-${i === Doctor ? \"charcoal\" : \"pearl\"} border-${i === Doctor ? 'secondary' : 'none'}`}\r\n                      style={{ fontSize: '0.9rem' }}\r\n                      autoFocus={i === Doctor ? true : false}\r\n                      onFocus={() => { setDoctorID(data[0]); setDoctorName(data[1]); setDocClinic(data[2]) }}\r\n                      value={`${data[0]}.${data[1]}`} onClick={(a) => { setDoctor(i); setDoctorID(data[0]); setDoctorName(data[1]); }}>{`Dr. ${data[1]}`} </button>\r\n                  </div>\r\n                  <div className='vr rounded-1 h-75 align-self-center' style={{ padding: '0.8px' }}></div>\r\n                </>\r\n              ))\r\n            )}\r\n          <div className='col-auto'>\r\n            <button className={`btn bg-transparent border-0 `} id=\"adddoctorbtn\" onClick={toggledoctorform} >\r\n              <img src={process.env.PUBLIC_URL + \"/images/addicon.png\"} alt=\"displaying_image\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <section className=\"patientsection p-0 m-0 ps-1 position-relative\">\r\n        {\r\n          props.Loading ? (\r\n            <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-charcoal\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n\r\n          ) : (\r\n            props.todayDoc && props.todayDoc.length != 0 ? (\r\n              doctorindex.map((data, i) => (\r\n                data == Doctor ? (\r\n                  <div key={i}>\r\n                    <div className={`p-0 m-0 my-2 d-${permission.dashboard_all == 1 ? '' : 'none'}`}>\r\n                      <Timecard docid={props.todayDoc[Doctor][0]} _selected={Doctor} />\r\n                    </div>\r\n                    <div className=\"p-0 m-0 my-2\">\r\n{/* \r\n                    DoctorID={DoctorID} DoctorName={DoctorName} */}\r\n\r\n                      <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n                          <DoctorSchedule todayDoc={props.todayDoc} DoctorID={DoctorID} DoctorName={DoctorName}  _selected={Doctor} fetchapi={props.fetchapi} DocClinic={DocClinic}  />\r\n                        </DOCTORID.Provider>    \r\n                      </DOCTORNAME.Provider>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )\r\n              ))\r\n            ) : (\r\n              <div className=\"container-fliud pt-3\">\r\n                <div className=\"d-flex fs-2 align-items-center justify-content-around\">\r\n                  <strong className=\"text-burntumber\">Please Wait...</strong>\r\n                  <div className=\"text-burntumber spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\" ></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </section>\r\n      {\r\n        Docval == 1 ? (\r\n          <div className={`col-lg-5 col-md-6 col-sm-12 col-12 doctorinfosection d-${doctorform} me-lg-2 top-0  me-md-2 rounded-4 border bg-seashell shadow-sm position-absolute`} style={{ zIndex: '2', marginTop: '5.1rem' }} >\r\n                    <DOCTORNAME.Provider value={DoctorName}>\r\n                        <DOCTORID.Provider value={DoctorID}>\r\n            <AddDoctorSlot toggledoctorform={toggledoctorform} staticBackdrop4={'staticBackdrop4'} fetchapi={props.fetchapi} />\r\n            </DOCTORID.Provider>    \r\n            </DOCTORNAME.Provider>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n\r\n    </>\r\n  );\r\n\r\n}\r\nexport default Doctorsection\r\nexport { DOCTORNAME, DOCTORID }","import React from 'react'\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n//Notiflix\r\nimport Notiflix from 'notiflix'\r\nimport { customconfirm } from '../features/notiflix/customconfirm'\r\n//Context APIs\r\nimport { URL, TodayDate, DoctorsList, TodayDocs, Clinic } from '../../index'\r\n\r\nconst AddDoctorSlot = (props) => {\r\n  const url = useContext(URL)\r\n  const APIDate = useContext(TodayDate)\r\n  const Doctors = useContext(DoctorsList)\r\n  const TodayDoctors = useContext(TodayDocs)\r\n  const cliniclist = useContext(Clinic)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const [adddoctorfortoday, setadddoctorfortoday] = useState();\r\n  const [docdate, setdocdate] = useState();\r\n  const [fromtime, setfromtime] = useState();\r\n  const [totime, settotime] = useState();\r\n  const [load, setload] = useState();\r\n\r\n  let admin_id = localStorage.getItem('id');\r\n  async function AddDoctorForToday(e) {\r\n\r\n    if (adddoctorfortoday && docdate && fromtime && totime && clinicID && admin_id) {\r\n      setload(true)\r\n      await axios.post(`${url}/doctor/add/timeslots`, {\r\n        doctor_id: adddoctorfortoday,\r\n        date: docdate,\r\n        time_from: fromtime,\r\n        time_to: totime,\r\n        clinic_id: clinicID,\r\n        admin_id: admin_id\r\n      }).then((response) => {\r\n        props.toggledoctorform();\r\n        resetform()\r\n        setload(false)\r\n        props.fetchapi()\r\n        Notiflix.Notify.success(response.data.message)\r\n      })\r\n    } else {\r\n      Notiflix.Notify.warning('Please Fill all Detais')\r\n      setload(false)\r\n    }\r\n  }\r\n\r\n\r\n  const [doctorform, setdoctorform] = useState(\"none\")\r\n\r\n  const toggledoctorform = () => {\r\n    if (doctorform === \"none\") {\r\n      setdoctorform(\"block\");\r\n    }\r\n    if (doctorform === \"block\") {\r\n      setdoctorform(\"none\");\r\n    }\r\n  }\r\n\r\n  const resetform = () => {\r\n    setadddoctorfortoday()\r\n    setdocdate()\r\n    setfromtime()\r\n    settotime()\r\n  }\r\n  const confirmmessage = (e) => {\r\n    e.preventDefault()\r\n    customconfirm()\r\n    Notiflix.Confirm.show(\r\n      `Add Doctor Time Slots`,\r\n      `Do you surely want to add the following Doctor`,\r\n      'Yes',\r\n      'No',\r\n      () => {\r\n        AddDoctorForToday()\r\n      },\r\n      () => {\r\n        return 0\r\n      },\r\n      {\r\n      },\r\n    );\r\n  }\r\n\r\n  const Avaliablemessage = (response) => {\r\n    for (let k = 0; k < TodayDoctors.length; k++) {\r\n      if (TodayDoctors[k][0] !== undefined) {\r\n        if (TodayDoctors[k][0] == response) {\r\n          return '(Already added)'\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n\r\n    <div className='container px-2 fw-bold'>\r\n      <h5 className=\"text-center mt-2 fw-bold\">Slot Details</h5>\r\n      <button type=\"button\" className=\"btn-close closebtn position-absolute\" disabled={load == true ? true : false} aria-label=\"Close\" onClick={props.toggledoctorform} ></button>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <label className='ps-1'>Doctor</label>\r\n        <select className=\"col-10 form-control selectdoctor\" value={adddoctorfortoday ? adddoctorfortoday : ''} onChange={(e) => { setadddoctorfortoday(e.target.value) }}>\r\n          <option defaultValue=\"Select Doctor\">Select Doctor</option>\r\n          {\r\n            Doctors.map((data) => (\r\n              <option value={data[0]}>Dr. {data[1]}{' '}{Avaliablemessage(data[0])}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Clinic</label>\r\n\r\n      <div className=\"col-12\">\r\n        {\r\n          cliniclist.map((data, i) => (\r\n            <label className={`d-${clinicID == data.id ? 'block' : 'none'} text-burntumber`}><input type=\"checkbox\" className=\"radio form-check-input me-1\" checked={clinicID == data.id ? true : false} /> {data.title} {data.address}</label>\r\n\r\n          ))\r\n        }\r\n      </div>\r\n      <hr />\r\n      <label className='ps-1'>Date</label>\r\n      <div className=\"col-12\"><input type=\"date\" className=\"form-control col-10\" value={docdate ? docdate : ''} onChange={(e) => { setdocdate(e.target.value) }} /></div>\r\n      <hr />\r\n      <label >Time From</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={fromtime ? fromtime : ''} onChange={(e) => { setfromtime(e.target.value) }} /></div>\r\n      <hr />\r\n      <label>Time To</label>\r\n      <div className=\"col-12\"><input type=\"time\" className=\"form-control col-10\" value={totime ? totime : ''} onChange={(e) => { settotime(e.target.value) }} /></div>\r\n      <hr />\r\n      {\r\n        load ? (\r\n          <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-6 py-2 pb-2 m-auto text-center\">\r\n              <button type=\"button\" className=\"button button-charcoal px-5\" onClick={confirmmessage} > Done </button>\r\n            </div>\r\n            <div className=\"col-6 pb-2 m-auto text-center\">\r\n              <button className=\"button button-pearl px-5\" onClick={resetform}>Reset</button>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AddDoctorSlot }"],"names":["UpdateAppointment","props","useRef","clinicID","localStorage","getItem","adminid","url","useContext","URL","DocApi","Doctorapi","Doclist","DoctorsList","TodayDoctors","TodayDocs","_useState","useState","_useState2","_slicedToArray","cliniclist","setcliniclist","_useState3","_useState4","doctorid","setdoctorid","_useState5","_useState6","clinicid","_useState7","_useState8","time","settime","_useState9","_useState10","timeindex","settimeindex","_useState11","_useState12","_useState13","_useState14","load","setload","_useState15","_useState16","ApikeyDocTimeslots","setApikeyDocTimeslots","_useState17","_useState18","ApiDocTimefrom","setApiDocTimefrom","tConvert","toString","match","length","slice","join","useEffect","axios","concat","then","response","data","dateref","docref","_useState19","_useState20","trigger","settrigger","_getCurrentTimeslots","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","Timeslots","i","wrap","_context2","prev","next","appointmentdoctorid","current","value","id","Number","push","month_timeslots","stop","apply","arguments","_getCurrentTimefrom","_callee3","timefrom","j","_context3","date","appointmentdate","time_from","booking_status","getCurrentTimeslots","getCurrentTimefrom","_getTimeslots","_callee4","e","_context4","target","_getTimefrom","_callee5","_context5","appointmentid","patientid","appointment_id","doctor_id","clinic_id","timeslot_id","patient_id","admin_id","fetchallAppointmentslist","fetchapi","Notiflix","message","HighlightOptions","k","undefined","Avaliablemessage","_jsxs","className","children","patientname","_jsx","type","disabled","onClick","closeappointmentform","map","src","style","width","letterSpacing","title","address","ref","onChange","_x","defaultValue","name","selected","_x2","appointmenttime","_Fragment","key","preventDefault","gettime_value","alt","class","role","customconfirm","SelectedTimeAppointment","doctorname","DOCTORNAME","DOCTORID","Clinic","APIDate","TodayDate","searchinput","setsearchinput","searchlist","setsearchlist","displaysearchlist","setdisplaysearchlist","setpatientid","searchload","setsearchload","_searchpatient","_callee","_context","patients_list","selectedtime","closeAddAppointmentform","placeholder","searchpatient","zIndex","cursor","full_name","get_value","phone_number","split","reverse","reversefunction","selectedtimeID","AddSelectedDoctorSlot","fromtime","setfromtime","totime","settotime","_AddSelectedDoctorSlot","backgroundColor","svgColor","time_to","CloseAddQuickSlots","Vitalsoperation","vitals","Vitals","vitalid","setvitalid","vitalvalue","setvitalvalue","loadvitals","setloadvitals","vitalupdatevalue","setvitalupdatevalue","vitalindex","setvitalindex","savevital","setsavevital","updatevital","setupdatevital","Vitalunit","v","x","unit","_AddVitals","vitals_id","GetAppointmentVitals","OpenUpdateVital","t0","_UpdateVital","appointmentvitalid","old_id","_DeleteVital","status","CloseVitals","appointmentvitalslist","vital","UpdateVital","_x3","DeleteVital","opacity","Bill","Charges","description","amount","discount","cgst","sgst","gross_amount","paymentmethoddetails","paymentmethod","loadadvancepayments","setloadadvancepayments","advancepayments","setadvancepayments","extrachargecount","setextrachargecount","constext","setconstext","docdiscount","setdocdiscount","coupondiscount","setcoupondiscount","aartasdiscount","setaartasdiscount","AtC","setAtC","doctorfee","AddConsAmt","setAddConsAmt","SGST","setSGST","_useState21","_useState22","CGST","setCGST","_useState23","_useState24","paymentmethods","setpaymentmethods","_useState25","_useState26","_useState27","_useState28","ischecked","setischecked","AddExtraCharges","_AddExtraCharges","_callee6","extracharges","_context6","appointmentdata","other_charges","total_amount","gst_rate","final_amount","aartas_discount","doc_discount","cons_text","_AddPaymentMethods","_callee7","Payments","amounts","allamounts","_context7","payment_method_details","Object","keys","JSON","parse","values","_DeleteExtraCharges","_callee8","_context8","splice","Appointmentlist","Calculate_gst","prevState","_toConsumableArray","total","toFixed","Get_total_Seperate_gsts","grosstotal","forEach","item","Get_Grand_Total","discounts","Return_Amount","totalarr","Advance","SaveBill","_SaveBill","_callee10","GrandTotal","Docfee","DoctorDiscount","AartasDiscount","TotalCGST","TotalSGST","Description","TotalAmount","Discount","Grossamount","DiscountedAmount","ids","gstrate","Paymentmethod","Paymentmethodsvalue","Data","Payment","_Payment","_context10","_callee9","_context9","console","log","toggleStage3","toggleStage4","g_total_main","cons_fee","doc_dis","payment_method","payment_method_main","add_to_cart","show_cons_fee","ot_id","AddPaymentMethods","billform","_AdvancePayments","_callee11","_context11","AdvancePayments","consumables_amount","Total","medicine_used","ConsumableAmount","_useState29","_useState30","stage1","setstage1","toggleStage1","_useState31","_useState32","stage2","setstage2","toggleStage2","_useState33","_useState34","stage3","setstage3","_useState35","_useState36","stage4","setstage4","Generate_Bill","_ref2","messageColor","messageFontSize","window","open","bill_url","Generate_Prescription","_ref3","prescription_pdf","Send_On_WhatsApp","_ref4","phone","check","checkpres","check_pres","_x4","_x5","_x6","Send_On_SMS","_ref5","check_bill","check_pre","_x7","_x8","_x9","_useState37","_useState38","videoconstraint","setvideoconstraint","minHeight","CloseBillForm","checked","isLoading","DeleteExtraCharges","DeletePaymentMethods","patient","reward_points","points_total","advnace_total","Total_Amount","padding","whatsapp_sent","setsingleload","AddConsumables","medicinesref","medbyidref","stockref","setdoctorname","products","setproducts","itemsearch","setitemsearch","itembyid","setitembyid","loadbyId","setloadbyId","itemname","setitemname","itemid","setitemid","SelectedProducts","setSelectedProducts","Grandtotal","setGrandtotal","Grandtotal2","setGrandtotal2","_useState39","_useState40","loadsearch","setloadsearch","_useState41","_useState42","_useState43","nursing_notes","_useState44","nursenotes","setnursenotes","_useState45","_useState46","deleteload","setdeleteload","_useState47","_useState48","loadnotes","setloadnotes","_useState49","_useState50","seti","searchmeds","_ref","search","medicines","vaccines","items","flat","display","searchmedbyId","CalTotalAmount","qty","cst","realcst","cost","AddProducts","T","vaccine_brand_id","ProductDetails","productid","product","item_name","batch","batch_no","expiry","expiry_date","quantity","current_stock","qtytoSale","mainmrp","mrp","disccost","gst","CGST_rate","SGST_rate","IGST_rate","totalamt","_DeleteProduct","Batch","obj","filter","_SubmitConsumabaleEntry","productids","proquantity","discountonmrp","GST","Totalamount","_i","pro_id","disc_mrp","main_mrp","NurseNotes","catch","confirmmessage","SubmitConsumabaleEntry","ttl","CalGrandttl","existedconsumables","CalGrandttl2","notes","RemoveConsumable","ID","height","toggleConsumables","dispzzzlay","Width","maxHeight","fontSize","display_name","stock_info","marginTop","disc","DeleteProduct","medicies_stocks_id","medicine","medicine_stocks","paddingBottom","DoctorSchedule","Date","permission","Permissions","ClinicId","setappointmentdata","singleload","setisLoading","tableindex","settableindex","appointmentform","setappointmentform","addappointmentform","setaddappointmentform","setappointmentid","saleindex","setsaleindex","consumablesindex","setconsumablesindex","addquickslots","setaddquickslots","vitalsform","setvitalsform","consumables","setconsumables","setappointmentvitalslist","billindex","setbillindex","setbillform","paymentsindex","setpaymentsindex","paymentsi","setpaymentsi","paymentsform","setpaymentsform","setd_form","nsef","setnsef","_Appointmentlist","Loading","todayDoc","_selected","array","number","status_color","_UpadteStatus","_GetAppointmentVitals","_SendNotifcation","SendNotifcation","OpenPaymentsForm","ClosePaymentsForm","ClosePaymentsForm2","_x10","_x11","_x12","toggle_nsef","minWidth","maxWidth","DocClinic","DoctorID","DoctorName","top","Height","appointment_charges_edit","timeslot","is_profile_verified","scale","appointment_status","appointment_edit","UpadteStatus","AmountPaid","appointmentData","index","doctor","appointment_date","consulationFee","SaleEntryForm","Timecard","clinics","cardindex","setcardindex","rooms","setrooms","diff","start","end","startDate","getTime","hours","Math","floor","minutes","_useState51","_useState52","doctime","setdoctime","_useState53","_useState54","_useState55","_useState56","startload","setstartload","_fetchapi","docid","_useState57","_useState58","refreshtimeslots","setrefreshtimeslot","_useState59","_useState60","roomnumber","setroomnumber","_starttimeslot","room_id","endtimeslot","_x13","_endtimeslot","log_id","room_number","paddingTop","login_time","logout_time","createContext","Docval","setDocval","Doctor","setDoctor","setDoctorID","setDoctorName","setDocClinic","doctorindex","doctorform","setdoctorform","toggledoctorform","includes","getindexes","autoFocus","onFocus","a","dashboard_all","Provider","AddDoctorSlot","staticBackdrop4","Doctors","adddoctorfortoday","setadddoctorfortoday","docdate","setdocdate","_AddDoctorForToday","resetform","AddDoctorForToday"],"sourceRoot":""}