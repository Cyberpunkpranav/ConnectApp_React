{"version":3,"file":"static/js/646.48cf25e6.chunk.js","mappings":"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","sources":["components/App/Doctors.jsx"],"sourcesContent":["import axios from \"axios\"\r\nimport ReactPaginate from 'react-paginate';\r\nimport Notiflix from 'notiflix';\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { UpdateDoctor } from \"../Doctors/UpdateDoctor\"\r\nimport { URL } from '../../index'\r\n//css\r\nimport '../../css/Doctors.css'\r\n\r\nfunction Doctors() {\r\n  const url = useContext(URL)\r\n  const clinicID = localStorage.getItem('ClinicId')\r\n  const imagepath = 'https://aartas-qaapp-as.azurewebsites.net/aartas_uat/public/assets/doctor/'\r\n  const [Doctorssearch, setDoctorssearch] = useState()\r\n  const [Doctorslist, setDoctorslist] = useState([])\r\n  const [pages, setpages] = useState()\r\n  const [pagecount, setpagecount] = useState()\r\n  const [tabindex, settabindex] = useState()\r\n  const [form, setform] = useState()\r\n  const [pageloading, setpageloading] = useState(false)\r\n  const [updatedoctor, setupdatedoctor] = useState('none')\r\n\r\n  function GetPages() {\r\n    try {\r\n      axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=0`).then((response) => {\r\n        setpagecount(response.data.data.total_count)\r\n        setpages(Math.round(response.data.data.total_count / 10) + 1)\r\n        setpageloading(false)\r\n      }).catch((e) => {\r\n        Notiflix.Notify.warning(e.message)\r\n        setpageloading(false)\r\n      })\r\n    } catch (e) {\r\n      Notiflix.Notify.warning(e.message)\r\n      setpageloading(false)\r\n    }\r\n  }\r\n\r\n  async function getAllDoctors(Data) {\r\n    if (Data == undefined || Data.selected == undefined) {\r\n      setpageloading(true)\r\n      setDoctorslist()\r\n      await axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=0`).then((response) => {\r\n        setDoctorslist(response.data.data.doctor_list)\r\n        \r\n      })\r\n      setpageloading(false)\r\n    } else {\r\n      setpageloading(true)\r\n      setDoctorslist()\r\n      await axios.get(`${url}/doctor/list?clinic_id=${clinicID}&search=${Doctorssearch ? Doctorssearch : ''}&limit=10&offset=${Data.selected * 10}`).then((response) => {\r\n        setDoctorslist(response.data.data.doctor_list)\r\n      })\r\n      setpageloading(false)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetPages()\r\n    getAllDoctors()\r\n  }, [pagecount, Doctorssearch])\r\n\r\n  function OpenUpdateDoctor(i) {\r\n    if (updatedoctor === 'none') {\r\n      setupdatedoctor('block')\r\n      setform(i)\r\n    }\r\n  }\r\n  function CloseUpdateDoctor() {\r\n    if (updatedoctor === 'block') {\r\n      setupdatedoctor('none')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"Doctorspage text-center position-relative\">\r\n      <div className=\"conatainer searchbar\">\r\n        <input className=\"form-control m-auto mt-2\" placeholder=\"Search Doctor\" onChange={(e) => { setDoctorssearch(e.target.value) }} />\r\n      </div>\r\n      <div className=\"container-fluid p-0 m-0 scroll scroll-y\" style={{ minHeight: '30rem' }}>\r\n        <table className=\"table text-start fw-bold\" >\r\n          <thead className=\"text-charcoal75\">\r\n            <tr>\r\n              {/* <th>Update</th> */}\r\n              <th>Name</th>\r\n              <th>Specialization</th>\r\n              <th>Degree</th>\r\n              <th>Mobile No.</th>\r\n              <th>Email Id</th>\r\n              {/* <th>Procedures</th> */}\r\n              {/* <th>More</th> */}\r\n            </tr>\r\n          </thead>\r\n\r\n          {\r\n            pageloading ? (\r\n              <tbody className=' text-center' style={{ minHeight: '30vh' }}>\r\n                <tr className='position-absolute border-0 start-0 end-0 px-5'>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <strong className=''>Getting Details please be Patient ...</strong>\r\n                    <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                  </div>\r\n                </tr>\r\n\r\n              </tbody>\r\n            ) : (\r\n              Doctorslist && Doctorslist.length == 0 ? (\r\n                <tbody className='text-center position-relative p-0 m-0 ' style={{ minHeight: '30vh' }}>\r\n                  <tr className=''>\r\n                    <td className='fw-bolder text-charcoal text-center position-absolute border-0 start-0 end-0 mx-3 p-2 border-0'>No Doctors found</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              ) : (\r\n                <tbody style={{ minHeight: '32vh' }}>\r\n                  {\r\n                    Doctorslist && Doctorslist.map((data, i) => (\r\n                      <tr className=\"align-middle\">\r\n                        {/* <td><button className=\"btn p-0 m-0\" onClick={(e) => { settabindex(i); OpenUpdateDoctor(i) }}><img src={process.env.PUBLIC_URL + \"/images/confirmed.png\"} style={{ width: \"1.5rem\" }} /></button>\r\n                            {form == i ? (\r\n                              <section id={i} className={`scroll scroll-y position-absolute d-${tabindex == i ? updatedoctor : 'none'} bg-seashell rounded shadow top-0 bottom-2 `} style={{ marginLeft: '22.5rem', width: '40rem', height: '35rem' }}>\r\n                                <UpdateDoctor index={i} CloseUpdateDoctor={CloseUpdateDoctor} patientid={data.id} data={data} phonecountrycode={data.phone_country_code ? data.phone_country_code : ''} PhoneNo={data.phone_number ? Number(data.phone_number) : ''} dob={data.dob ? data.dob : ''} gender={data.gender ? data.gender : ''} full_name={data.full_name ? data.full_name : ''} email={data.email ? data.email : ''} pincode={data.pin_code ? data.pin_code : ''} location={data.location ? data.location : ''} parent={data.parent} linkid={data.link_id ? data.link_id : ''} relation={data.relation} latitude={data.latitude} longitude={data.longitude} />\r\n                              </section>\r\n                            ) : (<></>)\r\n                            }\r\n  \r\n                          </td> */}\r\n                        <td className=\"pe-5\">{data.image ? <img className=\"img-fluid rounded-5\" style={{ width: '2rem' }} src={imagepath + data.image} /> : 'Image not found'}{' '}{data.doctor_name ? data.doctor_name : ''}</td>\r\n                        <td>{data.speciality.name}</td>\r\n                        <td>{data.degree_suffix ? data.degree_suffix : ''}</td>\r\n                        <td>{data.phone_number ? data.phone_number : ''}</td>\r\n                        <td>{data.email}</td>\r\n                        {/* <td className=\"text-center\"><button className=\"btn p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/info.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td> */}\r\n                        {/* <td><button className=\"btn p-0 m-0\"><img src={process.env.PUBLIC_URL + \"/images/more.png\"} alt=\"displaying_image\" style={{ width: \"1.5rem\" }} /></button></td> */}\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              )\r\n            )\r\n          }\r\n\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"d-flex text-center justify-content-center mt-3\">\r\n\r\n        < ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'. . .'}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={getAllDoctors}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item text-charcoal'}\r\n          pageLinkClassName={'page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1'}\r\n          previousClassName={'btn button-charcoal-outline me-2'}\r\n          previousLinkClassName={'text-decoration-none text-charcoal'}\r\n          nextClassName={'btn button-charcoal-outline ms-2'}\r\n          nextLinkClassName={'text-decoration-none text-charcoal'}\r\n          breakClassName={'mx-2 text-charcoal fw-bold fs-4'}\r\n          breakLinkClassName={'text-decoration-none text-charcoal'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\nexport default Doctors"],"names":["url","useContext","URL","clinicID","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","Doctorssearch","setDoctorssearch","_useState3","_useState4","Doctorslist","setDoctorslist","_useState5","_useState6","pages","setpages","_useState7","_useState8","pagecount","setpagecount","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","pageloading","setpageloading","_useState15","_useState16","getAllDoctors","_x","_getAllDoctors","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","Data","wrap","_context","prev","next","undefined","selected","axios","concat","then","response","data","doctor_list","stop","useEffect","total_count","Math","round","catch","e","Notiflix","message","GetPages","_jsxs","className","children","_jsx","placeholder","onChange","target","value","style","minHeight","class","role","length","map","i","image","width","src","doctor_name","speciality","name","degree_suffix","phone_number","email","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}