{"version":3,"file":"static/js/867.cd6d73d9.chunk.js","mappings":"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","sources":["components/Reports/pharmacy/stockreport_by_name.jsx","components/features/notiflix/customconfirm.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URL, TodayDate, DoctorsList, Clinic, Permissions } from \"../../../index\";\r\nimport Notiflix from \"notiflix\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\r\nimport { customconfirm } from \"../../features/notiflix/customconfirm\";\r\n//css\r\nimport \"../../../css/bootstrap.css\";\r\nimport \"../../../css/dashboard.css\";\r\nimport \"../../../css/pharmacy.css\";\r\n\r\nconst StockReport_By_Name = () => {\r\n    const medicinesref = useRef(null);\r\n    const permission = useContext(Permissions);\r\n    const currentDate = useContext(TodayDate);\r\n    const ClinicID = localStorage.getItem(\"ClinicId\");\r\n    const adminid = localStorage.getItem(\"id\");\r\n    const url = useContext(URL);\r\n    const StockReport_By_Name_ref = useRef();\r\n\r\n    const [fromdate, setfromdate] = useState();\r\n    const [todate, settodate] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n    const [stockreportarr, setstockreportarr] = useState([]);\r\n    const [pages, setpages] = useState([]);\r\n    const [pagecount, setpagecount] = useState();\r\n    //search meds\r\n    const [itemsearch, setitemsearch] = useState([\"\"]);\r\n    const [itemname, setitemname] = useState();\r\n    const [itemid, setitemid] = useState();\r\n    const [itemtype, setitemtype] = useState('');\r\n    const [loadsearch, setloadsearch] = useState();\r\n\r\n    const reversefunction = (date) => {\r\n        if (date) {\r\n            date = date.split(\"-\").reverse().join(\"-\");\r\n            return date;\r\n        }\r\n    }\r\n\r\n    // function GetPages() {\r\n    //     if (itemid && itemtype && itemid !== undefined && itemtype !== undefined) {\r\n    //     try {\r\n    //         axios.get(`${url}/reports/stock/report/by/item?item_id=${itemid}&item_type=${itemtype}&from=${fromdate ? fromdate : currentDate}&to=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n    //             .then((response) => {\r\n    //                 setpagecount(response.data.data.count);\r\n    //                 setpages(Math.round(response.data.data.count / 25) + 1);\r\n    //                 setLoading(false);\r\n    //             })\r\n    //             .catch((e) => {\r\n    //                 Notiflix.Notify.warning(e.message);\r\n    //                 setLoading(false);\r\n    //             });\r\n    //     } catch (e) {\r\n    //         Notiflix.Notify.warning(e.message);\r\n    //         setLoading(false);\r\n    //     }\r\n    //     }\r\n    // }\r\n    function GETStockReport(Data) {\r\n        // if (itemid && itemtype && itemid !== undefined && itemtype !== undefined) {\r\n            if (itemid !== undefined){\r\n        if (Data == undefined || Data.selected == undefined) {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report/by/item?item_id=${itemid ? itemid : ''}&item_type=${itemtype ? itemtype : ''}&from=${fromdate ? fromdate : currentDate}&to=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        console.log(response)\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setstockreportarr(dataarr.flat());\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(true);\r\n            try {\r\n                axios.get(`${url}/reports/stock/report/by/item?item_id=${itemid}&item_type=${itemtype}&from=${fromdate ? fromdate : currentDate}&to=${todate ? todate : fromdate ? fromdate : currentDate}`)\r\n                    .then((response) => {\r\n                        console.log(response)\r\n                        let medicines = []\r\n                        let vaccines = []\r\n                        let dataarr = []\r\n                        const medicinearr = Object.keys(response.data.data.medicine).map(key => ({\r\n                            medicine_id: key,\r\n                            ...response.data.data.medicine[key]\r\n                        }));\r\n                        medicines.push(medicinearr)\r\n                        const vaccinearr = Object.keys(response.data.data.vaccine).map(key => ({\r\n                            vaccine_id: key,\r\n                            ...response.data.data.vaccine[key]\r\n                        }));\r\n                        vaccines.push(vaccinearr)\r\n                        dataarr.push(medicines)\r\n                        dataarr.push(vaccines)\r\n                        dataarr = dataarr.flat()\r\n                        setstockreportarr(dataarr.flat());\r\n                        // setstockreportarr(response.data.data.sale_entry);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((e) => {\r\n                        Notiflix.Notify.warning(e.message);\r\n                        setLoading(false);\r\n                    });\r\n            } catch (e) {\r\n                Notiflix.Notify.warning(e.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }\r\n        // } else {\r\n        //     Notiflix.Notify.info('Please Select Item to get the stock report')\r\n        // }\r\n    }\r\n\r\n    const searchmeds = async (search) => {\r\n       \r\n        setloadsearch(true);\r\n        try {\r\n            await axios.get(`${url}/item/search?search=${search}`)  \r\n                .then((response) => {\r\n                    let medicines = [];\r\n                    let vaccines = [];\r\n                    let items = [];\r\n                    medicines.push(response.data.data.medicines ? response.data.data.medicines : []);\r\n                    vaccines.push(response.data.data.vaccines ? response.data.data.vaccines : []);\r\n                    items = medicines.concat(vaccines);\r\n                    items = items.flat();\r\n                    setitemsearch(items);\r\n                    setloadsearch(false);\r\n                    if (search.length > 1) {\r\n                        medicinesref.current.style.display = \"block\";\r\n                    } else {\r\n                        medicinesref.current.style.display = \"none\";\r\n                    }\r\n                });\r\n        } catch (e) {\r\n            Notiflix.Notify.warning(e.data.message);\r\n        }\r\n    \r\n    };\r\n    // useEffect(() => {\r\n    //     GetPages();\r\n    // }, [itemid, fromdate, todate]);\r\n\r\n    useEffect(() => {\r\n        GETStockReport();\r\n    }, [itemid, fromdate, todate]);\r\n\r\n    const parentArray = Object.keys(stockreportarr).map(key => ({\r\n        id: key,\r\n        ...stockreportarr[key]\r\n    }));\r\n    console.log(stockreportarr,itemid)\r\n    return (\r\n        <>\r\n                    <h2 className=\" ms-3 text-charcoal fw-bolder mt-4\" style={{ width: \"fit-content\" }}> {pagecount} {pagecount > 1 ? ` Stock Reports By Name` : ` Stock Report By Name`}{\" \"}  </h2>\r\n            <div className=\"row p-0 m-0  mt-2 ms-2\">\r\n            <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell me-2 align-items-center rounded-2\">\r\n                            <div className=\"position-relative\">\r\n                                <input className=\"fw-bold button button-seashell text-charcoal border-0 text-center bg-seashell\" placeholder=\"Search Items\" value={itemname ? itemname : \"\"} onChange={(e) => { searchmeds(e.target.value); setitemname(e.target.value); setitemtype(); }} />\r\n                                <div ref={medicinesref} className=\"position-absolute rounded-4 col-12\" style={{ zIndex: \"2\" }} >\r\n                                    {\r\n                                        itemsearch ? (\r\n                                            loadsearch ? (\r\n                                                <div className=\"rounded-1 p-1 bg-pearl\">\r\n                                                    Searching Please wait....\r\n                                                    <div className=\"spinner-border my-auto\" style={{ width: \"1rem\", height: \"1rem\" }} role=\"status\" >\r\n                                                        <span className=\"sr-only\"> </span>{\" \"}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : itemsearch.length == 0 ? (\r\n                                                <div className=\"bg-burntumber text-light rounded-1 p-1 text-wrap\"> Oops! Not Avaliable </div>\r\n                                            ) : (\r\n                                                <div className={`mt-1 rounded-4 bg-pearl shadow px-1 pb-2 d-${itemsearch && itemsearch.length > 1 ? \"block\" : \"none\"}`} >\r\n                                                    <p className={`p-0 m-0 bg-pearl fw-bold text-charcoal75 text-start rounded-4 ps-2 `} style={{ fontSize: \"0.8rem\" }} > {itemsearch.length} Search Results </p>\r\n                                                    {itemsearch.map((data, i) => (\r\n                                                        <div style={{ cursor: \"pointer\" }} className={`p-0 ps-1 text-start text-charcoal text-wrap py-2  bg-${i % 2 == 0 ? \"\" : \"seashell\"}`} name={data.id} onClick={(e) => { setitemname(data.display_name ? data.display_name : data.name); setitemid(data.id); setitemtype(data.vaccines_id ? \"v\" : \"m\"); medicinesref.current.style.display = \"none\"; }} >\r\n                                                            {data.display_name ? data.display_name : data.name}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            )\r\n                                        ) : (\r\n                                            <></>\r\n                                        )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                <div className=\"col-auto bg-seashell rounded-2\">\r\n                    <div className=\"row p-0 m-0 align-items-center align-self-center\">\r\n                  \r\n                        <div className=\"col-auto p-0 m-0 text-charcoal text-center fw-bolder bg-seashell \">\r\n              <input type=\"date\" placeholder=\"fromdate\" className=\"button button-seashell rounded-0 text-charcoal text-center fw-bolder \" value={fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { setfromdate(e.target.value); }} />\r\n            </div>\r\n            <div className=\"col-auto p-0 m-0\">-</div>\r\n            <div className=\"col-auto p-0 m-0  text-charcoal text-center fw-bolder bg-seashell\">\r\n              <input type=\"date\" className=\"button button-seashell rounded-0 text-charcoal text-center bg-seashell fw-bolder\" value={todate ? todate : fromdate ? fromdate : currentDate ? currentDate : \"\"} onChange={(e) => { settodate(e.target.value); }} />\r\n            </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto export align-self-center text-center \">\r\n                    <DownloadTableExcel\r\n                        filename={`${reversefunction(fromdate) + ' to ' + reversefunction(todate)} StockReports_by_Name`}\r\n                        sheet=\"StockReports_by_Name\"\r\n                        currentTableRef={StockReport_By_Name_ref.current}\r\n                    >\r\n                        <button className='button button-seashell fw-bold'> Export</button>\r\n\r\n                    </DownloadTableExcel>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroll scroll-y p-0 m-0 mt-2\" style={{ minHeight: \"40vh\", height: \"58vh\", maxHeight: \"70vh\" }} >\r\n                <table className=\"table text-start table-responsive\" ref={StockReport_By_Name_ref}>\r\n                    <thead className=\" p-0 m-0 position-sticky top-0 bg-pearl\">\r\n                        <tr className=\" \">\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Date Opening </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Type </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Invoice No. </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Party Name </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Batch </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">  Price </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\">  Qty In </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Qty Out  </th>\r\n                            <th className=\"text-charcoal75 fw-bolder p-0 m-0 px-1\"> Closing </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Loading ? (\r\n                        <tbody className=\"text-center\" style={{ minHeight: \"55vh\", height: \"55vh\" }} >\r\n                            <tr className=\"position-absolute border-0 start-0 end-0 px-5\">\r\n                                <div class=\"d-flex align-items-center spinner\">\r\n                                    <strong className=\"\" style={{ fontSize: \"1rem\" }}>\r\n                                        Getting Details please be Patient ...\r\n                                    </strong>\r\n                                    <div\r\n                                        className=\"spinner-border ms-auto\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></div>\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    ) : stockreportarr && stockreportarr.length != 0 ? (\r\n                        <tbody>\r\n                            {parentArray.map((item, i) => (\r\n                                <tr className={` bg-${i % 2 == 0 ? \"seashell\" : \"pearl\"} align-middle`} key={i} >\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\">{itemtype} </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                    <td className=\"text-charcoal fw-bold\"> </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : (\r\n                        <tbody className=\"text-center p-0 m-0\" style={{ minHeight: \"55vh\", maxHeight: \"55vh\" }} >\r\n                            <div className=\"position-absolute border-0 start-0 end-0 mx-3 p-2\">\r\n                                <strong className=\"text-charcoal fw-bolder text-center\"> No Stock Reports By Name </strong>\r\n                            </div>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            <div className=\"container-fluid mt-2 d-flex justify-content-center\">\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    breakLabel={\".\"}\r\n                    pageCount={pages}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    onPageChange={GETStockReport}\r\n                    containerClassName={\"pagination scroll align-self-center align-items-center\"}\r\n                    pageClassName={\"page-item text-charcoal\"}\r\n                    pageLinkClassName={\"page-link text-decoration-none text-charcoal border-charcoal rounded-1 mx-1\"}\r\n                    previousClassName={\"btn button-charcoal-outline me-2\"}\r\n                    previousLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    nextClassName={\"btn button-charcoal-outline ms-2\"}\r\n                    nextLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    breakClassName={\"d-flex mx-2 text-charcoal fw-bold fs-4\"}\r\n                    breakLinkClassName={\"text-decoration-none text-charcoal\"}\r\n                    activeClassName={\"active \"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockReport_By_Name \r\n","import '../../../css/bootstrap.css'\r\nimport Notiflix from 'notiflix'\r\nconst customconfirm = () => {\r\n  return (\r\n    Notiflix.Confirm.init({\r\n      className: 'notiflix-confirm',\r\n      width: '30rem',\r\n      zindex: 4003,\r\n      position: 'top',\r\n      distance: '0rem',\r\n      backgroundColor: '#f2f2f2',\r\n      borderRadius: '20px',\r\n      backOverlay: true,\r\n      backOverlayColor: 'rgba(0,0,0,0.5)',\r\n      rtl: false,\r\n      fontFamily: 'Urbanist',\r\n      cssAnimation: true,\r\n      cssAnimationDuration: 300,\r\n      cssAnimationStyle: 'fade',\r\n      plainText: true,\r\n      titleColor: '#222023',\r\n      titleFontSize: '1.5rem',\r\n      titleMaxLength: 34,\r\n      messageColor: '#222023',\r\n      messageFontSize: '1.2rem',\r\n      messageMaxLength: 110,\r\n      buttonsFontSize: '1rem',\r\n      buttonsMaxLength: 34,\r\n      okButtonColor: '#f8f8f8',\r\n      okButtonBackground: '#222023',\r\n      cancelButtonColor: '#222023',\r\n      cancelButtonBackground: '#ffffff',\r\n    })\r\n  )\r\n}\r\n\r\nexport { customconfirm }\r\n\r\n"],"names":["medicinesref","useRef","currentDate","useContext","Permissions","TodayDate","url","localStorage","getItem","URL","StockReport_By_Name_ref","_useState","useState","_useState2","_slicedToArray","fromdate","setfromdate","_useState3","_useState4","todate","settodate","_useState5","_useState6","Loading","setLoading","_useState7","_useState8","stockreportarr","setstockreportarr","_useState9","_useState10","pages","_useState11","_useState12","pagecount","_useState13","_useState14","itemsearch","setitemsearch","_useState15","_useState16","itemname","setitemname","_useState17","_useState18","itemid","setitemid","_useState19","_useState20","itemtype","setitemtype","_useState21","_useState22","loadsearch","setloadsearch","reversefunction","date","split","reverse","join","GETStockReport","Data","undefined","selected","axios","concat","then","response","console","log","medicines","vaccines","dataarr","medicinearr","Object","keys","data","medicine","map","key","_objectSpread","medicine_id","push","vaccinearr","vaccine","vaccine_id","flat","catch","e","Notiflix","message","searchmeds","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","search","wrap","_context","prev","next","items","length","current","style","display","t0","stop","_x","apply","arguments","useEffect","parentArray","id","_jsxs","_Fragment","children","className","width","_jsx","placeholder","value","onChange","target","ref","zIndex","height","role","fontSize","i","cursor","name","onClick","display_name","vaccines_id","type","DownloadTableExcel","filename","sheet","currentTableRef","minHeight","maxHeight","class","item","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","customconfirm","zindex","position","distance","backgroundColor","borderRadius","backOverlay","backOverlayColor","rtl","fontFamily","cssAnimation","cssAnimationDuration","cssAnimationStyle","plainText","titleColor","titleFontSize","titleMaxLength","messageColor","messageFontSize","messageMaxLength","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground"],"sourceRoot":""}